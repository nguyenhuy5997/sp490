/*
 *  CMSIS Pack Debug Access Sequence Log
 *  File        : C:\Users\adminlocal\Desktop\STS\Workspace\SP49\sp490_rep2\AppSkeleton_Sequences_0005.log
 *  Created     : 08:10:05 (21/12/2022)
 *  Device      : SP49_B21
 *  PDSC File   : C:\Users\adminlocal\AppData\Local\Arm\Packs\Infineon\SP49_B2\3.0.4\Infineon.SP49_B2.pdsc
 *
 */

[08:10:05.842]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[08:10:05.842]  
[08:10:05.864]  <debugvars>
[08:10:05.883]    // Pre-defined
[08:10:05.907]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:10:05.934]    __connection=0x00020201    (Connection Type="Debug", Reset Type="System Reset", Pre-Connect HW Reset)
[08:10:05.935]    __dp=0x00000000
[08:10:05.935]    __ap=0x00000000
[08:10:05.936]    __traceout=0x00000000      (Trace Disabled)
[08:10:05.937]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:10:05.937]    __FlashAddr=0x00000000
[08:10:05.938]    __FlashLen=0x00000000
[08:10:05.939]    __FlashArg=0x00000000
[08:10:05.939]    __FlashOp=0x00000000
[08:10:05.940]    __Result=0x00000000
[08:10:05.940]  </debugvars>
[08:10:05.941]  
[08:10:05.942]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[08:10:05.943]    <block atomic="false" info="">
[08:10:05.944]      __var nReset      = 0x80;
[08:10:05.944]        // -> [nReset <= 0x00000080]
[08:10:05.945]      DAP_SWJ_Pins(0x00, nReset, 0);
[08:10:05.947]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:10:05.947]    </block>
[08:10:05.948]    <control if="" while="1" timeout="50000" info="">
[08:10:05.949]      // while "1"  (timeout="50000")
[08:10:05.949]      // while-condition  =>  TRUE
[08:10:05.950]      // while "1"  (timeout="50000")
[08:10:05.951]      // while-condition  =>  TRUE
[08:10:05.951]      // while "1"  (timeout="50000")
[08:10:05.952]      // while-condition  =>  TRUE
[08:10:05.952]      // while "1"  (timeout="50000")
[08:10:05.953]      // while-condition  =>  TRUE
[08:10:05.953]      // while "1"  (timeout="50000")
[08:10:05.954]      // while-condition  =>  TRUE
[08:10:05.954]      // while "1"  (timeout="50000")
[08:10:05.955]      // while-condition  =>  TRUE
[08:10:05.956]      // while "1"  (timeout="50000")
[08:10:05.956]      // while-condition  =>  TRUE
[08:10:05.956]      // while "1"  (timeout="50000")
[08:10:05.957]      // while-condition  =>  TRUE
[08:10:05.958]      // while "1"  (timeout="50000")
[08:10:05.983]      // while-condition  =>  TRUE
[08:10:05.984]      // while "1"  (timeout="50000")
[08:10:06.008]      // while-condition  =>  TRUE
[08:10:06.008]      // while "1"  (timeout="50000")
[08:10:06.009]      // while-condition  =>  TRUE
[08:10:06.033]      // while "1"  (timeout="50000")
[08:10:06.033]      // while  =>  TIMEOUT
[08:10:06.034]      // end while "1"
[08:10:06.034]    </control>
[08:10:06.034]    <block atomic="false" info="">
[08:10:06.035]      DAP_SWJ_Pins(nReset, nReset, 0);
[08:10:06.047]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:10:06.050]    </block>
[08:10:06.050]    <control if="" while="1" timeout="10000" info="">
[08:10:06.051]      // while "1"  (timeout="10000")
[08:10:06.051]      // while-condition  =>  TRUE
[08:10:06.052]      // while "1"  (timeout="10000")
[08:10:06.053]      // while-condition  =>  TRUE
[08:10:06.053]      // while "1"  (timeout="10000")
[08:10:06.054]      // while-condition  =>  TRUE
[08:10:06.055]      // while "1"  (timeout="10000")
[08:10:06.055]      // while-condition  =>  TRUE
[08:10:06.056]      // while "1"  (timeout="10000")
[08:10:06.057]      // while-condition  =>  TRUE
[08:10:06.057]      // while "1"  (timeout="10000")
[08:10:06.058]      // while  =>  TIMEOUT
[08:10:06.058]      // end while "1"
[08:10:06.059]    </control>
[08:10:06.059]    <block atomic="true" info="">
[08:10:06.060]      // ATOMIC SEQUENCE - EXECUTE
[08:10:06.062]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[08:10:06.063]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[08:10:06.063]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[08:10:06.064]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[08:10:06.064]      // ATOMIC SEQUENCE - DONE
[08:10:06.065]    </block>
[08:10:06.065]    <block atomic="false" info="">
[08:10:06.066]      __errorcontrol = 0x00000001;
[08:10:06.066]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[08:10:06.067]      ReadDP(0x0);
[08:10:06.069]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[08:10:06.069]      __errorcontrol = 0x00000000;
[08:10:06.070]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[08:10:06.071]    </block>
[08:10:06.071]  </sequence>
[08:10:06.072]  
[08:10:06.072]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[08:10:06.072]  
[08:10:06.073]  <debugvars>
[08:10:06.073]    // Pre-defined
[08:10:06.074]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:10:06.075]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[08:10:06.076]    __dp=0x00000000
[08:10:06.076]    __ap=0x00000000
[08:10:06.077]    __traceout=0x00000000      (Trace Disabled)
[08:10:06.077]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:10:06.077]    __FlashAddr=0x00000000
[08:10:06.077]    __FlashLen=0x00000000
[08:10:06.078]    __FlashArg=0x00000000
[08:10:06.078]    __FlashOp=0x00000000
[08:10:06.079]    __Result=0x00000000
[08:10:06.079]  </debugvars>
[08:10:06.080]  
[08:10:06.080]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[08:10:06.082]  </sequence>
[08:10:06.082]  
[08:10:08.987]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[08:10:08.987]  
[08:10:08.987]  <debugvars>
[08:10:08.988]    // Pre-defined
[08:10:08.989]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:10:08.989]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[08:10:08.990]    __dp=0x00000000
[08:10:08.990]    __ap=0x00000000
[08:10:08.991]    __traceout=0x00000000      (Trace Disabled)
[08:10:08.991]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:10:08.992]    __FlashAddr=0x00000000
[08:10:08.993]    __FlashLen=0x00000000
[08:10:08.993]    __FlashArg=0x00000000
[08:10:08.994]    __FlashOp=0x00000000
[08:10:08.994]    __Result=0x00000000
[08:10:08.994]  </debugvars>
[08:10:08.994]  
[08:10:08.995]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[08:10:08.996]    <block atomic="false" info="">
[08:10:08.996]      __var nReset      = 0x80;
[08:10:08.996]        // -> [nReset <= 0x00000080]
[08:10:08.997]      DAP_SWJ_Pins(0x00, nReset, 0);
[08:10:08.998]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:10:08.998]    </block>
[08:10:08.998]    <control if="" while="1" timeout="50000" info="">
[08:10:08.998]      // while "1"  (timeout="50000")
[08:10:08.998]      // while-condition  =>  TRUE
[08:10:08.999]      // while "1"  (timeout="50000")
[08:10:08.999]      // while-condition  =>  TRUE
[08:10:08.999]      // while "1"  (timeout="50000")
[08:10:08.999]      // while-condition  =>  TRUE
[08:10:09.000]      // while "1"  (timeout="50000")
[08:10:09.000]      // while-condition  =>  TRUE
[08:10:09.001]      // while "1"  (timeout="50000")
[08:10:09.001]      // while-condition  =>  TRUE
[08:10:09.001]      // while "1"  (timeout="50000")
[08:10:09.001]      // while-condition  =>  TRUE
[08:10:09.002]      // while "1"  (timeout="50000")
[08:10:09.002]      // while-condition  =>  TRUE
[08:10:09.002]      // while "1"  (timeout="50000")
[08:10:09.002]      // while-condition  =>  TRUE
[08:10:09.003]      // while "1"  (timeout="50000")
[08:10:09.003]      // while-condition  =>  TRUE
[08:10:09.003]      // while "1"  (timeout="50000")
[08:10:09.003]      // while-condition  =>  TRUE
[08:10:09.004]      // while "1"  (timeout="50000")
[08:10:09.004]      // while-condition  =>  TRUE
[08:10:09.004]      // while "1"  (timeout="50000")
[08:10:09.004]      // while-condition  =>  TRUE
[08:10:09.004]      // while "1"  (timeout="50000")
[08:10:09.005]      // while-condition  =>  TRUE
[08:10:09.005]      // while "1"  (timeout="50000")
[08:10:09.005]      // while-condition  =>  TRUE
[08:10:09.005]      // while "1"  (timeout="50000")
[08:10:09.005]      // while-condition  =>  TRUE
[08:10:09.005]      // while "1"  (timeout="50000")
[08:10:09.006]      // while-condition  =>  TRUE
[08:10:09.006]      // while "1"  (timeout="50000")
[08:10:09.006]      // while-condition  =>  TRUE
[08:10:09.006]      // while "1"  (timeout="50000")
[08:10:09.007]      // while-condition  =>  TRUE
[08:10:09.007]      // while "1"  (timeout="50000")
[08:10:09.007]      // while-condition  =>  TRUE
[08:10:09.007]      // while "1"  (timeout="50000")
[08:10:09.007]      // while-condition  =>  TRUE
[08:10:09.007]      // while "1"  (timeout="50000")
[08:10:09.008]      // while-condition  =>  TRUE
[08:10:09.008]      // while "1"  (timeout="50000")
[08:10:09.008]      // while-condition  =>  TRUE
[08:10:09.008]      // while "1"  (timeout="50000")
[08:10:09.008]      // while-condition  =>  TRUE
[08:10:09.009]      // while "1"  (timeout="50000")
[08:10:09.009]      // while-condition  =>  TRUE
[08:10:09.009]      // while "1"  (timeout="50000")
[08:10:09.009]      // while-condition  =>  TRUE
[08:10:09.009]      // while "1"  (timeout="50000")
[08:10:09.010]      // while-condition  =>  TRUE
[08:10:09.010]      // while "1"  (timeout="50000")
[08:10:09.010]      // while-condition  =>  TRUE
[08:10:09.010]      // while "1"  (timeout="50000")
[08:10:09.010]      // while-condition  =>  TRUE
[08:10:09.010]      // while "1"  (timeout="50000")
[08:10:09.011]      // while-condition  =>  TRUE
[08:10:09.011]      // while "1"  (timeout="50000")
[08:10:09.011]      // while-condition  =>  TRUE
[08:10:09.011]      // while "1"  (timeout="50000")
[08:10:09.011]      // while-condition  =>  TRUE
[08:10:09.012]      // while "1"  (timeout="50000")
[08:10:09.012]      // while-condition  =>  TRUE
[08:10:09.012]      // while "1"  (timeout="50000")
[08:10:09.012]      // while-condition  =>  TRUE
[08:10:09.012]      // while "1"  (timeout="50000")
[08:10:09.013]      // while-condition  =>  TRUE
[08:10:09.013]      // while "1"  (timeout="50000")
[08:10:09.013]      // while-condition  =>  TRUE
[08:10:09.013]      // while "1"  (timeout="50000")
[08:10:09.013]      // while-condition  =>  TRUE
[08:10:09.014]      // while "1"  (timeout="50000")
[08:10:09.014]      // while-condition  =>  TRUE
[08:10:09.014]      // while "1"  (timeout="50000")
[08:10:09.014]      // while-condition  =>  TRUE
[08:10:09.014]      // while "1"  (timeout="50000")
[08:10:09.015]      // while-condition  =>  TRUE
[08:10:09.015]      // while "1"  (timeout="50000")
[08:10:09.015]      // while-condition  =>  TRUE
[08:10:09.016]      // while "1"  (timeout="50000")
[08:10:09.016]      // while-condition  =>  TRUE
[08:10:09.016]      // while "1"  (timeout="50000")
[08:10:09.016]      // while-condition  =>  TRUE
[08:10:09.016]      // while "1"  (timeout="50000")
[08:10:09.017]      // while-condition  =>  TRUE
[08:10:09.017]      // while "1"  (timeout="50000")
[08:10:09.017]      // while-condition  =>  TRUE
[08:10:09.017]      // while "1"  (timeout="50000")
[08:10:09.018]      // while-condition  =>  TRUE
[08:10:09.018]      // while "1"  (timeout="50000")
[08:10:09.018]      // while-condition  =>  TRUE
[08:10:09.018]      // while "1"  (timeout="50000")
[08:10:09.018]      // while-condition  =>  TRUE
[08:10:09.019]      // while "1"  (timeout="50000")
[08:10:09.019]      // while-condition  =>  TRUE
[08:10:09.019]      // while "1"  (timeout="50000")
[08:10:09.019]      // while-condition  =>  TRUE
[08:10:09.019]      // while "1"  (timeout="50000")
[08:10:09.020]      // while-condition  =>  TRUE
[08:10:09.020]      // while "1"  (timeout="50000")
[08:10:09.020]      // while-condition  =>  TRUE
[08:10:09.020]      // while "1"  (timeout="50000")
[08:10:09.020]      // while-condition  =>  TRUE
[08:10:09.020]      // while "1"  (timeout="50000")
[08:10:09.021]      // while-condition  =>  TRUE
[08:10:09.021]      // while "1"  (timeout="50000")
[08:10:09.021]      // while-condition  =>  TRUE
[08:10:09.021]      // while "1"  (timeout="50000")
[08:10:09.021]      // while-condition  =>  TRUE
[08:10:09.022]      // while "1"  (timeout="50000")
[08:10:09.022]      // while-condition  =>  TRUE
[08:10:09.022]      // while "1"  (timeout="50000")
[08:10:09.022]      // while-condition  =>  TRUE
[08:10:09.022]      // while "1"  (timeout="50000")
[08:10:09.023]      // while-condition  =>  TRUE
[08:10:09.023]      // while "1"  (timeout="50000")
[08:10:09.023]      // while-condition  =>  TRUE
[08:10:09.023]      // while "1"  (timeout="50000")
[08:10:09.023]      // while-condition  =>  TRUE
[08:10:09.024]      // while "1"  (timeout="50000")
[08:10:09.024]      // while-condition  =>  TRUE
[08:10:09.024]      // while "1"  (timeout="50000")
[08:10:09.024]      // while-condition  =>  TRUE
[08:10:09.024]      // while "1"  (timeout="50000")
[08:10:09.025]      // while-condition  =>  TRUE
[08:10:09.025]      // while "1"  (timeout="50000")
[08:10:09.025]      // while-condition  =>  TRUE
[08:10:09.025]      // while "1"  (timeout="50000")
[08:10:09.025]      // while-condition  =>  TRUE
[08:10:09.025]      // while "1"  (timeout="50000")
[08:10:09.026]      // while-condition  =>  TRUE
[08:10:09.026]      // while "1"  (timeout="50000")
[08:10:09.026]      // while-condition  =>  TRUE
[08:10:09.026]      // while "1"  (timeout="50000")
[08:10:09.026]      // while-condition  =>  TRUE
[08:10:09.027]      // while "1"  (timeout="50000")
[08:10:09.027]      // while-condition  =>  TRUE
[08:10:09.027]      // while "1"  (timeout="50000")
[08:10:09.027]      // while-condition  =>  TRUE
[08:10:09.028]      // while "1"  (timeout="50000")
[08:10:09.028]      // while-condition  =>  TRUE
[08:10:09.028]      // while "1"  (timeout="50000")
[08:10:09.028]      // while-condition  =>  TRUE
[08:10:09.028]      // while "1"  (timeout="50000")
[08:10:09.029]      // while-condition  =>  TRUE
[08:10:09.029]      // while "1"  (timeout="50000")
[08:10:09.029]      // while-condition  =>  TRUE
[08:10:09.029]      // while "1"  (timeout="50000")
[08:10:09.029]      // while-condition  =>  TRUE
[08:10:09.029]      // while "1"  (timeout="50000")
[08:10:09.030]      // while-condition  =>  TRUE
[08:10:09.030]      // while "1"  (timeout="50000")
[08:10:09.030]      // while-condition  =>  TRUE
[08:10:09.030]      // while "1"  (timeout="50000")
[08:10:09.030]      // while-condition  =>  TRUE
[08:10:09.031]      // while "1"  (timeout="50000")
[08:10:09.031]      // while-condition  =>  TRUE
[08:10:09.031]      // while "1"  (timeout="50000")
[08:10:09.031]      // while-condition  =>  TRUE
[08:10:09.032]      // while "1"  (timeout="50000")
[08:10:09.032]      // while-condition  =>  TRUE
[08:10:09.032]      // while "1"  (timeout="50000")
[08:10:09.032]      // while-condition  =>  TRUE
[08:10:09.032]      // while "1"  (timeout="50000")
[08:10:09.032]      // while-condition  =>  TRUE
[08:10:09.033]      // while "1"  (timeout="50000")
[08:10:09.033]      // while-condition  =>  TRUE
[08:10:09.033]      // while "1"  (timeout="50000")
[08:10:09.033]      // while-condition  =>  TRUE
[08:10:09.033]      // while "1"  (timeout="50000")
[08:10:09.034]      // while-condition  =>  TRUE
[08:10:09.034]      // while "1"  (timeout="50000")
[08:10:09.034]      // while-condition  =>  TRUE
[08:10:09.034]      // while "1"  (timeout="50000")
[08:10:09.034]      // while-condition  =>  TRUE
[08:10:09.035]      // while "1"  (timeout="50000")
[08:10:09.035]      // while-condition  =>  TRUE
[08:10:09.035]      // while "1"  (timeout="50000")
[08:10:09.035]      // while-condition  =>  TRUE
[08:10:09.035]      // while "1"  (timeout="50000")
[08:10:09.036]      // while-condition  =>  TRUE
[08:10:09.036]      // while "1"  (timeout="50000")
[08:10:09.036]      // while-condition  =>  TRUE
[08:10:09.037]      // while "1"  (timeout="50000")
[08:10:09.037]      // while-condition  =>  TRUE
[08:10:09.037]      // while "1"  (timeout="50000")
[08:10:09.037]      // while-condition  =>  TRUE
[08:10:09.037]      // while "1"  (timeout="50000")
[08:10:09.038]      // while-condition  =>  TRUE
[08:10:09.038]      // while "1"  (timeout="50000")
[08:10:09.038]      // while-condition  =>  TRUE
[08:10:09.038]      // while "1"  (timeout="50000")
[08:10:09.038]      // while-condition  =>  TRUE
[08:10:09.038]      // while "1"  (timeout="50000")
[08:10:09.039]      // while-condition  =>  TRUE
[08:10:09.039]      // while "1"  (timeout="50000")
[08:10:09.039]      // while-condition  =>  TRUE
[08:10:09.039]      // while "1"  (timeout="50000")
[08:10:09.039]      // while-condition  =>  TRUE
[08:10:09.040]      // while "1"  (timeout="50000")
[08:10:09.040]      // while-condition  =>  TRUE
[08:10:09.040]      // while "1"  (timeout="50000")
[08:10:09.040]      // while-condition  =>  TRUE
[08:10:09.040]      // while "1"  (timeout="50000")
[08:10:09.041]      // while-condition  =>  TRUE
[08:10:09.041]      // while "1"  (timeout="50000")
[08:10:09.041]      // while-condition  =>  TRUE
[08:10:09.041]      // while "1"  (timeout="50000")
[08:10:09.041]      // while-condition  =>  TRUE
[08:10:09.041]      // while "1"  (timeout="50000")
[08:10:09.041]      // while-condition  =>  TRUE
[08:10:09.042]      // while "1"  (timeout="50000")
[08:10:09.042]      // while-condition  =>  TRUE
[08:10:09.042]      // while "1"  (timeout="50000")
[08:10:09.042]      // while-condition  =>  TRUE
[08:10:09.042]      // while "1"  (timeout="50000")
[08:10:09.043]      // while-condition  =>  TRUE
[08:10:09.043]      // while "1"  (timeout="50000")
[08:10:09.043]      // while-condition  =>  TRUE
[08:10:09.043]      // while "1"  (timeout="50000")
[08:10:09.044]      // while-condition  =>  TRUE
[08:10:09.044]      // while "1"  (timeout="50000")
[08:10:09.044]      // while-condition  =>  TRUE
[08:10:09.044]      // while "1"  (timeout="50000")
[08:10:09.045]      // while-condition  =>  TRUE
[08:10:09.045]      // while "1"  (timeout="50000")
[08:10:09.045]      // while-condition  =>  TRUE
[08:10:09.045]      // while "1"  (timeout="50000")
[08:10:09.046]      // while-condition  =>  TRUE
[08:10:09.046]      // while "1"  (timeout="50000")
[08:10:09.046]      // while-condition  =>  TRUE
[08:10:09.047]      // while "1"  (timeout="50000")
[08:10:09.047]      // while-condition  =>  TRUE
[08:10:09.047]      // while "1"  (timeout="50000")
[08:10:09.047]      // while-condition  =>  TRUE
[08:10:09.048]      // while "1"  (timeout="50000")
[08:10:09.048]      // while-condition  =>  TRUE
[08:10:09.048]      // while "1"  (timeout="50000")
[08:10:09.048]      // while-condition  =>  TRUE
[08:10:09.049]      // while "1"  (timeout="50000")
[08:10:09.049]      // while-condition  =>  TRUE
[08:10:09.049]      // while "1"  (timeout="50000")
[08:10:09.049]      // while-condition  =>  TRUE
[08:10:09.049]      // while "1"  (timeout="50000")
[08:10:09.049]      // while-condition  =>  TRUE
[08:10:09.049]      // while "1"  (timeout="50000")
[08:10:09.049]      // while-condition  =>  TRUE
[08:10:09.050]      // while "1"  (timeout="50000")
[08:10:09.050]      // while-condition  =>  TRUE
[08:10:09.050]      // while "1"  (timeout="50000")
[08:10:09.050]      // while-condition  =>  TRUE
[08:10:09.050]      // while "1"  (timeout="50000")
[08:10:09.050]      // while-condition  =>  TRUE
[08:10:09.051]      // while "1"  (timeout="50000")
[08:10:09.051]      // while-condition  =>  TRUE
[08:10:09.051]      // while "1"  (timeout="50000")
[08:10:09.051]      // while-condition  =>  TRUE
[08:10:09.051]      // while "1"  (timeout="50000")
[08:10:09.052]      // while-condition  =>  TRUE
[08:10:09.052]      // while "1"  (timeout="50000")
[08:10:09.053]      // while-condition  =>  TRUE
[08:10:09.053]      // while "1"  (timeout="50000")
[08:10:09.053]      // while-condition  =>  TRUE
[08:10:09.053]      // while "1"  (timeout="50000")
[08:10:09.053]      // while-condition  =>  TRUE
[08:10:09.054]      // while "1"  (timeout="50000")
[08:10:09.054]      // while-condition  =>  TRUE
[08:10:09.054]      // while "1"  (timeout="50000")
[08:10:09.054]      // while-condition  =>  TRUE
[08:10:09.054]      // while "1"  (timeout="50000")
[08:10:09.055]      // while-condition  =>  TRUE
[08:10:09.055]      // while "1"  (timeout="50000")
[08:10:09.055]      // while-condition  =>  TRUE
[08:10:09.055]      // while "1"  (timeout="50000")
[08:10:09.055]      // while-condition  =>  TRUE
[08:10:09.056]      // while "1"  (timeout="50000")
[08:10:09.056]      // while-condition  =>  TRUE
[08:10:09.056]      // while "1"  (timeout="50000")
[08:10:09.056]      // while-condition  =>  TRUE
[08:10:09.056]      // while "1"  (timeout="50000")
[08:10:09.056]      // while-condition  =>  TRUE
[08:10:09.056]      // while "1"  (timeout="50000")
[08:10:09.056]      // while-condition  =>  TRUE
[08:10:09.057]      // while "1"  (timeout="50000")
[08:10:09.058]      // while  =>  TIMEOUT
[08:10:09.058]      // end while "1"
[08:10:09.058]    </control>
[08:10:09.058]    <block atomic="false" info="">
[08:10:09.058]      DAP_SWJ_Pins(nReset, nReset, 0);
[08:10:09.070]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:10:09.071]    </block>
[08:10:09.072]    <control if="" while="1" timeout="10000" info="">
[08:10:09.073]      // while "1"  (timeout="10000")
[08:10:09.074]      // while-condition  =>  TRUE
[08:10:09.074]      // while "1"  (timeout="10000")
[08:10:09.075]      // while-condition  =>  TRUE
[08:10:09.076]      // while "1"  (timeout="10000")
[08:10:09.076]      // while-condition  =>  TRUE
[08:10:09.077]      // while "1"  (timeout="10000")
[08:10:09.078]      // while-condition  =>  TRUE
[08:10:09.078]      // while "1"  (timeout="10000")
[08:10:09.079]      // while-condition  =>  TRUE
[08:10:09.079]      // while "1"  (timeout="10000")
[08:10:09.079]      // while-condition  =>  TRUE
[08:10:09.079]      // while "1"  (timeout="10000")
[08:10:09.080]      // while-condition  =>  TRUE
[08:10:09.080]      // while "1"  (timeout="10000")
[08:10:09.080]      // while-condition  =>  TRUE
[08:10:09.081]      // while "1"  (timeout="10000")
[08:10:09.081]      // while-condition  =>  TRUE
[08:10:09.081]      // while "1"  (timeout="10000")
[08:10:09.081]      // while-condition  =>  TRUE
[08:10:09.082]      // while "1"  (timeout="10000")
[08:10:09.082]      // while-condition  =>  TRUE
[08:10:09.082]      // while "1"  (timeout="10000")
[08:10:09.082]      // while-condition  =>  TRUE
[08:10:09.082]      // while "1"  (timeout="10000")
[08:10:09.083]      // while-condition  =>  TRUE
[08:10:09.083]      // while "1"  (timeout="10000")
[08:10:09.083]      // while-condition  =>  TRUE
[08:10:09.083]      // while "1"  (timeout="10000")
[08:10:09.083]      // while-condition  =>  TRUE
[08:10:09.084]      // while "1"  (timeout="10000")
[08:10:09.084]      // while-condition  =>  TRUE
[08:10:09.084]      // while "1"  (timeout="10000")
[08:10:09.084]      // while-condition  =>  TRUE
[08:10:09.084]      // while "1"  (timeout="10000")
[08:10:09.085]      // while-condition  =>  TRUE
[08:10:09.085]      // while "1"  (timeout="10000")
[08:10:09.085]      // while-condition  =>  TRUE
[08:10:09.085]      // while "1"  (timeout="10000")
[08:10:09.085]      // while-condition  =>  TRUE
[08:10:09.086]      // while "1"  (timeout="10000")
[08:10:09.086]      // while-condition  =>  TRUE
[08:10:09.086]      // while "1"  (timeout="10000")
[08:10:09.086]      // while-condition  =>  TRUE
[08:10:09.086]      // while "1"  (timeout="10000")
[08:10:09.087]      // while-condition  =>  TRUE
[08:10:09.087]      // while "1"  (timeout="10000")
[08:10:09.087]      // while-condition  =>  TRUE
[08:10:09.087]      // while "1"  (timeout="10000")
[08:10:09.087]      // while-condition  =>  TRUE
[08:10:09.087]      // while "1"  (timeout="10000")
[08:10:09.087]      // while-condition  =>  TRUE
[08:10:09.087]      // while "1"  (timeout="10000")
[08:10:09.088]      // while-condition  =>  TRUE
[08:10:09.088]      // while "1"  (timeout="10000")
[08:10:09.088]      // while  =>  TIMEOUT
[08:10:09.088]      // end while "1"
[08:10:09.089]    </control>
[08:10:09.089]    <block atomic="true" info="">
[08:10:09.089]      // ATOMIC SEQUENCE - EXECUTE
[08:10:09.090]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[08:10:09.091]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[08:10:09.091]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[08:10:09.091]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[08:10:09.091]      // ATOMIC SEQUENCE - DONE
[08:10:09.091]    </block>
[08:10:09.092]    <block atomic="false" info="">
[08:10:09.092]      __errorcontrol = 0x00000001;
[08:10:09.093]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[08:10:09.093]      ReadDP(0x0);
[08:10:09.094]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[08:10:09.095]      __errorcontrol = 0x00000000;
[08:10:09.095]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[08:10:09.095]    </block>
[08:10:09.096]  </sequence>
[08:10:09.096]  
[08:10:09.097]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[08:10:09.097]  
[08:10:09.097]  <debugvars>
[08:10:09.098]    // Pre-defined
[08:10:09.098]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:10:09.099]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:10:09.100]    __dp=0x00000000
[08:10:09.100]    __ap=0x00000000
[08:10:09.100]    __traceout=0x00000000      (Trace Disabled)
[08:10:09.101]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:10:09.101]    __FlashAddr=0x00000000
[08:10:09.101]    __FlashLen=0x00000000
[08:10:09.101]    __FlashArg=0x00000000
[08:10:09.101]    __FlashOp=0x00000000
[08:10:09.101]    __Result=0x00000000
[08:10:09.102]  </debugvars>
[08:10:09.102]  
[08:10:09.102]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[08:10:09.102]  </sequence>
[08:10:09.103]  
[08:10:09.106]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[08:10:09.106]  
[08:10:09.106]  <debugvars>
[08:10:09.106]    // Pre-defined
[08:10:09.107]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:10:09.107]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:10:09.107]    __dp=0x00000000
[08:10:09.107]    __ap=0x00000000
[08:10:09.108]    __traceout=0x00000000      (Trace Disabled)
[08:10:09.108]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:10:09.108]    __FlashAddr=0x00000000
[08:10:09.109]    __FlashLen=0x00000000
[08:10:09.109]    __FlashArg=0x00000000
[08:10:09.109]    __FlashOp=0x00000000
[08:10:09.110]    __Result=0x00000000
[08:10:09.110]  </debugvars>
[08:10:09.110]  
[08:10:09.110]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[08:10:09.111]    <block atomic="false" info="">
[08:10:09.111]      __var SW_DP_ABORT  = 0x0;
[08:10:09.111]        // -> [SW_DP_ABORT <= 0x00000000]
[08:10:09.112]      __var DP_CTRL_STAT = 0x4;
[08:10:09.112]        // -> [DP_CTRL_STAT <= 0x00000004]
[08:10:09.112]      __var DP_SELECT    = 0x8;
[08:10:09.113]        // -> [DP_SELECT <= 0x00000008]
[08:10:09.113]      __var powered_down = 0;
[08:10:09.113]        // -> [powered_down <= 0x00000000]
[08:10:09.113]      WriteDP(DP_SELECT, 0x00000000);
[08:10:09.115]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:10:09.115]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[08:10:09.117]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[08:10:09.117]        // -> [powered_down <= 0x00000001]
[08:10:09.117]    </block>
[08:10:09.117]    <control if="powered_down" while="" timeout="0" info="">
[08:10:09.117]      // if-block "powered_down"
[08:10:09.118]        // =>  TRUE
[08:10:09.119]      <block atomic="false" info="">
[08:10:09.119]        WriteDP(DP_CTRL_STAT, 0x50000000);
[08:10:09.121]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[08:10:09.121]      </block>
[08:10:09.121]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[08:10:09.122]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[08:10:09.123]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[08:10:09.123]        // while-condition  =>  FALSE
[08:10:09.123]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[08:10:09.124]      </control>
[08:10:09.124]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[08:10:09.125]        // if-block "(__protocol & 0xFFFF) == 1"
[08:10:09.125]          // =>  FALSE
[08:10:09.126]        // skip if-block "(__protocol & 0xFFFF) == 1"
[08:10:09.126]      </control>
[08:10:09.126]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[08:10:09.126]        // if-block "(__protocol & 0xFFFF) == 2"
[08:10:09.127]          // =>  TRUE
[08:10:09.127]        <block atomic="false" info="">
[08:10:09.127]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[08:10:09.129]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[08:10:09.129]          WriteDP(SW_DP_ABORT, 0x0000001E);
[08:10:09.131]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[08:10:09.131]        </block>
[08:10:09.131]        // end if-block "(__protocol & 0xFFFF) == 2"
[08:10:09.132]      </control>
[08:10:09.132]      // end if-block "powered_down"
[08:10:09.132]    </control>
[08:10:09.132]  </sequence>
[08:10:09.132]  
[08:10:09.184]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[08:10:09.184]  
[08:10:09.184]  <debugvars>
[08:10:09.185]    // Pre-defined
[08:10:09.185]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:10:09.186]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:10:09.186]    __dp=0x00000000
[08:10:09.187]    __ap=0x00000000
[08:10:09.187]    __traceout=0x00000000      (Trace Disabled)
[08:10:09.188]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:10:09.188]    __FlashAddr=0x00000000
[08:10:09.188]    __FlashLen=0x00000000
[08:10:09.188]    __FlashArg=0x00000000
[08:10:09.189]    __FlashOp=0x00000000
[08:10:09.189]    __Result=0x00000000
[08:10:09.189]  </debugvars>
[08:10:09.190]  
[08:10:09.190]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[08:10:09.190]    <block atomic="true" info="">
[08:10:09.190]      // ATOMIC SEQUENCE - EXECUTE
[08:10:09.192]      __var DP_R_IDCODE    = 0x0;
[08:10:09.192]        // -> [DP_R_IDCODE <= 0x00000000]
[08:10:09.192]      __var DP_W_ABORT    = 0x0;
[08:10:09.192]        // -> [DP_W_ABORT <= 0x00000000]
[08:10:09.192]      __var DP_CTRLSTAT = 0x4;
[08:10:09.192]        // -> [DP_CTRLSTAT <= 0x00000004]
[08:10:09.193]      __var DP_W_SELECT    = 0x8;
[08:10:09.194]        // -> [DP_W_SELECT <= 0x00000008]
[08:10:09.194]      __var AP_TAR		= 0x4;
[08:10:09.194]        // -> [AP_TAR <= 0x00000004]
[08:10:09.195]      __var AP_BD0		= 0x0;
[08:10:09.195]        // -> [AP_BD0 <= 0x00000000]
[08:10:09.195]      __var AP_BD1		= 0x4;
[08:10:09.195]        // -> [AP_BD1 <= 0x00000004]
[08:10:09.196]      __var AP_BD2		= 0x8;
[08:10:09.196]        // -> [AP_BD2 <= 0x00000008]
[08:10:09.196]      __var PCWithinFlash = 0;
[08:10:09.196]        // -> [PCWithinFlash <= 0x00000000]
[08:10:09.197]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[08:10:09.197]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[08:10:09.197]      // ATOMIC SEQUENCE - DONE
[08:10:09.197]    </block>
[08:10:09.197]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[08:10:09.198]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[08:10:09.201]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[08:10:09.201]      // while-condition  =>  FALSE
[08:10:09.201]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[08:10:09.201]    </control>
[08:10:09.201]    <block atomic="true" info="">
[08:10:09.201]      // ATOMIC SEQUENCE - EXECUTE
[08:10:09.204]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:10:09.204]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:10:09.204]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[08:10:09.204]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[08:10:09.205]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[08:10:09.205]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[08:10:09.205]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[08:10:09.205]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[08:10:09.206]      // ATOMIC SEQUENCE - DONE
[08:10:09.206]    </block>
[08:10:09.206]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[08:10:09.206]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:10:09.208]        // -> [ReadAP(0x00000000) => 0x01030003]   (__dp=0x00000000, __ap=0x00000000)
[08:10:09.208]      // while-condition  =>  FALSE
[08:10:09.208]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[08:10:09.208]    </control>
[08:10:09.209]    <block atomic="false" info="">
[08:10:09.209]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[08:10:09.210]        // -> [ReadAP(0x00000008) => 0x10000820]   (__dp=0x00000000, __ap=0x00000000)
[08:10:09.210]        // -> [PCWithinFlash <= 0x00000001]
[08:10:09.210]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:10:09.212]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:10:09.212]    </block>
[08:10:09.212]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[08:10:09.212]      // if-block "PCWithinFlash == 0"
[08:10:09.213]        // =>  FALSE
[08:10:09.213]      // skip if-block "PCWithinFlash == 0"
[08:10:09.213]    </control>
[08:10:09.213]  </sequence>
[08:10:09.214]  
[08:10:09.237]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[08:10:09.237]  
[08:10:09.238]  <debugvars>
[08:10:09.238]    // Pre-defined
[08:10:09.238]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:10:09.239]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:10:09.239]    __dp=0x00000000
[08:10:09.239]    __ap=0x00000000
[08:10:09.240]    __traceout=0x00000000      (Trace Disabled)
[08:10:09.240]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:10:09.240]    __FlashAddr=0x00000000
[08:10:09.240]    __FlashLen=0x00000000
[08:10:09.241]    __FlashArg=0x00000000
[08:10:09.241]    __FlashOp=0x00000000
[08:10:09.241]    __Result=0x00000000
[08:10:09.242]  </debugvars>
[08:10:09.242]  
[08:10:09.242]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[08:10:09.242]    <block atomic="false" info="">
[08:10:09.243]    </block>
[08:10:09.243]  </sequence>
[08:10:09.243]  
[08:10:09.245]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[08:10:09.245]  
[08:10:09.245]  <debugvars>
[08:10:09.245]    // Pre-defined
[08:10:09.246]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:10:09.246]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:10:09.246]    __dp=0x00000000
[08:10:09.246]    __ap=0x00000000
[08:10:09.247]    __traceout=0x00000000      (Trace Disabled)
[08:10:09.247]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:10:09.247]    __FlashAddr=0x00000000
[08:10:09.247]    __FlashLen=0x00000000
[08:10:09.248]    __FlashArg=0x00000000
[08:10:09.248]    __FlashOp=0x00000000
[08:10:09.248]    __Result=0x00000000
[08:10:09.248]  </debugvars>
[08:10:09.248]  
[08:10:09.249]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[08:10:09.249]    <block atomic="false" info="">
[08:10:09.249]      __var nReset      = 0x80;
[08:10:09.249]        // -> [nReset <= 0x00000080]
[08:10:09.250]      DAP_SWJ_Pins(0x00, nReset, 0);
[08:10:09.250]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:10:09.251]    </block>
[08:10:09.251]    <control if="" while="1" timeout="50000" info="">
[08:10:09.251]      // while "1"  (timeout="50000")
[08:10:09.252]      // while-condition  =>  TRUE
[08:10:09.252]      // while "1"  (timeout="50000")
[08:10:09.252]      // while-condition  =>  TRUE
[08:10:09.252]      // while "1"  (timeout="50000")
[08:10:09.252]      // while-condition  =>  TRUE
[08:10:09.252]      // while "1"  (timeout="50000")
[08:10:09.252]      // while-condition  =>  TRUE
[08:10:09.252]      // while "1"  (timeout="50000")
[08:10:09.252]      // while-condition  =>  TRUE
[08:10:09.253]      // while "1"  (timeout="50000")
[08:10:09.253]      // while-condition  =>  TRUE
[08:10:09.253]      // while "1"  (timeout="50000")
[08:10:09.253]      // while-condition  =>  TRUE
[08:10:09.253]      // while "1"  (timeout="50000")
[08:10:09.254]      // while-condition  =>  TRUE
[08:10:09.255]      // while "1"  (timeout="50000")
[08:10:09.255]      // while-condition  =>  TRUE
[08:10:09.255]      // while "1"  (timeout="50000")
[08:10:09.255]      // while-condition  =>  TRUE
[08:10:09.255]      // while "1"  (timeout="50000")
[08:10:09.255]      // while-condition  =>  TRUE
[08:10:09.256]      // while "1"  (timeout="50000")
[08:10:09.256]      // while-condition  =>  TRUE
[08:10:09.256]      // while "1"  (timeout="50000")
[08:10:09.256]      // while-condition  =>  TRUE
[08:10:09.256]      // while "1"  (timeout="50000")
[08:10:09.257]      // while-condition  =>  TRUE
[08:10:09.257]      // while "1"  (timeout="50000")
[08:10:09.257]      // while-condition  =>  TRUE
[08:10:09.257]      // while "1"  (timeout="50000")
[08:10:09.257]      // while-condition  =>  TRUE
[08:10:09.258]      // while "1"  (timeout="50000")
[08:10:09.258]      // while-condition  =>  TRUE
[08:10:09.258]      // while "1"  (timeout="50000")
[08:10:09.258]      // while-condition  =>  TRUE
[08:10:09.258]      // while "1"  (timeout="50000")
[08:10:09.259]      // while-condition  =>  TRUE
[08:10:09.259]      // while "1"  (timeout="50000")
[08:10:09.259]      // while-condition  =>  TRUE
[08:10:09.260]      // while "1"  (timeout="50000")
[08:10:09.260]      // while-condition  =>  TRUE
[08:10:09.260]      // while "1"  (timeout="50000")
[08:10:09.261]      // while-condition  =>  TRUE
[08:10:09.261]      // while "1"  (timeout="50000")
[08:10:09.261]      // while-condition  =>  TRUE
[08:10:09.261]      // while "1"  (timeout="50000")
[08:10:09.262]      // while-condition  =>  TRUE
[08:10:09.262]      // while "1"  (timeout="50000")
[08:10:09.262]      // while-condition  =>  TRUE
[08:10:09.262]      // while "1"  (timeout="50000")
[08:10:09.262]      // while-condition  =>  TRUE
[08:10:09.263]      // while "1"  (timeout="50000")
[08:10:09.263]      // while-condition  =>  TRUE
[08:10:09.263]      // while "1"  (timeout="50000")
[08:10:09.263]      // while-condition  =>  TRUE
[08:10:09.263]      // while "1"  (timeout="50000")
[08:10:09.264]      // while-condition  =>  TRUE
[08:10:09.264]      // while "1"  (timeout="50000")
[08:10:09.264]      // while-condition  =>  TRUE
[08:10:09.264]      // while "1"  (timeout="50000")
[08:10:09.264]      // while-condition  =>  TRUE
[08:10:09.265]      // while "1"  (timeout="50000")
[08:10:09.265]      // while-condition  =>  TRUE
[08:10:09.265]      // while "1"  (timeout="50000")
[08:10:09.265]      // while-condition  =>  TRUE
[08:10:09.265]      // while "1"  (timeout="50000")
[08:10:09.266]      // while-condition  =>  TRUE
[08:10:09.266]      // while "1"  (timeout="50000")
[08:10:09.266]      // while-condition  =>  TRUE
[08:10:09.266]      // while "1"  (timeout="50000")
[08:10:09.267]      // while-condition  =>  TRUE
[08:10:09.267]      // while "1"  (timeout="50000")
[08:10:09.267]      // while-condition  =>  TRUE
[08:10:09.267]      // while "1"  (timeout="50000")
[08:10:09.267]      // while-condition  =>  TRUE
[08:10:09.268]      // while "1"  (timeout="50000")
[08:10:09.268]      // while-condition  =>  TRUE
[08:10:09.268]      // while "1"  (timeout="50000")
[08:10:09.268]      // while-condition  =>  TRUE
[08:10:09.269]      // while "1"  (timeout="50000")
[08:10:09.269]      // while-condition  =>  TRUE
[08:10:09.269]      // while "1"  (timeout="50000")
[08:10:09.269]      // while-condition  =>  TRUE
[08:10:09.269]      // while "1"  (timeout="50000")
[08:10:09.270]      // while-condition  =>  TRUE
[08:10:09.270]      // while "1"  (timeout="50000")
[08:10:09.270]      // while-condition  =>  TRUE
[08:10:09.270]      // while "1"  (timeout="50000")
[08:10:09.270]      // while-condition  =>  TRUE
[08:10:09.271]      // while "1"  (timeout="50000")
[08:10:09.271]      // while-condition  =>  TRUE
[08:10:09.271]      // while "1"  (timeout="50000")
[08:10:09.271]      // while-condition  =>  TRUE
[08:10:09.271]      // while "1"  (timeout="50000")
[08:10:09.272]      // while-condition  =>  TRUE
[08:10:09.272]      // while "1"  (timeout="50000")
[08:10:09.272]      // while-condition  =>  TRUE
[08:10:09.272]      // while "1"  (timeout="50000")
[08:10:09.273]      // while-condition  =>  TRUE
[08:10:09.273]      // while "1"  (timeout="50000")
[08:10:09.273]      // while-condition  =>  TRUE
[08:10:09.273]      // while "1"  (timeout="50000")
[08:10:09.274]      // while-condition  =>  TRUE
[08:10:09.274]      // while "1"  (timeout="50000")
[08:10:09.274]      // while-condition  =>  TRUE
[08:10:09.274]      // while "1"  (timeout="50000")
[08:10:09.274]      // while-condition  =>  TRUE
[08:10:09.275]      // while "1"  (timeout="50000")
[08:10:09.275]      // while-condition  =>  TRUE
[08:10:09.275]      // while "1"  (timeout="50000")
[08:10:09.275]      // while-condition  =>  TRUE
[08:10:09.276]      // while "1"  (timeout="50000")
[08:10:09.276]      // while-condition  =>  TRUE
[08:10:09.276]      // while "1"  (timeout="50000")
[08:10:09.276]      // while-condition  =>  TRUE
[08:10:09.276]      // while "1"  (timeout="50000")
[08:10:09.277]      // while-condition  =>  TRUE
[08:10:09.277]      // while "1"  (timeout="50000")
[08:10:09.277]      // while-condition  =>  TRUE
[08:10:09.277]      // while "1"  (timeout="50000")
[08:10:09.278]      // while-condition  =>  TRUE
[08:10:09.278]      // while "1"  (timeout="50000")
[08:10:09.279]      // while-condition  =>  TRUE
[08:10:09.279]      // while "1"  (timeout="50000")
[08:10:09.280]      // while-condition  =>  TRUE
[08:10:09.280]      // while "1"  (timeout="50000")
[08:10:09.280]      // while-condition  =>  TRUE
[08:10:09.280]      // while "1"  (timeout="50000")
[08:10:09.281]      // while-condition  =>  TRUE
[08:10:09.281]      // while "1"  (timeout="50000")
[08:10:09.281]      // while-condition  =>  TRUE
[08:10:09.282]      // while "1"  (timeout="50000")
[08:10:09.282]      // while-condition  =>  TRUE
[08:10:09.282]      // while "1"  (timeout="50000")
[08:10:09.282]      // while-condition  =>  TRUE
[08:10:09.283]      // while "1"  (timeout="50000")
[08:10:09.283]      // while-condition  =>  TRUE
[08:10:09.283]      // while "1"  (timeout="50000")
[08:10:09.283]      // while-condition  =>  TRUE
[08:10:09.284]      // while "1"  (timeout="50000")
[08:10:09.284]      // while-condition  =>  TRUE
[08:10:09.284]      // while "1"  (timeout="50000")
[08:10:09.284]      // while-condition  =>  TRUE
[08:10:09.284]      // while "1"  (timeout="50000")
[08:10:09.285]      // while-condition  =>  TRUE
[08:10:09.285]      // while "1"  (timeout="50000")
[08:10:09.285]      // while-condition  =>  TRUE
[08:10:09.285]      // while "1"  (timeout="50000")
[08:10:09.286]      // while-condition  =>  TRUE
[08:10:09.286]      // while "1"  (timeout="50000")
[08:10:09.286]      // while-condition  =>  TRUE
[08:10:09.286]      // while "1"  (timeout="50000")
[08:10:09.287]      // while-condition  =>  TRUE
[08:10:09.287]      // while "1"  (timeout="50000")
[08:10:09.287]      // while-condition  =>  TRUE
[08:10:09.287]      // while "1"  (timeout="50000")
[08:10:09.287]      // while-condition  =>  TRUE
[08:10:09.288]      // while "1"  (timeout="50000")
[08:10:09.288]      // while-condition  =>  TRUE
[08:10:09.288]      // while "1"  (timeout="50000")
[08:10:09.288]      // while-condition  =>  TRUE
[08:10:09.289]      // while "1"  (timeout="50000")
[08:10:09.289]      // while-condition  =>  TRUE
[08:10:09.289]      // while "1"  (timeout="50000")
[08:10:09.289]      // while-condition  =>  TRUE
[08:10:09.290]      // while "1"  (timeout="50000")
[08:10:09.290]      // while-condition  =>  TRUE
[08:10:09.290]      // while "1"  (timeout="50000")
[08:10:09.290]      // while-condition  =>  TRUE
[08:10:09.291]      // while "1"  (timeout="50000")
[08:10:09.291]      // while-condition  =>  TRUE
[08:10:09.291]      // while "1"  (timeout="50000")
[08:10:09.291]      // while-condition  =>  TRUE
[08:10:09.292]      // while "1"  (timeout="50000")
[08:10:09.292]      // while-condition  =>  TRUE
[08:10:09.292]      // while "1"  (timeout="50000")
[08:10:09.292]      // while-condition  =>  TRUE
[08:10:09.293]      // while "1"  (timeout="50000")
[08:10:09.293]      // while-condition  =>  TRUE
[08:10:09.293]      // while "1"  (timeout="50000")
[08:10:09.293]      // while-condition  =>  TRUE
[08:10:09.293]      // while "1"  (timeout="50000")
[08:10:09.294]      // while-condition  =>  TRUE
[08:10:09.294]      // while "1"  (timeout="50000")
[08:10:09.294]      // while-condition  =>  TRUE
[08:10:09.294]      // while "1"  (timeout="50000")
[08:10:09.295]      // while-condition  =>  TRUE
[08:10:09.295]      // while "1"  (timeout="50000")
[08:10:09.295]      // while-condition  =>  TRUE
[08:10:09.295]      // while "1"  (timeout="50000")
[08:10:09.295]      // while-condition  =>  TRUE
[08:10:09.296]      // while "1"  (timeout="50000")
[08:10:09.296]      // while-condition  =>  TRUE
[08:10:09.296]      // while "1"  (timeout="50000")
[08:10:09.296]      // while-condition  =>  TRUE
[08:10:09.296]      // while "1"  (timeout="50000")
[08:10:09.297]      // while-condition  =>  TRUE
[08:10:09.297]      // while "1"  (timeout="50000")
[08:10:09.297]      // while-condition  =>  TRUE
[08:10:09.297]      // while "1"  (timeout="50000")
[08:10:09.298]      // while-condition  =>  TRUE
[08:10:09.298]      // while "1"  (timeout="50000")
[08:10:09.298]      // while-condition  =>  TRUE
[08:10:09.298]      // while "1"  (timeout="50000")
[08:10:09.298]      // while-condition  =>  TRUE
[08:10:09.299]      // while "1"  (timeout="50000")
[08:10:09.299]      // while-condition  =>  TRUE
[08:10:09.299]      // while "1"  (timeout="50000")
[08:10:09.299]      // while-condition  =>  TRUE
[08:10:09.299]      // while "1"  (timeout="50000")
[08:10:09.300]      // while-condition  =>  TRUE
[08:10:09.300]      // while "1"  (timeout="50000")
[08:10:09.300]      // while-condition  =>  TRUE
[08:10:09.300]      // while "1"  (timeout="50000")
[08:10:09.300]      // while-condition  =>  TRUE
[08:10:09.301]      // while "1"  (timeout="50000")
[08:10:09.301]      // while-condition  =>  TRUE
[08:10:09.301]      // while "1"  (timeout="50000")
[08:10:09.301]      // while-condition  =>  TRUE
[08:10:09.301]      // while "1"  (timeout="50000")
[08:10:09.302]      // while-condition  =>  TRUE
[08:10:09.302]      // while "1"  (timeout="50000")
[08:10:09.302]      // while-condition  =>  TRUE
[08:10:09.302]      // while "1"  (timeout="50000")
[08:10:09.302]      // while-condition  =>  TRUE
[08:10:09.303]      // while "1"  (timeout="50000")
[08:10:09.303]      // while-condition  =>  TRUE
[08:10:09.303]      // while "1"  (timeout="50000")
[08:10:09.303]      // while-condition  =>  TRUE
[08:10:09.303]      // while "1"  (timeout="50000")
[08:10:09.303]      // while-condition  =>  TRUE
[08:10:09.304]      // while "1"  (timeout="50000")
[08:10:09.304]      // while-condition  =>  TRUE
[08:10:09.304]      // while "1"  (timeout="50000")
[08:10:09.304]      // while-condition  =>  TRUE
[08:10:09.304]      // while "1"  (timeout="50000")
[08:10:09.305]      // while-condition  =>  TRUE
[08:10:09.305]      // while "1"  (timeout="50000")
[08:10:09.305]      // while-condition  =>  TRUE
[08:10:09.305]      // while "1"  (timeout="50000")
[08:10:09.306]      // while-condition  =>  TRUE
[08:10:09.306]      // while "1"  (timeout="50000")
[08:10:09.306]      // while-condition  =>  TRUE
[08:10:09.306]      // while "1"  (timeout="50000")
[08:10:09.306]      // while-condition  =>  TRUE
[08:10:09.307]      // while "1"  (timeout="50000")
[08:10:09.307]      // while  =>  TIMEOUT
[08:10:09.307]      // end while "1"
[08:10:09.307]    </control>
[08:10:09.307]    <block atomic="false" info="">
[08:10:09.308]      DAP_SWJ_Pins(nReset, nReset, 0);
[08:10:09.319]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:10:09.327]    </block>
[08:10:09.328]    <control if="" while="1" timeout="10000" info="">
[08:10:09.329]      // while "1"  (timeout="10000")
[08:10:09.329]      // while-condition  =>  TRUE
[08:10:09.329]      // while "1"  (timeout="10000")
[08:10:09.329]      // while-condition  =>  TRUE
[08:10:09.331]      // while "1"  (timeout="10000")
[08:10:09.332]      // while-condition  =>  TRUE
[08:10:09.332]      // while "1"  (timeout="10000")
[08:10:09.333]      // while-condition  =>  TRUE
[08:10:09.333]      // while "1"  (timeout="10000")
[08:10:09.334]      // while-condition  =>  TRUE
[08:10:09.334]      // while "1"  (timeout="10000")
[08:10:09.335]      // while-condition  =>  TRUE
[08:10:09.335]      // while "1"  (timeout="10000")
[08:10:09.336]      // while-condition  =>  TRUE
[08:10:09.337]      // while "1"  (timeout="10000")
[08:10:09.337]      // while-condition  =>  TRUE
[08:10:09.338]      // while "1"  (timeout="10000")
[08:10:09.338]      // while  =>  TIMEOUT
[08:10:09.339]      // end while "1"
[08:10:09.339]    </control>
[08:10:09.340]    <block atomic="true" info="">
[08:10:09.340]      // ATOMIC SEQUENCE - EXECUTE
[08:10:09.342]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[08:10:09.342]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[08:10:09.343]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[08:10:09.343]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[08:10:09.344]      // ATOMIC SEQUENCE - DONE
[08:10:09.344]    </block>
[08:10:09.345]    <block atomic="false" info="">
[08:10:09.346]      __errorcontrol = 0x00000001;
[08:10:09.346]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[08:10:09.346]      ReadDP(0x0);
[08:10:09.348]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[08:10:09.348]      __errorcontrol = 0x00000000;
[08:10:09.349]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[08:10:09.349]    </block>
[08:10:09.350]  </sequence>
[08:10:09.350]  
[08:10:09.355]  **********  Sequence "DebugPortStart"  (Context="Reset", Pname="", info="")
[08:10:09.355]  
[08:10:09.355]  <debugvars>
[08:10:09.356]    // Pre-defined
[08:10:09.356]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:10:09.356]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:10:09.357]    __dp=0x00000000
[08:10:09.357]    __ap=0x00000000
[08:10:09.357]    __traceout=0x00000000      (Trace Disabled)
[08:10:09.357]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:10:09.358]    __FlashAddr=0x00000000
[08:10:09.358]    __FlashLen=0x00000000
[08:10:09.358]    __FlashArg=0x00000000
[08:10:09.359]    __FlashOp=0x00000000
[08:10:09.359]    __Result=0x00000000
[08:10:09.359]  </debugvars>
[08:10:09.360]  
[08:10:09.360]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[08:10:09.360]    <block atomic="false" info="">
[08:10:09.360]      __var SW_DP_ABORT  = 0x0;
[08:10:09.361]        // -> [SW_DP_ABORT <= 0x00000000]
[08:10:09.361]      __var DP_CTRL_STAT = 0x4;
[08:10:09.361]        // -> [DP_CTRL_STAT <= 0x00000004]
[08:10:09.362]      __var DP_SELECT    = 0x8;
[08:10:09.362]        // -> [DP_SELECT <= 0x00000008]
[08:10:09.362]      __var powered_down = 0;
[08:10:09.363]        // -> [powered_down <= 0x00000000]
[08:10:09.363]      WriteDP(DP_SELECT, 0x00000000);
[08:10:09.364]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:10:09.364]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[08:10:09.365]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[08:10:09.365]        // -> [powered_down <= 0x00000001]
[08:10:09.365]    </block>
[08:10:09.365]    <control if="powered_down" while="" timeout="0" info="">
[08:10:09.365]      // if-block "powered_down"
[08:10:09.365]        // =>  TRUE
[08:10:09.366]      <block atomic="false" info="">
[08:10:09.366]        WriteDP(DP_CTRL_STAT, 0x50000000);
[08:10:09.368]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[08:10:09.368]      </block>
[08:10:09.368]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[08:10:09.368]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[08:10:09.371]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[08:10:09.371]        // while-condition  =>  FALSE
[08:10:09.371]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[08:10:09.372]      </control>
[08:10:09.372]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[08:10:09.372]        // if-block "(__protocol & 0xFFFF) == 1"
[08:10:09.372]          // =>  FALSE
[08:10:09.372]        // skip if-block "(__protocol & 0xFFFF) == 1"
[08:10:09.373]      </control>
[08:10:09.373]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[08:10:09.373]        // if-block "(__protocol & 0xFFFF) == 2"
[08:10:09.373]          // =>  TRUE
[08:10:09.374]        <block atomic="false" info="">
[08:10:09.374]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[08:10:09.376]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[08:10:09.376]          WriteDP(SW_DP_ABORT, 0x0000001E);
[08:10:09.378]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[08:10:09.378]        </block>
[08:10:09.378]        // end if-block "(__protocol & 0xFFFF) == 2"
[08:10:09.379]      </control>
[08:10:09.379]      // end if-block "powered_down"
[08:10:09.379]    </control>
[08:10:09.380]  </sequence>
[08:10:09.380]  
[08:10:09.385]  **********  Sequence "DebugCoreStart"  (Context="Reset", Pname="", info="")
[08:10:09.385]  
[08:10:09.385]  <debugvars>
[08:10:09.385]    // Pre-defined
[08:10:09.386]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:10:09.386]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:10:09.386]    __dp=0x00000000
[08:10:09.387]    __ap=0x00000000
[08:10:09.387]    __traceout=0x00000000      (Trace Disabled)
[08:10:09.387]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:10:09.388]    __FlashAddr=0x00000000
[08:10:09.388]    __FlashLen=0x00000000
[08:10:09.388]    __FlashArg=0x00000000
[08:10:09.389]    __FlashOp=0x00000000
[08:10:09.389]    __Result=0x00000000
[08:10:09.389]  </debugvars>
[08:10:09.389]  
[08:10:09.390]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[08:10:09.390]    <block atomic="true" info="">
[08:10:09.390]      // ATOMIC SEQUENCE - EXECUTE
[08:10:09.392]      __var DP_R_IDCODE    = 0x0;
[08:10:09.392]        // -> [DP_R_IDCODE <= 0x00000000]
[08:10:09.392]      __var DP_W_ABORT    = 0x0;
[08:10:09.393]        // -> [DP_W_ABORT <= 0x00000000]
[08:10:09.393]      __var DP_CTRLSTAT = 0x4;
[08:10:09.393]        // -> [DP_CTRLSTAT <= 0x00000004]
[08:10:09.394]      __var DP_W_SELECT    = 0x8;
[08:10:09.394]        // -> [DP_W_SELECT <= 0x00000008]
[08:10:09.394]      __var AP_TAR		= 0x4;
[08:10:09.394]        // -> [AP_TAR <= 0x00000004]
[08:10:09.395]      __var AP_BD0		= 0x0;
[08:10:09.395]        // -> [AP_BD0 <= 0x00000000]
[08:10:09.395]      __var AP_BD1		= 0x4;
[08:10:09.396]        // -> [AP_BD1 <= 0x00000004]
[08:10:09.396]      __var AP_BD2		= 0x8;
[08:10:09.396]        // -> [AP_BD2 <= 0x00000008]
[08:10:09.396]      __var PCWithinFlash = 0;
[08:10:09.397]        // -> [PCWithinFlash <= 0x00000000]
[08:10:09.397]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[08:10:09.397]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[08:10:09.397]      // ATOMIC SEQUENCE - DONE
[08:10:09.398]    </block>
[08:10:09.398]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[08:10:09.398]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[08:10:09.402]        // -> [Read32(0xE000EDF0) => 0x01030003]   (__dp=0x00000000, __ap=0x00000000)
[08:10:09.402]      // while-condition  =>  FALSE
[08:10:09.402]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[08:10:09.403]    </control>
[08:10:09.403]    <block atomic="true" info="">
[08:10:09.403]      // ATOMIC SEQUENCE - EXECUTE
[08:10:09.406]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:10:09.406]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:10:09.406]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[08:10:09.407]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[08:10:09.407]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[08:10:09.407]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[08:10:09.408]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[08:10:09.408]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[08:10:09.408]      // ATOMIC SEQUENCE - DONE
[08:10:09.408]    </block>
[08:10:09.409]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[08:10:09.409]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:10:09.411]        // -> [ReadAP(0x00000000) => 0x01030003]   (__dp=0x00000000, __ap=0x00000000)
[08:10:09.411]      // while-condition  =>  FALSE
[08:10:09.411]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[08:10:09.412]    </control>
[08:10:09.412]    <block atomic="false" info="">
[08:10:09.412]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[08:10:09.414]        // -> [ReadAP(0x00000008) => 0x10000820]   (__dp=0x00000000, __ap=0x00000000)
[08:10:09.414]        // -> [PCWithinFlash <= 0x00000001]
[08:10:09.414]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:10:09.416]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:10:09.416]    </block>
[08:10:09.416]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[08:10:09.417]      // if-block "PCWithinFlash == 0"
[08:10:09.417]        // =>  FALSE
[08:10:09.417]      // skip if-block "PCWithinFlash == 0"
[08:10:09.418]    </control>
[08:10:09.418]  </sequence>
[08:10:09.418]  
[08:10:09.438]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[08:10:09.438]  
[08:10:09.439]  <debugvars>
[08:10:09.439]    // Pre-defined
[08:10:09.440]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:10:09.440]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:10:09.441]    __dp=0x00000000
[08:10:09.442]    __ap=0x00000000
[08:10:09.442]    __traceout=0x00000000      (Trace Disabled)
[08:10:09.443]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:10:09.443]    __FlashAddr=0x00000000
[08:10:09.444]    __FlashLen=0x00000000
[08:10:09.444]    __FlashArg=0x00000000
[08:10:09.445]    __FlashOp=0x00000000
[08:10:09.446]    __Result=0x00000000
[08:10:09.446]  </debugvars>
[08:10:09.446]  
[08:10:09.447]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[08:10:09.448]    <block atomic="false" info="">
[08:10:09.448]    </block>
[08:10:09.449]  </sequence>
[08:10:09.449]  
[08:10:09.661]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[08:10:09.661]  
[08:10:09.662]  <debugvars>
[08:10:09.662]    // Pre-defined
[08:10:09.662]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:10:09.663]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:10:09.663]    __dp=0x00000000
[08:10:09.663]    __ap=0x00000000
[08:10:09.663]    __traceout=0x00000000      (Trace Disabled)
[08:10:09.664]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:10:09.664]    __FlashAddr=0x00000000
[08:10:09.664]    __FlashLen=0x00000000
[08:10:09.665]    __FlashArg=0x00000000
[08:10:09.665]    __FlashOp=0x00000000
[08:10:09.665]    __Result=0x00000000
[08:10:09.666]  </debugvars>
[08:10:09.666]  
[08:10:09.666]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[08:10:09.667]    <block atomic="false" info="">
[08:10:09.667]      Sequence("ResetHardware");
[08:10:09.667]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[08:10:09.667]          <block atomic="false" info="">
[08:10:09.668]            __var nReset      = 0x80;
[08:10:09.668]              // -> [nReset <= 0x00000080]
[08:10:09.668]            DAP_SWJ_Pins(0x00, nReset, 0);
[08:10:09.670]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:10:09.670]          </block>
[08:10:09.670]          <control if="" while="1" timeout="50000" info="">
[08:10:09.671]            // while "1"  (timeout="50000")
[08:10:09.671]            // while-condition  =>  TRUE
[08:10:09.671]            // while "1"  (timeout="50000")
[08:10:09.671]            // while-condition  =>  TRUE
[08:10:09.672]            // while "1"  (timeout="50000")
[08:10:09.672]            // while-condition  =>  TRUE
[08:10:09.672]            // while "1"  (timeout="50000")
[08:10:09.672]            // while-condition  =>  TRUE
[08:10:09.672]            // while "1"  (timeout="50000")
[08:10:09.673]            // while-condition  =>  TRUE
[08:10:09.673]            // while "1"  (timeout="50000")
[08:10:09.673]            // while-condition  =>  TRUE
[08:10:09.674]            // while "1"  (timeout="50000")
[08:10:09.674]            // while-condition  =>  TRUE
[08:10:09.674]            // while "1"  (timeout="50000")
[08:10:09.674]            // while-condition  =>  TRUE
[08:10:09.674]            // while "1"  (timeout="50000")
[08:10:09.675]            // while-condition  =>  TRUE
[08:10:09.675]            // while "1"  (timeout="50000")
[08:10:09.675]            // while-condition  =>  TRUE
[08:10:09.675]            // while "1"  (timeout="50000")
[08:10:09.676]            // while-condition  =>  TRUE
[08:10:09.676]            // while "1"  (timeout="50000")
[08:10:09.676]            // while-condition  =>  TRUE
[08:10:09.676]            // while "1"  (timeout="50000")
[08:10:09.676]            // while-condition  =>  TRUE
[08:10:09.677]            // while "1"  (timeout="50000")
[08:10:09.677]            // while-condition  =>  TRUE
[08:10:09.677]            // while "1"  (timeout="50000")
[08:10:09.677]            // while-condition  =>  TRUE
[08:10:09.677]            // while "1"  (timeout="50000")
[08:10:09.677]            // while-condition  =>  TRUE
[08:10:09.678]            // while "1"  (timeout="50000")
[08:10:09.678]            // while-condition  =>  TRUE
[08:10:09.678]            // while "1"  (timeout="50000")
[08:10:09.678]            // while-condition  =>  TRUE
[08:10:09.678]            // while "1"  (timeout="50000")
[08:10:09.678]            // while-condition  =>  TRUE
[08:10:09.679]            // while "1"  (timeout="50000")
[08:10:09.679]            // while-condition  =>  TRUE
[08:10:09.679]            // while "1"  (timeout="50000")
[08:10:09.679]            // while-condition  =>  TRUE
[08:10:09.679]            // while "1"  (timeout="50000")
[08:10:09.680]            // while-condition  =>  TRUE
[08:10:09.680]            // while "1"  (timeout="50000")
[08:10:09.680]            // while-condition  =>  TRUE
[08:10:09.680]            // while "1"  (timeout="50000")
[08:10:09.681]            // while-condition  =>  TRUE
[08:10:09.681]            // while "1"  (timeout="50000")
[08:10:09.681]            // while-condition  =>  TRUE
[08:10:09.681]            // while "1"  (timeout="50000")
[08:10:09.681]            // while-condition  =>  TRUE
[08:10:09.681]            // while "1"  (timeout="50000")
[08:10:09.682]            // while-condition  =>  TRUE
[08:10:09.682]            // while "1"  (timeout="50000")
[08:10:09.682]            // while-condition  =>  TRUE
[08:10:09.682]            // while "1"  (timeout="50000")
[08:10:09.682]            // while-condition  =>  TRUE
[08:10:09.683]            // while "1"  (timeout="50000")
[08:10:09.683]            // while-condition  =>  TRUE
[08:10:09.683]            // while "1"  (timeout="50000")
[08:10:09.683]            // while-condition  =>  TRUE
[08:10:09.683]            // while "1"  (timeout="50000")
[08:10:09.684]            // while-condition  =>  TRUE
[08:10:09.684]            // while "1"  (timeout="50000")
[08:10:09.684]            // while-condition  =>  TRUE
[08:10:09.684]            // while "1"  (timeout="50000")
[08:10:09.684]            // while-condition  =>  TRUE
[08:10:09.684]            // while "1"  (timeout="50000")
[08:10:09.685]            // while-condition  =>  TRUE
[08:10:09.685]            // while "1"  (timeout="50000")
[08:10:09.685]            // while-condition  =>  TRUE
[08:10:09.685]            // while "1"  (timeout="50000")
[08:10:09.685]            // while-condition  =>  TRUE
[08:10:09.686]            // while "1"  (timeout="50000")
[08:10:09.686]            // while-condition  =>  TRUE
[08:10:09.686]            // while "1"  (timeout="50000")
[08:10:09.686]            // while-condition  =>  TRUE
[08:10:09.686]            // while "1"  (timeout="50000")
[08:10:09.687]            // while-condition  =>  TRUE
[08:10:09.687]            // while "1"  (timeout="50000")
[08:10:09.687]            // while-condition  =>  TRUE
[08:10:09.687]            // while "1"  (timeout="50000")
[08:10:09.687]            // while-condition  =>  TRUE
[08:10:09.688]            // while "1"  (timeout="50000")
[08:10:09.688]            // while-condition  =>  TRUE
[08:10:09.688]            // while "1"  (timeout="50000")
[08:10:09.688]            // while-condition  =>  TRUE
[08:10:09.688]            // while "1"  (timeout="50000")
[08:10:09.688]            // while-condition  =>  TRUE
[08:10:09.689]            // while "1"  (timeout="50000")
[08:10:09.689]            // while-condition  =>  TRUE
[08:10:09.689]            // while "1"  (timeout="50000")
[08:10:09.689]            // while-condition  =>  TRUE
[08:10:09.689]            // while "1"  (timeout="50000")
[08:10:09.690]            // while-condition  =>  TRUE
[08:10:09.690]            // while "1"  (timeout="50000")
[08:10:09.690]            // while-condition  =>  TRUE
[08:10:09.690]            // while "1"  (timeout="50000")
[08:10:09.690]            // while-condition  =>  TRUE
[08:10:09.691]            // while "1"  (timeout="50000")
[08:10:09.691]            // while-condition  =>  TRUE
[08:10:09.691]            // while "1"  (timeout="50000")
[08:10:09.691]            // while-condition  =>  TRUE
[08:10:09.691]            // while "1"  (timeout="50000")
[08:10:09.692]            // while-condition  =>  TRUE
[08:10:09.692]            // while "1"  (timeout="50000")
[08:10:09.692]            // while-condition  =>  TRUE
[08:10:09.692]            // while "1"  (timeout="50000")
[08:10:09.692]            // while-condition  =>  TRUE
[08:10:09.693]            // while "1"  (timeout="50000")
[08:10:09.693]            // while-condition  =>  TRUE
[08:10:09.693]            // while "1"  (timeout="50000")
[08:10:09.693]            // while-condition  =>  TRUE
[08:10:09.693]            // while "1"  (timeout="50000")
[08:10:09.693]            // while-condition  =>  TRUE
[08:10:09.694]            // while "1"  (timeout="50000")
[08:10:09.694]            // while-condition  =>  TRUE
[08:10:09.694]            // while "1"  (timeout="50000")
[08:10:09.694]            // while-condition  =>  TRUE
[08:10:09.694]            // while "1"  (timeout="50000")
[08:10:09.694]            // while-condition  =>  TRUE
[08:10:09.695]            // while "1"  (timeout="50000")
[08:10:09.695]            // while-condition  =>  TRUE
[08:10:09.695]            // while "1"  (timeout="50000")
[08:10:09.696]            // while-condition  =>  TRUE
[08:10:09.696]            // while "1"  (timeout="50000")
[08:10:09.696]            // while-condition  =>  TRUE
[08:10:09.696]            // while "1"  (timeout="50000")
[08:10:09.696]            // while-condition  =>  TRUE
[08:10:09.696]            // while "1"  (timeout="50000")
[08:10:09.697]            // while-condition  =>  TRUE
[08:10:09.697]            // while "1"  (timeout="50000")
[08:10:09.697]            // while-condition  =>  TRUE
[08:10:09.697]            // while "1"  (timeout="50000")
[08:10:09.698]            // while-condition  =>  TRUE
[08:10:09.698]            // while "1"  (timeout="50000")
[08:10:09.698]            // while-condition  =>  TRUE
[08:10:09.698]            // while "1"  (timeout="50000")
[08:10:09.698]            // while-condition  =>  TRUE
[08:10:09.699]            // while "1"  (timeout="50000")
[08:10:09.699]            // while-condition  =>  TRUE
[08:10:09.699]            // while "1"  (timeout="50000")
[08:10:09.699]            // while-condition  =>  TRUE
[08:10:09.699]            // while "1"  (timeout="50000")
[08:10:09.700]            // while-condition  =>  TRUE
[08:10:09.700]            // while "1"  (timeout="50000")
[08:10:09.700]            // while-condition  =>  TRUE
[08:10:09.700]            // while "1"  (timeout="50000")
[08:10:09.700]            // while-condition  =>  TRUE
[08:10:09.700]            // while "1"  (timeout="50000")
[08:10:09.701]            // while-condition  =>  TRUE
[08:10:09.701]            // while "1"  (timeout="50000")
[08:10:09.701]            // while-condition  =>  TRUE
[08:10:09.701]            // while "1"  (timeout="50000")
[08:10:09.701]            // while-condition  =>  TRUE
[08:10:09.702]            // while "1"  (timeout="50000")
[08:10:09.702]            // while-condition  =>  TRUE
[08:10:09.702]            // while "1"  (timeout="50000")
[08:10:09.702]            // while-condition  =>  TRUE
[08:10:09.702]            // while "1"  (timeout="50000")
[08:10:09.703]            // while-condition  =>  TRUE
[08:10:09.703]            // while "1"  (timeout="50000")
[08:10:09.703]            // while-condition  =>  TRUE
[08:10:09.703]            // while "1"  (timeout="50000")
[08:10:09.703]            // while-condition  =>  TRUE
[08:10:09.704]            // while "1"  (timeout="50000")
[08:10:09.704]            // while-condition  =>  TRUE
[08:10:09.704]            // while "1"  (timeout="50000")
[08:10:09.704]            // while-condition  =>  TRUE
[08:10:09.704]            // while "1"  (timeout="50000")
[08:10:09.705]            // while-condition  =>  TRUE
[08:10:09.705]            // while "1"  (timeout="50000")
[08:10:09.705]            // while-condition  =>  TRUE
[08:10:09.705]            // while "1"  (timeout="50000")
[08:10:09.705]            // while-condition  =>  TRUE
[08:10:09.706]            // while "1"  (timeout="50000")
[08:10:09.706]            // while-condition  =>  TRUE
[08:10:09.706]            // while "1"  (timeout="50000")
[08:10:09.706]            // while-condition  =>  TRUE
[08:10:09.706]            // while "1"  (timeout="50000")
[08:10:09.707]            // while-condition  =>  TRUE
[08:10:09.707]            // while "1"  (timeout="50000")
[08:10:09.707]            // while-condition  =>  TRUE
[08:10:09.707]            // while "1"  (timeout="50000")
[08:10:09.707]            // while-condition  =>  TRUE
[08:10:09.707]            // while "1"  (timeout="50000")
[08:10:09.708]            // while-condition  =>  TRUE
[08:10:09.708]            // while "1"  (timeout="50000")
[08:10:09.708]            // while-condition  =>  TRUE
[08:10:09.708]            // while "1"  (timeout="50000")
[08:10:09.708]            // while-condition  =>  TRUE
[08:10:09.709]            // while "1"  (timeout="50000")
[08:10:09.709]            // while-condition  =>  TRUE
[08:10:09.709]            // while "1"  (timeout="50000")
[08:10:09.709]            // while-condition  =>  TRUE
[08:10:09.709]            // while "1"  (timeout="50000")
[08:10:09.709]            // while-condition  =>  TRUE
[08:10:09.710]            // while "1"  (timeout="50000")
[08:10:09.710]            // while-condition  =>  TRUE
[08:10:09.710]            // while "1"  (timeout="50000")
[08:10:09.710]            // while-condition  =>  TRUE
[08:10:09.710]            // while "1"  (timeout="50000")
[08:10:09.711]            // while-condition  =>  TRUE
[08:10:09.711]            // while "1"  (timeout="50000")
[08:10:09.711]            // while-condition  =>  TRUE
[08:10:09.711]            // while "1"  (timeout="50000")
[08:10:09.712]            // while-condition  =>  TRUE
[08:10:09.712]            // while "1"  (timeout="50000")
[08:10:09.712]            // while-condition  =>  TRUE
[08:10:09.712]            // while "1"  (timeout="50000")
[08:10:09.712]            // while-condition  =>  TRUE
[08:10:09.713]            // while "1"  (timeout="50000")
[08:10:09.713]            // while-condition  =>  TRUE
[08:10:09.713]            // while "1"  (timeout="50000")
[08:10:09.713]            // while-condition  =>  TRUE
[08:10:09.713]            // while "1"  (timeout="50000")
[08:10:09.714]            // while-condition  =>  TRUE
[08:10:09.714]            // while "1"  (timeout="50000")
[08:10:09.714]            // while-condition  =>  TRUE
[08:10:09.714]            // while "1"  (timeout="50000")
[08:10:09.714]            // while-condition  =>  TRUE
[08:10:09.715]            // while "1"  (timeout="50000")
[08:10:09.715]            // while-condition  =>  TRUE
[08:10:09.715]            // while "1"  (timeout="50000")
[08:10:09.715]            // while-condition  =>  TRUE
[08:10:09.715]            // while "1"  (timeout="50000")
[08:10:09.716]            // while-condition  =>  TRUE
[08:10:09.716]            // while "1"  (timeout="50000")
[08:10:09.716]            // while-condition  =>  TRUE
[08:10:09.716]            // while "1"  (timeout="50000")
[08:10:09.716]            // while-condition  =>  TRUE
[08:10:09.717]            // while "1"  (timeout="50000")
[08:10:09.717]            // while-condition  =>  TRUE
[08:10:09.717]            // while "1"  (timeout="50000")
[08:10:09.717]            // while-condition  =>  TRUE
[08:10:09.717]            // while "1"  (timeout="50000")
[08:10:09.717]            // while-condition  =>  TRUE
[08:10:09.718]            // while "1"  (timeout="50000")
[08:10:09.718]            // while-condition  =>  TRUE
[08:10:09.718]            // while "1"  (timeout="50000")
[08:10:09.718]            // while-condition  =>  TRUE
[08:10:09.718]            // while "1"  (timeout="50000")
[08:10:09.719]            // while-condition  =>  TRUE
[08:10:09.719]            // while "1"  (timeout="50000")
[08:10:09.719]            // while-condition  =>  TRUE
[08:10:09.719]            // while "1"  (timeout="50000")
[08:10:09.719]            // while-condition  =>  TRUE
[08:10:09.720]            // while "1"  (timeout="50000")
[08:10:09.720]            // while-condition  =>  TRUE
[08:10:09.720]            // while "1"  (timeout="50000")
[08:10:09.720]            // while-condition  =>  TRUE
[08:10:09.720]            // while "1"  (timeout="50000")
[08:10:09.721]            // while-condition  =>  TRUE
[08:10:09.721]            // while "1"  (timeout="50000")
[08:10:09.721]            // while-condition  =>  TRUE
[08:10:09.721]            // while "1"  (timeout="50000")
[08:10:09.721]            // while-condition  =>  TRUE
[08:10:09.722]            // while "1"  (timeout="50000")
[08:10:09.722]            // while-condition  =>  TRUE
[08:10:09.722]            // while "1"  (timeout="50000")
[08:10:09.722]            // while-condition  =>  TRUE
[08:10:09.722]            // while "1"  (timeout="50000")
[08:10:09.723]            // while-condition  =>  TRUE
[08:10:09.723]            // while "1"  (timeout="50000")
[08:10:09.723]            // while-condition  =>  TRUE
[08:10:09.723]            // while "1"  (timeout="50000")
[08:10:09.723]            // while-condition  =>  TRUE
[08:10:09.724]            // while "1"  (timeout="50000")
[08:10:09.724]            // while-condition  =>  TRUE
[08:10:09.724]            // while "1"  (timeout="50000")
[08:10:09.724]            // while-condition  =>  TRUE
[08:10:09.724]            // while "1"  (timeout="50000")
[08:10:09.725]            // while-condition  =>  TRUE
[08:10:09.725]            // while "1"  (timeout="50000")
[08:10:09.725]            // while-condition  =>  TRUE
[08:10:09.725]            // while "1"  (timeout="50000")
[08:10:09.725]            // while-condition  =>  TRUE
[08:10:09.725]            // while "1"  (timeout="50000")
[08:10:09.725]            // while-condition  =>  TRUE
[08:10:09.726]            // while "1"  (timeout="50000")
[08:10:09.726]            // while-condition  =>  TRUE
[08:10:09.726]            // while "1"  (timeout="50000")
[08:10:09.726]            // while-condition  =>  TRUE
[08:10:09.727]            // while "1"  (timeout="50000")
[08:10:09.727]            // while-condition  =>  TRUE
[08:10:09.727]            // while "1"  (timeout="50000")
[08:10:09.727]            // while-condition  =>  TRUE
[08:10:09.727]            // while "1"  (timeout="50000")
[08:10:09.728]            // while-condition  =>  TRUE
[08:10:09.728]            // while "1"  (timeout="50000")
[08:10:09.728]            // while-condition  =>  TRUE
[08:10:09.728]            // while "1"  (timeout="50000")
[08:10:09.728]            // while-condition  =>  TRUE
[08:10:09.729]            // while "1"  (timeout="50000")
[08:10:09.729]            // while  =>  TIMEOUT
[08:10:09.729]            // end while "1"
[08:10:09.729]          </control>
[08:10:09.729]          <block atomic="false" info="">
[08:10:09.730]            DAP_SWJ_Pins(nReset, nReset, 0);
[08:10:09.741]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:10:09.742]          </block>
[08:10:09.743]          <control if="" while="1" timeout="10000" info="">
[08:10:09.744]            // while "1"  (timeout="10000")
[08:10:09.744]            // while-condition  =>  TRUE
[08:10:09.745]            // while "1"  (timeout="10000")
[08:10:09.745]            // while  =>  TIMEOUT
[08:10:09.746]            // end while "1"
[08:10:09.747]          </control>
[08:10:09.747]          <block atomic="true" info="">
[08:10:09.748]            // ATOMIC SEQUENCE - EXECUTE
[08:10:09.750]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[08:10:09.750]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[08:10:09.751]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[08:10:09.751]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[08:10:09.752]            // ATOMIC SEQUENCE - DONE
[08:10:09.753]          </block>
[08:10:09.753]          <block atomic="false" info="">
[08:10:09.754]            __errorcontrol = 0x00000001;
[08:10:09.754]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[08:10:09.755]            ReadDP(0x0);
[08:10:09.757]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[08:10:09.757]            __errorcontrol = 0x00000000;
[08:10:09.757]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[08:10:09.757]          </block>
[08:10:09.758]        </sequence>
[08:10:09.758]      Sequence("DebugPortSetup");
[08:10:09.758]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[08:10:09.758]        </sequence>
[08:10:09.759]      Sequence("DebugPortStart");
[08:10:09.759]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[08:10:09.759]          <block atomic="false" info="">
[08:10:09.760]            __var SW_DP_ABORT  = 0x0;
[08:10:09.760]              // -> [SW_DP_ABORT <= 0x00000000]
[08:10:09.761]            __var DP_CTRL_STAT = 0x4;
[08:10:09.761]              // -> [DP_CTRL_STAT <= 0x00000004]
[08:10:09.762]            __var DP_SELECT    = 0x8;
[08:10:09.762]              // -> [DP_SELECT <= 0x00000008]
[08:10:09.762]            __var powered_down = 0;
[08:10:09.763]              // -> [powered_down <= 0x00000000]
[08:10:09.763]            WriteDP(DP_SELECT, 0x00000000);
[08:10:09.765]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:10:09.765]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[08:10:09.767]              // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[08:10:09.767]              // -> [powered_down <= 0x00000001]
[08:10:09.767]          </block>
[08:10:09.768]          <control if="powered_down" while="" timeout="0" info="">
[08:10:09.768]            // if-block "powered_down"
[08:10:09.768]              // =>  TRUE
[08:10:09.769]            <block atomic="false" info="">
[08:10:09.769]              WriteDP(DP_CTRL_STAT, 0x50000000);
[08:10:09.770]                // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[08:10:09.770]            </block>
[08:10:09.770]            <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[08:10:09.770]              // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[08:10:09.772]                // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[08:10:09.772]              // while-condition  =>  FALSE
[08:10:09.772]              // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[08:10:09.773]            </control>
[08:10:09.773]            <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[08:10:09.773]              // if-block "(__protocol & 0xFFFF) == 1"
[08:10:09.773]                // =>  FALSE
[08:10:09.774]              // skip if-block "(__protocol & 0xFFFF) == 1"
[08:10:09.774]            </control>
[08:10:09.774]            <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[08:10:09.774]              // if-block "(__protocol & 0xFFFF) == 2"
[08:10:09.775]                // =>  TRUE
[08:10:09.775]              <block atomic="false" info="">
[08:10:09.776]                WriteDP(DP_CTRL_STAT, 0x50000F00);
[08:10:09.777]                  // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[08:10:09.777]                WriteDP(SW_DP_ABORT, 0x0000001E);
[08:10:09.779]                  // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[08:10:09.779]              </block>
[08:10:09.779]              // end if-block "(__protocol & 0xFFFF) == 2"
[08:10:09.780]            </control>
[08:10:09.780]            // end if-block "powered_down"
[08:10:09.780]          </control>
[08:10:09.781]        </sequence>
[08:10:09.781]      Sequence("DebugCoreStart");
[08:10:09.781]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[08:10:09.781]          <block atomic="true" info="">
[08:10:09.782]            // ATOMIC SEQUENCE - EXECUTE
[08:10:09.784]            __var DP_R_IDCODE    = 0x0;
[08:10:09.784]              // -> [DP_R_IDCODE <= 0x00000000]
[08:10:09.784]            __var DP_W_ABORT    = 0x0;
[08:10:09.785]              // -> [DP_W_ABORT <= 0x00000000]
[08:10:09.785]            __var DP_CTRLSTAT = 0x4;
[08:10:09.785]              // -> [DP_CTRLSTAT <= 0x00000004]
[08:10:09.786]            __var DP_W_SELECT    = 0x8;
[08:10:09.786]              // -> [DP_W_SELECT <= 0x00000008]
[08:10:09.786]            __var AP_TAR		= 0x4;
[08:10:09.786]              // -> [AP_TAR <= 0x00000004]
[08:10:09.787]            __var AP_BD0		= 0x0;
[08:10:09.787]              // -> [AP_BD0 <= 0x00000000]
[08:10:09.787]            __var AP_BD1		= 0x4;
[08:10:09.787]              // -> [AP_BD1 <= 0x00000004]
[08:10:09.788]            __var AP_BD2		= 0x8;
[08:10:09.788]              // -> [AP_BD2 <= 0x00000008]
[08:10:09.788]            __var PCWithinFlash = 0;
[08:10:09.789]              // -> [PCWithinFlash <= 0x00000000]
[08:10:09.789]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[08:10:09.789]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[08:10:09.789]            // ATOMIC SEQUENCE - DONE
[08:10:09.790]          </block>
[08:10:09.790]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[08:10:09.790]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[08:10:09.794]              // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[08:10:09.794]            // while-condition  =>  FALSE
[08:10:09.794]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[08:10:09.795]          </control>
[08:10:09.795]          <block atomic="true" info="">
[08:10:09.795]            // ATOMIC SEQUENCE - EXECUTE
[08:10:09.798]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:10:09.798]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:10:09.798]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[08:10:09.799]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[08:10:09.799]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[08:10:09.799]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[08:10:09.800]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[08:10:09.800]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[08:10:09.800]            // ATOMIC SEQUENCE - DONE
[08:10:09.801]          </block>
[08:10:09.801]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[08:10:09.801]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:10:09.803]              // -> [ReadAP(0x00000000) => 0x01030003]   (__dp=0x00000000, __ap=0x00000000)
[08:10:09.803]            // while-condition  =>  FALSE
[08:10:09.804]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[08:10:09.804]          </control>
[08:10:09.804]          <block atomic="false" info="">
[08:10:09.804]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[08:10:09.806]              // -> [ReadAP(0x00000008) => 0x10000820]   (__dp=0x00000000, __ap=0x00000000)
[08:10:09.806]              // -> [PCWithinFlash <= 0x00000001]
[08:10:09.806]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:10:09.808]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:10:09.808]          </block>
[08:10:09.808]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[08:10:09.809]            // if-block "PCWithinFlash == 0"
[08:10:09.809]              // =>  FALSE
[08:10:09.809]            // skip if-block "PCWithinFlash == 0"
[08:10:09.810]          </control>
[08:10:09.810]        </sequence>
[08:10:09.810]    </block>
[08:10:09.810]  </sequence>
[08:10:09.811]  
[08:10:16.799]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[08:10:16.799]  
[08:10:16.799]  <debugvars>
[08:10:16.800]    // Pre-defined
[08:10:16.800]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:10:16.800]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:10:16.800]    __dp=0x00000000
[08:10:16.801]    __ap=0x00000000
[08:10:16.801]    __traceout=0x00000000      (Trace Disabled)
[08:10:16.801]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:10:16.801]    __FlashAddr=0x00000000
[08:10:16.802]    __FlashLen=0x00000000
[08:10:16.802]    __FlashArg=0x00000000
[08:10:16.802]    __FlashOp=0x00000000
[08:10:16.803]    __Result=0x00000000
[08:10:16.803]  </debugvars>
[08:10:16.803]  
[08:10:16.804]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[08:10:16.804]    <block atomic="false" info="">
[08:10:16.804]      __var nReset      = 0x80;
[08:10:16.804]        // -> [nReset <= 0x00000080]
[08:10:16.805]      DAP_SWJ_Pins(0x00, nReset, 0);
[08:10:16.806]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:10:16.806]    </block>
[08:10:16.806]    <control if="" while="1" timeout="50000" info="">
[08:10:16.807]      // while "1"  (timeout="50000")
[08:10:16.807]      // while-condition  =>  TRUE
[08:10:16.807]      // while "1"  (timeout="50000")
[08:10:16.807]      // while-condition  =>  TRUE
[08:10:16.808]      // while "1"  (timeout="50000")
[08:10:16.808]      // while-condition  =>  TRUE
[08:10:16.808]      // while "1"  (timeout="50000")
[08:10:16.808]      // while-condition  =>  TRUE
[08:10:16.809]      // while "1"  (timeout="50000")
[08:10:16.809]      // while-condition  =>  TRUE
[08:10:16.809]      // while "1"  (timeout="50000")
[08:10:16.810]      // while-condition  =>  TRUE
[08:10:16.810]      // while "1"  (timeout="50000")
[08:10:16.810]      // while-condition  =>  TRUE
[08:10:16.810]      // while "1"  (timeout="50000")
[08:10:16.810]      // while-condition  =>  TRUE
[08:10:16.811]      // while "1"  (timeout="50000")
[08:10:16.811]      // while-condition  =>  TRUE
[08:10:16.811]      // while "1"  (timeout="50000")
[08:10:16.811]      // while-condition  =>  TRUE
[08:10:16.812]      // while "1"  (timeout="50000")
[08:10:16.812]      // while-condition  =>  TRUE
[08:10:16.812]      // while "1"  (timeout="50000")
[08:10:16.812]      // while-condition  =>  TRUE
[08:10:16.813]      // while "1"  (timeout="50000")
[08:10:16.813]      // while-condition  =>  TRUE
[08:10:16.813]      // while "1"  (timeout="50000")
[08:10:16.813]      // while-condition  =>  TRUE
[08:10:16.813]      // while "1"  (timeout="50000")
[08:10:16.814]      // while-condition  =>  TRUE
[08:10:16.814]      // while "1"  (timeout="50000")
[08:10:16.814]      // while-condition  =>  TRUE
[08:10:16.814]      // while "1"  (timeout="50000")
[08:10:16.815]      // while-condition  =>  TRUE
[08:10:16.815]      // while "1"  (timeout="50000")
[08:10:16.815]      // while-condition  =>  TRUE
[08:10:16.815]      // while "1"  (timeout="50000")
[08:10:16.816]      // while-condition  =>  TRUE
[08:10:16.816]      // while "1"  (timeout="50000")
[08:10:16.816]      // while-condition  =>  TRUE
[08:10:16.816]      // while "1"  (timeout="50000")
[08:10:16.816]      // while-condition  =>  TRUE
[08:10:16.817]      // while "1"  (timeout="50000")
[08:10:16.817]      // while-condition  =>  TRUE
[08:10:16.817]      // while "1"  (timeout="50000")
[08:10:16.817]      // while-condition  =>  TRUE
[08:10:16.817]      // while "1"  (timeout="50000")
[08:10:16.818]      // while-condition  =>  TRUE
[08:10:16.818]      // while "1"  (timeout="50000")
[08:10:16.818]      // while-condition  =>  TRUE
[08:10:16.818]      // while "1"  (timeout="50000")
[08:10:16.818]      // while-condition  =>  TRUE
[08:10:16.818]      // while "1"  (timeout="50000")
[08:10:16.819]      // while-condition  =>  TRUE
[08:10:16.819]      // while "1"  (timeout="50000")
[08:10:16.819]      // while-condition  =>  TRUE
[08:10:16.819]      // while "1"  (timeout="50000")
[08:10:16.819]      // while-condition  =>  TRUE
[08:10:16.820]      // while "1"  (timeout="50000")
[08:10:16.820]      // while-condition  =>  TRUE
[08:10:16.820]      // while "1"  (timeout="50000")
[08:10:16.820]      // while-condition  =>  TRUE
[08:10:16.820]      // while "1"  (timeout="50000")
[08:10:16.821]      // while-condition  =>  TRUE
[08:10:16.821]      // while "1"  (timeout="50000")
[08:10:16.821]      // while-condition  =>  TRUE
[08:10:16.821]      // while "1"  (timeout="50000")
[08:10:16.821]      // while-condition  =>  TRUE
[08:10:16.822]      // while "1"  (timeout="50000")
[08:10:16.822]      // while-condition  =>  TRUE
[08:10:16.822]      // while "1"  (timeout="50000")
[08:10:16.822]      // while-condition  =>  TRUE
[08:10:16.822]      // while "1"  (timeout="50000")
[08:10:16.823]      // while-condition  =>  TRUE
[08:10:16.823]      // while "1"  (timeout="50000")
[08:10:16.823]      // while-condition  =>  TRUE
[08:10:16.823]      // while "1"  (timeout="50000")
[08:10:16.823]      // while-condition  =>  TRUE
[08:10:16.824]      // while "1"  (timeout="50000")
[08:10:16.824]      // while-condition  =>  TRUE
[08:10:16.824]      // while "1"  (timeout="50000")
[08:10:16.824]      // while-condition  =>  TRUE
[08:10:16.824]      // while "1"  (timeout="50000")
[08:10:16.824]      // while-condition  =>  TRUE
[08:10:16.825]      // while "1"  (timeout="50000")
[08:10:16.825]      // while-condition  =>  TRUE
[08:10:16.825]      // while "1"  (timeout="50000")
[08:10:16.825]      // while-condition  =>  TRUE
[08:10:16.825]      // while "1"  (timeout="50000")
[08:10:16.826]      // while-condition  =>  TRUE
[08:10:16.826]      // while "1"  (timeout="50000")
[08:10:16.826]      // while-condition  =>  TRUE
[08:10:16.826]      // while "1"  (timeout="50000")
[08:10:16.826]      // while-condition  =>  TRUE
[08:10:16.827]      // while "1"  (timeout="50000")
[08:10:16.827]      // while-condition  =>  TRUE
[08:10:16.827]      // while "1"  (timeout="50000")
[08:10:16.827]      // while-condition  =>  TRUE
[08:10:16.827]      // while "1"  (timeout="50000")
[08:10:16.827]      // while-condition  =>  TRUE
[08:10:16.827]      // while "1"  (timeout="50000")
[08:10:16.827]      // while-condition  =>  TRUE
[08:10:16.827]      // while "1"  (timeout="50000")
[08:10:16.828]      // while-condition  =>  TRUE
[08:10:16.828]      // while "1"  (timeout="50000")
[08:10:16.828]      // while-condition  =>  TRUE
[08:10:16.828]      // while "1"  (timeout="50000")
[08:10:16.828]      // while-condition  =>  TRUE
[08:10:16.829]      // while "1"  (timeout="50000")
[08:10:16.829]      // while-condition  =>  TRUE
[08:10:16.829]      // while "1"  (timeout="50000")
[08:10:16.829]      // while-condition  =>  TRUE
[08:10:16.829]      // while "1"  (timeout="50000")
[08:10:16.830]      // while-condition  =>  TRUE
[08:10:16.831]      // while "1"  (timeout="50000")
[08:10:16.831]      // while-condition  =>  TRUE
[08:10:16.831]      // while "1"  (timeout="50000")
[08:10:16.831]      // while-condition  =>  TRUE
[08:10:16.831]      // while "1"  (timeout="50000")
[08:10:16.832]      // while-condition  =>  TRUE
[08:10:16.832]      // while "1"  (timeout="50000")
[08:10:16.832]      // while-condition  =>  TRUE
[08:10:16.832]      // while "1"  (timeout="50000")
[08:10:16.832]      // while-condition  =>  TRUE
[08:10:16.833]      // while "1"  (timeout="50000")
[08:10:16.833]      // while-condition  =>  TRUE
[08:10:16.833]      // while "1"  (timeout="50000")
[08:10:16.834]      // while-condition  =>  TRUE
[08:10:16.834]      // while "1"  (timeout="50000")
[08:10:16.834]      // while-condition  =>  TRUE
[08:10:16.834]      // while "1"  (timeout="50000")
[08:10:16.834]      // while-condition  =>  TRUE
[08:10:16.835]      // while "1"  (timeout="50000")
[08:10:16.835]      // while-condition  =>  TRUE
[08:10:16.835]      // while "1"  (timeout="50000")
[08:10:16.835]      // while-condition  =>  TRUE
[08:10:16.835]      // while "1"  (timeout="50000")
[08:10:16.836]      // while-condition  =>  TRUE
[08:10:16.836]      // while "1"  (timeout="50000")
[08:10:16.836]      // while-condition  =>  TRUE
[08:10:16.836]      // while "1"  (timeout="50000")
[08:10:16.836]      // while-condition  =>  TRUE
[08:10:16.837]      // while "1"  (timeout="50000")
[08:10:16.837]      // while-condition  =>  TRUE
[08:10:16.837]      // while "1"  (timeout="50000")
[08:10:16.837]      // while-condition  =>  TRUE
[08:10:16.837]      // while "1"  (timeout="50000")
[08:10:16.838]      // while-condition  =>  TRUE
[08:10:16.838]      // while "1"  (timeout="50000")
[08:10:16.838]      // while-condition  =>  TRUE
[08:10:16.838]      // while "1"  (timeout="50000")
[08:10:16.838]      // while-condition  =>  TRUE
[08:10:16.838]      // while "1"  (timeout="50000")
[08:10:16.839]      // while-condition  =>  TRUE
[08:10:16.839]      // while "1"  (timeout="50000")
[08:10:16.839]      // while-condition  =>  TRUE
[08:10:16.839]      // while "1"  (timeout="50000")
[08:10:16.840]      // while-condition  =>  TRUE
[08:10:16.840]      // while "1"  (timeout="50000")
[08:10:16.840]      // while-condition  =>  TRUE
[08:10:16.840]      // while "1"  (timeout="50000")
[08:10:16.840]      // while-condition  =>  TRUE
[08:10:16.841]      // while "1"  (timeout="50000")
[08:10:16.841]      // while-condition  =>  TRUE
[08:10:16.841]      // while "1"  (timeout="50000")
[08:10:16.841]      // while-condition  =>  TRUE
[08:10:16.841]      // while "1"  (timeout="50000")
[08:10:16.842]      // while-condition  =>  TRUE
[08:10:16.842]      // while "1"  (timeout="50000")
[08:10:16.842]      // while-condition  =>  TRUE
[08:10:16.842]      // while "1"  (timeout="50000")
[08:10:16.842]      // while-condition  =>  TRUE
[08:10:16.843]      // while "1"  (timeout="50000")
[08:10:16.843]      // while-condition  =>  TRUE
[08:10:16.843]      // while "1"  (timeout="50000")
[08:10:16.843]      // while-condition  =>  TRUE
[08:10:16.843]      // while "1"  (timeout="50000")
[08:10:16.844]      // while-condition  =>  TRUE
[08:10:16.844]      // while "1"  (timeout="50000")
[08:10:16.844]      // while-condition  =>  TRUE
[08:10:16.844]      // while "1"  (timeout="50000")
[08:10:16.844]      // while-condition  =>  TRUE
[08:10:16.844]      // while "1"  (timeout="50000")
[08:10:16.844]      // while-condition  =>  TRUE
[08:10:16.844]      // while "1"  (timeout="50000")
[08:10:16.844]      // while-condition  =>  TRUE
[08:10:16.844]      // while "1"  (timeout="50000")
[08:10:16.845]      // while-condition  =>  TRUE
[08:10:16.845]      // while "1"  (timeout="50000")
[08:10:16.845]      // while-condition  =>  TRUE
[08:10:16.845]      // while "1"  (timeout="50000")
[08:10:16.845]      // while-condition  =>  TRUE
[08:10:16.847]      // while "1"  (timeout="50000")
[08:10:16.847]      // while-condition  =>  TRUE
[08:10:16.847]      // while "1"  (timeout="50000")
[08:10:16.847]      // while-condition  =>  TRUE
[08:10:16.847]      // while "1"  (timeout="50000")
[08:10:16.848]      // while-condition  =>  TRUE
[08:10:16.848]      // while "1"  (timeout="50000")
[08:10:16.848]      // while-condition  =>  TRUE
[08:10:16.848]      // while "1"  (timeout="50000")
[08:10:16.848]      // while-condition  =>  TRUE
[08:10:16.849]      // while "1"  (timeout="50000")
[08:10:16.849]      // while-condition  =>  TRUE
[08:10:16.849]      // while "1"  (timeout="50000")
[08:10:16.849]      // while-condition  =>  TRUE
[08:10:16.849]      // while "1"  (timeout="50000")
[08:10:16.850]      // while-condition  =>  TRUE
[08:10:16.850]      // while "1"  (timeout="50000")
[08:10:16.850]      // while-condition  =>  TRUE
[08:10:16.850]      // while "1"  (timeout="50000")
[08:10:16.850]      // while-condition  =>  TRUE
[08:10:16.851]      // while "1"  (timeout="50000")
[08:10:16.851]      // while-condition  =>  TRUE
[08:10:16.851]      // while "1"  (timeout="50000")
[08:10:16.851]      // while-condition  =>  TRUE
[08:10:16.851]      // while "1"  (timeout="50000")
[08:10:16.852]      // while-condition  =>  TRUE
[08:10:16.852]      // while "1"  (timeout="50000")
[08:10:16.852]      // while-condition  =>  TRUE
[08:10:16.852]      // while "1"  (timeout="50000")
[08:10:16.852]      // while-condition  =>  TRUE
[08:10:16.853]      // while "1"  (timeout="50000")
[08:10:16.853]      // while-condition  =>  TRUE
[08:10:16.853]      // while "1"  (timeout="50000")
[08:10:16.853]      // while-condition  =>  TRUE
[08:10:16.853]      // while "1"  (timeout="50000")
[08:10:16.853]      // while-condition  =>  TRUE
[08:10:16.854]      // while "1"  (timeout="50000")
[08:10:16.854]      // while-condition  =>  TRUE
[08:10:16.854]      // while "1"  (timeout="50000")
[08:10:16.854]      // while-condition  =>  TRUE
[08:10:16.854]      // while "1"  (timeout="50000")
[08:10:16.855]      // while-condition  =>  TRUE
[08:10:16.855]      // while "1"  (timeout="50000")
[08:10:16.855]      // while-condition  =>  TRUE
[08:10:16.855]      // while "1"  (timeout="50000")
[08:10:16.855]      // while-condition  =>  TRUE
[08:10:16.856]      // while "1"  (timeout="50000")
[08:10:16.856]      // while-condition  =>  TRUE
[08:10:16.856]      // while "1"  (timeout="50000")
[08:10:16.856]      // while-condition  =>  TRUE
[08:10:16.856]      // while "1"  (timeout="50000")
[08:10:16.857]      // while-condition  =>  TRUE
[08:10:16.857]      // while "1"  (timeout="50000")
[08:10:16.857]      // while-condition  =>  TRUE
[08:10:16.857]      // while "1"  (timeout="50000")
[08:10:16.857]      // while-condition  =>  TRUE
[08:10:16.858]      // while "1"  (timeout="50000")
[08:10:16.858]      // while-condition  =>  TRUE
[08:10:16.858]      // while "1"  (timeout="50000")
[08:10:16.858]      // while-condition  =>  TRUE
[08:10:16.859]      // while "1"  (timeout="50000")
[08:10:16.859]      // while-condition  =>  TRUE
[08:10:16.860]      // while "1"  (timeout="50000")
[08:10:16.860]      // while-condition  =>  TRUE
[08:10:16.860]      // while "1"  (timeout="50000")
[08:10:16.860]      // while-condition  =>  TRUE
[08:10:16.860]      // while "1"  (timeout="50000")
[08:10:16.860]      // while-condition  =>  TRUE
[08:10:16.860]      // while "1"  (timeout="50000")
[08:10:16.860]      // while-condition  =>  TRUE
[08:10:16.860]      // while "1"  (timeout="50000")
[08:10:16.861]      // while-condition  =>  TRUE
[08:10:16.862]      // while "1"  (timeout="50000")
[08:10:16.862]      // while-condition  =>  TRUE
[08:10:16.862]      // while "1"  (timeout="50000")
[08:10:16.862]      // while-condition  =>  TRUE
[08:10:16.862]      // while "1"  (timeout="50000")
[08:10:16.863]      // while-condition  =>  TRUE
[08:10:16.863]      // while "1"  (timeout="50000")
[08:10:16.863]      // while-condition  =>  TRUE
[08:10:16.863]      // while "1"  (timeout="50000")
[08:10:16.864]      // while-condition  =>  TRUE
[08:10:16.864]      // while "1"  (timeout="50000")
[08:10:16.864]      // while-condition  =>  TRUE
[08:10:16.864]      // while "1"  (timeout="50000")
[08:10:16.864]      // while-condition  =>  TRUE
[08:10:16.865]      // while "1"  (timeout="50000")
[08:10:16.865]      // while-condition  =>  TRUE
[08:10:16.865]      // while "1"  (timeout="50000")
[08:10:16.865]      // while-condition  =>  TRUE
[08:10:16.866]      // while "1"  (timeout="50000")
[08:10:16.866]      // while-condition  =>  TRUE
[08:10:16.866]      // while "1"  (timeout="50000")
[08:10:16.866]      // while-condition  =>  TRUE
[08:10:16.867]      // while "1"  (timeout="50000")
[08:10:16.867]      // while-condition  =>  TRUE
[08:10:16.867]      // while "1"  (timeout="50000")
[08:10:16.867]      // while-condition  =>  TRUE
[08:10:16.868]      // while "1"  (timeout="50000")
[08:10:16.868]      // while-condition  =>  TRUE
[08:10:16.868]      // while "1"  (timeout="50000")
[08:10:16.868]      // while-condition  =>  TRUE
[08:10:16.869]      // while "1"  (timeout="50000")
[08:10:16.869]      // while-condition  =>  TRUE
[08:10:16.869]      // while "1"  (timeout="50000")
[08:10:16.869]      // while-condition  =>  TRUE
[08:10:16.870]      // while "1"  (timeout="50000")
[08:10:16.870]      // while  =>  TIMEOUT
[08:10:16.870]      // end while "1"
[08:10:16.870]    </control>
[08:10:16.871]    <block atomic="false" info="">
[08:10:16.871]      DAP_SWJ_Pins(nReset, nReset, 0);
[08:10:16.882]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:10:16.893]    </block>
[08:10:16.893]  </sequence>
[08:10:16.894]  
[08:14:43.972]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[08:14:43.972]  
[08:14:43.973]  <debugvars>
[08:14:43.974]    // Pre-defined
[08:14:43.974]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:14:43.974]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[08:14:43.975]    __dp=0x00000000
[08:14:43.975]    __ap=0x00000000
[08:14:43.976]    __traceout=0x00000000      (Trace Disabled)
[08:14:43.976]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:14:43.976]    __FlashAddr=0x00000000
[08:14:43.977]    __FlashLen=0x00000000
[08:14:43.977]    __FlashArg=0x00000000
[08:14:43.977]    __FlashOp=0x00000000
[08:14:43.978]    __Result=0x00000000
[08:14:43.978]  </debugvars>
[08:14:43.978]  
[08:14:43.979]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[08:14:43.979]    <block atomic="false" info="">
[08:14:43.979]      __var nReset      = 0x80;
[08:14:43.979]        // -> [nReset <= 0x00000080]
[08:14:43.980]      DAP_SWJ_Pins(0x00, nReset, 0);
[08:14:43.981]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:14:43.982]    </block>
[08:14:43.982]    <control if="" while="1" timeout="50000" info="">
[08:14:43.982]      // while "1"  (timeout="50000")
[08:14:43.983]      // while-condition  =>  TRUE
[08:14:43.983]      // while "1"  (timeout="50000")
[08:14:43.983]      // while-condition  =>  TRUE
[08:14:43.984]      // while "1"  (timeout="50000")
[08:14:43.984]      // while-condition  =>  TRUE
[08:14:43.984]      // while "1"  (timeout="50000")
[08:14:43.984]      // while-condition  =>  TRUE
[08:14:43.985]      // while "1"  (timeout="50000")
[08:14:43.985]      // while-condition  =>  TRUE
[08:14:43.986]      // while "1"  (timeout="50000")
[08:14:43.986]      // while-condition  =>  TRUE
[08:14:43.986]      // while "1"  (timeout="50000")
[08:14:43.986]      // while-condition  =>  TRUE
[08:14:43.986]      // while "1"  (timeout="50000")
[08:14:43.987]      // while-condition  =>  TRUE
[08:14:43.987]      // while "1"  (timeout="50000")
[08:14:43.987]      // while-condition  =>  TRUE
[08:14:43.987]      // while "1"  (timeout="50000")
[08:14:43.988]      // while-condition  =>  TRUE
[08:14:43.988]      // while "1"  (timeout="50000")
[08:14:43.988]      // while-condition  =>  TRUE
[08:14:43.988]      // while "1"  (timeout="50000")
[08:14:43.988]      // while-condition  =>  TRUE
[08:14:43.989]      // while "1"  (timeout="50000")
[08:14:43.989]      // while-condition  =>  TRUE
[08:14:43.989]      // while "1"  (timeout="50000")
[08:14:43.989]      // while-condition  =>  TRUE
[08:14:43.989]      // while "1"  (timeout="50000")
[08:14:43.990]      // while-condition  =>  TRUE
[08:14:43.990]      // while "1"  (timeout="50000")
[08:14:43.990]      // while-condition  =>  TRUE
[08:14:43.990]      // while "1"  (timeout="50000")
[08:14:43.990]      // while-condition  =>  TRUE
[08:14:43.991]      // while "1"  (timeout="50000")
[08:14:43.991]      // while-condition  =>  TRUE
[08:14:43.991]      // while "1"  (timeout="50000")
[08:14:43.991]      // while-condition  =>  TRUE
[08:14:43.991]      // while "1"  (timeout="50000")
[08:14:43.991]      // while-condition  =>  TRUE
[08:14:43.992]      // while "1"  (timeout="50000")
[08:14:43.992]      // while-condition  =>  TRUE
[08:14:43.992]      // while "1"  (timeout="50000")
[08:14:43.992]      // while-condition  =>  TRUE
[08:14:43.992]      // while "1"  (timeout="50000")
[08:14:43.993]      // while-condition  =>  TRUE
[08:14:43.993]      // while "1"  (timeout="50000")
[08:14:43.993]      // while-condition  =>  TRUE
[08:14:43.993]      // while "1"  (timeout="50000")
[08:14:43.993]      // while-condition  =>  TRUE
[08:14:43.993]      // while "1"  (timeout="50000")
[08:14:43.993]      // while-condition  =>  TRUE
[08:14:43.993]      // while "1"  (timeout="50000")
[08:14:43.994]      // while-condition  =>  TRUE
[08:14:43.994]      // while "1"  (timeout="50000")
[08:14:43.994]      // while-condition  =>  TRUE
[08:14:43.995]      // while "1"  (timeout="50000")
[08:14:43.995]      // while-condition  =>  TRUE
[08:14:43.995]      // while "1"  (timeout="50000")
[08:14:43.995]      // while-condition  =>  TRUE
[08:14:43.995]      // while "1"  (timeout="50000")
[08:14:43.996]      // while-condition  =>  TRUE
[08:14:43.996]      // while "1"  (timeout="50000")
[08:14:43.996]      // while-condition  =>  TRUE
[08:14:43.996]      // while "1"  (timeout="50000")
[08:14:43.996]      // while-condition  =>  TRUE
[08:14:43.997]      // while "1"  (timeout="50000")
[08:14:43.997]      // while-condition  =>  TRUE
[08:14:43.997]      // while "1"  (timeout="50000")
[08:14:43.997]      // while-condition  =>  TRUE
[08:14:43.997]      // while "1"  (timeout="50000")
[08:14:43.998]      // while-condition  =>  TRUE
[08:14:43.998]      // while "1"  (timeout="50000")
[08:14:43.998]      // while-condition  =>  TRUE
[08:14:43.998]      // while "1"  (timeout="50000")
[08:14:43.998]      // while-condition  =>  TRUE
[08:14:43.999]      // while "1"  (timeout="50000")
[08:14:43.999]      // while-condition  =>  TRUE
[08:14:43.999]      // while "1"  (timeout="50000")
[08:14:43.999]      // while-condition  =>  TRUE
[08:14:43.999]      // while "1"  (timeout="50000")
[08:14:43.999]      // while-condition  =>  TRUE
[08:14:44.000]      // while "1"  (timeout="50000")
[08:14:44.000]      // while-condition  =>  TRUE
[08:14:44.000]      // while "1"  (timeout="50000")
[08:14:44.000]      // while-condition  =>  TRUE
[08:14:44.000]      // while "1"  (timeout="50000")
[08:14:44.001]      // while-condition  =>  TRUE
[08:14:44.001]      // while "1"  (timeout="50000")
[08:14:44.001]      // while-condition  =>  TRUE
[08:14:44.001]      // while "1"  (timeout="50000")
[08:14:44.001]      // while-condition  =>  TRUE
[08:14:44.002]      // while "1"  (timeout="50000")
[08:14:44.002]      // while-condition  =>  TRUE
[08:14:44.002]      // while "1"  (timeout="50000")
[08:14:44.002]      // while-condition  =>  TRUE
[08:14:44.002]      // while "1"  (timeout="50000")
[08:14:44.002]      // while-condition  =>  TRUE
[08:14:44.003]      // while "1"  (timeout="50000")
[08:14:44.003]      // while-condition  =>  TRUE
[08:14:44.003]      // while "1"  (timeout="50000")
[08:14:44.003]      // while-condition  =>  TRUE
[08:14:44.003]      // while "1"  (timeout="50000")
[08:14:44.004]      // while-condition  =>  TRUE
[08:14:44.004]      // while "1"  (timeout="50000")
[08:14:44.004]      // while-condition  =>  TRUE
[08:14:44.004]      // while "1"  (timeout="50000")
[08:14:44.004]      // while-condition  =>  TRUE
[08:14:44.005]      // while "1"  (timeout="50000")
[08:14:44.005]      // while-condition  =>  TRUE
[08:14:44.005]      // while "1"  (timeout="50000")
[08:14:44.005]      // while-condition  =>  TRUE
[08:14:44.005]      // while "1"  (timeout="50000")
[08:14:44.006]      // while-condition  =>  TRUE
[08:14:44.006]      // while "1"  (timeout="50000")
[08:14:44.006]      // while-condition  =>  TRUE
[08:14:44.006]      // while "1"  (timeout="50000")
[08:14:44.007]      // while-condition  =>  TRUE
[08:14:44.007]      // while "1"  (timeout="50000")
[08:14:44.007]      // while-condition  =>  TRUE
[08:14:44.007]      // while "1"  (timeout="50000")
[08:14:44.007]      // while-condition  =>  TRUE
[08:14:44.008]      // while "1"  (timeout="50000")
[08:14:44.008]      // while-condition  =>  TRUE
[08:14:44.008]      // while "1"  (timeout="50000")
[08:14:44.008]      // while-condition  =>  TRUE
[08:14:44.008]      // while "1"  (timeout="50000")
[08:14:44.009]      // while-condition  =>  TRUE
[08:14:44.009]      // while "1"  (timeout="50000")
[08:14:44.009]      // while-condition  =>  TRUE
[08:14:44.009]      // while "1"  (timeout="50000")
[08:14:44.009]      // while-condition  =>  TRUE
[08:14:44.010]      // while "1"  (timeout="50000")
[08:14:44.010]      // while-condition  =>  TRUE
[08:14:44.010]      // while "1"  (timeout="50000")
[08:14:44.010]      // while-condition  =>  TRUE
[08:14:44.010]      // while "1"  (timeout="50000")
[08:14:44.011]      // while-condition  =>  TRUE
[08:14:44.011]      // while "1"  (timeout="50000")
[08:14:44.011]      // while-condition  =>  TRUE
[08:14:44.011]      // while "1"  (timeout="50000")
[08:14:44.011]      // while-condition  =>  TRUE
[08:14:44.012]      // while "1"  (timeout="50000")
[08:14:44.012]      // while-condition  =>  TRUE
[08:14:44.012]      // while "1"  (timeout="50000")
[08:14:44.012]      // while-condition  =>  TRUE
[08:14:44.012]      // while "1"  (timeout="50000")
[08:14:44.013]      // while-condition  =>  TRUE
[08:14:44.013]      // while "1"  (timeout="50000")
[08:14:44.013]      // while-condition  =>  TRUE
[08:14:44.013]      // while "1"  (timeout="50000")
[08:14:44.013]      // while-condition  =>  TRUE
[08:14:44.013]      // while "1"  (timeout="50000")
[08:14:44.013]      // while-condition  =>  TRUE
[08:14:44.013]      // while "1"  (timeout="50000")
[08:14:44.014]      // while-condition  =>  TRUE
[08:14:44.014]      // while "1"  (timeout="50000")
[08:14:44.015]      // while-condition  =>  TRUE
[08:14:44.015]      // while "1"  (timeout="50000")
[08:14:44.015]      // while-condition  =>  TRUE
[08:14:44.015]      // while "1"  (timeout="50000")
[08:14:44.015]      // while-condition  =>  TRUE
[08:14:44.016]      // while "1"  (timeout="50000")
[08:14:44.016]      // while-condition  =>  TRUE
[08:14:44.016]      // while "1"  (timeout="50000")
[08:14:44.016]      // while-condition  =>  TRUE
[08:14:44.016]      // while "1"  (timeout="50000")
[08:14:44.016]      // while-condition  =>  TRUE
[08:14:44.017]      // while "1"  (timeout="50000")
[08:14:44.017]      // while-condition  =>  TRUE
[08:14:44.017]      // while "1"  (timeout="50000")
[08:14:44.017]      // while-condition  =>  TRUE
[08:14:44.017]      // while "1"  (timeout="50000")
[08:14:44.018]      // while-condition  =>  TRUE
[08:14:44.018]      // while "1"  (timeout="50000")
[08:14:44.018]      // while-condition  =>  TRUE
[08:14:44.018]      // while "1"  (timeout="50000")
[08:14:44.018]      // while-condition  =>  TRUE
[08:14:44.018]      // while "1"  (timeout="50000")
[08:14:44.018]      // while-condition  =>  TRUE
[08:14:44.019]      // while "1"  (timeout="50000")
[08:14:44.019]      // while-condition  =>  TRUE
[08:14:44.019]      // while "1"  (timeout="50000")
[08:14:44.019]      // while-condition  =>  TRUE
[08:14:44.020]      // while "1"  (timeout="50000")
[08:14:44.020]      // while-condition  =>  TRUE
[08:14:44.020]      // while "1"  (timeout="50000")
[08:14:44.020]      // while-condition  =>  TRUE
[08:14:44.021]      // while "1"  (timeout="50000")
[08:14:44.021]      // while-condition  =>  TRUE
[08:14:44.021]      // while "1"  (timeout="50000")
[08:14:44.021]      // while-condition  =>  TRUE
[08:14:44.022]      // while "1"  (timeout="50000")
[08:14:44.022]      // while-condition  =>  TRUE
[08:14:44.022]      // while "1"  (timeout="50000")
[08:14:44.022]      // while-condition  =>  TRUE
[08:14:44.023]      // while "1"  (timeout="50000")
[08:14:44.023]      // while-condition  =>  TRUE
[08:14:44.023]      // while "1"  (timeout="50000")
[08:14:44.023]      // while-condition  =>  TRUE
[08:14:44.024]      // while "1"  (timeout="50000")
[08:14:44.024]      // while-condition  =>  TRUE
[08:14:44.024]      // while "1"  (timeout="50000")
[08:14:44.024]      // while-condition  =>  TRUE
[08:14:44.025]      // while "1"  (timeout="50000")
[08:14:44.025]      // while-condition  =>  TRUE
[08:14:44.025]      // while "1"  (timeout="50000")
[08:14:44.026]      // while-condition  =>  TRUE
[08:14:44.026]      // while "1"  (timeout="50000")
[08:14:44.026]      // while-condition  =>  TRUE
[08:14:44.026]      // while "1"  (timeout="50000")
[08:14:44.026]      // while-condition  =>  TRUE
[08:14:44.027]      // while "1"  (timeout="50000")
[08:14:44.027]      // while-condition  =>  TRUE
[08:14:44.027]      // while "1"  (timeout="50000")
[08:14:44.027]      // while-condition  =>  TRUE
[08:14:44.027]      // while "1"  (timeout="50000")
[08:14:44.028]      // while-condition  =>  TRUE
[08:14:44.028]      // while "1"  (timeout="50000")
[08:14:44.028]      // while-condition  =>  TRUE
[08:14:44.028]      // while "1"  (timeout="50000")
[08:14:44.028]      // while-condition  =>  TRUE
[08:14:44.029]      // while "1"  (timeout="50000")
[08:14:44.029]      // while-condition  =>  TRUE
[08:14:44.029]      // while "1"  (timeout="50000")
[08:14:44.029]      // while-condition  =>  TRUE
[08:14:44.029]      // while "1"  (timeout="50000")
[08:14:44.030]      // while-condition  =>  TRUE
[08:14:44.030]      // while "1"  (timeout="50000")
[08:14:44.030]      // while-condition  =>  TRUE
[08:14:44.030]      // while "1"  (timeout="50000")
[08:14:44.030]      // while-condition  =>  TRUE
[08:14:44.030]      // while "1"  (timeout="50000")
[08:14:44.031]      // while-condition  =>  TRUE
[08:14:44.031]      // while "1"  (timeout="50000")
[08:14:44.031]      // while-condition  =>  TRUE
[08:14:44.031]      // while "1"  (timeout="50000")
[08:14:44.031]      // while-condition  =>  TRUE
[08:14:44.032]      // while "1"  (timeout="50000")
[08:14:44.032]      // while-condition  =>  TRUE
[08:14:44.032]      // while "1"  (timeout="50000")
[08:14:44.032]      // while-condition  =>  TRUE
[08:14:44.032]      // while "1"  (timeout="50000")
[08:14:44.032]      // while-condition  =>  TRUE
[08:14:44.032]      // while "1"  (timeout="50000")
[08:14:44.033]      // while-condition  =>  TRUE
[08:14:44.033]      // while "1"  (timeout="50000")
[08:14:44.033]      // while-condition  =>  TRUE
[08:14:44.033]      // while "1"  (timeout="50000")
[08:14:44.033]      // while-condition  =>  TRUE
[08:14:44.034]      // while "1"  (timeout="50000")
[08:14:44.034]      // while-condition  =>  TRUE
[08:14:44.034]      // while "1"  (timeout="50000")
[08:14:44.034]      // while-condition  =>  TRUE
[08:14:44.034]      // while "1"  (timeout="50000")
[08:14:44.035]      // while-condition  =>  TRUE
[08:14:44.035]      // while "1"  (timeout="50000")
[08:14:44.035]      // while-condition  =>  TRUE
[08:14:44.036]      // while "1"  (timeout="50000")
[08:14:44.036]      // while-condition  =>  TRUE
[08:14:44.036]      // while "1"  (timeout="50000")
[08:14:44.036]      // while-condition  =>  TRUE
[08:14:44.036]      // while "1"  (timeout="50000")
[08:14:44.037]      // while-condition  =>  TRUE
[08:14:44.037]      // while "1"  (timeout="50000")
[08:14:44.037]      // while-condition  =>  TRUE
[08:14:44.037]      // while "1"  (timeout="50000")
[08:14:44.038]      // while-condition  =>  TRUE
[08:14:44.038]      // while "1"  (timeout="50000")
[08:14:44.038]      // while-condition  =>  TRUE
[08:14:44.038]      // while "1"  (timeout="50000")
[08:14:44.038]      // while-condition  =>  TRUE
[08:14:44.039]      // while "1"  (timeout="50000")
[08:14:44.039]      // while-condition  =>  TRUE
[08:14:44.039]      // while "1"  (timeout="50000")
[08:14:44.039]      // while-condition  =>  TRUE
[08:14:44.039]      // while "1"  (timeout="50000")
[08:14:44.040]      // while-condition  =>  TRUE
[08:14:44.040]      // while "1"  (timeout="50000")
[08:14:44.040]      // while  =>  TIMEOUT
[08:14:44.040]      // end while "1"
[08:14:44.041]    </control>
[08:14:44.041]    <block atomic="false" info="">
[08:14:44.041]      DAP_SWJ_Pins(nReset, nReset, 0);
[08:14:44.051]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:14:44.061]    </block>
[08:14:44.062]    <control if="" while="1" timeout="10000" info="">
[08:14:44.063]      // while "1"  (timeout="10000")
[08:14:44.063]      // while-condition  =>  TRUE
[08:14:44.063]      // while "1"  (timeout="10000")
[08:14:44.064]      // while-condition  =>  TRUE
[08:14:44.064]      // while "1"  (timeout="10000")
[08:14:44.065]      // while-condition  =>  TRUE
[08:14:44.066]      // while "1"  (timeout="10000")
[08:14:44.066]      // while-condition  =>  TRUE
[08:14:44.066]      // while "1"  (timeout="10000")
[08:14:44.067]      // while-condition  =>  TRUE
[08:14:44.067]      // while "1"  (timeout="10000")
[08:14:44.067]      // while-condition  =>  TRUE
[08:14:44.068]      // while "1"  (timeout="10000")
[08:14:44.068]      // while-condition  =>  TRUE
[08:14:44.068]      // while "1"  (timeout="10000")
[08:14:44.068]      // while-condition  =>  TRUE
[08:14:44.069]      // while "1"  (timeout="10000")
[08:14:44.069]      // while-condition  =>  TRUE
[08:14:44.069]      // while "1"  (timeout="10000")
[08:14:44.069]      // while-condition  =>  TRUE
[08:14:44.070]      // while "1"  (timeout="10000")
[08:14:44.070]      // while-condition  =>  TRUE
[08:14:44.070]      // while "1"  (timeout="10000")
[08:14:44.070]      // while-condition  =>  TRUE
[08:14:44.071]      // while "1"  (timeout="10000")
[08:14:44.071]      // while  =>  TIMEOUT
[08:14:44.071]      // end while "1"
[08:14:44.071]    </control>
[08:14:44.072]    <block atomic="true" info="">
[08:14:44.072]      // ATOMIC SEQUENCE - EXECUTE
[08:14:44.073]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[08:14:44.073]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[08:14:44.073]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[08:14:44.073]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[08:14:44.074]      // ATOMIC SEQUENCE - DONE
[08:14:44.074]    </block>
[08:14:44.075]    <block atomic="false" info="">
[08:14:44.075]      __errorcontrol = 0x00000001;
[08:14:44.075]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[08:14:44.075]      ReadDP(0x0);
[08:14:44.076]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[08:14:44.077]      __errorcontrol = 0x00000000;
[08:14:44.077]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[08:14:44.077]    </block>
[08:14:44.077]  </sequence>
[08:14:44.077]  
[08:14:44.077]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[08:14:44.077]  
[08:14:44.078]  <debugvars>
[08:14:44.078]    // Pre-defined
[08:14:44.078]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:14:44.078]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:14:44.078]    __dp=0x00000000
[08:14:44.078]    __ap=0x00000000
[08:14:44.079]    __traceout=0x00000000      (Trace Disabled)
[08:14:44.079]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:14:44.079]    __FlashAddr=0x00000000
[08:14:44.079]    __FlashLen=0x00000000
[08:14:44.080]    __FlashArg=0x00000000
[08:14:44.080]    __FlashOp=0x00000000
[08:14:44.080]    __Result=0x00000000
[08:14:44.080]  </debugvars>
[08:14:44.080]  
[08:14:44.081]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[08:14:44.081]  </sequence>
[08:14:44.081]  
[08:14:44.083]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[08:14:44.083]  
[08:14:44.083]  <debugvars>
[08:14:44.083]    // Pre-defined
[08:14:44.084]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:14:44.084]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:14:44.084]    __dp=0x00000000
[08:14:44.084]    __ap=0x00000000
[08:14:44.084]    __traceout=0x00000000      (Trace Disabled)
[08:14:44.085]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:14:44.085]    __FlashAddr=0x00000000
[08:14:44.085]    __FlashLen=0x00000000
[08:14:44.085]    __FlashArg=0x00000000
[08:14:44.086]    __FlashOp=0x00000000
[08:14:44.086]    __Result=0x00000000
[08:14:44.086]  </debugvars>
[08:14:44.086]  
[08:14:44.087]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[08:14:44.087]    <block atomic="false" info="">
[08:14:44.087]      __var SW_DP_ABORT  = 0x0;
[08:14:44.087]        // -> [SW_DP_ABORT <= 0x00000000]
[08:14:44.087]      __var DP_CTRL_STAT = 0x4;
[08:14:44.088]        // -> [DP_CTRL_STAT <= 0x00000004]
[08:14:44.088]      __var DP_SELECT    = 0x8;
[08:14:44.088]        // -> [DP_SELECT <= 0x00000008]
[08:14:44.089]      __var powered_down = 0;
[08:14:44.089]        // -> [powered_down <= 0x00000000]
[08:14:44.089]      WriteDP(DP_SELECT, 0x00000000);
[08:14:44.091]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:14:44.091]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[08:14:44.093]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[08:14:44.093]        // -> [powered_down <= 0x00000001]
[08:14:44.093]    </block>
[08:14:44.094]    <control if="powered_down" while="" timeout="0" info="">
[08:14:44.094]      // if-block "powered_down"
[08:14:44.094]        // =>  TRUE
[08:14:44.095]      <block atomic="false" info="">
[08:14:44.095]        WriteDP(DP_CTRL_STAT, 0x50000000);
[08:14:44.115]  
[08:14:44.115]  !!! E310 : Debug access failed - cannot write value 0x50000000 to DP register 0x04
[08:14:44.115]  
[08:14:44.118]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[08:14:44.118]      </block>
[08:14:44.119]      // end if-block "powered_down"
[08:14:44.119]    </control>
[08:14:44.119]  </sequence>
[08:14:44.120]  
[08:14:45.555]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[08:14:45.555]  
[08:14:45.555]  <debugvars>
[08:14:45.556]    // Pre-defined
[08:14:45.556]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:14:45.556]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:14:45.556]    __dp=0x00000000
[08:14:45.557]    __ap=0x00000000
[08:14:45.557]    __traceout=0x00000000      (Trace Disabled)
[08:14:45.557]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:14:45.557]    __FlashAddr=0x00000000
[08:14:45.558]    __FlashLen=0x00000000
[08:14:45.558]    __FlashArg=0x00000000
[08:14:45.558]    __FlashOp=0x00000000
[08:14:45.558]    __Result=0x00000000
[08:14:45.558]  </debugvars>
[08:14:45.559]  
[08:14:45.559]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[08:14:45.559]    <block atomic="false" info="">
[08:14:45.560]      __var nReset      = 0x80;
[08:14:45.560]        // -> [nReset <= 0x00000080]
[08:14:45.560]      DAP_SWJ_Pins(0x00, nReset, 0);
[08:14:45.561]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:14:45.562]    </block>
[08:14:45.562]    <control if="" while="1" timeout="50000" info="">
[08:14:45.562]      // while "1"  (timeout="50000")
[08:14:45.563]      // while-condition  =>  TRUE
[08:14:45.563]      // while "1"  (timeout="50000")
[08:14:45.563]      // while-condition  =>  TRUE
[08:14:45.563]      // while "1"  (timeout="50000")
[08:14:45.564]      // while-condition  =>  TRUE
[08:14:45.564]      // while "1"  (timeout="50000")
[08:14:45.564]      // while-condition  =>  TRUE
[08:14:45.565]      // while "1"  (timeout="50000")
[08:14:45.565]      // while-condition  =>  TRUE
[08:14:45.565]      // while "1"  (timeout="50000")
[08:14:45.566]      // while-condition  =>  TRUE
[08:14:45.566]      // while "1"  (timeout="50000")
[08:14:45.566]      // while-condition  =>  TRUE
[08:14:45.567]      // while "1"  (timeout="50000")
[08:14:45.567]      // while-condition  =>  TRUE
[08:14:45.568]      // while "1"  (timeout="50000")
[08:14:45.568]      // while-condition  =>  TRUE
[08:14:45.568]      // while "1"  (timeout="50000")
[08:14:45.569]      // while-condition  =>  TRUE
[08:14:45.569]      // while "1"  (timeout="50000")
[08:14:45.570]      // while-condition  =>  TRUE
[08:14:45.570]      // while "1"  (timeout="50000")
[08:14:45.570]      // while-condition  =>  TRUE
[08:14:45.570]      // while "1"  (timeout="50000")
[08:14:45.571]      // while-condition  =>  TRUE
[08:14:45.571]      // while "1"  (timeout="50000")
[08:14:45.571]      // while-condition  =>  TRUE
[08:14:45.571]      // while "1"  (timeout="50000")
[08:14:45.572]      // while-condition  =>  TRUE
[08:14:45.572]      // while "1"  (timeout="50000")
[08:14:45.572]      // while-condition  =>  TRUE
[08:14:45.572]      // while "1"  (timeout="50000")
[08:14:45.572]      // while-condition  =>  TRUE
[08:14:45.573]      // while "1"  (timeout="50000")
[08:14:45.573]      // while-condition  =>  TRUE
[08:14:45.573]      // while "1"  (timeout="50000")
[08:14:45.573]      // while-condition  =>  TRUE
[08:14:45.574]      // while "1"  (timeout="50000")
[08:14:45.574]      // while-condition  =>  TRUE
[08:14:45.574]      // while "1"  (timeout="50000")
[08:14:45.574]      // while-condition  =>  TRUE
[08:14:45.575]      // while "1"  (timeout="50000")
[08:14:45.575]      // while-condition  =>  TRUE
[08:14:45.575]      // while "1"  (timeout="50000")
[08:14:45.576]      // while-condition  =>  TRUE
[08:14:45.576]      // while "1"  (timeout="50000")
[08:14:45.576]      // while-condition  =>  TRUE
[08:14:45.576]      // while "1"  (timeout="50000")
[08:14:45.577]      // while-condition  =>  TRUE
[08:14:45.577]      // while "1"  (timeout="50000")
[08:14:45.577]      // while-condition  =>  TRUE
[08:14:45.577]      // while "1"  (timeout="50000")
[08:14:45.578]      // while-condition  =>  TRUE
[08:14:45.578]      // while "1"  (timeout="50000")
[08:14:45.578]      // while-condition  =>  TRUE
[08:14:45.578]      // while "1"  (timeout="50000")
[08:14:45.579]      // while-condition  =>  TRUE
[08:14:45.579]      // while "1"  (timeout="50000")
[08:14:45.579]      // while-condition  =>  TRUE
[08:14:45.579]      // while "1"  (timeout="50000")
[08:14:45.580]      // while-condition  =>  TRUE
[08:14:45.580]      // while "1"  (timeout="50000")
[08:14:45.580]      // while-condition  =>  TRUE
[08:14:45.580]      // while "1"  (timeout="50000")
[08:14:45.580]      // while-condition  =>  TRUE
[08:14:45.581]      // while "1"  (timeout="50000")
[08:14:45.581]      // while-condition  =>  TRUE
[08:14:45.581]      // while "1"  (timeout="50000")
[08:14:45.581]      // while-condition  =>  TRUE
[08:14:45.582]      // while "1"  (timeout="50000")
[08:14:45.582]      // while-condition  =>  TRUE
[08:14:45.582]      // while "1"  (timeout="50000")
[08:14:45.583]      // while-condition  =>  TRUE
[08:14:45.584]      // while "1"  (timeout="50000")
[08:14:45.584]      // while-condition  =>  TRUE
[08:14:45.585]      // while "1"  (timeout="50000")
[08:14:45.585]      // while-condition  =>  TRUE
[08:14:45.585]      // while "1"  (timeout="50000")
[08:14:45.586]      // while-condition  =>  TRUE
[08:14:45.586]      // while "1"  (timeout="50000")
[08:14:45.586]      // while-condition  =>  TRUE
[08:14:45.587]      // while "1"  (timeout="50000")
[08:14:45.588]      // while-condition  =>  TRUE
[08:14:45.588]      // while "1"  (timeout="50000")
[08:14:45.588]      // while-condition  =>  TRUE
[08:14:45.588]      // while "1"  (timeout="50000")
[08:14:45.589]      // while-condition  =>  TRUE
[08:14:45.589]      // while "1"  (timeout="50000")
[08:14:45.589]      // while-condition  =>  TRUE
[08:14:45.589]      // while "1"  (timeout="50000")
[08:14:45.590]      // while-condition  =>  TRUE
[08:14:45.590]      // while "1"  (timeout="50000")
[08:14:45.590]      // while-condition  =>  TRUE
[08:14:45.590]      // while "1"  (timeout="50000")
[08:14:45.590]      // while-condition  =>  TRUE
[08:14:45.591]      // while "1"  (timeout="50000")
[08:14:45.591]      // while-condition  =>  TRUE
[08:14:45.591]      // while "1"  (timeout="50000")
[08:14:45.591]      // while-condition  =>  TRUE
[08:14:45.592]      // while "1"  (timeout="50000")
[08:14:45.592]      // while-condition  =>  TRUE
[08:14:45.592]      // while "1"  (timeout="50000")
[08:14:45.592]      // while-condition  =>  TRUE
[08:14:45.593]      // while "1"  (timeout="50000")
[08:14:45.593]      // while-condition  =>  TRUE
[08:14:45.593]      // while "1"  (timeout="50000")
[08:14:45.593]      // while-condition  =>  TRUE
[08:14:45.593]      // while "1"  (timeout="50000")
[08:14:45.594]      // while-condition  =>  TRUE
[08:14:45.594]      // while "1"  (timeout="50000")
[08:14:45.594]      // while-condition  =>  TRUE
[08:14:45.594]      // while "1"  (timeout="50000")
[08:14:45.595]      // while-condition  =>  TRUE
[08:14:45.595]      // while "1"  (timeout="50000")
[08:14:45.595]      // while-condition  =>  TRUE
[08:14:45.595]      // while "1"  (timeout="50000")
[08:14:45.596]      // while-condition  =>  TRUE
[08:14:45.596]      // while "1"  (timeout="50000")
[08:14:45.596]      // while-condition  =>  TRUE
[08:14:45.596]      // while "1"  (timeout="50000")
[08:14:45.597]      // while-condition  =>  TRUE
[08:14:45.597]      // while "1"  (timeout="50000")
[08:14:45.597]      // while-condition  =>  TRUE
[08:14:45.598]      // while "1"  (timeout="50000")
[08:14:45.598]      // while-condition  =>  TRUE
[08:14:45.599]      // while "1"  (timeout="50000")
[08:14:45.599]      // while-condition  =>  TRUE
[08:14:45.599]      // while "1"  (timeout="50000")
[08:14:45.600]      // while-condition  =>  TRUE
[08:14:45.600]      // while "1"  (timeout="50000")
[08:14:45.600]      // while-condition  =>  TRUE
[08:14:45.601]      // while "1"  (timeout="50000")
[08:14:45.601]      // while-condition  =>  TRUE
[08:14:45.601]      // while "1"  (timeout="50000")
[08:14:45.602]      // while-condition  =>  TRUE
[08:14:45.602]      // while "1"  (timeout="50000")
[08:14:45.603]      // while-condition  =>  TRUE
[08:14:45.603]      // while "1"  (timeout="50000")
[08:14:45.603]      // while-condition  =>  TRUE
[08:14:45.603]      // while "1"  (timeout="50000")
[08:14:45.604]      // while-condition  =>  TRUE
[08:14:45.604]      // while "1"  (timeout="50000")
[08:14:45.604]      // while-condition  =>  TRUE
[08:14:45.604]      // while "1"  (timeout="50000")
[08:14:45.605]      // while-condition  =>  TRUE
[08:14:45.605]      // while "1"  (timeout="50000")
[08:14:45.605]      // while-condition  =>  TRUE
[08:14:45.605]      // while "1"  (timeout="50000")
[08:14:45.606]      // while-condition  =>  TRUE
[08:14:45.606]      // while "1"  (timeout="50000")
[08:14:45.606]      // while-condition  =>  TRUE
[08:14:45.606]      // while "1"  (timeout="50000")
[08:14:45.607]      // while-condition  =>  TRUE
[08:14:45.607]      // while "1"  (timeout="50000")
[08:14:45.607]      // while-condition  =>  TRUE
[08:14:45.607]      // while "1"  (timeout="50000")
[08:14:45.608]      // while-condition  =>  TRUE
[08:14:45.608]      // while "1"  (timeout="50000")
[08:14:45.608]      // while-condition  =>  TRUE
[08:14:45.608]      // while "1"  (timeout="50000")
[08:14:45.608]      // while-condition  =>  TRUE
[08:14:45.609]      // while "1"  (timeout="50000")
[08:14:45.609]      // while-condition  =>  TRUE
[08:14:45.609]      // while "1"  (timeout="50000")
[08:14:45.609]      // while-condition  =>  TRUE
[08:14:45.610]      // while "1"  (timeout="50000")
[08:14:45.610]      // while-condition  =>  TRUE
[08:14:45.610]      // while "1"  (timeout="50000")
[08:14:45.610]      // while-condition  =>  TRUE
[08:14:45.611]      // while "1"  (timeout="50000")
[08:14:45.611]      // while-condition  =>  TRUE
[08:14:45.611]      // while "1"  (timeout="50000")
[08:14:45.611]      // while-condition  =>  TRUE
[08:14:45.612]      // while "1"  (timeout="50000")
[08:14:45.612]      // while-condition  =>  TRUE
[08:14:45.612]      // while "1"  (timeout="50000")
[08:14:45.612]      // while-condition  =>  TRUE
[08:14:45.612]      // while "1"  (timeout="50000")
[08:14:45.613]      // while-condition  =>  TRUE
[08:14:45.613]      // while "1"  (timeout="50000")
[08:14:45.613]      // while-condition  =>  TRUE
[08:14:45.614]      // while "1"  (timeout="50000")
[08:14:45.614]      // while-condition  =>  TRUE
[08:14:45.614]      // while "1"  (timeout="50000")
[08:14:45.614]      // while-condition  =>  TRUE
[08:14:45.614]      // while "1"  (timeout="50000")
[08:14:45.615]      // while-condition  =>  TRUE
[08:14:45.615]      // while "1"  (timeout="50000")
[08:14:45.615]      // while-condition  =>  TRUE
[08:14:45.615]      // while "1"  (timeout="50000")
[08:14:45.616]      // while-condition  =>  TRUE
[08:14:45.616]      // while "1"  (timeout="50000")
[08:14:45.616]      // while-condition  =>  TRUE
[08:14:45.617]      // while "1"  (timeout="50000")
[08:14:45.617]      // while  =>  TIMEOUT
[08:14:45.618]      // end while "1"
[08:14:45.618]    </control>
[08:14:45.618]    <block atomic="false" info="">
[08:14:45.618]      DAP_SWJ_Pins(nReset, nReset, 0);
[08:14:45.628]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:14:45.644]    </block>
[08:14:45.644]  </sequence>
[08:14:45.644]  
[08:14:48.413]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[08:14:48.413]  
[08:14:48.413]  <debugvars>
[08:14:48.413]    // Pre-defined
[08:14:48.414]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:14:48.414]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[08:14:48.415]    __dp=0x00000000
[08:14:48.415]    __ap=0x00000000
[08:14:48.416]    __traceout=0x00000000      (Trace Disabled)
[08:14:48.416]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:14:48.416]    __FlashAddr=0x00000000
[08:14:48.416]    __FlashLen=0x00000000
[08:14:48.417]    __FlashArg=0x00000000
[08:14:48.418]    __FlashOp=0x00000000
[08:14:48.418]    __Result=0x00000000
[08:14:48.419]  </debugvars>
[08:14:48.419]  
[08:14:48.419]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[08:14:48.419]    <block atomic="false" info="">
[08:14:48.420]      __var nReset      = 0x80;
[08:14:48.420]        // -> [nReset <= 0x00000080]
[08:14:48.420]      DAP_SWJ_Pins(0x00, nReset, 0);
[08:14:48.422]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:14:48.422]    </block>
[08:14:48.423]    <control if="" while="1" timeout="50000" info="">
[08:14:48.423]      // while "1"  (timeout="50000")
[08:14:48.423]      // while-condition  =>  TRUE
[08:14:48.423]      // while "1"  (timeout="50000")
[08:14:48.424]      // while-condition  =>  TRUE
[08:14:48.424]      // while "1"  (timeout="50000")
[08:14:48.424]      // while-condition  =>  TRUE
[08:14:48.424]      // while "1"  (timeout="50000")
[08:14:48.424]      // while-condition  =>  TRUE
[08:14:48.425]      // while "1"  (timeout="50000")
[08:14:48.425]      // while-condition  =>  TRUE
[08:14:48.425]      // while "1"  (timeout="50000")
[08:14:48.425]      // while-condition  =>  TRUE
[08:14:48.426]      // while "1"  (timeout="50000")
[08:14:48.426]      // while-condition  =>  TRUE
[08:14:48.427]      // while "1"  (timeout="50000")
[08:14:48.427]      // while-condition  =>  TRUE
[08:14:48.427]      // while "1"  (timeout="50000")
[08:14:48.427]      // while-condition  =>  TRUE
[08:14:48.428]      // while "1"  (timeout="50000")
[08:14:48.428]      // while-condition  =>  TRUE
[08:14:48.428]      // while "1"  (timeout="50000")
[08:14:48.428]      // while-condition  =>  TRUE
[08:14:48.428]      // while "1"  (timeout="50000")
[08:14:48.429]      // while-condition  =>  TRUE
[08:14:48.430]      // while "1"  (timeout="50000")
[08:14:48.430]      // while-condition  =>  TRUE
[08:14:48.430]      // while "1"  (timeout="50000")
[08:14:48.430]      // while-condition  =>  TRUE
[08:14:48.431]      // while "1"  (timeout="50000")
[08:14:48.431]      // while-condition  =>  TRUE
[08:14:48.431]      // while "1"  (timeout="50000")
[08:14:48.431]      // while-condition  =>  TRUE
[08:14:48.432]      // while "1"  (timeout="50000")
[08:14:48.432]      // while-condition  =>  TRUE
[08:14:48.432]      // while "1"  (timeout="50000")
[08:14:48.432]      // while-condition  =>  TRUE
[08:14:48.433]      // while "1"  (timeout="50000")
[08:14:48.433]      // while-condition  =>  TRUE
[08:14:48.433]      // while "1"  (timeout="50000")
[08:14:48.433]      // while-condition  =>  TRUE
[08:14:48.434]      // while "1"  (timeout="50000")
[08:14:48.434]      // while-condition  =>  TRUE
[08:14:48.434]      // while "1"  (timeout="50000")
[08:14:48.434]      // while-condition  =>  TRUE
[08:14:48.434]      // while "1"  (timeout="50000")
[08:14:48.435]      // while-condition  =>  TRUE
[08:14:48.435]      // while "1"  (timeout="50000")
[08:14:48.435]      // while-condition  =>  TRUE
[08:14:48.435]      // while "1"  (timeout="50000")
[08:14:48.435]      // while-condition  =>  TRUE
[08:14:48.436]      // while "1"  (timeout="50000")
[08:14:48.436]      // while-condition  =>  TRUE
[08:14:48.436]      // while "1"  (timeout="50000")
[08:14:48.436]      // while-condition  =>  TRUE
[08:14:48.436]      // while "1"  (timeout="50000")
[08:14:48.437]      // while-condition  =>  TRUE
[08:14:48.437]      // while "1"  (timeout="50000")
[08:14:48.437]      // while-condition  =>  TRUE
[08:14:48.437]      // while "1"  (timeout="50000")
[08:14:48.437]      // while-condition  =>  TRUE
[08:14:48.438]      // while "1"  (timeout="50000")
[08:14:48.438]      // while-condition  =>  TRUE
[08:14:48.438]      // while "1"  (timeout="50000")
[08:14:48.438]      // while-condition  =>  TRUE
[08:14:48.438]      // while "1"  (timeout="50000")
[08:14:48.439]      // while-condition  =>  TRUE
[08:14:48.439]      // while "1"  (timeout="50000")
[08:14:48.439]      // while-condition  =>  TRUE
[08:14:48.439]      // while "1"  (timeout="50000")
[08:14:48.439]      // while-condition  =>  TRUE
[08:14:48.440]      // while "1"  (timeout="50000")
[08:14:48.440]      // while-condition  =>  TRUE
[08:14:48.440]      // while "1"  (timeout="50000")
[08:14:48.440]      // while-condition  =>  TRUE
[08:14:48.440]      // while "1"  (timeout="50000")
[08:14:48.441]      // while-condition  =>  TRUE
[08:14:48.441]      // while "1"  (timeout="50000")
[08:14:48.441]      // while-condition  =>  TRUE
[08:14:48.441]      // while "1"  (timeout="50000")
[08:14:48.441]      // while-condition  =>  TRUE
[08:14:48.442]      // while "1"  (timeout="50000")
[08:14:48.442]      // while-condition  =>  TRUE
[08:14:48.442]      // while "1"  (timeout="50000")
[08:14:48.442]      // while-condition  =>  TRUE
[08:14:48.443]      // while "1"  (timeout="50000")
[08:14:48.443]      // while-condition  =>  TRUE
[08:14:48.443]      // while "1"  (timeout="50000")
[08:14:48.443]      // while-condition  =>  TRUE
[08:14:48.444]      // while "1"  (timeout="50000")
[08:14:48.444]      // while-condition  =>  TRUE
[08:14:48.444]      // while "1"  (timeout="50000")
[08:14:48.444]      // while-condition  =>  TRUE
[08:14:48.444]      // while "1"  (timeout="50000")
[08:14:48.445]      // while-condition  =>  TRUE
[08:14:48.445]      // while "1"  (timeout="50000")
[08:14:48.445]      // while-condition  =>  TRUE
[08:14:48.446]      // while "1"  (timeout="50000")
[08:14:48.446]      // while-condition  =>  TRUE
[08:14:48.446]      // while "1"  (timeout="50000")
[08:14:48.446]      // while-condition  =>  TRUE
[08:14:48.447]      // while "1"  (timeout="50000")
[08:14:48.447]      // while-condition  =>  TRUE
[08:14:48.447]      // while "1"  (timeout="50000")
[08:14:48.447]      // while-condition  =>  TRUE
[08:14:48.447]      // while "1"  (timeout="50000")
[08:14:48.447]      // while-condition  =>  TRUE
[08:14:48.448]      // while "1"  (timeout="50000")
[08:14:48.448]      // while-condition  =>  TRUE
[08:14:48.448]      // while "1"  (timeout="50000")
[08:14:48.448]      // while-condition  =>  TRUE
[08:14:48.448]      // while "1"  (timeout="50000")
[08:14:48.449]      // while-condition  =>  TRUE
[08:14:48.449]      // while "1"  (timeout="50000")
[08:14:48.449]      // while-condition  =>  TRUE
[08:14:48.449]      // while "1"  (timeout="50000")
[08:14:48.449]      // while-condition  =>  TRUE
[08:14:48.450]      // while "1"  (timeout="50000")
[08:14:48.450]      // while-condition  =>  TRUE
[08:14:48.450]      // while "1"  (timeout="50000")
[08:14:48.450]      // while-condition  =>  TRUE
[08:14:48.450]      // while "1"  (timeout="50000")
[08:14:48.450]      // while-condition  =>  TRUE
[08:14:48.451]      // while "1"  (timeout="50000")
[08:14:48.451]      // while-condition  =>  TRUE
[08:14:48.451]      // while "1"  (timeout="50000")
[08:14:48.451]      // while-condition  =>  TRUE
[08:14:48.451]      // while "1"  (timeout="50000")
[08:14:48.451]      // while-condition  =>  TRUE
[08:14:48.451]      // while "1"  (timeout="50000")
[08:14:48.451]      // while-condition  =>  TRUE
[08:14:48.451]      // while "1"  (timeout="50000")
[08:14:48.452]      // while-condition  =>  TRUE
[08:14:48.452]      // while "1"  (timeout="50000")
[08:14:48.452]      // while-condition  =>  TRUE
[08:14:48.452]      // while "1"  (timeout="50000")
[08:14:48.452]      // while-condition  =>  TRUE
[08:14:48.453]      // while "1"  (timeout="50000")
[08:14:48.453]      // while-condition  =>  TRUE
[08:14:48.453]      // while "1"  (timeout="50000")
[08:14:48.453]      // while-condition  =>  TRUE
[08:14:48.453]      // while "1"  (timeout="50000")
[08:14:48.454]      // while-condition  =>  TRUE
[08:14:48.454]      // while "1"  (timeout="50000")
[08:14:48.454]      // while-condition  =>  TRUE
[08:14:48.454]      // while "1"  (timeout="50000")
[08:14:48.454]      // while-condition  =>  TRUE
[08:14:48.456]      // while "1"  (timeout="50000")
[08:14:48.457]      // while-condition  =>  TRUE
[08:14:48.457]      // while "1"  (timeout="50000")
[08:14:48.457]      // while-condition  =>  TRUE
[08:14:48.458]      // while "1"  (timeout="50000")
[08:14:48.458]      // while-condition  =>  TRUE
[08:14:48.458]      // while "1"  (timeout="50000")
[08:14:48.458]      // while-condition  =>  TRUE
[08:14:48.458]      // while "1"  (timeout="50000")
[08:14:48.458]      // while-condition  =>  TRUE
[08:14:48.459]      // while "1"  (timeout="50000")
[08:14:48.459]      // while-condition  =>  TRUE
[08:14:48.459]      // while "1"  (timeout="50000")
[08:14:48.459]      // while-condition  =>  TRUE
[08:14:48.459]      // while "1"  (timeout="50000")
[08:14:48.460]      // while-condition  =>  TRUE
[08:14:48.460]      // while "1"  (timeout="50000")
[08:14:48.460]      // while-condition  =>  TRUE
[08:14:48.460]      // while "1"  (timeout="50000")
[08:14:48.460]      // while-condition  =>  TRUE
[08:14:48.461]      // while "1"  (timeout="50000")
[08:14:48.461]      // while-condition  =>  TRUE
[08:14:48.461]      // while "1"  (timeout="50000")
[08:14:48.461]      // while-condition  =>  TRUE
[08:14:48.461]      // while "1"  (timeout="50000")
[08:14:48.461]      // while-condition  =>  TRUE
[08:14:48.461]      // while "1"  (timeout="50000")
[08:14:48.462]      // while-condition  =>  TRUE
[08:14:48.462]      // while "1"  (timeout="50000")
[08:14:48.462]      // while-condition  =>  TRUE
[08:14:48.463]      // while "1"  (timeout="50000")
[08:14:48.463]      // while-condition  =>  TRUE
[08:14:48.463]      // while "1"  (timeout="50000")
[08:14:48.463]      // while-condition  =>  TRUE
[08:14:48.463]      // while "1"  (timeout="50000")
[08:14:48.464]      // while-condition  =>  TRUE
[08:14:48.464]      // while "1"  (timeout="50000")
[08:14:48.464]      // while-condition  =>  TRUE
[08:14:48.464]      // while "1"  (timeout="50000")
[08:14:48.464]      // while-condition  =>  TRUE
[08:14:48.464]      // while "1"  (timeout="50000")
[08:14:48.465]      // while-condition  =>  TRUE
[08:14:48.465]      // while "1"  (timeout="50000")
[08:14:48.465]      // while-condition  =>  TRUE
[08:14:48.465]      // while "1"  (timeout="50000")
[08:14:48.465]      // while-condition  =>  TRUE
[08:14:48.466]      // while "1"  (timeout="50000")
[08:14:48.466]      // while-condition  =>  TRUE
[08:14:48.466]      // while "1"  (timeout="50000")
[08:14:48.466]      // while-condition  =>  TRUE
[08:14:48.466]      // while "1"  (timeout="50000")
[08:14:48.466]      // while-condition  =>  TRUE
[08:14:48.466]      // while "1"  (timeout="50000")
[08:14:48.466]      // while-condition  =>  TRUE
[08:14:48.466]      // while "1"  (timeout="50000")
[08:14:48.466]      // while-condition  =>  TRUE
[08:14:48.467]      // while "1"  (timeout="50000")
[08:14:48.467]      // while-condition  =>  TRUE
[08:14:48.467]      // while "1"  (timeout="50000")
[08:14:48.467]      // while-condition  =>  TRUE
[08:14:48.467]      // while "1"  (timeout="50000")
[08:14:48.468]      // while-condition  =>  TRUE
[08:14:48.469]      // while "1"  (timeout="50000")
[08:14:48.469]      // while-condition  =>  TRUE
[08:14:48.469]      // while "1"  (timeout="50000")
[08:14:48.469]      // while-condition  =>  TRUE
[08:14:48.469]      // while "1"  (timeout="50000")
[08:14:48.470]      // while-condition  =>  TRUE
[08:14:48.470]      // while "1"  (timeout="50000")
[08:14:48.470]      // while-condition  =>  TRUE
[08:14:48.470]      // while "1"  (timeout="50000")
[08:14:48.470]      // while-condition  =>  TRUE
[08:14:48.471]      // while "1"  (timeout="50000")
[08:14:48.471]      // while-condition  =>  TRUE
[08:14:48.471]      // while "1"  (timeout="50000")
[08:14:48.471]      // while-condition  =>  TRUE
[08:14:48.471]      // while "1"  (timeout="50000")
[08:14:48.472]      // while-condition  =>  TRUE
[08:14:48.472]      // while "1"  (timeout="50000")
[08:14:48.472]      // while-condition  =>  TRUE
[08:14:48.472]      // while "1"  (timeout="50000")
[08:14:48.472]      // while-condition  =>  TRUE
[08:14:48.472]      // while "1"  (timeout="50000")
[08:14:48.473]      // while-condition  =>  TRUE
[08:14:48.473]      // while "1"  (timeout="50000")
[08:14:48.473]      // while-condition  =>  TRUE
[08:14:48.473]      // while "1"  (timeout="50000")
[08:14:48.473]      // while-condition  =>  TRUE
[08:14:48.474]      // while "1"  (timeout="50000")
[08:14:48.474]      // while-condition  =>  TRUE
[08:14:48.474]      // while "1"  (timeout="50000")
[08:14:48.474]      // while-condition  =>  TRUE
[08:14:48.474]      // while "1"  (timeout="50000")
[08:14:48.474]      // while-condition  =>  TRUE
[08:14:48.474]      // while "1"  (timeout="50000")
[08:14:48.475]      // while-condition  =>  TRUE
[08:14:48.475]      // while "1"  (timeout="50000")
[08:14:48.475]      // while-condition  =>  TRUE
[08:14:48.475]      // while "1"  (timeout="50000")
[08:14:48.475]      // while-condition  =>  TRUE
[08:14:48.476]      // while "1"  (timeout="50000")
[08:14:48.476]      // while-condition  =>  TRUE
[08:14:48.476]      // while "1"  (timeout="50000")
[08:14:48.476]      // while-condition  =>  TRUE
[08:14:48.476]      // while "1"  (timeout="50000")
[08:14:48.477]      // while-condition  =>  TRUE
[08:14:48.477]      // while "1"  (timeout="50000")
[08:14:48.477]      // while  =>  TIMEOUT
[08:14:48.477]      // end while "1"
[08:14:48.478]    </control>
[08:14:48.478]    <block atomic="false" info="">
[08:14:48.478]      DAP_SWJ_Pins(nReset, nReset, 0);
[08:14:48.488]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:14:48.489]    </block>
[08:14:48.489]    <control if="" while="1" timeout="10000" info="">
[08:14:48.490]      // while "1"  (timeout="10000")
[08:14:48.491]      // while-condition  =>  TRUE
[08:14:48.491]      // while "1"  (timeout="10000")
[08:14:48.492]      // while-condition  =>  TRUE
[08:14:48.493]      // while "1"  (timeout="10000")
[08:14:48.493]      // while  =>  TIMEOUT
[08:14:48.494]      // end while "1"
[08:14:48.494]    </control>
[08:14:48.495]    <block atomic="true" info="">
[08:14:48.495]      // ATOMIC SEQUENCE - EXECUTE
[08:14:48.496]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[08:14:48.497]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[08:14:48.497]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[08:14:48.498]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[08:14:48.498]      // ATOMIC SEQUENCE - DONE
[08:14:48.498]    </block>
[08:14:48.499]    <block atomic="false" info="">
[08:14:48.499]      __errorcontrol = 0x00000001;
[08:14:48.499]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[08:14:48.500]      ReadDP(0x0);
[08:14:48.502]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[08:14:48.503]      __errorcontrol = 0x00000000;
[08:14:48.503]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[08:14:48.503]    </block>
[08:14:48.504]  </sequence>
[08:14:48.505]  
[08:14:48.505]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[08:14:48.505]  
[08:14:48.505]  <debugvars>
[08:14:48.506]    // Pre-defined
[08:14:48.506]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:14:48.506]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:14:48.507]    __dp=0x00000000
[08:14:48.507]    __ap=0x00000000
[08:14:48.507]    __traceout=0x00000000      (Trace Disabled)
[08:14:48.508]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:14:48.508]    __FlashAddr=0x00000000
[08:14:48.508]    __FlashLen=0x00000000
[08:14:48.508]    __FlashArg=0x00000000
[08:14:48.509]    __FlashOp=0x00000000
[08:14:48.509]    __Result=0x00000000
[08:14:48.509]  </debugvars>
[08:14:48.510]  
[08:14:48.510]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[08:14:48.510]  </sequence>
[08:14:48.510]  
[08:14:48.512]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[08:14:48.512]  
[08:14:48.513]  <debugvars>
[08:14:48.513]    // Pre-defined
[08:14:48.513]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:14:48.514]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:14:48.515]    __dp=0x00000000
[08:14:48.515]    __ap=0x00000000
[08:14:48.516]    __traceout=0x00000000      (Trace Disabled)
[08:14:48.516]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:14:48.516]    __FlashAddr=0x00000000
[08:14:48.516]    __FlashLen=0x00000000
[08:14:48.517]    __FlashArg=0x00000000
[08:14:48.517]    __FlashOp=0x00000000
[08:14:48.517]    __Result=0x00000000
[08:14:48.517]  </debugvars>
[08:14:48.518]  
[08:14:48.518]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[08:14:48.518]    <block atomic="false" info="">
[08:14:48.518]      __var SW_DP_ABORT  = 0x0;
[08:14:48.518]        // -> [SW_DP_ABORT <= 0x00000000]
[08:14:48.518]      __var DP_CTRL_STAT = 0x4;
[08:14:48.519]        // -> [DP_CTRL_STAT <= 0x00000004]
[08:14:48.519]      __var DP_SELECT    = 0x8;
[08:14:48.519]        // -> [DP_SELECT <= 0x00000008]
[08:14:48.519]      __var powered_down = 0;
[08:14:48.519]        // -> [powered_down <= 0x00000000]
[08:14:48.520]      WriteDP(DP_SELECT, 0x00000000);
[08:14:48.522]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:14:48.522]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[08:14:48.524]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[08:14:48.525]        // -> [powered_down <= 0x00000001]
[08:14:48.525]    </block>
[08:14:48.525]    <control if="powered_down" while="" timeout="0" info="">
[08:14:48.525]      // if-block "powered_down"
[08:14:48.526]        // =>  TRUE
[08:14:48.526]      <block atomic="false" info="">
[08:14:48.526]        WriteDP(DP_CTRL_STAT, 0x50000000);
[08:14:48.527]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[08:14:48.528]      </block>
[08:14:48.528]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[08:14:48.528]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[08:14:48.530]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[08:14:48.530]        // while-condition  =>  FALSE
[08:14:48.531]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[08:14:48.531]      </control>
[08:14:48.531]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[08:14:48.531]        // if-block "(__protocol & 0xFFFF) == 1"
[08:14:48.532]          // =>  FALSE
[08:14:48.532]        // skip if-block "(__protocol & 0xFFFF) == 1"
[08:14:48.532]      </control>
[08:14:48.533]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[08:14:48.533]        // if-block "(__protocol & 0xFFFF) == 2"
[08:14:48.533]          // =>  TRUE
[08:14:48.533]        <block atomic="false" info="">
[08:14:48.534]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[08:14:48.535]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[08:14:48.535]          WriteDP(SW_DP_ABORT, 0x0000001E);
[08:14:48.537]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[08:14:48.537]        </block>
[08:14:48.537]        // end if-block "(__protocol & 0xFFFF) == 2"
[08:14:48.537]      </control>
[08:14:48.537]      // end if-block "powered_down"
[08:14:48.538]    </control>
[08:14:48.538]  </sequence>
[08:14:48.538]  
[08:14:48.595]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[08:14:48.595]  
[08:14:48.596]  <debugvars>
[08:14:48.596]    // Pre-defined
[08:14:48.597]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:14:48.597]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:14:48.598]    __dp=0x00000000
[08:14:48.598]    __ap=0x00000000
[08:14:48.599]    __traceout=0x00000000      (Trace Disabled)
[08:14:48.600]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:14:48.600]    __FlashAddr=0x00000000
[08:14:48.601]    __FlashLen=0x00000000
[08:14:48.601]    __FlashArg=0x00000000
[08:14:48.601]    __FlashOp=0x00000000
[08:14:48.602]    __Result=0x00000000
[08:14:48.602]  </debugvars>
[08:14:48.602]  
[08:14:48.603]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[08:14:48.603]    <block atomic="true" info="">
[08:14:48.603]      // ATOMIC SEQUENCE - EXECUTE
[08:14:48.605]      __var DP_R_IDCODE    = 0x0;
[08:14:48.605]        // -> [DP_R_IDCODE <= 0x00000000]
[08:14:48.605]      __var DP_W_ABORT    = 0x0;
[08:14:48.605]        // -> [DP_W_ABORT <= 0x00000000]
[08:14:48.607]      __var DP_CTRLSTAT = 0x4;
[08:14:48.607]        // -> [DP_CTRLSTAT <= 0x00000004]
[08:14:48.607]      __var DP_W_SELECT    = 0x8;
[08:14:48.608]        // -> [DP_W_SELECT <= 0x00000008]
[08:14:48.608]      __var AP_TAR		= 0x4;
[08:14:48.608]        // -> [AP_TAR <= 0x00000004]
[08:14:48.609]      __var AP_BD0		= 0x0;
[08:14:48.609]        // -> [AP_BD0 <= 0x00000000]
[08:14:48.609]      __var AP_BD1		= 0x4;
[08:14:48.609]        // -> [AP_BD1 <= 0x00000004]
[08:14:48.610]      __var AP_BD2		= 0x8;
[08:14:48.610]        // -> [AP_BD2 <= 0x00000008]
[08:14:48.610]      __var PCWithinFlash = 0;
[08:14:48.611]        // -> [PCWithinFlash <= 0x00000000]
[08:14:48.611]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[08:14:48.611]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[08:14:48.611]      // ATOMIC SEQUENCE - DONE
[08:14:48.611]    </block>
[08:14:48.611]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[08:14:48.612]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[08:14:48.615]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[08:14:48.615]      // while-condition  =>  FALSE
[08:14:48.615]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[08:14:48.615]    </control>
[08:14:48.616]    <block atomic="true" info="">
[08:14:48.616]      // ATOMIC SEQUENCE - EXECUTE
[08:14:48.618]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:14:48.618]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:14:48.618]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[08:14:48.618]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[08:14:48.619]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[08:14:48.619]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[08:14:48.619]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[08:14:48.619]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[08:14:48.619]      // ATOMIC SEQUENCE - DONE
[08:14:48.620]    </block>
[08:14:48.620]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[08:14:48.620]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:14:48.622]        // -> [ReadAP(0x00000000) => 0x01030003]   (__dp=0x00000000, __ap=0x00000000)
[08:14:48.623]      // while-condition  =>  FALSE
[08:14:48.623]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[08:14:48.623]    </control>
[08:14:48.623]    <block atomic="false" info="">
[08:14:48.624]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[08:14:48.625]        // -> [ReadAP(0x00000008) => 0x10000820]   (__dp=0x00000000, __ap=0x00000000)
[08:14:48.626]        // -> [PCWithinFlash <= 0x00000001]
[08:14:48.626]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:14:48.627]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:14:48.628]    </block>
[08:14:48.628]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[08:14:48.628]      // if-block "PCWithinFlash == 0"
[08:14:48.628]        // =>  FALSE
[08:14:48.628]      // skip if-block "PCWithinFlash == 0"
[08:14:48.629]    </control>
[08:14:48.629]  </sequence>
[08:14:48.630]  
[08:14:48.670]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[08:14:48.670]  
[08:14:48.672]  <debugvars>
[08:14:48.672]    // Pre-defined
[08:14:48.673]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:14:48.674]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:14:48.674]    __dp=0x00000000
[08:14:48.675]    __ap=0x00000000
[08:14:48.675]    __traceout=0x00000000      (Trace Disabled)
[08:14:48.676]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:14:48.677]    __FlashAddr=0x00000000
[08:14:48.677]    __FlashLen=0x00000000
[08:14:48.678]    __FlashArg=0x00000000
[08:14:48.678]    __FlashOp=0x00000000
[08:14:48.679]    __Result=0x00000000
[08:14:48.679]  </debugvars>
[08:14:48.680]  
[08:14:48.681]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[08:14:48.681]    <block atomic="false" info="">
[08:14:48.682]    </block>
[08:14:48.682]  </sequence>
[08:14:48.683]  
[08:14:48.685]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[08:14:48.685]  
[08:14:48.686]  <debugvars>
[08:14:48.686]    // Pre-defined
[08:14:48.687]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:14:48.687]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:14:48.687]    __dp=0x00000000
[08:14:48.688]    __ap=0x00000000
[08:14:48.688]    __traceout=0x00000000      (Trace Disabled)
[08:14:48.689]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:14:48.690]    __FlashAddr=0x00000000
[08:14:48.690]    __FlashLen=0x00000000
[08:14:48.691]    __FlashArg=0x00000000
[08:14:48.692]    __FlashOp=0x00000000
[08:14:48.692]    __Result=0x00000000
[08:14:48.693]  </debugvars>
[08:14:48.693]  
[08:14:48.694]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[08:14:48.694]    <block atomic="false" info="">
[08:14:48.695]      __var nReset      = 0x80;
[08:14:48.695]        // -> [nReset <= 0x00000080]
[08:14:48.696]      DAP_SWJ_Pins(0x00, nReset, 0);
[08:14:48.697]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:14:48.698]    </block>
[08:14:48.698]    <control if="" while="1" timeout="50000" info="">
[08:14:48.699]      // while "1"  (timeout="50000")
[08:14:48.699]      // while-condition  =>  TRUE
[08:14:48.699]      // while "1"  (timeout="50000")
[08:14:48.700]      // while-condition  =>  TRUE
[08:14:48.700]      // while "1"  (timeout="50000")
[08:14:48.701]      // while-condition  =>  TRUE
[08:14:48.702]      // while "1"  (timeout="50000")
[08:14:48.702]      // while-condition  =>  TRUE
[08:14:48.703]      // while "1"  (timeout="50000")
[08:14:48.703]      // while-condition  =>  TRUE
[08:14:48.704]      // while "1"  (timeout="50000")
[08:14:48.704]      // while-condition  =>  TRUE
[08:14:48.705]      // while "1"  (timeout="50000")
[08:14:48.705]      // while-condition  =>  TRUE
[08:14:48.706]      // while "1"  (timeout="50000")
[08:14:48.706]      // while-condition  =>  TRUE
[08:14:48.707]      // while "1"  (timeout="50000")
[08:14:48.707]      // while-condition  =>  TRUE
[08:14:48.708]      // while "1"  (timeout="50000")
[08:14:48.708]      // while-condition  =>  TRUE
[08:14:48.709]      // while "1"  (timeout="50000")
[08:14:48.709]      // while-condition  =>  TRUE
[08:14:48.710]      // while "1"  (timeout="50000")
[08:14:48.710]      // while-condition  =>  TRUE
[08:14:48.711]      // while "1"  (timeout="50000")
[08:14:48.711]      // while-condition  =>  TRUE
[08:14:48.712]      // while "1"  (timeout="50000")
[08:14:48.712]      // while-condition  =>  TRUE
[08:14:48.713]      // while "1"  (timeout="50000")
[08:14:48.713]      // while-condition  =>  TRUE
[08:14:48.714]      // while "1"  (timeout="50000")
[08:14:48.714]      // while-condition  =>  TRUE
[08:14:48.715]      // while "1"  (timeout="50000")
[08:14:48.715]      // while-condition  =>  TRUE
[08:14:48.716]      // while "1"  (timeout="50000")
[08:14:48.716]      // while-condition  =>  TRUE
[08:14:48.717]      // while "1"  (timeout="50000")
[08:14:48.718]      // while-condition  =>  TRUE
[08:14:48.718]      // while "1"  (timeout="50000")
[08:14:48.719]      // while-condition  =>  TRUE
[08:14:48.719]      // while "1"  (timeout="50000")
[08:14:48.719]      // while-condition  =>  TRUE
[08:14:48.720]      // while "1"  (timeout="50000")
[08:14:48.720]      // while-condition  =>  TRUE
[08:14:48.721]      // while "1"  (timeout="50000")
[08:14:48.722]      // while-condition  =>  TRUE
[08:14:48.723]      // while "1"  (timeout="50000")
[08:14:48.723]      // while-condition  =>  TRUE
[08:14:48.724]      // while "1"  (timeout="50000")
[08:14:48.724]      // while-condition  =>  TRUE
[08:14:48.724]      // while "1"  (timeout="50000")
[08:14:48.725]      // while-condition  =>  TRUE
[08:14:48.725]      // while "1"  (timeout="50000")
[08:14:48.726]      // while-condition  =>  TRUE
[08:14:48.726]      // while "1"  (timeout="50000")
[08:14:48.727]      // while-condition  =>  TRUE
[08:14:48.727]      // while "1"  (timeout="50000")
[08:14:48.728]      // while-condition  =>  TRUE
[08:14:48.729]      // while "1"  (timeout="50000")
[08:14:48.729]      // while-condition  =>  TRUE
[08:14:48.730]      // while "1"  (timeout="50000")
[08:14:48.730]      // while-condition  =>  TRUE
[08:14:48.731]      // while "1"  (timeout="50000")
[08:14:48.731]      // while-condition  =>  TRUE
[08:14:48.732]      // while "1"  (timeout="50000")
[08:14:48.732]      // while-condition  =>  TRUE
[08:14:48.732]      // while "1"  (timeout="50000")
[08:14:48.733]      // while-condition  =>  TRUE
[08:14:48.734]      // while "1"  (timeout="50000")
[08:14:48.734]      // while-condition  =>  TRUE
[08:14:48.735]      // while "1"  (timeout="50000")
[08:14:48.735]      // while-condition  =>  TRUE
[08:14:48.736]      // while "1"  (timeout="50000")
[08:14:48.737]      // while-condition  =>  TRUE
[08:14:48.737]      // while "1"  (timeout="50000")
[08:14:48.738]      // while-condition  =>  TRUE
[08:14:48.738]      // while "1"  (timeout="50000")
[08:14:48.738]      // while-condition  =>  TRUE
[08:14:48.738]      // while "1"  (timeout="50000")
[08:14:48.740]      // while-condition  =>  TRUE
[08:14:48.740]      // while "1"  (timeout="50000")
[08:14:48.740]      // while-condition  =>  TRUE
[08:14:48.741]      // while "1"  (timeout="50000")
[08:14:48.741]      // while-condition  =>  TRUE
[08:14:48.741]      // while "1"  (timeout="50000")
[08:14:48.742]      // while-condition  =>  TRUE
[08:14:48.742]      // while "1"  (timeout="50000")
[08:14:48.742]      // while-condition  =>  TRUE
[08:14:48.743]      // while "1"  (timeout="50000")
[08:14:48.743]      // while-condition  =>  TRUE
[08:14:48.743]      // while "1"  (timeout="50000")
[08:14:48.744]      // while-condition  =>  TRUE
[08:14:48.744]      // while "1"  (timeout="50000")
[08:14:48.744]      // while-condition  =>  TRUE
[08:14:48.744]      // while "1"  (timeout="50000")
[08:14:48.745]      // while-condition  =>  TRUE
[08:14:48.745]      // while "1"  (timeout="50000")
[08:14:48.745]      // while-condition  =>  TRUE
[08:14:48.746]      // while "1"  (timeout="50000")
[08:14:48.746]      // while-condition  =>  TRUE
[08:14:48.746]      // while "1"  (timeout="50000")
[08:14:48.746]      // while-condition  =>  TRUE
[08:14:48.747]      // while "1"  (timeout="50000")
[08:14:48.747]      // while-condition  =>  TRUE
[08:14:48.747]      // while "1"  (timeout="50000")
[08:14:48.748]      // while-condition  =>  TRUE
[08:14:48.748]      // while "1"  (timeout="50000")
[08:14:48.748]      // while-condition  =>  TRUE
[08:14:48.748]      // while "1"  (timeout="50000")
[08:14:48.749]      // while-condition  =>  TRUE
[08:14:48.749]      // while "1"  (timeout="50000")
[08:14:48.750]      // while-condition  =>  TRUE
[08:14:48.750]      // while "1"  (timeout="50000")
[08:14:48.750]      // while-condition  =>  TRUE
[08:14:48.751]      // while "1"  (timeout="50000")
[08:14:48.751]      // while-condition  =>  TRUE
[08:14:48.751]      // while "1"  (timeout="50000")
[08:14:48.752]      // while-condition  =>  TRUE
[08:14:48.752]      // while "1"  (timeout="50000")
[08:14:48.752]      // while-condition  =>  TRUE
[08:14:48.752]      // while "1"  (timeout="50000")
[08:14:48.752]      // while-condition  =>  TRUE
[08:14:48.753]      // while "1"  (timeout="50000")
[08:14:48.753]      // while-condition  =>  TRUE
[08:14:48.754]      // while "1"  (timeout="50000")
[08:14:48.754]      // while-condition  =>  TRUE
[08:14:48.754]      // while "1"  (timeout="50000")
[08:14:48.754]      // while-condition  =>  TRUE
[08:14:48.755]      // while "1"  (timeout="50000")
[08:14:48.755]      // while-condition  =>  TRUE
[08:14:48.755]      // while "1"  (timeout="50000")
[08:14:48.755]      // while-condition  =>  TRUE
[08:14:48.756]      // while "1"  (timeout="50000")
[08:14:48.756]      // while-condition  =>  TRUE
[08:14:48.756]      // while "1"  (timeout="50000")
[08:14:48.756]      // while-condition  =>  TRUE
[08:14:48.756]      // while "1"  (timeout="50000")
[08:14:48.757]      // while-condition  =>  TRUE
[08:14:48.757]      // while "1"  (timeout="50000")
[08:14:48.757]      // while-condition  =>  TRUE
[08:14:48.757]      // while "1"  (timeout="50000")
[08:14:48.758]      // while-condition  =>  TRUE
[08:14:48.758]      // while "1"  (timeout="50000")
[08:14:48.758]      // while-condition  =>  TRUE
[08:14:48.758]      // while "1"  (timeout="50000")
[08:14:48.758]      // while  =>  TIMEOUT
[08:14:48.758]      // end while "1"
[08:14:48.759]    </control>
[08:14:48.759]    <block atomic="false" info="">
[08:14:48.759]      DAP_SWJ_Pins(nReset, nReset, 0);
[08:14:48.769]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:14:48.770]    </block>
[08:14:48.770]    <control if="" while="1" timeout="10000" info="">
[08:14:48.771]      // while "1"  (timeout="10000")
[08:14:48.771]      // while-condition  =>  TRUE
[08:14:48.772]      // while "1"  (timeout="10000")
[08:14:48.773]      // while-condition  =>  TRUE
[08:14:48.773]      // while "1"  (timeout="10000")
[08:14:48.774]      // while-condition  =>  TRUE
[08:14:48.774]      // while "1"  (timeout="10000")
[08:14:48.775]      // while  =>  TIMEOUT
[08:14:48.776]      // end while "1"
[08:14:48.776]    </control>
[08:14:48.776]    <block atomic="true" info="">
[08:14:48.777]      // ATOMIC SEQUENCE - EXECUTE
[08:14:48.779]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[08:14:48.779]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[08:14:48.780]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[08:14:48.780]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[08:14:48.780]      // ATOMIC SEQUENCE - DONE
[08:14:48.781]    </block>
[08:14:48.781]    <block atomic="false" info="">
[08:14:48.781]      __errorcontrol = 0x00000001;
[08:14:48.782]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[08:14:48.782]      ReadDP(0x0);
[08:14:48.784]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[08:14:48.785]      __errorcontrol = 0x00000000;
[08:14:48.785]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[08:14:48.785]    </block>
[08:14:48.786]  </sequence>
[08:14:48.786]  
[08:14:48.790]  **********  Sequence "DebugPortStart"  (Context="Reset", Pname="", info="")
[08:14:48.790]  
[08:14:48.791]  <debugvars>
[08:14:48.791]    // Pre-defined
[08:14:48.791]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:14:48.792]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:14:48.792]    __dp=0x00000000
[08:14:48.792]    __ap=0x00000000
[08:14:48.792]    __traceout=0x00000000      (Trace Disabled)
[08:14:48.793]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:14:48.793]    __FlashAddr=0x00000000
[08:14:48.793]    __FlashLen=0x00000000
[08:14:48.794]    __FlashArg=0x00000000
[08:14:48.794]    __FlashOp=0x00000000
[08:14:48.794]    __Result=0x00000000
[08:14:48.794]  </debugvars>
[08:14:48.794]  
[08:14:48.795]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[08:14:48.795]    <block atomic="false" info="">
[08:14:48.795]      __var SW_DP_ABORT  = 0x0;
[08:14:48.795]        // -> [SW_DP_ABORT <= 0x00000000]
[08:14:48.796]      __var DP_CTRL_STAT = 0x4;
[08:14:48.797]        // -> [DP_CTRL_STAT <= 0x00000004]
[08:14:48.797]      __var DP_SELECT    = 0x8;
[08:14:48.797]        // -> [DP_SELECT <= 0x00000008]
[08:14:48.797]      __var powered_down = 0;
[08:14:48.798]        // -> [powered_down <= 0x00000000]
[08:14:48.798]      WriteDP(DP_SELECT, 0x00000000);
[08:14:48.799]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:14:48.799]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[08:14:48.802]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[08:14:48.802]        // -> [powered_down <= 0x00000001]
[08:14:48.802]    </block>
[08:14:48.803]    <control if="powered_down" while="" timeout="0" info="">
[08:14:48.803]      // if-block "powered_down"
[08:14:48.803]        // =>  TRUE
[08:14:48.803]      <block atomic="false" info="">
[08:14:48.804]        WriteDP(DP_CTRL_STAT, 0x50000000);
[08:14:48.805]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[08:14:48.805]      </block>
[08:14:48.805]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[08:14:48.805]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[08:14:48.807]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[08:14:48.807]        // while-condition  =>  FALSE
[08:14:48.807]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[08:14:48.807]      </control>
[08:14:48.808]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[08:14:48.808]        // if-block "(__protocol & 0xFFFF) == 1"
[08:14:48.808]          // =>  FALSE
[08:14:48.809]        // skip if-block "(__protocol & 0xFFFF) == 1"
[08:14:48.810]      </control>
[08:14:48.810]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[08:14:48.810]        // if-block "(__protocol & 0xFFFF) == 2"
[08:14:48.811]          // =>  TRUE
[08:14:48.811]        <block atomic="false" info="">
[08:14:48.811]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[08:14:48.812]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[08:14:48.812]          WriteDP(SW_DP_ABORT, 0x0000001E);
[08:14:48.814]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[08:14:48.815]        </block>
[08:14:48.815]        // end if-block "(__protocol & 0xFFFF) == 2"
[08:14:48.815]      </control>
[08:14:48.815]      // end if-block "powered_down"
[08:14:48.815]    </control>
[08:14:48.816]  </sequence>
[08:14:48.816]  
[08:14:48.822]  **********  Sequence "DebugCoreStart"  (Context="Reset", Pname="", info="")
[08:14:48.822]  
[08:14:48.823]  <debugvars>
[08:14:48.823]    // Pre-defined
[08:14:48.823]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:14:48.823]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:14:48.824]    __dp=0x00000000
[08:14:48.824]    __ap=0x00000000
[08:14:48.824]    __traceout=0x00000000      (Trace Disabled)
[08:14:48.825]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:14:48.825]    __FlashAddr=0x00000000
[08:14:48.825]    __FlashLen=0x00000000
[08:14:48.826]    __FlashArg=0x00000000
[08:14:48.826]    __FlashOp=0x00000000
[08:14:48.826]    __Result=0x00000000
[08:14:48.826]  </debugvars>
[08:14:48.826]  
[08:14:48.827]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[08:14:48.827]    <block atomic="true" info="">
[08:14:48.828]      // ATOMIC SEQUENCE - EXECUTE
[08:14:48.829]      __var DP_R_IDCODE    = 0x0;
[08:14:48.830]        // -> [DP_R_IDCODE <= 0x00000000]
[08:14:48.830]      __var DP_W_ABORT    = 0x0;
[08:14:48.830]        // -> [DP_W_ABORT <= 0x00000000]
[08:14:48.830]      __var DP_CTRLSTAT = 0x4;
[08:14:48.831]        // -> [DP_CTRLSTAT <= 0x00000004]
[08:14:48.831]      __var DP_W_SELECT    = 0x8;
[08:14:48.831]        // -> [DP_W_SELECT <= 0x00000008]
[08:14:48.832]      __var AP_TAR		= 0x4;
[08:14:48.832]        // -> [AP_TAR <= 0x00000004]
[08:14:48.832]      __var AP_BD0		= 0x0;
[08:14:48.832]        // -> [AP_BD0 <= 0x00000000]
[08:14:48.833]      __var AP_BD1		= 0x4;
[08:14:48.833]        // -> [AP_BD1 <= 0x00000004]
[08:14:48.833]      __var AP_BD2		= 0x8;
[08:14:48.834]        // -> [AP_BD2 <= 0x00000008]
[08:14:48.834]      __var PCWithinFlash = 0;
[08:14:48.834]        // -> [PCWithinFlash <= 0x00000000]
[08:14:48.835]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[08:14:48.835]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[08:14:48.835]      // ATOMIC SEQUENCE - DONE
[08:14:48.835]    </block>
[08:14:48.836]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[08:14:48.836]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[08:14:48.839]        // -> [Read32(0xE000EDF0) => 0x01030003]   (__dp=0x00000000, __ap=0x00000000)
[08:14:48.839]      // while-condition  =>  FALSE
[08:14:48.839]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[08:14:48.840]    </control>
[08:14:48.840]    <block atomic="true" info="">
[08:14:48.840]      // ATOMIC SEQUENCE - EXECUTE
[08:14:48.843]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:14:48.844]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:14:48.845]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[08:14:48.845]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[08:14:48.845]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[08:14:48.845]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[08:14:48.846]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[08:14:48.846]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[08:14:48.846]      // ATOMIC SEQUENCE - DONE
[08:14:48.847]    </block>
[08:14:48.847]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[08:14:48.847]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:14:48.848]        // -> [ReadAP(0x00000000) => 0x01030003]   (__dp=0x00000000, __ap=0x00000000)
[08:14:48.849]      // while-condition  =>  FALSE
[08:14:48.849]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[08:14:48.849]    </control>
[08:14:48.849]    <block atomic="false" info="">
[08:14:48.850]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[08:14:48.851]        // -> [ReadAP(0x00000008) => 0x10000820]   (__dp=0x00000000, __ap=0x00000000)
[08:14:48.852]        // -> [PCWithinFlash <= 0x00000001]
[08:14:48.852]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:14:48.853]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:14:48.854]    </block>
[08:14:48.854]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[08:14:48.854]      // if-block "PCWithinFlash == 0"
[08:14:48.854]        // =>  FALSE
[08:14:48.855]      // skip if-block "PCWithinFlash == 0"
[08:14:48.855]    </control>
[08:14:48.855]  </sequence>
[08:14:48.856]  
[08:14:48.877]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[08:14:48.877]  
[08:14:48.886]  <debugvars>
[08:14:48.886]    // Pre-defined
[08:14:48.887]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:14:48.888]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:14:48.888]    __dp=0x00000000
[08:14:48.889]    __ap=0x00000000
[08:14:48.889]    __traceout=0x00000000      (Trace Disabled)
[08:14:48.889]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:14:48.891]    __FlashAddr=0x00000000
[08:14:48.891]    __FlashLen=0x00000000
[08:14:48.892]    __FlashArg=0x00000000
[08:14:48.892]    __FlashOp=0x00000000
[08:14:48.893]    __Result=0x00000000
[08:14:48.893]  </debugvars>
[08:14:48.894]  
[08:14:48.894]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[08:14:48.895]    <block atomic="false" info="">
[08:14:48.895]    </block>
[08:14:48.896]  </sequence>
[08:14:48.896]  
[08:14:49.127]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[08:14:49.127]  
[08:14:49.128]  <debugvars>
[08:14:49.128]    // Pre-defined
[08:14:49.130]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:14:49.130]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:14:49.131]    __dp=0x00000000
[08:14:49.131]    __ap=0x00000000
[08:14:49.132]    __traceout=0x00000000      (Trace Disabled)
[08:14:49.132]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:14:49.133]    __FlashAddr=0x00000000
[08:14:49.134]    __FlashLen=0x00000000
[08:14:49.134]    __FlashArg=0x00000000
[08:14:49.135]    __FlashOp=0x00000000
[08:14:49.135]    __Result=0x00000000
[08:14:49.135]  </debugvars>
[08:14:49.136]  
[08:14:49.136]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[08:14:49.136]    <block atomic="false" info="">
[08:14:49.137]      Sequence("ResetHardware");
[08:14:49.137]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[08:14:49.138]          <block atomic="false" info="">
[08:14:49.138]            __var nReset      = 0x80;
[08:14:49.138]              // -> [nReset <= 0x00000080]
[08:14:49.139]            DAP_SWJ_Pins(0x00, nReset, 0);
[08:14:49.140]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:14:49.141]          </block>
[08:14:49.141]          <control if="" while="1" timeout="50000" info="">
[08:14:49.141]            // while "1"  (timeout="50000")
[08:14:49.142]            // while-condition  =>  TRUE
[08:14:49.142]            // while "1"  (timeout="50000")
[08:14:49.143]            // while-condition  =>  TRUE
[08:14:49.143]            // while "1"  (timeout="50000")
[08:14:49.143]            // while-condition  =>  TRUE
[08:14:49.144]            // while "1"  (timeout="50000")
[08:14:49.144]            // while-condition  =>  TRUE
[08:14:49.144]            // while "1"  (timeout="50000")
[08:14:49.144]            // while-condition  =>  TRUE
[08:14:49.145]            // while "1"  (timeout="50000")
[08:14:49.145]            // while-condition  =>  TRUE
[08:14:49.145]            // while "1"  (timeout="50000")
[08:14:49.146]            // while-condition  =>  TRUE
[08:14:49.146]            // while "1"  (timeout="50000")
[08:14:49.146]            // while-condition  =>  TRUE
[08:14:49.146]            // while "1"  (timeout="50000")
[08:14:49.147]            // while-condition  =>  TRUE
[08:14:49.147]            // while "1"  (timeout="50000")
[08:14:49.147]            // while-condition  =>  TRUE
[08:14:49.147]            // while "1"  (timeout="50000")
[08:14:49.148]            // while-condition  =>  TRUE
[08:14:49.148]            // while "1"  (timeout="50000")
[08:14:49.148]            // while-condition  =>  TRUE
[08:14:49.148]            // while "1"  (timeout="50000")
[08:14:49.148]            // while-condition  =>  TRUE
[08:14:49.149]            // while "1"  (timeout="50000")
[08:14:49.149]            // while-condition  =>  TRUE
[08:14:49.149]            // while "1"  (timeout="50000")
[08:14:49.149]            // while-condition  =>  TRUE
[08:14:49.149]            // while "1"  (timeout="50000")
[08:14:49.150]            // while-condition  =>  TRUE
[08:14:49.150]            // while "1"  (timeout="50000")
[08:14:49.150]            // while-condition  =>  TRUE
[08:14:49.150]            // while "1"  (timeout="50000")
[08:14:49.150]            // while-condition  =>  TRUE
[08:14:49.151]            // while "1"  (timeout="50000")
[08:14:49.151]            // while-condition  =>  TRUE
[08:14:49.151]            // while "1"  (timeout="50000")
[08:14:49.152]            // while-condition  =>  TRUE
[08:14:49.152]            // while "1"  (timeout="50000")
[08:14:49.152]            // while-condition  =>  TRUE
[08:14:49.152]            // while "1"  (timeout="50000")
[08:14:49.153]            // while-condition  =>  TRUE
[08:14:49.153]            // while "1"  (timeout="50000")
[08:14:49.153]            // while-condition  =>  TRUE
[08:14:49.153]            // while "1"  (timeout="50000")
[08:14:49.154]            // while-condition  =>  TRUE
[08:14:49.154]            // while "1"  (timeout="50000")
[08:14:49.154]            // while-condition  =>  TRUE
[08:14:49.154]            // while "1"  (timeout="50000")
[08:14:49.155]            // while-condition  =>  TRUE
[08:14:49.155]            // while "1"  (timeout="50000")
[08:14:49.155]            // while-condition  =>  TRUE
[08:14:49.155]            // while "1"  (timeout="50000")
[08:14:49.155]            // while-condition  =>  TRUE
[08:14:49.156]            // while "1"  (timeout="50000")
[08:14:49.156]            // while-condition  =>  TRUE
[08:14:49.156]            // while "1"  (timeout="50000")
[08:14:49.156]            // while-condition  =>  TRUE
[08:14:49.156]            // while "1"  (timeout="50000")
[08:14:49.157]            // while-condition  =>  TRUE
[08:14:49.157]            // while "1"  (timeout="50000")
[08:14:49.157]            // while-condition  =>  TRUE
[08:14:49.157]            // while "1"  (timeout="50000")
[08:14:49.158]            // while-condition  =>  TRUE
[08:14:49.158]            // while "1"  (timeout="50000")
[08:14:49.158]            // while-condition  =>  TRUE
[08:14:49.158]            // while "1"  (timeout="50000")
[08:14:49.158]            // while-condition  =>  TRUE
[08:14:49.159]            // while "1"  (timeout="50000")
[08:14:49.159]            // while-condition  =>  TRUE
[08:14:49.159]            // while "1"  (timeout="50000")
[08:14:49.159]            // while-condition  =>  TRUE
[08:14:49.159]            // while "1"  (timeout="50000")
[08:14:49.159]            // while-condition  =>  TRUE
[08:14:49.160]            // while "1"  (timeout="50000")
[08:14:49.160]            // while-condition  =>  TRUE
[08:14:49.160]            // while "1"  (timeout="50000")
[08:14:49.160]            // while-condition  =>  TRUE
[08:14:49.160]            // while "1"  (timeout="50000")
[08:14:49.161]            // while-condition  =>  TRUE
[08:14:49.161]            // while "1"  (timeout="50000")
[08:14:49.161]            // while-condition  =>  TRUE
[08:14:49.161]            // while "1"  (timeout="50000")
[08:14:49.162]            // while-condition  =>  TRUE
[08:14:49.163]            // while "1"  (timeout="50000")
[08:14:49.163]            // while-condition  =>  TRUE
[08:14:49.163]            // while "1"  (timeout="50000")
[08:14:49.164]            // while-condition  =>  TRUE
[08:14:49.164]            // while "1"  (timeout="50000")
[08:14:49.164]            // while-condition  =>  TRUE
[08:14:49.164]            // while "1"  (timeout="50000")
[08:14:49.164]            // while-condition  =>  TRUE
[08:14:49.165]            // while "1"  (timeout="50000")
[08:14:49.165]            // while-condition  =>  TRUE
[08:14:49.165]            // while "1"  (timeout="50000")
[08:14:49.165]            // while-condition  =>  TRUE
[08:14:49.165]            // while "1"  (timeout="50000")
[08:14:49.166]            // while-condition  =>  TRUE
[08:14:49.166]            // while "1"  (timeout="50000")
[08:14:49.166]            // while-condition  =>  TRUE
[08:14:49.166]            // while "1"  (timeout="50000")
[08:14:49.166]            // while-condition  =>  TRUE
[08:14:49.166]            // while "1"  (timeout="50000")
[08:14:49.166]            // while-condition  =>  TRUE
[08:14:49.166]            // while "1"  (timeout="50000")
[08:14:49.166]            // while-condition  =>  TRUE
[08:14:49.167]            // while "1"  (timeout="50000")
[08:14:49.167]            // while-condition  =>  TRUE
[08:14:49.167]            // while "1"  (timeout="50000")
[08:14:49.167]            // while-condition  =>  TRUE
[08:14:49.167]            // while "1"  (timeout="50000")
[08:14:49.168]            // while-condition  =>  TRUE
[08:14:49.168]            // while "1"  (timeout="50000")
[08:14:49.168]            // while-condition  =>  TRUE
[08:14:49.168]            // while "1"  (timeout="50000")
[08:14:49.169]            // while-condition  =>  TRUE
[08:14:49.169]            // while "1"  (timeout="50000")
[08:14:49.169]            // while-condition  =>  TRUE
[08:14:49.169]            // while "1"  (timeout="50000")
[08:14:49.169]            // while-condition  =>  TRUE
[08:14:49.170]            // while "1"  (timeout="50000")
[08:14:49.170]            // while-condition  =>  TRUE
[08:14:49.170]            // while "1"  (timeout="50000")
[08:14:49.170]            // while-condition  =>  TRUE
[08:14:49.171]            // while "1"  (timeout="50000")
[08:14:49.171]            // while-condition  =>  TRUE
[08:14:49.171]            // while "1"  (timeout="50000")
[08:14:49.171]            // while-condition  =>  TRUE
[08:14:49.172]            // while "1"  (timeout="50000")
[08:14:49.172]            // while-condition  =>  TRUE
[08:14:49.173]            // while "1"  (timeout="50000")
[08:14:49.173]            // while-condition  =>  TRUE
[08:14:49.173]            // while "1"  (timeout="50000")
[08:14:49.174]            // while-condition  =>  TRUE
[08:14:49.174]            // while "1"  (timeout="50000")
[08:14:49.174]            // while-condition  =>  TRUE
[08:14:49.174]            // while "1"  (timeout="50000")
[08:14:49.175]            // while-condition  =>  TRUE
[08:14:49.175]            // while "1"  (timeout="50000")
[08:14:49.175]            // while-condition  =>  TRUE
[08:14:49.176]            // while "1"  (timeout="50000")
[08:14:49.176]            // while-condition  =>  TRUE
[08:14:49.176]            // while "1"  (timeout="50000")
[08:14:49.176]            // while-condition  =>  TRUE
[08:14:49.177]            // while "1"  (timeout="50000")
[08:14:49.177]            // while-condition  =>  TRUE
[08:14:49.177]            // while "1"  (timeout="50000")
[08:14:49.177]            // while-condition  =>  TRUE
[08:14:49.178]            // while "1"  (timeout="50000")
[08:14:49.178]            // while-condition  =>  TRUE
[08:14:49.178]            // while "1"  (timeout="50000")
[08:14:49.178]            // while-condition  =>  TRUE
[08:14:49.178]            // while "1"  (timeout="50000")
[08:14:49.178]            // while-condition  =>  TRUE
[08:14:49.179]            // while "1"  (timeout="50000")
[08:14:49.179]            // while-condition  =>  TRUE
[08:14:49.180]            // while "1"  (timeout="50000")
[08:14:49.180]            // while-condition  =>  TRUE
[08:14:49.180]            // while "1"  (timeout="50000")
[08:14:49.180]            // while-condition  =>  TRUE
[08:14:49.181]            // while "1"  (timeout="50000")
[08:14:49.181]            // while-condition  =>  TRUE
[08:14:49.181]            // while "1"  (timeout="50000")
[08:14:49.181]            // while-condition  =>  TRUE
[08:14:49.181]            // while "1"  (timeout="50000")
[08:14:49.182]            // while-condition  =>  TRUE
[08:14:49.182]            // while "1"  (timeout="50000")
[08:14:49.182]            // while-condition  =>  TRUE
[08:14:49.182]            // while "1"  (timeout="50000")
[08:14:49.182]            // while-condition  =>  TRUE
[08:14:49.182]            // while "1"  (timeout="50000")
[08:14:49.182]            // while-condition  =>  TRUE
[08:14:49.182]            // while "1"  (timeout="50000")
[08:14:49.182]            // while-condition  =>  TRUE
[08:14:49.182]            // while "1"  (timeout="50000")
[08:14:49.183]            // while-condition  =>  TRUE
[08:14:49.183]            // while "1"  (timeout="50000")
[08:14:49.183]            // while-condition  =>  TRUE
[08:14:49.184]            // while "1"  (timeout="50000")
[08:14:49.184]            // while-condition  =>  TRUE
[08:14:49.184]            // while "1"  (timeout="50000")
[08:14:49.184]            // while-condition  =>  TRUE
[08:14:49.184]            // while "1"  (timeout="50000")
[08:14:49.185]            // while-condition  =>  TRUE
[08:14:49.185]            // while "1"  (timeout="50000")
[08:14:49.185]            // while-condition  =>  TRUE
[08:14:49.185]            // while "1"  (timeout="50000")
[08:14:49.185]            // while-condition  =>  TRUE
[08:14:49.186]            // while "1"  (timeout="50000")
[08:14:49.186]            // while-condition  =>  TRUE
[08:14:49.187]            // while "1"  (timeout="50000")
[08:14:49.187]            // while-condition  =>  TRUE
[08:14:49.187]            // while "1"  (timeout="50000")
[08:14:49.188]            // while-condition  =>  TRUE
[08:14:49.188]            // while "1"  (timeout="50000")
[08:14:49.188]            // while-condition  =>  TRUE
[08:14:49.188]            // while "1"  (timeout="50000")
[08:14:49.189]            // while-condition  =>  TRUE
[08:14:49.190]            // while "1"  (timeout="50000")
[08:14:49.190]            // while-condition  =>  TRUE
[08:14:49.190]            // while "1"  (timeout="50000")
[08:14:49.190]            // while-condition  =>  TRUE
[08:14:49.190]            // while "1"  (timeout="50000")
[08:14:49.190]            // while-condition  =>  TRUE
[08:14:49.190]            // while "1"  (timeout="50000")
[08:14:49.190]            // while-condition  =>  TRUE
[08:14:49.191]            // while "1"  (timeout="50000")
[08:14:49.191]            // while-condition  =>  TRUE
[08:14:49.191]            // while "1"  (timeout="50000")
[08:14:49.191]            // while-condition  =>  TRUE
[08:14:49.192]            // while "1"  (timeout="50000")
[08:14:49.193]            // while-condition  =>  TRUE
[08:14:49.193]            // while "1"  (timeout="50000")
[08:14:49.193]            // while-condition  =>  TRUE
[08:14:49.193]            // while "1"  (timeout="50000")
[08:14:49.194]            // while-condition  =>  TRUE
[08:14:49.194]            // while "1"  (timeout="50000")
[08:14:49.194]            // while-condition  =>  TRUE
[08:14:49.194]            // while "1"  (timeout="50000")
[08:14:49.194]            // while-condition  =>  TRUE
[08:14:49.194]            // while "1"  (timeout="50000")
[08:14:49.195]            // while-condition  =>  TRUE
[08:14:49.195]            // while "1"  (timeout="50000")
[08:14:49.195]            // while-condition  =>  TRUE
[08:14:49.195]            // while "1"  (timeout="50000")
[08:14:49.196]            // while-condition  =>  TRUE
[08:14:49.196]            // while "1"  (timeout="50000")
[08:14:49.196]            // while  =>  TIMEOUT
[08:14:49.196]            // end while "1"
[08:14:49.196]          </control>
[08:14:49.196]          <block atomic="false" info="">
[08:14:49.197]            DAP_SWJ_Pins(nReset, nReset, 0);
[08:14:49.207]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:14:49.219]          </block>
[08:14:49.220]          <control if="" while="1" timeout="10000" info="">
[08:14:49.221]            // while "1"  (timeout="10000")
[08:14:49.221]            // while-condition  =>  TRUE
[08:14:49.222]            // while "1"  (timeout="10000")
[08:14:49.222]            // while-condition  =>  TRUE
[08:14:49.223]            // while "1"  (timeout="10000")
[08:14:49.224]            // while-condition  =>  TRUE
[08:14:49.224]            // while "1"  (timeout="10000")
[08:14:49.225]            // while-condition  =>  TRUE
[08:14:49.225]            // while "1"  (timeout="10000")
[08:14:49.226]            // while-condition  =>  TRUE
[08:14:49.226]            // while "1"  (timeout="10000")
[08:14:49.227]            // while-condition  =>  TRUE
[08:14:49.227]            // while "1"  (timeout="10000")
[08:14:49.228]            // while  =>  TIMEOUT
[08:14:49.228]            // end while "1"
[08:14:49.229]          </control>
[08:14:49.229]          <block atomic="true" info="">
[08:14:49.229]            // ATOMIC SEQUENCE - EXECUTE
[08:14:49.231]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[08:14:49.232]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[08:14:49.232]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[08:14:49.232]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[08:14:49.233]            // ATOMIC SEQUENCE - DONE
[08:14:49.233]          </block>
[08:14:49.233]          <block atomic="false" info="">
[08:14:49.233]            __errorcontrol = 0x00000001;
[08:14:49.234]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[08:14:49.234]            ReadDP(0x0);
[08:14:49.236]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[08:14:49.236]            __errorcontrol = 0x00000000;
[08:14:49.236]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[08:14:49.237]          </block>
[08:14:49.237]        </sequence>
[08:14:49.237]      Sequence("DebugPortSetup");
[08:14:49.237]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[08:14:49.238]        </sequence>
[08:14:49.238]      Sequence("DebugPortStart");
[08:14:49.238]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[08:14:49.239]          <block atomic="false" info="">
[08:14:49.239]            __var SW_DP_ABORT  = 0x0;
[08:14:49.239]              // -> [SW_DP_ABORT <= 0x00000000]
[08:14:49.239]            __var DP_CTRL_STAT = 0x4;
[08:14:49.240]              // -> [DP_CTRL_STAT <= 0x00000004]
[08:14:49.240]            __var DP_SELECT    = 0x8;
[08:14:49.240]              // -> [DP_SELECT <= 0x00000008]
[08:14:49.241]            __var powered_down = 0;
[08:14:49.241]              // -> [powered_down <= 0x00000000]
[08:14:49.241]            WriteDP(DP_SELECT, 0x00000000);
[08:14:49.243]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:14:49.243]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[08:14:49.245]              // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[08:14:49.246]              // -> [powered_down <= 0x00000001]
[08:14:49.247]          </block>
[08:14:49.247]          <control if="powered_down" while="" timeout="0" info="">
[08:14:49.247]            // if-block "powered_down"
[08:14:49.248]              // =>  TRUE
[08:14:49.248]            <block atomic="false" info="">
[08:14:49.248]              WriteDP(DP_CTRL_STAT, 0x50000000);
[08:14:49.249]                // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[08:14:49.250]            </block>
[08:14:49.250]            <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[08:14:49.250]              // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[08:14:49.251]                // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[08:14:49.252]              // while-condition  =>  FALSE
[08:14:49.252]              // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[08:14:49.252]            </control>
[08:14:49.253]            <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[08:14:49.253]              // if-block "(__protocol & 0xFFFF) == 1"
[08:14:49.253]                // =>  FALSE
[08:14:49.253]              // skip if-block "(__protocol & 0xFFFF) == 1"
[08:14:49.254]            </control>
[08:14:49.254]            <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[08:14:49.254]              // if-block "(__protocol & 0xFFFF) == 2"
[08:14:49.254]                // =>  TRUE
[08:14:49.254]              <block atomic="false" info="">
[08:14:49.255]                WriteDP(DP_CTRL_STAT, 0x50000F00);
[08:14:49.257]                  // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[08:14:49.257]                WriteDP(SW_DP_ABORT, 0x0000001E);
[08:14:49.259]                  // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[08:14:49.260]              </block>
[08:14:49.260]              // end if-block "(__protocol & 0xFFFF) == 2"
[08:14:49.260]            </control>
[08:14:49.260]            // end if-block "powered_down"
[08:14:49.260]          </control>
[08:14:49.261]        </sequence>
[08:14:49.261]      Sequence("DebugCoreStart");
[08:14:49.261]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[08:14:49.262]          <block atomic="true" info="">
[08:14:49.263]            // ATOMIC SEQUENCE - EXECUTE
[08:14:49.264]            __var DP_R_IDCODE    = 0x0;
[08:14:49.265]              // -> [DP_R_IDCODE <= 0x00000000]
[08:14:49.265]            __var DP_W_ABORT    = 0x0;
[08:14:49.265]              // -> [DP_W_ABORT <= 0x00000000]
[08:14:49.266]            __var DP_CTRLSTAT = 0x4;
[08:14:49.266]              // -> [DP_CTRLSTAT <= 0x00000004]
[08:14:49.266]            __var DP_W_SELECT    = 0x8;
[08:14:49.266]              // -> [DP_W_SELECT <= 0x00000008]
[08:14:49.267]            __var AP_TAR		= 0x4;
[08:14:49.267]              // -> [AP_TAR <= 0x00000004]
[08:14:49.267]            __var AP_BD0		= 0x0;
[08:14:49.268]              // -> [AP_BD0 <= 0x00000000]
[08:14:49.268]            __var AP_BD1		= 0x4;
[08:14:49.268]              // -> [AP_BD1 <= 0x00000004]
[08:14:49.268]            __var AP_BD2		= 0x8;
[08:14:49.269]              // -> [AP_BD2 <= 0x00000008]
[08:14:49.269]            __var PCWithinFlash = 0;
[08:14:49.269]              // -> [PCWithinFlash <= 0x00000000]
[08:14:49.270]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[08:14:49.270]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[08:14:49.270]            // ATOMIC SEQUENCE - DONE
[08:14:49.270]          </block>
[08:14:49.271]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[08:14:49.271]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[08:14:49.274]              // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[08:14:49.275]            // while-condition  =>  FALSE
[08:14:49.275]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[08:14:49.275]          </control>
[08:14:49.275]          <block atomic="true" info="">
[08:14:49.275]            // ATOMIC SEQUENCE - EXECUTE
[08:14:49.278]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:14:49.278]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:14:49.278]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[08:14:49.279]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[08:14:49.279]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[08:14:49.279]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[08:14:49.280]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[08:14:49.280]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[08:14:49.280]            // ATOMIC SEQUENCE - DONE
[08:14:49.281]          </block>
[08:14:49.282]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[08:14:49.282]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:14:49.283]              // -> [ReadAP(0x00000000) => 0x01030003]   (__dp=0x00000000, __ap=0x00000000)
[08:14:49.284]            // while-condition  =>  FALSE
[08:14:49.284]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[08:14:49.284]          </control>
[08:14:49.285]          <block atomic="false" info="">
[08:14:49.285]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[08:14:49.286]              // -> [ReadAP(0x00000008) => 0x10000820]   (__dp=0x00000000, __ap=0x00000000)
[08:14:49.287]              // -> [PCWithinFlash <= 0x00000001]
[08:14:49.287]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:14:49.288]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:14:49.289]          </block>
[08:14:49.289]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[08:14:49.289]            // if-block "PCWithinFlash == 0"
[08:14:49.289]              // =>  FALSE
[08:14:49.290]            // skip if-block "PCWithinFlash == 0"
[08:14:49.290]          </control>
[08:14:49.290]        </sequence>
[08:14:49.291]    </block>
[08:14:49.291]  </sequence>
[08:14:49.291]  
[08:14:57.000]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[08:14:57.000]  
[08:14:57.000]  <debugvars>
[08:14:57.001]    // Pre-defined
[08:14:57.001]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:14:57.002]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:14:57.003]    __dp=0x00000000
[08:14:57.003]    __ap=0x00000000
[08:14:57.004]    __traceout=0x00000000      (Trace Disabled)
[08:14:57.004]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:14:57.005]    __FlashAddr=0x00000000
[08:14:57.005]    __FlashLen=0x00000000
[08:14:57.005]    __FlashArg=0x00000000
[08:14:57.005]    __FlashOp=0x00000000
[08:14:57.006]    __Result=0x00000000
[08:14:57.006]  </debugvars>
[08:14:57.006]  
[08:14:57.007]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[08:14:57.008]    <block atomic="false" info="">
[08:14:57.008]      __var nReset      = 0x80;
[08:14:57.008]        // -> [nReset <= 0x00000080]
[08:14:57.009]      DAP_SWJ_Pins(0x00, nReset, 0);
[08:14:57.010]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:14:57.011]    </block>
[08:14:57.011]    <control if="" while="1" timeout="50000" info="">
[08:14:57.011]      // while "1"  (timeout="50000")
[08:14:57.011]      // while-condition  =>  TRUE
[08:14:57.011]      // while "1"  (timeout="50000")
[08:14:57.011]      // while-condition  =>  TRUE
[08:14:57.012]      // while "1"  (timeout="50000")
[08:14:57.012]      // while-condition  =>  TRUE
[08:14:57.012]      // while "1"  (timeout="50000")
[08:14:57.013]      // while-condition  =>  TRUE
[08:14:57.014]      // while "1"  (timeout="50000")
[08:14:57.014]      // while-condition  =>  TRUE
[08:14:57.014]      // while "1"  (timeout="50000")
[08:14:57.014]      // while-condition  =>  TRUE
[08:14:57.014]      // while "1"  (timeout="50000")
[08:14:57.014]      // while-condition  =>  TRUE
[08:14:57.014]      // while "1"  (timeout="50000")
[08:14:57.015]      // while-condition  =>  TRUE
[08:14:57.015]      // while "1"  (timeout="50000")
[08:14:57.015]      // while-condition  =>  TRUE
[08:14:57.016]      // while "1"  (timeout="50000")
[08:14:57.016]      // while-condition  =>  TRUE
[08:14:57.016]      // while "1"  (timeout="50000")
[08:14:57.016]      // while-condition  =>  TRUE
[08:14:57.017]      // while "1"  (timeout="50000")
[08:14:57.017]      // while-condition  =>  TRUE
[08:14:57.017]      // while "1"  (timeout="50000")
[08:14:57.017]      // while-condition  =>  TRUE
[08:14:57.017]      // while "1"  (timeout="50000")
[08:14:57.018]      // while-condition  =>  TRUE
[08:14:57.018]      // while "1"  (timeout="50000")
[08:14:57.018]      // while-condition  =>  TRUE
[08:14:57.019]      // while "1"  (timeout="50000")
[08:14:57.019]      // while-condition  =>  TRUE
[08:14:57.019]      // while "1"  (timeout="50000")
[08:14:57.020]      // while-condition  =>  TRUE
[08:14:57.020]      // while "1"  (timeout="50000")
[08:14:57.020]      // while-condition  =>  TRUE
[08:14:57.020]      // while "1"  (timeout="50000")
[08:14:57.021]      // while-condition  =>  TRUE
[08:14:57.021]      // while "1"  (timeout="50000")
[08:14:57.021]      // while-condition  =>  TRUE
[08:14:57.021]      // while "1"  (timeout="50000")
[08:14:57.021]      // while-condition  =>  TRUE
[08:14:57.021]      // while "1"  (timeout="50000")
[08:14:57.021]      // while-condition  =>  TRUE
[08:14:57.021]      // while "1"  (timeout="50000")
[08:14:57.021]      // while-condition  =>  TRUE
[08:14:57.022]      // while "1"  (timeout="50000")
[08:14:57.022]      // while-condition  =>  TRUE
[08:14:57.022]      // while "1"  (timeout="50000")
[08:14:57.022]      // while-condition  =>  TRUE
[08:14:57.022]      // while "1"  (timeout="50000")
[08:14:57.023]      // while-condition  =>  TRUE
[08:14:57.023]      // while "1"  (timeout="50000")
[08:14:57.024]      // while-condition  =>  TRUE
[08:14:57.024]      // while "1"  (timeout="50000")
[08:14:57.024]      // while-condition  =>  TRUE
[08:14:57.025]      // while "1"  (timeout="50000")
[08:14:57.025]      // while-condition  =>  TRUE
[08:14:57.025]      // while "1"  (timeout="50000")
[08:14:57.025]      // while-condition  =>  TRUE
[08:14:57.025]      // while "1"  (timeout="50000")
[08:14:57.026]      // while-condition  =>  TRUE
[08:14:57.026]      // while "1"  (timeout="50000")
[08:14:57.026]      // while-condition  =>  TRUE
[08:14:57.026]      // while "1"  (timeout="50000")
[08:14:57.026]      // while-condition  =>  TRUE
[08:14:57.027]      // while "1"  (timeout="50000")
[08:14:57.027]      // while-condition  =>  TRUE
[08:14:57.027]      // while "1"  (timeout="50000")
[08:14:57.027]      // while-condition  =>  TRUE
[08:14:57.027]      // while "1"  (timeout="50000")
[08:14:57.028]      // while-condition  =>  TRUE
[08:14:57.028]      // while "1"  (timeout="50000")
[08:14:57.028]      // while-condition  =>  TRUE
[08:14:57.028]      // while "1"  (timeout="50000")
[08:14:57.028]      // while-condition  =>  TRUE
[08:14:57.028]      // while "1"  (timeout="50000")
[08:14:57.028]      // while-condition  =>  TRUE
[08:14:57.029]      // while "1"  (timeout="50000")
[08:14:57.029]      // while-condition  =>  TRUE
[08:14:57.029]      // while "1"  (timeout="50000")
[08:14:57.030]      // while-condition  =>  TRUE
[08:14:57.030]      // while "1"  (timeout="50000")
[08:14:57.030]      // while-condition  =>  TRUE
[08:14:57.030]      // while "1"  (timeout="50000")
[08:14:57.030]      // while-condition  =>  TRUE
[08:14:57.030]      // while "1"  (timeout="50000")
[08:14:57.031]      // while-condition  =>  TRUE
[08:14:57.031]      // while "1"  (timeout="50000")
[08:14:57.031]      // while-condition  =>  TRUE
[08:14:57.031]      // while "1"  (timeout="50000")
[08:14:57.032]      // while-condition  =>  TRUE
[08:14:57.032]      // while "1"  (timeout="50000")
[08:14:57.032]      // while-condition  =>  TRUE
[08:14:57.032]      // while "1"  (timeout="50000")
[08:14:57.032]      // while-condition  =>  TRUE
[08:14:57.033]      // while "1"  (timeout="50000")
[08:14:57.033]      // while-condition  =>  TRUE
[08:14:57.033]      // while "1"  (timeout="50000")
[08:14:57.033]      // while-condition  =>  TRUE
[08:14:57.033]      // while "1"  (timeout="50000")
[08:14:57.033]      // while-condition  =>  TRUE
[08:14:57.034]      // while "1"  (timeout="50000")
[08:14:57.034]      // while-condition  =>  TRUE
[08:14:57.034]      // while "1"  (timeout="50000")
[08:14:57.034]      // while-condition  =>  TRUE
[08:14:57.034]      // while "1"  (timeout="50000")
[08:14:57.035]      // while-condition  =>  TRUE
[08:14:57.035]      // while "1"  (timeout="50000")
[08:14:57.035]      // while-condition  =>  TRUE
[08:14:57.035]      // while "1"  (timeout="50000")
[08:14:57.035]      // while-condition  =>  TRUE
[08:14:57.035]      // while "1"  (timeout="50000")
[08:14:57.035]      // while-condition  =>  TRUE
[08:14:57.035]      // while "1"  (timeout="50000")
[08:14:57.036]      // while-condition  =>  TRUE
[08:14:57.036]      // while "1"  (timeout="50000")
[08:14:57.036]      // while-condition  =>  TRUE
[08:14:57.036]      // while "1"  (timeout="50000")
[08:14:57.036]      // while-condition  =>  TRUE
[08:14:57.037]      // while "1"  (timeout="50000")
[08:14:57.037]      // while-condition  =>  TRUE
[08:14:57.037]      // while "1"  (timeout="50000")
[08:14:57.037]      // while-condition  =>  TRUE
[08:14:57.038]      // while "1"  (timeout="50000")
[08:14:57.038]      // while-condition  =>  TRUE
[08:14:57.038]      // while "1"  (timeout="50000")
[08:14:57.038]      // while-condition  =>  TRUE
[08:14:57.039]      // while "1"  (timeout="50000")
[08:14:57.039]      // while-condition  =>  TRUE
[08:14:57.039]      // while "1"  (timeout="50000")
[08:14:57.039]      // while-condition  =>  TRUE
[08:14:57.040]      // while "1"  (timeout="50000")
[08:14:57.040]      // while-condition  =>  TRUE
[08:14:57.041]      // while "1"  (timeout="50000")
[08:14:57.041]      // while-condition  =>  TRUE
[08:14:57.041]      // while "1"  (timeout="50000")
[08:14:57.041]      // while-condition  =>  TRUE
[08:14:57.042]      // while "1"  (timeout="50000")
[08:14:57.042]      // while-condition  =>  TRUE
[08:14:57.042]      // while "1"  (timeout="50000")
[08:14:57.042]      // while-condition  =>  TRUE
[08:14:57.042]      // while "1"  (timeout="50000")
[08:14:57.043]      // while-condition  =>  TRUE
[08:14:57.043]      // while "1"  (timeout="50000")
[08:14:57.043]      // while-condition  =>  TRUE
[08:14:57.043]      // while "1"  (timeout="50000")
[08:14:57.044]      // while-condition  =>  TRUE
[08:14:57.044]      // while "1"  (timeout="50000")
[08:14:57.044]      // while-condition  =>  TRUE
[08:14:57.044]      // while "1"  (timeout="50000")
[08:14:57.044]      // while-condition  =>  TRUE
[08:14:57.045]      // while "1"  (timeout="50000")
[08:14:57.045]      // while-condition  =>  TRUE
[08:14:57.045]      // while "1"  (timeout="50000")
[08:14:57.045]      // while-condition  =>  TRUE
[08:14:57.046]      // while "1"  (timeout="50000")
[08:14:57.046]      // while-condition  =>  TRUE
[08:14:57.046]      // while "1"  (timeout="50000")
[08:14:57.046]      // while-condition  =>  TRUE
[08:14:57.046]      // while "1"  (timeout="50000")
[08:14:57.047]      // while-condition  =>  TRUE
[08:14:57.047]      // while "1"  (timeout="50000")
[08:14:57.047]      // while-condition  =>  TRUE
[08:14:57.047]      // while "1"  (timeout="50000")
[08:14:57.047]      // while-condition  =>  TRUE
[08:14:57.048]      // while "1"  (timeout="50000")
[08:14:57.048]      // while-condition  =>  TRUE
[08:14:57.048]      // while "1"  (timeout="50000")
[08:14:57.048]      // while-condition  =>  TRUE
[08:14:57.048]      // while "1"  (timeout="50000")
[08:14:57.049]      // while-condition  =>  TRUE
[08:14:57.049]      // while "1"  (timeout="50000")
[08:14:57.049]      // while-condition  =>  TRUE
[08:14:57.049]      // while "1"  (timeout="50000")
[08:14:57.049]      // while-condition  =>  TRUE
[08:14:57.050]      // while "1"  (timeout="50000")
[08:14:57.050]      // while-condition  =>  TRUE
[08:14:57.050]      // while "1"  (timeout="50000")
[08:14:57.050]      // while-condition  =>  TRUE
[08:14:57.050]      // while "1"  (timeout="50000")
[08:14:57.051]      // while-condition  =>  TRUE
[08:14:57.051]      // while "1"  (timeout="50000")
[08:14:57.051]      // while-condition  =>  TRUE
[08:14:57.051]      // while "1"  (timeout="50000")
[08:14:57.051]      // while-condition  =>  TRUE
[08:14:57.052]      // while "1"  (timeout="50000")
[08:14:57.052]      // while-condition  =>  TRUE
[08:14:57.052]      // while "1"  (timeout="50000")
[08:14:57.052]      // while-condition  =>  TRUE
[08:14:57.052]      // while "1"  (timeout="50000")
[08:14:57.053]      // while-condition  =>  TRUE
[08:14:57.053]      // while "1"  (timeout="50000")
[08:14:57.053]      // while-condition  =>  TRUE
[08:14:57.053]      // while "1"  (timeout="50000")
[08:14:57.053]      // while-condition  =>  TRUE
[08:14:57.053]      // while "1"  (timeout="50000")
[08:14:57.053]      // while-condition  =>  TRUE
[08:14:57.053]      // while "1"  (timeout="50000")
[08:14:57.054]      // while-condition  =>  TRUE
[08:14:57.054]      // while "1"  (timeout="50000")
[08:14:57.054]      // while-condition  =>  TRUE
[08:14:57.054]      // while "1"  (timeout="50000")
[08:14:57.054]      // while-condition  =>  TRUE
[08:14:57.055]      // while "1"  (timeout="50000")
[08:14:57.055]      // while-condition  =>  TRUE
[08:14:57.055]      // while "1"  (timeout="50000")
[08:14:57.055]      // while-condition  =>  TRUE
[08:14:57.055]      // while "1"  (timeout="50000")
[08:14:57.056]      // while-condition  =>  TRUE
[08:14:57.056]      // while "1"  (timeout="50000")
[08:14:57.056]      // while-condition  =>  TRUE
[08:14:57.056]      // while "1"  (timeout="50000")
[08:14:57.056]      // while-condition  =>  TRUE
[08:14:57.057]      // while "1"  (timeout="50000")
[08:14:57.057]      // while-condition  =>  TRUE
[08:14:57.057]      // while "1"  (timeout="50000")
[08:14:57.057]      // while-condition  =>  TRUE
[08:14:57.058]      // while "1"  (timeout="50000")
[08:14:57.058]      // while-condition  =>  TRUE
[08:14:57.058]      // while "1"  (timeout="50000")
[08:14:57.058]      // while-condition  =>  TRUE
[08:14:57.059]      // while "1"  (timeout="50000")
[08:14:57.059]      // while-condition  =>  TRUE
[08:14:57.060]      // while "1"  (timeout="50000")
[08:14:57.060]      // while-condition  =>  TRUE
[08:14:57.060]      // while "1"  (timeout="50000")
[08:14:57.060]      // while-condition  =>  TRUE
[08:14:57.061]      // while "1"  (timeout="50000")
[08:14:57.061]      // while-condition  =>  TRUE
[08:14:57.061]      // while "1"  (timeout="50000")
[08:14:57.061]      // while-condition  =>  TRUE
[08:14:57.061]      // while "1"  (timeout="50000")
[08:14:57.061]      // while-condition  =>  TRUE
[08:14:57.062]      // while "1"  (timeout="50000")
[08:14:57.062]      // while-condition  =>  TRUE
[08:14:57.062]      // while "1"  (timeout="50000")
[08:14:57.062]      // while-condition  =>  TRUE
[08:14:57.063]      // while "1"  (timeout="50000")
[08:14:57.063]      // while-condition  =>  TRUE
[08:14:57.063]      // while "1"  (timeout="50000")
[08:14:57.063]      // while-condition  =>  TRUE
[08:14:57.063]      // while "1"  (timeout="50000")
[08:14:57.064]      // while-condition  =>  TRUE
[08:14:57.064]      // while "1"  (timeout="50000")
[08:14:57.065]      // while-condition  =>  TRUE
[08:14:57.065]      // while "1"  (timeout="50000")
[08:14:57.065]      // while-condition  =>  TRUE
[08:14:57.065]      // while "1"  (timeout="50000")
[08:14:57.065]      // while-condition  =>  TRUE
[08:14:57.066]      // while "1"  (timeout="50000")
[08:14:57.066]      // while-condition  =>  TRUE
[08:14:57.077]      // while "1"  (timeout="50000")
[08:14:57.078]      // while  =>  TIMEOUT
[08:14:57.078]      // end while "1"
[08:14:57.079]    </control>
[08:14:57.080]    <block atomic="false" info="">
[08:14:57.080]      DAP_SWJ_Pins(nReset, nReset, 0);
[08:14:57.091]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:14:57.091]    </block>
[08:14:57.092]  </sequence>
[08:14:57.092]  
[08:20:12.686]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[08:20:12.686]  
[08:20:12.687]  <debugvars>
[08:20:12.687]    // Pre-defined
[08:20:12.687]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:20:12.688]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[08:20:12.688]    __dp=0x00000000
[08:20:12.688]    __ap=0x00000000
[08:20:12.688]    __traceout=0x00000000      (Trace Disabled)
[08:20:12.689]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:20:12.690]    __FlashAddr=0x00000000
[08:20:12.690]    __FlashLen=0x00000000
[08:20:12.690]    __FlashArg=0x00000000
[08:20:12.690]    __FlashOp=0x00000000
[08:20:12.691]    __Result=0x00000000
[08:20:12.691]  </debugvars>
[08:20:12.691]  
[08:20:12.691]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[08:20:12.692]    <block atomic="false" info="">
[08:20:12.692]      __var nReset      = 0x80;
[08:20:12.692]        // -> [nReset <= 0x00000080]
[08:20:12.692]      DAP_SWJ_Pins(0x00, nReset, 0);
[08:20:12.694]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:20:12.694]    </block>
[08:20:12.695]    <control if="" while="1" timeout="50000" info="">
[08:20:12.695]      // while "1"  (timeout="50000")
[08:20:12.696]      // while-condition  =>  TRUE
[08:20:12.696]      // while "1"  (timeout="50000")
[08:20:12.696]      // while-condition  =>  TRUE
[08:20:12.697]      // while "1"  (timeout="50000")
[08:20:12.697]      // while-condition  =>  TRUE
[08:20:12.697]      // while "1"  (timeout="50000")
[08:20:12.697]      // while-condition  =>  TRUE
[08:20:12.697]      // while "1"  (timeout="50000")
[08:20:12.697]      // while-condition  =>  TRUE
[08:20:12.698]      // while "1"  (timeout="50000")
[08:20:12.698]      // while-condition  =>  TRUE
[08:20:12.698]      // while "1"  (timeout="50000")
[08:20:12.698]      // while-condition  =>  TRUE
[08:20:12.698]      // while "1"  (timeout="50000")
[08:20:12.699]      // while-condition  =>  TRUE
[08:20:12.699]      // while "1"  (timeout="50000")
[08:20:12.699]      // while-condition  =>  TRUE
[08:20:12.700]      // while "1"  (timeout="50000")
[08:20:12.700]      // while-condition  =>  TRUE
[08:20:12.700]      // while "1"  (timeout="50000")
[08:20:12.700]      // while-condition  =>  TRUE
[08:20:12.700]      // while "1"  (timeout="50000")
[08:20:12.701]      // while-condition  =>  TRUE
[08:20:12.701]      // while "1"  (timeout="50000")
[08:20:12.701]      // while-condition  =>  TRUE
[08:20:12.701]      // while "1"  (timeout="50000")
[08:20:12.701]      // while-condition  =>  TRUE
[08:20:12.701]      // while "1"  (timeout="50000")
[08:20:12.701]      // while-condition  =>  TRUE
[08:20:12.702]      // while "1"  (timeout="50000")
[08:20:12.702]      // while-condition  =>  TRUE
[08:20:12.702]      // while "1"  (timeout="50000")
[08:20:12.702]      // while-condition  =>  TRUE
[08:20:12.702]      // while "1"  (timeout="50000")
[08:20:12.703]      // while-condition  =>  TRUE
[08:20:12.703]      // while "1"  (timeout="50000")
[08:20:12.703]      // while-condition  =>  TRUE
[08:20:12.703]      // while "1"  (timeout="50000")
[08:20:12.704]      // while-condition  =>  TRUE
[08:20:12.704]      // while "1"  (timeout="50000")
[08:20:12.704]      // while-condition  =>  TRUE
[08:20:12.704]      // while "1"  (timeout="50000")
[08:20:12.704]      // while-condition  =>  TRUE
[08:20:12.704]      // while "1"  (timeout="50000")
[08:20:12.704]      // while-condition  =>  TRUE
[08:20:12.704]      // while "1"  (timeout="50000")
[08:20:12.704]      // while-condition  =>  TRUE
[08:20:12.705]      // while "1"  (timeout="50000")
[08:20:12.705]      // while-condition  =>  TRUE
[08:20:12.705]      // while "1"  (timeout="50000")
[08:20:12.705]      // while-condition  =>  TRUE
[08:20:12.705]      // while "1"  (timeout="50000")
[08:20:12.706]      // while-condition  =>  TRUE
[08:20:12.706]      // while "1"  (timeout="50000")
[08:20:12.706]      // while-condition  =>  TRUE
[08:20:12.706]      // while "1"  (timeout="50000")
[08:20:12.706]      // while-condition  =>  TRUE
[08:20:12.707]      // while "1"  (timeout="50000")
[08:20:12.707]      // while-condition  =>  TRUE
[08:20:12.707]      // while "1"  (timeout="50000")
[08:20:12.707]      // while-condition  =>  TRUE
[08:20:12.707]      // while "1"  (timeout="50000")
[08:20:12.708]      // while-condition  =>  TRUE
[08:20:12.708]      // while "1"  (timeout="50000")
[08:20:12.708]      // while-condition  =>  TRUE
[08:20:12.708]      // while "1"  (timeout="50000")
[08:20:12.709]      // while-condition  =>  TRUE
[08:20:12.709]      // while "1"  (timeout="50000")
[08:20:12.709]      // while-condition  =>  TRUE
[08:20:12.709]      // while "1"  (timeout="50000")
[08:20:12.710]      // while-condition  =>  TRUE
[08:20:12.710]      // while "1"  (timeout="50000")
[08:20:12.710]      // while-condition  =>  TRUE
[08:20:12.710]      // while "1"  (timeout="50000")
[08:20:12.710]      // while-condition  =>  TRUE
[08:20:12.711]      // while "1"  (timeout="50000")
[08:20:12.711]      // while-condition  =>  TRUE
[08:20:12.711]      // while "1"  (timeout="50000")
[08:20:12.712]      // while-condition  =>  TRUE
[08:20:12.712]      // while "1"  (timeout="50000")
[08:20:12.713]      // while-condition  =>  TRUE
[08:20:12.713]      // while "1"  (timeout="50000")
[08:20:12.713]      // while-condition  =>  TRUE
[08:20:12.713]      // while "1"  (timeout="50000")
[08:20:12.714]      // while-condition  =>  TRUE
[08:20:12.714]      // while "1"  (timeout="50000")
[08:20:12.714]      // while-condition  =>  TRUE
[08:20:12.714]      // while "1"  (timeout="50000")
[08:20:12.715]      // while-condition  =>  TRUE
[08:20:12.715]      // while "1"  (timeout="50000")
[08:20:12.715]      // while-condition  =>  TRUE
[08:20:12.715]      // while "1"  (timeout="50000")
[08:20:12.716]      // while-condition  =>  TRUE
[08:20:12.716]      // while "1"  (timeout="50000")
[08:20:12.716]      // while-condition  =>  TRUE
[08:20:12.716]      // while "1"  (timeout="50000")
[08:20:12.717]      // while-condition  =>  TRUE
[08:20:12.717]      // while "1"  (timeout="50000")
[08:20:12.717]      // while-condition  =>  TRUE
[08:20:12.717]      // while "1"  (timeout="50000")
[08:20:12.717]      // while-condition  =>  TRUE
[08:20:12.718]      // while "1"  (timeout="50000")
[08:20:12.718]      // while-condition  =>  TRUE
[08:20:12.718]      // while "1"  (timeout="50000")
[08:20:12.718]      // while-condition  =>  TRUE
[08:20:12.719]      // while "1"  (timeout="50000")
[08:20:12.719]      // while-condition  =>  TRUE
[08:20:12.719]      // while "1"  (timeout="50000")
[08:20:12.719]      // while-condition  =>  TRUE
[08:20:12.719]      // while "1"  (timeout="50000")
[08:20:12.720]      // while-condition  =>  TRUE
[08:20:12.720]      // while "1"  (timeout="50000")
[08:20:12.720]      // while-condition  =>  TRUE
[08:20:12.720]      // while "1"  (timeout="50000")
[08:20:12.720]      // while-condition  =>  TRUE
[08:20:12.721]      // while "1"  (timeout="50000")
[08:20:12.721]      // while-condition  =>  TRUE
[08:20:12.721]      // while "1"  (timeout="50000")
[08:20:12.721]      // while-condition  =>  TRUE
[08:20:12.721]      // while "1"  (timeout="50000")
[08:20:12.722]      // while-condition  =>  TRUE
[08:20:12.722]      // while "1"  (timeout="50000")
[08:20:12.722]      // while-condition  =>  TRUE
[08:20:12.722]      // while "1"  (timeout="50000")
[08:20:12.722]      // while-condition  =>  TRUE
[08:20:12.723]      // while "1"  (timeout="50000")
[08:20:12.723]      // while-condition  =>  TRUE
[08:20:12.723]      // while "1"  (timeout="50000")
[08:20:12.723]      // while-condition  =>  TRUE
[08:20:12.723]      // while "1"  (timeout="50000")
[08:20:12.724]      // while-condition  =>  TRUE
[08:20:12.724]      // while "1"  (timeout="50000")
[08:20:12.724]      // while-condition  =>  TRUE
[08:20:12.724]      // while "1"  (timeout="50000")
[08:20:12.724]      // while-condition  =>  TRUE
[08:20:12.725]      // while "1"  (timeout="50000")
[08:20:12.725]      // while-condition  =>  TRUE
[08:20:12.725]      // while "1"  (timeout="50000")
[08:20:12.725]      // while-condition  =>  TRUE
[08:20:12.725]      // while "1"  (timeout="50000")
[08:20:12.726]      // while-condition  =>  TRUE
[08:20:12.726]      // while "1"  (timeout="50000")
[08:20:12.726]      // while-condition  =>  TRUE
[08:20:12.726]      // while "1"  (timeout="50000")
[08:20:12.726]      // while-condition  =>  TRUE
[08:20:12.727]      // while "1"  (timeout="50000")
[08:20:12.727]      // while-condition  =>  TRUE
[08:20:12.727]      // while "1"  (timeout="50000")
[08:20:12.727]      // while-condition  =>  TRUE
[08:20:12.728]      // while "1"  (timeout="50000")
[08:20:12.728]      // while-condition  =>  TRUE
[08:20:12.728]      // while "1"  (timeout="50000")
[08:20:12.728]      // while-condition  =>  TRUE
[08:20:12.728]      // while "1"  (timeout="50000")
[08:20:12.729]      // while-condition  =>  TRUE
[08:20:12.729]      // while "1"  (timeout="50000")
[08:20:12.729]      // while-condition  =>  TRUE
[08:20:12.729]      // while "1"  (timeout="50000")
[08:20:12.730]      // while-condition  =>  TRUE
[08:20:12.730]      // while "1"  (timeout="50000")
[08:20:12.731]      // while-condition  =>  TRUE
[08:20:12.731]      // while "1"  (timeout="50000")
[08:20:12.731]      // while-condition  =>  TRUE
[08:20:12.731]      // while "1"  (timeout="50000")
[08:20:12.732]      // while-condition  =>  TRUE
[08:20:12.732]      // while "1"  (timeout="50000")
[08:20:12.732]      // while-condition  =>  TRUE
[08:20:12.732]      // while "1"  (timeout="50000")
[08:20:12.732]      // while-condition  =>  TRUE
[08:20:12.733]      // while "1"  (timeout="50000")
[08:20:12.733]      // while-condition  =>  TRUE
[08:20:12.733]      // while "1"  (timeout="50000")
[08:20:12.733]      // while-condition  =>  TRUE
[08:20:12.733]      // while "1"  (timeout="50000")
[08:20:12.734]      // while-condition  =>  TRUE
[08:20:12.734]      // while "1"  (timeout="50000")
[08:20:12.734]      // while-condition  =>  TRUE
[08:20:12.734]      // while "1"  (timeout="50000")
[08:20:12.734]      // while-condition  =>  TRUE
[08:20:12.734]      // while "1"  (timeout="50000")
[08:20:12.734]      // while-condition  =>  TRUE
[08:20:12.734]      // while "1"  (timeout="50000")
[08:20:12.734]      // while-condition  =>  TRUE
[08:20:12.735]      // while "1"  (timeout="50000")
[08:20:12.736]      // while-condition  =>  TRUE
[08:20:12.736]      // while "1"  (timeout="50000")
[08:20:12.736]      // while-condition  =>  TRUE
[08:20:12.736]      // while "1"  (timeout="50000")
[08:20:12.736]      // while-condition  =>  TRUE
[08:20:12.736]      // while "1"  (timeout="50000")
[08:20:12.737]      // while-condition  =>  TRUE
[08:20:12.737]      // while "1"  (timeout="50000")
[08:20:12.737]      // while-condition  =>  TRUE
[08:20:12.737]      // while "1"  (timeout="50000")
[08:20:12.737]      // while-condition  =>  TRUE
[08:20:12.737]      // while "1"  (timeout="50000")
[08:20:12.737]      // while-condition  =>  TRUE
[08:20:12.738]      // while "1"  (timeout="50000")
[08:20:12.738]      // while-condition  =>  TRUE
[08:20:12.738]      // while "1"  (timeout="50000")
[08:20:12.738]      // while-condition  =>  TRUE
[08:20:12.738]      // while "1"  (timeout="50000")
[08:20:12.739]      // while-condition  =>  TRUE
[08:20:12.739]      // while "1"  (timeout="50000")
[08:20:12.739]      // while-condition  =>  TRUE
[08:20:12.739]      // while "1"  (timeout="50000")
[08:20:12.739]      // while-condition  =>  TRUE
[08:20:12.740]      // while "1"  (timeout="50000")
[08:20:12.740]      // while-condition  =>  TRUE
[08:20:12.741]      // while "1"  (timeout="50000")
[08:20:12.741]      // while-condition  =>  TRUE
[08:20:12.741]      // while "1"  (timeout="50000")
[08:20:12.741]      // while-condition  =>  TRUE
[08:20:12.741]      // while "1"  (timeout="50000")
[08:20:12.742]      // while-condition  =>  TRUE
[08:20:12.742]      // while "1"  (timeout="50000")
[08:20:12.742]      // while-condition  =>  TRUE
[08:20:12.742]      // while "1"  (timeout="50000")
[08:20:12.742]      // while-condition  =>  TRUE
[08:20:12.743]      // while "1"  (timeout="50000")
[08:20:12.743]      // while-condition  =>  TRUE
[08:20:12.743]      // while "1"  (timeout="50000")
[08:20:12.743]      // while-condition  =>  TRUE
[08:20:12.743]      // while "1"  (timeout="50000")
[08:20:12.744]      // while-condition  =>  TRUE
[08:20:12.744]      // while "1"  (timeout="50000")
[08:20:12.744]      // while-condition  =>  TRUE
[08:20:12.744]      // while "1"  (timeout="50000")
[08:20:12.744]      // while-condition  =>  TRUE
[08:20:12.744]      // while "1"  (timeout="50000")
[08:20:12.744]      // while-condition  =>  TRUE
[08:20:12.744]      // while "1"  (timeout="50000")
[08:20:12.744]      // while-condition  =>  TRUE
[08:20:12.745]      // while "1"  (timeout="50000")
[08:20:12.745]      // while-condition  =>  TRUE
[08:20:12.745]      // while "1"  (timeout="50000")
[08:20:12.745]      // while-condition  =>  TRUE
[08:20:12.745]      // while "1"  (timeout="50000")
[08:20:12.746]      // while-condition  =>  TRUE
[08:20:12.747]      // while "1"  (timeout="50000")
[08:20:12.747]      // while-condition  =>  TRUE
[08:20:12.747]      // while "1"  (timeout="50000")
[08:20:12.747]      // while-condition  =>  TRUE
[08:20:12.747]      // while "1"  (timeout="50000")
[08:20:12.748]      // while-condition  =>  TRUE
[08:20:12.748]      // while "1"  (timeout="50000")
[08:20:12.748]      // while-condition  =>  TRUE
[08:20:12.748]      // while "1"  (timeout="50000")
[08:20:12.748]      // while-condition  =>  TRUE
[08:20:12.748]      // while "1"  (timeout="50000")
[08:20:12.748]      // while-condition  =>  TRUE
[08:20:12.748]      // while "1"  (timeout="50000")
[08:20:12.748]      // while-condition  =>  TRUE
[08:20:12.749]      // while "1"  (timeout="50000")
[08:20:12.749]      // while-condition  =>  TRUE
[08:20:12.749]      // while "1"  (timeout="50000")
[08:20:12.749]      // while-condition  =>  TRUE
[08:20:12.749]      // while "1"  (timeout="50000")
[08:20:12.750]      // while-condition  =>  TRUE
[08:20:12.750]      // while "1"  (timeout="50000")
[08:20:12.750]      // while-condition  =>  TRUE
[08:20:12.750]      // while "1"  (timeout="50000")
[08:20:12.750]      // while-condition  =>  TRUE
[08:20:12.750]      // while "1"  (timeout="50000")
[08:20:12.751]      // while-condition  =>  TRUE
[08:20:12.752]      // while "1"  (timeout="50000")
[08:20:12.752]      // while-condition  =>  TRUE
[08:20:12.752]      // while "1"  (timeout="50000")
[08:20:12.752]      // while-condition  =>  TRUE
[08:20:12.752]      // while "1"  (timeout="50000")
[08:20:12.752]      // while-condition  =>  TRUE
[08:20:12.752]      // while "1"  (timeout="50000")
[08:20:12.753]      // while-condition  =>  TRUE
[08:20:12.753]      // while "1"  (timeout="50000")
[08:20:12.753]      // while-condition  =>  TRUE
[08:20:12.753]      // while "1"  (timeout="50000")
[08:20:12.753]      // while-condition  =>  TRUE
[08:20:12.754]      // while "1"  (timeout="50000")
[08:20:12.754]      // while-condition  =>  TRUE
[08:20:12.754]      // while "1"  (timeout="50000")
[08:20:12.754]      // while-condition  =>  TRUE
[08:20:12.754]      // while "1"  (timeout="50000")
[08:20:12.755]      // while-condition  =>  TRUE
[08:20:12.755]      // while "1"  (timeout="50000")
[08:20:12.755]      // while-condition  =>  TRUE
[08:20:12.755]      // while "1"  (timeout="50000")
[08:20:12.755]      // while-condition  =>  TRUE
[08:20:12.756]      // while "1"  (timeout="50000")
[08:20:12.756]      // while  =>  TIMEOUT
[08:20:12.756]      // end while "1"
[08:20:12.757]    </control>
[08:20:12.757]    <block atomic="false" info="">
[08:20:12.757]      DAP_SWJ_Pins(nReset, nReset, 0);
[08:20:12.769]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:20:12.781]    </block>
[08:20:12.782]    <control if="" while="1" timeout="10000" info="">
[08:20:12.782]      // while "1"  (timeout="10000")
[08:20:12.783]      // while-condition  =>  TRUE
[08:20:12.783]      // while "1"  (timeout="10000")
[08:20:12.784]      // while-condition  =>  TRUE
[08:20:12.785]      // while "1"  (timeout="10000")
[08:20:12.785]      // while-condition  =>  TRUE
[08:20:12.786]      // while "1"  (timeout="10000")
[08:20:12.786]      // while-condition  =>  TRUE
[08:20:12.787]      // while "1"  (timeout="10000")
[08:20:12.787]      // while-condition  =>  TRUE
[08:20:12.788]      // while "1"  (timeout="10000")
[08:20:12.788]      // while  =>  TIMEOUT
[08:20:12.788]      // end while "1"
[08:20:12.788]    </control>
[08:20:12.789]    <block atomic="true" info="">
[08:20:12.789]      // ATOMIC SEQUENCE - EXECUTE
[08:20:12.791]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[08:20:12.791]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[08:20:12.791]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[08:20:12.792]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[08:20:12.792]      // ATOMIC SEQUENCE - DONE
[08:20:12.794]    </block>
[08:20:12.794]    <block atomic="false" info="">
[08:20:12.794]      __errorcontrol = 0x00000001;
[08:20:12.795]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[08:20:12.795]      ReadDP(0x0);
[08:20:12.796]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[08:20:12.797]      __errorcontrol = 0x00000000;
[08:20:12.797]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[08:20:12.798]    </block>
[08:20:12.798]  </sequence>
[08:20:12.798]  
[08:20:12.798]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[08:20:12.798]  
[08:20:12.799]  <debugvars>
[08:20:12.799]    // Pre-defined
[08:20:12.799]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:20:12.799]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:20:12.800]    __dp=0x00000000
[08:20:12.800]    __ap=0x00000000
[08:20:12.800]    __traceout=0x00000000      (Trace Disabled)
[08:20:12.801]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:20:12.801]    __FlashAddr=0x00000000
[08:20:12.801]    __FlashLen=0x00000000
[08:20:12.801]    __FlashArg=0x00000000
[08:20:12.802]    __FlashOp=0x00000000
[08:20:12.802]    __Result=0x00000000
[08:20:12.802]  </debugvars>
[08:20:12.802]  
[08:20:12.803]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[08:20:12.803]  </sequence>
[08:20:12.803]  
[08:20:12.805]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[08:20:12.805]  
[08:20:12.806]  <debugvars>
[08:20:12.806]    // Pre-defined
[08:20:12.806]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:20:12.806]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:20:12.807]    __dp=0x00000000
[08:20:12.807]    __ap=0x00000000
[08:20:12.807]    __traceout=0x00000000      (Trace Disabled)
[08:20:12.807]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:20:12.807]    __FlashAddr=0x00000000
[08:20:12.807]    __FlashLen=0x00000000
[08:20:12.807]    __FlashArg=0x00000000
[08:20:12.808]    __FlashOp=0x00000000
[08:20:12.808]    __Result=0x00000000
[08:20:12.808]  </debugvars>
[08:20:12.808]  
[08:20:12.809]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[08:20:12.809]    <block atomic="false" info="">
[08:20:12.809]      __var SW_DP_ABORT  = 0x0;
[08:20:12.809]        // -> [SW_DP_ABORT <= 0x00000000]
[08:20:12.810]      __var DP_CTRL_STAT = 0x4;
[08:20:12.810]        // -> [DP_CTRL_STAT <= 0x00000004]
[08:20:12.810]      __var DP_SELECT    = 0x8;
[08:20:12.810]        // -> [DP_SELECT <= 0x00000008]
[08:20:12.811]      __var powered_down = 0;
[08:20:12.811]        // -> [powered_down <= 0x00000000]
[08:20:12.811]      WriteDP(DP_SELECT, 0x00000000);
[08:20:12.830]  
[08:20:12.830]  !!! E310 : Debug access failed - cannot write value 0x00000000 to DP register 0x08
[08:20:12.830]  
[08:20:12.832]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:20:12.833]    </block>
[08:20:12.833]  </sequence>
[08:20:12.833]  
[08:20:13.892]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[08:20:13.892]  
[08:20:13.892]  <debugvars>
[08:20:13.892]    // Pre-defined
[08:20:13.893]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:20:13.893]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:20:13.893]    __dp=0x00000000
[08:20:13.893]    __ap=0x00000000
[08:20:13.894]    __traceout=0x00000000      (Trace Disabled)
[08:20:13.894]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:20:13.894]    __FlashAddr=0x00000000
[08:20:13.894]    __FlashLen=0x00000000
[08:20:13.895]    __FlashArg=0x00000000
[08:20:13.895]    __FlashOp=0x00000000
[08:20:13.895]    __Result=0x00000000
[08:20:13.895]  </debugvars>
[08:20:13.896]  
[08:20:13.896]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[08:20:13.896]    <block atomic="false" info="">
[08:20:13.897]      __var nReset      = 0x80;
[08:20:13.897]        // -> [nReset <= 0x00000080]
[08:20:13.898]      DAP_SWJ_Pins(0x00, nReset, 0);
[08:20:13.899]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:20:13.899]    </block>
[08:20:13.899]    <control if="" while="1" timeout="50000" info="">
[08:20:13.900]      // while "1"  (timeout="50000")
[08:20:13.900]      // while-condition  =>  TRUE
[08:20:13.900]      // while "1"  (timeout="50000")
[08:20:13.900]      // while-condition  =>  TRUE
[08:20:13.901]      // while "1"  (timeout="50000")
[08:20:13.901]      // while-condition  =>  TRUE
[08:20:13.901]      // while "1"  (timeout="50000")
[08:20:13.901]      // while-condition  =>  TRUE
[08:20:13.901]      // while "1"  (timeout="50000")
[08:20:13.902]      // while-condition  =>  TRUE
[08:20:13.902]      // while "1"  (timeout="50000")
[08:20:13.903]      // while-condition  =>  TRUE
[08:20:13.903]      // while "1"  (timeout="50000")
[08:20:13.903]      // while-condition  =>  TRUE
[08:20:13.903]      // while "1"  (timeout="50000")
[08:20:13.903]      // while-condition  =>  TRUE
[08:20:13.903]      // while "1"  (timeout="50000")
[08:20:13.903]      // while-condition  =>  TRUE
[08:20:13.903]      // while "1"  (timeout="50000")
[08:20:13.903]      // while-condition  =>  TRUE
[08:20:13.904]      // while "1"  (timeout="50000")
[08:20:13.904]      // while-condition  =>  TRUE
[08:20:13.905]      // while "1"  (timeout="50000")
[08:20:13.905]      // while-condition  =>  TRUE
[08:20:13.905]      // while "1"  (timeout="50000")
[08:20:13.905]      // while-condition  =>  TRUE
[08:20:13.905]      // while "1"  (timeout="50000")
[08:20:13.905]      // while-condition  =>  TRUE
[08:20:13.905]      // while "1"  (timeout="50000")
[08:20:13.905]      // while-condition  =>  TRUE
[08:20:13.905]      // while "1"  (timeout="50000")
[08:20:13.906]      // while-condition  =>  TRUE
[08:20:13.907]      // while "1"  (timeout="50000")
[08:20:13.907]      // while-condition  =>  TRUE
[08:20:13.907]      // while "1"  (timeout="50000")
[08:20:13.907]      // while-condition  =>  TRUE
[08:20:13.907]      // while "1"  (timeout="50000")
[08:20:13.908]      // while-condition  =>  TRUE
[08:20:13.908]      // while "1"  (timeout="50000")
[08:20:13.908]      // while-condition  =>  TRUE
[08:20:13.908]      // while "1"  (timeout="50000")
[08:20:13.908]      // while-condition  =>  TRUE
[08:20:13.908]      // while "1"  (timeout="50000")
[08:20:13.908]      // while-condition  =>  TRUE
[08:20:13.908]      // while "1"  (timeout="50000")
[08:20:13.909]      // while-condition  =>  TRUE
[08:20:13.909]      // while "1"  (timeout="50000")
[08:20:13.909]      // while-condition  =>  TRUE
[08:20:13.909]      // while "1"  (timeout="50000")
[08:20:13.909]      // while-condition  =>  TRUE
[08:20:13.910]      // while "1"  (timeout="50000")
[08:20:13.910]      // while-condition  =>  TRUE
[08:20:13.910]      // while "1"  (timeout="50000")
[08:20:13.910]      // while-condition  =>  TRUE
[08:20:13.910]      // while "1"  (timeout="50000")
[08:20:13.911]      // while-condition  =>  TRUE
[08:20:13.911]      // while "1"  (timeout="50000")
[08:20:13.911]      // while-condition  =>  TRUE
[08:20:13.911]      // while "1"  (timeout="50000")
[08:20:13.912]      // while-condition  =>  TRUE
[08:20:13.912]      // while "1"  (timeout="50000")
[08:20:13.912]      // while-condition  =>  TRUE
[08:20:13.912]      // while "1"  (timeout="50000")
[08:20:13.913]      // while-condition  =>  TRUE
[08:20:13.913]      // while "1"  (timeout="50000")
[08:20:13.913]      // while-condition  =>  TRUE
[08:20:13.914]      // while "1"  (timeout="50000")
[08:20:13.914]      // while-condition  =>  TRUE
[08:20:13.914]      // while "1"  (timeout="50000")
[08:20:13.914]      // while-condition  =>  TRUE
[08:20:13.915]      // while "1"  (timeout="50000")
[08:20:13.915]      // while-condition  =>  TRUE
[08:20:13.915]      // while "1"  (timeout="50000")
[08:20:13.915]      // while-condition  =>  TRUE
[08:20:13.916]      // while "1"  (timeout="50000")
[08:20:13.916]      // while-condition  =>  TRUE
[08:20:13.916]      // while "1"  (timeout="50000")
[08:20:13.917]      // while-condition  =>  TRUE
[08:20:13.917]      // while "1"  (timeout="50000")
[08:20:13.917]      // while-condition  =>  TRUE
[08:20:13.917]      // while "1"  (timeout="50000")
[08:20:13.918]      // while-condition  =>  TRUE
[08:20:13.918]      // while "1"  (timeout="50000")
[08:20:13.918]      // while-condition  =>  TRUE
[08:20:13.918]      // while "1"  (timeout="50000")
[08:20:13.918]      // while-condition  =>  TRUE
[08:20:13.919]      // while "1"  (timeout="50000")
[08:20:13.919]      // while-condition  =>  TRUE
[08:20:13.919]      // while "1"  (timeout="50000")
[08:20:13.919]      // while-condition  =>  TRUE
[08:20:13.920]      // while "1"  (timeout="50000")
[08:20:13.920]      // while-condition  =>  TRUE
[08:20:13.920]      // while "1"  (timeout="50000")
[08:20:13.920]      // while-condition  =>  TRUE
[08:20:13.920]      // while "1"  (timeout="50000")
[08:20:13.921]      // while-condition  =>  TRUE
[08:20:13.921]      // while "1"  (timeout="50000")
[08:20:13.921]      // while-condition  =>  TRUE
[08:20:13.921]      // while "1"  (timeout="50000")
[08:20:13.921]      // while-condition  =>  TRUE
[08:20:13.922]      // while "1"  (timeout="50000")
[08:20:13.922]      // while-condition  =>  TRUE
[08:20:13.922]      // while "1"  (timeout="50000")
[08:20:13.922]      // while-condition  =>  TRUE
[08:20:13.922]      // while "1"  (timeout="50000")
[08:20:13.923]      // while-condition  =>  TRUE
[08:20:13.923]      // while "1"  (timeout="50000")
[08:20:13.923]      // while-condition  =>  TRUE
[08:20:13.923]      // while "1"  (timeout="50000")
[08:20:13.923]      // while-condition  =>  TRUE
[08:20:13.924]      // while "1"  (timeout="50000")
[08:20:13.924]      // while-condition  =>  TRUE
[08:20:13.924]      // while "1"  (timeout="50000")
[08:20:13.924]      // while-condition  =>  TRUE
[08:20:13.925]      // while "1"  (timeout="50000")
[08:20:13.925]      // while-condition  =>  TRUE
[08:20:13.925]      // while "1"  (timeout="50000")
[08:20:13.925]      // while-condition  =>  TRUE
[08:20:13.925]      // while "1"  (timeout="50000")
[08:20:13.926]      // while-condition  =>  TRUE
[08:20:13.926]      // while "1"  (timeout="50000")
[08:20:13.926]      // while-condition  =>  TRUE
[08:20:13.927]      // while "1"  (timeout="50000")
[08:20:13.927]      // while-condition  =>  TRUE
[08:20:13.927]      // while "1"  (timeout="50000")
[08:20:13.928]      // while-condition  =>  TRUE
[08:20:13.928]      // while "1"  (timeout="50000")
[08:20:13.929]      // while-condition  =>  TRUE
[08:20:13.929]      // while "1"  (timeout="50000")
[08:20:13.929]      // while-condition  =>  TRUE
[08:20:13.929]      // while "1"  (timeout="50000")
[08:20:13.929]      // while-condition  =>  TRUE
[08:20:13.929]      // while "1"  (timeout="50000")
[08:20:13.930]      // while-condition  =>  TRUE
[08:20:13.930]      // while "1"  (timeout="50000")
[08:20:13.931]      // while-condition  =>  TRUE
[08:20:13.931]      // while "1"  (timeout="50000")
[08:20:13.931]      // while-condition  =>  TRUE
[08:20:13.931]      // while "1"  (timeout="50000")
[08:20:13.931]      // while-condition  =>  TRUE
[08:20:13.931]      // while "1"  (timeout="50000")
[08:20:13.931]      // while-condition  =>  TRUE
[08:20:13.932]      // while "1"  (timeout="50000")
[08:20:13.932]      // while-condition  =>  TRUE
[08:20:13.932]      // while "1"  (timeout="50000")
[08:20:13.932]      // while-condition  =>  TRUE
[08:20:13.932]      // while "1"  (timeout="50000")
[08:20:13.933]      // while-condition  =>  TRUE
[08:20:13.933]      // while "1"  (timeout="50000")
[08:20:13.933]      // while-condition  =>  TRUE
[08:20:13.933]      // while "1"  (timeout="50000")
[08:20:13.934]      // while-condition  =>  TRUE
[08:20:13.934]      // while "1"  (timeout="50000")
[08:20:13.934]      // while-condition  =>  TRUE
[08:20:13.934]      // while "1"  (timeout="50000")
[08:20:13.934]      // while-condition  =>  TRUE
[08:20:13.936]      // while "1"  (timeout="50000")
[08:20:13.936]      // while-condition  =>  TRUE
[08:20:13.936]      // while "1"  (timeout="50000")
[08:20:13.936]      // while-condition  =>  TRUE
[08:20:13.936]      // while "1"  (timeout="50000")
[08:20:13.936]      // while-condition  =>  TRUE
[08:20:13.936]      // while "1"  (timeout="50000")
[08:20:13.937]      // while-condition  =>  TRUE
[08:20:13.937]      // while "1"  (timeout="50000")
[08:20:13.937]      // while-condition  =>  TRUE
[08:20:13.937]      // while "1"  (timeout="50000")
[08:20:13.937]      // while-condition  =>  TRUE
[08:20:13.938]      // while "1"  (timeout="50000")
[08:20:13.938]      // while-condition  =>  TRUE
[08:20:13.938]      // while "1"  (timeout="50000")
[08:20:13.938]      // while-condition  =>  TRUE
[08:20:13.938]      // while "1"  (timeout="50000")
[08:20:13.939]      // while-condition  =>  TRUE
[08:20:13.939]      // while "1"  (timeout="50000")
[08:20:13.939]      // while-condition  =>  TRUE
[08:20:13.939]      // while "1"  (timeout="50000")
[08:20:13.939]      // while-condition  =>  TRUE
[08:20:13.940]      // while "1"  (timeout="50000")
[08:20:13.940]      // while-condition  =>  TRUE
[08:20:13.940]      // while "1"  (timeout="50000")
[08:20:13.940]      // while-condition  =>  TRUE
[08:20:13.940]      // while "1"  (timeout="50000")
[08:20:13.941]      // while-condition  =>  TRUE
[08:20:13.941]      // while "1"  (timeout="50000")
[08:20:13.941]      // while-condition  =>  TRUE
[08:20:13.941]      // while "1"  (timeout="50000")
[08:20:13.942]      // while-condition  =>  TRUE
[08:20:13.942]      // while "1"  (timeout="50000")
[08:20:13.942]      // while-condition  =>  TRUE
[08:20:13.942]      // while "1"  (timeout="50000")
[08:20:13.942]      // while-condition  =>  TRUE
[08:20:13.943]      // while "1"  (timeout="50000")
[08:20:13.943]      // while-condition  =>  TRUE
[08:20:13.943]      // while "1"  (timeout="50000")
[08:20:13.943]      // while-condition  =>  TRUE
[08:20:13.944]      // while "1"  (timeout="50000")
[08:20:13.944]      // while-condition  =>  TRUE
[08:20:13.944]      // while "1"  (timeout="50000")
[08:20:13.944]      // while-condition  =>  TRUE
[08:20:13.945]      // while "1"  (timeout="50000")
[08:20:13.945]      // while-condition  =>  TRUE
[08:20:13.945]      // while "1"  (timeout="50000")
[08:20:13.945]      // while-condition  =>  TRUE
[08:20:13.946]      // while "1"  (timeout="50000")
[08:20:13.946]      // while-condition  =>  TRUE
[08:20:13.947]      // while "1"  (timeout="50000")
[08:20:13.947]      // while-condition  =>  TRUE
[08:20:13.948]      // while "1"  (timeout="50000")
[08:20:13.948]      // while-condition  =>  TRUE
[08:20:13.948]      // while "1"  (timeout="50000")
[08:20:13.949]      // while-condition  =>  TRUE
[08:20:13.949]      // while "1"  (timeout="50000")
[08:20:13.949]      // while-condition  =>  TRUE
[08:20:13.949]      // while "1"  (timeout="50000")
[08:20:13.949]      // while-condition  =>  TRUE
[08:20:13.949]      // while "1"  (timeout="50000")
[08:20:13.950]      // while-condition  =>  TRUE
[08:20:13.950]      // while "1"  (timeout="50000")
[08:20:13.950]      // while-condition  =>  TRUE
[08:20:13.950]      // while "1"  (timeout="50000")
[08:20:13.951]      // while-condition  =>  TRUE
[08:20:13.952]      // while "1"  (timeout="50000")
[08:20:13.952]      // while-condition  =>  TRUE
[08:20:13.952]      // while "1"  (timeout="50000")
[08:20:13.952]      // while-condition  =>  TRUE
[08:20:13.952]      // while "1"  (timeout="50000")
[08:20:13.952]      // while-condition  =>  TRUE
[08:20:13.952]      // while "1"  (timeout="50000")
[08:20:13.952]      // while-condition  =>  TRUE
[08:20:13.952]      // while "1"  (timeout="50000")
[08:20:13.953]      // while-condition  =>  TRUE
[08:20:13.953]      // while "1"  (timeout="50000")
[08:20:13.953]      // while-condition  =>  TRUE
[08:20:13.953]      // while "1"  (timeout="50000")
[08:20:13.953]      // while-condition  =>  TRUE
[08:20:13.953]      // while "1"  (timeout="50000")
[08:20:13.954]      // while-condition  =>  TRUE
[08:20:13.954]      // while "1"  (timeout="50000")
[08:20:13.954]      // while-condition  =>  TRUE
[08:20:13.954]      // while "1"  (timeout="50000")
[08:20:13.955]      // while-condition  =>  TRUE
[08:20:13.956]      // while "1"  (timeout="50000")
[08:20:13.956]      // while-condition  =>  TRUE
[08:20:13.956]      // while "1"  (timeout="50000")
[08:20:13.956]      // while-condition  =>  TRUE
[08:20:13.956]      // while "1"  (timeout="50000")
[08:20:13.956]      // while-condition  =>  TRUE
[08:20:13.956]      // while "1"  (timeout="50000")
[08:20:13.956]      // while-condition  =>  TRUE
[08:20:13.956]      // while "1"  (timeout="50000")
[08:20:13.957]      // while-condition  =>  TRUE
[08:20:13.957]      // while "1"  (timeout="50000")
[08:20:13.957]      // while-condition  =>  TRUE
[08:20:13.957]      // while "1"  (timeout="50000")
[08:20:13.957]      // while-condition  =>  TRUE
[08:20:13.958]      // while "1"  (timeout="50000")
[08:20:13.958]      // while-condition  =>  TRUE
[08:20:13.958]      // while "1"  (timeout="50000")
[08:20:13.958]      // while-condition  =>  TRUE
[08:20:13.958]      // while "1"  (timeout="50000")
[08:20:13.958]      // while-condition  =>  TRUE
[08:20:13.959]      // while "1"  (timeout="50000")
[08:20:13.959]      // while  =>  TIMEOUT
[08:20:13.959]      // end while "1"
[08:20:13.959]    </control>
[08:20:13.960]    <block atomic="false" info="">
[08:20:13.960]      DAP_SWJ_Pins(nReset, nReset, 0);
[08:20:13.972]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:20:13.972]    </block>
[08:20:13.972]  </sequence>
[08:20:13.972]  
[08:20:15.898]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[08:20:15.898]  
[08:20:15.899]  <debugvars>
[08:20:15.899]    // Pre-defined
[08:20:15.900]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:20:15.900]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[08:20:15.900]    __dp=0x00000000
[08:20:15.901]    __ap=0x00000000
[08:20:15.901]    __traceout=0x00000000      (Trace Disabled)
[08:20:15.902]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:20:15.902]    __FlashAddr=0x00000000
[08:20:15.902]    __FlashLen=0x00000000
[08:20:15.902]    __FlashArg=0x00000000
[08:20:15.902]    __FlashOp=0x00000000
[08:20:15.903]    __Result=0x00000000
[08:20:15.903]  </debugvars>
[08:20:15.903]  
[08:20:15.903]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[08:20:15.903]    <block atomic="false" info="">
[08:20:15.903]      __var nReset      = 0x80;
[08:20:15.904]        // -> [nReset <= 0x00000080]
[08:20:15.905]      DAP_SWJ_Pins(0x00, nReset, 0);
[08:20:15.906]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:20:15.907]    </block>
[08:20:15.907]    <control if="" while="1" timeout="50000" info="">
[08:20:15.907]      // while "1"  (timeout="50000")
[08:20:15.907]      // while-condition  =>  TRUE
[08:20:15.907]      // while "1"  (timeout="50000")
[08:20:15.908]      // while-condition  =>  TRUE
[08:20:15.908]      // while "1"  (timeout="50000")
[08:20:15.908]      // while-condition  =>  TRUE
[08:20:15.908]      // while "1"  (timeout="50000")
[08:20:15.908]      // while-condition  =>  TRUE
[08:20:15.909]      // while "1"  (timeout="50000")
[08:20:15.909]      // while-condition  =>  TRUE
[08:20:15.909]      // while "1"  (timeout="50000")
[08:20:15.909]      // while-condition  =>  TRUE
[08:20:15.910]      // while "1"  (timeout="50000")
[08:20:15.910]      // while-condition  =>  TRUE
[08:20:15.911]      // while "1"  (timeout="50000")
[08:20:15.911]      // while-condition  =>  TRUE
[08:20:15.912]      // while "1"  (timeout="50000")
[08:20:15.912]      // while-condition  =>  TRUE
[08:20:15.912]      // while "1"  (timeout="50000")
[08:20:15.912]      // while-condition  =>  TRUE
[08:20:15.913]      // while "1"  (timeout="50000")
[08:20:15.913]      // while-condition  =>  TRUE
[08:20:15.913]      // while "1"  (timeout="50000")
[08:20:15.913]      // while-condition  =>  TRUE
[08:20:15.913]      // while "1"  (timeout="50000")
[08:20:15.913]      // while-condition  =>  TRUE
[08:20:15.913]      // while "1"  (timeout="50000")
[08:20:15.914]      // while-condition  =>  TRUE
[08:20:15.914]      // while "1"  (timeout="50000")
[08:20:15.914]      // while-condition  =>  TRUE
[08:20:15.914]      // while "1"  (timeout="50000")
[08:20:15.914]      // while-condition  =>  TRUE
[08:20:15.915]      // while "1"  (timeout="50000")
[08:20:15.915]      // while-condition  =>  TRUE
[08:20:15.915]      // while "1"  (timeout="50000")
[08:20:15.915]      // while-condition  =>  TRUE
[08:20:15.915]      // while "1"  (timeout="50000")
[08:20:15.916]      // while-condition  =>  TRUE
[08:20:15.916]      // while "1"  (timeout="50000")
[08:20:15.916]      // while-condition  =>  TRUE
[08:20:15.917]      // while "1"  (timeout="50000")
[08:20:15.917]      // while-condition  =>  TRUE
[08:20:15.917]      // while "1"  (timeout="50000")
[08:20:15.917]      // while-condition  =>  TRUE
[08:20:15.917]      // while "1"  (timeout="50000")
[08:20:15.917]      // while-condition  =>  TRUE
[08:20:15.917]      // while "1"  (timeout="50000")
[08:20:15.918]      // while-condition  =>  TRUE
[08:20:15.918]      // while "1"  (timeout="50000")
[08:20:15.918]      // while-condition  =>  TRUE
[08:20:15.918]      // while "1"  (timeout="50000")
[08:20:15.918]      // while-condition  =>  TRUE
[08:20:15.918]      // while "1"  (timeout="50000")
[08:20:15.919]      // while-condition  =>  TRUE
[08:20:15.919]      // while "1"  (timeout="50000")
[08:20:15.919]      // while-condition  =>  TRUE
[08:20:15.919]      // while "1"  (timeout="50000")
[08:20:15.919]      // while-condition  =>  TRUE
[08:20:15.920]      // while "1"  (timeout="50000")
[08:20:15.920]      // while-condition  =>  TRUE
[08:20:15.920]      // while "1"  (timeout="50000")
[08:20:15.920]      // while-condition  =>  TRUE
[08:20:15.921]      // while "1"  (timeout="50000")
[08:20:15.921]      // while-condition  =>  TRUE
[08:20:15.921]      // while "1"  (timeout="50000")
[08:20:15.921]      // while-condition  =>  TRUE
[08:20:15.921]      // while "1"  (timeout="50000")
[08:20:15.921]      // while-condition  =>  TRUE
[08:20:15.922]      // while "1"  (timeout="50000")
[08:20:15.922]      // while-condition  =>  TRUE
[08:20:15.922]      // while "1"  (timeout="50000")
[08:20:15.923]      // while-condition  =>  TRUE
[08:20:15.923]      // while "1"  (timeout="50000")
[08:20:15.923]      // while-condition  =>  TRUE
[08:20:15.923]      // while "1"  (timeout="50000")
[08:20:15.923]      // while-condition  =>  TRUE
[08:20:15.924]      // while "1"  (timeout="50000")
[08:20:15.924]      // while-condition  =>  TRUE
[08:20:15.924]      // while "1"  (timeout="50000")
[08:20:15.924]      // while-condition  =>  TRUE
[08:20:15.924]      // while "1"  (timeout="50000")
[08:20:15.925]      // while-condition  =>  TRUE
[08:20:15.925]      // while "1"  (timeout="50000")
[08:20:15.925]      // while-condition  =>  TRUE
[08:20:15.925]      // while "1"  (timeout="50000")
[08:20:15.925]      // while-condition  =>  TRUE
[08:20:15.926]      // while "1"  (timeout="50000")
[08:20:15.926]      // while-condition  =>  TRUE
[08:20:15.926]      // while "1"  (timeout="50000")
[08:20:15.926]      // while-condition  =>  TRUE
[08:20:15.926]      // while "1"  (timeout="50000")
[08:20:15.927]      // while-condition  =>  TRUE
[08:20:15.927]      // while "1"  (timeout="50000")
[08:20:15.927]      // while-condition  =>  TRUE
[08:20:15.927]      // while "1"  (timeout="50000")
[08:20:15.927]      // while-condition  =>  TRUE
[08:20:15.927]      // while "1"  (timeout="50000")
[08:20:15.928]      // while-condition  =>  TRUE
[08:20:15.928]      // while "1"  (timeout="50000")
[08:20:15.928]      // while-condition  =>  TRUE
[08:20:15.928]      // while "1"  (timeout="50000")
[08:20:15.928]      // while-condition  =>  TRUE
[08:20:15.928]      // while "1"  (timeout="50000")
[08:20:15.928]      // while-condition  =>  TRUE
[08:20:15.929]      // while "1"  (timeout="50000")
[08:20:15.929]      // while-condition  =>  TRUE
[08:20:15.929]      // while "1"  (timeout="50000")
[08:20:15.929]      // while-condition  =>  TRUE
[08:20:15.929]      // while "1"  (timeout="50000")
[08:20:15.930]      // while-condition  =>  TRUE
[08:20:15.930]      // while "1"  (timeout="50000")
[08:20:15.931]      // while-condition  =>  TRUE
[08:20:15.931]      // while "1"  (timeout="50000")
[08:20:15.931]      // while-condition  =>  TRUE
[08:20:15.931]      // while "1"  (timeout="50000")
[08:20:15.931]      // while-condition  =>  TRUE
[08:20:15.931]      // while "1"  (timeout="50000")
[08:20:15.931]      // while-condition  =>  TRUE
[08:20:15.931]      // while "1"  (timeout="50000")
[08:20:15.932]      // while-condition  =>  TRUE
[08:20:15.932]      // while "1"  (timeout="50000")
[08:20:15.932]      // while-condition  =>  TRUE
[08:20:15.932]      // while "1"  (timeout="50000")
[08:20:15.932]      // while-condition  =>  TRUE
[08:20:15.933]      // while "1"  (timeout="50000")
[08:20:15.933]      // while-condition  =>  TRUE
[08:20:15.933]      // while "1"  (timeout="50000")
[08:20:15.934]      // while-condition  =>  TRUE
[08:20:15.934]      // while "1"  (timeout="50000")
[08:20:15.934]      // while-condition  =>  TRUE
[08:20:15.934]      // while "1"  (timeout="50000")
[08:20:15.934]      // while-condition  =>  TRUE
[08:20:15.934]      // while "1"  (timeout="50000")
[08:20:15.934]      // while-condition  =>  TRUE
[08:20:15.935]      // while "1"  (timeout="50000")
[08:20:15.935]      // while-condition  =>  TRUE
[08:20:15.935]      // while "1"  (timeout="50000")
[08:20:15.935]      // while-condition  =>  TRUE
[08:20:15.935]      // while "1"  (timeout="50000")
[08:20:15.936]      // while-condition  =>  TRUE
[08:20:15.936]      // while "1"  (timeout="50000")
[08:20:15.937]      // while-condition  =>  TRUE
[08:20:15.937]      // while "1"  (timeout="50000")
[08:20:15.937]      // while-condition  =>  TRUE
[08:20:15.937]      // while "1"  (timeout="50000")
[08:20:15.937]      // while-condition  =>  TRUE
[08:20:15.938]      // while "1"  (timeout="50000")
[08:20:15.938]      // while-condition  =>  TRUE
[08:20:15.938]      // while "1"  (timeout="50000")
[08:20:15.938]      // while-condition  =>  TRUE
[08:20:15.938]      // while "1"  (timeout="50000")
[08:20:15.938]      // while-condition  =>  TRUE
[08:20:15.938]      // while "1"  (timeout="50000")
[08:20:15.938]      // while-condition  =>  TRUE
[08:20:15.939]      // while "1"  (timeout="50000")
[08:20:15.939]      // while-condition  =>  TRUE
[08:20:15.939]      // while "1"  (timeout="50000")
[08:20:15.939]      // while-condition  =>  TRUE
[08:20:15.939]      // while "1"  (timeout="50000")
[08:20:15.940]      // while-condition  =>  TRUE
[08:20:15.940]      // while "1"  (timeout="50000")
[08:20:15.941]      // while-condition  =>  TRUE
[08:20:15.941]      // while "1"  (timeout="50000")
[08:20:15.941]      // while-condition  =>  TRUE
[08:20:15.941]      // while "1"  (timeout="50000")
[08:20:15.941]      // while-condition  =>  TRUE
[08:20:15.941]      // while "1"  (timeout="50000")
[08:20:15.941]      // while-condition  =>  TRUE
[08:20:15.942]      // while "1"  (timeout="50000")
[08:20:15.942]      // while-condition  =>  TRUE
[08:20:15.942]      // while "1"  (timeout="50000")
[08:20:15.943]      // while-condition  =>  TRUE
[08:20:15.943]      // while "1"  (timeout="50000")
[08:20:15.943]      // while-condition  =>  TRUE
[08:20:15.943]      // while "1"  (timeout="50000")
[08:20:15.943]      // while-condition  =>  TRUE
[08:20:15.943]      // while "1"  (timeout="50000")
[08:20:15.944]      // while-condition  =>  TRUE
[08:20:15.944]      // while "1"  (timeout="50000")
[08:20:15.944]      // while-condition  =>  TRUE
[08:20:15.944]      // while "1"  (timeout="50000")
[08:20:15.945]      // while-condition  =>  TRUE
[08:20:15.945]      // while "1"  (timeout="50000")
[08:20:15.945]      // while-condition  =>  TRUE
[08:20:15.945]      // while "1"  (timeout="50000")
[08:20:15.945]      // while-condition  =>  TRUE
[08:20:15.946]      // while "1"  (timeout="50000")
[08:20:15.946]      // while-condition  =>  TRUE
[08:20:15.946]      // while "1"  (timeout="50000")
[08:20:15.946]      // while-condition  =>  TRUE
[08:20:15.946]      // while "1"  (timeout="50000")
[08:20:15.946]      // while-condition  =>  TRUE
[08:20:15.946]      // while "1"  (timeout="50000")
[08:20:15.946]      // while-condition  =>  TRUE
[08:20:15.947]      // while "1"  (timeout="50000")
[08:20:15.947]      // while-condition  =>  TRUE
[08:20:15.947]      // while "1"  (timeout="50000")
[08:20:15.947]      // while-condition  =>  TRUE
[08:20:15.947]      // while "1"  (timeout="50000")
[08:20:15.948]      // while-condition  =>  TRUE
[08:20:15.948]      // while "1"  (timeout="50000")
[08:20:15.948]      // while-condition  =>  TRUE
[08:20:15.948]      // while "1"  (timeout="50000")
[08:20:15.948]      // while-condition  =>  TRUE
[08:20:15.949]      // while "1"  (timeout="50000")
[08:20:15.949]      // while-condition  =>  TRUE
[08:20:15.949]      // while "1"  (timeout="50000")
[08:20:15.949]      // while-condition  =>  TRUE
[08:20:15.949]      // while "1"  (timeout="50000")
[08:20:15.950]      // while-condition  =>  TRUE
[08:20:15.950]      // while "1"  (timeout="50000")
[08:20:15.950]      // while-condition  =>  TRUE
[08:20:15.950]      // while "1"  (timeout="50000")
[08:20:15.950]      // while-condition  =>  TRUE
[08:20:15.951]      // while "1"  (timeout="50000")
[08:20:15.951]      // while-condition  =>  TRUE
[08:20:15.951]      // while "1"  (timeout="50000")
[08:20:15.951]      // while-condition  =>  TRUE
[08:20:15.951]      // while "1"  (timeout="50000")
[08:20:15.952]      // while-condition  =>  TRUE
[08:20:15.952]      // while "1"  (timeout="50000")
[08:20:15.953]      // while-condition  =>  TRUE
[08:20:15.953]      // while "1"  (timeout="50000")
[08:20:15.953]      // while-condition  =>  TRUE
[08:20:15.953]      // while "1"  (timeout="50000")
[08:20:15.953]      // while-condition  =>  TRUE
[08:20:15.953]      // while "1"  (timeout="50000")
[08:20:15.953]      // while-condition  =>  TRUE
[08:20:15.953]      // while "1"  (timeout="50000")
[08:20:15.954]      // while-condition  =>  TRUE
[08:20:15.954]      // while "1"  (timeout="50000")
[08:20:15.955]      // while-condition  =>  TRUE
[08:20:15.955]      // while "1"  (timeout="50000")
[08:20:15.955]      // while-condition  =>  TRUE
[08:20:15.955]      // while "1"  (timeout="50000")
[08:20:15.955]      // while-condition  =>  TRUE
[08:20:15.956]      // while "1"  (timeout="50000")
[08:20:15.956]      // while-condition  =>  TRUE
[08:20:15.956]      // while "1"  (timeout="50000")
[08:20:15.956]      // while-condition  =>  TRUE
[08:20:15.956]      // while "1"  (timeout="50000")
[08:20:15.957]      // while-condition  =>  TRUE
[08:20:15.957]      // while "1"  (timeout="50000")
[08:20:15.957]      // while-condition  =>  TRUE
[08:20:15.957]      // while "1"  (timeout="50000")
[08:20:15.957]      // while-condition  =>  TRUE
[08:20:15.958]      // while "1"  (timeout="50000")
[08:20:15.958]      // while-condition  =>  TRUE
[08:20:15.958]      // while "1"  (timeout="50000")
[08:20:15.958]      // while-condition  =>  TRUE
[08:20:15.958]      // while "1"  (timeout="50000")
[08:20:15.958]      // while-condition  =>  TRUE
[08:20:15.958]      // while "1"  (timeout="50000")
[08:20:15.958]      // while-condition  =>  TRUE
[08:20:15.959]      // while "1"  (timeout="50000")
[08:20:15.959]      // while  =>  TIMEOUT
[08:20:15.959]      // end while "1"
[08:20:15.959]    </control>
[08:20:15.959]    <block atomic="false" info="">
[08:20:15.960]      DAP_SWJ_Pins(nReset, nReset, 0);
[08:20:15.971]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:20:15.971]    </block>
[08:20:15.972]    <control if="" while="1" timeout="10000" info="">
[08:20:15.972]      // while "1"  (timeout="10000")
[08:20:15.972]      // while-condition  =>  TRUE
[08:20:15.973]      // while "1"  (timeout="10000")
[08:20:15.973]      // while-condition  =>  TRUE
[08:20:15.973]      // while "1"  (timeout="10000")
[08:20:15.974]      // while-condition  =>  TRUE
[08:20:15.974]      // while "1"  (timeout="10000")
[08:20:15.974]      // while-condition  =>  TRUE
[08:20:15.975]      // while "1"  (timeout="10000")
[08:20:15.975]      // while  =>  TIMEOUT
[08:20:15.976]      // end while "1"
[08:20:15.976]    </control>
[08:20:15.977]    <block atomic="true" info="">
[08:20:15.977]      // ATOMIC SEQUENCE - EXECUTE
[08:20:15.978]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[08:20:15.979]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[08:20:15.979]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[08:20:15.979]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[08:20:15.980]      // ATOMIC SEQUENCE - DONE
[08:20:15.980]    </block>
[08:20:15.980]    <block atomic="false" info="">
[08:20:15.980]      __errorcontrol = 0x00000001;
[08:20:15.982]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[08:20:15.982]      ReadDP(0x0);
[08:20:15.983]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[08:20:15.983]      __errorcontrol = 0x00000000;
[08:20:15.983]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[08:20:15.984]    </block>
[08:20:15.985]  </sequence>
[08:20:15.985]  
[08:20:15.985]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[08:20:15.985]  
[08:20:15.985]  <debugvars>
[08:20:15.986]    // Pre-defined
[08:20:15.986]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:20:15.986]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:20:15.986]    __dp=0x00000000
[08:20:15.986]    __ap=0x00000000
[08:20:15.986]    __traceout=0x00000000      (Trace Disabled)
[08:20:15.986]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:20:15.986]    __FlashAddr=0x00000000
[08:20:15.987]    __FlashLen=0x00000000
[08:20:15.987]    __FlashArg=0x00000000
[08:20:15.987]    __FlashOp=0x00000000
[08:20:15.987]    __Result=0x00000000
[08:20:15.987]  </debugvars>
[08:20:15.987]  
[08:20:15.988]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[08:20:15.988]  </sequence>
[08:20:15.988]  
[08:20:15.991]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[08:20:15.991]  
[08:20:15.991]  <debugvars>
[08:20:15.991]    // Pre-defined
[08:20:15.991]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:20:15.992]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:20:15.992]    __dp=0x00000000
[08:20:15.993]    __ap=0x00000000
[08:20:15.993]    __traceout=0x00000000      (Trace Disabled)
[08:20:15.993]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:20:15.993]    __FlashAddr=0x00000000
[08:20:15.993]    __FlashLen=0x00000000
[08:20:15.994]    __FlashArg=0x00000000
[08:20:15.994]    __FlashOp=0x00000000
[08:20:15.994]    __Result=0x00000000
[08:20:15.994]  </debugvars>
[08:20:15.995]  
[08:20:15.995]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[08:20:15.995]    <block atomic="false" info="">
[08:20:15.995]      __var SW_DP_ABORT  = 0x0;
[08:20:15.996]        // -> [SW_DP_ABORT <= 0x00000000]
[08:20:15.996]      __var DP_CTRL_STAT = 0x4;
[08:20:15.996]        // -> [DP_CTRL_STAT <= 0x00000004]
[08:20:15.996]      __var DP_SELECT    = 0x8;
[08:20:15.996]        // -> [DP_SELECT <= 0x00000008]
[08:20:15.997]      __var powered_down = 0;
[08:20:15.997]        // -> [powered_down <= 0x00000000]
[08:20:15.997]      WriteDP(DP_SELECT, 0x00000000);
[08:20:15.998]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:20:15.998]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[08:20:15.999]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[08:20:15.999]        // -> [powered_down <= 0x00000001]
[08:20:16.000]    </block>
[08:20:16.000]    <control if="powered_down" while="" timeout="0" info="">
[08:20:16.000]      // if-block "powered_down"
[08:20:16.000]        // =>  TRUE
[08:20:16.000]      <block atomic="false" info="">
[08:20:16.001]        WriteDP(DP_CTRL_STAT, 0x50000000);
[08:20:16.002]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[08:20:16.003]      </block>
[08:20:16.003]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[08:20:16.003]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[08:20:16.004]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[08:20:16.004]        // while-condition  =>  FALSE
[08:20:16.005]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[08:20:16.005]      </control>
[08:20:16.005]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[08:20:16.006]        // if-block "(__protocol & 0xFFFF) == 1"
[08:20:16.006]          // =>  FALSE
[08:20:16.006]        // skip if-block "(__protocol & 0xFFFF) == 1"
[08:20:16.006]      </control>
[08:20:16.007]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[08:20:16.007]        // if-block "(__protocol & 0xFFFF) == 2"
[08:20:16.007]          // =>  TRUE
[08:20:16.007]        <block atomic="false" info="">
[08:20:16.008]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[08:20:16.008]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[08:20:16.008]          WriteDP(SW_DP_ABORT, 0x0000001E);
[08:20:16.010]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[08:20:16.011]        </block>
[08:20:16.011]        // end if-block "(__protocol & 0xFFFF) == 2"
[08:20:16.011]      </control>
[08:20:16.012]      // end if-block "powered_down"
[08:20:16.012]    </control>
[08:20:16.012]  </sequence>
[08:20:16.012]  
[08:20:16.063]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[08:20:16.063]  
[08:20:16.064]  <debugvars>
[08:20:16.065]    // Pre-defined
[08:20:16.065]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:20:16.066]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:20:16.067]    __dp=0x00000000
[08:20:16.067]    __ap=0x00000000
[08:20:16.067]    __traceout=0x00000000      (Trace Disabled)
[08:20:16.068]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:20:16.068]    __FlashAddr=0x00000000
[08:20:16.069]    __FlashLen=0x00000000
[08:20:16.069]    __FlashArg=0x00000000
[08:20:16.069]    __FlashOp=0x00000000
[08:20:16.069]    __Result=0x00000000
[08:20:16.070]  </debugvars>
[08:20:16.070]  
[08:20:16.070]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[08:20:16.070]    <block atomic="true" info="">
[08:20:16.070]      // ATOMIC SEQUENCE - EXECUTE
[08:20:16.072]      __var DP_R_IDCODE    = 0x0;
[08:20:16.072]        // -> [DP_R_IDCODE <= 0x00000000]
[08:20:16.072]      __var DP_W_ABORT    = 0x0;
[08:20:16.072]        // -> [DP_W_ABORT <= 0x00000000]
[08:20:16.073]      __var DP_CTRLSTAT = 0x4;
[08:20:16.073]        // -> [DP_CTRLSTAT <= 0x00000004]
[08:20:16.073]      __var DP_W_SELECT    = 0x8;
[08:20:16.073]        // -> [DP_W_SELECT <= 0x00000008]
[08:20:16.074]      __var AP_TAR		= 0x4;
[08:20:16.074]        // -> [AP_TAR <= 0x00000004]
[08:20:16.074]      __var AP_BD0		= 0x0;
[08:20:16.074]        // -> [AP_BD0 <= 0x00000000]
[08:20:16.075]      __var AP_BD1		= 0x4;
[08:20:16.075]        // -> [AP_BD1 <= 0x00000004]
[08:20:16.075]      __var AP_BD2		= 0x8;
[08:20:16.075]        // -> [AP_BD2 <= 0x00000008]
[08:20:16.075]      __var PCWithinFlash = 0;
[08:20:16.076]        // -> [PCWithinFlash <= 0x00000000]
[08:20:16.076]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[08:20:16.076]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[08:20:16.077]      // ATOMIC SEQUENCE - DONE
[08:20:16.077]    </block>
[08:20:16.077]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[08:20:16.077]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[08:20:16.081]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[08:20:16.082]      // while-condition  =>  FALSE
[08:20:16.082]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[08:20:16.082]    </control>
[08:20:16.083]    <block atomic="true" info="">
[08:20:16.083]      // ATOMIC SEQUENCE - EXECUTE
[08:20:16.086]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:20:16.086]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:20:16.086]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[08:20:16.087]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[08:20:16.087]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[08:20:16.087]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[08:20:16.088]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[08:20:16.088]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[08:20:16.088]      // ATOMIC SEQUENCE - DONE
[08:20:16.088]    </block>
[08:20:16.088]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[08:20:16.089]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:20:16.090]        // -> [ReadAP(0x00000000) => 0x01030003]   (__dp=0x00000000, __ap=0x00000000)
[08:20:16.091]      // while-condition  =>  FALSE
[08:20:16.091]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[08:20:16.091]    </control>
[08:20:16.092]    <block atomic="false" info="">
[08:20:16.092]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[08:20:16.093]        // -> [ReadAP(0x00000008) => 0x10000820]   (__dp=0x00000000, __ap=0x00000000)
[08:20:16.094]        // -> [PCWithinFlash <= 0x00000001]
[08:20:16.094]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:20:16.096]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:20:16.096]    </block>
[08:20:16.096]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[08:20:16.096]      // if-block "PCWithinFlash == 0"
[08:20:16.098]        // =>  FALSE
[08:20:16.098]      // skip if-block "PCWithinFlash == 0"
[08:20:16.098]    </control>
[08:20:16.098]  </sequence>
[08:20:16.098]  
[08:20:16.139]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[08:20:16.139]  
[08:20:16.153]  <debugvars>
[08:20:16.153]    // Pre-defined
[08:20:16.155]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:20:16.155]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:20:16.156]    __dp=0x00000000
[08:20:16.157]    __ap=0x00000000
[08:20:16.157]    __traceout=0x00000000      (Trace Disabled)
[08:20:16.157]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:20:16.158]    __FlashAddr=0x00000000
[08:20:16.158]    __FlashLen=0x00000000
[08:20:16.159]    __FlashArg=0x00000000
[08:20:16.159]    __FlashOp=0x00000000
[08:20:16.160]    __Result=0x00000000
[08:20:16.161]  </debugvars>
[08:20:16.161]  
[08:20:16.162]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[08:20:16.162]    <block atomic="false" info="">
[08:20:16.163]    </block>
[08:20:16.163]  </sequence>
[08:20:16.163]  
[08:20:16.166]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[08:20:16.166]  
[08:20:16.166]  <debugvars>
[08:20:16.166]    // Pre-defined
[08:20:16.166]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:20:16.167]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:20:16.167]    __dp=0x00000000
[08:20:16.167]    __ap=0x00000000
[08:20:16.167]    __traceout=0x00000000      (Trace Disabled)
[08:20:16.168]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:20:16.168]    __FlashAddr=0x00000000
[08:20:16.168]    __FlashLen=0x00000000
[08:20:16.168]    __FlashArg=0x00000000
[08:20:16.169]    __FlashOp=0x00000000
[08:20:16.169]    __Result=0x00000000
[08:20:16.169]  </debugvars>
[08:20:16.169]  
[08:20:16.170]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[08:20:16.170]    <block atomic="false" info="">
[08:20:16.170]      __var nReset      = 0x80;
[08:20:16.170]        // -> [nReset <= 0x00000080]
[08:20:16.171]      DAP_SWJ_Pins(0x00, nReset, 0);
[08:20:16.172]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:20:16.172]    </block>
[08:20:16.173]    <control if="" while="1" timeout="50000" info="">
[08:20:16.173]      // while "1"  (timeout="50000")
[08:20:16.173]      // while-condition  =>  TRUE
[08:20:16.173]      // while "1"  (timeout="50000")
[08:20:16.174]      // while-condition  =>  TRUE
[08:20:16.174]      // while "1"  (timeout="50000")
[08:20:16.174]      // while-condition  =>  TRUE
[08:20:16.175]      // while "1"  (timeout="50000")
[08:20:16.175]      // while-condition  =>  TRUE
[08:20:16.175]      // while "1"  (timeout="50000")
[08:20:16.176]      // while-condition  =>  TRUE
[08:20:16.176]      // while "1"  (timeout="50000")
[08:20:16.176]      // while-condition  =>  TRUE
[08:20:16.177]      // while "1"  (timeout="50000")
[08:20:16.177]      // while-condition  =>  TRUE
[08:20:16.177]      // while "1"  (timeout="50000")
[08:20:16.177]      // while-condition  =>  TRUE
[08:20:16.178]      // while "1"  (timeout="50000")
[08:20:16.178]      // while-condition  =>  TRUE
[08:20:16.178]      // while "1"  (timeout="50000")
[08:20:16.178]      // while-condition  =>  TRUE
[08:20:16.178]      // while "1"  (timeout="50000")
[08:20:16.178]      // while-condition  =>  TRUE
[08:20:16.178]      // while "1"  (timeout="50000")
[08:20:16.179]      // while-condition  =>  TRUE
[08:20:16.179]      // while "1"  (timeout="50000")
[08:20:16.179]      // while-condition  =>  TRUE
[08:20:16.179]      // while "1"  (timeout="50000")
[08:20:16.180]      // while-condition  =>  TRUE
[08:20:16.180]      // while "1"  (timeout="50000")
[08:20:16.181]      // while-condition  =>  TRUE
[08:20:16.181]      // while "1"  (timeout="50000")
[08:20:16.181]      // while-condition  =>  TRUE
[08:20:16.181]      // while "1"  (timeout="50000")
[08:20:16.181]      // while-condition  =>  TRUE
[08:20:16.182]      // while "1"  (timeout="50000")
[08:20:16.182]      // while-condition  =>  TRUE
[08:20:16.182]      // while "1"  (timeout="50000")
[08:20:16.182]      // while-condition  =>  TRUE
[08:20:16.182]      // while "1"  (timeout="50000")
[08:20:16.183]      // while-condition  =>  TRUE
[08:20:16.183]      // while "1"  (timeout="50000")
[08:20:16.183]      // while-condition  =>  TRUE
[08:20:16.183]      // while "1"  (timeout="50000")
[08:20:16.183]      // while-condition  =>  TRUE
[08:20:16.183]      // while "1"  (timeout="50000")
[08:20:16.184]      // while-condition  =>  TRUE
[08:20:16.184]      // while "1"  (timeout="50000")
[08:20:16.184]      // while-condition  =>  TRUE
[08:20:16.184]      // while "1"  (timeout="50000")
[08:20:16.184]      // while-condition  =>  TRUE
[08:20:16.185]      // while "1"  (timeout="50000")
[08:20:16.185]      // while-condition  =>  TRUE
[08:20:16.185]      // while "1"  (timeout="50000")
[08:20:16.185]      // while-condition  =>  TRUE
[08:20:16.185]      // while "1"  (timeout="50000")
[08:20:16.186]      // while-condition  =>  TRUE
[08:20:16.186]      // while "1"  (timeout="50000")
[08:20:16.186]      // while-condition  =>  TRUE
[08:20:16.186]      // while "1"  (timeout="50000")
[08:20:16.186]      // while-condition  =>  TRUE
[08:20:16.187]      // while "1"  (timeout="50000")
[08:20:16.187]      // while-condition  =>  TRUE
[08:20:16.187]      // while "1"  (timeout="50000")
[08:20:16.187]      // while-condition  =>  TRUE
[08:20:16.188]      // while "1"  (timeout="50000")
[08:20:16.188]      // while-condition  =>  TRUE
[08:20:16.188]      // while "1"  (timeout="50000")
[08:20:16.188]      // while-condition  =>  TRUE
[08:20:16.188]      // while "1"  (timeout="50000")
[08:20:16.188]      // while-condition  =>  TRUE
[08:20:16.188]      // while "1"  (timeout="50000")
[08:20:16.188]      // while-condition  =>  TRUE
[08:20:16.189]      // while "1"  (timeout="50000")
[08:20:16.189]      // while-condition  =>  TRUE
[08:20:16.189]      // while "1"  (timeout="50000")
[08:20:16.189]      // while-condition  =>  TRUE
[08:20:16.189]      // while "1"  (timeout="50000")
[08:20:16.190]      // while-condition  =>  TRUE
[08:20:16.190]      // while "1"  (timeout="50000")
[08:20:16.191]      // while-condition  =>  TRUE
[08:20:16.191]      // while "1"  (timeout="50000")
[08:20:16.191]      // while-condition  =>  TRUE
[08:20:16.191]      // while "1"  (timeout="50000")
[08:20:16.191]      // while-condition  =>  TRUE
[08:20:16.192]      // while "1"  (timeout="50000")
[08:20:16.192]      // while-condition  =>  TRUE
[08:20:16.192]      // while "1"  (timeout="50000")
[08:20:16.192]      // while-condition  =>  TRUE
[08:20:16.192]      // while "1"  (timeout="50000")
[08:20:16.193]      // while-condition  =>  TRUE
[08:20:16.193]      // while "1"  (timeout="50000")
[08:20:16.193]      // while-condition  =>  TRUE
[08:20:16.193]      // while "1"  (timeout="50000")
[08:20:16.193]      // while-condition  =>  TRUE
[08:20:16.193]      // while "1"  (timeout="50000")
[08:20:16.194]      // while-condition  =>  TRUE
[08:20:16.194]      // while "1"  (timeout="50000")
[08:20:16.194]      // while-condition  =>  TRUE
[08:20:16.194]      // while "1"  (timeout="50000")
[08:20:16.194]      // while-condition  =>  TRUE
[08:20:16.194]      // while "1"  (timeout="50000")
[08:20:16.195]      // while-condition  =>  TRUE
[08:20:16.195]      // while "1"  (timeout="50000")
[08:20:16.195]      // while-condition  =>  TRUE
[08:20:16.195]      // while "1"  (timeout="50000")
[08:20:16.196]      // while-condition  =>  TRUE
[08:20:16.196]      // while "1"  (timeout="50000")
[08:20:16.196]      // while-condition  =>  TRUE
[08:20:16.196]      // while "1"  (timeout="50000")
[08:20:16.196]      // while-condition  =>  TRUE
[08:20:16.196]      // while "1"  (timeout="50000")
[08:20:16.196]      // while-condition  =>  TRUE
[08:20:16.196]      // while "1"  (timeout="50000")
[08:20:16.197]      // while-condition  =>  TRUE
[08:20:16.197]      // while "1"  (timeout="50000")
[08:20:16.197]      // while-condition  =>  TRUE
[08:20:16.197]      // while "1"  (timeout="50000")
[08:20:16.198]      // while-condition  =>  TRUE
[08:20:16.198]      // while "1"  (timeout="50000")
[08:20:16.198]      // while-condition  =>  TRUE
[08:20:16.198]      // while "1"  (timeout="50000")
[08:20:16.198]      // while-condition  =>  TRUE
[08:20:16.199]      // while "1"  (timeout="50000")
[08:20:16.199]      // while-condition  =>  TRUE
[08:20:16.199]      // while "1"  (timeout="50000")
[08:20:16.199]      // while-condition  =>  TRUE
[08:20:16.199]      // while "1"  (timeout="50000")
[08:20:16.200]      // while-condition  =>  TRUE
[08:20:16.200]      // while "1"  (timeout="50000")
[08:20:16.200]      // while-condition  =>  TRUE
[08:20:16.200]      // while "1"  (timeout="50000")
[08:20:16.200]      // while-condition  =>  TRUE
[08:20:16.201]      // while "1"  (timeout="50000")
[08:20:16.202]      // while-condition  =>  TRUE
[08:20:16.202]      // while "1"  (timeout="50000")
[08:20:16.202]      // while-condition  =>  TRUE
[08:20:16.202]      // while "1"  (timeout="50000")
[08:20:16.202]      // while-condition  =>  TRUE
[08:20:16.202]      // while "1"  (timeout="50000")
[08:20:16.202]      // while-condition  =>  TRUE
[08:20:16.202]      // while "1"  (timeout="50000")
[08:20:16.202]      // while-condition  =>  TRUE
[08:20:16.203]      // while "1"  (timeout="50000")
[08:20:16.204]      // while-condition  =>  TRUE
[08:20:16.204]      // while "1"  (timeout="50000")
[08:20:16.204]      // while-condition  =>  TRUE
[08:20:16.204]      // while "1"  (timeout="50000")
[08:20:16.204]      // while-condition  =>  TRUE
[08:20:16.204]      // while "1"  (timeout="50000")
[08:20:16.205]      // while-condition  =>  TRUE
[08:20:16.205]      // while "1"  (timeout="50000")
[08:20:16.205]      // while-condition  =>  TRUE
[08:20:16.205]      // while "1"  (timeout="50000")
[08:20:16.205]      // while-condition  =>  TRUE
[08:20:16.206]      // while "1"  (timeout="50000")
[08:20:16.206]      // while-condition  =>  TRUE
[08:20:16.206]      // while "1"  (timeout="50000")
[08:20:16.206]      // while-condition  =>  TRUE
[08:20:16.207]      // while "1"  (timeout="50000")
[08:20:16.207]      // while-condition  =>  TRUE
[08:20:16.207]      // while "1"  (timeout="50000")
[08:20:16.207]      // while-condition  =>  TRUE
[08:20:16.207]      // while "1"  (timeout="50000")
[08:20:16.207]      // while-condition  =>  TRUE
[08:20:16.207]      // while "1"  (timeout="50000")
[08:20:16.207]      // while-condition  =>  TRUE
[08:20:16.208]      // while "1"  (timeout="50000")
[08:20:16.208]      // while-condition  =>  TRUE
[08:20:16.208]      // while "1"  (timeout="50000")
[08:20:16.208]      // while-condition  =>  TRUE
[08:20:16.208]      // while "1"  (timeout="50000")
[08:20:16.208]      // while-condition  =>  TRUE
[08:20:16.209]      // while "1"  (timeout="50000")
[08:20:16.209]      // while-condition  =>  TRUE
[08:20:16.209]      // while "1"  (timeout="50000")
[08:20:16.209]      // while-condition  =>  TRUE
[08:20:16.209]      // while "1"  (timeout="50000")
[08:20:16.210]      // while-condition  =>  TRUE
[08:20:16.210]      // while "1"  (timeout="50000")
[08:20:16.210]      // while-condition  =>  TRUE
[08:20:16.210]      // while "1"  (timeout="50000")
[08:20:16.211]      // while-condition  =>  TRUE
[08:20:16.211]      // while "1"  (timeout="50000")
[08:20:16.212]      // while-condition  =>  TRUE
[08:20:16.212]      // while "1"  (timeout="50000")
[08:20:16.212]      // while-condition  =>  TRUE
[08:20:16.212]      // while "1"  (timeout="50000")
[08:20:16.212]      // while-condition  =>  TRUE
[08:20:16.213]      // while "1"  (timeout="50000")
[08:20:16.213]      // while-condition  =>  TRUE
[08:20:16.213]      // while "1"  (timeout="50000")
[08:20:16.213]      // while-condition  =>  TRUE
[08:20:16.213]      // while "1"  (timeout="50000")
[08:20:16.214]      // while-condition  =>  TRUE
[08:20:16.214]      // while "1"  (timeout="50000")
[08:20:16.214]      // while-condition  =>  TRUE
[08:20:16.214]      // while "1"  (timeout="50000")
[08:20:16.214]      // while-condition  =>  TRUE
[08:20:16.215]      // while "1"  (timeout="50000")
[08:20:16.215]      // while-condition  =>  TRUE
[08:20:16.215]      // while "1"  (timeout="50000")
[08:20:16.215]      // while-condition  =>  TRUE
[08:20:16.215]      // while "1"  (timeout="50000")
[08:20:16.216]      // while-condition  =>  TRUE
[08:20:16.216]      // while "1"  (timeout="50000")
[08:20:16.216]      // while-condition  =>  TRUE
[08:20:16.216]      // while "1"  (timeout="50000")
[08:20:16.216]      // while-condition  =>  TRUE
[08:20:16.217]      // while "1"  (timeout="50000")
[08:20:16.217]      // while-condition  =>  TRUE
[08:20:16.217]      // while "1"  (timeout="50000")
[08:20:16.217]      // while-condition  =>  TRUE
[08:20:16.218]      // while "1"  (timeout="50000")
[08:20:16.218]      // while-condition  =>  TRUE
[08:20:16.218]      // while "1"  (timeout="50000")
[08:20:16.218]      // while-condition  =>  TRUE
[08:20:16.218]      // while "1"  (timeout="50000")
[08:20:16.219]      // while-condition  =>  TRUE
[08:20:16.219]      // while "1"  (timeout="50000")
[08:20:16.219]      // while-condition  =>  TRUE
[08:20:16.219]      // while "1"  (timeout="50000")
[08:20:16.220]      // while-condition  =>  TRUE
[08:20:16.220]      // while "1"  (timeout="50000")
[08:20:16.220]      // while-condition  =>  TRUE
[08:20:16.220]      // while "1"  (timeout="50000")
[08:20:16.221]      // while-condition  =>  TRUE
[08:20:16.221]      // while "1"  (timeout="50000")
[08:20:16.221]      // while-condition  =>  TRUE
[08:20:16.221]      // while "1"  (timeout="50000")
[08:20:16.222]      // while-condition  =>  TRUE
[08:20:16.222]      // while "1"  (timeout="50000")
[08:20:16.223]      // while-condition  =>  TRUE
[08:20:16.223]      // while "1"  (timeout="50000")
[08:20:16.223]      // while-condition  =>  TRUE
[08:20:16.223]      // while "1"  (timeout="50000")
[08:20:16.223]      // while-condition  =>  TRUE
[08:20:16.224]      // while "1"  (timeout="50000")
[08:20:16.224]      // while-condition  =>  TRUE
[08:20:16.224]      // while "1"  (timeout="50000")
[08:20:16.224]      // while-condition  =>  TRUE
[08:20:16.224]      // while "1"  (timeout="50000")
[08:20:16.224]      // while-condition  =>  TRUE
[08:20:16.225]      // while "1"  (timeout="50000")
[08:20:16.225]      // while  =>  TIMEOUT
[08:20:16.225]      // end while "1"
[08:20:16.225]    </control>
[08:20:16.225]    <block atomic="false" info="">
[08:20:16.226]      DAP_SWJ_Pins(nReset, nReset, 0);
[08:20:16.237]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:20:16.237]    </block>
[08:20:16.238]    <control if="" while="1" timeout="10000" info="">
[08:20:16.238]      // while "1"  (timeout="10000")
[08:20:16.239]      // while-condition  =>  TRUE
[08:20:16.239]      // while "1"  (timeout="10000")
[08:20:16.239]      // while-condition  =>  TRUE
[08:20:16.240]      // while "1"  (timeout="10000")
[08:20:16.240]      // while-condition  =>  TRUE
[08:20:16.241]      // while "1"  (timeout="10000")
[08:20:16.241]      // while  =>  TIMEOUT
[08:20:16.242]      // end while "1"
[08:20:16.242]    </control>
[08:20:16.242]    <block atomic="true" info="">
[08:20:16.243]      // ATOMIC SEQUENCE - EXECUTE
[08:20:16.244]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[08:20:16.245]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[08:20:16.246]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[08:20:16.246]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[08:20:16.246]      // ATOMIC SEQUENCE - DONE
[08:20:16.247]    </block>
[08:20:16.247]    <block atomic="false" info="">
[08:20:16.247]      __errorcontrol = 0x00000001;
[08:20:16.248]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[08:20:16.248]      ReadDP(0x0);
[08:20:16.249]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[08:20:16.250]      __errorcontrol = 0x00000000;
[08:20:16.250]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[08:20:16.250]    </block>
[08:20:16.250]  </sequence>
[08:20:16.251]  
[08:20:16.256]  **********  Sequence "DebugPortStart"  (Context="Reset", Pname="", info="")
[08:20:16.256]  
[08:20:16.257]  <debugvars>
[08:20:16.257]    // Pre-defined
[08:20:16.257]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:20:16.258]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:20:16.258]    __dp=0x00000000
[08:20:16.258]    __ap=0x00000000
[08:20:16.258]    __traceout=0x00000000      (Trace Disabled)
[08:20:16.258]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:20:16.258]    __FlashAddr=0x00000000
[08:20:16.259]    __FlashLen=0x00000000
[08:20:16.259]    __FlashArg=0x00000000
[08:20:16.259]    __FlashOp=0x00000000
[08:20:16.259]    __Result=0x00000000
[08:20:16.260]  </debugvars>
[08:20:16.261]  
[08:20:16.261]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[08:20:16.261]    <block atomic="false" info="">
[08:20:16.262]      __var SW_DP_ABORT  = 0x0;
[08:20:16.262]        // -> [SW_DP_ABORT <= 0x00000000]
[08:20:16.262]      __var DP_CTRL_STAT = 0x4;
[08:20:16.262]        // -> [DP_CTRL_STAT <= 0x00000004]
[08:20:16.262]      __var DP_SELECT    = 0x8;
[08:20:16.262]        // -> [DP_SELECT <= 0x00000008]
[08:20:16.262]      __var powered_down = 0;
[08:20:16.262]        // -> [powered_down <= 0x00000000]
[08:20:16.262]      WriteDP(DP_SELECT, 0x00000000);
[08:20:16.264]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:20:16.265]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[08:20:16.266]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[08:20:16.266]        // -> [powered_down <= 0x00000001]
[08:20:16.266]    </block>
[08:20:16.266]    <control if="powered_down" while="" timeout="0" info="">
[08:20:16.267]      // if-block "powered_down"
[08:20:16.267]        // =>  TRUE
[08:20:16.267]      <block atomic="false" info="">
[08:20:16.267]        WriteDP(DP_CTRL_STAT, 0x50000000);
[08:20:16.269]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[08:20:16.270]      </block>
[08:20:16.270]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[08:20:16.270]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[08:20:16.271]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[08:20:16.272]        // while-condition  =>  FALSE
[08:20:16.272]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[08:20:16.272]      </control>
[08:20:16.272]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[08:20:16.272]        // if-block "(__protocol & 0xFFFF) == 1"
[08:20:16.273]          // =>  FALSE
[08:20:16.273]        // skip if-block "(__protocol & 0xFFFF) == 1"
[08:20:16.273]      </control>
[08:20:16.273]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[08:20:16.274]        // if-block "(__protocol & 0xFFFF) == 2"
[08:20:16.274]          // =>  TRUE
[08:20:16.274]        <block atomic="false" info="">
[08:20:16.274]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[08:20:16.275]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[08:20:16.275]          WriteDP(SW_DP_ABORT, 0x0000001E);
[08:20:16.276]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[08:20:16.276]        </block>
[08:20:16.276]        // end if-block "(__protocol & 0xFFFF) == 2"
[08:20:16.277]      </control>
[08:20:16.277]      // end if-block "powered_down"
[08:20:16.277]    </control>
[08:20:16.277]  </sequence>
[08:20:16.277]  
[08:20:16.284]  **********  Sequence "DebugCoreStart"  (Context="Reset", Pname="", info="")
[08:20:16.284]  
[08:20:16.284]  <debugvars>
[08:20:16.284]    // Pre-defined
[08:20:16.285]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:20:16.285]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:20:16.285]    __dp=0x00000000
[08:20:16.286]    __ap=0x00000000
[08:20:16.286]    __traceout=0x00000000      (Trace Disabled)
[08:20:16.286]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:20:16.287]    __FlashAddr=0x00000000
[08:20:16.287]    __FlashLen=0x00000000
[08:20:16.287]    __FlashArg=0x00000000
[08:20:16.287]    __FlashOp=0x00000000
[08:20:16.288]    __Result=0x00000000
[08:20:16.288]  </debugvars>
[08:20:16.288]  
[08:20:16.289]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[08:20:16.289]    <block atomic="true" info="">
[08:20:16.290]      // ATOMIC SEQUENCE - EXECUTE
[08:20:16.292]      __var DP_R_IDCODE    = 0x0;
[08:20:16.293]        // -> [DP_R_IDCODE <= 0x00000000]
[08:20:16.293]      __var DP_W_ABORT    = 0x0;
[08:20:16.293]        // -> [DP_W_ABORT <= 0x00000000]
[08:20:16.294]      __var DP_CTRLSTAT = 0x4;
[08:20:16.294]        // -> [DP_CTRLSTAT <= 0x00000004]
[08:20:16.294]      __var DP_W_SELECT    = 0x8;
[08:20:16.295]        // -> [DP_W_SELECT <= 0x00000008]
[08:20:16.295]      __var AP_TAR		= 0x4;
[08:20:16.295]        // -> [AP_TAR <= 0x00000004]
[08:20:16.296]      __var AP_BD0		= 0x0;
[08:20:16.296]        // -> [AP_BD0 <= 0x00000000]
[08:20:16.296]      __var AP_BD1		= 0x4;
[08:20:16.296]        // -> [AP_BD1 <= 0x00000004]
[08:20:16.297]      __var AP_BD2		= 0x8;
[08:20:16.297]        // -> [AP_BD2 <= 0x00000008]
[08:20:16.297]      __var PCWithinFlash = 0;
[08:20:16.297]        // -> [PCWithinFlash <= 0x00000000]
[08:20:16.297]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[08:20:16.298]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[08:20:16.298]      // ATOMIC SEQUENCE - DONE
[08:20:16.298]    </block>
[08:20:16.298]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[08:20:16.299]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[08:20:16.302]        // -> [Read32(0xE000EDF0) => 0x01030003]   (__dp=0x00000000, __ap=0x00000000)
[08:20:16.302]      // while-condition  =>  FALSE
[08:20:16.303]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[08:20:16.303]    </control>
[08:20:16.303]    <block atomic="true" info="">
[08:20:16.303]      // ATOMIC SEQUENCE - EXECUTE
[08:20:16.305]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:20:16.305]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:20:16.305]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[08:20:16.305]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[08:20:16.306]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[08:20:16.306]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[08:20:16.306]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[08:20:16.307]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[08:20:16.307]      // ATOMIC SEQUENCE - DONE
[08:20:16.308]    </block>
[08:20:16.308]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[08:20:16.308]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:20:16.310]        // -> [ReadAP(0x00000000) => 0x01030003]   (__dp=0x00000000, __ap=0x00000000)
[08:20:16.310]      // while-condition  =>  FALSE
[08:20:16.310]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[08:20:16.311]    </control>
[08:20:16.311]    <block atomic="false" info="">
[08:20:16.311]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[08:20:16.313]        // -> [ReadAP(0x00000008) => 0x10000820]   (__dp=0x00000000, __ap=0x00000000)
[08:20:16.313]        // -> [PCWithinFlash <= 0x00000001]
[08:20:16.313]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:20:16.315]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:20:16.315]    </block>
[08:20:16.315]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[08:20:16.316]      // if-block "PCWithinFlash == 0"
[08:20:16.316]        // =>  FALSE
[08:20:16.316]      // skip if-block "PCWithinFlash == 0"
[08:20:16.316]    </control>
[08:20:16.316]  </sequence>
[08:20:16.318]  
[08:20:16.335]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[08:20:16.335]  
[08:20:16.336]  <debugvars>
[08:20:16.336]    // Pre-defined
[08:20:16.336]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:20:16.337]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:20:16.337]    __dp=0x00000000
[08:20:16.337]    __ap=0x00000000
[08:20:16.338]    __traceout=0x00000000      (Trace Disabled)
[08:20:16.338]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:20:16.338]    __FlashAddr=0x00000000
[08:20:16.338]    __FlashLen=0x00000000
[08:20:16.339]    __FlashArg=0x00000000
[08:20:16.339]    __FlashOp=0x00000000
[08:20:16.339]    __Result=0x00000000
[08:20:16.340]  </debugvars>
[08:20:16.340]  
[08:20:16.340]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[08:20:16.340]    <block atomic="false" info="">
[08:20:16.341]    </block>
[08:20:16.341]  </sequence>
[08:20:16.341]  
[08:20:16.541]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[08:20:16.541]  
[08:20:16.542]  <debugvars>
[08:20:16.542]    // Pre-defined
[08:20:16.542]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:20:16.543]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:20:16.543]    __dp=0x00000000
[08:20:16.544]    __ap=0x00000000
[08:20:16.544]    __traceout=0x00000000      (Trace Disabled)
[08:20:16.544]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:20:16.545]    __FlashAddr=0x00000000
[08:20:16.545]    __FlashLen=0x00000000
[08:20:16.546]    __FlashArg=0x00000000
[08:20:16.546]    __FlashOp=0x00000000
[08:20:16.546]    __Result=0x00000000
[08:20:16.547]  </debugvars>
[08:20:16.547]  
[08:20:16.547]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[08:20:16.547]    <block atomic="false" info="">
[08:20:16.548]      Sequence("ResetHardware");
[08:20:16.548]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[08:20:16.548]          <block atomic="false" info="">
[08:20:16.549]            __var nReset      = 0x80;
[08:20:16.549]              // -> [nReset <= 0x00000080]
[08:20:16.550]            DAP_SWJ_Pins(0x00, nReset, 0);
[08:20:16.550]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:20:16.551]          </block>
[08:20:16.551]          <control if="" while="1" timeout="50000" info="">
[08:20:16.551]            // while "1"  (timeout="50000")
[08:20:16.551]            // while-condition  =>  TRUE
[08:20:16.552]            // while "1"  (timeout="50000")
[08:20:16.552]            // while-condition  =>  TRUE
[08:20:16.552]            // while "1"  (timeout="50000")
[08:20:16.552]            // while-condition  =>  TRUE
[08:20:16.553]            // while "1"  (timeout="50000")
[08:20:16.553]            // while-condition  =>  TRUE
[08:20:16.553]            // while "1"  (timeout="50000")
[08:20:16.553]            // while-condition  =>  TRUE
[08:20:16.553]            // while "1"  (timeout="50000")
[08:20:16.554]            // while-condition  =>  TRUE
[08:20:16.554]            // while "1"  (timeout="50000")
[08:20:16.554]            // while-condition  =>  TRUE
[08:20:16.554]            // while "1"  (timeout="50000")
[08:20:16.554]            // while-condition  =>  TRUE
[08:20:16.554]            // while "1"  (timeout="50000")
[08:20:16.554]            // while-condition  =>  TRUE
[08:20:16.555]            // while "1"  (timeout="50000")
[08:20:16.555]            // while-condition  =>  TRUE
[08:20:16.555]            // while "1"  (timeout="50000")
[08:20:16.555]            // while-condition  =>  TRUE
[08:20:16.555]            // while "1"  (timeout="50000")
[08:20:16.555]            // while-condition  =>  TRUE
[08:20:16.556]            // while "1"  (timeout="50000")
[08:20:16.556]            // while-condition  =>  TRUE
[08:20:16.556]            // while "1"  (timeout="50000")
[08:20:16.556]            // while-condition  =>  TRUE
[08:20:16.556]            // while "1"  (timeout="50000")
[08:20:16.557]            // while-condition  =>  TRUE
[08:20:16.557]            // while "1"  (timeout="50000")
[08:20:16.557]            // while-condition  =>  TRUE
[08:20:16.557]            // while "1"  (timeout="50000")
[08:20:16.557]            // while-condition  =>  TRUE
[08:20:16.558]            // while "1"  (timeout="50000")
[08:20:16.558]            // while-condition  =>  TRUE
[08:20:16.558]            // while "1"  (timeout="50000")
[08:20:16.558]            // while-condition  =>  TRUE
[08:20:16.558]            // while "1"  (timeout="50000")
[08:20:16.558]            // while-condition  =>  TRUE
[08:20:16.559]            // while "1"  (timeout="50000")
[08:20:16.559]            // while-condition  =>  TRUE
[08:20:16.559]            // while "1"  (timeout="50000")
[08:20:16.559]            // while-condition  =>  TRUE
[08:20:16.560]            // while "1"  (timeout="50000")
[08:20:16.560]            // while-condition  =>  TRUE
[08:20:16.560]            // while "1"  (timeout="50000")
[08:20:16.560]            // while-condition  =>  TRUE
[08:20:16.561]            // while "1"  (timeout="50000")
[08:20:16.561]            // while-condition  =>  TRUE
[08:20:16.561]            // while "1"  (timeout="50000")
[08:20:16.561]            // while-condition  =>  TRUE
[08:20:16.562]            // while "1"  (timeout="50000")
[08:20:16.562]            // while-condition  =>  TRUE
[08:20:16.562]            // while "1"  (timeout="50000")
[08:20:16.562]            // while-condition  =>  TRUE
[08:20:16.563]            // while "1"  (timeout="50000")
[08:20:16.563]            // while-condition  =>  TRUE
[08:20:16.563]            // while "1"  (timeout="50000")
[08:20:16.563]            // while-condition  =>  TRUE
[08:20:16.563]            // while "1"  (timeout="50000")
[08:20:16.564]            // while-condition  =>  TRUE
[08:20:16.564]            // while "1"  (timeout="50000")
[08:20:16.564]            // while-condition  =>  TRUE
[08:20:16.564]            // while "1"  (timeout="50000")
[08:20:16.564]            // while-condition  =>  TRUE
[08:20:16.565]            // while "1"  (timeout="50000")
[08:20:16.565]            // while-condition  =>  TRUE
[08:20:16.565]            // while "1"  (timeout="50000")
[08:20:16.565]            // while-condition  =>  TRUE
[08:20:16.565]            // while "1"  (timeout="50000")
[08:20:16.566]            // while-condition  =>  TRUE
[08:20:16.566]            // while "1"  (timeout="50000")
[08:20:16.566]            // while-condition  =>  TRUE
[08:20:16.566]            // while "1"  (timeout="50000")
[08:20:16.567]            // while-condition  =>  TRUE
[08:20:16.567]            // while "1"  (timeout="50000")
[08:20:16.567]            // while-condition  =>  TRUE
[08:20:16.567]            // while "1"  (timeout="50000")
[08:20:16.567]            // while-condition  =>  TRUE
[08:20:16.568]            // while "1"  (timeout="50000")
[08:20:16.568]            // while-condition  =>  TRUE
[08:20:16.568]            // while "1"  (timeout="50000")
[08:20:16.568]            // while-condition  =>  TRUE
[08:20:16.569]            // while "1"  (timeout="50000")
[08:20:16.569]            // while-condition  =>  TRUE
[08:20:16.569]            // while "1"  (timeout="50000")
[08:20:16.569]            // while-condition  =>  TRUE
[08:20:16.569]            // while "1"  (timeout="50000")
[08:20:16.570]            // while-condition  =>  TRUE
[08:20:16.570]            // while "1"  (timeout="50000")
[08:20:16.570]            // while-condition  =>  TRUE
[08:20:16.570]            // while "1"  (timeout="50000")
[08:20:16.571]            // while-condition  =>  TRUE
[08:20:16.571]            // while "1"  (timeout="50000")
[08:20:16.571]            // while-condition  =>  TRUE
[08:20:16.571]            // while "1"  (timeout="50000")
[08:20:16.572]            // while-condition  =>  TRUE
[08:20:16.572]            // while "1"  (timeout="50000")
[08:20:16.572]            // while-condition  =>  TRUE
[08:20:16.573]            // while "1"  (timeout="50000")
[08:20:16.573]            // while-condition  =>  TRUE
[08:20:16.573]            // while "1"  (timeout="50000")
[08:20:16.573]            // while-condition  =>  TRUE
[08:20:16.574]            // while "1"  (timeout="50000")
[08:20:16.574]            // while-condition  =>  TRUE
[08:20:16.574]            // while "1"  (timeout="50000")
[08:20:16.574]            // while-condition  =>  TRUE
[08:20:16.574]            // while "1"  (timeout="50000")
[08:20:16.574]            // while-condition  =>  TRUE
[08:20:16.574]            // while "1"  (timeout="50000")
[08:20:16.574]            // while-condition  =>  TRUE
[08:20:16.575]            // while "1"  (timeout="50000")
[08:20:16.575]            // while-condition  =>  TRUE
[08:20:16.575]            // while "1"  (timeout="50000")
[08:20:16.575]            // while-condition  =>  TRUE
[08:20:16.576]            // while "1"  (timeout="50000")
[08:20:16.576]            // while-condition  =>  TRUE
[08:20:16.576]            // while "1"  (timeout="50000")
[08:20:16.576]            // while-condition  =>  TRUE
[08:20:16.577]            // while "1"  (timeout="50000")
[08:20:16.577]            // while-condition  =>  TRUE
[08:20:16.577]            // while "1"  (timeout="50000")
[08:20:16.577]            // while-condition  =>  TRUE
[08:20:16.578]            // while "1"  (timeout="50000")
[08:20:16.578]            // while-condition  =>  TRUE
[08:20:16.578]            // while "1"  (timeout="50000")
[08:20:16.578]            // while-condition  =>  TRUE
[08:20:16.578]            // while "1"  (timeout="50000")
[08:20:16.579]            // while-condition  =>  TRUE
[08:20:16.579]            // while "1"  (timeout="50000")
[08:20:16.579]            // while-condition  =>  TRUE
[08:20:16.579]            // while "1"  (timeout="50000")
[08:20:16.580]            // while-condition  =>  TRUE
[08:20:16.580]            // while "1"  (timeout="50000")
[08:20:16.580]            // while-condition  =>  TRUE
[08:20:16.580]            // while "1"  (timeout="50000")
[08:20:16.580]            // while-condition  =>  TRUE
[08:20:16.581]            // while "1"  (timeout="50000")
[08:20:16.581]            // while-condition  =>  TRUE
[08:20:16.581]            // while "1"  (timeout="50000")
[08:20:16.581]            // while-condition  =>  TRUE
[08:20:16.581]            // while "1"  (timeout="50000")
[08:20:16.582]            // while-condition  =>  TRUE
[08:20:16.582]            // while "1"  (timeout="50000")
[08:20:16.582]            // while-condition  =>  TRUE
[08:20:16.582]            // while "1"  (timeout="50000")
[08:20:16.582]            // while-condition  =>  TRUE
[08:20:16.583]            // while "1"  (timeout="50000")
[08:20:16.583]            // while-condition  =>  TRUE
[08:20:16.583]            // while "1"  (timeout="50000")
[08:20:16.583]            // while-condition  =>  TRUE
[08:20:16.584]            // while "1"  (timeout="50000")
[08:20:16.584]            // while-condition  =>  TRUE
[08:20:16.585]            // while "1"  (timeout="50000")
[08:20:16.585]            // while-condition  =>  TRUE
[08:20:16.585]            // while "1"  (timeout="50000")
[08:20:16.585]            // while-condition  =>  TRUE
[08:20:16.586]            // while "1"  (timeout="50000")
[08:20:16.586]            // while-condition  =>  TRUE
[08:20:16.586]            // while "1"  (timeout="50000")
[08:20:16.586]            // while-condition  =>  TRUE
[08:20:16.586]            // while "1"  (timeout="50000")
[08:20:16.587]            // while-condition  =>  TRUE
[08:20:16.587]            // while "1"  (timeout="50000")
[08:20:16.587]            // while-condition  =>  TRUE
[08:20:16.587]            // while "1"  (timeout="50000")
[08:20:16.588]            // while-condition  =>  TRUE
[08:20:16.589]            // while "1"  (timeout="50000")
[08:20:16.589]            // while-condition  =>  TRUE
[08:20:16.589]            // while "1"  (timeout="50000")
[08:20:16.589]            // while-condition  =>  TRUE
[08:20:16.589]            // while "1"  (timeout="50000")
[08:20:16.589]            // while-condition  =>  TRUE
[08:20:16.589]            // while "1"  (timeout="50000")
[08:20:16.589]            // while-condition  =>  TRUE
[08:20:16.590]            // while "1"  (timeout="50000")
[08:20:16.590]            // while-condition  =>  TRUE
[08:20:16.590]            // while "1"  (timeout="50000")
[08:20:16.590]            // while-condition  =>  TRUE
[08:20:16.590]            // while "1"  (timeout="50000")
[08:20:16.591]            // while-condition  =>  TRUE
[08:20:16.592]            // while "1"  (timeout="50000")
[08:20:16.592]            // while-condition  =>  TRUE
[08:20:16.592]            // while "1"  (timeout="50000")
[08:20:16.592]            // while-condition  =>  TRUE
[08:20:16.592]            // while "1"  (timeout="50000")
[08:20:16.593]            // while-condition  =>  TRUE
[08:20:16.593]            // while "1"  (timeout="50000")
[08:20:16.593]            // while-condition  =>  TRUE
[08:20:16.593]            // while "1"  (timeout="50000")
[08:20:16.593]            // while-condition  =>  TRUE
[08:20:16.593]            // while "1"  (timeout="50000")
[08:20:16.594]            // while-condition  =>  TRUE
[08:20:16.594]            // while "1"  (timeout="50000")
[08:20:16.594]            // while-condition  =>  TRUE
[08:20:16.595]            // while "1"  (timeout="50000")
[08:20:16.595]            // while-condition  =>  TRUE
[08:20:16.595]            // while "1"  (timeout="50000")
[08:20:16.595]            // while-condition  =>  TRUE
[08:20:16.595]            // while "1"  (timeout="50000")
[08:20:16.596]            // while-condition  =>  TRUE
[08:20:16.596]            // while "1"  (timeout="50000")
[08:20:16.596]            // while-condition  =>  TRUE
[08:20:16.596]            // while "1"  (timeout="50000")
[08:20:16.596]            // while-condition  =>  TRUE
[08:20:16.597]            // while "1"  (timeout="50000")
[08:20:16.597]            // while-condition  =>  TRUE
[08:20:16.597]            // while "1"  (timeout="50000")
[08:20:16.597]            // while-condition  =>  TRUE
[08:20:16.597]            // while "1"  (timeout="50000")
[08:20:16.598]            // while-condition  =>  TRUE
[08:20:16.598]            // while "1"  (timeout="50000")
[08:20:16.598]            // while-condition  =>  TRUE
[08:20:16.598]            // while "1"  (timeout="50000")
[08:20:16.598]            // while-condition  =>  TRUE
[08:20:16.598]            // while "1"  (timeout="50000")
[08:20:16.599]            // while-condition  =>  TRUE
[08:20:16.599]            // while "1"  (timeout="50000")
[08:20:16.599]            // while-condition  =>  TRUE
[08:20:16.599]            // while "1"  (timeout="50000")
[08:20:16.599]            // while-condition  =>  TRUE
[08:20:16.599]            // while "1"  (timeout="50000")
[08:20:16.599]            // while-condition  =>  TRUE
[08:20:16.600]            // while "1"  (timeout="50000")
[08:20:16.600]            // while  =>  TIMEOUT
[08:20:16.600]            // end while "1"
[08:20:16.600]          </control>
[08:20:16.600]          <block atomic="false" info="">
[08:20:16.601]            DAP_SWJ_Pins(nReset, nReset, 0);
[08:20:16.613]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:20:16.613]          </block>
[08:20:16.614]          <control if="" while="1" timeout="10000" info="">
[08:20:16.614]            // while "1"  (timeout="10000")
[08:20:16.614]            // while-condition  =>  TRUE
[08:20:16.615]            // while "1"  (timeout="10000")
[08:20:16.615]            // while-condition  =>  TRUE
[08:20:16.615]            // while "1"  (timeout="10000")
[08:20:16.616]            // while-condition  =>  TRUE
[08:20:16.616]            // while "1"  (timeout="10000")
[08:20:16.616]            // while  =>  TIMEOUT
[08:20:16.617]            // end while "1"
[08:20:16.617]          </control>
[08:20:16.617]          <block atomic="true" info="">
[08:20:16.618]            // ATOMIC SEQUENCE - EXECUTE
[08:20:16.619]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[08:20:16.620]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[08:20:16.620]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[08:20:16.620]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[08:20:16.621]            // ATOMIC SEQUENCE - DONE
[08:20:16.621]          </block>
[08:20:16.621]          <block atomic="false" info="">
[08:20:16.622]            __errorcontrol = 0x00000001;
[08:20:16.622]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[08:20:16.622]            ReadDP(0x0);
[08:20:16.624]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[08:20:16.624]            __errorcontrol = 0x00000000;
[08:20:16.624]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[08:20:16.624]          </block>
[08:20:16.625]        </sequence>
[08:20:16.625]      Sequence("DebugPortSetup");
[08:20:16.625]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[08:20:16.625]        </sequence>
[08:20:16.625]      Sequence("DebugPortStart");
[08:20:16.625]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[08:20:16.626]          <block atomic="false" info="">
[08:20:16.627]            __var SW_DP_ABORT  = 0x0;
[08:20:16.628]              // -> [SW_DP_ABORT <= 0x00000000]
[08:20:16.628]            __var DP_CTRL_STAT = 0x4;
[08:20:16.628]              // -> [DP_CTRL_STAT <= 0x00000004]
[08:20:16.629]            __var DP_SELECT    = 0x8;
[08:20:16.629]              // -> [DP_SELECT <= 0x00000008]
[08:20:16.629]            __var powered_down = 0;
[08:20:16.629]              // -> [powered_down <= 0x00000000]
[08:20:16.630]            WriteDP(DP_SELECT, 0x00000000);
[08:20:16.631]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:20:16.632]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[08:20:16.632]              // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[08:20:16.633]              // -> [powered_down <= 0x00000001]
[08:20:16.633]          </block>
[08:20:16.633]          <control if="powered_down" while="" timeout="0" info="">
[08:20:16.633]            // if-block "powered_down"
[08:20:16.634]              // =>  TRUE
[08:20:16.634]            <block atomic="false" info="">
[08:20:16.634]              WriteDP(DP_CTRL_STAT, 0x50000000);
[08:20:16.635]                // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[08:20:16.636]            </block>
[08:20:16.636]            <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[08:20:16.636]              // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[08:20:16.638]                // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[08:20:16.639]              // while-condition  =>  FALSE
[08:20:16.639]              // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[08:20:16.639]            </control>
[08:20:16.639]            <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[08:20:16.639]              // if-block "(__protocol & 0xFFFF) == 1"
[08:20:16.640]                // =>  FALSE
[08:20:16.640]              // skip if-block "(__protocol & 0xFFFF) == 1"
[08:20:16.640]            </control>
[08:20:16.640]            <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[08:20:16.641]              // if-block "(__protocol & 0xFFFF) == 2"
[08:20:16.641]                // =>  TRUE
[08:20:16.641]              <block atomic="false" info="">
[08:20:16.641]                WriteDP(DP_CTRL_STAT, 0x50000F00);
[08:20:16.642]                  // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[08:20:16.642]                WriteDP(SW_DP_ABORT, 0x0000001E);
[08:20:16.643]                  // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[08:20:16.643]              </block>
[08:20:16.644]              // end if-block "(__protocol & 0xFFFF) == 2"
[08:20:16.644]            </control>
[08:20:16.645]            // end if-block "powered_down"
[08:20:16.645]          </control>
[08:20:16.645]        </sequence>
[08:20:16.645]      Sequence("DebugCoreStart");
[08:20:16.645]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[08:20:16.646]          <block atomic="true" info="">
[08:20:16.646]            // ATOMIC SEQUENCE - EXECUTE
[08:20:16.647]            __var DP_R_IDCODE    = 0x0;
[08:20:16.647]              // -> [DP_R_IDCODE <= 0x00000000]
[08:20:16.647]            __var DP_W_ABORT    = 0x0;
[08:20:16.648]              // -> [DP_W_ABORT <= 0x00000000]
[08:20:16.648]            __var DP_CTRLSTAT = 0x4;
[08:20:16.648]              // -> [DP_CTRLSTAT <= 0x00000004]
[08:20:16.649]            __var DP_W_SELECT    = 0x8;
[08:20:16.649]              // -> [DP_W_SELECT <= 0x00000008]
[08:20:16.649]            __var AP_TAR		= 0x4;
[08:20:16.649]              // -> [AP_TAR <= 0x00000004]
[08:20:16.650]            __var AP_BD0		= 0x0;
[08:20:16.650]              // -> [AP_BD0 <= 0x00000000]
[08:20:16.650]            __var AP_BD1		= 0x4;
[08:20:16.650]              // -> [AP_BD1 <= 0x00000004]
[08:20:16.650]            __var AP_BD2		= 0x8;
[08:20:16.650]              // -> [AP_BD2 <= 0x00000008]
[08:20:16.651]            __var PCWithinFlash = 0;
[08:20:16.651]              // -> [PCWithinFlash <= 0x00000000]
[08:20:16.651]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[08:20:16.651]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[08:20:16.651]            // ATOMIC SEQUENCE - DONE
[08:20:16.652]          </block>
[08:20:16.652]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[08:20:16.652]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[08:20:16.655]              // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[08:20:16.655]            // while-condition  =>  FALSE
[08:20:16.655]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[08:20:16.656]          </control>
[08:20:16.656]          <block atomic="true" info="">
[08:20:16.656]            // ATOMIC SEQUENCE - EXECUTE
[08:20:16.658]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:20:16.659]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:20:16.659]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[08:20:16.659]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[08:20:16.659]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[08:20:16.660]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[08:20:16.660]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[08:20:16.660]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[08:20:16.660]            // ATOMIC SEQUENCE - DONE
[08:20:16.660]          </block>
[08:20:16.660]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[08:20:16.660]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:20:16.662]              // -> [ReadAP(0x00000000) => 0x01030003]   (__dp=0x00000000, __ap=0x00000000)
[08:20:16.662]            // while-condition  =>  FALSE
[08:20:16.662]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[08:20:16.662]          </control>
[08:20:16.662]          <block atomic="false" info="">
[08:20:16.663]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[08:20:16.664]              // -> [ReadAP(0x00000008) => 0x10000820]   (__dp=0x00000000, __ap=0x00000000)
[08:20:16.664]              // -> [PCWithinFlash <= 0x00000001]
[08:20:16.665]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:20:16.667]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:20:16.667]          </block>
[08:20:16.667]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[08:20:16.667]            // if-block "PCWithinFlash == 0"
[08:20:16.667]              // =>  FALSE
[08:20:16.668]            // skip if-block "PCWithinFlash == 0"
[08:20:16.668]          </control>
[08:20:16.668]        </sequence>
[08:20:16.668]    </block>
[08:20:16.669]  </sequence>
[08:20:16.669]  
[08:20:24.111]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[08:20:24.111]  
[08:20:24.112]  <debugvars>
[08:20:24.113]    // Pre-defined
[08:20:24.113]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:20:24.113]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:20:24.113]    __dp=0x00000000
[08:20:24.113]    __ap=0x00000000
[08:20:24.113]    __traceout=0x00000000      (Trace Disabled)
[08:20:24.114]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:20:24.114]    __FlashAddr=0x00000000
[08:20:24.114]    __FlashLen=0x00000000
[08:20:24.114]    __FlashArg=0x00000000
[08:20:24.114]    __FlashOp=0x00000000
[08:20:24.115]    __Result=0x00000000
[08:20:24.115]  </debugvars>
[08:20:24.115]  
[08:20:24.115]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[08:20:24.116]    <block atomic="false" info="">
[08:20:24.116]      __var nReset      = 0x80;
[08:20:24.116]        // -> [nReset <= 0x00000080]
[08:20:24.116]      DAP_SWJ_Pins(0x00, nReset, 0);
[08:20:24.118]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:20:24.119]    </block>
[08:20:24.119]    <control if="" while="1" timeout="50000" info="">
[08:20:24.119]      // while "1"  (timeout="50000")
[08:20:24.119]      // while-condition  =>  TRUE
[08:20:24.119]      // while "1"  (timeout="50000")
[08:20:24.119]      // while-condition  =>  TRUE
[08:20:24.119]      // while "1"  (timeout="50000")
[08:20:24.120]      // while-condition  =>  TRUE
[08:20:24.120]      // while "1"  (timeout="50000")
[08:20:24.120]      // while-condition  =>  TRUE
[08:20:24.120]      // while "1"  (timeout="50000")
[08:20:24.120]      // while-condition  =>  TRUE
[08:20:24.121]      // while "1"  (timeout="50000")
[08:20:24.121]      // while-condition  =>  TRUE
[08:20:24.121]      // while "1"  (timeout="50000")
[08:20:24.121]      // while-condition  =>  TRUE
[08:20:24.121]      // while "1"  (timeout="50000")
[08:20:24.122]      // while-condition  =>  TRUE
[08:20:24.123]      // while "1"  (timeout="50000")
[08:20:24.123]      // while-condition  =>  TRUE
[08:20:24.123]      // while "1"  (timeout="50000")
[08:20:24.123]      // while-condition  =>  TRUE
[08:20:24.123]      // while "1"  (timeout="50000")
[08:20:24.124]      // while-condition  =>  TRUE
[08:20:24.124]      // while "1"  (timeout="50000")
[08:20:24.124]      // while-condition  =>  TRUE
[08:20:24.124]      // while "1"  (timeout="50000")
[08:20:24.124]      // while-condition  =>  TRUE
[08:20:24.124]      // while "1"  (timeout="50000")
[08:20:24.124]      // while-condition  =>  TRUE
[08:20:24.124]      // while "1"  (timeout="50000")
[08:20:24.124]      // while-condition  =>  TRUE
[08:20:24.124]      // while "1"  (timeout="50000")
[08:20:24.125]      // while-condition  =>  TRUE
[08:20:24.126]      // while "1"  (timeout="50000")
[08:20:24.126]      // while-condition  =>  TRUE
[08:20:24.126]      // while "1"  (timeout="50000")
[08:20:24.126]      // while-condition  =>  TRUE
[08:20:24.126]      // while "1"  (timeout="50000")
[08:20:24.126]      // while-condition  =>  TRUE
[08:20:24.127]      // while "1"  (timeout="50000")
[08:20:24.127]      // while-condition  =>  TRUE
[08:20:24.127]      // while "1"  (timeout="50000")
[08:20:24.128]      // while-condition  =>  TRUE
[08:20:24.128]      // while "1"  (timeout="50000")
[08:20:24.128]      // while-condition  =>  TRUE
[08:20:24.128]      // while "1"  (timeout="50000")
[08:20:24.128]      // while-condition  =>  TRUE
[08:20:24.129]      // while "1"  (timeout="50000")
[08:20:24.129]      // while-condition  =>  TRUE
[08:20:24.129]      // while "1"  (timeout="50000")
[08:20:24.129]      // while-condition  =>  TRUE
[08:20:24.129]      // while "1"  (timeout="50000")
[08:20:24.130]      // while-condition  =>  TRUE
[08:20:24.130]      // while "1"  (timeout="50000")
[08:20:24.130]      // while-condition  =>  TRUE
[08:20:24.130]      // while "1"  (timeout="50000")
[08:20:24.130]      // while-condition  =>  TRUE
[08:20:24.130]      // while "1"  (timeout="50000")
[08:20:24.130]      // while-condition  =>  TRUE
[08:20:24.130]      // while "1"  (timeout="50000")
[08:20:24.130]      // while-condition  =>  TRUE
[08:20:24.130]      // while "1"  (timeout="50000")
[08:20:24.131]      // while-condition  =>  TRUE
[08:20:24.131]      // while "1"  (timeout="50000")
[08:20:24.131]      // while-condition  =>  TRUE
[08:20:24.131]      // while "1"  (timeout="50000")
[08:20:24.131]      // while-condition  =>  TRUE
[08:20:24.132]      // while "1"  (timeout="50000")
[08:20:24.132]      // while-condition  =>  TRUE
[08:20:24.132]      // while "1"  (timeout="50000")
[08:20:24.132]      // while-condition  =>  TRUE
[08:20:24.132]      // while "1"  (timeout="50000")
[08:20:24.133]      // while-condition  =>  TRUE
[08:20:24.134]      // while "1"  (timeout="50000")
[08:20:24.134]      // while-condition  =>  TRUE
[08:20:24.134]      // while "1"  (timeout="50000")
[08:20:24.134]      // while-condition  =>  TRUE
[08:20:24.134]      // while "1"  (timeout="50000")
[08:20:24.134]      // while-condition  =>  TRUE
[08:20:24.134]      // while "1"  (timeout="50000")
[08:20:24.134]      // while-condition  =>  TRUE
[08:20:24.134]      // while "1"  (timeout="50000")
[08:20:24.135]      // while-condition  =>  TRUE
[08:20:24.136]      // while "1"  (timeout="50000")
[08:20:24.136]      // while-condition  =>  TRUE
[08:20:24.136]      // while "1"  (timeout="50000")
[08:20:24.136]      // while-condition  =>  TRUE
[08:20:24.136]      // while "1"  (timeout="50000")
[08:20:24.137]      // while-condition  =>  TRUE
[08:20:24.137]      // while "1"  (timeout="50000")
[08:20:24.137]      // while-condition  =>  TRUE
[08:20:24.137]      // while "1"  (timeout="50000")
[08:20:24.137]      // while-condition  =>  TRUE
[08:20:24.138]      // while "1"  (timeout="50000")
[08:20:24.138]      // while-condition  =>  TRUE
[08:20:24.138]      // while "1"  (timeout="50000")
[08:20:24.138]      // while-condition  =>  TRUE
[08:20:24.138]      // while "1"  (timeout="50000")
[08:20:24.139]      // while-condition  =>  TRUE
[08:20:24.139]      // while "1"  (timeout="50000")
[08:20:24.139]      // while-condition  =>  TRUE
[08:20:24.139]      // while "1"  (timeout="50000")
[08:20:24.139]      // while-condition  =>  TRUE
[08:20:24.140]      // while "1"  (timeout="50000")
[08:20:24.140]      // while-condition  =>  TRUE
[08:20:24.140]      // while "1"  (timeout="50000")
[08:20:24.140]      // while-condition  =>  TRUE
[08:20:24.140]      // while "1"  (timeout="50000")
[08:20:24.141]      // while-condition  =>  TRUE
[08:20:24.141]      // while "1"  (timeout="50000")
[08:20:24.141]      // while-condition  =>  TRUE
[08:20:24.141]      // while "1"  (timeout="50000")
[08:20:24.141]      // while-condition  =>  TRUE
[08:20:24.141]      // while "1"  (timeout="50000")
[08:20:24.141]      // while-condition  =>  TRUE
[08:20:24.141]      // while "1"  (timeout="50000")
[08:20:24.141]      // while-condition  =>  TRUE
[08:20:24.142]      // while "1"  (timeout="50000")
[08:20:24.142]      // while-condition  =>  TRUE
[08:20:24.142]      // while "1"  (timeout="50000")
[08:20:24.142]      // while-condition  =>  TRUE
[08:20:24.143]      // while "1"  (timeout="50000")
[08:20:24.143]      // while-condition  =>  TRUE
[08:20:24.143]      // while "1"  (timeout="50000")
[08:20:24.143]      // while-condition  =>  TRUE
[08:20:24.143]      // while "1"  (timeout="50000")
[08:20:24.144]      // while-condition  =>  TRUE
[08:20:24.144]      // while "1"  (timeout="50000")
[08:20:24.144]      // while-condition  =>  TRUE
[08:20:24.144]      // while "1"  (timeout="50000")
[08:20:24.144]      // while-condition  =>  TRUE
[08:20:24.145]      // while "1"  (timeout="50000")
[08:20:24.145]      // while-condition  =>  TRUE
[08:20:24.145]      // while "1"  (timeout="50000")
[08:20:24.145]      // while-condition  =>  TRUE
[08:20:24.145]      // while "1"  (timeout="50000")
[08:20:24.146]      // while-condition  =>  TRUE
[08:20:24.147]      // while "1"  (timeout="50000")
[08:20:24.147]      // while-condition  =>  TRUE
[08:20:24.147]      // while "1"  (timeout="50000")
[08:20:24.147]      // while-condition  =>  TRUE
[08:20:24.147]      // while "1"  (timeout="50000")
[08:20:24.147]      // while-condition  =>  TRUE
[08:20:24.147]      // while "1"  (timeout="50000")
[08:20:24.148]      // while-condition  =>  TRUE
[08:20:24.148]      // while "1"  (timeout="50000")
[08:20:24.148]      // while-condition  =>  TRUE
[08:20:24.148]      // while "1"  (timeout="50000")
[08:20:24.148]      // while-condition  =>  TRUE
[08:20:24.148]      // while "1"  (timeout="50000")
[08:20:24.149]      // while-condition  =>  TRUE
[08:20:24.149]      // while "1"  (timeout="50000")
[08:20:24.150]      // while-condition  =>  TRUE
[08:20:24.150]      // while "1"  (timeout="50000")
[08:20:24.150]      // while-condition  =>  TRUE
[08:20:24.150]      // while "1"  (timeout="50000")
[08:20:24.150]      // while-condition  =>  TRUE
[08:20:24.151]      // while "1"  (timeout="50000")
[08:20:24.151]      // while-condition  =>  TRUE
[08:20:24.151]      // while "1"  (timeout="50000")
[08:20:24.151]      // while-condition  =>  TRUE
[08:20:24.151]      // while "1"  (timeout="50000")
[08:20:24.152]      // while-condition  =>  TRUE
[08:20:24.152]      // while "1"  (timeout="50000")
[08:20:24.152]      // while-condition  =>  TRUE
[08:20:24.152]      // while "1"  (timeout="50000")
[08:20:24.152]      // while-condition  =>  TRUE
[08:20:24.153]      // while "1"  (timeout="50000")
[08:20:24.153]      // while-condition  =>  TRUE
[08:20:24.153]      // while "1"  (timeout="50000")
[08:20:24.153]      // while-condition  =>  TRUE
[08:20:24.154]      // while "1"  (timeout="50000")
[08:20:24.154]      // while-condition  =>  TRUE
[08:20:24.154]      // while "1"  (timeout="50000")
[08:20:24.154]      // while-condition  =>  TRUE
[08:20:24.154]      // while "1"  (timeout="50000")
[08:20:24.154]      // while-condition  =>  TRUE
[08:20:24.154]      // while "1"  (timeout="50000")
[08:20:24.154]      // while-condition  =>  TRUE
[08:20:24.154]      // while "1"  (timeout="50000")
[08:20:24.155]      // while-condition  =>  TRUE
[08:20:24.155]      // while "1"  (timeout="50000")
[08:20:24.155]      // while-condition  =>  TRUE
[08:20:24.155]      // while "1"  (timeout="50000")
[08:20:24.155]      // while-condition  =>  TRUE
[08:20:24.156]      // while "1"  (timeout="50000")
[08:20:24.157]      // while-condition  =>  TRUE
[08:20:24.157]      // while "1"  (timeout="50000")
[08:20:24.157]      // while-condition  =>  TRUE
[08:20:24.157]      // while "1"  (timeout="50000")
[08:20:24.157]      // while-condition  =>  TRUE
[08:20:24.158]      // while "1"  (timeout="50000")
[08:20:24.158]      // while-condition  =>  TRUE
[08:20:24.158]      // while "1"  (timeout="50000")
[08:20:24.158]      // while-condition  =>  TRUE
[08:20:24.158]      // while "1"  (timeout="50000")
[08:20:24.159]      // while-condition  =>  TRUE
[08:20:24.159]      // while "1"  (timeout="50000")
[08:20:24.159]      // while-condition  =>  TRUE
[08:20:24.159]      // while "1"  (timeout="50000")
[08:20:24.159]      // while-condition  =>  TRUE
[08:20:24.159]      // while "1"  (timeout="50000")
[08:20:24.160]      // while-condition  =>  TRUE
[08:20:24.160]      // while "1"  (timeout="50000")
[08:20:24.160]      // while-condition  =>  TRUE
[08:20:24.160]      // while "1"  (timeout="50000")
[08:20:24.161]      // while-condition  =>  TRUE
[08:20:24.161]      // while "1"  (timeout="50000")
[08:20:24.161]      // while-condition  =>  TRUE
[08:20:24.161]      // while "1"  (timeout="50000")
[08:20:24.161]      // while-condition  =>  TRUE
[08:20:24.162]      // while "1"  (timeout="50000")
[08:20:24.162]      // while-condition  =>  TRUE
[08:20:24.162]      // while "1"  (timeout="50000")
[08:20:24.162]      // while-condition  =>  TRUE
[08:20:24.162]      // while "1"  (timeout="50000")
[08:20:24.162]      // while-condition  =>  TRUE
[08:20:24.163]      // while "1"  (timeout="50000")
[08:20:24.163]      // while-condition  =>  TRUE
[08:20:24.163]      // while "1"  (timeout="50000")
[08:20:24.163]      // while-condition  =>  TRUE
[08:20:24.164]      // while "1"  (timeout="50000")
[08:20:24.164]      // while-condition  =>  TRUE
[08:20:24.164]      // while "1"  (timeout="50000")
[08:20:24.164]      // while-condition  =>  TRUE
[08:20:24.164]      // while "1"  (timeout="50000")
[08:20:24.164]      // while-condition  =>  TRUE
[08:20:24.164]      // while "1"  (timeout="50000")
[08:20:24.164]      // while-condition  =>  TRUE
[08:20:24.164]      // while "1"  (timeout="50000")
[08:20:24.165]      // while-condition  =>  TRUE
[08:20:24.165]      // while "1"  (timeout="50000")
[08:20:24.165]      // while-condition  =>  TRUE
[08:20:24.165]      // while "1"  (timeout="50000")
[08:20:24.165]      // while-condition  =>  TRUE
[08:20:24.166]      // while "1"  (timeout="50000")
[08:20:24.166]      // while-condition  =>  TRUE
[08:20:24.166]      // while "1"  (timeout="50000")
[08:20:24.166]      // while-condition  =>  TRUE
[08:20:24.166]      // while "1"  (timeout="50000")
[08:20:24.167]      // while-condition  =>  TRUE
[08:20:24.167]      // while "1"  (timeout="50000")
[08:20:24.167]      // while-condition  =>  TRUE
[08:20:24.167]      // while "1"  (timeout="50000")
[08:20:24.168]      // while-condition  =>  TRUE
[08:20:24.168]      // while "1"  (timeout="50000")
[08:20:24.168]      // while-condition  =>  TRUE
[08:20:24.168]      // while "1"  (timeout="50000")
[08:20:24.169]      // while-condition  =>  TRUE
[08:20:24.169]      // while "1"  (timeout="50000")
[08:20:24.169]      // while-condition  =>  TRUE
[08:20:24.169]      // while "1"  (timeout="50000")
[08:20:24.169]      // while-condition  =>  TRUE
[08:20:24.170]      // while "1"  (timeout="50000")
[08:20:24.170]      // while-condition  =>  TRUE
[08:20:24.170]      // while "1"  (timeout="50000")
[08:20:24.171]      // while-condition  =>  TRUE
[08:20:24.171]      // while "1"  (timeout="50000")
[08:20:24.171]      // while-condition  =>  TRUE
[08:20:24.171]      // while "1"  (timeout="50000")
[08:20:24.172]      // while-condition  =>  TRUE
[08:20:24.172]      // while "1"  (timeout="50000")
[08:20:24.172]      // while-condition  =>  TRUE
[08:20:24.172]      // while "1"  (timeout="50000")
[08:20:24.172]      // while-condition  =>  TRUE
[08:20:24.173]      // while "1"  (timeout="50000")
[08:20:24.174]      // while-condition  =>  TRUE
[08:20:24.174]      // while "1"  (timeout="50000")
[08:20:24.174]      // while-condition  =>  TRUE
[08:20:24.174]      // while "1"  (timeout="50000")
[08:20:24.174]      // while-condition  =>  TRUE
[08:20:24.174]      // while "1"  (timeout="50000")
[08:20:24.174]      // while-condition  =>  TRUE
[08:20:24.174]      // while "1"  (timeout="50000")
[08:20:24.175]      // while-condition  =>  TRUE
[08:20:24.175]      // while "1"  (timeout="50000")
[08:20:24.175]      // while-condition  =>  TRUE
[08:20:24.175]      // while "1"  (timeout="50000")
[08:20:24.175]      // while-condition  =>  TRUE
[08:20:24.176]      // while "1"  (timeout="50000")
[08:20:24.176]      // while-condition  =>  TRUE
[08:20:24.176]      // while "1"  (timeout="50000")
[08:20:24.176]      // while-condition  =>  TRUE
[08:20:24.177]      // while "1"  (timeout="50000")
[08:20:24.177]      // while-condition  =>  TRUE
[08:20:24.177]      // while "1"  (timeout="50000")
[08:20:24.177]      // while-condition  =>  TRUE
[08:20:24.177]      // while "1"  (timeout="50000")
[08:20:24.178]      // while-condition  =>  TRUE
[08:20:24.178]      // while "1"  (timeout="50000")
[08:20:24.179]      // while  =>  TIMEOUT
[08:20:24.179]      // end while "1"
[08:20:24.180]    </control>
[08:20:24.180]    <block atomic="false" info="">
[08:20:24.180]      DAP_SWJ_Pins(nReset, nReset, 0);
[08:20:24.191]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:20:24.202]    </block>
[08:20:24.203]  </sequence>
[08:20:24.203]  
[08:22:51.388]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[08:22:51.388]  
[08:22:51.388]  <debugvars>
[08:22:51.388]    // Pre-defined
[08:22:51.388]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:22:51.390]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[08:22:51.390]    __dp=0x00000000
[08:22:51.391]    __ap=0x00000000
[08:22:51.391]    __traceout=0x00000000      (Trace Disabled)
[08:22:51.392]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:22:51.392]    __FlashAddr=0x00000000
[08:22:51.394]    __FlashLen=0x00000000
[08:22:51.394]    __FlashArg=0x00000000
[08:22:51.395]    __FlashOp=0x00000000
[08:22:51.395]    __Result=0x00000000
[08:22:51.396]  </debugvars>
[08:22:51.396]  
[08:22:51.397]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[08:22:51.397]    <block atomic="false" info="">
[08:22:51.397]      __var nReset      = 0x80;
[08:22:51.397]        // -> [nReset <= 0x00000080]
[08:22:51.397]      DAP_SWJ_Pins(0x00, nReset, 0);
[08:22:51.399]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:22:51.399]    </block>
[08:22:51.399]    <control if="" while="1" timeout="50000" info="">
[08:22:51.399]      // while "1"  (timeout="50000")
[08:22:51.400]      // while-condition  =>  TRUE
[08:22:51.400]      // while "1"  (timeout="50000")
[08:22:51.400]      // while-condition  =>  TRUE
[08:22:51.400]      // while "1"  (timeout="50000")
[08:22:51.401]      // while-condition  =>  TRUE
[08:22:51.401]      // while "1"  (timeout="50000")
[08:22:51.401]      // while-condition  =>  TRUE
[08:22:51.401]      // while "1"  (timeout="50000")
[08:22:51.402]      // while-condition  =>  TRUE
[08:22:51.402]      // while "1"  (timeout="50000")
[08:22:51.402]      // while-condition  =>  TRUE
[08:22:51.402]      // while "1"  (timeout="50000")
[08:22:51.402]      // while-condition  =>  TRUE
[08:22:51.403]      // while "1"  (timeout="50000")
[08:22:51.403]      // while-condition  =>  TRUE
[08:22:51.403]      // while "1"  (timeout="50000")
[08:22:51.403]      // while-condition  =>  TRUE
[08:22:51.403]      // while "1"  (timeout="50000")
[08:22:51.404]      // while-condition  =>  TRUE
[08:22:51.404]      // while "1"  (timeout="50000")
[08:22:51.404]      // while-condition  =>  TRUE
[08:22:51.404]      // while "1"  (timeout="50000")
[08:22:51.404]      // while-condition  =>  TRUE
[08:22:51.405]      // while "1"  (timeout="50000")
[08:22:51.405]      // while-condition  =>  TRUE
[08:22:51.405]      // while "1"  (timeout="50000")
[08:22:51.405]      // while-condition  =>  TRUE
[08:22:51.405]      // while "1"  (timeout="50000")
[08:22:51.405]      // while-condition  =>  TRUE
[08:22:51.406]      // while "1"  (timeout="50000")
[08:22:51.406]      // while-condition  =>  TRUE
[08:22:51.406]      // while "1"  (timeout="50000")
[08:22:51.406]      // while-condition  =>  TRUE
[08:22:51.406]      // while "1"  (timeout="50000")
[08:22:51.407]      // while-condition  =>  TRUE
[08:22:51.407]      // while "1"  (timeout="50000")
[08:22:51.407]      // while-condition  =>  TRUE
[08:22:51.407]      // while "1"  (timeout="50000")
[08:22:51.408]      // while-condition  =>  TRUE
[08:22:51.408]      // while "1"  (timeout="50000")
[08:22:51.408]      // while-condition  =>  TRUE
[08:22:51.408]      // while "1"  (timeout="50000")
[08:22:51.408]      // while-condition  =>  TRUE
[08:22:51.408]      // while "1"  (timeout="50000")
[08:22:51.409]      // while-condition  =>  TRUE
[08:22:51.409]      // while "1"  (timeout="50000")
[08:22:51.409]      // while-condition  =>  TRUE
[08:22:51.409]      // while "1"  (timeout="50000")
[08:22:51.409]      // while-condition  =>  TRUE
[08:22:51.409]      // while "1"  (timeout="50000")
[08:22:51.410]      // while-condition  =>  TRUE
[08:22:51.410]      // while "1"  (timeout="50000")
[08:22:51.410]      // while-condition  =>  TRUE
[08:22:51.410]      // while "1"  (timeout="50000")
[08:22:51.410]      // while-condition  =>  TRUE
[08:22:51.411]      // while "1"  (timeout="50000")
[08:22:51.411]      // while-condition  =>  TRUE
[08:22:51.411]      // while "1"  (timeout="50000")
[08:22:51.411]      // while-condition  =>  TRUE
[08:22:51.412]      // while "1"  (timeout="50000")
[08:22:51.412]      // while-condition  =>  TRUE
[08:22:51.412]      // while "1"  (timeout="50000")
[08:22:51.412]      // while-condition  =>  TRUE
[08:22:51.412]      // while "1"  (timeout="50000")
[08:22:51.412]      // while-condition  =>  TRUE
[08:22:51.413]      // while "1"  (timeout="50000")
[08:22:51.413]      // while-condition  =>  TRUE
[08:22:51.413]      // while "1"  (timeout="50000")
[08:22:51.413]      // while-condition  =>  TRUE
[08:22:51.413]      // while "1"  (timeout="50000")
[08:22:51.414]      // while-condition  =>  TRUE
[08:22:51.414]      // while "1"  (timeout="50000")
[08:22:51.414]      // while-condition  =>  TRUE
[08:22:51.414]      // while "1"  (timeout="50000")
[08:22:51.414]      // while-condition  =>  TRUE
[08:22:51.415]      // while "1"  (timeout="50000")
[08:22:51.415]      // while-condition  =>  TRUE
[08:22:51.415]      // while "1"  (timeout="50000")
[08:22:51.415]      // while-condition  =>  TRUE
[08:22:51.415]      // while "1"  (timeout="50000")
[08:22:51.416]      // while-condition  =>  TRUE
[08:22:51.417]      // while "1"  (timeout="50000")
[08:22:51.417]      // while-condition  =>  TRUE
[08:22:51.417]      // while "1"  (timeout="50000")
[08:22:51.417]      // while-condition  =>  TRUE
[08:22:51.417]      // while "1"  (timeout="50000")
[08:22:51.418]      // while-condition  =>  TRUE
[08:22:51.418]      // while "1"  (timeout="50000")
[08:22:51.418]      // while-condition  =>  TRUE
[08:22:51.418]      // while "1"  (timeout="50000")
[08:22:51.419]      // while-condition  =>  TRUE
[08:22:51.419]      // while "1"  (timeout="50000")
[08:22:51.419]      // while-condition  =>  TRUE
[08:22:51.419]      // while "1"  (timeout="50000")
[08:22:51.420]      // while-condition  =>  TRUE
[08:22:51.420]      // while "1"  (timeout="50000")
[08:22:51.420]      // while-condition  =>  TRUE
[08:22:51.420]      // while "1"  (timeout="50000")
[08:22:51.420]      // while-condition  =>  TRUE
[08:22:51.420]      // while "1"  (timeout="50000")
[08:22:51.421]      // while-condition  =>  TRUE
[08:22:51.421]      // while "1"  (timeout="50000")
[08:22:51.422]      // while-condition  =>  TRUE
[08:22:51.422]      // while "1"  (timeout="50000")
[08:22:51.422]      // while-condition  =>  TRUE
[08:22:51.422]      // while "1"  (timeout="50000")
[08:22:51.423]      // while-condition  =>  TRUE
[08:22:51.423]      // while "1"  (timeout="50000")
[08:22:51.423]      // while-condition  =>  TRUE
[08:22:51.423]      // while "1"  (timeout="50000")
[08:22:51.423]      // while-condition  =>  TRUE
[08:22:51.424]      // while "1"  (timeout="50000")
[08:22:51.424]      // while-condition  =>  TRUE
[08:22:51.424]      // while "1"  (timeout="50000")
[08:22:51.424]      // while-condition  =>  TRUE
[08:22:51.424]      // while "1"  (timeout="50000")
[08:22:51.425]      // while-condition  =>  TRUE
[08:22:51.425]      // while "1"  (timeout="50000")
[08:22:51.425]      // while-condition  =>  TRUE
[08:22:51.425]      // while "1"  (timeout="50000")
[08:22:51.425]      // while-condition  =>  TRUE
[08:22:51.426]      // while "1"  (timeout="50000")
[08:22:51.426]      // while-condition  =>  TRUE
[08:22:51.426]      // while "1"  (timeout="50000")
[08:22:51.426]      // while-condition  =>  TRUE
[08:22:51.426]      // while "1"  (timeout="50000")
[08:22:51.427]      // while-condition  =>  TRUE
[08:22:51.427]      // while "1"  (timeout="50000")
[08:22:51.427]      // while-condition  =>  TRUE
[08:22:51.427]      // while "1"  (timeout="50000")
[08:22:51.427]      // while-condition  =>  TRUE
[08:22:51.427]      // while "1"  (timeout="50000")
[08:22:51.428]      // while-condition  =>  TRUE
[08:22:51.428]      // while "1"  (timeout="50000")
[08:22:51.428]      // while-condition  =>  TRUE
[08:22:51.428]      // while "1"  (timeout="50000")
[08:22:51.428]      // while-condition  =>  TRUE
[08:22:51.429]      // while "1"  (timeout="50000")
[08:22:51.429]      // while-condition  =>  TRUE
[08:22:51.429]      // while "1"  (timeout="50000")
[08:22:51.429]      // while-condition  =>  TRUE
[08:22:51.429]      // while "1"  (timeout="50000")
[08:22:51.430]      // while-condition  =>  TRUE
[08:22:51.430]      // while "1"  (timeout="50000")
[08:22:51.430]      // while-condition  =>  TRUE
[08:22:51.430]      // while "1"  (timeout="50000")
[08:22:51.430]      // while-condition  =>  TRUE
[08:22:51.430]      // while "1"  (timeout="50000")
[08:22:51.431]      // while-condition  =>  TRUE
[08:22:51.431]      // while "1"  (timeout="50000")
[08:22:51.431]      // while-condition  =>  TRUE
[08:22:51.431]      // while "1"  (timeout="50000")
[08:22:51.431]      // while-condition  =>  TRUE
[08:22:51.432]      // while "1"  (timeout="50000")
[08:22:51.432]      // while-condition  =>  TRUE
[08:22:51.432]      // while "1"  (timeout="50000")
[08:22:51.432]      // while-condition  =>  TRUE
[08:22:51.433]      // while "1"  (timeout="50000")
[08:22:51.433]      // while-condition  =>  TRUE
[08:22:51.433]      // while "1"  (timeout="50000")
[08:22:51.433]      // while-condition  =>  TRUE
[08:22:51.433]      // while "1"  (timeout="50000")
[08:22:51.433]      // while-condition  =>  TRUE
[08:22:51.434]      // while "1"  (timeout="50000")
[08:22:51.434]      // while-condition  =>  TRUE
[08:22:51.434]      // while "1"  (timeout="50000")
[08:22:51.434]      // while-condition  =>  TRUE
[08:22:51.434]      // while "1"  (timeout="50000")
[08:22:51.434]      // while-condition  =>  TRUE
[08:22:51.434]      // while "1"  (timeout="50000")
[08:22:51.435]      // while-condition  =>  TRUE
[08:22:51.435]      // while "1"  (timeout="50000")
[08:22:51.435]      // while-condition  =>  TRUE
[08:22:51.435]      // while "1"  (timeout="50000")
[08:22:51.435]      // while-condition  =>  TRUE
[08:22:51.436]      // while "1"  (timeout="50000")
[08:22:51.436]      // while-condition  =>  TRUE
[08:22:51.436]      // while "1"  (timeout="50000")
[08:22:51.436]      // while-condition  =>  TRUE
[08:22:51.436]      // while "1"  (timeout="50000")
[08:22:51.437]      // while-condition  =>  TRUE
[08:22:51.437]      // while "1"  (timeout="50000")
[08:22:51.437]      // while-condition  =>  TRUE
[08:22:51.437]      // while "1"  (timeout="50000")
[08:22:51.437]      // while-condition  =>  TRUE
[08:22:51.438]      // while "1"  (timeout="50000")
[08:22:51.438]      // while-condition  =>  TRUE
[08:22:51.438]      // while "1"  (timeout="50000")
[08:22:51.439]      // while-condition  =>  TRUE
[08:22:51.439]      // while "1"  (timeout="50000")
[08:22:51.439]      // while-condition  =>  TRUE
[08:22:51.439]      // while "1"  (timeout="50000")
[08:22:51.439]      // while-condition  =>  TRUE
[08:22:51.439]      // while "1"  (timeout="50000")
[08:22:51.440]      // while-condition  =>  TRUE
[08:22:51.440]      // while "1"  (timeout="50000")
[08:22:51.440]      // while-condition  =>  TRUE
[08:22:51.440]      // while "1"  (timeout="50000")
[08:22:51.440]      // while-condition  =>  TRUE
[08:22:51.441]      // while "1"  (timeout="50000")
[08:22:51.441]      // while-condition  =>  TRUE
[08:22:51.441]      // while "1"  (timeout="50000")
[08:22:51.441]      // while-condition  =>  TRUE
[08:22:51.442]      // while "1"  (timeout="50000")
[08:22:51.442]      // while-condition  =>  TRUE
[08:22:51.442]      // while "1"  (timeout="50000")
[08:22:51.442]      // while-condition  =>  TRUE
[08:22:51.442]      // while "1"  (timeout="50000")
[08:22:51.442]      // while-condition  =>  TRUE
[08:22:51.443]      // while "1"  (timeout="50000")
[08:22:51.443]      // while-condition  =>  TRUE
[08:22:51.443]      // while "1"  (timeout="50000")
[08:22:51.443]      // while-condition  =>  TRUE
[08:22:51.443]      // while "1"  (timeout="50000")
[08:22:51.444]      // while-condition  =>  TRUE
[08:22:51.444]      // while "1"  (timeout="50000")
[08:22:51.444]      // while-condition  =>  TRUE
[08:22:51.444]      // while "1"  (timeout="50000")
[08:22:51.444]      // while-condition  =>  TRUE
[08:22:51.445]      // while "1"  (timeout="50000")
[08:22:51.445]      // while-condition  =>  TRUE
[08:22:51.445]      // while "1"  (timeout="50000")
[08:22:51.445]      // while-condition  =>  TRUE
[08:22:51.445]      // while "1"  (timeout="50000")
[08:22:51.446]      // while-condition  =>  TRUE
[08:22:51.446]      // while "1"  (timeout="50000")
[08:22:51.446]      // while-condition  =>  TRUE
[08:22:51.446]      // while "1"  (timeout="50000")
[08:22:51.446]      // while-condition  =>  TRUE
[08:22:51.446]      // while "1"  (timeout="50000")
[08:22:51.447]      // while-condition  =>  TRUE
[08:22:51.447]      // while "1"  (timeout="50000")
[08:22:51.447]      // while-condition  =>  TRUE
[08:22:51.447]      // while "1"  (timeout="50000")
[08:22:51.447]      // while-condition  =>  TRUE
[08:22:51.448]      // while "1"  (timeout="50000")
[08:22:51.448]      // while-condition  =>  TRUE
[08:22:51.448]      // while "1"  (timeout="50000")
[08:22:51.448]      // while-condition  =>  TRUE
[08:22:51.449]      // while "1"  (timeout="50000")
[08:22:51.449]      // while-condition  =>  TRUE
[08:22:51.449]      // while "1"  (timeout="50000")
[08:22:51.449]      // while-condition  =>  TRUE
[08:22:51.450]      // while "1"  (timeout="50000")
[08:22:51.450]      // while-condition  =>  TRUE
[08:22:51.450]      // while "1"  (timeout="50000")
[08:22:51.450]      // while-condition  =>  TRUE
[08:22:51.450]      // while "1"  (timeout="50000")
[08:22:51.451]      // while-condition  =>  TRUE
[08:22:51.451]      // while "1"  (timeout="50000")
[08:22:51.451]      // while-condition  =>  TRUE
[08:22:51.451]      // while "1"  (timeout="50000")
[08:22:51.452]      // while-condition  =>  TRUE
[08:22:51.452]      // while "1"  (timeout="50000")
[08:22:51.452]      // while-condition  =>  TRUE
[08:22:51.452]      // while "1"  (timeout="50000")
[08:22:51.452]      // while-condition  =>  TRUE
[08:22:51.452]      // while "1"  (timeout="50000")
[08:22:51.452]      // while-condition  =>  TRUE
[08:22:51.453]      // while "1"  (timeout="50000")
[08:22:51.453]      // while-condition  =>  TRUE
[08:22:51.453]      // while "1"  (timeout="50000")
[08:22:51.454]      // while-condition  =>  TRUE
[08:22:51.454]      // while "1"  (timeout="50000")
[08:22:51.454]      // while-condition  =>  TRUE
[08:22:51.454]      // while "1"  (timeout="50000")
[08:22:51.454]      // while-condition  =>  TRUE
[08:22:51.455]      // while "1"  (timeout="50000")
[08:22:51.455]      // while-condition  =>  TRUE
[08:22:51.455]      // while "1"  (timeout="50000")
[08:22:51.455]      // while-condition  =>  TRUE
[08:22:51.455]      // while "1"  (timeout="50000")
[08:22:51.456]      // while-condition  =>  TRUE
[08:22:51.456]      // while "1"  (timeout="50000")
[08:22:51.456]      // while-condition  =>  TRUE
[08:22:51.456]      // while "1"  (timeout="50000")
[08:22:51.456]      // while-condition  =>  TRUE
[08:22:51.457]      // while "1"  (timeout="50000")
[08:22:51.457]      // while-condition  =>  TRUE
[08:22:51.457]      // while "1"  (timeout="50000")
[08:22:51.457]      // while-condition  =>  TRUE
[08:22:51.457]      // while "1"  (timeout="50000")
[08:22:51.458]      // while-condition  =>  TRUE
[08:22:51.458]      // while "1"  (timeout="50000")
[08:22:51.458]      // while-condition  =>  TRUE
[08:22:51.458]      // while "1"  (timeout="50000")
[08:22:51.458]      // while-condition  =>  TRUE
[08:22:51.458]      // while "1"  (timeout="50000")
[08:22:51.459]      // while-condition  =>  TRUE
[08:22:51.459]      // while "1"  (timeout="50000")
[08:22:51.459]      // while  =>  TIMEOUT
[08:22:51.459]      // end while "1"
[08:22:51.460]    </control>
[08:22:51.460]    <block atomic="false" info="">
[08:22:51.460]      DAP_SWJ_Pins(nReset, nReset, 0);
[08:22:51.471]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:22:51.472]    </block>
[08:22:51.472]    <control if="" while="1" timeout="10000" info="">
[08:22:51.472]      // while "1"  (timeout="10000")
[08:22:51.473]      // while-condition  =>  TRUE
[08:22:51.473]      // while "1"  (timeout="10000")
[08:22:51.474]      // while-condition  =>  TRUE
[08:22:51.474]      // while "1"  (timeout="10000")
[08:22:51.474]      // while-condition  =>  TRUE
[08:22:51.475]      // while "1"  (timeout="10000")
[08:22:51.475]      // while  =>  TIMEOUT
[08:22:51.476]      // end while "1"
[08:22:51.476]    </control>
[08:22:51.476]    <block atomic="true" info="">
[08:22:51.477]      // ATOMIC SEQUENCE - EXECUTE
[08:22:51.478]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[08:22:51.478]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[08:22:51.478]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[08:22:51.479]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[08:22:51.479]      // ATOMIC SEQUENCE - DONE
[08:22:51.479]    </block>
[08:22:51.480]    <block atomic="false" info="">
[08:22:51.480]      __errorcontrol = 0x00000001;
[08:22:51.480]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[08:22:51.481]      ReadDP(0x0);
[08:22:51.484]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[08:22:51.484]      __errorcontrol = 0x00000000;
[08:22:51.484]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[08:22:51.485]    </block>
[08:22:51.485]  </sequence>
[08:22:51.485]  
[08:22:51.486]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[08:22:51.486]  
[08:22:51.486]  <debugvars>
[08:22:51.486]    // Pre-defined
[08:22:51.486]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:22:51.488]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:22:51.488]    __dp=0x00000000
[08:22:51.488]    __ap=0x00000000
[08:22:51.488]    __traceout=0x00000000      (Trace Disabled)
[08:22:51.488]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:22:51.488]    __FlashAddr=0x00000000
[08:22:51.488]    __FlashLen=0x00000000
[08:22:51.489]    __FlashArg=0x00000000
[08:22:51.489]    __FlashOp=0x00000000
[08:22:51.489]    __Result=0x00000000
[08:22:51.489]  </debugvars>
[08:22:51.491]  
[08:22:51.491]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[08:22:51.491]  </sequence>
[08:22:51.492]  
[08:22:51.494]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[08:22:51.494]  
[08:22:51.494]  <debugvars>
[08:22:51.494]    // Pre-defined
[08:22:51.495]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:22:51.495]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:22:51.495]    __dp=0x00000000
[08:22:51.496]    __ap=0x00000000
[08:22:51.496]    __traceout=0x00000000      (Trace Disabled)
[08:22:51.496]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:22:51.496]    __FlashAddr=0x00000000
[08:22:51.497]    __FlashLen=0x00000000
[08:22:51.497]    __FlashArg=0x00000000
[08:22:51.497]    __FlashOp=0x00000000
[08:22:51.497]    __Result=0x00000000
[08:22:51.498]  </debugvars>
[08:22:51.498]  
[08:22:51.498]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[08:22:51.498]    <block atomic="false" info="">
[08:22:51.498]      __var SW_DP_ABORT  = 0x0;
[08:22:51.498]        // -> [SW_DP_ABORT <= 0x00000000]
[08:22:51.498]      __var DP_CTRL_STAT = 0x4;
[08:22:51.499]        // -> [DP_CTRL_STAT <= 0x00000004]
[08:22:51.499]      __var DP_SELECT    = 0x8;
[08:22:51.499]        // -> [DP_SELECT <= 0x00000008]
[08:22:51.499]      __var powered_down = 0;
[08:22:51.501]        // -> [powered_down <= 0x00000000]
[08:22:51.501]      WriteDP(DP_SELECT, 0x00000000);
[08:22:51.503]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:22:51.503]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[08:22:51.504]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[08:22:51.505]        // -> [powered_down <= 0x00000001]
[08:22:51.505]    </block>
[08:22:51.505]    <control if="powered_down" while="" timeout="0" info="">
[08:22:51.506]      // if-block "powered_down"
[08:22:51.506]        // =>  TRUE
[08:22:51.506]      <block atomic="false" info="">
[08:22:51.507]        WriteDP(DP_CTRL_STAT, 0x50000000);
[08:22:51.508]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[08:22:51.509]      </block>
[08:22:51.509]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[08:22:51.510]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[08:22:51.512]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[08:22:51.512]        // while-condition  =>  FALSE
[08:22:51.512]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[08:22:51.513]      </control>
[08:22:51.513]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[08:22:51.513]        // if-block "(__protocol & 0xFFFF) == 1"
[08:22:51.514]          // =>  FALSE
[08:22:51.514]        // skip if-block "(__protocol & 0xFFFF) == 1"
[08:22:51.514]      </control>
[08:22:51.515]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[08:22:51.515]        // if-block "(__protocol & 0xFFFF) == 2"
[08:22:51.515]          // =>  TRUE
[08:22:51.515]        <block atomic="false" info="">
[08:22:51.516]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[08:22:51.517]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[08:22:51.517]          WriteDP(SW_DP_ABORT, 0x0000001E);
[08:22:51.519]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[08:22:51.519]        </block>
[08:22:51.519]        // end if-block "(__protocol & 0xFFFF) == 2"
[08:22:51.520]      </control>
[08:22:51.520]      // end if-block "powered_down"
[08:22:51.520]    </control>
[08:22:51.521]  </sequence>
[08:22:51.522]  
[08:22:51.582]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[08:22:51.582]  
[08:22:51.582]  <debugvars>
[08:22:51.583]    // Pre-defined
[08:22:51.583]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:22:51.584]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:22:51.585]    __dp=0x00000000
[08:22:51.585]    __ap=0x00000000
[08:22:51.585]    __traceout=0x00000000      (Trace Disabled)
[08:22:51.586]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:22:51.586]    __FlashAddr=0x00000000
[08:22:51.587]    __FlashLen=0x00000000
[08:22:51.588]    __FlashArg=0x00000000
[08:22:51.588]    __FlashOp=0x00000000
[08:22:51.588]    __Result=0x00000000
[08:22:51.589]  </debugvars>
[08:22:51.590]  
[08:22:51.590]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[08:22:51.590]    <block atomic="true" info="">
[08:22:51.590]      // ATOMIC SEQUENCE - EXECUTE
[08:22:51.592]      __var DP_R_IDCODE    = 0x0;
[08:22:51.593]        // -> [DP_R_IDCODE <= 0x00000000]
[08:22:51.593]      __var DP_W_ABORT    = 0x0;
[08:22:51.594]        // -> [DP_W_ABORT <= 0x00000000]
[08:22:51.594]      __var DP_CTRLSTAT = 0x4;
[08:22:51.594]        // -> [DP_CTRLSTAT <= 0x00000004]
[08:22:51.594]      __var DP_W_SELECT    = 0x8;
[08:22:51.594]        // -> [DP_W_SELECT <= 0x00000008]
[08:22:51.594]      __var AP_TAR		= 0x4;
[08:22:51.596]        // -> [AP_TAR <= 0x00000004]
[08:22:51.596]      __var AP_BD0		= 0x0;
[08:22:51.596]        // -> [AP_BD0 <= 0x00000000]
[08:22:51.596]      __var AP_BD1		= 0x4;
[08:22:51.596]        // -> [AP_BD1 <= 0x00000004]
[08:22:51.596]      __var AP_BD2		= 0x8;
[08:22:51.596]        // -> [AP_BD2 <= 0x00000008]
[08:22:51.598]      __var PCWithinFlash = 0;
[08:22:51.598]        // -> [PCWithinFlash <= 0x00000000]
[08:22:51.598]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[08:22:51.598]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[08:22:51.598]      // ATOMIC SEQUENCE - DONE
[08:22:51.599]    </block>
[08:22:51.599]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[08:22:51.599]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[08:22:51.603]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[08:22:51.603]      // while-condition  =>  FALSE
[08:22:51.603]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[08:22:51.603]    </control>
[08:22:51.604]    <block atomic="true" info="">
[08:22:51.604]      // ATOMIC SEQUENCE - EXECUTE
[08:22:51.607]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:22:51.607]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:22:51.608]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[08:22:51.609]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[08:22:51.609]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[08:22:51.610]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[08:22:51.610]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[08:22:51.611]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[08:22:51.611]      // ATOMIC SEQUENCE - DONE
[08:22:51.611]    </block>
[08:22:51.611]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[08:22:51.612]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:22:51.614]        // -> [ReadAP(0x00000000) => 0x01030003]   (__dp=0x00000000, __ap=0x00000000)
[08:22:51.614]      // while-condition  =>  FALSE
[08:22:51.614]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[08:22:51.615]    </control>
[08:22:51.615]    <block atomic="false" info="">
[08:22:51.615]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[08:22:51.617]        // -> [ReadAP(0x00000008) => 0x10000820]   (__dp=0x00000000, __ap=0x00000000)
[08:22:51.617]        // -> [PCWithinFlash <= 0x00000001]
[08:22:51.617]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:22:51.618]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:22:51.618]    </block>
[08:22:51.618]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[08:22:51.619]      // if-block "PCWithinFlash == 0"
[08:22:51.619]        // =>  FALSE
[08:22:51.619]      // skip if-block "PCWithinFlash == 0"
[08:22:51.620]    </control>
[08:22:51.620]  </sequence>
[08:22:51.620]  
[08:22:51.646]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[08:22:51.646]  
[08:22:51.646]  <debugvars>
[08:22:51.647]    // Pre-defined
[08:22:51.647]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:22:51.647]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:22:51.648]    __dp=0x00000000
[08:22:51.648]    __ap=0x00000000
[08:22:51.648]    __traceout=0x00000000      (Trace Disabled)
[08:22:51.649]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:22:51.649]    __FlashAddr=0x00000000
[08:22:51.649]    __FlashLen=0x00000000
[08:22:51.649]    __FlashArg=0x00000000
[08:22:51.650]    __FlashOp=0x00000000
[08:22:51.650]    __Result=0x00000000
[08:22:51.650]  </debugvars>
[08:22:51.651]  
[08:22:51.651]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[08:22:51.651]    <block atomic="false" info="">
[08:22:51.651]    </block>
[08:22:51.651]  </sequence>
[08:22:51.651]  
[08:22:51.653]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[08:22:51.653]  
[08:22:51.654]  <debugvars>
[08:22:51.654]    // Pre-defined
[08:22:51.654]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:22:51.654]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:22:51.655]    __dp=0x00000000
[08:22:51.655]    __ap=0x00000000
[08:22:51.655]    __traceout=0x00000000      (Trace Disabled)
[08:22:51.655]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:22:51.656]    __FlashAddr=0x00000000
[08:22:51.656]    __FlashLen=0x00000000
[08:22:51.656]    __FlashArg=0x00000000
[08:22:51.656]    __FlashOp=0x00000000
[08:22:51.657]    __Result=0x00000000
[08:22:51.657]  </debugvars>
[08:22:51.657]  
[08:22:51.657]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[08:22:51.658]    <block atomic="false" info="">
[08:22:51.658]      __var nReset      = 0x80;
[08:22:51.658]        // -> [nReset <= 0x00000080]
[08:22:51.658]      DAP_SWJ_Pins(0x00, nReset, 0);
[08:22:51.659]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:22:51.660]    </block>
[08:22:51.660]    <control if="" while="1" timeout="50000" info="">
[08:22:51.660]      // while "1"  (timeout="50000")
[08:22:51.660]      // while-condition  =>  TRUE
[08:22:51.661]      // while "1"  (timeout="50000")
[08:22:51.661]      // while-condition  =>  TRUE
[08:22:51.661]      // while "1"  (timeout="50000")
[08:22:51.661]      // while-condition  =>  TRUE
[08:22:51.661]      // while "1"  (timeout="50000")
[08:22:51.661]      // while-condition  =>  TRUE
[08:22:51.662]      // while "1"  (timeout="50000")
[08:22:51.662]      // while-condition  =>  TRUE
[08:22:51.662]      // while "1"  (timeout="50000")
[08:22:51.662]      // while-condition  =>  TRUE
[08:22:51.662]      // while "1"  (timeout="50000")
[08:22:51.662]      // while-condition  =>  TRUE
[08:22:51.662]      // while "1"  (timeout="50000")
[08:22:51.662]      // while-condition  =>  TRUE
[08:22:51.662]      // while "1"  (timeout="50000")
[08:22:51.663]      // while-condition  =>  TRUE
[08:22:51.663]      // while "1"  (timeout="50000")
[08:22:51.663]      // while-condition  =>  TRUE
[08:22:51.663]      // while "1"  (timeout="50000")
[08:22:51.663]      // while-condition  =>  TRUE
[08:22:51.663]      // while "1"  (timeout="50000")
[08:22:51.664]      // while-condition  =>  TRUE
[08:22:51.664]      // while "1"  (timeout="50000")
[08:22:51.664]      // while-condition  =>  TRUE
[08:22:51.664]      // while "1"  (timeout="50000")
[08:22:51.665]      // while-condition  =>  TRUE
[08:22:51.665]      // while "1"  (timeout="50000")
[08:22:51.665]      // while-condition  =>  TRUE
[08:22:51.665]      // while "1"  (timeout="50000")
[08:22:51.665]      // while-condition  =>  TRUE
[08:22:51.666]      // while "1"  (timeout="50000")
[08:22:51.666]      // while-condition  =>  TRUE
[08:22:51.666]      // while "1"  (timeout="50000")
[08:22:51.666]      // while-condition  =>  TRUE
[08:22:51.667]      // while "1"  (timeout="50000")
[08:22:51.667]      // while-condition  =>  TRUE
[08:22:51.667]      // while "1"  (timeout="50000")
[08:22:51.667]      // while-condition  =>  TRUE
[08:22:51.667]      // while "1"  (timeout="50000")
[08:22:51.668]      // while-condition  =>  TRUE
[08:22:51.668]      // while "1"  (timeout="50000")
[08:22:51.668]      // while-condition  =>  TRUE
[08:22:51.668]      // while "1"  (timeout="50000")
[08:22:51.668]      // while-condition  =>  TRUE
[08:22:51.669]      // while "1"  (timeout="50000")
[08:22:51.670]      // while-condition  =>  TRUE
[08:22:51.670]      // while "1"  (timeout="50000")
[08:22:51.670]      // while-condition  =>  TRUE
[08:22:51.670]      // while "1"  (timeout="50000")
[08:22:51.670]      // while-condition  =>  TRUE
[08:22:51.671]      // while "1"  (timeout="50000")
[08:22:51.671]      // while-condition  =>  TRUE
[08:22:51.671]      // while "1"  (timeout="50000")
[08:22:51.671]      // while-condition  =>  TRUE
[08:22:51.671]      // while "1"  (timeout="50000")
[08:22:51.672]      // while-condition  =>  TRUE
[08:22:51.672]      // while "1"  (timeout="50000")
[08:22:51.672]      // while-condition  =>  TRUE
[08:22:51.672]      // while "1"  (timeout="50000")
[08:22:51.672]      // while-condition  =>  TRUE
[08:22:51.672]      // while "1"  (timeout="50000")
[08:22:51.672]      // while-condition  =>  TRUE
[08:22:51.672]      // while "1"  (timeout="50000")
[08:22:51.672]      // while-condition  =>  TRUE
[08:22:51.673]      // while "1"  (timeout="50000")
[08:22:51.673]      // while-condition  =>  TRUE
[08:22:51.673]      // while "1"  (timeout="50000")
[08:22:51.673]      // while-condition  =>  TRUE
[08:22:51.673]      // while "1"  (timeout="50000")
[08:22:51.674]      // while-condition  =>  TRUE
[08:22:51.674]      // while "1"  (timeout="50000")
[08:22:51.675]      // while-condition  =>  TRUE
[08:22:51.675]      // while "1"  (timeout="50000")
[08:22:51.675]      // while-condition  =>  TRUE
[08:22:51.676]      // while "1"  (timeout="50000")
[08:22:51.676]      // while-condition  =>  TRUE
[08:22:51.676]      // while "1"  (timeout="50000")
[08:22:51.676]      // while-condition  =>  TRUE
[08:22:51.677]      // while "1"  (timeout="50000")
[08:22:51.677]      // while-condition  =>  TRUE
[08:22:51.677]      // while "1"  (timeout="50000")
[08:22:51.678]      // while-condition  =>  TRUE
[08:22:51.678]      // while "1"  (timeout="50000")
[08:22:51.678]      // while-condition  =>  TRUE
[08:22:51.678]      // while "1"  (timeout="50000")
[08:22:51.679]      // while-condition  =>  TRUE
[08:22:51.679]      // while "1"  (timeout="50000")
[08:22:51.680]      // while-condition  =>  TRUE
[08:22:51.680]      // while "1"  (timeout="50000")
[08:22:51.680]      // while-condition  =>  TRUE
[08:22:51.681]      // while "1"  (timeout="50000")
[08:22:51.681]      // while-condition  =>  TRUE
[08:22:51.681]      // while "1"  (timeout="50000")
[08:22:51.681]      // while-condition  =>  TRUE
[08:22:51.682]      // while "1"  (timeout="50000")
[08:22:51.682]      // while-condition  =>  TRUE
[08:22:51.682]      // while "1"  (timeout="50000")
[08:22:51.682]      // while-condition  =>  TRUE
[08:22:51.682]      // while "1"  (timeout="50000")
[08:22:51.683]      // while-condition  =>  TRUE
[08:22:51.683]      // while "1"  (timeout="50000")
[08:22:51.683]      // while-condition  =>  TRUE
[08:22:51.683]      // while "1"  (timeout="50000")
[08:22:51.684]      // while-condition  =>  TRUE
[08:22:51.684]      // while "1"  (timeout="50000")
[08:22:51.684]      // while-condition  =>  TRUE
[08:22:51.684]      // while "1"  (timeout="50000")
[08:22:51.684]      // while-condition  =>  TRUE
[08:22:51.685]      // while "1"  (timeout="50000")
[08:22:51.685]      // while-condition  =>  TRUE
[08:22:51.685]      // while "1"  (timeout="50000")
[08:22:51.685]      // while-condition  =>  TRUE
[08:22:51.685]      // while "1"  (timeout="50000")
[08:22:51.685]      // while-condition  =>  TRUE
[08:22:51.685]      // while "1"  (timeout="50000")
[08:22:51.685]      // while-condition  =>  TRUE
[08:22:51.685]      // while "1"  (timeout="50000")
[08:22:51.686]      // while-condition  =>  TRUE
[08:22:51.686]      // while "1"  (timeout="50000")
[08:22:51.686]      // while-condition  =>  TRUE
[08:22:51.686]      // while "1"  (timeout="50000")
[08:22:51.686]      // while-condition  =>  TRUE
[08:22:51.687]      // while "1"  (timeout="50000")
[08:22:51.688]      // while-condition  =>  TRUE
[08:22:51.688]      // while "1"  (timeout="50000")
[08:22:51.688]      // while-condition  =>  TRUE
[08:22:51.688]      // while "1"  (timeout="50000")
[08:22:51.689]      // while-condition  =>  TRUE
[08:22:51.689]      // while "1"  (timeout="50000")
[08:22:51.689]      // while-condition  =>  TRUE
[08:22:51.689]      // while "1"  (timeout="50000")
[08:22:51.689]      // while-condition  =>  TRUE
[08:22:51.690]      // while "1"  (timeout="50000")
[08:22:51.690]      // while-condition  =>  TRUE
[08:22:51.690]      // while "1"  (timeout="50000")
[08:22:51.690]      // while-condition  =>  TRUE
[08:22:51.690]      // while "1"  (timeout="50000")
[08:22:51.691]      // while-condition  =>  TRUE
[08:22:51.691]      // while "1"  (timeout="50000")
[08:22:51.691]      // while-condition  =>  TRUE
[08:22:51.691]      // while "1"  (timeout="50000")
[08:22:51.691]      // while-condition  =>  TRUE
[08:22:51.692]      // while "1"  (timeout="50000")
[08:22:51.692]      // while-condition  =>  TRUE
[08:22:51.692]      // while "1"  (timeout="50000")
[08:22:51.692]      // while-condition  =>  TRUE
[08:22:51.692]      // while "1"  (timeout="50000")
[08:22:51.693]      // while-condition  =>  TRUE
[08:22:51.693]      // while "1"  (timeout="50000")
[08:22:51.693]      // while-condition  =>  TRUE
[08:22:51.693]      // while "1"  (timeout="50000")
[08:22:51.693]      // while-condition  =>  TRUE
[08:22:51.694]      // while "1"  (timeout="50000")
[08:22:51.694]      // while-condition  =>  TRUE
[08:22:51.694]      // while "1"  (timeout="50000")
[08:22:51.694]      // while-condition  =>  TRUE
[08:22:51.695]      // while "1"  (timeout="50000")
[08:22:51.695]      // while-condition  =>  TRUE
[08:22:51.695]      // while "1"  (timeout="50000")
[08:22:51.695]      // while-condition  =>  TRUE
[08:22:51.695]      // while "1"  (timeout="50000")
[08:22:51.695]      // while-condition  =>  TRUE
[08:22:51.695]      // while "1"  (timeout="50000")
[08:22:51.695]      // while-condition  =>  TRUE
[08:22:51.695]      // while "1"  (timeout="50000")
[08:22:51.696]      // while-condition  =>  TRUE
[08:22:51.696]      // while "1"  (timeout="50000")
[08:22:51.696]      // while-condition  =>  TRUE
[08:22:51.696]      // while "1"  (timeout="50000")
[08:22:51.697]      // while-condition  =>  TRUE
[08:22:51.697]      // while "1"  (timeout="50000")
[08:22:51.697]      // while-condition  =>  TRUE
[08:22:51.697]      // while "1"  (timeout="50000")
[08:22:51.697]      // while-condition  =>  TRUE
[08:22:51.698]      // while "1"  (timeout="50000")
[08:22:51.699]      // while-condition  =>  TRUE
[08:22:51.699]      // while "1"  (timeout="50000")
[08:22:51.699]      // while-condition  =>  TRUE
[08:22:51.699]      // while "1"  (timeout="50000")
[08:22:51.699]      // while-condition  =>  TRUE
[08:22:51.700]      // while "1"  (timeout="50000")
[08:22:51.700]      // while-condition  =>  TRUE
[08:22:51.700]      // while "1"  (timeout="50000")
[08:22:51.700]      // while-condition  =>  TRUE
[08:22:51.700]      // while "1"  (timeout="50000")
[08:22:51.701]      // while-condition  =>  TRUE
[08:22:51.701]      // while "1"  (timeout="50000")
[08:22:51.701]      // while-condition  =>  TRUE
[08:22:51.701]      // while "1"  (timeout="50000")
[08:22:51.701]      // while-condition  =>  TRUE
[08:22:51.701]      // while "1"  (timeout="50000")
[08:22:51.701]      // while-condition  =>  TRUE
[08:22:51.702]      // while "1"  (timeout="50000")
[08:22:51.702]      // while-condition  =>  TRUE
[08:22:51.702]      // while "1"  (timeout="50000")
[08:22:51.702]      // while-condition  =>  TRUE
[08:22:51.702]      // while "1"  (timeout="50000")
[08:22:51.703]      // while-condition  =>  TRUE
[08:22:51.703]      // while "1"  (timeout="50000")
[08:22:51.703]      // while-condition  =>  TRUE
[08:22:51.703]      // while "1"  (timeout="50000")
[08:22:51.704]      // while-condition  =>  TRUE
[08:22:51.704]      // while "1"  (timeout="50000")
[08:22:51.704]      // while-condition  =>  TRUE
[08:22:51.704]      // while "1"  (timeout="50000")
[08:22:51.705]      // while-condition  =>  TRUE
[08:22:51.705]      // while "1"  (timeout="50000")
[08:22:51.705]      // while-condition  =>  TRUE
[08:22:51.705]      // while "1"  (timeout="50000")
[08:22:51.706]      // while-condition  =>  TRUE
[08:22:51.706]      // while "1"  (timeout="50000")
[08:22:51.706]      // while-condition  =>  TRUE
[08:22:51.706]      // while "1"  (timeout="50000")
[08:22:51.707]      // while-condition  =>  TRUE
[08:22:51.707]      // while "1"  (timeout="50000")
[08:22:51.707]      // while-condition  =>  TRUE
[08:22:51.707]      // while "1"  (timeout="50000")
[08:22:51.707]      // while-condition  =>  TRUE
[08:22:51.708]      // while "1"  (timeout="50000")
[08:22:51.708]      // while  =>  TIMEOUT
[08:22:51.708]      // end while "1"
[08:22:51.709]    </control>
[08:22:51.709]    <block atomic="false" info="">
[08:22:51.709]      DAP_SWJ_Pins(nReset, nReset, 0);
[08:22:51.721]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:22:51.722]    </block>
[08:22:51.722]    <control if="" while="1" timeout="10000" info="">
[08:22:51.723]      // while "1"  (timeout="10000")
[08:22:51.723]      // while-condition  =>  TRUE
[08:22:51.724]      // while "1"  (timeout="10000")
[08:22:51.724]      // while  =>  TIMEOUT
[08:22:51.725]      // end while "1"
[08:22:51.725]    </control>
[08:22:51.726]    <block atomic="true" info="">
[08:22:51.727]      // ATOMIC SEQUENCE - EXECUTE
[08:22:51.729]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[08:22:51.729]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[08:22:51.730]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[08:22:51.730]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[08:22:51.730]      // ATOMIC SEQUENCE - DONE
[08:22:51.731]    </block>
[08:22:51.731]    <block atomic="false" info="">
[08:22:51.731]      __errorcontrol = 0x00000001;
[08:22:51.732]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[08:22:51.732]      ReadDP(0x0);
[08:22:51.733]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[08:22:51.734]      __errorcontrol = 0x00000000;
[08:22:51.734]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[08:22:51.734]    </block>
[08:22:51.735]  </sequence>
[08:22:51.735]  
[08:22:51.739]  **********  Sequence "DebugPortStart"  (Context="Reset", Pname="", info="")
[08:22:51.739]  
[08:22:51.739]  <debugvars>
[08:22:51.739]    // Pre-defined
[08:22:51.740]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:22:51.740]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:22:51.740]    __dp=0x00000000
[08:22:51.741]    __ap=0x00000000
[08:22:51.741]    __traceout=0x00000000      (Trace Disabled)
[08:22:51.741]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:22:51.742]    __FlashAddr=0x00000000
[08:22:51.742]    __FlashLen=0x00000000
[08:22:51.742]    __FlashArg=0x00000000
[08:22:51.743]    __FlashOp=0x00000000
[08:22:51.743]    __Result=0x00000000
[08:22:51.743]  </debugvars>
[08:22:51.744]  
[08:22:51.744]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[08:22:51.744]    <block atomic="false" info="">
[08:22:51.745]      __var SW_DP_ABORT  = 0x0;
[08:22:51.745]        // -> [SW_DP_ABORT <= 0x00000000]
[08:22:51.745]      __var DP_CTRL_STAT = 0x4;
[08:22:51.745]        // -> [DP_CTRL_STAT <= 0x00000004]
[08:22:51.746]      __var DP_SELECT    = 0x8;
[08:22:51.746]        // -> [DP_SELECT <= 0x00000008]
[08:22:51.747]      __var powered_down = 0;
[08:22:51.747]        // -> [powered_down <= 0x00000000]
[08:22:51.748]      WriteDP(DP_SELECT, 0x00000000);
[08:22:51.748]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:22:51.749]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[08:22:51.750]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[08:22:51.750]        // -> [powered_down <= 0x00000001]
[08:22:51.750]    </block>
[08:22:51.751]    <control if="powered_down" while="" timeout="0" info="">
[08:22:51.751]      // if-block "powered_down"
[08:22:51.751]        // =>  TRUE
[08:22:51.751]      <block atomic="false" info="">
[08:22:51.752]        WriteDP(DP_CTRL_STAT, 0x50000000);
[08:22:51.753]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[08:22:51.754]      </block>
[08:22:51.754]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[08:22:51.754]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[08:22:51.755]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[08:22:51.755]        // while-condition  =>  FALSE
[08:22:51.755]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[08:22:51.755]      </control>
[08:22:51.756]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[08:22:51.756]        // if-block "(__protocol & 0xFFFF) == 1"
[08:22:51.756]          // =>  FALSE
[08:22:51.756]        // skip if-block "(__protocol & 0xFFFF) == 1"
[08:22:51.757]      </control>
[08:22:51.757]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[08:22:51.757]        // if-block "(__protocol & 0xFFFF) == 2"
[08:22:51.757]          // =>  TRUE
[08:22:51.758]        <block atomic="false" info="">
[08:22:51.758]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[08:22:51.760]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[08:22:51.760]          WriteDP(SW_DP_ABORT, 0x0000001E);
[08:22:51.762]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[08:22:51.763]        </block>
[08:22:51.763]        // end if-block "(__protocol & 0xFFFF) == 2"
[08:22:51.763]      </control>
[08:22:51.763]      // end if-block "powered_down"
[08:22:51.763]    </control>
[08:22:51.763]  </sequence>
[08:22:51.763]  
[08:22:51.769]  **********  Sequence "DebugCoreStart"  (Context="Reset", Pname="", info="")
[08:22:51.769]  
[08:22:51.770]  <debugvars>
[08:22:51.770]    // Pre-defined
[08:22:51.770]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:22:51.770]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:22:51.770]    __dp=0x00000000
[08:22:51.770]    __ap=0x00000000
[08:22:51.771]    __traceout=0x00000000      (Trace Disabled)
[08:22:51.771]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:22:51.771]    __FlashAddr=0x00000000
[08:22:51.772]    __FlashLen=0x00000000
[08:22:51.772]    __FlashArg=0x00000000
[08:22:51.772]    __FlashOp=0x00000000
[08:22:51.772]    __Result=0x00000000
[08:22:51.773]  </debugvars>
[08:22:51.774]  
[08:22:51.774]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[08:22:51.774]    <block atomic="true" info="">
[08:22:51.774]      // ATOMIC SEQUENCE - EXECUTE
[08:22:51.776]      __var DP_R_IDCODE    = 0x0;
[08:22:51.777]        // -> [DP_R_IDCODE <= 0x00000000]
[08:22:51.777]      __var DP_W_ABORT    = 0x0;
[08:22:51.777]        // -> [DP_W_ABORT <= 0x00000000]
[08:22:51.777]      __var DP_CTRLSTAT = 0x4;
[08:22:51.777]        // -> [DP_CTRLSTAT <= 0x00000004]
[08:22:51.778]      __var DP_W_SELECT    = 0x8;
[08:22:51.778]        // -> [DP_W_SELECT <= 0x00000008]
[08:22:51.778]      __var AP_TAR		= 0x4;
[08:22:51.778]        // -> [AP_TAR <= 0x00000004]
[08:22:51.779]      __var AP_BD0		= 0x0;
[08:22:51.779]        // -> [AP_BD0 <= 0x00000000]
[08:22:51.779]      __var AP_BD1		= 0x4;
[08:22:51.779]        // -> [AP_BD1 <= 0x00000004]
[08:22:51.779]      __var AP_BD2		= 0x8;
[08:22:51.779]        // -> [AP_BD2 <= 0x00000008]
[08:22:51.780]      __var PCWithinFlash = 0;
[08:22:51.780]        // -> [PCWithinFlash <= 0x00000000]
[08:22:51.780]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[08:22:51.780]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[08:22:51.780]      // ATOMIC SEQUENCE - DONE
[08:22:51.781]    </block>
[08:22:51.781]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[08:22:51.781]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[08:22:51.785]        // -> [Read32(0xE000EDF0) => 0x01030003]   (__dp=0x00000000, __ap=0x00000000)
[08:22:51.785]      // while-condition  =>  FALSE
[08:22:51.785]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[08:22:51.785]    </control>
[08:22:51.785]    <block atomic="true" info="">
[08:22:51.785]      // ATOMIC SEQUENCE - EXECUTE
[08:22:51.787]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:22:51.787]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:22:51.787]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[08:22:51.788]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[08:22:51.788]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[08:22:51.788]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[08:22:51.788]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[08:22:51.789]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[08:22:51.789]      // ATOMIC SEQUENCE - DONE
[08:22:51.789]    </block>
[08:22:51.789]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[08:22:51.789]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:22:51.791]        // -> [ReadAP(0x00000000) => 0x01030003]   (__dp=0x00000000, __ap=0x00000000)
[08:22:51.791]      // while-condition  =>  FALSE
[08:22:51.791]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[08:22:51.792]    </control>
[08:22:51.792]    <block atomic="false" info="">
[08:22:51.792]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[08:22:51.794]        // -> [ReadAP(0x00000008) => 0x10000820]   (__dp=0x00000000, __ap=0x00000000)
[08:22:51.794]        // -> [PCWithinFlash <= 0x00000001]
[08:22:51.794]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:22:51.796]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:22:51.796]    </block>
[08:22:51.796]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[08:22:51.797]      // if-block "PCWithinFlash == 0"
[08:22:51.797]        // =>  FALSE
[08:22:51.797]      // skip if-block "PCWithinFlash == 0"
[08:22:51.798]    </control>
[08:22:51.799]  </sequence>
[08:22:51.799]  
[08:22:51.823]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[08:22:51.823]  
[08:22:51.835]  <debugvars>
[08:22:51.836]    // Pre-defined
[08:22:51.836]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:22:51.837]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:22:51.837]    __dp=0x00000000
[08:22:51.838]    __ap=0x00000000
[08:22:51.839]    __traceout=0x00000000      (Trace Disabled)
[08:22:51.839]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:22:51.840]    __FlashAddr=0x00000000
[08:22:51.841]    __FlashLen=0x00000000
[08:22:51.841]    __FlashArg=0x00000000
[08:22:51.841]    __FlashOp=0x00000000
[08:22:51.842]    __Result=0x00000000
[08:22:51.842]  </debugvars>
[08:22:51.843]  
[08:22:51.844]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[08:22:51.844]    <block atomic="false" info="">
[08:22:51.845]    </block>
[08:22:51.845]  </sequence>
[08:22:51.845]  
[08:22:52.035]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[08:22:52.035]  
[08:22:52.036]  <debugvars>
[08:22:52.036]    // Pre-defined
[08:22:52.037]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:22:52.037]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:22:52.038]    __dp=0x00000000
[08:22:52.038]    __ap=0x00000000
[08:22:52.039]    __traceout=0x00000000      (Trace Disabled)
[08:22:52.039]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:22:52.040]    __FlashAddr=0x00000000
[08:22:52.040]    __FlashLen=0x00000000
[08:22:52.041]    __FlashArg=0x00000000
[08:22:52.041]    __FlashOp=0x00000000
[08:22:52.041]    __Result=0x00000000
[08:22:52.042]  </debugvars>
[08:22:52.042]  
[08:22:52.042]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[08:22:52.043]    <block atomic="false" info="">
[08:22:52.043]      Sequence("ResetHardware");
[08:22:52.043]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[08:22:52.043]          <block atomic="false" info="">
[08:22:52.044]            __var nReset      = 0x80;
[08:22:52.044]              // -> [nReset <= 0x00000080]
[08:22:52.044]            DAP_SWJ_Pins(0x00, nReset, 0);
[08:22:52.046]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:22:52.046]          </block>
[08:22:52.046]          <control if="" while="1" timeout="50000" info="">
[08:22:52.046]            // while "1"  (timeout="50000")
[08:22:52.047]            // while-condition  =>  TRUE
[08:22:52.047]            // while "1"  (timeout="50000")
[08:22:52.047]            // while-condition  =>  TRUE
[08:22:52.048]            // while "1"  (timeout="50000")
[08:22:52.048]            // while-condition  =>  TRUE
[08:22:52.048]            // while "1"  (timeout="50000")
[08:22:52.048]            // while-condition  =>  TRUE
[08:22:52.048]            // while "1"  (timeout="50000")
[08:22:52.048]            // while-condition  =>  TRUE
[08:22:52.049]            // while "1"  (timeout="50000")
[08:22:52.049]            // while-condition  =>  TRUE
[08:22:52.050]            // while "1"  (timeout="50000")
[08:22:52.050]            // while-condition  =>  TRUE
[08:22:52.050]            // while "1"  (timeout="50000")
[08:22:52.050]            // while-condition  =>  TRUE
[08:22:52.050]            // while "1"  (timeout="50000")
[08:22:52.051]            // while-condition  =>  TRUE
[08:22:52.051]            // while "1"  (timeout="50000")
[08:22:52.051]            // while-condition  =>  TRUE
[08:22:52.051]            // while "1"  (timeout="50000")
[08:22:52.051]            // while-condition  =>  TRUE
[08:22:52.052]            // while "1"  (timeout="50000")
[08:22:52.052]            // while-condition  =>  TRUE
[08:22:52.052]            // while "1"  (timeout="50000")
[08:22:52.052]            // while-condition  =>  TRUE
[08:22:52.052]            // while "1"  (timeout="50000")
[08:22:52.053]            // while-condition  =>  TRUE
[08:22:52.053]            // while "1"  (timeout="50000")
[08:22:52.053]            // while-condition  =>  TRUE
[08:22:52.053]            // while "1"  (timeout="50000")
[08:22:52.053]            // while-condition  =>  TRUE
[08:22:52.054]            // while "1"  (timeout="50000")
[08:22:52.054]            // while-condition  =>  TRUE
[08:22:52.054]            // while "1"  (timeout="50000")
[08:22:52.054]            // while-condition  =>  TRUE
[08:22:52.055]            // while "1"  (timeout="50000")
[08:22:52.055]            // while-condition  =>  TRUE
[08:22:52.055]            // while "1"  (timeout="50000")
[08:22:52.055]            // while-condition  =>  TRUE
[08:22:52.055]            // while "1"  (timeout="50000")
[08:22:52.056]            // while-condition  =>  TRUE
[08:22:52.056]            // while "1"  (timeout="50000")
[08:22:52.056]            // while-condition  =>  TRUE
[08:22:52.056]            // while "1"  (timeout="50000")
[08:22:52.056]            // while-condition  =>  TRUE
[08:22:52.057]            // while "1"  (timeout="50000")
[08:22:52.057]            // while-condition  =>  TRUE
[08:22:52.057]            // while "1"  (timeout="50000")
[08:22:52.057]            // while-condition  =>  TRUE
[08:22:52.057]            // while "1"  (timeout="50000")
[08:22:52.058]            // while-condition  =>  TRUE
[08:22:52.058]            // while "1"  (timeout="50000")
[08:22:52.058]            // while-condition  =>  TRUE
[08:22:52.058]            // while "1"  (timeout="50000")
[08:22:52.058]            // while-condition  =>  TRUE
[08:22:52.059]            // while "1"  (timeout="50000")
[08:22:52.059]            // while-condition  =>  TRUE
[08:22:52.059]            // while "1"  (timeout="50000")
[08:22:52.059]            // while-condition  =>  TRUE
[08:22:52.059]            // while "1"  (timeout="50000")
[08:22:52.060]            // while-condition  =>  TRUE
[08:22:52.060]            // while "1"  (timeout="50000")
[08:22:52.061]            // while-condition  =>  TRUE
[08:22:52.061]            // while "1"  (timeout="50000")
[08:22:52.061]            // while-condition  =>  TRUE
[08:22:52.062]            // while "1"  (timeout="50000")
[08:22:52.062]            // while-condition  =>  TRUE
[08:22:52.062]            // while "1"  (timeout="50000")
[08:22:52.063]            // while-condition  =>  TRUE
[08:22:52.063]            // while "1"  (timeout="50000")
[08:22:52.063]            // while-condition  =>  TRUE
[08:22:52.063]            // while "1"  (timeout="50000")
[08:22:52.063]            // while-condition  =>  TRUE
[08:22:52.063]            // while "1"  (timeout="50000")
[08:22:52.063]            // while-condition  =>  TRUE
[08:22:52.064]            // while "1"  (timeout="50000")
[08:22:52.064]            // while-condition  =>  TRUE
[08:22:52.065]            // while "1"  (timeout="50000")
[08:22:52.065]            // while-condition  =>  TRUE
[08:22:52.065]            // while "1"  (timeout="50000")
[08:22:52.065]            // while-condition  =>  TRUE
[08:22:52.066]            // while "1"  (timeout="50000")
[08:22:52.066]            // while-condition  =>  TRUE
[08:22:52.066]            // while "1"  (timeout="50000")
[08:22:52.066]            // while-condition  =>  TRUE
[08:22:52.066]            // while "1"  (timeout="50000")
[08:22:52.067]            // while-condition  =>  TRUE
[08:22:52.067]            // while "1"  (timeout="50000")
[08:22:52.067]            // while-condition  =>  TRUE
[08:22:52.067]            // while "1"  (timeout="50000")
[08:22:52.067]            // while-condition  =>  TRUE
[08:22:52.068]            // while "1"  (timeout="50000")
[08:22:52.068]            // while-condition  =>  TRUE
[08:22:52.068]            // while "1"  (timeout="50000")
[08:22:52.068]            // while-condition  =>  TRUE
[08:22:52.068]            // while "1"  (timeout="50000")
[08:22:52.068]            // while-condition  =>  TRUE
[08:22:52.068]            // while "1"  (timeout="50000")
[08:22:52.068]            // while-condition  =>  TRUE
[08:22:52.069]            // while "1"  (timeout="50000")
[08:22:52.069]            // while-condition  =>  TRUE
[08:22:52.069]            // while "1"  (timeout="50000")
[08:22:52.069]            // while-condition  =>  TRUE
[08:22:52.069]            // while "1"  (timeout="50000")
[08:22:52.070]            // while-condition  =>  TRUE
[08:22:52.070]            // while "1"  (timeout="50000")
[08:22:52.070]            // while-condition  =>  TRUE
[08:22:52.070]            // while "1"  (timeout="50000")
[08:22:52.071]            // while-condition  =>  TRUE
[08:22:52.071]            // while "1"  (timeout="50000")
[08:22:52.071]            // while-condition  =>  TRUE
[08:22:52.071]            // while "1"  (timeout="50000")
[08:22:52.071]            // while-condition  =>  TRUE
[08:22:52.072]            // while "1"  (timeout="50000")
[08:22:52.072]            // while-condition  =>  TRUE
[08:22:52.072]            // while "1"  (timeout="50000")
[08:22:52.072]            // while-condition  =>  TRUE
[08:22:52.073]            // while "1"  (timeout="50000")
[08:22:52.073]            // while-condition  =>  TRUE
[08:22:52.074]            // while "1"  (timeout="50000")
[08:22:52.074]            // while-condition  =>  TRUE
[08:22:52.074]            // while "1"  (timeout="50000")
[08:22:52.074]            // while-condition  =>  TRUE
[08:22:52.074]            // while "1"  (timeout="50000")
[08:22:52.074]            // while-condition  =>  TRUE
[08:22:52.075]            // while "1"  (timeout="50000")
[08:22:52.076]            // while-condition  =>  TRUE
[08:22:52.076]            // while "1"  (timeout="50000")
[08:22:52.076]            // while-condition  =>  TRUE
[08:22:52.077]            // while "1"  (timeout="50000")
[08:22:52.077]            // while-condition  =>  TRUE
[08:22:52.077]            // while "1"  (timeout="50000")
[08:22:52.077]            // while-condition  =>  TRUE
[08:22:52.078]            // while "1"  (timeout="50000")
[08:22:52.078]            // while-condition  =>  TRUE
[08:22:52.078]            // while "1"  (timeout="50000")
[08:22:52.078]            // while-condition  =>  TRUE
[08:22:52.078]            // while "1"  (timeout="50000")
[08:22:52.079]            // while-condition  =>  TRUE
[08:22:52.079]            // while "1"  (timeout="50000")
[08:22:52.079]            // while-condition  =>  TRUE
[08:22:52.079]            // while "1"  (timeout="50000")
[08:22:52.079]            // while-condition  =>  TRUE
[08:22:52.080]            // while "1"  (timeout="50000")
[08:22:52.080]            // while-condition  =>  TRUE
[08:22:52.080]            // while "1"  (timeout="50000")
[08:22:52.080]            // while-condition  =>  TRUE
[08:22:52.080]            // while "1"  (timeout="50000")
[08:22:52.080]            // while-condition  =>  TRUE
[08:22:52.081]            // while "1"  (timeout="50000")
[08:22:52.081]            // while-condition  =>  TRUE
[08:22:52.081]            // while "1"  (timeout="50000")
[08:22:52.081]            // while-condition  =>  TRUE
[08:22:52.081]            // while "1"  (timeout="50000")
[08:22:52.081]            // while-condition  =>  TRUE
[08:22:52.081]            // while "1"  (timeout="50000")
[08:22:52.082]            // while-condition  =>  TRUE
[08:22:52.082]            // while "1"  (timeout="50000")
[08:22:52.082]            // while-condition  =>  TRUE
[08:22:52.082]            // while "1"  (timeout="50000")
[08:22:52.082]            // while-condition  =>  TRUE
[08:22:52.083]            // while "1"  (timeout="50000")
[08:22:52.083]            // while-condition  =>  TRUE
[08:22:52.083]            // while "1"  (timeout="50000")
[08:22:52.083]            // while-condition  =>  TRUE
[08:22:52.083]            // while "1"  (timeout="50000")
[08:22:52.083]            // while-condition  =>  TRUE
[08:22:52.084]            // while "1"  (timeout="50000")
[08:22:52.084]            // while-condition  =>  TRUE
[08:22:52.084]            // while "1"  (timeout="50000")
[08:22:52.084]            // while-condition  =>  TRUE
[08:22:52.084]            // while "1"  (timeout="50000")
[08:22:52.085]            // while-condition  =>  TRUE
[08:22:52.085]            // while "1"  (timeout="50000")
[08:22:52.085]            // while-condition  =>  TRUE
[08:22:52.085]            // while "1"  (timeout="50000")
[08:22:52.085]            // while-condition  =>  TRUE
[08:22:52.086]            // while "1"  (timeout="50000")
[08:22:52.086]            // while-condition  =>  TRUE
[08:22:52.086]            // while "1"  (timeout="50000")
[08:22:52.086]            // while-condition  =>  TRUE
[08:22:52.086]            // while "1"  (timeout="50000")
[08:22:52.087]            // while-condition  =>  TRUE
[08:22:52.087]            // while "1"  (timeout="50000")
[08:22:52.087]            // while-condition  =>  TRUE
[08:22:52.087]            // while "1"  (timeout="50000")
[08:22:52.088]            // while-condition  =>  TRUE
[08:22:52.088]            // while "1"  (timeout="50000")
[08:22:52.089]            // while-condition  =>  TRUE
[08:22:52.089]            // while "1"  (timeout="50000")
[08:22:52.089]            // while-condition  =>  TRUE
[08:22:52.089]            // while "1"  (timeout="50000")
[08:22:52.089]            // while-condition  =>  TRUE
[08:22:52.090]            // while "1"  (timeout="50000")
[08:22:52.090]            // while-condition  =>  TRUE
[08:22:52.090]            // while "1"  (timeout="50000")
[08:22:52.090]            // while-condition  =>  TRUE
[08:22:52.091]            // while "1"  (timeout="50000")
[08:22:52.091]            // while-condition  =>  TRUE
[08:22:52.091]            // while "1"  (timeout="50000")
[08:22:52.091]            // while-condition  =>  TRUE
[08:22:52.091]            // while "1"  (timeout="50000")
[08:22:52.092]            // while-condition  =>  TRUE
[08:22:52.092]            // while "1"  (timeout="50000")
[08:22:52.092]            // while-condition  =>  TRUE
[08:22:52.092]            // while "1"  (timeout="50000")
[08:22:52.092]            // while-condition  =>  TRUE
[08:22:52.092]            // while "1"  (timeout="50000")
[08:22:52.093]            // while-condition  =>  TRUE
[08:22:52.093]            // while "1"  (timeout="50000")
[08:22:52.093]            // while-condition  =>  TRUE
[08:22:52.093]            // while "1"  (timeout="50000")
[08:22:52.094]            // while-condition  =>  TRUE
[08:22:52.094]            // while "1"  (timeout="50000")
[08:22:52.094]            // while-condition  =>  TRUE
[08:22:52.094]            // while "1"  (timeout="50000")
[08:22:52.094]            // while-condition  =>  TRUE
[08:22:52.094]            // while "1"  (timeout="50000")
[08:22:52.095]            // while-condition  =>  TRUE
[08:22:52.095]            // while "1"  (timeout="50000")
[08:22:52.095]            // while-condition  =>  TRUE
[08:22:52.095]            // while "1"  (timeout="50000")
[08:22:52.095]            // while-condition  =>  TRUE
[08:22:52.096]            // while "1"  (timeout="50000")
[08:22:52.096]            // while-condition  =>  TRUE
[08:22:52.096]            // while "1"  (timeout="50000")
[08:22:52.096]            // while-condition  =>  TRUE
[08:22:52.096]            // while "1"  (timeout="50000")
[08:22:52.096]            // while-condition  =>  TRUE
[08:22:52.097]            // while "1"  (timeout="50000")
[08:22:52.097]            // while-condition  =>  TRUE
[08:22:52.097]            // while "1"  (timeout="50000")
[08:22:52.097]            // while-condition  =>  TRUE
[08:22:52.097]            // while "1"  (timeout="50000")
[08:22:52.098]            // while-condition  =>  TRUE
[08:22:52.098]            // while "1"  (timeout="50000")
[08:22:52.098]            // while-condition  =>  TRUE
[08:22:52.098]            // while "1"  (timeout="50000")
[08:22:52.098]            // while-condition  =>  TRUE
[08:22:52.099]            // while "1"  (timeout="50000")
[08:22:52.099]            // while-condition  =>  TRUE
[08:22:52.099]            // while "1"  (timeout="50000")
[08:22:52.099]            // while  =>  TIMEOUT
[08:22:52.099]            // end while "1"
[08:22:52.099]          </control>
[08:22:52.100]          <block atomic="false" info="">
[08:22:52.101]            DAP_SWJ_Pins(nReset, nReset, 0);
[08:22:52.110]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:22:52.111]          </block>
[08:22:52.112]          <control if="" while="1" timeout="10000" info="">
[08:22:52.112]            // while "1"  (timeout="10000")
[08:22:52.113]            // while-condition  =>  TRUE
[08:22:52.113]            // while "1"  (timeout="10000")
[08:22:52.114]            // while-condition  =>  TRUE
[08:22:52.115]            // while "1"  (timeout="10000")
[08:22:52.116]            // while  =>  TIMEOUT
[08:22:52.116]            // end while "1"
[08:22:52.117]          </control>
[08:22:52.118]          <block atomic="true" info="">
[08:22:52.118]            // ATOMIC SEQUENCE - EXECUTE
[08:22:52.120]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[08:22:52.121]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[08:22:52.121]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[08:22:52.122]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[08:22:52.123]            // ATOMIC SEQUENCE - DONE
[08:22:52.123]          </block>
[08:22:52.124]          <block atomic="false" info="">
[08:22:52.124]            __errorcontrol = 0x00000001;
[08:22:52.124]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[08:22:52.125]            ReadDP(0x0);
[08:22:52.129]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[08:22:52.130]            __errorcontrol = 0x00000000;
[08:22:52.130]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[08:22:52.131]          </block>
[08:22:52.131]        </sequence>
[08:22:52.132]      Sequence("DebugPortSetup");
[08:22:52.132]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[08:22:52.132]        </sequence>
[08:22:52.133]      Sequence("DebugPortStart");
[08:22:52.133]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[08:22:52.134]          <block atomic="false" info="">
[08:22:52.134]            __var SW_DP_ABORT  = 0x0;
[08:22:52.135]              // -> [SW_DP_ABORT <= 0x00000000]
[08:22:52.136]            __var DP_CTRL_STAT = 0x4;
[08:22:52.136]              // -> [DP_CTRL_STAT <= 0x00000004]
[08:22:52.137]            __var DP_SELECT    = 0x8;
[08:22:52.137]              // -> [DP_SELECT <= 0x00000008]
[08:22:52.137]            __var powered_down = 0;
[08:22:52.138]              // -> [powered_down <= 0x00000000]
[08:22:52.138]            WriteDP(DP_SELECT, 0x00000000);
[08:22:52.140]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:22:52.140]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[08:22:52.142]              // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[08:22:52.142]              // -> [powered_down <= 0x00000001]
[08:22:52.142]          </block>
[08:22:52.142]          <control if="powered_down" while="" timeout="0" info="">
[08:22:52.143]            // if-block "powered_down"
[08:22:52.143]              // =>  TRUE
[08:22:52.143]            <block atomic="false" info="">
[08:22:52.144]              WriteDP(DP_CTRL_STAT, 0x50000000);
[08:22:52.145]                // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[08:22:52.146]            </block>
[08:22:52.146]            <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[08:22:52.146]              // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[08:22:52.147]                // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[08:22:52.148]              // while-condition  =>  FALSE
[08:22:52.148]              // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[08:22:52.148]            </control>
[08:22:52.148]            <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[08:22:52.148]              // if-block "(__protocol & 0xFFFF) == 1"
[08:22:52.149]                // =>  FALSE
[08:22:52.149]              // skip if-block "(__protocol & 0xFFFF) == 1"
[08:22:52.149]            </control>
[08:22:52.149]            <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[08:22:52.150]              // if-block "(__protocol & 0xFFFF) == 2"
[08:22:52.150]                // =>  TRUE
[08:22:52.150]              <block atomic="false" info="">
[08:22:52.150]                WriteDP(DP_CTRL_STAT, 0x50000F00);
[08:22:52.152]                  // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[08:22:52.152]                WriteDP(SW_DP_ABORT, 0x0000001E);
[08:22:52.154]                  // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[08:22:52.154]              </block>
[08:22:52.155]              // end if-block "(__protocol & 0xFFFF) == 2"
[08:22:52.155]            </control>
[08:22:52.155]            // end if-block "powered_down"
[08:22:52.156]          </control>
[08:22:52.156]        </sequence>
[08:22:52.157]      Sequence("DebugCoreStart");
[08:22:52.157]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[08:22:52.157]          <block atomic="true" info="">
[08:22:52.158]            // ATOMIC SEQUENCE - EXECUTE
[08:22:52.160]            __var DP_R_IDCODE    = 0x0;
[08:22:52.160]              // -> [DP_R_IDCODE <= 0x00000000]
[08:22:52.160]            __var DP_W_ABORT    = 0x0;
[08:22:52.161]              // -> [DP_W_ABORT <= 0x00000000]
[08:22:52.161]            __var DP_CTRLSTAT = 0x4;
[08:22:52.161]              // -> [DP_CTRLSTAT <= 0x00000004]
[08:22:52.161]            __var DP_W_SELECT    = 0x8;
[08:22:52.162]              // -> [DP_W_SELECT <= 0x00000008]
[08:22:52.162]            __var AP_TAR		= 0x4;
[08:22:52.162]              // -> [AP_TAR <= 0x00000004]
[08:22:52.162]            __var AP_BD0		= 0x0;
[08:22:52.162]              // -> [AP_BD0 <= 0x00000000]
[08:22:52.163]            __var AP_BD1		= 0x4;
[08:22:52.163]              // -> [AP_BD1 <= 0x00000004]
[08:22:52.163]            __var AP_BD2		= 0x8;
[08:22:52.163]              // -> [AP_BD2 <= 0x00000008]
[08:22:52.164]            __var PCWithinFlash = 0;
[08:22:52.164]              // -> [PCWithinFlash <= 0x00000000]
[08:22:52.164]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[08:22:52.164]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[08:22:52.164]            // ATOMIC SEQUENCE - DONE
[08:22:52.165]          </block>
[08:22:52.165]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[08:22:52.165]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[08:22:52.170]              // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[08:22:52.170]            // while-condition  =>  FALSE
[08:22:52.170]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[08:22:52.171]          </control>
[08:22:52.171]          <block atomic="true" info="">
[08:22:52.171]            // ATOMIC SEQUENCE - EXECUTE
[08:22:52.174]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:22:52.174]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:22:52.174]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[08:22:52.174]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[08:22:52.174]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[08:22:52.175]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[08:22:52.175]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[08:22:52.175]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[08:22:52.176]            // ATOMIC SEQUENCE - DONE
[08:22:52.176]          </block>
[08:22:52.176]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[08:22:52.177]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:22:52.179]              // -> [ReadAP(0x00000000) => 0x01030003]   (__dp=0x00000000, __ap=0x00000000)
[08:22:52.179]            // while-condition  =>  FALSE
[08:22:52.179]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[08:22:52.179]          </control>
[08:22:52.180]          <block atomic="false" info="">
[08:22:52.180]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[08:22:52.182]              // -> [ReadAP(0x00000008) => 0x10000820]   (__dp=0x00000000, __ap=0x00000000)
[08:22:52.182]              // -> [PCWithinFlash <= 0x00000001]
[08:22:52.182]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:22:52.183]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:22:52.184]          </block>
[08:22:52.184]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[08:22:52.184]            // if-block "PCWithinFlash == 0"
[08:22:52.185]              // =>  FALSE
[08:22:52.185]            // skip if-block "PCWithinFlash == 0"
[08:22:52.185]          </control>
[08:22:52.185]        </sequence>
[08:22:52.185]    </block>
[08:22:52.186]  </sequence>
[08:22:52.186]  
[08:23:00.252]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[08:23:00.252]  
[08:23:00.253]  <debugvars>
[08:23:00.253]    // Pre-defined
[08:23:00.254]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:23:00.254]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:23:00.255]    __dp=0x00000000
[08:23:00.255]    __ap=0x00000000
[08:23:00.256]    __traceout=0x00000000      (Trace Disabled)
[08:23:00.256]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:23:00.256]    __FlashAddr=0x00000000
[08:23:00.257]    __FlashLen=0x00000000
[08:23:00.257]    __FlashArg=0x00000000
[08:23:00.258]    __FlashOp=0x00000000
[08:23:00.258]    __Result=0x00000000
[08:23:00.258]  </debugvars>
[08:23:00.258]  
[08:23:00.258]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[08:23:00.259]    <block atomic="false" info="">
[08:23:00.260]      __var nReset      = 0x80;
[08:23:00.260]        // -> [nReset <= 0x00000080]
[08:23:00.260]      DAP_SWJ_Pins(0x00, nReset, 0);
[08:23:00.261]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:23:00.262]    </block>
[08:23:00.262]    <control if="" while="1" timeout="50000" info="">
[08:23:00.262]      // while "1"  (timeout="50000")
[08:23:00.263]      // while-condition  =>  TRUE
[08:23:00.263]      // while "1"  (timeout="50000")
[08:23:00.263]      // while-condition  =>  TRUE
[08:23:00.264]      // while "1"  (timeout="50000")
[08:23:00.264]      // while-condition  =>  TRUE
[08:23:00.264]      // while "1"  (timeout="50000")
[08:23:00.264]      // while-condition  =>  TRUE
[08:23:00.264]      // while "1"  (timeout="50000")
[08:23:00.265]      // while-condition  =>  TRUE
[08:23:00.265]      // while "1"  (timeout="50000")
[08:23:00.265]      // while-condition  =>  TRUE
[08:23:00.265]      // while "1"  (timeout="50000")
[08:23:00.266]      // while-condition  =>  TRUE
[08:23:00.266]      // while "1"  (timeout="50000")
[08:23:00.267]      // while-condition  =>  TRUE
[08:23:00.267]      // while "1"  (timeout="50000")
[08:23:00.267]      // while-condition  =>  TRUE
[08:23:00.267]      // while "1"  (timeout="50000")
[08:23:00.268]      // while-condition  =>  TRUE
[08:23:00.268]      // while "1"  (timeout="50000")
[08:23:00.268]      // while-condition  =>  TRUE
[08:23:00.268]      // while "1"  (timeout="50000")
[08:23:00.269]      // while-condition  =>  TRUE
[08:23:00.269]      // while "1"  (timeout="50000")
[08:23:00.269]      // while-condition  =>  TRUE
[08:23:00.269]      // while "1"  (timeout="50000")
[08:23:00.270]      // while-condition  =>  TRUE
[08:23:00.270]      // while "1"  (timeout="50000")
[08:23:00.270]      // while-condition  =>  TRUE
[08:23:00.270]      // while "1"  (timeout="50000")
[08:23:00.270]      // while-condition  =>  TRUE
[08:23:00.270]      // while "1"  (timeout="50000")
[08:23:00.270]      // while-condition  =>  TRUE
[08:23:00.270]      // while "1"  (timeout="50000")
[08:23:00.271]      // while-condition  =>  TRUE
[08:23:00.271]      // while "1"  (timeout="50000")
[08:23:00.271]      // while-condition  =>  TRUE
[08:23:00.271]      // while "1"  (timeout="50000")
[08:23:00.271]      // while-condition  =>  TRUE
[08:23:00.272]      // while "1"  (timeout="50000")
[08:23:00.272]      // while-condition  =>  TRUE
[08:23:00.272]      // while "1"  (timeout="50000")
[08:23:00.272]      // while-condition  =>  TRUE
[08:23:00.272]      // while "1"  (timeout="50000")
[08:23:00.273]      // while-condition  =>  TRUE
[08:23:00.273]      // while "1"  (timeout="50000")
[08:23:00.273]      // while-condition  =>  TRUE
[08:23:00.273]      // while "1"  (timeout="50000")
[08:23:00.273]      // while-condition  =>  TRUE
[08:23:00.274]      // while "1"  (timeout="50000")
[08:23:00.274]      // while-condition  =>  TRUE
[08:23:00.274]      // while "1"  (timeout="50000")
[08:23:00.275]      // while-condition  =>  TRUE
[08:23:00.275]      // while "1"  (timeout="50000")
[08:23:00.275]      // while-condition  =>  TRUE
[08:23:00.275]      // while "1"  (timeout="50000")
[08:23:00.275]      // while-condition  =>  TRUE
[08:23:00.275]      // while "1"  (timeout="50000")
[08:23:00.276]      // while-condition  =>  TRUE
[08:23:00.276]      // while "1"  (timeout="50000")
[08:23:00.277]      // while-condition  =>  TRUE
[08:23:00.277]      // while "1"  (timeout="50000")
[08:23:00.277]      // while-condition  =>  TRUE
[08:23:00.277]      // while "1"  (timeout="50000")
[08:23:00.278]      // while-condition  =>  TRUE
[08:23:00.278]      // while "1"  (timeout="50000")
[08:23:00.278]      // while-condition  =>  TRUE
[08:23:00.278]      // while "1"  (timeout="50000")
[08:23:00.279]      // while-condition  =>  TRUE
[08:23:00.279]      // while "1"  (timeout="50000")
[08:23:00.279]      // while-condition  =>  TRUE
[08:23:00.279]      // while "1"  (timeout="50000")
[08:23:00.279]      // while-condition  =>  TRUE
[08:23:00.279]      // while "1"  (timeout="50000")
[08:23:00.280]      // while-condition  =>  TRUE
[08:23:00.280]      // while "1"  (timeout="50000")
[08:23:00.280]      // while-condition  =>  TRUE
[08:23:00.280]      // while "1"  (timeout="50000")
[08:23:00.280]      // while-condition  =>  TRUE
[08:23:00.280]      // while "1"  (timeout="50000")
[08:23:00.280]      // while-condition  =>  TRUE
[08:23:00.280]      // while "1"  (timeout="50000")
[08:23:00.281]      // while-condition  =>  TRUE
[08:23:00.281]      // while "1"  (timeout="50000")
[08:23:00.281]      // while-condition  =>  TRUE
[08:23:00.281]      // while "1"  (timeout="50000")
[08:23:00.281]      // while-condition  =>  TRUE
[08:23:00.281]      // while "1"  (timeout="50000")
[08:23:00.282]      // while-condition  =>  TRUE
[08:23:00.282]      // while "1"  (timeout="50000")
[08:23:00.282]      // while-condition  =>  TRUE
[08:23:00.282]      // while "1"  (timeout="50000")
[08:23:00.283]      // while-condition  =>  TRUE
[08:23:00.283]      // while "1"  (timeout="50000")
[08:23:00.283]      // while-condition  =>  TRUE
[08:23:00.283]      // while "1"  (timeout="50000")
[08:23:00.283]      // while-condition  =>  TRUE
[08:23:00.284]      // while "1"  (timeout="50000")
[08:23:00.284]      // while-condition  =>  TRUE
[08:23:00.284]      // while "1"  (timeout="50000")
[08:23:00.284]      // while-condition  =>  TRUE
[08:23:00.284]      // while "1"  (timeout="50000")
[08:23:00.285]      // while-condition  =>  TRUE
[08:23:00.285]      // while "1"  (timeout="50000")
[08:23:00.285]      // while-condition  =>  TRUE
[08:23:00.285]      // while "1"  (timeout="50000")
[08:23:00.285]      // while-condition  =>  TRUE
[08:23:00.286]      // while "1"  (timeout="50000")
[08:23:00.286]      // while-condition  =>  TRUE
[08:23:00.286]      // while "1"  (timeout="50000")
[08:23:00.286]      // while-condition  =>  TRUE
[08:23:00.287]      // while "1"  (timeout="50000")
[08:23:00.287]      // while-condition  =>  TRUE
[08:23:00.288]      // while "1"  (timeout="50000")
[08:23:00.288]      // while-condition  =>  TRUE
[08:23:00.288]      // while "1"  (timeout="50000")
[08:23:00.288]      // while-condition  =>  TRUE
[08:23:00.289]      // while "1"  (timeout="50000")
[08:23:00.289]      // while-condition  =>  TRUE
[08:23:00.289]      // while "1"  (timeout="50000")
[08:23:00.289]      // while-condition  =>  TRUE
[08:23:00.290]      // while "1"  (timeout="50000")
[08:23:00.290]      // while-condition  =>  TRUE
[08:23:00.290]      // while "1"  (timeout="50000")
[08:23:00.290]      // while-condition  =>  TRUE
[08:23:00.290]      // while "1"  (timeout="50000")
[08:23:00.291]      // while-condition  =>  TRUE
[08:23:00.291]      // while "1"  (timeout="50000")
[08:23:00.291]      // while-condition  =>  TRUE
[08:23:00.291]      // while "1"  (timeout="50000")
[08:23:00.291]      // while-condition  =>  TRUE
[08:23:00.292]      // while "1"  (timeout="50000")
[08:23:00.292]      // while-condition  =>  TRUE
[08:23:00.292]      // while "1"  (timeout="50000")
[08:23:00.292]      // while-condition  =>  TRUE
[08:23:00.292]      // while "1"  (timeout="50000")
[08:23:00.293]      // while-condition  =>  TRUE
[08:23:00.293]      // while "1"  (timeout="50000")
[08:23:00.293]      // while-condition  =>  TRUE
[08:23:00.293]      // while "1"  (timeout="50000")
[08:23:00.293]      // while-condition  =>  TRUE
[08:23:00.294]      // while "1"  (timeout="50000")
[08:23:00.294]      // while-condition  =>  TRUE
[08:23:00.294]      // while "1"  (timeout="50000")
[08:23:00.294]      // while-condition  =>  TRUE
[08:23:00.294]      // while "1"  (timeout="50000")
[08:23:00.294]      // while-condition  =>  TRUE
[08:23:00.294]      // while "1"  (timeout="50000")
[08:23:00.294]      // while-condition  =>  TRUE
[08:23:00.295]      // while "1"  (timeout="50000")
[08:23:00.295]      // while-condition  =>  TRUE
[08:23:00.295]      // while "1"  (timeout="50000")
[08:23:00.295]      // while-condition  =>  TRUE
[08:23:00.295]      // while "1"  (timeout="50000")
[08:23:00.296]      // while-condition  =>  TRUE
[08:23:00.296]      // while "1"  (timeout="50000")
[08:23:00.296]      // while-condition  =>  TRUE
[08:23:00.296]      // while "1"  (timeout="50000")
[08:23:00.296]      // while-condition  =>  TRUE
[08:23:00.297]      // while "1"  (timeout="50000")
[08:23:00.297]      // while-condition  =>  TRUE
[08:23:00.297]      // while "1"  (timeout="50000")
[08:23:00.298]      // while-condition  =>  TRUE
[08:23:00.298]      // while "1"  (timeout="50000")
[08:23:00.298]      // while-condition  =>  TRUE
[08:23:00.298]      // while "1"  (timeout="50000")
[08:23:00.298]      // while-condition  =>  TRUE
[08:23:00.299]      // while "1"  (timeout="50000")
[08:23:00.299]      // while-condition  =>  TRUE
[08:23:00.299]      // while "1"  (timeout="50000")
[08:23:00.299]      // while-condition  =>  TRUE
[08:23:00.299]      // while "1"  (timeout="50000")
[08:23:00.300]      // while-condition  =>  TRUE
[08:23:00.300]      // while "1"  (timeout="50000")
[08:23:00.300]      // while-condition  =>  TRUE
[08:23:00.300]      // while "1"  (timeout="50000")
[08:23:00.300]      // while-condition  =>  TRUE
[08:23:00.300]      // while "1"  (timeout="50000")
[08:23:00.300]      // while-condition  =>  TRUE
[08:23:00.300]      // while "1"  (timeout="50000")
[08:23:00.301]      // while-condition  =>  TRUE
[08:23:00.301]      // while "1"  (timeout="50000")
[08:23:00.301]      // while-condition  =>  TRUE
[08:23:00.301]      // while "1"  (timeout="50000")
[08:23:00.302]      // while-condition  =>  TRUE
[08:23:00.302]      // while "1"  (timeout="50000")
[08:23:00.302]      // while-condition  =>  TRUE
[08:23:00.303]      // while "1"  (timeout="50000")
[08:23:00.303]      // while-condition  =>  TRUE
[08:23:00.303]      // while "1"  (timeout="50000")
[08:23:00.303]      // while-condition  =>  TRUE
[08:23:00.303]      // while "1"  (timeout="50000")
[08:23:00.304]      // while-condition  =>  TRUE
[08:23:00.304]      // while "1"  (timeout="50000")
[08:23:00.304]      // while-condition  =>  TRUE
[08:23:00.304]      // while "1"  (timeout="50000")
[08:23:00.304]      // while-condition  =>  TRUE
[08:23:00.304]      // while "1"  (timeout="50000")
[08:23:00.305]      // while-condition  =>  TRUE
[08:23:00.305]      // while "1"  (timeout="50000")
[08:23:00.305]      // while-condition  =>  TRUE
[08:23:00.305]      // while "1"  (timeout="50000")
[08:23:00.306]      // while-condition  =>  TRUE
[08:23:00.306]      // while "1"  (timeout="50000")
[08:23:00.306]      // while-condition  =>  TRUE
[08:23:00.306]      // while "1"  (timeout="50000")
[08:23:00.306]      // while-condition  =>  TRUE
[08:23:00.306]      // while "1"  (timeout="50000")
[08:23:00.306]      // while-condition  =>  TRUE
[08:23:00.306]      // while "1"  (timeout="50000")
[08:23:00.307]      // while-condition  =>  TRUE
[08:23:00.307]      // while "1"  (timeout="50000")
[08:23:00.307]      // while-condition  =>  TRUE
[08:23:00.308]      // while "1"  (timeout="50000")
[08:23:00.308]      // while-condition  =>  TRUE
[08:23:00.308]      // while "1"  (timeout="50000")
[08:23:00.308]      // while-condition  =>  TRUE
[08:23:00.308]      // while "1"  (timeout="50000")
[08:23:00.308]      // while-condition  =>  TRUE
[08:23:00.309]      // while "1"  (timeout="50000")
[08:23:00.309]      // while-condition  =>  TRUE
[08:23:00.309]      // while "1"  (timeout="50000")
[08:23:00.309]      // while-condition  =>  TRUE
[08:23:00.310]      // while "1"  (timeout="50000")
[08:23:00.310]      // while-condition  =>  TRUE
[08:23:00.310]      // while "1"  (timeout="50000")
[08:23:00.310]      // while-condition  =>  TRUE
[08:23:00.311]      // while "1"  (timeout="50000")
[08:23:00.311]      // while-condition  =>  TRUE
[08:23:00.311]      // while "1"  (timeout="50000")
[08:23:00.311]      // while-condition  =>  TRUE
[08:23:00.312]      // while "1"  (timeout="50000")
[08:23:00.312]      // while-condition  =>  TRUE
[08:23:00.312]      // while "1"  (timeout="50000")
[08:23:00.312]      // while-condition  =>  TRUE
[08:23:00.313]      // while "1"  (timeout="50000")
[08:23:00.313]      // while-condition  =>  TRUE
[08:23:00.313]      // while "1"  (timeout="50000")
[08:23:00.313]      // while-condition  =>  TRUE
[08:23:00.314]      // while "1"  (timeout="50000")
[08:23:00.314]      // while-condition  =>  TRUE
[08:23:00.314]      // while "1"  (timeout="50000")
[08:23:00.314]      // while-condition  =>  TRUE
[08:23:00.314]      // while "1"  (timeout="50000")
[08:23:00.315]      // while-condition  =>  TRUE
[08:23:00.315]      // while "1"  (timeout="50000")
[08:23:00.316]      // while-condition  =>  TRUE
[08:23:00.316]      // while "1"  (timeout="50000")
[08:23:00.317]      // while-condition  =>  TRUE
[08:23:00.317]      // while "1"  (timeout="50000")
[08:23:00.317]      // while-condition  =>  TRUE
[08:23:00.317]      // while "1"  (timeout="50000")
[08:23:00.318]      // while-condition  =>  TRUE
[08:23:00.318]      // while "1"  (timeout="50000")
[08:23:00.318]      // while  =>  TIMEOUT
[08:23:00.318]      // end while "1"
[08:23:00.319]    </control>
[08:23:00.319]    <block atomic="false" info="">
[08:23:00.319]      DAP_SWJ_Pins(nReset, nReset, 0);
[08:23:00.331]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[08:23:00.331]    </block>
[08:23:00.331]  </sequence>
[08:23:00.332]  
[08:56:09.921]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[08:56:09.921]  
[08:56:09.921]  <debugvars>
[08:56:09.922]    // Pre-defined
[08:56:09.922]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:56:09.922]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[08:56:09.923]    __dp=0x00000000
[08:56:09.923]    __ap=0x00000000
[08:56:09.923]    __traceout=0x00000000      (Trace Disabled)
[08:56:09.924]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:56:09.924]    __FlashAddr=0x00000000
[08:56:09.924]    __FlashLen=0x00000000
[08:56:09.925]    __FlashArg=0x00000000
[08:56:09.925]    __FlashOp=0x00000000
[08:56:09.926]    __Result=0x00000000
[08:56:09.926]  </debugvars>
[08:56:09.926]  
[08:56:09.927]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[08:56:09.927]    <block atomic="false" info="">
[08:56:09.927]      __var nReset      = 0x80;
[08:56:09.928]        // -> [nReset <= 0x00000080]
[08:56:09.928]      DAP_SWJ_Pins(0x00, nReset, 0);
[08:56:09.931]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[08:56:09.931]    </block>
[08:56:09.932]    <control if="" while="1" timeout="50000" info="">
[08:56:09.932]      // while "1"  (timeout="50000")
[08:56:09.933]      // while-condition  =>  TRUE
[08:56:09.933]      // while "1"  (timeout="50000")
[08:56:09.933]      // while-condition  =>  TRUE
[08:56:09.934]      // while "1"  (timeout="50000")
[08:56:09.935]      // while-condition  =>  TRUE
[08:56:09.935]      // while "1"  (timeout="50000")
[08:56:09.935]      // while-condition  =>  TRUE
[08:56:09.936]      // while "1"  (timeout="50000")
[08:56:09.936]      // while-condition  =>  TRUE
[08:56:09.936]      // while "1"  (timeout="50000")
[08:56:09.937]      // while-condition  =>  TRUE
[08:56:09.937]      // while "1"  (timeout="50000")
[08:56:09.937]      // while-condition  =>  TRUE
[08:56:09.938]      // while "1"  (timeout="50000")
[08:56:09.938]      // while-condition  =>  TRUE
[08:56:09.938]      // while "1"  (timeout="50000")
[08:56:09.938]      // while-condition  =>  TRUE
[08:56:09.939]      // while "1"  (timeout="50000")
[08:56:09.939]      // while-condition  =>  TRUE
[08:56:09.939]      // while "1"  (timeout="50000")
[08:56:09.939]      // while-condition  =>  TRUE
[08:56:09.940]      // while "1"  (timeout="50000")
[08:56:09.940]      // while-condition  =>  TRUE
[08:56:09.940]      // while "1"  (timeout="50000")
[08:56:09.940]      // while-condition  =>  TRUE
[08:56:09.941]      // while "1"  (timeout="50000")
[08:56:09.941]      // while-condition  =>  TRUE
[08:56:09.941]      // while "1"  (timeout="50000")
[08:56:09.942]      // while-condition  =>  TRUE
[08:56:09.942]      // while "1"  (timeout="50000")
[08:56:09.942]      // while-condition  =>  TRUE
[08:56:09.942]      // while "1"  (timeout="50000")
[08:56:09.942]      // while-condition  =>  TRUE
[08:56:09.943]      // while "1"  (timeout="50000")
[08:56:09.943]      // while-condition  =>  TRUE
[08:56:09.943]      // while "1"  (timeout="50000")
[08:56:09.943]      // while-condition  =>  TRUE
[08:56:09.944]      // while "1"  (timeout="50000")
[08:56:09.944]      // while-condition  =>  TRUE
[08:56:09.944]      // while "1"  (timeout="50000")
[08:56:09.944]      // while-condition  =>  TRUE
[08:56:09.944]      // while "1"  (timeout="50000")
[08:56:09.945]      // while-condition  =>  TRUE
[08:56:09.945]      // while "1"  (timeout="50000")
[08:56:09.945]      // while-condition  =>  TRUE
[08:56:09.945]      // while "1"  (timeout="50000")
[08:56:09.945]      // while-condition  =>  TRUE
[08:56:09.946]      // while "1"  (timeout="50000")
[08:56:09.946]      // while-condition  =>  TRUE
[08:56:09.946]      // while "1"  (timeout="50000")
[08:56:09.946]      // while-condition  =>  TRUE
[08:56:09.946]      // while "1"  (timeout="50000")
[08:56:09.946]      // while-condition  =>  TRUE
[08:56:09.946]      // while "1"  (timeout="50000")
[08:56:09.947]      // while-condition  =>  TRUE
[08:56:09.947]      // while "1"  (timeout="50000")
[08:56:09.947]      // while-condition  =>  TRUE
[08:56:09.947]      // while "1"  (timeout="50000")
[08:56:09.958]      // while-condition  =>  TRUE
[08:56:09.958]      // while "1"  (timeout="50000")
[08:56:09.959]      // while-condition  =>  TRUE
[08:56:09.959]      // while "1"  (timeout="50000")
[08:56:09.959]      // while-condition  =>  TRUE
[08:56:09.960]      // while "1"  (timeout="50000")
[08:56:09.960]      // while-condition  =>  TRUE
[08:56:09.960]      // while "1"  (timeout="50000")
[08:56:09.961]      // while-condition  =>  TRUE
[08:56:09.961]      // while "1"  (timeout="50000")
[08:56:09.961]      // while-condition  =>  TRUE
[08:56:09.962]      // while "1"  (timeout="50000")
[08:56:09.962]      // while-condition  =>  TRUE
[08:56:09.962]      // while "1"  (timeout="50000")
[08:56:09.963]      // while-condition  =>  TRUE
[08:56:09.963]      // while "1"  (timeout="50000")
[08:56:09.964]      // while-condition  =>  TRUE
[08:56:09.964]      // while "1"  (timeout="50000")
[08:56:09.964]      // while-condition  =>  TRUE
[08:56:09.965]      // while "1"  (timeout="50000")
[08:56:09.965]      // while-condition  =>  TRUE
[08:56:09.965]      // while "1"  (timeout="50000")
[08:56:09.966]      // while-condition  =>  TRUE
[08:56:09.966]      // while "1"  (timeout="50000")
[08:56:09.966]      // while-condition  =>  TRUE
[08:56:09.967]      // while "1"  (timeout="50000")
[08:56:09.967]      // while-condition  =>  TRUE
[08:56:09.967]      // while "1"  (timeout="50000")
[08:56:09.968]      // while-condition  =>  TRUE
[08:56:09.968]      // while "1"  (timeout="50000")
[08:56:09.968]      // while-condition  =>  TRUE
[08:56:09.969]      // while "1"  (timeout="50000")
[08:56:09.969]      // while-condition  =>  TRUE
[08:56:09.969]      // while "1"  (timeout="50000")
[08:56:09.970]      // while-condition  =>  TRUE
[08:56:09.970]      // while "1"  (timeout="50000")
[08:56:09.970]      // while-condition  =>  TRUE
[08:56:09.971]      // while "1"  (timeout="50000")
[08:56:09.971]      // while-condition  =>  TRUE
[08:56:09.972]      // while "1"  (timeout="50000")
[08:56:09.972]      // while-condition  =>  TRUE
[08:56:09.972]      // while "1"  (timeout="50000")
[08:56:09.973]      // while-condition  =>  TRUE
[08:56:09.973]      // while "1"  (timeout="50000")
[08:56:09.973]      // while-condition  =>  TRUE
[08:56:09.974]      // while "1"  (timeout="50000")
[08:56:09.974]      // while-condition  =>  TRUE
[08:56:09.974]      // while "1"  (timeout="50000")
[08:56:09.975]      // while-condition  =>  TRUE
[08:56:09.975]      // while "1"  (timeout="50000")
[08:56:09.975]      // while-condition  =>  TRUE
[08:56:09.976]      // while "1"  (timeout="50000")
[08:56:09.976]      // while-condition  =>  TRUE
[08:56:09.976]      // while "1"  (timeout="50000")
[08:56:09.977]      // while-condition  =>  TRUE
[08:56:09.977]      // while "1"  (timeout="50000")
[08:56:09.977]      // while-condition  =>  TRUE
[08:56:09.978]      // while "1"  (timeout="50000")
[08:56:09.978]      // while-condition  =>  TRUE
[08:56:09.978]      // while "1"  (timeout="50000")
[08:56:09.979]      // while-condition  =>  TRUE
[08:56:09.979]      // while "1"  (timeout="50000")
[08:56:09.979]      // while-condition  =>  TRUE
[08:56:09.980]      // while "1"  (timeout="50000")
[08:56:09.980]      // while-condition  =>  TRUE
[08:56:09.980]      // while "1"  (timeout="50000")
[08:56:09.980]      // while-condition  =>  TRUE
[08:56:09.981]      // while "1"  (timeout="50000")
[08:56:09.981]      // while-condition  =>  TRUE
[08:56:09.981]      // while "1"  (timeout="50000")
[08:56:09.981]      // while-condition  =>  TRUE
[08:56:09.982]      // while "1"  (timeout="50000")
[08:56:09.982]      // while-condition  =>  TRUE
[08:56:09.982]      // while "1"  (timeout="50000")
[08:56:09.982]      // while-condition  =>  TRUE
[08:56:09.983]      // while "1"  (timeout="50000")
[08:56:09.983]      // while-condition  =>  TRUE
[08:56:09.983]      // while "1"  (timeout="50000")
[08:56:09.983]      // while-condition  =>  TRUE
[08:56:09.984]      // while "1"  (timeout="50000")
[08:56:09.984]      // while-condition  =>  TRUE
[08:56:09.984]      // while "1"  (timeout="50000")
[08:56:09.984]      // while-condition  =>  TRUE
[08:56:09.984]      // while "1"  (timeout="50000")
[08:56:09.985]      // while-condition  =>  TRUE
[08:56:09.985]      // while "1"  (timeout="50000")
[08:56:09.985]      // while-condition  =>  TRUE
[08:56:09.985]      // while "1"  (timeout="50000")
[08:56:09.986]      // while-condition  =>  TRUE
[08:56:09.986]      // while "1"  (timeout="50000")
[08:56:09.986]      // while-condition  =>  TRUE
[08:56:09.986]      // while "1"  (timeout="50000")
[08:56:09.987]      // while-condition  =>  TRUE
[08:56:09.987]      // while "1"  (timeout="50000")
[08:56:09.987]      // while-condition  =>  TRUE
[08:56:09.987]      // while "1"  (timeout="50000")
[08:56:09.988]      // while-condition  =>  TRUE
[08:56:09.988]      // while "1"  (timeout="50000")
[08:56:09.988]      // while-condition  =>  TRUE
[08:56:09.988]      // while "1"  (timeout="50000")
[08:56:09.988]      // while-condition  =>  TRUE
[08:56:09.989]      // while "1"  (timeout="50000")
[08:56:09.989]      // while-condition  =>  TRUE
[08:56:09.989]      // while "1"  (timeout="50000")
[08:56:09.989]      // while-condition  =>  TRUE
[08:56:09.989]      // while "1"  (timeout="50000")
[08:56:09.990]      // while-condition  =>  TRUE
[08:56:09.990]      // while "1"  (timeout="50000")
[08:56:09.990]      // while-condition  =>  TRUE
[08:56:09.990]      // while "1"  (timeout="50000")
[08:56:09.990]      // while-condition  =>  TRUE
[08:56:09.991]      // while "1"  (timeout="50000")
[08:56:09.991]      // while-condition  =>  TRUE
[08:56:09.991]      // while "1"  (timeout="50000")
[08:56:09.991]      // while-condition  =>  TRUE
[08:56:09.991]      // while "1"  (timeout="50000")
[08:56:09.992]      // while-condition  =>  TRUE
[08:56:09.992]      // while "1"  (timeout="50000")
[08:56:09.992]      // while-condition  =>  TRUE
[08:56:09.992]      // while "1"  (timeout="50000")
[08:56:09.992]      // while-condition  =>  TRUE
[08:56:09.993]      // while "1"  (timeout="50000")
[08:56:09.993]      // while-condition  =>  TRUE
[08:56:09.993]      // while "1"  (timeout="50000")
[08:56:09.993]      // while-condition  =>  TRUE
[08:56:09.993]      // while "1"  (timeout="50000")
[08:56:09.994]      // while-condition  =>  TRUE
[08:56:09.994]      // while "1"  (timeout="50000")
[08:56:09.994]      // while  =>  TIMEOUT
[08:56:09.994]      // end while "1"
[08:56:09.994]    </control>
[08:56:09.995]    <block atomic="false" info="">
[08:56:09.995]      DAP_SWJ_Pins(nReset, nReset, 0);
[08:56:09.996]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[08:56:09.997]    </block>
[08:56:09.997]    <control if="" while="1" timeout="10000" info="">
[08:56:09.997]      // while "1"  (timeout="10000")
[08:56:09.998]      // while-condition  =>  TRUE
[08:56:09.998]      // while "1"  (timeout="10000")
[08:56:09.998]      // while-condition  =>  TRUE
[08:56:09.998]      // while "1"  (timeout="10000")
[08:56:09.998]      // while-condition  =>  TRUE
[08:56:09.999]      // while "1"  (timeout="10000")
[08:56:09.999]      // while-condition  =>  TRUE
[08:56:09.999]      // while "1"  (timeout="10000")
[08:56:09.999]      // while-condition  =>  TRUE
[08:56:10.000]      // while "1"  (timeout="10000")
[08:56:10.000]      // while-condition  =>  TRUE
[08:56:10.000]      // while "1"  (timeout="10000")
[08:56:10.000]      // while-condition  =>  TRUE
[08:56:10.001]      // while "1"  (timeout="10000")
[08:56:10.001]      // while-condition  =>  TRUE
[08:56:10.001]      // while "1"  (timeout="10000")
[08:56:10.001]      // while-condition  =>  TRUE
[08:56:10.002]      // while "1"  (timeout="10000")
[08:56:10.002]      // while-condition  =>  TRUE
[08:56:10.002]      // while "1"  (timeout="10000")
[08:56:10.002]      // while-condition  =>  TRUE
[08:56:10.003]      // while "1"  (timeout="10000")
[08:56:10.003]      // while-condition  =>  TRUE
[08:56:10.003]      // while "1"  (timeout="10000")
[08:56:10.003]      // while-condition  =>  TRUE
[08:56:10.004]      // while "1"  (timeout="10000")
[08:56:10.004]      // while-condition  =>  TRUE
[08:56:10.004]      // while "1"  (timeout="10000")
[08:56:10.004]      // while-condition  =>  TRUE
[08:56:10.004]      // while "1"  (timeout="10000")
[08:56:10.005]      // while-condition  =>  TRUE
[08:56:10.005]      // while "1"  (timeout="10000")
[08:56:10.005]      // while-condition  =>  TRUE
[08:56:10.005]      // while "1"  (timeout="10000")
[08:56:10.005]      // while-condition  =>  TRUE
[08:56:10.006]      // while "1"  (timeout="10000")
[08:56:10.006]      // while-condition  =>  TRUE
[08:56:10.006]      // while "1"  (timeout="10000")
[08:56:10.006]      // while-condition  =>  TRUE
[08:56:10.006]      // while "1"  (timeout="10000")
[08:56:10.007]      // while-condition  =>  TRUE
[08:56:10.007]      // while "1"  (timeout="10000")
[08:56:10.007]      // while-condition  =>  TRUE
[08:56:10.007]      // while "1"  (timeout="10000")
[08:56:10.007]      // while-condition  =>  TRUE
[08:56:10.008]      // while "1"  (timeout="10000")
[08:56:10.008]      // while-condition  =>  TRUE
[08:56:10.008]      // while "1"  (timeout="10000")
[08:56:10.008]      // while-condition  =>  TRUE
[08:56:10.008]      // while "1"  (timeout="10000")
[08:56:10.009]      // while-condition  =>  TRUE
[08:56:10.009]      // while "1"  (timeout="10000")
[08:56:10.009]      // while  =>  TIMEOUT
[08:56:10.009]      // end while "1"
[08:56:10.009]    </control>
[08:56:10.010]    <block atomic="true" info="">
[08:56:10.012]  
[08:56:10.012]  ! W001 : No atomic sequence support in debug unit
[08:56:10.012]  
[08:56:10.014]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[08:56:10.018]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[08:56:10.018]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[08:56:10.021]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[08:56:10.021]    </block>
[08:56:10.021]    <block atomic="false" info="">
[08:56:10.022]      __errorcontrol = 0x00000001;
[08:56:10.022]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[08:56:10.022]      ReadDP(0x0);
[08:56:10.031]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[08:56:10.040]      __errorcontrol = 0x00000000;
[08:56:10.040]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[08:56:10.041]    </block>
[08:56:10.041]  </sequence>
[08:56:10.041]  
[08:56:10.041]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[08:56:10.041]  
[08:56:10.042]  <debugvars>
[08:56:10.042]    // Pre-defined
[08:56:10.042]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:56:10.043]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:56:10.043]    __dp=0x00000000
[08:56:10.043]    __ap=0x00000000
[08:56:10.044]    __traceout=0x00000000      (Trace Disabled)
[08:56:10.044]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:56:10.044]    __FlashAddr=0x00000000
[08:56:10.045]    __FlashLen=0x00000000
[08:56:10.045]    __FlashArg=0x00000000
[08:56:10.045]    __FlashOp=0x00000000
[08:56:10.045]    __Result=0x00000000
[08:56:10.046]  </debugvars>
[08:56:10.046]  
[08:56:10.046]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[08:56:10.047]  </sequence>
[08:56:10.047]  
[08:56:15.684]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[08:56:15.684]  
[08:56:15.685]  <debugvars>
[08:56:15.685]    // Pre-defined
[08:56:15.686]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:56:15.687]    __connection=0x00020201    (Connection Type="Debug", Reset Type="System Reset", Pre-Connect HW Reset)
[08:56:15.687]    __dp=0x00000000
[08:56:15.688]    __ap=0x00000000
[08:56:15.688]    __traceout=0x00000000      (Trace Disabled)
[08:56:15.689]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:56:15.689]    __FlashAddr=0x00000000
[08:56:15.690]    __FlashLen=0x00000000
[08:56:15.690]    __FlashArg=0x00000000
[08:56:15.691]    __FlashOp=0x00000000
[08:56:15.691]    __Result=0x00000000
[08:56:15.691]  </debugvars>
[08:56:15.692]  
[08:56:15.692]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[08:56:15.693]    <block atomic="false" info="">
[08:56:15.693]      __var nReset      = 0x80;
[08:56:15.693]        // -> [nReset <= 0x00000080]
[08:56:15.694]      DAP_SWJ_Pins(0x00, nReset, 0);
[08:56:15.696]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[08:56:15.697]    </block>
[08:56:15.698]    <control if="" while="1" timeout="50000" info="">
[08:56:15.698]      // while "1"  (timeout="50000")
[08:56:15.699]      // while-condition  =>  TRUE
[08:56:15.699]      // while "1"  (timeout="50000")
[08:56:15.700]      // while-condition  =>  TRUE
[08:56:15.700]      // while "1"  (timeout="50000")
[08:56:15.701]      // while-condition  =>  TRUE
[08:56:15.701]      // while "1"  (timeout="50000")
[08:56:15.702]      // while-condition  =>  TRUE
[08:56:15.702]      // while "1"  (timeout="50000")
[08:56:15.703]      // while-condition  =>  TRUE
[08:56:15.703]      // while "1"  (timeout="50000")
[08:56:15.703]      // while-condition  =>  TRUE
[08:56:15.703]      // while "1"  (timeout="50000")
[08:56:15.704]      // while-condition  =>  TRUE
[08:56:15.704]      // while "1"  (timeout="50000")
[08:56:15.704]      // while-condition  =>  TRUE
[08:56:15.704]      // while "1"  (timeout="50000")
[08:56:15.705]      // while-condition  =>  TRUE
[08:56:15.705]      // while "1"  (timeout="50000")
[08:56:15.705]      // while-condition  =>  TRUE
[08:56:15.705]      // while "1"  (timeout="50000")
[08:56:15.706]      // while-condition  =>  TRUE
[08:56:15.706]      // while "1"  (timeout="50000")
[08:56:15.706]      // while-condition  =>  TRUE
[08:56:15.706]      // while "1"  (timeout="50000")
[08:56:15.707]      // while-condition  =>  TRUE
[08:56:15.707]      // while "1"  (timeout="50000")
[08:56:15.707]      // while-condition  =>  TRUE
[08:56:15.708]      // while "1"  (timeout="50000")
[08:56:15.708]      // while-condition  =>  TRUE
[08:56:15.708]      // while "1"  (timeout="50000")
[08:56:15.708]      // while-condition  =>  TRUE
[08:56:15.709]      // while "1"  (timeout="50000")
[08:56:15.709]      // while-condition  =>  TRUE
[08:56:15.709]      // while "1"  (timeout="50000")
[08:56:15.709]      // while-condition  =>  TRUE
[08:56:15.710]      // while "1"  (timeout="50000")
[08:56:15.710]      // while-condition  =>  TRUE
[08:56:15.710]      // while "1"  (timeout="50000")
[08:56:15.710]      // while-condition  =>  TRUE
[08:56:15.710]      // while "1"  (timeout="50000")
[08:56:15.710]      // while-condition  =>  TRUE
[08:56:15.711]      // while "1"  (timeout="50000")
[08:56:15.711]      // while-condition  =>  TRUE
[08:56:15.711]      // while "1"  (timeout="50000")
[08:56:15.712]      // while-condition  =>  TRUE
[08:56:15.712]      // while "1"  (timeout="50000")
[08:56:15.712]      // while-condition  =>  TRUE
[08:56:15.712]      // while "1"  (timeout="50000")
[08:56:15.712]      // while-condition  =>  TRUE
[08:56:15.712]      // while "1"  (timeout="50000")
[08:56:15.713]      // while-condition  =>  TRUE
[08:56:15.713]      // while "1"  (timeout="50000")
[08:56:15.713]      // while-condition  =>  TRUE
[08:56:15.713]      // while "1"  (timeout="50000")
[08:56:15.713]      // while-condition  =>  TRUE
[08:56:15.714]      // while "1"  (timeout="50000")
[08:56:15.714]      // while-condition  =>  TRUE
[08:56:15.714]      // while "1"  (timeout="50000")
[08:56:15.714]      // while-condition  =>  TRUE
[08:56:15.714]      // while "1"  (timeout="50000")
[08:56:15.714]      // while-condition  =>  TRUE
[08:56:15.715]      // while "1"  (timeout="50000")
[08:56:15.715]      // while-condition  =>  TRUE
[08:56:15.715]      // while "1"  (timeout="50000")
[08:56:15.715]      // while-condition  =>  TRUE
[08:56:15.715]      // while "1"  (timeout="50000")
[08:56:15.715]      // while-condition  =>  TRUE
[08:56:15.715]      // while "1"  (timeout="50000")
[08:56:15.715]      // while-condition  =>  TRUE
[08:56:15.715]      // while "1"  (timeout="50000")
[08:56:15.716]      // while-condition  =>  TRUE
[08:56:15.717]      // while "1"  (timeout="50000")
[08:56:15.717]      // while-condition  =>  TRUE
[08:56:15.717]      // while "1"  (timeout="50000")
[08:56:15.717]      // while-condition  =>  TRUE
[08:56:15.717]      // while "1"  (timeout="50000")
[08:56:15.717]      // while-condition  =>  TRUE
[08:56:15.718]      // while "1"  (timeout="50000")
[08:56:15.718]      // while-condition  =>  TRUE
[08:56:15.718]      // while "1"  (timeout="50000")
[08:56:15.718]      // while-condition  =>  TRUE
[08:56:15.719]      // while "1"  (timeout="50000")
[08:56:15.719]      // while-condition  =>  TRUE
[08:56:15.719]      // while "1"  (timeout="50000")
[08:56:15.719]      // while-condition  =>  TRUE
[08:56:15.719]      // while "1"  (timeout="50000")
[08:56:15.720]      // while-condition  =>  TRUE
[08:56:15.720]      // while "1"  (timeout="50000")
[08:56:15.720]      // while-condition  =>  TRUE
[08:56:15.720]      // while "1"  (timeout="50000")
[08:56:15.720]      // while-condition  =>  TRUE
[08:56:15.720]      // while "1"  (timeout="50000")
[08:56:15.720]      // while-condition  =>  TRUE
[08:56:15.721]      // while "1"  (timeout="50000")
[08:56:15.721]      // while-condition  =>  TRUE
[08:56:15.721]      // while "1"  (timeout="50000")
[08:56:15.721]      // while-condition  =>  TRUE
[08:56:15.722]      // while "1"  (timeout="50000")
[08:56:15.722]      // while-condition  =>  TRUE
[08:56:15.722]      // while "1"  (timeout="50000")
[08:56:15.722]      // while-condition  =>  TRUE
[08:56:15.722]      // while "1"  (timeout="50000")
[08:56:15.722]      // while-condition  =>  TRUE
[08:56:15.723]      // while "1"  (timeout="50000")
[08:56:15.723]      // while-condition  =>  TRUE
[08:56:15.723]      // while "1"  (timeout="50000")
[08:56:15.723]      // while-condition  =>  TRUE
[08:56:15.724]      // while "1"  (timeout="50000")
[08:56:15.724]      // while-condition  =>  TRUE
[08:56:15.724]      // while "1"  (timeout="50000")
[08:56:15.724]      // while-condition  =>  TRUE
[08:56:15.724]      // while "1"  (timeout="50000")
[08:56:15.724]      // while-condition  =>  TRUE
[08:56:15.725]      // while "1"  (timeout="50000")
[08:56:15.725]      // while-condition  =>  TRUE
[08:56:15.725]      // while "1"  (timeout="50000")
[08:56:15.725]      // while-condition  =>  TRUE
[08:56:15.725]      // while "1"  (timeout="50000")
[08:56:15.726]      // while-condition  =>  TRUE
[08:56:15.726]      // while "1"  (timeout="50000")
[08:56:15.726]      // while-condition  =>  TRUE
[08:56:15.726]      // while "1"  (timeout="50000")
[08:56:15.726]      // while-condition  =>  TRUE
[08:56:15.727]      // while "1"  (timeout="50000")
[08:56:15.727]      // while-condition  =>  TRUE
[08:56:15.727]      // while "1"  (timeout="50000")
[08:56:15.727]      // while-condition  =>  TRUE
[08:56:15.727]      // while "1"  (timeout="50000")
[08:56:15.727]      // while-condition  =>  TRUE
[08:56:15.728]      // while "1"  (timeout="50000")
[08:56:15.728]      // while-condition  =>  TRUE
[08:56:15.728]      // while "1"  (timeout="50000")
[08:56:15.728]      // while-condition  =>  TRUE
[08:56:15.728]      // while "1"  (timeout="50000")
[08:56:15.729]      // while-condition  =>  TRUE
[08:56:15.729]      // while "1"  (timeout="50000")
[08:56:15.729]      // while-condition  =>  TRUE
[08:56:15.729]      // while "1"  (timeout="50000")
[08:56:15.730]      // while-condition  =>  TRUE
[08:56:15.730]      // while "1"  (timeout="50000")
[08:56:15.730]      // while-condition  =>  TRUE
[08:56:15.730]      // while "1"  (timeout="50000")
[08:56:15.730]      // while-condition  =>  TRUE
[08:56:15.730]      // while "1"  (timeout="50000")
[08:56:15.731]      // while-condition  =>  TRUE
[08:56:15.731]      // while "1"  (timeout="50000")
[08:56:15.731]      // while-condition  =>  TRUE
[08:56:15.731]      // while "1"  (timeout="50000")
[08:56:15.731]      // while-condition  =>  TRUE
[08:56:15.731]      // while "1"  (timeout="50000")
[08:56:15.732]      // while-condition  =>  TRUE
[08:56:15.732]      // while "1"  (timeout="50000")
[08:56:15.732]      // while-condition  =>  TRUE
[08:56:15.732]      // while "1"  (timeout="50000")
[08:56:15.732]      // while-condition  =>  TRUE
[08:56:15.733]      // while "1"  (timeout="50000")
[08:56:15.733]      // while-condition  =>  TRUE
[08:56:15.733]      // while "1"  (timeout="50000")
[08:56:15.734]      // while-condition  =>  TRUE
[08:56:15.734]      // while "1"  (timeout="50000")
[08:56:15.734]      // while-condition  =>  TRUE
[08:56:15.734]      // while "1"  (timeout="50000")
[08:56:15.734]      // while-condition  =>  TRUE
[08:56:15.734]      // while "1"  (timeout="50000")
[08:56:15.734]      // while-condition  =>  TRUE
[08:56:15.735]      // while "1"  (timeout="50000")
[08:56:15.735]      // while-condition  =>  TRUE
[08:56:15.735]      // while "1"  (timeout="50000")
[08:56:15.735]      // while-condition  =>  TRUE
[08:56:15.735]      // while "1"  (timeout="50000")
[08:56:15.736]      // while-condition  =>  TRUE
[08:56:15.736]      // while "1"  (timeout="50000")
[08:56:15.736]      // while-condition  =>  TRUE
[08:56:15.736]      // while "1"  (timeout="50000")
[08:56:15.737]      // while-condition  =>  TRUE
[08:56:15.737]      // while "1"  (timeout="50000")
[08:56:15.737]      // while-condition  =>  TRUE
[08:56:15.737]      // while "1"  (timeout="50000")
[08:56:15.737]      // while-condition  =>  TRUE
[08:56:15.738]      // while "1"  (timeout="50000")
[08:56:15.738]      // while-condition  =>  TRUE
[08:56:15.738]      // while "1"  (timeout="50000")
[08:56:15.738]      // while-condition  =>  TRUE
[08:56:15.738]      // while "1"  (timeout="50000")
[08:56:15.738]      // while-condition  =>  TRUE
[08:56:15.738]      // while "1"  (timeout="50000")
[08:56:15.739]      // while-condition  =>  TRUE
[08:56:15.739]      // while "1"  (timeout="50000")
[08:56:15.739]      // while-condition  =>  TRUE
[08:56:15.739]      // while "1"  (timeout="50000")
[08:56:15.739]      // while-condition  =>  TRUE
[08:56:15.740]      // while "1"  (timeout="50000")
[08:56:15.740]      // while-condition  =>  TRUE
[08:56:15.740]      // while "1"  (timeout="50000")
[08:56:15.740]      // while-condition  =>  TRUE
[08:56:15.740]      // while "1"  (timeout="50000")
[08:56:15.741]      // while-condition  =>  TRUE
[08:56:15.741]      // while "1"  (timeout="50000")
[08:56:15.741]      // while-condition  =>  TRUE
[08:56:15.741]      // while "1"  (timeout="50000")
[08:56:15.742]      // while-condition  =>  TRUE
[08:56:15.742]      // while "1"  (timeout="50000")
[08:56:15.742]      // while-condition  =>  TRUE
[08:56:15.742]      // while "1"  (timeout="50000")
[08:56:15.742]      // while-condition  =>  TRUE
[08:56:15.742]      // while "1"  (timeout="50000")
[08:56:15.743]      // while-condition  =>  TRUE
[08:56:15.743]      // while "1"  (timeout="50000")
[08:56:15.743]      // while-condition  =>  TRUE
[08:56:15.743]      // while "1"  (timeout="50000")
[08:56:15.743]      // while-condition  =>  TRUE
[08:56:15.744]      // while "1"  (timeout="50000")
[08:56:15.744]      // while-condition  =>  TRUE
[08:56:15.744]      // while "1"  (timeout="50000")
[08:56:15.744]      // while-condition  =>  TRUE
[08:56:15.745]      // while "1"  (timeout="50000")
[08:56:15.745]      // while-condition  =>  TRUE
[08:56:15.745]      // while "1"  (timeout="50000")
[08:56:15.745]      // while-condition  =>  TRUE
[08:56:15.745]      // while "1"  (timeout="50000")
[08:56:15.746]      // while-condition  =>  TRUE
[08:56:15.746]      // while "1"  (timeout="50000")
[08:56:15.746]      // while-condition  =>  TRUE
[08:56:15.746]      // while "1"  (timeout="50000")
[08:56:15.746]      // while-condition  =>  TRUE
[08:56:15.746]      // while "1"  (timeout="50000")
[08:56:15.746]      // while-condition  =>  TRUE
[08:56:15.747]      // while "1"  (timeout="50000")
[08:56:15.747]      // while-condition  =>  TRUE
[08:56:15.747]      // while "1"  (timeout="50000")
[08:56:15.748]      // while-condition  =>  TRUE
[08:56:15.748]      // while "1"  (timeout="50000")
[08:56:15.748]      // while-condition  =>  TRUE
[08:56:15.748]      // while "1"  (timeout="50000")
[08:56:15.749]      // while-condition  =>  TRUE
[08:56:15.749]      // while "1"  (timeout="50000")
[08:56:15.749]      // while-condition  =>  TRUE
[08:56:15.749]      // while "1"  (timeout="50000")
[08:56:15.749]      // while-condition  =>  TRUE
[08:56:15.749]      // while "1"  (timeout="50000")
[08:56:15.750]      // while-condition  =>  TRUE
[08:56:15.750]      // while "1"  (timeout="50000")
[08:56:15.750]      // while-condition  =>  TRUE
[08:56:15.750]      // while "1"  (timeout="50000")
[08:56:15.750]      // while-condition  =>  TRUE
[08:56:15.751]      // while "1"  (timeout="50000")
[08:56:15.751]      // while-condition  =>  TRUE
[08:56:15.751]      // while "1"  (timeout="50000")
[08:56:15.751]      // while-condition  =>  TRUE
[08:56:15.751]      // while "1"  (timeout="50000")
[08:56:15.752]      // while-condition  =>  TRUE
[08:56:15.752]      // while "1"  (timeout="50000")
[08:56:15.752]      // while-condition  =>  TRUE
[08:56:15.752]      // while "1"  (timeout="50000")
[08:56:15.752]      // while-condition  =>  TRUE
[08:56:15.752]      // while "1"  (timeout="50000")
[08:56:15.753]      // while-condition  =>  TRUE
[08:56:15.753]      // while "1"  (timeout="50000")
[08:56:15.753]      // while-condition  =>  TRUE
[08:56:15.753]      // while "1"  (timeout="50000")
[08:56:15.753]      // while-condition  =>  TRUE
[08:56:15.753]      // while "1"  (timeout="50000")
[08:56:15.754]      // while-condition  =>  TRUE
[08:56:15.754]      // while "1"  (timeout="50000")
[08:56:15.754]      // while-condition  =>  TRUE
[08:56:15.754]      // while "1"  (timeout="50000")
[08:56:15.754]      // while-condition  =>  TRUE
[08:56:15.754]      // while "1"  (timeout="50000")
[08:56:15.754]      // while-condition  =>  TRUE
[08:56:15.755]      // while "1"  (timeout="50000")
[08:56:15.755]      // while-condition  =>  TRUE
[08:56:15.756]      // while "1"  (timeout="50000")
[08:56:15.756]      // while-condition  =>  TRUE
[08:56:15.756]      // while "1"  (timeout="50000")
[08:56:15.756]      // while-condition  =>  TRUE
[08:56:15.756]      // while "1"  (timeout="50000")
[08:56:15.757]      // while-condition  =>  TRUE
[08:56:15.757]      // while "1"  (timeout="50000")
[08:56:15.757]      // while-condition  =>  TRUE
[08:56:15.757]      // while "1"  (timeout="50000")
[08:56:15.757]      // while-condition  =>  TRUE
[08:56:15.758]      // while "1"  (timeout="50000")
[08:56:15.758]      // while-condition  =>  TRUE
[08:56:15.758]      // while "1"  (timeout="50000")
[08:56:15.758]      // while-condition  =>  TRUE
[08:56:15.758]      // while "1"  (timeout="50000")
[08:56:15.758]      // while-condition  =>  TRUE
[08:56:15.758]      // while "1"  (timeout="50000")
[08:56:15.758]      // while-condition  =>  TRUE
[08:56:15.759]      // while "1"  (timeout="50000")
[08:56:15.759]      // while  =>  TIMEOUT
[08:56:15.759]      // end while "1"
[08:56:15.759]    </control>
[08:56:15.759]    <block atomic="false" info="">
[08:56:15.760]      DAP_SWJ_Pins(nReset, nReset, 0);
[08:56:15.762]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[08:56:15.762]    </block>
[08:56:15.764]    <control if="" while="1" timeout="10000" info="">
[08:56:15.765]      // while "1"  (timeout="10000")
[08:56:15.765]      // while-condition  =>  TRUE
[08:56:15.765]      // while "1"  (timeout="10000")
[08:56:15.765]      // while-condition  =>  TRUE
[08:56:15.766]      // while "1"  (timeout="10000")
[08:56:15.766]      // while-condition  =>  TRUE
[08:56:15.766]      // while "1"  (timeout="10000")
[08:56:15.767]      // while-condition  =>  TRUE
[08:56:15.767]      // while "1"  (timeout="10000")
[08:56:15.767]      // while-condition  =>  TRUE
[08:56:15.768]      // while "1"  (timeout="10000")
[08:56:15.768]      // while-condition  =>  TRUE
[08:56:15.768]      // while "1"  (timeout="10000")
[08:56:15.769]      // while-condition  =>  TRUE
[08:56:15.769]      // while "1"  (timeout="10000")
[08:56:15.769]      // while-condition  =>  TRUE
[08:56:15.770]      // while "1"  (timeout="10000")
[08:56:15.770]      // while-condition  =>  TRUE
[08:56:15.770]      // while "1"  (timeout="10000")
[08:56:15.770]      // while-condition  =>  TRUE
[08:56:15.770]      // while "1"  (timeout="10000")
[08:56:15.771]      // while-condition  =>  TRUE
[08:56:15.772]      // while "1"  (timeout="10000")
[08:56:15.772]      // while-condition  =>  TRUE
[08:56:15.772]      // while "1"  (timeout="10000")
[08:56:15.772]      // while-condition  =>  TRUE
[08:56:15.773]      // while "1"  (timeout="10000")
[08:56:15.773]      // while-condition  =>  TRUE
[08:56:15.773]      // while "1"  (timeout="10000")
[08:56:15.773]      // while-condition  =>  TRUE
[08:56:15.774]      // while "1"  (timeout="10000")
[08:56:15.774]      // while-condition  =>  TRUE
[08:56:15.774]      // while "1"  (timeout="10000")
[08:56:15.774]      // while-condition  =>  TRUE
[08:56:15.775]      // while "1"  (timeout="10000")
[08:56:15.775]      // while  =>  TIMEOUT
[08:56:15.776]      // end while "1"
[08:56:15.776]    </control>
[08:56:15.776]    <block atomic="true" info="">
[08:56:15.779]  
[08:56:15.779]  ! W001 : No atomic sequence support in debug unit
[08:56:15.779]  
[08:56:15.781]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[08:56:15.785]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[08:56:15.785]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[08:56:15.787]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[08:56:15.787]    </block>
[08:56:15.787]    <block atomic="false" info="">
[08:56:15.787]      __errorcontrol = 0x00000001;
[08:56:15.788]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[08:56:15.788]      ReadDP(0x0);
[08:56:15.797]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[08:56:15.821]      __errorcontrol = 0x00000000;
[08:56:15.822]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[08:56:15.822]    </block>
[08:56:15.823]  </sequence>
[08:56:15.823]  
[08:56:15.824]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[08:56:15.824]  
[08:56:15.824]  <debugvars>
[08:56:15.825]    // Pre-defined
[08:56:15.825]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:56:15.826]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[08:56:15.826]    __dp=0x00000000
[08:56:15.827]    __ap=0x00000000
[08:56:15.827]    __traceout=0x00000000      (Trace Disabled)
[08:56:15.827]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:56:15.828]    __FlashAddr=0x00000000
[08:56:15.828]    __FlashLen=0x00000000
[08:56:15.828]    __FlashArg=0x00000000
[08:56:15.829]    __FlashOp=0x00000000
[08:56:15.829]    __Result=0x00000000
[08:56:15.829]  </debugvars>
[08:56:15.830]  
[08:56:15.830]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[08:56:15.830]  </sequence>
[08:56:15.830]  
[08:57:39.701]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[08:57:39.701]  
[08:57:39.702]  <debugvars>
[08:57:39.702]    // Pre-defined
[08:57:39.703]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:57:39.703]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[08:57:39.704]    __dp=0x00000000
[08:57:39.705]    __ap=0x00000000
[08:57:39.705]    __traceout=0x00000000      (Trace Disabled)
[08:57:39.705]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:57:39.706]    __FlashAddr=0x00000000
[08:57:39.707]    __FlashLen=0x00000000
[08:57:39.707]    __FlashArg=0x00000000
[08:57:39.708]    __FlashOp=0x00000000
[08:57:39.708]    __Result=0x00000000
[08:57:39.709]  </debugvars>
[08:57:39.710]  
[08:57:39.710]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[08:57:39.711]    <block atomic="false" info="">
[08:57:39.712]      __var nReset      = 0x80;
[08:57:39.712]        // -> [nReset <= 0x00000080]
[08:57:39.713]      DAP_SWJ_Pins(0x00, nReset, 0);
[08:57:39.716]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[08:57:39.716]    </block>
[08:57:39.717]    <control if="" while="1" timeout="50000" info="">
[08:57:39.717]      // while "1"  (timeout="50000")
[08:57:39.718]      // while-condition  =>  TRUE
[08:57:39.718]      // while "1"  (timeout="50000")
[08:57:39.719]      // while-condition  =>  TRUE
[08:57:39.719]      // while "1"  (timeout="50000")
[08:57:39.720]      // while-condition  =>  TRUE
[08:57:39.720]      // while "1"  (timeout="50000")
[08:57:39.721]      // while-condition  =>  TRUE
[08:57:39.722]      // while "1"  (timeout="50000")
[08:57:39.722]      // while-condition  =>  TRUE
[08:57:39.723]      // while "1"  (timeout="50000")
[08:57:39.723]      // while-condition  =>  TRUE
[08:57:39.724]      // while "1"  (timeout="50000")
[08:57:39.724]      // while-condition  =>  TRUE
[08:57:39.725]      // while "1"  (timeout="50000")
[08:57:39.725]      // while-condition  =>  TRUE
[08:57:39.725]      // while "1"  (timeout="50000")
[08:57:39.726]      // while-condition  =>  TRUE
[08:57:39.726]      // while "1"  (timeout="50000")
[08:57:39.727]      // while-condition  =>  TRUE
[08:57:39.727]      // while "1"  (timeout="50000")
[08:57:39.727]      // while-condition  =>  TRUE
[08:57:39.728]      // while "1"  (timeout="50000")
[08:57:39.729]      // while-condition  =>  TRUE
[08:57:39.729]      // while "1"  (timeout="50000")
[08:57:39.729]      // while-condition  =>  TRUE
[08:57:39.730]      // while "1"  (timeout="50000")
[08:57:39.730]      // while-condition  =>  TRUE
[08:57:39.730]      // while "1"  (timeout="50000")
[08:57:39.730]      // while-condition  =>  TRUE
[08:57:39.731]      // while "1"  (timeout="50000")
[08:57:39.731]      // while-condition  =>  TRUE
[08:57:39.731]      // while "1"  (timeout="50000")
[08:57:39.731]      // while-condition  =>  TRUE
[08:57:39.731]      // while "1"  (timeout="50000")
[08:57:39.731]      // while-condition  =>  TRUE
[08:57:39.732]      // while "1"  (timeout="50000")
[08:57:39.732]      // while-condition  =>  TRUE
[08:57:39.733]      // while "1"  (timeout="50000")
[08:57:39.733]      // while-condition  =>  TRUE
[08:57:39.733]      // while "1"  (timeout="50000")
[08:57:39.733]      // while-condition  =>  TRUE
[08:57:39.734]      // while "1"  (timeout="50000")
[08:57:39.734]      // while-condition  =>  TRUE
[08:57:39.734]      // while "1"  (timeout="50000")
[08:57:39.734]      // while-condition  =>  TRUE
[08:57:39.734]      // while "1"  (timeout="50000")
[08:57:39.735]      // while-condition  =>  TRUE
[08:57:39.735]      // while "1"  (timeout="50000")
[08:57:39.735]      // while-condition  =>  TRUE
[08:57:39.735]      // while "1"  (timeout="50000")
[08:57:39.735]      // while-condition  =>  TRUE
[08:57:39.735]      // while "1"  (timeout="50000")
[08:57:39.736]      // while-condition  =>  TRUE
[08:57:39.736]      // while "1"  (timeout="50000")
[08:57:39.736]      // while-condition  =>  TRUE
[08:57:39.736]      // while "1"  (timeout="50000")
[08:57:39.736]      // while-condition  =>  TRUE
[08:57:39.736]      // while "1"  (timeout="50000")
[08:57:39.737]      // while-condition  =>  TRUE
[08:57:39.737]      // while "1"  (timeout="50000")
[08:57:39.737]      // while-condition  =>  TRUE
[08:57:39.737]      // while "1"  (timeout="50000")
[08:57:39.737]      // while-condition  =>  TRUE
[08:57:39.738]      // while "1"  (timeout="50000")
[08:57:39.738]      // while-condition  =>  TRUE
[08:57:39.738]      // while "1"  (timeout="50000")
[08:57:39.738]      // while-condition  =>  TRUE
[08:57:39.738]      // while "1"  (timeout="50000")
[08:57:39.739]      // while-condition  =>  TRUE
[08:57:39.739]      // while "1"  (timeout="50000")
[08:57:39.739]      // while-condition  =>  TRUE
[08:57:39.739]      // while "1"  (timeout="50000")
[08:57:39.739]      // while-condition  =>  TRUE
[08:57:39.739]      // while "1"  (timeout="50000")
[08:57:39.739]      // while-condition  =>  TRUE
[08:57:39.739]      // while "1"  (timeout="50000")
[08:57:39.740]      // while-condition  =>  TRUE
[08:57:39.740]      // while "1"  (timeout="50000")
[08:57:39.740]      // while-condition  =>  TRUE
[08:57:39.740]      // while "1"  (timeout="50000")
[08:57:39.740]      // while-condition  =>  TRUE
[08:57:39.741]      // while "1"  (timeout="50000")
[08:57:39.741]      // while-condition  =>  TRUE
[08:57:39.741]      // while "1"  (timeout="50000")
[08:57:39.742]      // while-condition  =>  TRUE
[08:57:39.742]      // while "1"  (timeout="50000")
[08:57:39.742]      // while-condition  =>  TRUE
[08:57:39.742]      // while "1"  (timeout="50000")
[08:57:39.743]      // while-condition  =>  TRUE
[08:57:39.743]      // while "1"  (timeout="50000")
[08:57:39.743]      // while-condition  =>  TRUE
[08:57:39.743]      // while "1"  (timeout="50000")
[08:57:39.743]      // while-condition  =>  TRUE
[08:57:39.744]      // while "1"  (timeout="50000")
[08:57:39.744]      // while-condition  =>  TRUE
[08:57:39.744]      // while "1"  (timeout="50000")
[08:57:39.744]      // while-condition  =>  TRUE
[08:57:39.744]      // while "1"  (timeout="50000")
[08:57:39.745]      // while-condition  =>  TRUE
[08:57:39.745]      // while "1"  (timeout="50000")
[08:57:39.745]      // while-condition  =>  TRUE
[08:57:39.745]      // while "1"  (timeout="50000")
[08:57:39.745]      // while-condition  =>  TRUE
[08:57:39.746]      // while "1"  (timeout="50000")
[08:57:39.746]      // while-condition  =>  TRUE
[08:57:39.746]      // while "1"  (timeout="50000")
[08:57:39.746]      // while-condition  =>  TRUE
[08:57:39.747]      // while "1"  (timeout="50000")
[08:57:39.747]      // while-condition  =>  TRUE
[08:57:39.747]      // while "1"  (timeout="50000")
[08:57:39.747]      // while-condition  =>  TRUE
[08:57:39.747]      // while "1"  (timeout="50000")
[08:57:39.748]      // while-condition  =>  TRUE
[08:57:39.748]      // while "1"  (timeout="50000")
[08:57:39.748]      // while-condition  =>  TRUE
[08:57:39.748]      // while "1"  (timeout="50000")
[08:57:39.748]      // while-condition  =>  TRUE
[08:57:39.749]      // while "1"  (timeout="50000")
[08:57:39.749]      // while-condition  =>  TRUE
[08:57:39.749]      // while "1"  (timeout="50000")
[08:57:39.749]      // while-condition  =>  TRUE
[08:57:39.749]      // while "1"  (timeout="50000")
[08:57:39.750]      // while-condition  =>  TRUE
[08:57:39.750]      // while "1"  (timeout="50000")
[08:57:39.750]      // while-condition  =>  TRUE
[08:57:39.750]      // while "1"  (timeout="50000")
[08:57:39.750]      // while-condition  =>  TRUE
[08:57:39.750]      // while "1"  (timeout="50000")
[08:57:39.750]      // while-condition  =>  TRUE
[08:57:39.750]      // while "1"  (timeout="50000")
[08:57:39.751]      // while-condition  =>  TRUE
[08:57:39.751]      // while "1"  (timeout="50000")
[08:57:39.752]      // while-condition  =>  TRUE
[08:57:39.752]      // while "1"  (timeout="50000")
[08:57:39.752]      // while-condition  =>  TRUE
[08:57:39.752]      // while "1"  (timeout="50000")
[08:57:39.752]      // while-condition  =>  TRUE
[08:57:39.753]      // while "1"  (timeout="50000")
[08:57:39.753]      // while-condition  =>  TRUE
[08:57:39.753]      // while "1"  (timeout="50000")
[08:57:39.753]      // while-condition  =>  TRUE
[08:57:39.753]      // while "1"  (timeout="50000")
[08:57:39.753]      // while-condition  =>  TRUE
[08:57:39.753]      // while "1"  (timeout="50000")
[08:57:39.753]      // while-condition  =>  TRUE
[08:57:39.754]      // while "1"  (timeout="50000")
[08:57:39.754]      // while-condition  =>  TRUE
[08:57:39.754]      // while "1"  (timeout="50000")
[08:57:39.754]      // while-condition  =>  TRUE
[08:57:39.754]      // while "1"  (timeout="50000")
[08:57:39.755]      // while-condition  =>  TRUE
[08:57:39.755]      // while "1"  (timeout="50000")
[08:57:39.755]      // while-condition  =>  TRUE
[08:57:39.755]      // while "1"  (timeout="50000")
[08:57:39.755]      // while-condition  =>  TRUE
[08:57:39.755]      // while "1"  (timeout="50000")
[08:57:39.755]      // while-condition  =>  TRUE
[08:57:39.755]      // while "1"  (timeout="50000")
[08:57:39.756]      // while-condition  =>  TRUE
[08:57:39.756]      // while "1"  (timeout="50000")
[08:57:39.756]      // while-condition  =>  TRUE
[08:57:39.756]      // while "1"  (timeout="50000")
[08:57:39.757]      // while-condition  =>  TRUE
[08:57:39.757]      // while "1"  (timeout="50000")
[08:57:39.757]      // while-condition  =>  TRUE
[08:57:39.757]      // while "1"  (timeout="50000")
[08:57:39.758]      // while-condition  =>  TRUE
[08:57:39.758]      // while "1"  (timeout="50000")
[08:57:39.758]      // while-condition  =>  TRUE
[08:57:39.758]      // while "1"  (timeout="50000")
[08:57:39.758]      // while-condition  =>  TRUE
[08:57:39.759]      // while "1"  (timeout="50000")
[08:57:39.759]      // while-condition  =>  TRUE
[08:57:39.759]      // while "1"  (timeout="50000")
[08:57:39.759]      // while-condition  =>  TRUE
[08:57:39.760]      // while "1"  (timeout="50000")
[08:57:39.760]      // while-condition  =>  TRUE
[08:57:39.760]      // while "1"  (timeout="50000")
[08:57:39.760]      // while-condition  =>  TRUE
[08:57:39.761]      // while "1"  (timeout="50000")
[08:57:39.761]      // while-condition  =>  TRUE
[08:57:39.761]      // while "1"  (timeout="50000")
[08:57:39.761]      // while-condition  =>  TRUE
[08:57:39.761]      // while "1"  (timeout="50000")
[08:57:39.762]      // while-condition  =>  TRUE
[08:57:39.762]      // while "1"  (timeout="50000")
[08:57:39.762]      // while-condition  =>  TRUE
[08:57:39.762]      // while "1"  (timeout="50000")
[08:57:39.763]      // while-condition  =>  TRUE
[08:57:39.763]      // while "1"  (timeout="50000")
[08:57:39.763]      // while-condition  =>  TRUE
[08:57:39.763]      // while "1"  (timeout="50000")
[08:57:39.764]      // while-condition  =>  TRUE
[08:57:39.764]      // while "1"  (timeout="50000")
[08:57:39.764]      // while-condition  =>  TRUE
[08:57:39.764]      // while "1"  (timeout="50000")
[08:57:39.764]      // while-condition  =>  TRUE
[08:57:39.765]      // while "1"  (timeout="50000")
[08:57:39.765]      // while-condition  =>  TRUE
[08:57:39.765]      // while "1"  (timeout="50000")
[08:57:39.765]      // while-condition  =>  TRUE
[08:57:39.766]      // while "1"  (timeout="50000")
[08:57:39.766]      // while-condition  =>  TRUE
[08:57:39.766]      // while "1"  (timeout="50000")
[08:57:39.766]      // while-condition  =>  TRUE
[08:57:39.767]      // while "1"  (timeout="50000")
[08:57:39.767]      // while-condition  =>  TRUE
[08:57:39.767]      // while "1"  (timeout="50000")
[08:57:39.767]      // while-condition  =>  TRUE
[08:57:39.767]      // while "1"  (timeout="50000")
[08:57:39.768]      // while-condition  =>  TRUE
[08:57:39.768]      // while "1"  (timeout="50000")
[08:57:39.768]      // while-condition  =>  TRUE
[08:57:39.768]      // while "1"  (timeout="50000")
[08:57:39.769]      // while-condition  =>  TRUE
[08:57:39.769]      // while "1"  (timeout="50000")
[08:57:39.769]      // while-condition  =>  TRUE
[08:57:39.769]      // while "1"  (timeout="50000")
[08:57:39.770]      // while-condition  =>  TRUE
[08:57:39.770]      // while "1"  (timeout="50000")
[08:57:39.770]      // while-condition  =>  TRUE
[08:57:39.770]      // while "1"  (timeout="50000")
[08:57:39.770]      // while-condition  =>  TRUE
[08:57:39.771]      // while "1"  (timeout="50000")
[08:57:39.771]      // while-condition  =>  TRUE
[08:57:39.771]      // while "1"  (timeout="50000")
[08:57:39.771]      // while-condition  =>  TRUE
[08:57:39.773]      // while "1"  (timeout="50000")
[08:57:39.773]      // while-condition  =>  TRUE
[08:57:39.773]      // while "1"  (timeout="50000")
[08:57:39.773]      // while-condition  =>  TRUE
[08:57:39.774]      // while "1"  (timeout="50000")
[08:57:39.774]      // while-condition  =>  TRUE
[08:57:39.774]      // while "1"  (timeout="50000")
[08:57:39.774]      // while  =>  TIMEOUT
[08:57:39.775]      // end while "1"
[08:57:39.775]    </control>
[08:57:39.775]    <block atomic="false" info="">
[08:57:39.775]      DAP_SWJ_Pins(nReset, nReset, 0);
[08:57:39.777]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[08:57:39.778]    </block>
[08:57:39.778]    <control if="" while="1" timeout="10000" info="">
[08:57:39.778]      // while "1"  (timeout="10000")
[08:57:39.778]      // while-condition  =>  TRUE
[08:57:39.778]      // while "1"  (timeout="10000")
[08:57:39.778]      // while-condition  =>  TRUE
[08:57:39.779]      // while "1"  (timeout="10000")
[08:57:39.779]      // while-condition  =>  TRUE
[08:57:39.779]      // while "1"  (timeout="10000")
[08:57:39.779]      // while-condition  =>  TRUE
[08:57:39.780]      // while "1"  (timeout="10000")
[08:57:39.780]      // while-condition  =>  TRUE
[08:57:39.780]      // while "1"  (timeout="10000")
[08:57:39.780]      // while-condition  =>  TRUE
[08:57:39.781]      // while "1"  (timeout="10000")
[08:57:39.781]      // while-condition  =>  TRUE
[08:57:39.781]      // while "1"  (timeout="10000")
[08:57:39.781]      // while-condition  =>  TRUE
[08:57:39.781]      // while "1"  (timeout="10000")
[08:57:39.782]      // while-condition  =>  TRUE
[08:57:39.783]      // while "1"  (timeout="10000")
[08:57:39.783]      // while-condition  =>  TRUE
[08:57:39.783]      // while "1"  (timeout="10000")
[08:57:39.783]      // while-condition  =>  TRUE
[08:57:39.784]      // while "1"  (timeout="10000")
[08:57:39.784]      // while-condition  =>  TRUE
[08:57:39.784]      // while "1"  (timeout="10000")
[08:57:39.784]      // while-condition  =>  TRUE
[08:57:39.785]      // while "1"  (timeout="10000")
[08:57:39.785]      // while-condition  =>  TRUE
[08:57:39.785]      // while "1"  (timeout="10000")
[08:57:39.785]      // while-condition  =>  TRUE
[08:57:39.785]      // while "1"  (timeout="10000")
[08:57:39.786]      // while-condition  =>  TRUE
[08:57:39.786]      // while "1"  (timeout="10000")
[08:57:39.786]      // while-condition  =>  TRUE
[08:57:39.786]      // while "1"  (timeout="10000")
[08:57:39.786]      // while-condition  =>  TRUE
[08:57:39.786]      // while "1"  (timeout="10000")
[08:57:39.787]      // while-condition  =>  TRUE
[08:57:39.787]      // while "1"  (timeout="10000")
[08:57:39.787]      // while-condition  =>  TRUE
[08:57:39.787]      // while "1"  (timeout="10000")
[08:57:39.787]      // while-condition  =>  TRUE
[08:57:39.787]      // while "1"  (timeout="10000")
[08:57:39.788]      // while-condition  =>  TRUE
[08:57:39.788]      // while "1"  (timeout="10000")
[08:57:39.788]      // while-condition  =>  TRUE
[08:57:39.788]      // while "1"  (timeout="10000")
[08:57:39.788]      // while-condition  =>  TRUE
[08:57:39.789]      // while "1"  (timeout="10000")
[08:57:39.789]      // while-condition  =>  TRUE
[08:57:39.789]      // while "1"  (timeout="10000")
[08:57:39.789]      // while-condition  =>  TRUE
[08:57:39.789]      // while "1"  (timeout="10000")
[08:57:39.790]      // while-condition  =>  TRUE
[08:57:39.790]      // while "1"  (timeout="10000")
[08:57:39.790]      // while  =>  TIMEOUT
[08:57:39.790]      // end while "1"
[08:57:39.790]    </control>
[08:57:39.791]    <block atomic="true" info="">
[08:57:39.794]  
[08:57:39.794]  ! W001 : No atomic sequence support in debug unit
[08:57:39.794]  
[08:57:39.795]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[08:57:39.798]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[08:57:39.799]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[08:57:39.801]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[08:57:39.802]    </block>
[08:57:39.802]    <block atomic="false" info="">
[08:57:39.803]      __errorcontrol = 0x00000001;
[08:57:39.803]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[08:57:39.804]      ReadDP(0x0);
[08:57:39.806]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[08:57:39.806]      __errorcontrol = 0x00000000;
[08:57:39.807]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[08:57:39.807]    </block>
[08:57:39.808]  </sequence>
[08:57:39.808]  
[08:57:39.808]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[08:57:39.808]  
[08:57:39.809]  <debugvars>
[08:57:39.809]    // Pre-defined
[08:57:39.809]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:57:39.809]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:57:39.810]    __dp=0x00000000
[08:57:39.810]    __ap=0x00000000
[08:57:39.810]    __traceout=0x00000000      (Trace Disabled)
[08:57:39.811]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:57:39.811]    __FlashAddr=0x00000000
[08:57:39.811]    __FlashLen=0x00000000
[08:57:39.811]    __FlashArg=0x00000000
[08:57:39.812]    __FlashOp=0x00000000
[08:57:39.812]    __Result=0x00000000
[08:57:39.812]  </debugvars>
[08:57:39.813]  
[08:57:39.813]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[08:57:39.813]  </sequence>
[08:57:39.813]  
[08:57:39.818]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[08:57:39.818]  
[08:57:39.818]  <debugvars>
[08:57:39.819]    // Pre-defined
[08:57:39.820]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:57:39.820]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:57:39.821]    __dp=0x00000000
[08:57:39.821]    __ap=0x00000000
[08:57:39.821]    __traceout=0x00000000      (Trace Disabled)
[08:57:39.822]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:57:39.822]    __FlashAddr=0x00000000
[08:57:39.822]    __FlashLen=0x00000000
[08:57:39.822]    __FlashArg=0x00000000
[08:57:39.823]    __FlashOp=0x00000000
[08:57:39.823]    __Result=0x00000000
[08:57:39.824]  </debugvars>
[08:57:39.824]  
[08:57:39.824]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[08:57:39.824]    <block atomic="false" info="">
[08:57:39.825]      __var SW_DP_ABORT  = 0x0;
[08:57:39.825]        // -> [SW_DP_ABORT <= 0x00000000]
[08:57:39.825]      __var DP_CTRL_STAT = 0x4;
[08:57:39.826]        // -> [DP_CTRL_STAT <= 0x00000004]
[08:57:39.826]      __var DP_SELECT    = 0x8;
[08:57:39.826]        // -> [DP_SELECT <= 0x00000008]
[08:57:39.826]      __var powered_down = 0;
[08:57:39.827]        // -> [powered_down <= 0x00000000]
[08:57:39.827]      WriteDP(DP_SELECT, 0x00000000);
[08:57:39.829]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:57:39.829]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[08:57:39.831]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[08:57:39.831]        // -> [powered_down <= 0x00000001]
[08:57:39.832]    </block>
[08:57:39.832]    <control if="powered_down" while="" timeout="0" info="">
[08:57:39.832]      // if-block "powered_down"
[08:57:39.832]        // =>  TRUE
[08:57:39.833]      <block atomic="false" info="">
[08:57:39.833]        WriteDP(DP_CTRL_STAT, 0x50000000);
[08:57:39.835]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[08:57:39.835]      </block>
[08:57:39.836]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[08:57:39.836]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[08:57:39.838]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[08:57:39.838]        // while-condition  =>  FALSE
[08:57:39.839]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[08:57:39.839]      </control>
[08:57:39.839]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[08:57:39.839]        // if-block "(__protocol & 0xFFFF) == 1"
[08:57:39.840]          // =>  FALSE
[08:57:39.840]        // skip if-block "(__protocol & 0xFFFF) == 1"
[08:57:39.840]      </control>
[08:57:39.841]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[08:57:39.841]        // if-block "(__protocol & 0xFFFF) == 2"
[08:57:39.841]          // =>  TRUE
[08:57:39.841]        <block atomic="false" info="">
[08:57:39.842]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[08:57:39.844]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[08:57:39.845]          WriteDP(SW_DP_ABORT, 0x0000001E);
[08:57:39.846]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[08:57:39.846]        </block>
[08:57:39.847]        // end if-block "(__protocol & 0xFFFF) == 2"
[08:57:39.847]      </control>
[08:57:39.847]      // end if-block "powered_down"
[08:57:39.848]    </control>
[08:57:39.848]  </sequence>
[08:57:39.848]  
[08:57:39.952]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[08:57:39.952]  
[08:57:39.953]  <debugvars>
[08:57:39.953]    // Pre-defined
[08:57:39.954]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:57:39.955]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:57:39.955]    __dp=0x00000000
[08:57:39.956]    __ap=0x00000000
[08:57:39.957]    __traceout=0x00000000      (Trace Disabled)
[08:57:39.957]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:57:39.960]    __FlashAddr=0x00000000
[08:57:39.961]    __FlashLen=0x00000000
[08:57:39.962]    __FlashArg=0x00000000
[08:57:39.962]    __FlashOp=0x00000000
[08:57:39.963]    __Result=0x00000000
[08:57:39.963]  </debugvars>
[08:57:39.963]  
[08:57:39.964]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[08:57:39.966]    <block atomic="true" info="">
[08:57:39.975]  
[08:57:39.975]  ! W001 : No atomic sequence support in debug unit
[08:57:39.975]  
[08:57:39.998]      __var DP_R_IDCODE    = 0x0;
[08:57:39.999]        // -> [DP_R_IDCODE <= 0x00000000]
[08:57:40.002]      __var DP_W_ABORT    = 0x0;
[08:57:40.003]        // -> [DP_W_ABORT <= 0x00000000]
[08:57:40.004]      __var DP_CTRLSTAT = 0x4;
[08:57:40.004]        // -> [DP_CTRLSTAT <= 0x00000004]
[08:57:40.004]      __var DP_W_SELECT    = 0x8;
[08:57:40.005]        // -> [DP_W_SELECT <= 0x00000008]
[08:57:40.006]      __var AP_TAR		= 0x4;
[08:57:40.006]        // -> [AP_TAR <= 0x00000004]
[08:57:40.007]      __var AP_BD0		= 0x0;
[08:57:40.008]        // -> [AP_BD0 <= 0x00000000]
[08:57:40.009]      __var AP_BD1		= 0x4;
[08:57:40.009]        // -> [AP_BD1 <= 0x00000004]
[08:57:40.009]      __var AP_BD2		= 0x8;
[08:57:40.010]        // -> [AP_BD2 <= 0x00000008]
[08:57:40.011]      __var PCWithinFlash = 0;
[08:57:40.012]        // -> [PCWithinFlash <= 0x00000000]
[08:57:40.012]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[08:57:40.019]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.019]    </block>
[08:57:40.020]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[08:57:40.020]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[08:57:40.027]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.028]      // while-condition  =>  FALSE
[08:57:40.028]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[08:57:40.028]    </control>
[08:57:40.029]    <block atomic="true" info="">
[08:57:40.037]  
[08:57:40.037]  ! W001 : No atomic sequence support in debug unit
[08:57:40.037]  
[08:57:40.047]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:57:40.050]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:57:40.050]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[08:57:40.053]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.054]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[08:57:40.056]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[08:57:40.057]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[08:57:40.061]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.062]    </block>
[08:57:40.062]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[08:57:40.063]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.065]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.065]      // while-condition  =>  TRUE
[08:57:40.066]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.069]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.069]      // while-condition  =>  TRUE
[08:57:40.070]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.073]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.074]      // while-condition  =>  TRUE
[08:57:40.074]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.077]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.078]      // while-condition  =>  TRUE
[08:57:40.078]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.081]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.081]      // while-condition  =>  TRUE
[08:57:40.082]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.085]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.086]      // while-condition  =>  TRUE
[08:57:40.086]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.089]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.089]      // while-condition  =>  TRUE
[08:57:40.090]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.093]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.093]      // while-condition  =>  TRUE
[08:57:40.094]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.096]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.096]      // while-condition  =>  TRUE
[08:57:40.097]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.100]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.100]      // while-condition  =>  TRUE
[08:57:40.101]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.104]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.104]      // while-condition  =>  TRUE
[08:57:40.105]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.108]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.109]      // while-condition  =>  TRUE
[08:57:40.109]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.112]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.113]      // while-condition  =>  TRUE
[08:57:40.113]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.116]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.116]      // while-condition  =>  TRUE
[08:57:40.118]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.120]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.121]      // while-condition  =>  TRUE
[08:57:40.121]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.124]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.125]      // while-condition  =>  TRUE
[08:57:40.125]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.128]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.129]      // while-condition  =>  TRUE
[08:57:40.129]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.132]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.132]      // while-condition  =>  TRUE
[08:57:40.133]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.136]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.137]      // while-condition  =>  TRUE
[08:57:40.137]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.140]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.141]      // while-condition  =>  TRUE
[08:57:40.142]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.144]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.144]      // while-condition  =>  TRUE
[08:57:40.145]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.148]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.148]      // while-condition  =>  TRUE
[08:57:40.149]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.152]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.152]      // while-condition  =>  TRUE
[08:57:40.153]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.156]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.156]      // while-condition  =>  TRUE
[08:57:40.157]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.160]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.161]      // while-condition  =>  TRUE
[08:57:40.161]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.164]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.164]      // while-condition  =>  TRUE
[08:57:40.165]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.166]      // while  =>  TIMEOUT
[08:57:40.166]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[08:57:40.167]    </control>
[08:57:40.167]    <block atomic="false" info="">
[08:57:40.168]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[08:57:40.170]        // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.170]        // -> [PCWithinFlash <= 0x00000000]
[08:57:40.171]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:57:40.173]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:57:40.174]    </block>
[08:57:40.174]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[08:57:40.175]      // if-block "PCWithinFlash == 0"
[08:57:40.175]        // =>  TRUE
[08:57:40.176]      // end if-block "PCWithinFlash == 0"
[08:57:40.176]    </control>
[08:57:40.177]  </sequence>
[08:57:40.178]  
[08:57:40.224]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[08:57:40.224]  
[08:57:40.225]  <debugvars>
[08:57:40.226]    // Pre-defined
[08:57:40.227]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:57:40.227]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:57:40.228]    __dp=0x00000000
[08:57:40.228]    __ap=0x00000000
[08:57:40.229]    __traceout=0x00000000      (Trace Disabled)
[08:57:40.230]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:57:40.230]    __FlashAddr=0x00000000
[08:57:40.230]    __FlashLen=0x00000000
[08:57:40.232]    __FlashArg=0x00000000
[08:57:40.232]    __FlashOp=0x00000000
[08:57:40.233]    __Result=0x00000000
[08:57:40.233]  </debugvars>
[08:57:40.233]  
[08:57:40.234]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[08:57:40.234]    <block atomic="false" info="">
[08:57:40.235]    </block>
[08:57:40.235]  </sequence>
[08:57:40.235]  
[08:57:40.239]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[08:57:40.239]  
[08:57:40.240]  <debugvars>
[08:57:40.240]    // Pre-defined
[08:57:40.241]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:57:40.241]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:57:40.241]    __dp=0x00000000
[08:57:40.242]    __ap=0x00000000
[08:57:40.242]    __traceout=0x00000000      (Trace Disabled)
[08:57:40.242]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:57:40.243]    __FlashAddr=0x00000000
[08:57:40.243]    __FlashLen=0x00000000
[08:57:40.243]    __FlashArg=0x00000000
[08:57:40.243]    __FlashOp=0x00000000
[08:57:40.244]    __Result=0x00000000
[08:57:40.244]  </debugvars>
[08:57:40.244]  
[08:57:40.245]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[08:57:40.245]    <block atomic="false" info="">
[08:57:40.245]      __var nReset      = 0x80;
[08:57:40.245]        // -> [nReset <= 0x00000080]
[08:57:40.246]      DAP_SWJ_Pins(0x00, nReset, 0);
[08:57:40.248]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[08:57:40.248]    </block>
[08:57:40.248]    <control if="" while="1" timeout="50000" info="">
[08:57:40.249]      // while "1"  (timeout="50000")
[08:57:40.249]      // while-condition  =>  TRUE
[08:57:40.250]      // while "1"  (timeout="50000")
[08:57:40.250]      // while-condition  =>  TRUE
[08:57:40.250]      // while "1"  (timeout="50000")
[08:57:40.250]      // while-condition  =>  TRUE
[08:57:40.251]      // while "1"  (timeout="50000")
[08:57:40.251]      // while-condition  =>  TRUE
[08:57:40.251]      // while "1"  (timeout="50000")
[08:57:40.251]      // while-condition  =>  TRUE
[08:57:40.252]      // while "1"  (timeout="50000")
[08:57:40.252]      // while-condition  =>  TRUE
[08:57:40.252]      // while "1"  (timeout="50000")
[08:57:40.252]      // while-condition  =>  TRUE
[08:57:40.253]      // while "1"  (timeout="50000")
[08:57:40.253]      // while-condition  =>  TRUE
[08:57:40.253]      // while "1"  (timeout="50000")
[08:57:40.253]      // while-condition  =>  TRUE
[08:57:40.254]      // while "1"  (timeout="50000")
[08:57:40.254]      // while-condition  =>  TRUE
[08:57:40.254]      // while "1"  (timeout="50000")
[08:57:40.254]      // while-condition  =>  TRUE
[08:57:40.255]      // while "1"  (timeout="50000")
[08:57:40.255]      // while-condition  =>  TRUE
[08:57:40.255]      // while "1"  (timeout="50000")
[08:57:40.255]      // while-condition  =>  TRUE
[08:57:40.255]      // while "1"  (timeout="50000")
[08:57:40.256]      // while-condition  =>  TRUE
[08:57:40.256]      // while "1"  (timeout="50000")
[08:57:40.256]      // while-condition  =>  TRUE
[08:57:40.256]      // while "1"  (timeout="50000")
[08:57:40.256]      // while-condition  =>  TRUE
[08:57:40.257]      // while "1"  (timeout="50000")
[08:57:40.257]      // while-condition  =>  TRUE
[08:57:40.257]      // while "1"  (timeout="50000")
[08:57:40.257]      // while-condition  =>  TRUE
[08:57:40.257]      // while "1"  (timeout="50000")
[08:57:40.258]      // while-condition  =>  TRUE
[08:57:40.258]      // while "1"  (timeout="50000")
[08:57:40.258]      // while-condition  =>  TRUE
[08:57:40.258]      // while "1"  (timeout="50000")
[08:57:40.258]      // while-condition  =>  TRUE
[08:57:40.259]      // while "1"  (timeout="50000")
[08:57:40.259]      // while-condition  =>  TRUE
[08:57:40.259]      // while "1"  (timeout="50000")
[08:57:40.259]      // while-condition  =>  TRUE
[08:57:40.259]      // while "1"  (timeout="50000")
[08:57:40.260]      // while-condition  =>  TRUE
[08:57:40.260]      // while "1"  (timeout="50000")
[08:57:40.260]      // while-condition  =>  TRUE
[08:57:40.260]      // while "1"  (timeout="50000")
[08:57:40.261]      // while-condition  =>  TRUE
[08:57:40.261]      // while "1"  (timeout="50000")
[08:57:40.261]      // while-condition  =>  TRUE
[08:57:40.261]      // while "1"  (timeout="50000")
[08:57:40.262]      // while-condition  =>  TRUE
[08:57:40.262]      // while "1"  (timeout="50000")
[08:57:40.262]      // while-condition  =>  TRUE
[08:57:40.262]      // while "1"  (timeout="50000")
[08:57:40.263]      // while-condition  =>  TRUE
[08:57:40.263]      // while "1"  (timeout="50000")
[08:57:40.263]      // while-condition  =>  TRUE
[08:57:40.263]      // while "1"  (timeout="50000")
[08:57:40.264]      // while-condition  =>  TRUE
[08:57:40.264]      // while "1"  (timeout="50000")
[08:57:40.264]      // while-condition  =>  TRUE
[08:57:40.264]      // while "1"  (timeout="50000")
[08:57:40.264]      // while-condition  =>  TRUE
[08:57:40.265]      // while "1"  (timeout="50000")
[08:57:40.265]      // while-condition  =>  TRUE
[08:57:40.265]      // while "1"  (timeout="50000")
[08:57:40.265]      // while-condition  =>  TRUE
[08:57:40.265]      // while "1"  (timeout="50000")
[08:57:40.266]      // while-condition  =>  TRUE
[08:57:40.266]      // while "1"  (timeout="50000")
[08:57:40.266]      // while-condition  =>  TRUE
[08:57:40.266]      // while "1"  (timeout="50000")
[08:57:40.266]      // while-condition  =>  TRUE
[08:57:40.266]      // while "1"  (timeout="50000")
[08:57:40.266]      // while-condition  =>  TRUE
[08:57:40.266]      // while "1"  (timeout="50000")
[08:57:40.267]      // while-condition  =>  TRUE
[08:57:40.267]      // while "1"  (timeout="50000")
[08:57:40.267]      // while-condition  =>  TRUE
[08:57:40.268]      // while "1"  (timeout="50000")
[08:57:40.268]      // while-condition  =>  TRUE
[08:57:40.268]      // while "1"  (timeout="50000")
[08:57:40.268]      // while-condition  =>  TRUE
[08:57:40.268]      // while "1"  (timeout="50000")
[08:57:40.269]      // while-condition  =>  TRUE
[08:57:40.269]      // while "1"  (timeout="50000")
[08:57:40.269]      // while-condition  =>  TRUE
[08:57:40.269]      // while "1"  (timeout="50000")
[08:57:40.269]      // while-condition  =>  TRUE
[08:57:40.269]      // while "1"  (timeout="50000")
[08:57:40.270]      // while-condition  =>  TRUE
[08:57:40.270]      // while "1"  (timeout="50000")
[08:57:40.270]      // while-condition  =>  TRUE
[08:57:40.270]      // while "1"  (timeout="50000")
[08:57:40.270]      // while-condition  =>  TRUE
[08:57:40.271]      // while "1"  (timeout="50000")
[08:57:40.271]      // while-condition  =>  TRUE
[08:57:40.271]      // while "1"  (timeout="50000")
[08:57:40.271]      // while-condition  =>  TRUE
[08:57:40.271]      // while "1"  (timeout="50000")
[08:57:40.271]      // while-condition  =>  TRUE
[08:57:40.272]      // while "1"  (timeout="50000")
[08:57:40.272]      // while-condition  =>  TRUE
[08:57:40.272]      // while "1"  (timeout="50000")
[08:57:40.272]      // while-condition  =>  TRUE
[08:57:40.272]      // while "1"  (timeout="50000")
[08:57:40.273]      // while-condition  =>  TRUE
[08:57:40.273]      // while "1"  (timeout="50000")
[08:57:40.273]      // while-condition  =>  TRUE
[08:57:40.273]      // while "1"  (timeout="50000")
[08:57:40.274]      // while-condition  =>  TRUE
[08:57:40.274]      // while "1"  (timeout="50000")
[08:57:40.274]      // while-condition  =>  TRUE
[08:57:40.274]      // while "1"  (timeout="50000")
[08:57:40.274]      // while-condition  =>  TRUE
[08:57:40.275]      // while "1"  (timeout="50000")
[08:57:40.275]      // while-condition  =>  TRUE
[08:57:40.275]      // while "1"  (timeout="50000")
[08:57:40.275]      // while-condition  =>  TRUE
[08:57:40.276]      // while "1"  (timeout="50000")
[08:57:40.276]      // while-condition  =>  TRUE
[08:57:40.276]      // while "1"  (timeout="50000")
[08:57:40.276]      // while-condition  =>  TRUE
[08:57:40.277]      // while "1"  (timeout="50000")
[08:57:40.277]      // while-condition  =>  TRUE
[08:57:40.277]      // while "1"  (timeout="50000")
[08:57:40.278]      // while-condition  =>  TRUE
[08:57:40.278]      // while "1"  (timeout="50000")
[08:57:40.278]      // while-condition  =>  TRUE
[08:57:40.278]      // while "1"  (timeout="50000")
[08:57:40.279]      // while-condition  =>  TRUE
[08:57:40.279]      // while "1"  (timeout="50000")
[08:57:40.279]      // while-condition  =>  TRUE
[08:57:40.280]      // while "1"  (timeout="50000")
[08:57:40.280]      // while-condition  =>  TRUE
[08:57:40.280]      // while "1"  (timeout="50000")
[08:57:40.280]      // while-condition  =>  TRUE
[08:57:40.281]      // while "1"  (timeout="50000")
[08:57:40.281]      // while-condition  =>  TRUE
[08:57:40.281]      // while "1"  (timeout="50000")
[08:57:40.281]      // while-condition  =>  TRUE
[08:57:40.282]      // while "1"  (timeout="50000")
[08:57:40.282]      // while-condition  =>  TRUE
[08:57:40.282]      // while "1"  (timeout="50000")
[08:57:40.283]      // while-condition  =>  TRUE
[08:57:40.283]      // while "1"  (timeout="50000")
[08:57:40.283]      // while-condition  =>  TRUE
[08:57:40.284]      // while "1"  (timeout="50000")
[08:57:40.284]      // while-condition  =>  TRUE
[08:57:40.285]      // while "1"  (timeout="50000")
[08:57:40.285]      // while-condition  =>  TRUE
[08:57:40.285]      // while "1"  (timeout="50000")
[08:57:40.285]      // while-condition  =>  TRUE
[08:57:40.286]      // while "1"  (timeout="50000")
[08:57:40.286]      // while-condition  =>  TRUE
[08:57:40.286]      // while "1"  (timeout="50000")
[08:57:40.286]      // while-condition  =>  TRUE
[08:57:40.287]      // while "1"  (timeout="50000")
[08:57:40.287]      // while-condition  =>  TRUE
[08:57:40.287]      // while "1"  (timeout="50000")
[08:57:40.287]      // while-condition  =>  TRUE
[08:57:40.288]      // while "1"  (timeout="50000")
[08:57:40.288]      // while-condition  =>  TRUE
[08:57:40.288]      // while "1"  (timeout="50000")
[08:57:40.288]      // while-condition  =>  TRUE
[08:57:40.289]      // while "1"  (timeout="50000")
[08:57:40.289]      // while-condition  =>  TRUE
[08:57:40.289]      // while "1"  (timeout="50000")
[08:57:40.289]      // while-condition  =>  TRUE
[08:57:40.290]      // while "1"  (timeout="50000")
[08:57:40.290]      // while-condition  =>  TRUE
[08:57:40.290]      // while "1"  (timeout="50000")
[08:57:40.290]      // while-condition  =>  TRUE
[08:57:40.290]      // while "1"  (timeout="50000")
[08:57:40.290]      // while-condition  =>  TRUE
[08:57:40.291]      // while "1"  (timeout="50000")
[08:57:40.291]      // while-condition  =>  TRUE
[08:57:40.291]      // while "1"  (timeout="50000")
[08:57:40.291]      // while-condition  =>  TRUE
[08:57:40.291]      // while "1"  (timeout="50000")
[08:57:40.292]      // while-condition  =>  TRUE
[08:57:40.292]      // while "1"  (timeout="50000")
[08:57:40.292]      // while-condition  =>  TRUE
[08:57:40.292]      // while "1"  (timeout="50000")
[08:57:40.292]      // while-condition  =>  TRUE
[08:57:40.293]      // while "1"  (timeout="50000")
[08:57:40.293]      // while-condition  =>  TRUE
[08:57:40.293]      // while "1"  (timeout="50000")
[08:57:40.293]      // while-condition  =>  TRUE
[08:57:40.293]      // while "1"  (timeout="50000")
[08:57:40.294]      // while-condition  =>  TRUE
[08:57:40.294]      // while "1"  (timeout="50000")
[08:57:40.294]      // while-condition  =>  TRUE
[08:57:40.294]      // while "1"  (timeout="50000")
[08:57:40.294]      // while-condition  =>  TRUE
[08:57:40.294]      // while "1"  (timeout="50000")
[08:57:40.295]      // while-condition  =>  TRUE
[08:57:40.295]      // while "1"  (timeout="50000")
[08:57:40.295]      // while-condition  =>  TRUE
[08:57:40.295]      // while "1"  (timeout="50000")
[08:57:40.295]      // while-condition  =>  TRUE
[08:57:40.296]      // while "1"  (timeout="50000")
[08:57:40.296]      // while-condition  =>  TRUE
[08:57:40.296]      // while "1"  (timeout="50000")
[08:57:40.296]      // while-condition  =>  TRUE
[08:57:40.296]      // while "1"  (timeout="50000")
[08:57:40.296]      // while-condition  =>  TRUE
[08:57:40.297]      // while "1"  (timeout="50000")
[08:57:40.297]      // while-condition  =>  TRUE
[08:57:40.297]      // while "1"  (timeout="50000")
[08:57:40.297]      // while-condition  =>  TRUE
[08:57:40.297]      // while "1"  (timeout="50000")
[08:57:40.298]      // while-condition  =>  TRUE
[08:57:40.298]      // while "1"  (timeout="50000")
[08:57:40.298]      // while-condition  =>  TRUE
[08:57:40.298]      // while "1"  (timeout="50000")
[08:57:40.299]      // while-condition  =>  TRUE
[08:57:40.299]      // while "1"  (timeout="50000")
[08:57:40.299]      // while-condition  =>  TRUE
[08:57:40.299]      // while "1"  (timeout="50000")
[08:57:40.299]      // while-condition  =>  TRUE
[08:57:40.300]      // while "1"  (timeout="50000")
[08:57:40.300]      // while-condition  =>  TRUE
[08:57:40.300]      // while "1"  (timeout="50000")
[08:57:40.300]      // while-condition  =>  TRUE
[08:57:40.300]      // while "1"  (timeout="50000")
[08:57:40.301]      // while-condition  =>  TRUE
[08:57:40.301]      // while "1"  (timeout="50000")
[08:57:40.301]      // while-condition  =>  TRUE
[08:57:40.301]      // while "1"  (timeout="50000")
[08:57:40.301]      // while-condition  =>  TRUE
[08:57:40.301]      // while "1"  (timeout="50000")
[08:57:40.302]      // while-condition  =>  TRUE
[08:57:40.302]      // while "1"  (timeout="50000")
[08:57:40.302]      // while-condition  =>  TRUE
[08:57:40.302]      // while "1"  (timeout="50000")
[08:57:40.302]      // while-condition  =>  TRUE
[08:57:40.303]      // while "1"  (timeout="50000")
[08:57:40.303]      // while-condition  =>  TRUE
[08:57:40.303]      // while "1"  (timeout="50000")
[08:57:40.303]      // while-condition  =>  TRUE
[08:57:40.303]      // while "1"  (timeout="50000")
[08:57:40.303]      // while-condition  =>  TRUE
[08:57:40.304]      // while "1"  (timeout="50000")
[08:57:40.304]      // while-condition  =>  TRUE
[08:57:40.304]      // while "1"  (timeout="50000")
[08:57:40.304]      // while-condition  =>  TRUE
[08:57:40.305]      // while "1"  (timeout="50000")
[08:57:40.305]      // while-condition  =>  TRUE
[08:57:40.305]      // while "1"  (timeout="50000")
[08:57:40.305]      // while-condition  =>  TRUE
[08:57:40.305]      // while "1"  (timeout="50000")
[08:57:40.306]      // while-condition  =>  TRUE
[08:57:40.306]      // while "1"  (timeout="50000")
[08:57:40.306]      // while  =>  TIMEOUT
[08:57:40.306]      // end while "1"
[08:57:40.306]    </control>
[08:57:40.306]    <block atomic="false" info="">
[08:57:40.306]      DAP_SWJ_Pins(nReset, nReset, 0);
[08:57:40.309]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[08:57:40.309]    </block>
[08:57:40.310]    <control if="" while="1" timeout="10000" info="">
[08:57:40.310]      // while "1"  (timeout="10000")
[08:57:40.310]      // while-condition  =>  TRUE
[08:57:40.310]      // while "1"  (timeout="10000")
[08:57:40.310]      // while-condition  =>  TRUE
[08:57:40.311]      // while "1"  (timeout="10000")
[08:57:40.311]      // while-condition  =>  TRUE
[08:57:40.311]      // while "1"  (timeout="10000")
[08:57:40.311]      // while-condition  =>  TRUE
[08:57:40.312]      // while "1"  (timeout="10000")
[08:57:40.312]      // while-condition  =>  TRUE
[08:57:40.312]      // while "1"  (timeout="10000")
[08:57:40.313]      // while-condition  =>  TRUE
[08:57:40.313]      // while "1"  (timeout="10000")
[08:57:40.313]      // while-condition  =>  TRUE
[08:57:40.313]      // while "1"  (timeout="10000")
[08:57:40.314]      // while-condition  =>  TRUE
[08:57:40.314]      // while "1"  (timeout="10000")
[08:57:40.314]      // while-condition  =>  TRUE
[08:57:40.314]      // while "1"  (timeout="10000")
[08:57:40.315]      // while-condition  =>  TRUE
[08:57:40.316]      // while "1"  (timeout="10000")
[08:57:40.316]      // while-condition  =>  TRUE
[08:57:40.316]      // while "1"  (timeout="10000")
[08:57:40.316]      // while-condition  =>  TRUE
[08:57:40.317]      // while "1"  (timeout="10000")
[08:57:40.317]      // while-condition  =>  TRUE
[08:57:40.317]      // while "1"  (timeout="10000")
[08:57:40.317]      // while-condition  =>  TRUE
[08:57:40.318]      // while "1"  (timeout="10000")
[08:57:40.318]      // while-condition  =>  TRUE
[08:57:40.318]      // while "1"  (timeout="10000")
[08:57:40.318]      // while-condition  =>  TRUE
[08:57:40.318]      // while "1"  (timeout="10000")
[08:57:40.319]      // while-condition  =>  TRUE
[08:57:40.319]      // while "1"  (timeout="10000")
[08:57:40.319]      // while-condition  =>  TRUE
[08:57:40.319]      // while "1"  (timeout="10000")
[08:57:40.320]      // while-condition  =>  TRUE
[08:57:40.320]      // while "1"  (timeout="10000")
[08:57:40.320]      // while-condition  =>  TRUE
[08:57:40.320]      // while "1"  (timeout="10000")
[08:57:40.321]      // while-condition  =>  TRUE
[08:57:40.321]      // while "1"  (timeout="10000")
[08:57:40.321]      // while  =>  TIMEOUT
[08:57:40.321]      // end while "1"
[08:57:40.321]    </control>
[08:57:40.322]    <block atomic="true" info="">
[08:57:40.324]  
[08:57:40.324]  ! W001 : No atomic sequence support in debug unit
[08:57:40.324]  
[08:57:40.326]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[08:57:40.328]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[08:57:40.329]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[08:57:40.331]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[08:57:40.332]    </block>
[08:57:40.332]    <block atomic="false" info="">
[08:57:40.333]      __errorcontrol = 0x00000001;
[08:57:40.333]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[08:57:40.334]      ReadDP(0x0);
[08:57:40.336]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[08:57:40.337]      __errorcontrol = 0x00000000;
[08:57:40.337]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[08:57:40.338]    </block>
[08:57:40.338]  </sequence>
[08:57:40.339]  
[08:57:40.343]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[08:57:40.343]  
[08:57:40.344]  <debugvars>
[08:57:40.344]    // Pre-defined
[08:57:40.345]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:57:40.346]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:57:40.346]    __dp=0x00000000
[08:57:40.346]    __ap=0x00000000
[08:57:40.347]    __traceout=0x00000000      (Trace Disabled)
[08:57:40.347]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:57:40.348]    __FlashAddr=0x00000000
[08:57:40.348]    __FlashLen=0x00000000
[08:57:40.349]    __FlashArg=0x00000000
[08:57:40.350]    __FlashOp=0x00000000
[08:57:40.350]    __Result=0x00000000
[08:57:40.351]  </debugvars>
[08:57:40.351]  
[08:57:40.352]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[08:57:40.353]    <block atomic="false" info="">
[08:57:40.353]    </block>
[08:57:40.354]  </sequence>
[08:57:40.354]  
[08:57:40.589]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[08:57:40.589]  
[08:57:40.589]  <debugvars>
[08:57:40.590]    // Pre-defined
[08:57:40.591]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:57:40.592]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:57:40.592]    __dp=0x00000000
[08:57:40.593]    __ap=0x00000000
[08:57:40.594]    __traceout=0x00000000      (Trace Disabled)
[08:57:40.594]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:57:40.595]    __FlashAddr=0x00000000
[08:57:40.595]    __FlashLen=0x00000000
[08:57:40.596]    __FlashArg=0x00000000
[08:57:40.597]    __FlashOp=0x00000000
[08:57:40.597]    __Result=0x00000000
[08:57:40.598]  </debugvars>
[08:57:40.598]  
[08:57:40.598]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[08:57:40.599]    <block atomic="false" info="">
[08:57:40.599]      Sequence("ResetHardware");
[08:57:40.599]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[08:57:40.600]          <block atomic="false" info="">
[08:57:40.600]            __var nReset      = 0x80;
[08:57:40.600]              // -> [nReset <= 0x00000080]
[08:57:40.601]            DAP_SWJ_Pins(0x00, nReset, 0);
[08:57:40.603]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[08:57:40.604]          </block>
[08:57:40.604]          <control if="" while="1" timeout="50000" info="">
[08:57:40.605]            // while "1"  (timeout="50000")
[08:57:40.605]            // while-condition  =>  TRUE
[08:57:40.606]            // while "1"  (timeout="50000")
[08:57:40.606]            // while-condition  =>  TRUE
[08:57:40.606]            // while "1"  (timeout="50000")
[08:57:40.607]            // while-condition  =>  TRUE
[08:57:40.607]            // while "1"  (timeout="50000")
[08:57:40.607]            // while-condition  =>  TRUE
[08:57:40.607]            // while "1"  (timeout="50000")
[08:57:40.608]            // while-condition  =>  TRUE
[08:57:40.608]            // while "1"  (timeout="50000")
[08:57:40.608]            // while-condition  =>  TRUE
[08:57:40.609]            // while "1"  (timeout="50000")
[08:57:40.609]            // while-condition  =>  TRUE
[08:57:40.609]            // while "1"  (timeout="50000")
[08:57:40.609]            // while-condition  =>  TRUE
[08:57:40.610]            // while "1"  (timeout="50000")
[08:57:40.610]            // while-condition  =>  TRUE
[08:57:40.610]            // while "1"  (timeout="50000")
[08:57:40.610]            // while-condition  =>  TRUE
[08:57:40.611]            // while "1"  (timeout="50000")
[08:57:40.611]            // while-condition  =>  TRUE
[08:57:40.611]            // while "1"  (timeout="50000")
[08:57:40.611]            // while-condition  =>  TRUE
[08:57:40.612]            // while "1"  (timeout="50000")
[08:57:40.612]            // while-condition  =>  TRUE
[08:57:40.612]            // while "1"  (timeout="50000")
[08:57:40.612]            // while-condition  =>  TRUE
[08:57:40.612]            // while "1"  (timeout="50000")
[08:57:40.613]            // while-condition  =>  TRUE
[08:57:40.613]            // while "1"  (timeout="50000")
[08:57:40.613]            // while-condition  =>  TRUE
[08:57:40.613]            // while "1"  (timeout="50000")
[08:57:40.614]            // while-condition  =>  TRUE
[08:57:40.614]            // while "1"  (timeout="50000")
[08:57:40.614]            // while-condition  =>  TRUE
[08:57:40.614]            // while "1"  (timeout="50000")
[08:57:40.614]            // while-condition  =>  TRUE
[08:57:40.615]            // while "1"  (timeout="50000")
[08:57:40.615]            // while-condition  =>  TRUE
[08:57:40.615]            // while "1"  (timeout="50000")
[08:57:40.615]            // while-condition  =>  TRUE
[08:57:40.615]            // while "1"  (timeout="50000")
[08:57:40.616]            // while-condition  =>  TRUE
[08:57:40.616]            // while "1"  (timeout="50000")
[08:57:40.616]            // while-condition  =>  TRUE
[08:57:40.616]            // while "1"  (timeout="50000")
[08:57:40.616]            // while-condition  =>  TRUE
[08:57:40.616]            // while "1"  (timeout="50000")
[08:57:40.617]            // while-condition  =>  TRUE
[08:57:40.617]            // while "1"  (timeout="50000")
[08:57:40.617]            // while-condition  =>  TRUE
[08:57:40.617]            // while "1"  (timeout="50000")
[08:57:40.618]            // while-condition  =>  TRUE
[08:57:40.618]            // while "1"  (timeout="50000")
[08:57:40.618]            // while-condition  =>  TRUE
[08:57:40.618]            // while "1"  (timeout="50000")
[08:57:40.618]            // while-condition  =>  TRUE
[08:57:40.619]            // while "1"  (timeout="50000")
[08:57:40.619]            // while-condition  =>  TRUE
[08:57:40.619]            // while "1"  (timeout="50000")
[08:57:40.619]            // while-condition  =>  TRUE
[08:57:40.619]            // while "1"  (timeout="50000")
[08:57:40.620]            // while-condition  =>  TRUE
[08:57:40.620]            // while "1"  (timeout="50000")
[08:57:40.620]            // while-condition  =>  TRUE
[08:57:40.620]            // while "1"  (timeout="50000")
[08:57:40.620]            // while-condition  =>  TRUE
[08:57:40.620]            // while "1"  (timeout="50000")
[08:57:40.621]            // while-condition  =>  TRUE
[08:57:40.621]            // while "1"  (timeout="50000")
[08:57:40.621]            // while-condition  =>  TRUE
[08:57:40.621]            // while "1"  (timeout="50000")
[08:57:40.621]            // while-condition  =>  TRUE
[08:57:40.622]            // while "1"  (timeout="50000")
[08:57:40.622]            // while-condition  =>  TRUE
[08:57:40.622]            // while "1"  (timeout="50000")
[08:57:40.622]            // while-condition  =>  TRUE
[08:57:40.622]            // while "1"  (timeout="50000")
[08:57:40.623]            // while-condition  =>  TRUE
[08:57:40.623]            // while "1"  (timeout="50000")
[08:57:40.623]            // while-condition  =>  TRUE
[08:57:40.623]            // while "1"  (timeout="50000")
[08:57:40.623]            // while-condition  =>  TRUE
[08:57:40.624]            // while "1"  (timeout="50000")
[08:57:40.624]            // while-condition  =>  TRUE
[08:57:40.624]            // while "1"  (timeout="50000")
[08:57:40.624]            // while-condition  =>  TRUE
[08:57:40.624]            // while "1"  (timeout="50000")
[08:57:40.624]            // while-condition  =>  TRUE
[08:57:40.625]            // while "1"  (timeout="50000")
[08:57:40.625]            // while-condition  =>  TRUE
[08:57:40.625]            // while "1"  (timeout="50000")
[08:57:40.625]            // while-condition  =>  TRUE
[08:57:40.625]            // while "1"  (timeout="50000")
[08:57:40.625]            // while-condition  =>  TRUE
[08:57:40.626]            // while "1"  (timeout="50000")
[08:57:40.626]            // while-condition  =>  TRUE
[08:57:40.626]            // while "1"  (timeout="50000")
[08:57:40.626]            // while-condition  =>  TRUE
[08:57:40.626]            // while "1"  (timeout="50000")
[08:57:40.627]            // while-condition  =>  TRUE
[08:57:40.627]            // while "1"  (timeout="50000")
[08:57:40.627]            // while-condition  =>  TRUE
[08:57:40.627]            // while "1"  (timeout="50000")
[08:57:40.627]            // while-condition  =>  TRUE
[08:57:40.627]            // while "1"  (timeout="50000")
[08:57:40.628]            // while-condition  =>  TRUE
[08:57:40.628]            // while "1"  (timeout="50000")
[08:57:40.628]            // while-condition  =>  TRUE
[08:57:40.629]            // while "1"  (timeout="50000")
[08:57:40.629]            // while-condition  =>  TRUE
[08:57:40.629]            // while "1"  (timeout="50000")
[08:57:40.629]            // while-condition  =>  TRUE
[08:57:40.629]            // while "1"  (timeout="50000")
[08:57:40.630]            // while-condition  =>  TRUE
[08:57:40.630]            // while "1"  (timeout="50000")
[08:57:40.630]            // while-condition  =>  TRUE
[08:57:40.630]            // while "1"  (timeout="50000")
[08:57:40.630]            // while-condition  =>  TRUE
[08:57:40.631]            // while "1"  (timeout="50000")
[08:57:40.631]            // while-condition  =>  TRUE
[08:57:40.631]            // while "1"  (timeout="50000")
[08:57:40.631]            // while-condition  =>  TRUE
[08:57:40.631]            // while "1"  (timeout="50000")
[08:57:40.631]            // while-condition  =>  TRUE
[08:57:40.632]            // while "1"  (timeout="50000")
[08:57:40.632]            // while-condition  =>  TRUE
[08:57:40.632]            // while "1"  (timeout="50000")
[08:57:40.632]            // while-condition  =>  TRUE
[08:57:40.632]            // while "1"  (timeout="50000")
[08:57:40.633]            // while-condition  =>  TRUE
[08:57:40.633]            // while "1"  (timeout="50000")
[08:57:40.633]            // while-condition  =>  TRUE
[08:57:40.633]            // while "1"  (timeout="50000")
[08:57:40.633]            // while-condition  =>  TRUE
[08:57:40.634]            // while "1"  (timeout="50000")
[08:57:40.634]            // while-condition  =>  TRUE
[08:57:40.634]            // while "1"  (timeout="50000")
[08:57:40.634]            // while-condition  =>  TRUE
[08:57:40.634]            // while "1"  (timeout="50000")
[08:57:40.635]            // while-condition  =>  TRUE
[08:57:40.635]            // while "1"  (timeout="50000")
[08:57:40.635]            // while-condition  =>  TRUE
[08:57:40.635]            // while "1"  (timeout="50000")
[08:57:40.635]            // while-condition  =>  TRUE
[08:57:40.636]            // while "1"  (timeout="50000")
[08:57:40.636]            // while-condition  =>  TRUE
[08:57:40.636]            // while "1"  (timeout="50000")
[08:57:40.636]            // while-condition  =>  TRUE
[08:57:40.636]            // while "1"  (timeout="50000")
[08:57:40.636]            // while-condition  =>  TRUE
[08:57:40.637]            // while "1"  (timeout="50000")
[08:57:40.637]            // while-condition  =>  TRUE
[08:57:40.637]            // while "1"  (timeout="50000")
[08:57:40.637]            // while-condition  =>  TRUE
[08:57:40.637]            // while "1"  (timeout="50000")
[08:57:40.638]            // while-condition  =>  TRUE
[08:57:40.638]            // while "1"  (timeout="50000")
[08:57:40.638]            // while-condition  =>  TRUE
[08:57:40.638]            // while "1"  (timeout="50000")
[08:57:40.638]            // while-condition  =>  TRUE
[08:57:40.639]            // while "1"  (timeout="50000")
[08:57:40.639]            // while-condition  =>  TRUE
[08:57:40.640]            // while "1"  (timeout="50000")
[08:57:40.640]            // while-condition  =>  TRUE
[08:57:40.640]            // while "1"  (timeout="50000")
[08:57:40.640]            // while-condition  =>  TRUE
[08:57:40.640]            // while "1"  (timeout="50000")
[08:57:40.641]            // while-condition  =>  TRUE
[08:57:40.641]            // while "1"  (timeout="50000")
[08:57:40.641]            // while-condition  =>  TRUE
[08:57:40.641]            // while "1"  (timeout="50000")
[08:57:40.641]            // while-condition  =>  TRUE
[08:57:40.641]            // while "1"  (timeout="50000")
[08:57:40.642]            // while-condition  =>  TRUE
[08:57:40.642]            // while "1"  (timeout="50000")
[08:57:40.642]            // while-condition  =>  TRUE
[08:57:40.642]            // while "1"  (timeout="50000")
[08:57:40.642]            // while-condition  =>  TRUE
[08:57:40.643]            // while "1"  (timeout="50000")
[08:57:40.643]            // while-condition  =>  TRUE
[08:57:40.643]            // while "1"  (timeout="50000")
[08:57:40.643]            // while-condition  =>  TRUE
[08:57:40.643]            // while "1"  (timeout="50000")
[08:57:40.644]            // while-condition  =>  TRUE
[08:57:40.644]            // while "1"  (timeout="50000")
[08:57:40.644]            // while-condition  =>  TRUE
[08:57:40.644]            // while "1"  (timeout="50000")
[08:57:40.645]            // while-condition  =>  TRUE
[08:57:40.645]            // while "1"  (timeout="50000")
[08:57:40.645]            // while-condition  =>  TRUE
[08:57:40.645]            // while "1"  (timeout="50000")
[08:57:40.645]            // while-condition  =>  TRUE
[08:57:40.645]            // while "1"  (timeout="50000")
[08:57:40.646]            // while-condition  =>  TRUE
[08:57:40.646]            // while "1"  (timeout="50000")
[08:57:40.646]            // while-condition  =>  TRUE
[08:57:40.646]            // while "1"  (timeout="50000")
[08:57:40.646]            // while-condition  =>  TRUE
[08:57:40.646]            // while "1"  (timeout="50000")
[08:57:40.647]            // while-condition  =>  TRUE
[08:57:40.647]            // while "1"  (timeout="50000")
[08:57:40.647]            // while-condition  =>  TRUE
[08:57:40.647]            // while "1"  (timeout="50000")
[08:57:40.647]            // while-condition  =>  TRUE
[08:57:40.648]            // while "1"  (timeout="50000")
[08:57:40.648]            // while-condition  =>  TRUE
[08:57:40.648]            // while "1"  (timeout="50000")
[08:57:40.648]            // while-condition  =>  TRUE
[08:57:40.649]            // while "1"  (timeout="50000")
[08:57:40.649]            // while-condition  =>  TRUE
[08:57:40.649]            // while "1"  (timeout="50000")
[08:57:40.649]            // while-condition  =>  TRUE
[08:57:40.649]            // while "1"  (timeout="50000")
[08:57:40.649]            // while-condition  =>  TRUE
[08:57:40.650]            // while "1"  (timeout="50000")
[08:57:40.650]            // while-condition  =>  TRUE
[08:57:40.650]            // while "1"  (timeout="50000")
[08:57:40.650]            // while-condition  =>  TRUE
[08:57:40.650]            // while "1"  (timeout="50000")
[08:57:40.651]            // while-condition  =>  TRUE
[08:57:40.651]            // while "1"  (timeout="50000")
[08:57:40.651]            // while-condition  =>  TRUE
[08:57:40.651]            // while "1"  (timeout="50000")
[08:57:40.651]            // while-condition  =>  TRUE
[08:57:40.651]            // while "1"  (timeout="50000")
[08:57:40.652]            // while-condition  =>  TRUE
[08:57:40.652]            // while "1"  (timeout="50000")
[08:57:40.652]            // while-condition  =>  TRUE
[08:57:40.652]            // while "1"  (timeout="50000")
[08:57:40.652]            // while-condition  =>  TRUE
[08:57:40.652]            // while "1"  (timeout="50000")
[08:57:40.653]            // while-condition  =>  TRUE
[08:57:40.653]            // while "1"  (timeout="50000")
[08:57:40.653]            // while-condition  =>  TRUE
[08:57:40.653]            // while "1"  (timeout="50000")
[08:57:40.653]            // while-condition  =>  TRUE
[08:57:40.654]            // while "1"  (timeout="50000")
[08:57:40.654]            // while-condition  =>  TRUE
[08:57:40.654]            // while "1"  (timeout="50000")
[08:57:40.654]            // while-condition  =>  TRUE
[08:57:40.655]            // while "1"  (timeout="50000")
[08:57:40.655]            // while-condition  =>  TRUE
[08:57:40.655]            // while "1"  (timeout="50000")
[08:57:40.655]            // while-condition  =>  TRUE
[08:57:40.655]            // while "1"  (timeout="50000")
[08:57:40.655]            // while-condition  =>  TRUE
[08:57:40.656]            // while "1"  (timeout="50000")
[08:57:40.656]            // while-condition  =>  TRUE
[08:57:40.656]            // while "1"  (timeout="50000")
[08:57:40.656]            // while-condition  =>  TRUE
[08:57:40.657]            // while "1"  (timeout="50000")
[08:57:40.657]            // while-condition  =>  TRUE
[08:57:40.657]            // while "1"  (timeout="50000")
[08:57:40.657]            // while-condition  =>  TRUE
[08:57:40.657]            // while "1"  (timeout="50000")
[08:57:40.657]            // while-condition  =>  TRUE
[08:57:40.658]            // while "1"  (timeout="50000")
[08:57:40.658]            // while-condition  =>  TRUE
[08:57:40.658]            // while "1"  (timeout="50000")
[08:57:40.658]            // while-condition  =>  TRUE
[08:57:40.658]            // while "1"  (timeout="50000")
[08:57:40.658]            // while-condition  =>  TRUE
[08:57:40.659]            // while "1"  (timeout="50000")
[08:57:40.659]            // while-condition  =>  TRUE
[08:57:40.659]            // while "1"  (timeout="50000")
[08:57:40.659]            // while-condition  =>  TRUE
[08:57:40.659]            // while "1"  (timeout="50000")
[08:57:40.660]            // while-condition  =>  TRUE
[08:57:40.660]            // while "1"  (timeout="50000")
[08:57:40.660]            // while-condition  =>  TRUE
[08:57:40.660]            // while "1"  (timeout="50000")
[08:57:40.661]            // while-condition  =>  TRUE
[08:57:40.661]            // while "1"  (timeout="50000")
[08:57:40.661]            // while-condition  =>  TRUE
[08:57:40.661]            // while "1"  (timeout="50000")
[08:57:40.661]            // while-condition  =>  TRUE
[08:57:40.662]            // while "1"  (timeout="50000")
[08:57:40.662]            // while-condition  =>  TRUE
[08:57:40.662]            // while "1"  (timeout="50000")
[08:57:40.662]            // while-condition  =>  TRUE
[08:57:40.662]            // while "1"  (timeout="50000")
[08:57:40.663]            // while-condition  =>  TRUE
[08:57:40.663]            // while "1"  (timeout="50000")
[08:57:40.663]            // while-condition  =>  TRUE
[08:57:40.663]            // while "1"  (timeout="50000")
[08:57:40.663]            // while-condition  =>  TRUE
[08:57:40.663]            // while "1"  (timeout="50000")
[08:57:40.664]            // while-condition  =>  TRUE
[08:57:40.664]            // while "1"  (timeout="50000")
[08:57:40.664]            // while-condition  =>  TRUE
[08:57:40.664]            // while "1"  (timeout="50000")
[08:57:40.664]            // while-condition  =>  TRUE
[08:57:40.665]            // while "1"  (timeout="50000")
[08:57:40.665]            // while  =>  TIMEOUT
[08:57:40.665]            // end while "1"
[08:57:40.665]          </control>
[08:57:40.665]          <block atomic="false" info="">
[08:57:40.666]            DAP_SWJ_Pins(nReset, nReset, 0);
[08:57:40.668]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[08:57:40.669]          </block>
[08:57:40.669]          <control if="" while="1" timeout="10000" info="">
[08:57:40.669]            // while "1"  (timeout="10000")
[08:57:40.669]            // while-condition  =>  TRUE
[08:57:40.669]            // while "1"  (timeout="10000")
[08:57:40.670]            // while-condition  =>  TRUE
[08:57:40.670]            // while "1"  (timeout="10000")
[08:57:40.670]            // while-condition  =>  TRUE
[08:57:40.671]            // while "1"  (timeout="10000")
[08:57:40.671]            // while-condition  =>  TRUE
[08:57:40.671]            // while "1"  (timeout="10000")
[08:57:40.671]            // while-condition  =>  TRUE
[08:57:40.672]            // while "1"  (timeout="10000")
[08:57:40.672]            // while-condition  =>  TRUE
[08:57:40.672]            // while "1"  (timeout="10000")
[08:57:40.673]            // while-condition  =>  TRUE
[08:57:40.673]            // while "1"  (timeout="10000")
[08:57:40.673]            // while-condition  =>  TRUE
[08:57:40.673]            // while "1"  (timeout="10000")
[08:57:40.673]            // while-condition  =>  TRUE
[08:57:40.674]            // while "1"  (timeout="10000")
[08:57:40.674]            // while-condition  =>  TRUE
[08:57:40.674]            // while "1"  (timeout="10000")
[08:57:40.675]            // while-condition  =>  TRUE
[08:57:40.675]            // while "1"  (timeout="10000")
[08:57:40.675]            // while-condition  =>  TRUE
[08:57:40.675]            // while "1"  (timeout="10000")
[08:57:40.676]            // while-condition  =>  TRUE
[08:57:40.676]            // while "1"  (timeout="10000")
[08:57:40.676]            // while-condition  =>  TRUE
[08:57:40.677]            // while "1"  (timeout="10000")
[08:57:40.677]            // while-condition  =>  TRUE
[08:57:40.677]            // while "1"  (timeout="10000")
[08:57:40.677]            // while-condition  =>  TRUE
[08:57:40.677]            // while "1"  (timeout="10000")
[08:57:40.678]            // while-condition  =>  TRUE
[08:57:40.678]            // while "1"  (timeout="10000")
[08:57:40.678]            // while-condition  =>  TRUE
[08:57:40.678]            // while "1"  (timeout="10000")
[08:57:40.679]            // while-condition  =>  TRUE
[08:57:40.679]            // while "1"  (timeout="10000")
[08:57:40.679]            // while-condition  =>  TRUE
[08:57:40.679]            // while "1"  (timeout="10000")
[08:57:40.680]            // while-condition  =>  TRUE
[08:57:40.680]            // while "1"  (timeout="10000")
[08:57:40.680]            // while-condition  =>  TRUE
[08:57:40.680]            // while "1"  (timeout="10000")
[08:57:40.680]            // while  =>  TIMEOUT
[08:57:40.681]            // end while "1"
[08:57:40.681]          </control>
[08:57:40.681]          <block atomic="true" info="">
[08:57:40.684]  
[08:57:40.684]  ! W001 : No atomic sequence support in debug unit
[08:57:40.684]  
[08:57:40.685]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[08:57:40.688]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[08:57:40.688]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[08:57:40.690]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[08:57:40.691]          </block>
[08:57:40.691]          <block atomic="false" info="">
[08:57:40.692]            __errorcontrol = 0x00000001;
[08:57:40.692]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[08:57:40.692]            ReadDP(0x0);
[08:57:40.694]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[08:57:40.696]            __errorcontrol = 0x00000000;
[08:57:40.696]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[08:57:40.697]          </block>
[08:57:40.697]        </sequence>
[08:57:40.697]      Sequence("DebugPortSetup");
[08:57:40.698]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[08:57:40.698]        </sequence>
[08:57:40.699]      Sequence("DebugPortStart");
[08:57:40.699]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[08:57:40.700]          <block atomic="false" info="">
[08:57:40.700]            __var SW_DP_ABORT  = 0x0;
[08:57:40.701]              // -> [SW_DP_ABORT <= 0x00000000]
[08:57:40.702]            __var DP_CTRL_STAT = 0x4;
[08:57:40.702]              // -> [DP_CTRL_STAT <= 0x00000004]
[08:57:40.703]            __var DP_SELECT    = 0x8;
[08:57:40.703]              // -> [DP_SELECT <= 0x00000008]
[08:57:40.703]            __var powered_down = 0;
[08:57:40.704]              // -> [powered_down <= 0x00000000]
[08:57:40.704]            WriteDP(DP_SELECT, 0x00000000);
[08:57:40.705]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:57:40.707]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[08:57:40.709]              // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[08:57:40.710]              // -> [powered_down <= 0x00000000]
[08:57:40.711]          </block>
[08:57:40.711]          <control if="powered_down" while="" timeout="0" info="">
[08:57:40.712]            // if-block "powered_down"
[08:57:40.713]              // =>  FALSE
[08:57:40.713]            // skip if-block "powered_down"
[08:57:40.713]          </control>
[08:57:40.715]        </sequence>
[08:57:40.716]      Sequence("DebugCoreStart");
[08:57:40.716]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[08:57:40.717]          <block atomic="true" info="">
[08:57:40.729]  
[08:57:40.729]  ! W001 : No atomic sequence support in debug unit
[08:57:40.729]  
[08:57:40.740]            __var DP_R_IDCODE    = 0x0;
[08:57:40.745]              // -> [DP_R_IDCODE <= 0x00000000]
[08:57:40.746]            __var DP_W_ABORT    = 0x0;
[08:57:40.746]              // -> [DP_W_ABORT <= 0x00000000]
[08:57:40.747]            __var DP_CTRLSTAT = 0x4;
[08:57:40.747]              // -> [DP_CTRLSTAT <= 0x00000004]
[08:57:40.748]            __var DP_W_SELECT    = 0x8;
[08:57:40.749]              // -> [DP_W_SELECT <= 0x00000008]
[08:57:40.749]            __var AP_TAR		= 0x4;
[08:57:40.750]              // -> [AP_TAR <= 0x00000004]
[08:57:40.750]            __var AP_BD0		= 0x0;
[08:57:40.751]              // -> [AP_BD0 <= 0x00000000]
[08:57:40.752]            __var AP_BD1		= 0x4;
[08:57:40.752]              // -> [AP_BD1 <= 0x00000004]
[08:57:40.752]            __var AP_BD2		= 0x8;
[08:57:40.753]              // -> [AP_BD2 <= 0x00000008]
[08:57:40.754]            __var PCWithinFlash = 0;
[08:57:40.754]              // -> [PCWithinFlash <= 0x00000000]
[08:57:40.755]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[08:57:40.761]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.762]          </block>
[08:57:40.762]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[08:57:40.763]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[08:57:40.769]              // -> [Read32(0xE000EDF0) => 0x00030003]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.777]            // while-condition  =>  FALSE
[08:57:40.777]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[08:57:40.778]          </control>
[08:57:40.778]          <block atomic="true" info="">
[08:57:40.782]  
[08:57:40.782]  ! W001 : No atomic sequence support in debug unit
[08:57:40.782]  
[08:57:40.784]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:57:40.786]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:57:40.787]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[08:57:40.789]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.789]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[08:57:40.792]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[08:57:40.793]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[08:57:40.797]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.797]          </block>
[08:57:40.798]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[08:57:40.799]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.801]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.801]            // while-condition  =>  TRUE
[08:57:40.801]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.804]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.805]            // while-condition  =>  TRUE
[08:57:40.805]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.807]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.807]            // while-condition  =>  TRUE
[08:57:40.808]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.810]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.811]            // while-condition  =>  TRUE
[08:57:40.811]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.814]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.815]            // while-condition  =>  TRUE
[08:57:40.815]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.817]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.817]            // while-condition  =>  TRUE
[08:57:40.818]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.820]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.821]            // while-condition  =>  TRUE
[08:57:40.821]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.824]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.825]            // while-condition  =>  TRUE
[08:57:40.825]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.828]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.829]            // while-condition  =>  TRUE
[08:57:40.829]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.831]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.832]            // while-condition  =>  TRUE
[08:57:40.832]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.834]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.835]            // while-condition  =>  TRUE
[08:57:40.835]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.838]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.839]            // while-condition  =>  TRUE
[08:57:40.839]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.842]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.842]            // while-condition  =>  TRUE
[08:57:40.843]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.846]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.847]            // while-condition  =>  TRUE
[08:57:40.847]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.849]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.850]            // while-condition  =>  TRUE
[08:57:40.850]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.853]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.853]            // while-condition  =>  TRUE
[08:57:40.854]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.857]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.858]            // while-condition  =>  TRUE
[08:57:40.858]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.861]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.861]            // while-condition  =>  TRUE
[08:57:40.862]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.865]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.866]            // while-condition  =>  TRUE
[08:57:40.866]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.869]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.869]            // while-condition  =>  TRUE
[08:57:40.870]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.873]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.874]            // while-condition  =>  TRUE
[08:57:40.874]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.877]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.877]            // while-condition  =>  TRUE
[08:57:40.878]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.881]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.882]            // while-condition  =>  TRUE
[08:57:40.882]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.885]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.886]            // while-condition  =>  TRUE
[08:57:40.887]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.889]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.890]            // while-condition  =>  TRUE
[08:57:40.890]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.893]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.894]            // while-condition  =>  TRUE
[08:57:40.894]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.897]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.898]            // while-condition  =>  TRUE
[08:57:40.899]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[08:57:40.900]            // while  =>  TIMEOUT
[08:57:40.900]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[08:57:40.901]          </control>
[08:57:40.901]          <block atomic="false" info="">
[08:57:40.902]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[08:57:40.905]              // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[08:57:40.906]              // -> [PCWithinFlash <= 0x00000000]
[08:57:40.907]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[08:57:40.909]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[08:57:40.909]          </block>
[08:57:40.910]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[08:57:40.910]            // if-block "PCWithinFlash == 0"
[08:57:40.911]              // =>  TRUE
[08:57:40.911]            // end if-block "PCWithinFlash == 0"
[08:57:40.912]          </control>
[08:57:40.912]        </sequence>
[08:57:40.913]    </block>
[08:57:40.913]  </sequence>
[08:57:40.914]  
[08:57:51.923]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[08:57:51.923]  
[08:57:51.924]  <debugvars>
[08:57:51.924]    // Pre-defined
[08:57:51.925]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[08:57:51.925]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[08:57:51.926]    __dp=0x00000000
[08:57:51.926]    __ap=0x00000000
[08:57:51.927]    __traceout=0x00000000      (Trace Disabled)
[08:57:51.927]    __errorcontrol=0x00000000  (Skip Errors="False")
[08:57:51.927]    __FlashAddr=0x00000000
[08:57:51.928]    __FlashLen=0x00000000
[08:57:51.928]    __FlashArg=0x00000000
[08:57:51.928]    __FlashOp=0x00000000
[08:57:51.930]    __Result=0x00000000
[08:57:51.930]  </debugvars>
[08:57:51.930]  
[08:57:51.930]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[08:57:51.930]    <block atomic="false" info="">
[08:57:51.931]      __var nReset      = 0x80;
[08:57:51.931]        // -> [nReset <= 0x00000080]
[08:57:51.931]      DAP_SWJ_Pins(0x00, nReset, 0);
[08:57:51.934]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[08:57:51.935]    </block>
[08:57:51.935]    <control if="" while="1" timeout="50000" info="">
[08:57:51.936]      // while "1"  (timeout="50000")
[08:57:51.936]      // while-condition  =>  TRUE
[08:57:51.937]      // while "1"  (timeout="50000")
[08:57:51.937]      // while-condition  =>  TRUE
[08:57:51.937]      // while "1"  (timeout="50000")
[08:57:51.937]      // while-condition  =>  TRUE
[08:57:51.938]      // while "1"  (timeout="50000")
[08:57:51.938]      // while-condition  =>  TRUE
[08:57:51.938]      // while "1"  (timeout="50000")
[08:57:51.939]      // while-condition  =>  TRUE
[08:57:51.939]      // while "1"  (timeout="50000")
[08:57:51.939]      // while-condition  =>  TRUE
[08:57:51.939]      // while "1"  (timeout="50000")
[08:57:51.940]      // while-condition  =>  TRUE
[08:57:51.940]      // while "1"  (timeout="50000")
[08:57:51.940]      // while-condition  =>  TRUE
[08:57:51.940]      // while "1"  (timeout="50000")
[08:57:51.940]      // while-condition  =>  TRUE
[08:57:51.940]      // while "1"  (timeout="50000")
[08:57:51.940]      // while-condition  =>  TRUE
[08:57:51.941]      // while "1"  (timeout="50000")
[08:57:51.941]      // while-condition  =>  TRUE
[08:57:51.941]      // while "1"  (timeout="50000")
[08:57:51.943]      // while-condition  =>  TRUE
[08:57:51.943]      // while "1"  (timeout="50000")
[08:57:51.943]      // while-condition  =>  TRUE
[08:57:51.943]      // while "1"  (timeout="50000")
[08:57:51.944]      // while-condition  =>  TRUE
[08:57:51.944]      // while "1"  (timeout="50000")
[08:57:51.944]      // while-condition  =>  TRUE
[08:57:51.944]      // while "1"  (timeout="50000")
[08:57:51.945]      // while-condition  =>  TRUE
[08:57:51.945]      // while "1"  (timeout="50000")
[08:57:51.945]      // while-condition  =>  TRUE
[08:57:51.945]      // while "1"  (timeout="50000")
[08:57:51.946]      // while-condition  =>  TRUE
[08:57:51.946]      // while "1"  (timeout="50000")
[08:57:51.946]      // while-condition  =>  TRUE
[08:57:51.946]      // while "1"  (timeout="50000")
[08:57:51.947]      // while-condition  =>  TRUE
[08:57:51.947]      // while "1"  (timeout="50000")
[08:57:51.947]      // while-condition  =>  TRUE
[08:57:51.947]      // while "1"  (timeout="50000")
[08:57:51.948]      // while-condition  =>  TRUE
[08:57:51.948]      // while "1"  (timeout="50000")
[08:57:51.948]      // while-condition  =>  TRUE
[08:57:51.948]      // while "1"  (timeout="50000")
[08:57:51.948]      // while-condition  =>  TRUE
[08:57:51.949]      // while "1"  (timeout="50000")
[08:57:51.949]      // while-condition  =>  TRUE
[08:57:51.949]      // while "1"  (timeout="50000")
[08:57:51.949]      // while-condition  =>  TRUE
[08:57:51.950]      // while "1"  (timeout="50000")
[08:57:51.950]      // while-condition  =>  TRUE
[08:57:51.950]      // while "1"  (timeout="50000")
[08:57:51.950]      // while-condition  =>  TRUE
[08:57:51.950]      // while "1"  (timeout="50000")
[08:57:51.950]      // while-condition  =>  TRUE
[08:57:51.951]      // while "1"  (timeout="50000")
[08:57:51.951]      // while-condition  =>  TRUE
[08:57:51.951]      // while "1"  (timeout="50000")
[08:57:51.951]      // while-condition  =>  TRUE
[08:57:51.951]      // while "1"  (timeout="50000")
[08:57:51.952]      // while-condition  =>  TRUE
[08:57:51.952]      // while "1"  (timeout="50000")
[08:57:51.952]      // while-condition  =>  TRUE
[08:57:51.952]      // while "1"  (timeout="50000")
[08:57:51.952]      // while-condition  =>  TRUE
[08:57:51.953]      // while "1"  (timeout="50000")
[08:57:51.953]      // while-condition  =>  TRUE
[08:57:51.953]      // while "1"  (timeout="50000")
[08:57:51.953]      // while-condition  =>  TRUE
[08:57:51.953]      // while "1"  (timeout="50000")
[08:57:51.953]      // while-condition  =>  TRUE
[08:57:51.953]      // while "1"  (timeout="50000")
[08:57:51.953]      // while-condition  =>  TRUE
[08:57:51.953]      // while "1"  (timeout="50000")
[08:57:51.953]      // while-condition  =>  TRUE
[08:57:51.953]      // while "1"  (timeout="50000")
[08:57:51.954]      // while-condition  =>  TRUE
[08:57:51.954]      // while "1"  (timeout="50000")
[08:57:51.954]      // while-condition  =>  TRUE
[08:57:51.954]      // while "1"  (timeout="50000")
[08:57:51.954]      // while-condition  =>  TRUE
[08:57:51.955]      // while "1"  (timeout="50000")
[08:57:51.956]      // while-condition  =>  TRUE
[08:57:51.956]      // while "1"  (timeout="50000")
[08:57:51.956]      // while-condition  =>  TRUE
[08:57:51.956]      // while "1"  (timeout="50000")
[08:57:51.956]      // while-condition  =>  TRUE
[08:57:51.957]      // while "1"  (timeout="50000")
[08:57:51.957]      // while-condition  =>  TRUE
[08:57:51.957]      // while "1"  (timeout="50000")
[08:57:51.957]      // while-condition  =>  TRUE
[08:57:51.957]      // while "1"  (timeout="50000")
[08:57:51.958]      // while-condition  =>  TRUE
[08:57:51.958]      // while "1"  (timeout="50000")
[08:57:51.958]      // while-condition  =>  TRUE
[08:57:51.958]      // while "1"  (timeout="50000")
[08:57:51.958]      // while-condition  =>  TRUE
[08:57:51.959]      // while "1"  (timeout="50000")
[08:57:51.959]      // while-condition  =>  TRUE
[08:57:51.959]      // while "1"  (timeout="50000")
[08:57:51.959]      // while-condition  =>  TRUE
[08:57:51.959]      // while "1"  (timeout="50000")
[08:57:51.960]      // while-condition  =>  TRUE
[08:57:51.960]      // while "1"  (timeout="50000")
[08:57:51.960]      // while-condition  =>  TRUE
[08:57:51.960]      // while "1"  (timeout="50000")
[08:57:51.960]      // while-condition  =>  TRUE
[08:57:51.960]      // while "1"  (timeout="50000")
[08:57:51.961]      // while-condition  =>  TRUE
[08:57:51.961]      // while "1"  (timeout="50000")
[08:57:51.961]      // while-condition  =>  TRUE
[08:57:51.961]      // while "1"  (timeout="50000")
[08:57:51.961]      // while-condition  =>  TRUE
[08:57:51.962]      // while "1"  (timeout="50000")
[08:57:51.962]      // while-condition  =>  TRUE
[08:57:51.962]      // while "1"  (timeout="50000")
[08:57:51.962]      // while-condition  =>  TRUE
[08:57:51.962]      // while "1"  (timeout="50000")
[08:57:51.962]      // while-condition  =>  TRUE
[08:57:51.963]      // while "1"  (timeout="50000")
[08:57:51.963]      // while-condition  =>  TRUE
[08:57:51.963]      // while "1"  (timeout="50000")
[08:57:51.963]      // while-condition  =>  TRUE
[08:57:51.964]      // while "1"  (timeout="50000")
[08:57:51.964]      // while-condition  =>  TRUE
[08:57:51.964]      // while "1"  (timeout="50000")
[08:57:51.964]      // while-condition  =>  TRUE
[08:57:51.964]      // while "1"  (timeout="50000")
[08:57:51.965]      // while-condition  =>  TRUE
[08:57:51.965]      // while "1"  (timeout="50000")
[08:57:51.965]      // while-condition  =>  TRUE
[08:57:51.965]      // while "1"  (timeout="50000")
[08:57:51.965]      // while-condition  =>  TRUE
[08:57:51.965]      // while "1"  (timeout="50000")
[08:57:51.966]      // while-condition  =>  TRUE
[08:57:51.966]      // while "1"  (timeout="50000")
[08:57:51.966]      // while-condition  =>  TRUE
[08:57:51.966]      // while "1"  (timeout="50000")
[08:57:51.966]      // while-condition  =>  TRUE
[08:57:51.967]      // while "1"  (timeout="50000")
[08:57:51.967]      // while-condition  =>  TRUE
[08:57:51.967]      // while "1"  (timeout="50000")
[08:57:51.967]      // while-condition  =>  TRUE
[08:57:51.967]      // while "1"  (timeout="50000")
[08:57:51.968]      // while-condition  =>  TRUE
[08:57:51.968]      // while "1"  (timeout="50000")
[08:57:51.968]      // while-condition  =>  TRUE
[08:57:51.968]      // while "1"  (timeout="50000")
[08:57:51.968]      // while-condition  =>  TRUE
[08:57:51.969]      // while "1"  (timeout="50000")
[08:57:51.969]      // while-condition  =>  TRUE
[08:57:51.969]      // while "1"  (timeout="50000")
[08:57:51.969]      // while-condition  =>  TRUE
[08:57:51.969]      // while "1"  (timeout="50000")
[08:57:51.970]      // while-condition  =>  TRUE
[08:57:51.970]      // while "1"  (timeout="50000")
[08:57:51.970]      // while-condition  =>  TRUE
[08:57:51.970]      // while "1"  (timeout="50000")
[08:57:51.970]      // while-condition  =>  TRUE
[08:57:51.971]      // while "1"  (timeout="50000")
[08:57:51.971]      // while-condition  =>  TRUE
[08:57:51.971]      // while "1"  (timeout="50000")
[08:57:51.971]      // while-condition  =>  TRUE
[08:57:51.971]      // while "1"  (timeout="50000")
[08:57:51.971]      // while-condition  =>  TRUE
[08:57:51.971]      // while "1"  (timeout="50000")
[08:57:51.972]      // while-condition  =>  TRUE
[08:57:51.972]      // while "1"  (timeout="50000")
[08:57:51.972]      // while-condition  =>  TRUE
[08:57:51.972]      // while "1"  (timeout="50000")
[08:57:51.972]      // while-condition  =>  TRUE
[08:57:51.974]      // while "1"  (timeout="50000")
[08:57:51.974]      // while-condition  =>  TRUE
[08:57:51.974]      // while "1"  (timeout="50000")
[08:57:51.974]      // while-condition  =>  TRUE
[08:57:51.975]      // while "1"  (timeout="50000")
[08:57:51.975]      // while-condition  =>  TRUE
[08:57:51.975]      // while "1"  (timeout="50000")
[08:57:51.975]      // while-condition  =>  TRUE
[08:57:51.975]      // while "1"  (timeout="50000")
[08:57:51.976]      // while-condition  =>  TRUE
[08:57:51.976]      // while "1"  (timeout="50000")
[08:57:51.976]      // while-condition  =>  TRUE
[08:57:51.976]      // while "1"  (timeout="50000")
[08:57:51.976]      // while-condition  =>  TRUE
[08:57:51.977]      // while "1"  (timeout="50000")
[08:57:51.977]      // while-condition  =>  TRUE
[08:57:51.977]      // while "1"  (timeout="50000")
[08:57:51.977]      // while-condition  =>  TRUE
[08:57:51.977]      // while "1"  (timeout="50000")
[08:57:51.978]      // while-condition  =>  TRUE
[08:57:51.978]      // while "1"  (timeout="50000")
[08:57:51.978]      // while-condition  =>  TRUE
[08:57:51.978]      // while "1"  (timeout="50000")
[08:57:51.978]      // while-condition  =>  TRUE
[08:57:51.978]      // while "1"  (timeout="50000")
[08:57:51.978]      // while-condition  =>  TRUE
[08:57:51.978]      // while "1"  (timeout="50000")
[08:57:51.978]      // while-condition  =>  TRUE
[08:57:51.978]      // while "1"  (timeout="50000")
[08:57:51.978]      // while-condition  =>  TRUE
[08:57:51.979]      // while "1"  (timeout="50000")
[08:57:51.979]      // while-condition  =>  TRUE
[08:57:51.979]      // while "1"  (timeout="50000")
[08:57:51.979]      // while-condition  =>  TRUE
[08:57:51.979]      // while "1"  (timeout="50000")
[08:57:51.980]      // while-condition  =>  TRUE
[08:57:51.980]      // while "1"  (timeout="50000")
[08:57:51.980]      // while-condition  =>  TRUE
[08:57:51.980]      // while "1"  (timeout="50000")
[08:57:51.980]      // while-condition  =>  TRUE
[08:57:51.981]      // while "1"  (timeout="50000")
[08:57:51.982]      // while-condition  =>  TRUE
[08:57:51.982]      // while "1"  (timeout="50000")
[08:57:51.982]      // while-condition  =>  TRUE
[08:57:51.982]      // while "1"  (timeout="50000")
[08:57:51.982]      // while-condition  =>  TRUE
[08:57:51.983]      // while "1"  (timeout="50000")
[08:57:51.983]      // while-condition  =>  TRUE
[08:57:51.983]      // while "1"  (timeout="50000")
[08:57:51.983]      // while-condition  =>  TRUE
[08:57:51.983]      // while "1"  (timeout="50000")
[08:57:51.983]      // while-condition  =>  TRUE
[08:57:51.984]      // while "1"  (timeout="50000")
[08:57:51.984]      // while-condition  =>  TRUE
[08:57:51.984]      // while "1"  (timeout="50000")
[08:57:51.984]      // while-condition  =>  TRUE
[08:57:51.985]      // while "1"  (timeout="50000")
[08:57:51.985]      // while-condition  =>  TRUE
[08:57:51.985]      // while "1"  (timeout="50000")
[08:57:51.985]      // while-condition  =>  TRUE
[08:57:51.985]      // while "1"  (timeout="50000")
[08:57:51.986]      // while-condition  =>  TRUE
[08:57:51.986]      // while "1"  (timeout="50000")
[08:57:51.986]      // while-condition  =>  TRUE
[08:57:51.986]      // while "1"  (timeout="50000")
[08:57:51.986]      // while-condition  =>  TRUE
[08:57:51.986]      // while "1"  (timeout="50000")
[08:57:51.986]      // while-condition  =>  TRUE
[08:57:51.987]      // while "1"  (timeout="50000")
[08:57:51.987]      // while-condition  =>  TRUE
[08:57:51.987]      // while "1"  (timeout="50000")
[08:57:51.987]      // while-condition  =>  TRUE
[08:57:51.987]      // while "1"  (timeout="50000")
[08:57:51.988]      // while-condition  =>  TRUE
[08:57:51.988]      // while "1"  (timeout="50000")
[08:57:51.988]      // while-condition  =>  TRUE
[08:57:51.988]      // while "1"  (timeout="50000")
[08:57:51.989]      // while-condition  =>  TRUE
[08:57:51.989]      // while "1"  (timeout="50000")
[08:57:51.989]      // while-condition  =>  TRUE
[08:57:51.989]      // while "1"  (timeout="50000")
[08:57:51.989]      // while-condition  =>  TRUE
[08:57:51.990]      // while "1"  (timeout="50000")
[08:57:51.990]      // while-condition  =>  TRUE
[08:57:51.990]      // while "1"  (timeout="50000")
[08:57:51.990]      // while-condition  =>  TRUE
[08:57:51.991]      // while "1"  (timeout="50000")
[08:57:51.991]      // while-condition  =>  TRUE
[08:57:51.992]      // while "1"  (timeout="50000")
[08:57:51.992]      // while-condition  =>  TRUE
[08:57:51.992]      // while "1"  (timeout="50000")
[08:57:51.992]      // while-condition  =>  TRUE
[08:57:51.993]      // while "1"  (timeout="50000")
[08:57:51.993]      // while  =>  TIMEOUT
[08:57:51.993]      // end while "1"
[08:57:51.993]    </control>
[08:57:51.993]    <block atomic="false" info="">
[08:57:51.993]      DAP_SWJ_Pins(nReset, nReset, 0);
[08:57:51.996]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[08:57:51.996]    </block>
[08:57:51.997]  </sequence>
[08:57:51.997]  
[09:00:14.392]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:00:14.392]  
[09:00:14.393]  <debugvars>
[09:00:14.393]    // Pre-defined
[09:00:14.393]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:00:14.394]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:00:14.394]    __dp=0x00000000
[09:00:14.395]    __ap=0x00000000
[09:00:14.395]    __traceout=0x00000000      (Trace Disabled)
[09:00:14.395]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:00:14.396]    __FlashAddr=0x00000000
[09:00:14.396]    __FlashLen=0x00000000
[09:00:14.397]    __FlashArg=0x00000000
[09:00:14.397]    __FlashOp=0x00000000
[09:00:14.397]    __Result=0x00000000
[09:00:14.398]  </debugvars>
[09:00:14.398]  
[09:00:14.398]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:00:14.399]    <block atomic="false" info="">
[09:00:14.399]      __var nReset      = 0x80;
[09:00:14.400]        // -> [nReset <= 0x00000080]
[09:00:14.400]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:00:14.402]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:00:14.403]    </block>
[09:00:14.403]    <control if="" while="1" timeout="50000" info="">
[09:00:14.403]      // while "1"  (timeout="50000")
[09:00:14.404]      // while-condition  =>  TRUE
[09:00:14.404]      // while "1"  (timeout="50000")
[09:00:14.404]      // while-condition  =>  TRUE
[09:00:14.405]      // while "1"  (timeout="50000")
[09:00:14.405]      // while-condition  =>  TRUE
[09:00:14.405]      // while "1"  (timeout="50000")
[09:00:14.406]      // while-condition  =>  TRUE
[09:00:14.406]      // while "1"  (timeout="50000")
[09:00:14.406]      // while-condition  =>  TRUE
[09:00:14.407]      // while "1"  (timeout="50000")
[09:00:14.407]      // while-condition  =>  TRUE
[09:00:14.407]      // while "1"  (timeout="50000")
[09:00:14.408]      // while-condition  =>  TRUE
[09:00:14.408]      // while "1"  (timeout="50000")
[09:00:14.408]      // while-condition  =>  TRUE
[09:00:14.409]      // while "1"  (timeout="50000")
[09:00:14.409]      // while-condition  =>  TRUE
[09:00:14.409]      // while "1"  (timeout="50000")
[09:00:14.410]      // while-condition  =>  TRUE
[09:00:14.410]      // while "1"  (timeout="50000")
[09:00:14.410]      // while-condition  =>  TRUE
[09:00:14.411]      // while "1"  (timeout="50000")
[09:00:14.411]      // while-condition  =>  TRUE
[09:00:14.411]      // while "1"  (timeout="50000")
[09:00:14.412]      // while-condition  =>  TRUE
[09:00:14.412]      // while "1"  (timeout="50000")
[09:00:14.412]      // while-condition  =>  TRUE
[09:00:14.413]      // while "1"  (timeout="50000")
[09:00:14.413]      // while-condition  =>  TRUE
[09:00:14.413]      // while "1"  (timeout="50000")
[09:00:14.414]      // while-condition  =>  TRUE
[09:00:14.414]      // while "1"  (timeout="50000")
[09:00:14.414]      // while-condition  =>  TRUE
[09:00:14.415]      // while "1"  (timeout="50000")
[09:00:14.415]      // while-condition  =>  TRUE
[09:00:14.415]      // while "1"  (timeout="50000")
[09:00:14.416]      // while-condition  =>  TRUE
[09:00:14.416]      // while "1"  (timeout="50000")
[09:00:14.416]      // while-condition  =>  TRUE
[09:00:14.417]      // while "1"  (timeout="50000")
[09:00:14.417]      // while-condition  =>  TRUE
[09:00:14.417]      // while "1"  (timeout="50000")
[09:00:14.418]      // while-condition  =>  TRUE
[09:00:14.418]      // while "1"  (timeout="50000")
[09:00:14.418]      // while-condition  =>  TRUE
[09:00:14.419]      // while "1"  (timeout="50000")
[09:00:14.419]      // while-condition  =>  TRUE
[09:00:14.419]      // while "1"  (timeout="50000")
[09:00:14.419]      // while-condition  =>  TRUE
[09:00:14.420]      // while "1"  (timeout="50000")
[09:00:14.420]      // while-condition  =>  TRUE
[09:00:14.420]      // while "1"  (timeout="50000")
[09:00:14.420]      // while-condition  =>  TRUE
[09:00:14.421]      // while "1"  (timeout="50000")
[09:00:14.421]      // while-condition  =>  TRUE
[09:00:14.421]      // while "1"  (timeout="50000")
[09:00:14.421]      // while-condition  =>  TRUE
[09:00:14.421]      // while "1"  (timeout="50000")
[09:00:14.421]      // while-condition  =>  TRUE
[09:00:14.421]      // while "1"  (timeout="50000")
[09:00:14.421]      // while-condition  =>  TRUE
[09:00:14.422]      // while "1"  (timeout="50000")
[09:00:14.422]      // while-condition  =>  TRUE
[09:00:14.422]      // while "1"  (timeout="50000")
[09:00:14.422]      // while-condition  =>  TRUE
[09:00:14.422]      // while "1"  (timeout="50000")
[09:00:14.423]      // while-condition  =>  TRUE
[09:00:14.423]      // while "1"  (timeout="50000")
[09:00:14.423]      // while-condition  =>  TRUE
[09:00:14.423]      // while "1"  (timeout="50000")
[09:00:14.423]      // while-condition  =>  TRUE
[09:00:14.424]      // while "1"  (timeout="50000")
[09:00:14.424]      // while-condition  =>  TRUE
[09:00:14.424]      // while "1"  (timeout="50000")
[09:00:14.424]      // while-condition  =>  TRUE
[09:00:14.424]      // while "1"  (timeout="50000")
[09:00:14.425]      // while-condition  =>  TRUE
[09:00:14.425]      // while "1"  (timeout="50000")
[09:00:14.425]      // while-condition  =>  TRUE
[09:00:14.425]      // while "1"  (timeout="50000")
[09:00:14.425]      // while-condition  =>  TRUE
[09:00:14.426]      // while "1"  (timeout="50000")
[09:00:14.426]      // while-condition  =>  TRUE
[09:00:14.426]      // while "1"  (timeout="50000")
[09:00:14.426]      // while-condition  =>  TRUE
[09:00:14.427]      // while "1"  (timeout="50000")
[09:00:14.427]      // while-condition  =>  TRUE
[09:00:14.427]      // while "1"  (timeout="50000")
[09:00:14.427]      // while-condition  =>  TRUE
[09:00:14.427]      // while "1"  (timeout="50000")
[09:00:14.428]      // while-condition  =>  TRUE
[09:00:14.428]      // while "1"  (timeout="50000")
[09:00:14.428]      // while-condition  =>  TRUE
[09:00:14.428]      // while "1"  (timeout="50000")
[09:00:14.428]      // while-condition  =>  TRUE
[09:00:14.429]      // while "1"  (timeout="50000")
[09:00:14.429]      // while-condition  =>  TRUE
[09:00:14.429]      // while "1"  (timeout="50000")
[09:00:14.429]      // while-condition  =>  TRUE
[09:00:14.429]      // while "1"  (timeout="50000")
[09:00:14.430]      // while-condition  =>  TRUE
[09:00:14.430]      // while "1"  (timeout="50000")
[09:00:14.430]      // while-condition  =>  TRUE
[09:00:14.430]      // while "1"  (timeout="50000")
[09:00:14.430]      // while-condition  =>  TRUE
[09:00:14.431]      // while "1"  (timeout="50000")
[09:00:14.431]      // while-condition  =>  TRUE
[09:00:14.431]      // while "1"  (timeout="50000")
[09:00:14.431]      // while-condition  =>  TRUE
[09:00:14.431]      // while "1"  (timeout="50000")
[09:00:14.432]      // while-condition  =>  TRUE
[09:00:14.432]      // while "1"  (timeout="50000")
[09:00:14.432]      // while-condition  =>  TRUE
[09:00:14.432]      // while "1"  (timeout="50000")
[09:00:14.433]      // while-condition  =>  TRUE
[09:00:14.433]      // while "1"  (timeout="50000")
[09:00:14.433]      // while-condition  =>  TRUE
[09:00:14.433]      // while "1"  (timeout="50000")
[09:00:14.434]      // while-condition  =>  TRUE
[09:00:14.434]      // while "1"  (timeout="50000")
[09:00:14.434]      // while-condition  =>  TRUE
[09:00:14.434]      // while "1"  (timeout="50000")
[09:00:14.435]      // while-condition  =>  TRUE
[09:00:14.435]      // while "1"  (timeout="50000")
[09:00:14.435]      // while-condition  =>  TRUE
[09:00:14.435]      // while "1"  (timeout="50000")
[09:00:14.436]      // while-condition  =>  TRUE
[09:00:14.436]      // while "1"  (timeout="50000")
[09:00:14.436]      // while-condition  =>  TRUE
[09:00:14.436]      // while "1"  (timeout="50000")
[09:00:14.437]      // while-condition  =>  TRUE
[09:00:14.437]      // while "1"  (timeout="50000")
[09:00:14.437]      // while-condition  =>  TRUE
[09:00:14.437]      // while "1"  (timeout="50000")
[09:00:14.438]      // while-condition  =>  TRUE
[09:00:14.438]      // while "1"  (timeout="50000")
[09:00:14.438]      // while-condition  =>  TRUE
[09:00:14.438]      // while "1"  (timeout="50000")
[09:00:14.439]      // while-condition  =>  TRUE
[09:00:14.439]      // while "1"  (timeout="50000")
[09:00:14.439]      // while-condition  =>  TRUE
[09:00:14.439]      // while "1"  (timeout="50000")
[09:00:14.440]      // while-condition  =>  TRUE
[09:00:14.440]      // while "1"  (timeout="50000")
[09:00:14.440]      // while-condition  =>  TRUE
[09:00:14.441]      // while "1"  (timeout="50000")
[09:00:14.441]      // while-condition  =>  TRUE
[09:00:14.441]      // while "1"  (timeout="50000")
[09:00:14.441]      // while-condition  =>  TRUE
[09:00:14.442]      // while "1"  (timeout="50000")
[09:00:14.442]      // while-condition  =>  TRUE
[09:00:14.442]      // while "1"  (timeout="50000")
[09:00:14.442]      // while-condition  =>  TRUE
[09:00:14.442]      // while "1"  (timeout="50000")
[09:00:14.443]      // while-condition  =>  TRUE
[09:00:14.443]      // while "1"  (timeout="50000")
[09:00:14.443]      // while-condition  =>  TRUE
[09:00:14.443]      // while "1"  (timeout="50000")
[09:00:14.443]      // while-condition  =>  TRUE
[09:00:14.444]      // while "1"  (timeout="50000")
[09:00:14.444]      // while-condition  =>  TRUE
[09:00:14.444]      // while "1"  (timeout="50000")
[09:00:14.444]      // while-condition  =>  TRUE
[09:00:14.444]      // while "1"  (timeout="50000")
[09:00:14.445]      // while-condition  =>  TRUE
[09:00:14.445]      // while "1"  (timeout="50000")
[09:00:14.445]      // while-condition  =>  TRUE
[09:00:14.445]      // while "1"  (timeout="50000")
[09:00:14.445]      // while-condition  =>  TRUE
[09:00:14.446]      // while "1"  (timeout="50000")
[09:00:14.446]      // while-condition  =>  TRUE
[09:00:14.446]      // while "1"  (timeout="50000")
[09:00:14.446]      // while-condition  =>  TRUE
[09:00:14.446]      // while "1"  (timeout="50000")
[09:00:14.447]      // while-condition  =>  TRUE
[09:00:14.447]      // while "1"  (timeout="50000")
[09:00:14.447]      // while-condition  =>  TRUE
[09:00:14.447]      // while "1"  (timeout="50000")
[09:00:14.447]      // while-condition  =>  TRUE
[09:00:14.448]      // while "1"  (timeout="50000")
[09:00:14.448]      // while-condition  =>  TRUE
[09:00:14.448]      // while "1"  (timeout="50000")
[09:00:14.448]      // while-condition  =>  TRUE
[09:00:14.448]      // while "1"  (timeout="50000")
[09:00:14.449]      // while-condition  =>  TRUE
[09:00:14.449]      // while "1"  (timeout="50000")
[09:00:14.449]      // while-condition  =>  TRUE
[09:00:14.449]      // while "1"  (timeout="50000")
[09:00:14.449]      // while-condition  =>  TRUE
[09:00:14.450]      // while "1"  (timeout="50000")
[09:00:14.450]      // while-condition  =>  TRUE
[09:00:14.450]      // while "1"  (timeout="50000")
[09:00:14.450]      // while-condition  =>  TRUE
[09:00:14.450]      // while "1"  (timeout="50000")
[09:00:14.451]      // while-condition  =>  TRUE
[09:00:14.451]      // while "1"  (timeout="50000")
[09:00:14.451]      // while-condition  =>  TRUE
[09:00:14.451]      // while "1"  (timeout="50000")
[09:00:14.451]      // while-condition  =>  TRUE
[09:00:14.452]      // while "1"  (timeout="50000")
[09:00:14.452]      // while-condition  =>  TRUE
[09:00:14.452]      // while "1"  (timeout="50000")
[09:00:14.452]      // while-condition  =>  TRUE
[09:00:14.453]      // while "1"  (timeout="50000")
[09:00:14.453]      // while-condition  =>  TRUE
[09:00:14.453]      // while "1"  (timeout="50000")
[09:00:14.453]      // while-condition  =>  TRUE
[09:00:14.453]      // while "1"  (timeout="50000")
[09:00:14.454]      // while-condition  =>  TRUE
[09:00:14.454]      // while "1"  (timeout="50000")
[09:00:14.454]      // while-condition  =>  TRUE
[09:00:14.454]      // while "1"  (timeout="50000")
[09:00:14.455]      // while-condition  =>  TRUE
[09:00:14.455]      // while "1"  (timeout="50000")
[09:00:14.455]      // while-condition  =>  TRUE
[09:00:14.455]      // while "1"  (timeout="50000")
[09:00:14.455]      // while-condition  =>  TRUE
[09:00:14.456]      // while "1"  (timeout="50000")
[09:00:14.456]      // while-condition  =>  TRUE
[09:00:14.456]      // while "1"  (timeout="50000")
[09:00:14.456]      // while-condition  =>  TRUE
[09:00:14.457]      // while "1"  (timeout="50000")
[09:00:14.457]      // while-condition  =>  TRUE
[09:00:14.457]      // while "1"  (timeout="50000")
[09:00:14.457]      // while-condition  =>  TRUE
[09:00:14.458]      // while "1"  (timeout="50000")
[09:00:14.458]      // while-condition  =>  TRUE
[09:00:14.458]      // while "1"  (timeout="50000")
[09:00:14.458]      // while-condition  =>  TRUE
[09:00:14.458]      // while "1"  (timeout="50000")
[09:00:14.459]      // while-condition  =>  TRUE
[09:00:14.459]      // while "1"  (timeout="50000")
[09:00:14.459]      // while-condition  =>  TRUE
[09:00:14.460]      // while "1"  (timeout="50000")
[09:00:14.460]      // while  =>  TIMEOUT
[09:00:14.460]      // end while "1"
[09:00:14.460]    </control>
[09:00:14.461]    <block atomic="false" info="">
[09:00:14.461]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:00:14.463]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:00:14.464]    </block>
[09:00:14.464]    <control if="" while="1" timeout="10000" info="">
[09:00:14.464]      // while "1"  (timeout="10000")
[09:00:14.465]      // while-condition  =>  TRUE
[09:00:14.465]      // while "1"  (timeout="10000")
[09:00:14.465]      // while-condition  =>  TRUE
[09:00:14.466]      // while "1"  (timeout="10000")
[09:00:14.466]      // while-condition  =>  TRUE
[09:00:14.467]      // while "1"  (timeout="10000")
[09:00:14.467]      // while-condition  =>  TRUE
[09:00:14.468]      // while "1"  (timeout="10000")
[09:00:14.468]      // while-condition  =>  TRUE
[09:00:14.468]      // while "1"  (timeout="10000")
[09:00:14.469]      // while-condition  =>  TRUE
[09:00:14.469]      // while "1"  (timeout="10000")
[09:00:14.469]      // while-condition  =>  TRUE
[09:00:14.469]      // while "1"  (timeout="10000")
[09:00:14.470]      // while-condition  =>  TRUE
[09:00:14.470]      // while "1"  (timeout="10000")
[09:00:14.470]      // while-condition  =>  TRUE
[09:00:14.470]      // while "1"  (timeout="10000")
[09:00:14.471]      // while-condition  =>  TRUE
[09:00:14.471]      // while "1"  (timeout="10000")
[09:00:14.471]      // while-condition  =>  TRUE
[09:00:14.471]      // while "1"  (timeout="10000")
[09:00:14.472]      // while-condition  =>  TRUE
[09:00:14.472]      // while "1"  (timeout="10000")
[09:00:14.472]      // while-condition  =>  TRUE
[09:00:14.472]      // while "1"  (timeout="10000")
[09:00:14.473]      // while-condition  =>  TRUE
[09:00:14.473]      // while "1"  (timeout="10000")
[09:00:14.473]      // while-condition  =>  TRUE
[09:00:14.473]      // while "1"  (timeout="10000")
[09:00:14.474]      // while-condition  =>  TRUE
[09:00:14.474]      // while "1"  (timeout="10000")
[09:00:14.474]      // while-condition  =>  TRUE
[09:00:14.474]      // while "1"  (timeout="10000")
[09:00:14.474]      // while-condition  =>  TRUE
[09:00:14.475]      // while "1"  (timeout="10000")
[09:00:14.475]      // while-condition  =>  TRUE
[09:00:14.475]      // while "1"  (timeout="10000")
[09:00:14.475]      // while-condition  =>  TRUE
[09:00:14.476]      // while "1"  (timeout="10000")
[09:00:14.476]      // while  =>  TIMEOUT
[09:00:14.476]      // end while "1"
[09:00:14.476]    </control>
[09:00:14.476]    <block atomic="true" info="">
[09:00:14.479]  
[09:00:14.479]  ! W001 : No atomic sequence support in debug unit
[09:00:14.479]  
[09:00:14.481]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:00:14.484]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:00:14.484]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:00:14.487]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:00:14.487]    </block>
[09:00:14.488]    <block atomic="false" info="">
[09:00:14.488]      __errorcontrol = 0x00000001;
[09:00:14.488]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:00:14.489]      ReadDP(0x0);
[09:00:14.491]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:00:14.491]      __errorcontrol = 0x00000000;
[09:00:14.492]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:00:14.492]    </block>
[09:00:14.492]  </sequence>
[09:00:14.493]  
[09:00:14.493]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:00:14.493]  
[09:00:14.493]  <debugvars>
[09:00:14.494]    // Pre-defined
[09:00:14.494]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:00:14.494]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:00:14.495]    __dp=0x00000000
[09:00:14.495]    __ap=0x00000000
[09:00:14.495]    __traceout=0x00000000      (Trace Disabled)
[09:00:14.495]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:00:14.496]    __FlashAddr=0x00000000
[09:00:14.496]    __FlashLen=0x00000000
[09:00:14.496]    __FlashArg=0x00000000
[09:00:14.496]    __FlashOp=0x00000000
[09:00:14.497]    __Result=0x00000000
[09:00:14.497]  </debugvars>
[09:00:14.497]  
[09:00:14.497]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:00:14.498]  </sequence>
[09:00:14.498]  
[09:00:14.502]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[09:00:14.502]  
[09:00:14.502]  <debugvars>
[09:00:14.503]    // Pre-defined
[09:00:14.503]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:00:14.503]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:00:14.504]    __dp=0x00000000
[09:00:14.504]    __ap=0x00000000
[09:00:14.504]    __traceout=0x00000000      (Trace Disabled)
[09:00:14.505]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:00:14.505]    __FlashAddr=0x00000000
[09:00:14.505]    __FlashLen=0x00000000
[09:00:14.505]    __FlashArg=0x00000000
[09:00:14.506]    __FlashOp=0x00000000
[09:00:14.506]    __Result=0x00000000
[09:00:14.506]  </debugvars>
[09:00:14.506]  
[09:00:14.506]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:00:14.507]    <block atomic="false" info="">
[09:00:14.507]      __var SW_DP_ABORT  = 0x0;
[09:00:14.507]        // -> [SW_DP_ABORT <= 0x00000000]
[09:00:14.507]      __var DP_CTRL_STAT = 0x4;
[09:00:14.508]        // -> [DP_CTRL_STAT <= 0x00000004]
[09:00:14.508]      __var DP_SELECT    = 0x8;
[09:00:14.508]        // -> [DP_SELECT <= 0x00000008]
[09:00:14.508]      __var powered_down = 0;
[09:00:14.509]        // -> [powered_down <= 0x00000000]
[09:00:14.509]      WriteDP(DP_SELECT, 0x00000000);
[09:00:14.511]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:00:14.511]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:00:14.513]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[09:00:14.513]        // -> [powered_down <= 0x00000001]
[09:00:14.514]    </block>
[09:00:14.514]    <control if="powered_down" while="" timeout="0" info="">
[09:00:14.514]      // if-block "powered_down"
[09:00:14.514]        // =>  TRUE
[09:00:14.515]      <block atomic="false" info="">
[09:00:14.515]        WriteDP(DP_CTRL_STAT, 0x50000000);
[09:00:14.517]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[09:00:14.517]      </block>
[09:00:14.517]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[09:00:14.518]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[09:00:14.520]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:00:14.520]        // while-condition  =>  FALSE
[09:00:14.521]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[09:00:14.521]      </control>
[09:00:14.521]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[09:00:14.521]        // if-block "(__protocol & 0xFFFF) == 1"
[09:00:14.522]          // =>  FALSE
[09:00:14.522]        // skip if-block "(__protocol & 0xFFFF) == 1"
[09:00:14.522]      </control>
[09:00:14.522]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[09:00:14.523]        // if-block "(__protocol & 0xFFFF) == 2"
[09:00:14.523]          // =>  TRUE
[09:00:14.523]        <block atomic="false" info="">
[09:00:14.523]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[09:00:14.525]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[09:00:14.525]          WriteDP(SW_DP_ABORT, 0x0000001E);
[09:00:14.527]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[09:00:14.527]        </block>
[09:00:14.528]        // end if-block "(__protocol & 0xFFFF) == 2"
[09:00:14.528]      </control>
[09:00:14.528]      // end if-block "powered_down"
[09:00:14.529]    </control>
[09:00:14.529]  </sequence>
[09:00:14.529]  
[09:00:14.633]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:00:14.633]  
[09:00:14.634]  <debugvars>
[09:00:14.634]    // Pre-defined
[09:00:14.634]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:00:14.635]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:00:14.635]    __dp=0x00000000
[09:00:14.636]    __ap=0x00000000
[09:00:14.636]    __traceout=0x00000000      (Trace Disabled)
[09:00:14.636]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:00:14.637]    __FlashAddr=0x00000000
[09:00:14.637]    __FlashLen=0x00000000
[09:00:14.637]    __FlashArg=0x00000000
[09:00:14.638]    __FlashOp=0x00000000
[09:00:14.638]    __Result=0x00000000
[09:00:14.638]  </debugvars>
[09:00:14.639]  
[09:00:14.639]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:00:14.639]    <block atomic="true" info="">
[09:00:14.643]  
[09:00:14.643]  ! W001 : No atomic sequence support in debug unit
[09:00:14.643]  
[09:00:14.645]      __var DP_R_IDCODE    = 0x0;
[09:00:14.645]        // -> [DP_R_IDCODE <= 0x00000000]
[09:00:14.646]      __var DP_W_ABORT    = 0x0;
[09:00:14.646]        // -> [DP_W_ABORT <= 0x00000000]
[09:00:14.647]      __var DP_CTRLSTAT = 0x4;
[09:00:14.647]        // -> [DP_CTRLSTAT <= 0x00000004]
[09:00:14.647]      __var DP_W_SELECT    = 0x8;
[09:00:14.648]        // -> [DP_W_SELECT <= 0x00000008]
[09:00:14.648]      __var AP_TAR		= 0x4;
[09:00:14.649]        // -> [AP_TAR <= 0x00000004]
[09:00:14.649]      __var AP_BD0		= 0x0;
[09:00:14.649]        // -> [AP_BD0 <= 0x00000000]
[09:00:14.649]      __var AP_BD1		= 0x4;
[09:00:14.650]        // -> [AP_BD1 <= 0x00000004]
[09:00:14.650]      __var AP_BD2		= 0x8;
[09:00:14.650]        // -> [AP_BD2 <= 0x00000008]
[09:00:14.651]      __var PCWithinFlash = 0;
[09:00:14.651]        // -> [PCWithinFlash <= 0x00000000]
[09:00:14.651]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:00:14.657]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.661]    </block>
[09:00:14.662]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:00:14.662]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:00:14.668]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.668]      // while-condition  =>  FALSE
[09:00:14.669]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:00:14.669]    </control>
[09:00:14.669]    <block atomic="true" info="">
[09:00:14.673]  
[09:00:14.673]  ! W001 : No atomic sequence support in debug unit
[09:00:14.673]  
[09:00:14.675]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:00:14.679]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:00:14.679]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:00:14.682]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.682]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:00:14.685]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:00:14.685]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:00:14.690]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.690]    </block>
[09:00:14.691]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:00:14.691]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.693]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.693]      // while-condition  =>  TRUE
[09:00:14.694]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.696]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.696]      // while-condition  =>  TRUE
[09:00:14.697]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.699]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.699]      // while-condition  =>  TRUE
[09:00:14.700]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.702]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.702]      // while-condition  =>  TRUE
[09:00:14.703]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.705]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.705]      // while-condition  =>  TRUE
[09:00:14.706]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.708]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.708]      // while-condition  =>  TRUE
[09:00:14.709]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.711]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.711]      // while-condition  =>  TRUE
[09:00:14.712]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.714]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.714]      // while-condition  =>  TRUE
[09:00:14.715]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.717]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.717]      // while-condition  =>  TRUE
[09:00:14.718]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.720]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.720]      // while-condition  =>  TRUE
[09:00:14.721]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.723]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.723]      // while-condition  =>  TRUE
[09:00:14.724]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.726]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.726]      // while-condition  =>  TRUE
[09:00:14.727]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.729]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.729]      // while-condition  =>  TRUE
[09:00:14.730]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.732]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.733]      // while-condition  =>  TRUE
[09:00:14.733]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.735]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.735]      // while-condition  =>  TRUE
[09:00:14.736]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.738]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.738]      // while-condition  =>  TRUE
[09:00:14.739]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.741]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.742]      // while-condition  =>  TRUE
[09:00:14.742]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.744]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.744]      // while-condition  =>  TRUE
[09:00:14.745]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.747]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.747]      // while-condition  =>  TRUE
[09:00:14.748]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.750]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.750]      // while-condition  =>  TRUE
[09:00:14.751]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.753]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.753]      // while-condition  =>  TRUE
[09:00:14.754]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.756]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.756]      // while-condition  =>  TRUE
[09:00:14.757]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.759]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.759]      // while-condition  =>  TRUE
[09:00:14.759]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.762]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.762]      // while-condition  =>  TRUE
[09:00:14.763]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.765]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.765]      // while-condition  =>  TRUE
[09:00:14.765]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.768]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.768]      // while-condition  =>  TRUE
[09:00:14.768]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.771]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.771]      // while-condition  =>  TRUE
[09:00:14.771]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.774]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.774]      // while-condition  =>  TRUE
[09:00:14.774]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.776]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.776]      // while-condition  =>  TRUE
[09:00:14.776]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.778]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.778]      // while-condition  =>  TRUE
[09:00:14.778]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.781]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.781]      // while-condition  =>  TRUE
[09:00:14.781]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.783]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.783]      // while-condition  =>  TRUE
[09:00:14.783]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.785]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.785]      // while-condition  =>  TRUE
[09:00:14.786]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.788]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.788]      // while-condition  =>  TRUE
[09:00:14.789]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:14.789]      // while  =>  TIMEOUT
[09:00:14.789]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:00:14.789]    </control>
[09:00:14.789]    <block atomic="false" info="">
[09:00:14.790]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:00:14.792]        // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:00:14.792]        // -> [PCWithinFlash <= 0x00000000]
[09:00:14.792]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:00:14.794]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:00:14.794]    </block>
[09:00:14.794]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:00:14.795]      // if-block "PCWithinFlash == 0"
[09:00:14.795]        // =>  TRUE
[09:00:14.795]      // end if-block "PCWithinFlash == 0"
[09:00:14.795]    </control>
[09:00:14.796]  </sequence>
[09:00:14.796]  
[09:00:14.843]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[09:00:14.843]  
[09:00:14.844]  <debugvars>
[09:00:14.844]    // Pre-defined
[09:00:14.844]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:00:14.844]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:00:14.845]    __dp=0x00000000
[09:00:14.845]    __ap=0x00000000
[09:00:14.845]    __traceout=0x00000000      (Trace Disabled)
[09:00:14.846]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:00:14.847]    __FlashAddr=0x00000000
[09:00:14.847]    __FlashLen=0x00000000
[09:00:14.847]    __FlashArg=0x00000000
[09:00:14.848]    __FlashOp=0x00000000
[09:00:14.848]    __Result=0x00000000
[09:00:14.848]  </debugvars>
[09:00:14.848]  
[09:00:14.849]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[09:00:14.849]    <block atomic="false" info="">
[09:00:14.849]    </block>
[09:00:14.849]  </sequence>
[09:00:14.849]  
[09:00:14.851]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[09:00:14.851]  
[09:00:14.851]  <debugvars>
[09:00:14.852]    // Pre-defined
[09:00:14.852]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:00:14.852]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:00:14.852]    __dp=0x00000000
[09:00:14.853]    __ap=0x00000000
[09:00:14.853]    __traceout=0x00000000      (Trace Disabled)
[09:00:14.853]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:00:14.853]    __FlashAddr=0x00000000
[09:00:14.854]    __FlashLen=0x00000000
[09:00:14.854]    __FlashArg=0x00000000
[09:00:14.854]    __FlashOp=0x00000000
[09:00:14.854]    __Result=0x00000000
[09:00:14.855]  </debugvars>
[09:00:14.855]  
[09:00:14.855]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:00:14.855]    <block atomic="false" info="">
[09:00:14.855]      __var nReset      = 0x80;
[09:00:14.856]        // -> [nReset <= 0x00000080]
[09:00:14.856]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:00:14.858]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:00:14.859]    </block>
[09:00:14.859]    <control if="" while="1" timeout="50000" info="">
[09:00:14.859]      // while "1"  (timeout="50000")
[09:00:14.859]      // while-condition  =>  TRUE
[09:00:14.859]      // while "1"  (timeout="50000")
[09:00:14.860]      // while-condition  =>  TRUE
[09:00:14.860]      // while "1"  (timeout="50000")
[09:00:14.860]      // while-condition  =>  TRUE
[09:00:14.860]      // while "1"  (timeout="50000")
[09:00:14.861]      // while-condition  =>  TRUE
[09:00:14.861]      // while "1"  (timeout="50000")
[09:00:14.861]      // while-condition  =>  TRUE
[09:00:14.861]      // while "1"  (timeout="50000")
[09:00:14.862]      // while-condition  =>  TRUE
[09:00:14.862]      // while "1"  (timeout="50000")
[09:00:14.862]      // while-condition  =>  TRUE
[09:00:14.862]      // while "1"  (timeout="50000")
[09:00:14.863]      // while-condition  =>  TRUE
[09:00:14.863]      // while "1"  (timeout="50000")
[09:00:14.863]      // while-condition  =>  TRUE
[09:00:14.863]      // while "1"  (timeout="50000")
[09:00:14.864]      // while-condition  =>  TRUE
[09:00:14.864]      // while "1"  (timeout="50000")
[09:00:14.864]      // while-condition  =>  TRUE
[09:00:14.864]      // while "1"  (timeout="50000")
[09:00:14.865]      // while-condition  =>  TRUE
[09:00:14.865]      // while "1"  (timeout="50000")
[09:00:14.865]      // while-condition  =>  TRUE
[09:00:14.865]      // while "1"  (timeout="50000")
[09:00:14.865]      // while-condition  =>  TRUE
[09:00:14.866]      // while "1"  (timeout="50000")
[09:00:14.866]      // while-condition  =>  TRUE
[09:00:14.866]      // while "1"  (timeout="50000")
[09:00:14.866]      // while-condition  =>  TRUE
[09:00:14.867]      // while "1"  (timeout="50000")
[09:00:14.867]      // while-condition  =>  TRUE
[09:00:14.867]      // while "1"  (timeout="50000")
[09:00:14.868]      // while-condition  =>  TRUE
[09:00:14.868]      // while "1"  (timeout="50000")
[09:00:14.868]      // while-condition  =>  TRUE
[09:00:14.868]      // while "1"  (timeout="50000")
[09:00:14.869]      // while-condition  =>  TRUE
[09:00:14.869]      // while "1"  (timeout="50000")
[09:00:14.869]      // while-condition  =>  TRUE
[09:00:14.869]      // while "1"  (timeout="50000")
[09:00:14.870]      // while-condition  =>  TRUE
[09:00:14.870]      // while "1"  (timeout="50000")
[09:00:14.870]      // while-condition  =>  TRUE
[09:00:14.870]      // while "1"  (timeout="50000")
[09:00:14.871]      // while-condition  =>  TRUE
[09:00:14.871]      // while "1"  (timeout="50000")
[09:00:14.871]      // while-condition  =>  TRUE
[09:00:14.871]      // while "1"  (timeout="50000")
[09:00:14.872]      // while-condition  =>  TRUE
[09:00:14.872]      // while "1"  (timeout="50000")
[09:00:14.872]      // while-condition  =>  TRUE
[09:00:14.872]      // while "1"  (timeout="50000")
[09:00:14.873]      // while-condition  =>  TRUE
[09:00:14.873]      // while "1"  (timeout="50000")
[09:00:14.873]      // while-condition  =>  TRUE
[09:00:14.873]      // while "1"  (timeout="50000")
[09:00:14.874]      // while-condition  =>  TRUE
[09:00:14.874]      // while "1"  (timeout="50000")
[09:00:14.874]      // while-condition  =>  TRUE
[09:00:14.874]      // while "1"  (timeout="50000")
[09:00:14.874]      // while-condition  =>  TRUE
[09:00:14.875]      // while "1"  (timeout="50000")
[09:00:14.875]      // while-condition  =>  TRUE
[09:00:14.875]      // while "1"  (timeout="50000")
[09:00:14.875]      // while-condition  =>  TRUE
[09:00:14.876]      // while "1"  (timeout="50000")
[09:00:14.876]      // while-condition  =>  TRUE
[09:00:14.876]      // while "1"  (timeout="50000")
[09:00:14.876]      // while-condition  =>  TRUE
[09:00:14.877]      // while "1"  (timeout="50000")
[09:00:14.877]      // while-condition  =>  TRUE
[09:00:14.877]      // while "1"  (timeout="50000")
[09:00:14.877]      // while-condition  =>  TRUE
[09:00:14.878]      // while "1"  (timeout="50000")
[09:00:14.878]      // while-condition  =>  TRUE
[09:00:14.878]      // while "1"  (timeout="50000")
[09:00:14.878]      // while-condition  =>  TRUE
[09:00:14.878]      // while "1"  (timeout="50000")
[09:00:14.879]      // while-condition  =>  TRUE
[09:00:14.879]      // while "1"  (timeout="50000")
[09:00:14.879]      // while-condition  =>  TRUE
[09:00:14.879]      // while "1"  (timeout="50000")
[09:00:14.880]      // while-condition  =>  TRUE
[09:00:14.880]      // while "1"  (timeout="50000")
[09:00:14.880]      // while-condition  =>  TRUE
[09:00:14.880]      // while "1"  (timeout="50000")
[09:00:14.881]      // while-condition  =>  TRUE
[09:00:14.881]      // while "1"  (timeout="50000")
[09:00:14.881]      // while-condition  =>  TRUE
[09:00:14.881]      // while "1"  (timeout="50000")
[09:00:14.881]      // while-condition  =>  TRUE
[09:00:14.882]      // while "1"  (timeout="50000")
[09:00:14.882]      // while-condition  =>  TRUE
[09:00:14.882]      // while "1"  (timeout="50000")
[09:00:14.882]      // while-condition  =>  TRUE
[09:00:14.883]      // while "1"  (timeout="50000")
[09:00:14.883]      // while-condition  =>  TRUE
[09:00:14.883]      // while "1"  (timeout="50000")
[09:00:14.883]      // while-condition  =>  TRUE
[09:00:14.884]      // while "1"  (timeout="50000")
[09:00:14.884]      // while-condition  =>  TRUE
[09:00:14.884]      // while "1"  (timeout="50000")
[09:00:14.884]      // while-condition  =>  TRUE
[09:00:14.884]      // while "1"  (timeout="50000")
[09:00:14.885]      // while-condition  =>  TRUE
[09:00:14.885]      // while "1"  (timeout="50000")
[09:00:14.885]      // while-condition  =>  TRUE
[09:00:14.885]      // while "1"  (timeout="50000")
[09:00:14.886]      // while-condition  =>  TRUE
[09:00:14.887]      // while "1"  (timeout="50000")
[09:00:14.887]      // while-condition  =>  TRUE
[09:00:14.887]      // while "1"  (timeout="50000")
[09:00:14.887]      // while-condition  =>  TRUE
[09:00:14.888]      // while "1"  (timeout="50000")
[09:00:14.888]      // while-condition  =>  TRUE
[09:00:14.888]      // while "1"  (timeout="50000")
[09:00:14.888]      // while-condition  =>  TRUE
[09:00:14.889]      // while "1"  (timeout="50000")
[09:00:14.889]      // while-condition  =>  TRUE
[09:00:14.889]      // while "1"  (timeout="50000")
[09:00:14.889]      // while-condition  =>  TRUE
[09:00:14.890]      // while "1"  (timeout="50000")
[09:00:14.890]      // while-condition  =>  TRUE
[09:00:14.890]      // while "1"  (timeout="50000")
[09:00:14.890]      // while-condition  =>  TRUE
[09:00:14.890]      // while "1"  (timeout="50000")
[09:00:14.891]      // while-condition  =>  TRUE
[09:00:14.891]      // while "1"  (timeout="50000")
[09:00:14.891]      // while-condition  =>  TRUE
[09:00:14.891]      // while "1"  (timeout="50000")
[09:00:14.892]      // while-condition  =>  TRUE
[09:00:14.892]      // while "1"  (timeout="50000")
[09:00:14.892]      // while-condition  =>  TRUE
[09:00:14.892]      // while "1"  (timeout="50000")
[09:00:14.893]      // while-condition  =>  TRUE
[09:00:14.893]      // while "1"  (timeout="50000")
[09:00:14.893]      // while-condition  =>  TRUE
[09:00:14.893]      // while "1"  (timeout="50000")
[09:00:14.894]      // while-condition  =>  TRUE
[09:00:14.894]      // while "1"  (timeout="50000")
[09:00:14.894]      // while-condition  =>  TRUE
[09:00:14.894]      // while "1"  (timeout="50000")
[09:00:14.894]      // while-condition  =>  TRUE
[09:00:14.895]      // while "1"  (timeout="50000")
[09:00:14.895]      // while-condition  =>  TRUE
[09:00:14.895]      // while "1"  (timeout="50000")
[09:00:14.895]      // while-condition  =>  TRUE
[09:00:14.896]      // while "1"  (timeout="50000")
[09:00:14.896]      // while-condition  =>  TRUE
[09:00:14.896]      // while "1"  (timeout="50000")
[09:00:14.896]      // while-condition  =>  TRUE
[09:00:14.897]      // while "1"  (timeout="50000")
[09:00:14.897]      // while-condition  =>  TRUE
[09:00:14.897]      // while "1"  (timeout="50000")
[09:00:14.897]      // while-condition  =>  TRUE
[09:00:14.898]      // while "1"  (timeout="50000")
[09:00:14.898]      // while-condition  =>  TRUE
[09:00:14.898]      // while "1"  (timeout="50000")
[09:00:14.899]      // while-condition  =>  TRUE
[09:00:14.899]      // while "1"  (timeout="50000")
[09:00:14.899]      // while-condition  =>  TRUE
[09:00:14.899]      // while "1"  (timeout="50000")
[09:00:14.900]      // while-condition  =>  TRUE
[09:00:14.900]      // while "1"  (timeout="50000")
[09:00:14.900]      // while-condition  =>  TRUE
[09:00:14.900]      // while "1"  (timeout="50000")
[09:00:14.901]      // while-condition  =>  TRUE
[09:00:14.901]      // while "1"  (timeout="50000")
[09:00:14.901]      // while-condition  =>  TRUE
[09:00:14.901]      // while "1"  (timeout="50000")
[09:00:14.902]      // while-condition  =>  TRUE
[09:00:14.902]      // while "1"  (timeout="50000")
[09:00:14.902]      // while-condition  =>  TRUE
[09:00:14.902]      // while "1"  (timeout="50000")
[09:00:14.903]      // while-condition  =>  TRUE
[09:00:14.903]      // while "1"  (timeout="50000")
[09:00:14.903]      // while-condition  =>  TRUE
[09:00:14.903]      // while "1"  (timeout="50000")
[09:00:14.903]      // while-condition  =>  TRUE
[09:00:14.904]      // while "1"  (timeout="50000")
[09:00:14.904]      // while-condition  =>  TRUE
[09:00:14.904]      // while "1"  (timeout="50000")
[09:00:14.904]      // while-condition  =>  TRUE
[09:00:14.905]      // while "1"  (timeout="50000")
[09:00:14.905]      // while-condition  =>  TRUE
[09:00:14.905]      // while "1"  (timeout="50000")
[09:00:14.905]      // while-condition  =>  TRUE
[09:00:14.906]      // while "1"  (timeout="50000")
[09:00:14.906]      // while-condition  =>  TRUE
[09:00:14.906]      // while "1"  (timeout="50000")
[09:00:14.906]      // while-condition  =>  TRUE
[09:00:14.907]      // while "1"  (timeout="50000")
[09:00:14.907]      // while-condition  =>  TRUE
[09:00:14.907]      // while "1"  (timeout="50000")
[09:00:14.907]      // while-condition  =>  TRUE
[09:00:14.908]      // while "1"  (timeout="50000")
[09:00:14.908]      // while-condition  =>  TRUE
[09:00:14.908]      // while "1"  (timeout="50000")
[09:00:14.908]      // while-condition  =>  TRUE
[09:00:14.909]      // while "1"  (timeout="50000")
[09:00:14.909]      // while-condition  =>  TRUE
[09:00:14.909]      // while "1"  (timeout="50000")
[09:00:14.909]      // while-condition  =>  TRUE
[09:00:14.909]      // while "1"  (timeout="50000")
[09:00:14.910]      // while-condition  =>  TRUE
[09:00:14.910]      // while "1"  (timeout="50000")
[09:00:14.910]      // while-condition  =>  TRUE
[09:00:14.910]      // while "1"  (timeout="50000")
[09:00:14.911]      // while-condition  =>  TRUE
[09:00:14.911]      // while "1"  (timeout="50000")
[09:00:14.911]      // while-condition  =>  TRUE
[09:00:14.911]      // while "1"  (timeout="50000")
[09:00:14.912]      // while-condition  =>  TRUE
[09:00:14.912]      // while "1"  (timeout="50000")
[09:00:14.912]      // while-condition  =>  TRUE
[09:00:14.912]      // while "1"  (timeout="50000")
[09:00:14.913]      // while-condition  =>  TRUE
[09:00:14.913]      // while "1"  (timeout="50000")
[09:00:14.913]      // while-condition  =>  TRUE
[09:00:14.913]      // while "1"  (timeout="50000")
[09:00:14.914]      // while-condition  =>  TRUE
[09:00:14.914]      // while "1"  (timeout="50000")
[09:00:14.915]      // while  =>  TIMEOUT
[09:00:14.915]      // end while "1"
[09:00:14.915]    </control>
[09:00:14.915]    <block atomic="false" info="">
[09:00:14.916]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:00:14.918]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:00:14.918]    </block>
[09:00:14.919]    <control if="" while="1" timeout="10000" info="">
[09:00:14.919]      // while "1"  (timeout="10000")
[09:00:14.920]      // while-condition  =>  TRUE
[09:00:14.920]      // while "1"  (timeout="10000")
[09:00:14.920]      // while-condition  =>  TRUE
[09:00:14.921]      // while "1"  (timeout="10000")
[09:00:14.921]      // while-condition  =>  TRUE
[09:00:14.921]      // while "1"  (timeout="10000")
[09:00:14.921]      // while-condition  =>  TRUE
[09:00:14.922]      // while "1"  (timeout="10000")
[09:00:14.922]      // while-condition  =>  TRUE
[09:00:14.922]      // while "1"  (timeout="10000")
[09:00:14.922]      // while-condition  =>  TRUE
[09:00:14.923]      // while "1"  (timeout="10000")
[09:00:14.923]      // while-condition  =>  TRUE
[09:00:14.923]      // while "1"  (timeout="10000")
[09:00:14.923]      // while-condition  =>  TRUE
[09:00:14.924]      // while "1"  (timeout="10000")
[09:00:14.924]      // while-condition  =>  TRUE
[09:00:14.924]      // while "1"  (timeout="10000")
[09:00:14.924]      // while-condition  =>  TRUE
[09:00:14.924]      // while "1"  (timeout="10000")
[09:00:14.925]      // while-condition  =>  TRUE
[09:00:14.925]      // while "1"  (timeout="10000")
[09:00:14.925]      // while-condition  =>  TRUE
[09:00:14.925]      // while "1"  (timeout="10000")
[09:00:14.926]      // while-condition  =>  TRUE
[09:00:14.926]      // while "1"  (timeout="10000")
[09:00:14.926]      // while-condition  =>  TRUE
[09:00:14.926]      // while "1"  (timeout="10000")
[09:00:14.927]      // while-condition  =>  TRUE
[09:00:14.927]      // while "1"  (timeout="10000")
[09:00:14.927]      // while-condition  =>  TRUE
[09:00:14.927]      // while "1"  (timeout="10000")
[09:00:14.928]      // while-condition  =>  TRUE
[09:00:14.928]      // while "1"  (timeout="10000")
[09:00:14.928]      // while-condition  =>  TRUE
[09:00:14.928]      // while "1"  (timeout="10000")
[09:00:14.928]      // while-condition  =>  TRUE
[09:00:14.929]      // while "1"  (timeout="10000")
[09:00:14.930]      // while  =>  TIMEOUT
[09:00:14.930]      // end while "1"
[09:00:14.930]    </control>
[09:00:14.931]    <block atomic="true" info="">
[09:00:14.938]  
[09:00:14.938]  ! W001 : No atomic sequence support in debug unit
[09:00:14.938]  
[09:00:14.957]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:00:14.959]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:00:14.969]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:00:14.971]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:00:14.971]    </block>
[09:00:14.971]    <block atomic="false" info="">
[09:00:14.971]      __errorcontrol = 0x00000001;
[09:00:14.972]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:00:14.972]      ReadDP(0x0);
[09:00:14.974]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:00:14.974]      __errorcontrol = 0x00000000;
[09:00:14.974]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:00:14.974]    </block>
[09:00:14.975]  </sequence>
[09:00:14.975]  
[09:00:14.984]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[09:00:14.984]  
[09:00:14.984]  <debugvars>
[09:00:14.984]    // Pre-defined
[09:00:14.985]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:00:14.985]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:00:14.985]    __dp=0x00000000
[09:00:14.985]    __ap=0x00000000
[09:00:14.986]    __traceout=0x00000000      (Trace Disabled)
[09:00:14.986]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:00:14.986]    __FlashAddr=0x00000000
[09:00:14.986]    __FlashLen=0x00000000
[09:00:14.986]    __FlashArg=0x00000000
[09:00:14.987]    __FlashOp=0x00000000
[09:00:14.987]    __Result=0x00000000
[09:00:14.987]  </debugvars>
[09:00:14.987]  
[09:00:14.988]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[09:00:14.988]    <block atomic="false" info="">
[09:00:14.988]    </block>
[09:00:14.988]  </sequence>
[09:00:14.989]  
[09:00:15.206]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[09:00:15.206]  
[09:00:15.206]  <debugvars>
[09:00:15.206]    // Pre-defined
[09:00:15.207]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:00:15.207]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:00:15.207]    __dp=0x00000000
[09:00:15.208]    __ap=0x00000000
[09:00:15.208]    __traceout=0x00000000      (Trace Disabled)
[09:00:15.208]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:00:15.210]    __FlashAddr=0x00000000
[09:00:15.210]    __FlashLen=0x00000000
[09:00:15.210]    __FlashArg=0x00000000
[09:00:15.210]    __FlashOp=0x00000000
[09:00:15.210]    __Result=0x00000000
[09:00:15.211]  </debugvars>
[09:00:15.211]  
[09:00:15.212]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[09:00:15.212]    <block atomic="false" info="">
[09:00:15.212]      Sequence("ResetHardware");
[09:00:15.212]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:00:15.212]          <block atomic="false" info="">
[09:00:15.212]            __var nReset      = 0x80;
[09:00:15.213]              // -> [nReset <= 0x00000080]
[09:00:15.213]            DAP_SWJ_Pins(0x00, nReset, 0);
[09:00:15.215]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:00:15.216]          </block>
[09:00:15.216]          <control if="" while="1" timeout="50000" info="">
[09:00:15.216]            // while "1"  (timeout="50000")
[09:00:15.216]            // while-condition  =>  TRUE
[09:00:15.216]            // while "1"  (timeout="50000")
[09:00:15.216]            // while-condition  =>  TRUE
[09:00:15.216]            // while "1"  (timeout="50000")
[09:00:15.217]            // while-condition  =>  TRUE
[09:00:15.217]            // while "1"  (timeout="50000")
[09:00:15.219]            // while-condition  =>  TRUE
[09:00:15.219]            // while "1"  (timeout="50000")
[09:00:15.219]            // while-condition  =>  TRUE
[09:00:15.220]            // while "1"  (timeout="50000")
[09:00:15.220]            // while-condition  =>  TRUE
[09:00:15.221]            // while "1"  (timeout="50000")
[09:00:15.222]            // while-condition  =>  TRUE
[09:00:15.222]            // while "1"  (timeout="50000")
[09:00:15.223]            // while-condition  =>  TRUE
[09:00:15.223]            // while "1"  (timeout="50000")
[09:00:15.223]            // while-condition  =>  TRUE
[09:00:15.224]            // while "1"  (timeout="50000")
[09:00:15.224]            // while-condition  =>  TRUE
[09:00:15.224]            // while "1"  (timeout="50000")
[09:00:15.224]            // while-condition  =>  TRUE
[09:00:15.225]            // while "1"  (timeout="50000")
[09:00:15.225]            // while-condition  =>  TRUE
[09:00:15.225]            // while "1"  (timeout="50000")
[09:00:15.225]            // while-condition  =>  TRUE
[09:00:15.225]            // while "1"  (timeout="50000")
[09:00:15.225]            // while-condition  =>  TRUE
[09:00:15.226]            // while "1"  (timeout="50000")
[09:00:15.226]            // while-condition  =>  TRUE
[09:00:15.226]            // while "1"  (timeout="50000")
[09:00:15.226]            // while-condition  =>  TRUE
[09:00:15.227]            // while "1"  (timeout="50000")
[09:00:15.227]            // while-condition  =>  TRUE
[09:00:15.227]            // while "1"  (timeout="50000")
[09:00:15.228]            // while-condition  =>  TRUE
[09:00:15.228]            // while "1"  (timeout="50000")
[09:00:15.228]            // while-condition  =>  TRUE
[09:00:15.228]            // while "1"  (timeout="50000")
[09:00:15.229]            // while-condition  =>  TRUE
[09:00:15.229]            // while "1"  (timeout="50000")
[09:00:15.229]            // while-condition  =>  TRUE
[09:00:15.230]            // while "1"  (timeout="50000")
[09:00:15.230]            // while-condition  =>  TRUE
[09:00:15.230]            // while "1"  (timeout="50000")
[09:00:15.232]            // while-condition  =>  TRUE
[09:00:15.232]            // while "1"  (timeout="50000")
[09:00:15.232]            // while-condition  =>  TRUE
[09:00:15.232]            // while "1"  (timeout="50000")
[09:00:15.233]            // while-condition  =>  TRUE
[09:00:15.233]            // while "1"  (timeout="50000")
[09:00:15.233]            // while-condition  =>  TRUE
[09:00:15.233]            // while "1"  (timeout="50000")
[09:00:15.233]            // while-condition  =>  TRUE
[09:00:15.233]            // while "1"  (timeout="50000")
[09:00:15.233]            // while-condition  =>  TRUE
[09:00:15.233]            // while "1"  (timeout="50000")
[09:00:15.235]            // while-condition  =>  TRUE
[09:00:15.235]            // while "1"  (timeout="50000")
[09:00:15.235]            // while-condition  =>  TRUE
[09:00:15.235]            // while "1"  (timeout="50000")
[09:00:15.235]            // while-condition  =>  TRUE
[09:00:15.236]            // while "1"  (timeout="50000")
[09:00:15.236]            // while-condition  =>  TRUE
[09:00:15.236]            // while "1"  (timeout="50000")
[09:00:15.236]            // while-condition  =>  TRUE
[09:00:15.236]            // while "1"  (timeout="50000")
[09:00:15.236]            // while-condition  =>  TRUE
[09:00:15.236]            // while "1"  (timeout="50000")
[09:00:15.236]            // while-condition  =>  TRUE
[09:00:15.236]            // while "1"  (timeout="50000")
[09:00:15.236]            // while-condition  =>  TRUE
[09:00:15.237]            // while "1"  (timeout="50000")
[09:00:15.237]            // while-condition  =>  TRUE
[09:00:15.237]            // while "1"  (timeout="50000")
[09:00:15.237]            // while-condition  =>  TRUE
[09:00:15.238]            // while "1"  (timeout="50000")
[09:00:15.238]            // while-condition  =>  TRUE
[09:00:15.238]            // while "1"  (timeout="50000")
[09:00:15.238]            // while-condition  =>  TRUE
[09:00:15.238]            // while "1"  (timeout="50000")
[09:00:15.239]            // while-condition  =>  TRUE
[09:00:15.240]            // while "1"  (timeout="50000")
[09:00:15.240]            // while-condition  =>  TRUE
[09:00:15.240]            // while "1"  (timeout="50000")
[09:00:15.240]            // while-condition  =>  TRUE
[09:00:15.240]            // while "1"  (timeout="50000")
[09:00:15.240]            // while-condition  =>  TRUE
[09:00:15.240]            // while "1"  (timeout="50000")
[09:00:15.240]            // while-condition  =>  TRUE
[09:00:15.240]            // while "1"  (timeout="50000")
[09:00:15.240]            // while-condition  =>  TRUE
[09:00:15.242]            // while "1"  (timeout="50000")
[09:00:15.242]            // while-condition  =>  TRUE
[09:00:15.242]            // while "1"  (timeout="50000")
[09:00:15.242]            // while-condition  =>  TRUE
[09:00:15.242]            // while "1"  (timeout="50000")
[09:00:15.242]            // while-condition  =>  TRUE
[09:00:15.243]            // while "1"  (timeout="50000")
[09:00:15.243]            // while-condition  =>  TRUE
[09:00:15.243]            // while "1"  (timeout="50000")
[09:00:15.243]            // while-condition  =>  TRUE
[09:00:15.243]            // while "1"  (timeout="50000")
[09:00:15.244]            // while-condition  =>  TRUE
[09:00:15.244]            // while "1"  (timeout="50000")
[09:00:15.244]            // while-condition  =>  TRUE
[09:00:15.244]            // while "1"  (timeout="50000")
[09:00:15.244]            // while-condition  =>  TRUE
[09:00:15.245]            // while "1"  (timeout="50000")
[09:00:15.245]            // while-condition  =>  TRUE
[09:00:15.245]            // while "1"  (timeout="50000")
[09:00:15.245]            // while-condition  =>  TRUE
[09:00:15.245]            // while "1"  (timeout="50000")
[09:00:15.246]            // while-condition  =>  TRUE
[09:00:15.246]            // while "1"  (timeout="50000")
[09:00:15.246]            // while-condition  =>  TRUE
[09:00:15.246]            // while "1"  (timeout="50000")
[09:00:15.246]            // while-condition  =>  TRUE
[09:00:15.246]            // while "1"  (timeout="50000")
[09:00:15.246]            // while-condition  =>  TRUE
[09:00:15.246]            // while "1"  (timeout="50000")
[09:00:15.246]            // while-condition  =>  TRUE
[09:00:15.247]            // while "1"  (timeout="50000")
[09:00:15.248]            // while-condition  =>  TRUE
[09:00:15.248]            // while "1"  (timeout="50000")
[09:00:15.248]            // while-condition  =>  TRUE
[09:00:15.248]            // while "1"  (timeout="50000")
[09:00:15.248]            // while-condition  =>  TRUE
[09:00:15.249]            // while "1"  (timeout="50000")
[09:00:15.249]            // while-condition  =>  TRUE
[09:00:15.249]            // while "1"  (timeout="50000")
[09:00:15.249]            // while-condition  =>  TRUE
[09:00:15.249]            // while "1"  (timeout="50000")
[09:00:15.249]            // while-condition  =>  TRUE
[09:00:15.249]            // while "1"  (timeout="50000")
[09:00:15.249]            // while-condition  =>  TRUE
[09:00:15.249]            // while "1"  (timeout="50000")
[09:00:15.250]            // while-condition  =>  TRUE
[09:00:15.250]            // while "1"  (timeout="50000")
[09:00:15.250]            // while-condition  =>  TRUE
[09:00:15.250]            // while "1"  (timeout="50000")
[09:00:15.250]            // while-condition  =>  TRUE
[09:00:15.251]            // while "1"  (timeout="50000")
[09:00:15.251]            // while-condition  =>  TRUE
[09:00:15.251]            // while "1"  (timeout="50000")
[09:00:15.251]            // while-condition  =>  TRUE
[09:00:15.251]            // while "1"  (timeout="50000")
[09:00:15.252]            // while-condition  =>  TRUE
[09:00:15.252]            // while "1"  (timeout="50000")
[09:00:15.253]            // while-condition  =>  TRUE
[09:00:15.253]            // while "1"  (timeout="50000")
[09:00:15.253]            // while-condition  =>  TRUE
[09:00:15.253]            // while "1"  (timeout="50000")
[09:00:15.253]            // while-condition  =>  TRUE
[09:00:15.253]            // while "1"  (timeout="50000")
[09:00:15.253]            // while-condition  =>  TRUE
[09:00:15.253]            // while "1"  (timeout="50000")
[09:00:15.253]            // while-condition  =>  TRUE
[09:00:15.253]            // while "1"  (timeout="50000")
[09:00:15.254]            // while-condition  =>  TRUE
[09:00:15.254]            // while "1"  (timeout="50000")
[09:00:15.255]            // while-condition  =>  TRUE
[09:00:15.255]            // while "1"  (timeout="50000")
[09:00:15.255]            // while-condition  =>  TRUE
[09:00:15.256]            // while "1"  (timeout="50000")
[09:00:15.256]            // while-condition  =>  TRUE
[09:00:15.256]            // while "1"  (timeout="50000")
[09:00:15.256]            // while-condition  =>  TRUE
[09:00:15.256]            // while "1"  (timeout="50000")
[09:00:15.256]            // while-condition  =>  TRUE
[09:00:15.256]            // while "1"  (timeout="50000")
[09:00:15.256]            // while-condition  =>  TRUE
[09:00:15.256]            // while "1"  (timeout="50000")
[09:00:15.257]            // while-condition  =>  TRUE
[09:00:15.258]            // while "1"  (timeout="50000")
[09:00:15.258]            // while-condition  =>  TRUE
[09:00:15.258]            // while "1"  (timeout="50000")
[09:00:15.258]            // while-condition  =>  TRUE
[09:00:15.258]            // while "1"  (timeout="50000")
[09:00:15.258]            // while-condition  =>  TRUE
[09:00:15.258]            // while "1"  (timeout="50000")
[09:00:15.258]            // while-condition  =>  TRUE
[09:00:15.258]            // while "1"  (timeout="50000")
[09:00:15.258]            // while-condition  =>  TRUE
[09:00:15.259]            // while "1"  (timeout="50000")
[09:00:15.260]            // while-condition  =>  TRUE
[09:00:15.260]            // while "1"  (timeout="50000")
[09:00:15.260]            // while-condition  =>  TRUE
[09:00:15.260]            // while "1"  (timeout="50000")
[09:00:15.261]            // while-condition  =>  TRUE
[09:00:15.261]            // while "1"  (timeout="50000")
[09:00:15.261]            // while-condition  =>  TRUE
[09:00:15.261]            // while "1"  (timeout="50000")
[09:00:15.261]            // while-condition  =>  TRUE
[09:00:15.261]            // while "1"  (timeout="50000")
[09:00:15.261]            // while-condition  =>  TRUE
[09:00:15.261]            // while "1"  (timeout="50000")
[09:00:15.261]            // while-condition  =>  TRUE
[09:00:15.262]            // while "1"  (timeout="50000")
[09:00:15.262]            // while-condition  =>  TRUE
[09:00:15.262]            // while "1"  (timeout="50000")
[09:00:15.262]            // while-condition  =>  TRUE
[09:00:15.263]            // while "1"  (timeout="50000")
[09:00:15.263]            // while-condition  =>  TRUE
[09:00:15.263]            // while "1"  (timeout="50000")
[09:00:15.264]            // while-condition  =>  TRUE
[09:00:15.264]            // while "1"  (timeout="50000")
[09:00:15.264]            // while-condition  =>  TRUE
[09:00:15.264]            // while "1"  (timeout="50000")
[09:00:15.264]            // while-condition  =>  TRUE
[09:00:15.265]            // while "1"  (timeout="50000")
[09:00:15.265]            // while-condition  =>  TRUE
[09:00:15.265]            // while "1"  (timeout="50000")
[09:00:15.265]            // while-condition  =>  TRUE
[09:00:15.265]            // while "1"  (timeout="50000")
[09:00:15.266]            // while-condition  =>  TRUE
[09:00:15.266]            // while "1"  (timeout="50000")
[09:00:15.266]            // while-condition  =>  TRUE
[09:00:15.266]            // while "1"  (timeout="50000")
[09:00:15.266]            // while-condition  =>  TRUE
[09:00:15.266]            // while "1"  (timeout="50000")
[09:00:15.266]            // while-condition  =>  TRUE
[09:00:15.266]            // while "1"  (timeout="50000")
[09:00:15.267]            // while-condition  =>  TRUE
[09:00:15.267]            // while "1"  (timeout="50000")
[09:00:15.267]            // while-condition  =>  TRUE
[09:00:15.267]            // while "1"  (timeout="50000")
[09:00:15.267]            // while-condition  =>  TRUE
[09:00:15.268]            // while "1"  (timeout="50000")
[09:00:15.268]            // while-condition  =>  TRUE
[09:00:15.269]            // while "1"  (timeout="50000")
[09:00:15.269]            // while-condition  =>  TRUE
[09:00:15.269]            // while "1"  (timeout="50000")
[09:00:15.269]            // while-condition  =>  TRUE
[09:00:15.269]            // while "1"  (timeout="50000")
[09:00:15.270]            // while-condition  =>  TRUE
[09:00:15.270]            // while "1"  (timeout="50000")
[09:00:15.270]            // while-condition  =>  TRUE
[09:00:15.270]            // while "1"  (timeout="50000")
[09:00:15.270]            // while-condition  =>  TRUE
[09:00:15.271]            // while "1"  (timeout="50000")
[09:00:15.271]            // while-condition  =>  TRUE
[09:00:15.271]            // while "1"  (timeout="50000")
[09:00:15.271]            // while-condition  =>  TRUE
[09:00:15.272]            // while "1"  (timeout="50000")
[09:00:15.272]            // while-condition  =>  TRUE
[09:00:15.272]            // while "1"  (timeout="50000")
[09:00:15.272]            // while-condition  =>  TRUE
[09:00:15.272]            // while "1"  (timeout="50000")
[09:00:15.273]            // while-condition  =>  TRUE
[09:00:15.273]            // while "1"  (timeout="50000")
[09:00:15.273]            // while-condition  =>  TRUE
[09:00:15.273]            // while "1"  (timeout="50000")
[09:00:15.274]            // while-condition  =>  TRUE
[09:00:15.274]            // while "1"  (timeout="50000")
[09:00:15.274]            // while  =>  TIMEOUT
[09:00:15.274]            // end while "1"
[09:00:15.275]          </control>
[09:00:15.275]          <block atomic="false" info="">
[09:00:15.275]            DAP_SWJ_Pins(nReset, nReset, 0);
[09:00:15.277]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:00:15.277]          </block>
[09:00:15.277]          <control if="" while="1" timeout="10000" info="">
[09:00:15.277]            // while "1"  (timeout="10000")
[09:00:15.278]            // while-condition  =>  TRUE
[09:00:15.279]            // while "1"  (timeout="10000")
[09:00:15.279]            // while-condition  =>  TRUE
[09:00:15.279]            // while "1"  (timeout="10000")
[09:00:15.279]            // while-condition  =>  TRUE
[09:00:15.280]            // while "1"  (timeout="10000")
[09:00:15.280]            // while-condition  =>  TRUE
[09:00:15.280]            // while "1"  (timeout="10000")
[09:00:15.281]            // while-condition  =>  TRUE
[09:00:15.281]            // while "1"  (timeout="10000")
[09:00:15.281]            // while-condition  =>  TRUE
[09:00:15.281]            // while "1"  (timeout="10000")
[09:00:15.282]            // while-condition  =>  TRUE
[09:00:15.282]            // while "1"  (timeout="10000")
[09:00:15.282]            // while-condition  =>  TRUE
[09:00:15.282]            // while "1"  (timeout="10000")
[09:00:15.283]            // while-condition  =>  TRUE
[09:00:15.283]            // while "1"  (timeout="10000")
[09:00:15.283]            // while-condition  =>  TRUE
[09:00:15.283]            // while "1"  (timeout="10000")
[09:00:15.284]            // while-condition  =>  TRUE
[09:00:15.284]            // while "1"  (timeout="10000")
[09:00:15.284]            // while-condition  =>  TRUE
[09:00:15.284]            // while "1"  (timeout="10000")
[09:00:15.285]            // while-condition  =>  TRUE
[09:00:15.285]            // while "1"  (timeout="10000")
[09:00:15.285]            // while-condition  =>  TRUE
[09:00:15.285]            // while "1"  (timeout="10000")
[09:00:15.285]            // while-condition  =>  TRUE
[09:00:15.285]            // while "1"  (timeout="10000")
[09:00:15.286]            // while-condition  =>  TRUE
[09:00:15.286]            // while "1"  (timeout="10000")
[09:00:15.286]            // while-condition  =>  TRUE
[09:00:15.286]            // while "1"  (timeout="10000")
[09:00:15.287]            // while-condition  =>  TRUE
[09:00:15.287]            // while "1"  (timeout="10000")
[09:00:15.287]            // while-condition  =>  TRUE
[09:00:15.287]            // while "1"  (timeout="10000")
[09:00:15.289]            // while-condition  =>  TRUE
[09:00:15.289]            // while "1"  (timeout="10000")
[09:00:15.289]            // while  =>  TIMEOUT
[09:00:15.289]            // end while "1"
[09:00:15.290]          </control>
[09:00:15.290]          <block atomic="true" info="">
[09:00:15.293]  
[09:00:15.293]  ! W001 : No atomic sequence support in debug unit
[09:00:15.293]  
[09:00:15.294]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:00:15.297]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:00:15.297]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:00:15.300]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:00:15.301]          </block>
[09:00:15.302]          <block atomic="false" info="">
[09:00:15.302]            __errorcontrol = 0x00000001;
[09:00:15.303]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:00:15.303]            ReadDP(0x0);
[09:00:15.306]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:00:15.306]            __errorcontrol = 0x00000000;
[09:00:15.307]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:00:15.307]          </block>
[09:00:15.308]        </sequence>
[09:00:15.309]      Sequence("DebugPortSetup");
[09:00:15.309]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:00:15.310]        </sequence>
[09:00:15.311]      Sequence("DebugPortStart");
[09:00:15.312]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:00:15.312]          <block atomic="false" info="">
[09:00:15.313]            __var SW_DP_ABORT  = 0x0;
[09:00:15.313]              // -> [SW_DP_ABORT <= 0x00000000]
[09:00:15.313]            __var DP_CTRL_STAT = 0x4;
[09:00:15.314]              // -> [DP_CTRL_STAT <= 0x00000004]
[09:00:15.314]            __var DP_SELECT    = 0x8;
[09:00:15.314]              // -> [DP_SELECT <= 0x00000008]
[09:00:15.315]            __var powered_down = 0;
[09:00:15.315]              // -> [powered_down <= 0x00000000]
[09:00:15.316]            WriteDP(DP_SELECT, 0x00000000);
[09:00:15.318]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:00:15.319]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:00:15.321]              // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:00:15.322]              // -> [powered_down <= 0x00000000]
[09:00:15.322]          </block>
[09:00:15.323]          <control if="powered_down" while="" timeout="0" info="">
[09:00:15.323]            // if-block "powered_down"
[09:00:15.323]              // =>  FALSE
[09:00:15.324]            // skip if-block "powered_down"
[09:00:15.324]          </control>
[09:00:15.324]        </sequence>
[09:00:15.324]      Sequence("DebugCoreStart");
[09:00:15.325]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:00:15.325]          <block atomic="true" info="">
[09:00:15.328]  
[09:00:15.328]  ! W001 : No atomic sequence support in debug unit
[09:00:15.328]  
[09:00:15.330]            __var DP_R_IDCODE    = 0x0;
[09:00:15.330]              // -> [DP_R_IDCODE <= 0x00000000]
[09:00:15.331]            __var DP_W_ABORT    = 0x0;
[09:00:15.331]              // -> [DP_W_ABORT <= 0x00000000]
[09:00:15.332]            __var DP_CTRLSTAT = 0x4;
[09:00:15.332]              // -> [DP_CTRLSTAT <= 0x00000004]
[09:00:15.333]            __var DP_W_SELECT    = 0x8;
[09:00:15.333]              // -> [DP_W_SELECT <= 0x00000008]
[09:00:15.334]            __var AP_TAR		= 0x4;
[09:00:15.334]              // -> [AP_TAR <= 0x00000004]
[09:00:15.334]            __var AP_BD0		= 0x0;
[09:00:15.334]              // -> [AP_BD0 <= 0x00000000]
[09:00:15.335]            __var AP_BD1		= 0x4;
[09:00:15.335]              // -> [AP_BD1 <= 0x00000004]
[09:00:15.335]            __var AP_BD2		= 0x8;
[09:00:15.336]              // -> [AP_BD2 <= 0x00000008]
[09:00:15.336]            __var PCWithinFlash = 0;
[09:00:15.336]              // -> [PCWithinFlash <= 0x00000000]
[09:00:15.337]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:00:15.344]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.344]          </block>
[09:00:15.345]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:00:15.346]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:00:15.352]              // -> [Read32(0xE000EDF0) => 0x00030003]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.353]            // while-condition  =>  FALSE
[09:00:15.354]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:00:15.354]          </control>
[09:00:15.355]          <block atomic="true" info="">
[09:00:15.358]  
[09:00:15.358]  ! W001 : No atomic sequence support in debug unit
[09:00:15.358]  
[09:00:15.359]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:00:15.362]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:00:15.362]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:00:15.365]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.384]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:00:15.387]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:00:15.388]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:00:15.393]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.403]          </block>
[09:00:15.404]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:00:15.404]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.407]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.408]            // while-condition  =>  TRUE
[09:00:15.408]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.411]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.411]            // while-condition  =>  TRUE
[09:00:15.412]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.415]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.416]            // while-condition  =>  TRUE
[09:00:15.416]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.419]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.420]            // while-condition  =>  TRUE
[09:00:15.420]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.423]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.423]            // while-condition  =>  TRUE
[09:00:15.424]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.427]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.427]            // while-condition  =>  TRUE
[09:00:15.428]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.431]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.431]            // while-condition  =>  TRUE
[09:00:15.432]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.434]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.435]            // while-condition  =>  TRUE
[09:00:15.435]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.438]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.438]            // while-condition  =>  TRUE
[09:00:15.439]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.440]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.441]            // while-condition  =>  TRUE
[09:00:15.441]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.443]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.444]            // while-condition  =>  TRUE
[09:00:15.444]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.447]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.448]            // while-condition  =>  TRUE
[09:00:15.449]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.451]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.451]            // while-condition  =>  TRUE
[09:00:15.452]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.454]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.455]            // while-condition  =>  TRUE
[09:00:15.455]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.457]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.458]            // while-condition  =>  TRUE
[09:00:15.458]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.460]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.460]            // while-condition  =>  TRUE
[09:00:15.461]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.463]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.463]            // while-condition  =>  TRUE
[09:00:15.463]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.466]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.466]            // while-condition  =>  TRUE
[09:00:15.467]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.469]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.470]            // while-condition  =>  TRUE
[09:00:15.470]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.473]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.473]            // while-condition  =>  TRUE
[09:00:15.473]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.476]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.476]            // while-condition  =>  TRUE
[09:00:15.477]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.480]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.481]            // while-condition  =>  TRUE
[09:00:15.482]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.484]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.485]            // while-condition  =>  TRUE
[09:00:15.485]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.487]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.487]            // while-condition  =>  TRUE
[09:00:15.488]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.490]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.490]            // while-condition  =>  TRUE
[09:00:15.491]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.493]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.493]            // while-condition  =>  TRUE
[09:00:15.494]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.496]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.496]            // while-condition  =>  TRUE
[09:00:15.497]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.499]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.500]            // while-condition  =>  TRUE
[09:00:15.501]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.503]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.503]            // while-condition  =>  TRUE
[09:00:15.503]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.506]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.506]            // while-condition  =>  TRUE
[09:00:15.507]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:00:15.507]            // while  =>  TIMEOUT
[09:00:15.508]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:00:15.509]          </control>
[09:00:15.509]          <block atomic="false" info="">
[09:00:15.509]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:00:15.511]              // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:00:15.512]              // -> [PCWithinFlash <= 0x00000000]
[09:00:15.512]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:00:15.514]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:00:15.515]          </block>
[09:00:15.515]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:00:15.515]            // if-block "PCWithinFlash == 0"
[09:00:15.516]              // =>  TRUE
[09:00:15.516]            // end if-block "PCWithinFlash == 0"
[09:00:15.516]          </control>
[09:00:15.516]        </sequence>
[09:00:15.517]    </block>
[09:00:15.517]  </sequence>
[09:00:15.517]  
[09:00:26.835]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[09:00:26.835]  
[09:00:26.835]  <debugvars>
[09:00:26.836]    // Pre-defined
[09:00:26.836]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:00:26.837]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:00:26.838]    __dp=0x00000000
[09:00:26.838]    __ap=0x00000000
[09:00:26.839]    __traceout=0x00000000      (Trace Disabled)
[09:00:26.839]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:00:26.840]    __FlashAddr=0x00000000
[09:00:26.840]    __FlashLen=0x00000000
[09:00:26.841]    __FlashArg=0x00000000
[09:00:26.841]    __FlashOp=0x00000000
[09:00:26.842]    __Result=0x00000000
[09:00:26.842]  </debugvars>
[09:00:26.843]  
[09:00:26.844]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[09:00:26.844]    <block atomic="false" info="">
[09:00:26.845]      __var nReset      = 0x80;
[09:00:26.845]        // -> [nReset <= 0x00000080]
[09:00:26.846]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:00:26.848]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:00:26.848]    </block>
[09:00:26.848]    <control if="" while="1" timeout="50000" info="">
[09:00:26.850]      // while "1"  (timeout="50000")
[09:00:26.850]      // while-condition  =>  TRUE
[09:00:26.851]      // while "1"  (timeout="50000")
[09:00:26.851]      // while-condition  =>  TRUE
[09:00:26.852]      // while "1"  (timeout="50000")
[09:00:26.852]      // while-condition  =>  TRUE
[09:00:26.853]      // while "1"  (timeout="50000")
[09:00:26.854]      // while-condition  =>  TRUE
[09:00:26.854]      // while "1"  (timeout="50000")
[09:00:26.855]      // while-condition  =>  TRUE
[09:00:26.855]      // while "1"  (timeout="50000")
[09:00:26.856]      // while-condition  =>  TRUE
[09:00:26.856]      // while "1"  (timeout="50000")
[09:00:26.857]      // while-condition  =>  TRUE
[09:00:26.857]      // while "1"  (timeout="50000")
[09:00:26.858]      // while-condition  =>  TRUE
[09:00:26.859]      // while "1"  (timeout="50000")
[09:00:26.859]      // while-condition  =>  TRUE
[09:00:26.860]      // while "1"  (timeout="50000")
[09:00:26.860]      // while-condition  =>  TRUE
[09:00:26.861]      // while "1"  (timeout="50000")
[09:00:26.862]      // while-condition  =>  TRUE
[09:00:26.862]      // while "1"  (timeout="50000")
[09:00:26.862]      // while-condition  =>  TRUE
[09:00:26.863]      // while "1"  (timeout="50000")
[09:00:26.863]      // while-condition  =>  TRUE
[09:00:26.864]      // while "1"  (timeout="50000")
[09:00:26.864]      // while-condition  =>  TRUE
[09:00:26.865]      // while "1"  (timeout="50000")
[09:00:26.865]      // while-condition  =>  TRUE
[09:00:26.865]      // while "1"  (timeout="50000")
[09:00:26.866]      // while-condition  =>  TRUE
[09:00:26.866]      // while "1"  (timeout="50000")
[09:00:26.867]      // while-condition  =>  TRUE
[09:00:26.867]      // while "1"  (timeout="50000")
[09:00:26.867]      // while-condition  =>  TRUE
[09:00:26.868]      // while "1"  (timeout="50000")
[09:00:26.868]      // while-condition  =>  TRUE
[09:00:26.868]      // while "1"  (timeout="50000")
[09:00:26.869]      // while-condition  =>  TRUE
[09:00:26.869]      // while "1"  (timeout="50000")
[09:00:26.869]      // while-condition  =>  TRUE
[09:00:26.870]      // while "1"  (timeout="50000")
[09:00:26.870]      // while-condition  =>  TRUE
[09:00:26.871]      // while "1"  (timeout="50000")
[09:00:26.871]      // while-condition  =>  TRUE
[09:00:26.872]      // while "1"  (timeout="50000")
[09:00:26.872]      // while-condition  =>  TRUE
[09:00:26.872]      // while "1"  (timeout="50000")
[09:00:26.873]      // while-condition  =>  TRUE
[09:00:26.873]      // while "1"  (timeout="50000")
[09:00:26.873]      // while-condition  =>  TRUE
[09:00:26.873]      // while "1"  (timeout="50000")
[09:00:26.873]      // while-condition  =>  TRUE
[09:00:26.874]      // while "1"  (timeout="50000")
[09:00:26.874]      // while-condition  =>  TRUE
[09:00:26.874]      // while "1"  (timeout="50000")
[09:00:26.874]      // while-condition  =>  TRUE
[09:00:26.875]      // while "1"  (timeout="50000")
[09:00:26.876]      // while-condition  =>  TRUE
[09:00:26.876]      // while "1"  (timeout="50000")
[09:00:26.876]      // while-condition  =>  TRUE
[09:00:26.877]      // while "1"  (timeout="50000")
[09:00:26.877]      // while-condition  =>  TRUE
[09:00:26.877]      // while "1"  (timeout="50000")
[09:00:26.878]      // while-condition  =>  TRUE
[09:00:26.878]      // while "1"  (timeout="50000")
[09:00:26.878]      // while-condition  =>  TRUE
[09:00:26.878]      // while "1"  (timeout="50000")
[09:00:26.879]      // while-condition  =>  TRUE
[09:00:26.879]      // while "1"  (timeout="50000")
[09:00:26.879]      // while-condition  =>  TRUE
[09:00:26.879]      // while "1"  (timeout="50000")
[09:00:26.879]      // while-condition  =>  TRUE
[09:00:26.879]      // while "1"  (timeout="50000")
[09:00:26.880]      // while-condition  =>  TRUE
[09:00:26.880]      // while "1"  (timeout="50000")
[09:00:26.880]      // while-condition  =>  TRUE
[09:00:26.880]      // while "1"  (timeout="50000")
[09:00:26.881]      // while-condition  =>  TRUE
[09:00:26.881]      // while "1"  (timeout="50000")
[09:00:26.881]      // while-condition  =>  TRUE
[09:00:26.881]      // while "1"  (timeout="50000")
[09:00:26.881]      // while-condition  =>  TRUE
[09:00:26.882]      // while "1"  (timeout="50000")
[09:00:26.882]      // while-condition  =>  TRUE
[09:00:26.882]      // while "1"  (timeout="50000")
[09:00:26.882]      // while-condition  =>  TRUE
[09:00:26.882]      // while "1"  (timeout="50000")
[09:00:26.883]      // while-condition  =>  TRUE
[09:00:26.883]      // while "1"  (timeout="50000")
[09:00:26.883]      // while-condition  =>  TRUE
[09:00:26.884]      // while "1"  (timeout="50000")
[09:00:26.884]      // while-condition  =>  TRUE
[09:00:26.884]      // while "1"  (timeout="50000")
[09:00:26.884]      // while-condition  =>  TRUE
[09:00:26.884]      // while "1"  (timeout="50000")
[09:00:26.884]      // while-condition  =>  TRUE
[09:00:26.885]      // while "1"  (timeout="50000")
[09:00:26.885]      // while-condition  =>  TRUE
[09:00:26.885]      // while "1"  (timeout="50000")
[09:00:26.885]      // while-condition  =>  TRUE
[09:00:26.886]      // while "1"  (timeout="50000")
[09:00:26.886]      // while-condition  =>  TRUE
[09:00:26.886]      // while "1"  (timeout="50000")
[09:00:26.887]      // while-condition  =>  TRUE
[09:00:26.887]      // while "1"  (timeout="50000")
[09:00:26.887]      // while-condition  =>  TRUE
[09:00:26.887]      // while "1"  (timeout="50000")
[09:00:26.888]      // while-condition  =>  TRUE
[09:00:26.888]      // while "1"  (timeout="50000")
[09:00:26.888]      // while-condition  =>  TRUE
[09:00:26.888]      // while "1"  (timeout="50000")
[09:00:26.888]      // while-condition  =>  TRUE
[09:00:26.889]      // while "1"  (timeout="50000")
[09:00:26.889]      // while-condition  =>  TRUE
[09:00:26.889]      // while "1"  (timeout="50000")
[09:00:26.889]      // while-condition  =>  TRUE
[09:00:26.889]      // while "1"  (timeout="50000")
[09:00:26.890]      // while-condition  =>  TRUE
[09:00:26.890]      // while "1"  (timeout="50000")
[09:00:26.890]      // while-condition  =>  TRUE
[09:00:26.890]      // while "1"  (timeout="50000")
[09:00:26.890]      // while-condition  =>  TRUE
[09:00:26.890]      // while "1"  (timeout="50000")
[09:00:26.890]      // while-condition  =>  TRUE
[09:00:26.891]      // while "1"  (timeout="50000")
[09:00:26.891]      // while-condition  =>  TRUE
[09:00:26.891]      // while "1"  (timeout="50000")
[09:00:26.891]      // while-condition  =>  TRUE
[09:00:26.891]      // while "1"  (timeout="50000")
[09:00:26.892]      // while-condition  =>  TRUE
[09:00:26.892]      // while "1"  (timeout="50000")
[09:00:26.892]      // while-condition  =>  TRUE
[09:00:26.892]      // while "1"  (timeout="50000")
[09:00:26.892]      // while-condition  =>  TRUE
[09:00:26.893]      // while "1"  (timeout="50000")
[09:00:26.893]      // while-condition  =>  TRUE
[09:00:26.893]      // while "1"  (timeout="50000")
[09:00:26.893]      // while-condition  =>  TRUE
[09:00:26.894]      // while "1"  (timeout="50000")
[09:00:26.894]      // while-condition  =>  TRUE
[09:00:26.894]      // while "1"  (timeout="50000")
[09:00:26.894]      // while-condition  =>  TRUE
[09:00:26.894]      // while "1"  (timeout="50000")
[09:00:26.894]      // while-condition  =>  TRUE
[09:00:26.894]      // while "1"  (timeout="50000")
[09:00:26.894]      // while-condition  =>  TRUE
[09:00:26.894]      // while "1"  (timeout="50000")
[09:00:26.895]      // while-condition  =>  TRUE
[09:00:26.895]      // while "1"  (timeout="50000")
[09:00:26.895]      // while-condition  =>  TRUE
[09:00:26.895]      // while "1"  (timeout="50000")
[09:00:26.895]      // while-condition  =>  TRUE
[09:00:26.896]      // while "1"  (timeout="50000")
[09:00:26.896]      // while-condition  =>  TRUE
[09:00:26.897]      // while "1"  (timeout="50000")
[09:00:26.897]      // while-condition  =>  TRUE
[09:00:26.897]      // while "1"  (timeout="50000")
[09:00:26.897]      // while-condition  =>  TRUE
[09:00:26.897]      // while "1"  (timeout="50000")
[09:00:26.898]      // while-condition  =>  TRUE
[09:00:26.898]      // while "1"  (timeout="50000")
[09:00:26.898]      // while  =>  TIMEOUT
[09:00:26.898]      // end while "1"
[09:00:26.898]    </control>
[09:00:26.899]    <block atomic="false" info="">
[09:00:26.899]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:00:26.901]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:00:26.901]    </block>
[09:00:26.902]  </sequence>
[09:00:26.902]  
[09:01:33.102]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:01:33.102]  
[09:01:33.103]  <debugvars>
[09:01:33.103]    // Pre-defined
[09:01:33.104]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:01:33.104]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:01:33.104]    __dp=0x00000000
[09:01:33.105]    __ap=0x00000000
[09:01:33.105]    __traceout=0x00000000      (Trace Disabled)
[09:01:33.105]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:01:33.106]    __FlashAddr=0x00000000
[09:01:33.106]    __FlashLen=0x00000000
[09:01:33.106]    __FlashArg=0x00000000
[09:01:33.107]    __FlashOp=0x00000000
[09:01:33.107]    __Result=0x00000000
[09:01:33.108]  </debugvars>
[09:01:33.108]  
[09:01:33.108]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:01:33.109]    <block atomic="false" info="">
[09:01:33.109]      __var nReset      = 0x80;
[09:01:33.109]        // -> [nReset <= 0x00000080]
[09:01:33.110]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:01:33.111]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:01:33.112]    </block>
[09:01:33.112]    <control if="" while="1" timeout="50000" info="">
[09:01:33.112]      // while "1"  (timeout="50000")
[09:01:33.113]      // while-condition  =>  TRUE
[09:01:33.113]      // while "1"  (timeout="50000")
[09:01:33.113]      // while-condition  =>  TRUE
[09:01:33.114]      // while "1"  (timeout="50000")
[09:01:33.114]      // while-condition  =>  TRUE
[09:01:33.115]      // while "1"  (timeout="50000")
[09:01:33.115]      // while-condition  =>  TRUE
[09:01:33.115]      // while "1"  (timeout="50000")
[09:01:33.115]      // while-condition  =>  TRUE
[09:01:33.116]      // while "1"  (timeout="50000")
[09:01:33.116]      // while-condition  =>  TRUE
[09:01:33.116]      // while "1"  (timeout="50000")
[09:01:33.116]      // while-condition  =>  TRUE
[09:01:33.117]      // while "1"  (timeout="50000")
[09:01:33.117]      // while-condition  =>  TRUE
[09:01:33.117]      // while "1"  (timeout="50000")
[09:01:33.118]      // while-condition  =>  TRUE
[09:01:33.118]      // while "1"  (timeout="50000")
[09:01:33.118]      // while-condition  =>  TRUE
[09:01:33.118]      // while "1"  (timeout="50000")
[09:01:33.119]      // while-condition  =>  TRUE
[09:01:33.119]      // while "1"  (timeout="50000")
[09:01:33.119]      // while-condition  =>  TRUE
[09:01:33.120]      // while "1"  (timeout="50000")
[09:01:33.120]      // while-condition  =>  TRUE
[09:01:33.120]      // while "1"  (timeout="50000")
[09:01:33.120]      // while-condition  =>  TRUE
[09:01:33.120]      // while "1"  (timeout="50000")
[09:01:33.121]      // while-condition  =>  TRUE
[09:01:33.121]      // while "1"  (timeout="50000")
[09:01:33.121]      // while-condition  =>  TRUE
[09:01:33.121]      // while "1"  (timeout="50000")
[09:01:33.121]      // while-condition  =>  TRUE
[09:01:33.122]      // while "1"  (timeout="50000")
[09:01:33.122]      // while-condition  =>  TRUE
[09:01:33.122]      // while "1"  (timeout="50000")
[09:01:33.122]      // while-condition  =>  TRUE
[09:01:33.123]      // while "1"  (timeout="50000")
[09:01:33.123]      // while-condition  =>  TRUE
[09:01:33.123]      // while "1"  (timeout="50000")
[09:01:33.123]      // while-condition  =>  TRUE
[09:01:33.124]      // while "1"  (timeout="50000")
[09:01:33.124]      // while-condition  =>  TRUE
[09:01:33.124]      // while "1"  (timeout="50000")
[09:01:33.124]      // while-condition  =>  TRUE
[09:01:33.125]      // while "1"  (timeout="50000")
[09:01:33.125]      // while-condition  =>  TRUE
[09:01:33.125]      // while "1"  (timeout="50000")
[09:01:33.125]      // while-condition  =>  TRUE
[09:01:33.125]      // while "1"  (timeout="50000")
[09:01:33.126]      // while-condition  =>  TRUE
[09:01:33.126]      // while "1"  (timeout="50000")
[09:01:33.126]      // while-condition  =>  TRUE
[09:01:33.126]      // while "1"  (timeout="50000")
[09:01:33.127]      // while-condition  =>  TRUE
[09:01:33.127]      // while "1"  (timeout="50000")
[09:01:33.127]      // while-condition  =>  TRUE
[09:01:33.127]      // while "1"  (timeout="50000")
[09:01:33.128]      // while-condition  =>  TRUE
[09:01:33.128]      // while "1"  (timeout="50000")
[09:01:33.128]      // while-condition  =>  TRUE
[09:01:33.128]      // while "1"  (timeout="50000")
[09:01:33.129]      // while-condition  =>  TRUE
[09:01:33.129]      // while "1"  (timeout="50000")
[09:01:33.129]      // while-condition  =>  TRUE
[09:01:33.129]      // while "1"  (timeout="50000")
[09:01:33.130]      // while-condition  =>  TRUE
[09:01:33.130]      // while "1"  (timeout="50000")
[09:01:33.130]      // while-condition  =>  TRUE
[09:01:33.130]      // while "1"  (timeout="50000")
[09:01:33.131]      // while-condition  =>  TRUE
[09:01:33.131]      // while "1"  (timeout="50000")
[09:01:33.131]      // while-condition  =>  TRUE
[09:01:33.131]      // while "1"  (timeout="50000")
[09:01:33.132]      // while-condition  =>  TRUE
[09:01:33.132]      // while "1"  (timeout="50000")
[09:01:33.133]      // while-condition  =>  TRUE
[09:01:33.133]      // while "1"  (timeout="50000")
[09:01:33.133]      // while-condition  =>  TRUE
[09:01:33.133]      // while "1"  (timeout="50000")
[09:01:33.133]      // while-condition  =>  TRUE
[09:01:33.134]      // while "1"  (timeout="50000")
[09:01:33.134]      // while-condition  =>  TRUE
[09:01:33.134]      // while "1"  (timeout="50000")
[09:01:33.134]      // while-condition  =>  TRUE
[09:01:33.134]      // while "1"  (timeout="50000")
[09:01:33.135]      // while-condition  =>  TRUE
[09:01:33.135]      // while "1"  (timeout="50000")
[09:01:33.135]      // while-condition  =>  TRUE
[09:01:33.135]      // while "1"  (timeout="50000")
[09:01:33.135]      // while-condition  =>  TRUE
[09:01:33.136]      // while "1"  (timeout="50000")
[09:01:33.136]      // while-condition  =>  TRUE
[09:01:33.136]      // while "1"  (timeout="50000")
[09:01:33.136]      // while-condition  =>  TRUE
[09:01:33.136]      // while "1"  (timeout="50000")
[09:01:33.137]      // while-condition  =>  TRUE
[09:01:33.137]      // while "1"  (timeout="50000")
[09:01:33.137]      // while-condition  =>  TRUE
[09:01:33.137]      // while "1"  (timeout="50000")
[09:01:33.137]      // while-condition  =>  TRUE
[09:01:33.138]      // while "1"  (timeout="50000")
[09:01:33.138]      // while-condition  =>  TRUE
[09:01:33.138]      // while "1"  (timeout="50000")
[09:01:33.138]      // while-condition  =>  TRUE
[09:01:33.138]      // while "1"  (timeout="50000")
[09:01:33.139]      // while-condition  =>  TRUE
[09:01:33.139]      // while "1"  (timeout="50000")
[09:01:33.139]      // while-condition  =>  TRUE
[09:01:33.139]      // while "1"  (timeout="50000")
[09:01:33.139]      // while-condition  =>  TRUE
[09:01:33.139]      // while "1"  (timeout="50000")
[09:01:33.139]      // while-condition  =>  TRUE
[09:01:33.139]      // while "1"  (timeout="50000")
[09:01:33.139]      // while-condition  =>  TRUE
[09:01:33.139]      // while "1"  (timeout="50000")
[09:01:33.139]      // while-condition  =>  TRUE
[09:01:33.140]      // while "1"  (timeout="50000")
[09:01:33.140]      // while-condition  =>  TRUE
[09:01:33.140]      // while "1"  (timeout="50000")
[09:01:33.140]      // while-condition  =>  TRUE
[09:01:33.140]      // while "1"  (timeout="50000")
[09:01:33.141]      // while-condition  =>  TRUE
[09:01:33.141]      // while "1"  (timeout="50000")
[09:01:33.141]      // while-condition  =>  TRUE
[09:01:33.141]      // while "1"  (timeout="50000")
[09:01:33.142]      // while-condition  =>  TRUE
[09:01:33.142]      // while "1"  (timeout="50000")
[09:01:33.142]      // while-condition  =>  TRUE
[09:01:33.142]      // while "1"  (timeout="50000")
[09:01:33.142]      // while-condition  =>  TRUE
[09:01:33.143]      // while "1"  (timeout="50000")
[09:01:33.143]      // while-condition  =>  TRUE
[09:01:33.143]      // while "1"  (timeout="50000")
[09:01:33.143]      // while-condition  =>  TRUE
[09:01:33.144]      // while "1"  (timeout="50000")
[09:01:33.144]      // while-condition  =>  TRUE
[09:01:33.144]      // while "1"  (timeout="50000")
[09:01:33.144]      // while-condition  =>  TRUE
[09:01:33.145]      // while "1"  (timeout="50000")
[09:01:33.145]      // while-condition  =>  TRUE
[09:01:33.145]      // while "1"  (timeout="50000")
[09:01:33.145]      // while-condition  =>  TRUE
[09:01:33.145]      // while "1"  (timeout="50000")
[09:01:33.146]      // while-condition  =>  TRUE
[09:01:33.146]      // while "1"  (timeout="50000")
[09:01:33.146]      // while-condition  =>  TRUE
[09:01:33.146]      // while "1"  (timeout="50000")
[09:01:33.147]      // while-condition  =>  TRUE
[09:01:33.147]      // while "1"  (timeout="50000")
[09:01:33.147]      // while-condition  =>  TRUE
[09:01:33.148]      // while "1"  (timeout="50000")
[09:01:33.148]      // while-condition  =>  TRUE
[09:01:33.148]      // while "1"  (timeout="50000")
[09:01:33.148]      // while-condition  =>  TRUE
[09:01:33.149]      // while "1"  (timeout="50000")
[09:01:33.149]      // while-condition  =>  TRUE
[09:01:33.149]      // while "1"  (timeout="50000")
[09:01:33.149]      // while-condition  =>  TRUE
[09:01:33.150]      // while "1"  (timeout="50000")
[09:01:33.150]      // while-condition  =>  TRUE
[09:01:33.150]      // while "1"  (timeout="50000")
[09:01:33.151]      // while-condition  =>  TRUE
[09:01:33.151]      // while "1"  (timeout="50000")
[09:01:33.151]      // while-condition  =>  TRUE
[09:01:33.151]      // while "1"  (timeout="50000")
[09:01:33.152]      // while-condition  =>  TRUE
[09:01:33.152]      // while "1"  (timeout="50000")
[09:01:33.152]      // while-condition  =>  TRUE
[09:01:33.152]      // while "1"  (timeout="50000")
[09:01:33.153]      // while-condition  =>  TRUE
[09:01:33.153]      // while "1"  (timeout="50000")
[09:01:33.153]      // while-condition  =>  TRUE
[09:01:33.153]      // while "1"  (timeout="50000")
[09:01:33.153]      // while-condition  =>  TRUE
[09:01:33.154]      // while "1"  (timeout="50000")
[09:01:33.154]      // while-condition  =>  TRUE
[09:01:33.154]      // while "1"  (timeout="50000")
[09:01:33.154]      // while-condition  =>  TRUE
[09:01:33.155]      // while "1"  (timeout="50000")
[09:01:33.155]      // while-condition  =>  TRUE
[09:01:33.155]      // while "1"  (timeout="50000")
[09:01:33.155]      // while-condition  =>  TRUE
[09:01:33.155]      // while "1"  (timeout="50000")
[09:01:33.156]      // while-condition  =>  TRUE
[09:01:33.156]      // while "1"  (timeout="50000")
[09:01:33.156]      // while-condition  =>  TRUE
[09:01:33.156]      // while "1"  (timeout="50000")
[09:01:33.156]      // while-condition  =>  TRUE
[09:01:33.157]      // while "1"  (timeout="50000")
[09:01:33.157]      // while-condition  =>  TRUE
[09:01:33.157]      // while "1"  (timeout="50000")
[09:01:33.157]      // while-condition  =>  TRUE
[09:01:33.157]      // while "1"  (timeout="50000")
[09:01:33.158]      // while-condition  =>  TRUE
[09:01:33.158]      // while "1"  (timeout="50000")
[09:01:33.158]      // while-condition  =>  TRUE
[09:01:33.158]      // while "1"  (timeout="50000")
[09:01:33.158]      // while-condition  =>  TRUE
[09:01:33.159]      // while "1"  (timeout="50000")
[09:01:33.159]      // while-condition  =>  TRUE
[09:01:33.159]      // while "1"  (timeout="50000")
[09:01:33.159]      // while-condition  =>  TRUE
[09:01:33.159]      // while "1"  (timeout="50000")
[09:01:33.160]      // while-condition  =>  TRUE
[09:01:33.160]      // while "1"  (timeout="50000")
[09:01:33.160]      // while-condition  =>  TRUE
[09:01:33.160]      // while "1"  (timeout="50000")
[09:01:33.161]      // while-condition  =>  TRUE
[09:01:33.161]      // while "1"  (timeout="50000")
[09:01:33.161]      // while-condition  =>  TRUE
[09:01:33.161]      // while "1"  (timeout="50000")
[09:01:33.162]      // while-condition  =>  TRUE
[09:01:33.162]      // while "1"  (timeout="50000")
[09:01:33.162]      // while-condition  =>  TRUE
[09:01:33.163]      // while "1"  (timeout="50000")
[09:01:33.163]      // while  =>  TIMEOUT
[09:01:33.163]      // end while "1"
[09:01:33.164]    </control>
[09:01:33.164]    <block atomic="false" info="">
[09:01:33.164]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:01:33.166]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:01:33.166]    </block>
[09:01:33.166]    <control if="" while="1" timeout="10000" info="">
[09:01:33.167]      // while "1"  (timeout="10000")
[09:01:33.167]      // while-condition  =>  TRUE
[09:01:33.167]      // while "1"  (timeout="10000")
[09:01:33.167]      // while-condition  =>  TRUE
[09:01:33.168]      // while "1"  (timeout="10000")
[09:01:33.168]      // while-condition  =>  TRUE
[09:01:33.168]      // while "1"  (timeout="10000")
[09:01:33.168]      // while-condition  =>  TRUE
[09:01:33.169]      // while "1"  (timeout="10000")
[09:01:33.169]      // while-condition  =>  TRUE
[09:01:33.169]      // while "1"  (timeout="10000")
[09:01:33.169]      // while-condition  =>  TRUE
[09:01:33.170]      // while "1"  (timeout="10000")
[09:01:33.170]      // while-condition  =>  TRUE
[09:01:33.170]      // while "1"  (timeout="10000")
[09:01:33.170]      // while-condition  =>  TRUE
[09:01:33.171]      // while "1"  (timeout="10000")
[09:01:33.171]      // while-condition  =>  TRUE
[09:01:33.171]      // while "1"  (timeout="10000")
[09:01:33.171]      // while-condition  =>  TRUE
[09:01:33.172]      // while "1"  (timeout="10000")
[09:01:33.172]      // while-condition  =>  TRUE
[09:01:33.172]      // while "1"  (timeout="10000")
[09:01:33.172]      // while-condition  =>  TRUE
[09:01:33.172]      // while "1"  (timeout="10000")
[09:01:33.173]      // while-condition  =>  TRUE
[09:01:33.173]      // while "1"  (timeout="10000")
[09:01:33.173]      // while-condition  =>  TRUE
[09:01:33.173]      // while "1"  (timeout="10000")
[09:01:33.174]      // while-condition  =>  TRUE
[09:01:33.174]      // while "1"  (timeout="10000")
[09:01:33.174]      // while-condition  =>  TRUE
[09:01:33.174]      // while "1"  (timeout="10000")
[09:01:33.174]      // while-condition  =>  TRUE
[09:01:33.175]      // while "1"  (timeout="10000")
[09:01:33.175]      // while-condition  =>  TRUE
[09:01:33.175]      // while "1"  (timeout="10000")
[09:01:33.175]      // while-condition  =>  TRUE
[09:01:33.175]      // while "1"  (timeout="10000")
[09:01:33.176]      // while-condition  =>  TRUE
[09:01:33.176]      // while "1"  (timeout="10000")
[09:01:33.176]      // while-condition  =>  TRUE
[09:01:33.176]      // while "1"  (timeout="10000")
[09:01:33.176]      // while-condition  =>  TRUE
[09:01:33.177]      // while "1"  (timeout="10000")
[09:01:33.177]      // while-condition  =>  TRUE
[09:01:33.177]      // while "1"  (timeout="10000")
[09:01:33.177]      // while-condition  =>  TRUE
[09:01:33.177]      // while "1"  (timeout="10000")
[09:01:33.178]      // while-condition  =>  TRUE
[09:01:33.178]      // while "1"  (timeout="10000")
[09:01:33.178]      // while-condition  =>  TRUE
[09:01:33.178]      // while "1"  (timeout="10000")
[09:01:33.178]      // while-condition  =>  TRUE
[09:01:33.179]      // while "1"  (timeout="10000")
[09:01:33.179]      // while  =>  TIMEOUT
[09:01:33.179]      // end while "1"
[09:01:33.179]    </control>
[09:01:33.179]    <block atomic="true" info="">
[09:01:33.183]  
[09:01:33.183]  ! W001 : No atomic sequence support in debug unit
[09:01:33.183]  
[09:01:33.185]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:01:33.187]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:01:33.187]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:01:33.189]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:01:33.189]    </block>
[09:01:33.190]    <block atomic="false" info="">
[09:01:33.190]      __errorcontrol = 0x00000001;
[09:01:33.191]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:01:33.191]      ReadDP(0x0);
[09:01:33.193]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:01:33.193]      __errorcontrol = 0x00000000;
[09:01:33.194]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:01:33.194]    </block>
[09:01:33.195]  </sequence>
[09:01:33.195]  
[09:01:33.196]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:01:33.196]  
[09:01:33.196]  <debugvars>
[09:01:33.196]    // Pre-defined
[09:01:33.197]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:01:33.197]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:01:33.198]    __dp=0x00000000
[09:01:33.198]    __ap=0x00000000
[09:01:33.198]    __traceout=0x00000000      (Trace Disabled)
[09:01:33.199]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:01:33.199]    __FlashAddr=0x00000000
[09:01:33.200]    __FlashLen=0x00000000
[09:01:33.200]    __FlashArg=0x00000000
[09:01:33.200]    __FlashOp=0x00000000
[09:01:33.201]    __Result=0x00000000
[09:01:33.201]  </debugvars>
[09:01:33.201]  
[09:01:33.202]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:01:33.202]  </sequence>
[09:01:33.203]  
[09:01:33.207]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[09:01:33.207]  
[09:01:33.207]  <debugvars>
[09:01:33.208]    // Pre-defined
[09:01:33.208]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:01:33.209]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:01:33.209]    __dp=0x00000000
[09:01:33.209]    __ap=0x00000000
[09:01:33.210]    __traceout=0x00000000      (Trace Disabled)
[09:01:33.210]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:01:33.210]    __FlashAddr=0x00000000
[09:01:33.211]    __FlashLen=0x00000000
[09:01:33.211]    __FlashArg=0x00000000
[09:01:33.211]    __FlashOp=0x00000000
[09:01:33.212]    __Result=0x00000000
[09:01:33.212]  </debugvars>
[09:01:33.212]  
[09:01:33.213]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:01:33.213]    <block atomic="false" info="">
[09:01:33.214]      __var SW_DP_ABORT  = 0x0;
[09:01:33.214]        // -> [SW_DP_ABORT <= 0x00000000]
[09:01:33.214]      __var DP_CTRL_STAT = 0x4;
[09:01:33.215]        // -> [DP_CTRL_STAT <= 0x00000004]
[09:01:33.215]      __var DP_SELECT    = 0x8;
[09:01:33.215]        // -> [DP_SELECT <= 0x00000008]
[09:01:33.216]      __var powered_down = 0;
[09:01:33.216]        // -> [powered_down <= 0x00000000]
[09:01:33.216]      WriteDP(DP_SELECT, 0x00000000);
[09:01:33.218]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:01:33.218]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:01:33.220]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[09:01:33.220]        // -> [powered_down <= 0x00000001]
[09:01:33.221]    </block>
[09:01:33.221]    <control if="powered_down" while="" timeout="0" info="">
[09:01:33.221]      // if-block "powered_down"
[09:01:33.222]        // =>  TRUE
[09:01:33.222]      <block atomic="false" info="">
[09:01:33.222]        WriteDP(DP_CTRL_STAT, 0x50000000);
[09:01:33.224]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[09:01:33.224]      </block>
[09:01:33.225]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[09:01:33.225]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[09:01:33.227]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:01:33.227]        // while-condition  =>  FALSE
[09:01:33.228]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[09:01:33.228]      </control>
[09:01:33.229]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[09:01:33.229]        // if-block "(__protocol & 0xFFFF) == 1"
[09:01:33.229]          // =>  FALSE
[09:01:33.230]        // skip if-block "(__protocol & 0xFFFF) == 1"
[09:01:33.230]      </control>
[09:01:33.230]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[09:01:33.231]        // if-block "(__protocol & 0xFFFF) == 2"
[09:01:33.231]          // =>  TRUE
[09:01:33.231]        <block atomic="false" info="">
[09:01:33.232]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[09:01:33.234]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[09:01:33.235]          WriteDP(SW_DP_ABORT, 0x0000001E);
[09:01:33.236]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[09:01:33.237]        </block>
[09:01:33.237]        // end if-block "(__protocol & 0xFFFF) == 2"
[09:01:33.238]      </control>
[09:01:33.238]      // end if-block "powered_down"
[09:01:33.238]    </control>
[09:01:33.239]  </sequence>
[09:01:33.239]  
[09:01:33.342]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:01:33.342]  
[09:01:33.342]  <debugvars>
[09:01:33.343]    // Pre-defined
[09:01:33.343]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:01:33.344]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:01:33.344]    __dp=0x00000000
[09:01:33.344]    __ap=0x00000000
[09:01:33.345]    __traceout=0x00000000      (Trace Disabled)
[09:01:33.345]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:01:33.345]    __FlashAddr=0x00000000
[09:01:33.346]    __FlashLen=0x00000000
[09:01:33.346]    __FlashArg=0x00000000
[09:01:33.346]    __FlashOp=0x00000000
[09:01:33.347]    __Result=0x00000000
[09:01:33.347]  </debugvars>
[09:01:33.348]  
[09:01:33.348]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:01:33.348]    <block atomic="true" info="">
[09:01:33.354]  
[09:01:33.354]  ! W001 : No atomic sequence support in debug unit
[09:01:33.354]  
[09:01:33.355]      __var DP_R_IDCODE    = 0x0;
[09:01:33.356]        // -> [DP_R_IDCODE <= 0x00000000]
[09:01:33.356]      __var DP_W_ABORT    = 0x0;
[09:01:33.356]        // -> [DP_W_ABORT <= 0x00000000]
[09:01:33.357]      __var DP_CTRLSTAT = 0x4;
[09:01:33.357]        // -> [DP_CTRLSTAT <= 0x00000004]
[09:01:33.358]      __var DP_W_SELECT    = 0x8;
[09:01:33.358]        // -> [DP_W_SELECT <= 0x00000008]
[09:01:33.358]      __var AP_TAR		= 0x4;
[09:01:33.359]        // -> [AP_TAR <= 0x00000004]
[09:01:33.359]      __var AP_BD0		= 0x0;
[09:01:33.359]        // -> [AP_BD0 <= 0x00000000]
[09:01:33.360]      __var AP_BD1		= 0x4;
[09:01:33.360]        // -> [AP_BD1 <= 0x00000004]
[09:01:33.360]      __var AP_BD2		= 0x8;
[09:01:33.360]        // -> [AP_BD2 <= 0x00000008]
[09:01:33.361]      __var PCWithinFlash = 0;
[09:01:33.361]        // -> [PCWithinFlash <= 0x00000000]
[09:01:33.361]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:01:33.367]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.368]    </block>
[09:01:33.368]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:01:33.368]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:01:33.374]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.374]      // while-condition  =>  FALSE
[09:01:33.375]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:01:33.375]    </control>
[09:01:33.375]    <block atomic="true" info="">
[09:01:33.379]  
[09:01:33.379]  ! W001 : No atomic sequence support in debug unit
[09:01:33.379]  
[09:01:33.381]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:01:33.383]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:01:33.383]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:01:33.385]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.386]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:01:33.388]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:01:33.389]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:01:33.393]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.394]    </block>
[09:01:33.394]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:01:33.394]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.396]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.397]      // while-condition  =>  TRUE
[09:01:33.397]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.399]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.400]      // while-condition  =>  TRUE
[09:01:33.400]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.402]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.403]      // while-condition  =>  TRUE
[09:01:33.403]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.405]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.406]      // while-condition  =>  TRUE
[09:01:33.406]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.408]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.409]      // while-condition  =>  TRUE
[09:01:33.409]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.411]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.411]      // while-condition  =>  TRUE
[09:01:33.412]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.414]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.415]      // while-condition  =>  TRUE
[09:01:33.415]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.417]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.418]      // while-condition  =>  TRUE
[09:01:33.418]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.420]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.420]      // while-condition  =>  TRUE
[09:01:33.421]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.423]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.424]      // while-condition  =>  TRUE
[09:01:33.424]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.426]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.427]      // while-condition  =>  TRUE
[09:01:33.427]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.429]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.430]      // while-condition  =>  TRUE
[09:01:33.430]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.432]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.433]      // while-condition  =>  TRUE
[09:01:33.433]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.436]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.436]      // while-condition  =>  TRUE
[09:01:33.436]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.439]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.439]      // while-condition  =>  TRUE
[09:01:33.439]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.441]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.441]      // while-condition  =>  TRUE
[09:01:33.441]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.444]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.444]      // while-condition  =>  TRUE
[09:01:33.444]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.447]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.447]      // while-condition  =>  TRUE
[09:01:33.447]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.450]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.450]      // while-condition  =>  TRUE
[09:01:33.450]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.452]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.452]      // while-condition  =>  TRUE
[09:01:33.452]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.454]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.454]      // while-condition  =>  TRUE
[09:01:33.454]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.456]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.456]      // while-condition  =>  TRUE
[09:01:33.456]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.458]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.458]      // while-condition  =>  TRUE
[09:01:33.458]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.461]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.461]      // while-condition  =>  TRUE
[09:01:33.461]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.464]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.464]      // while-condition  =>  TRUE
[09:01:33.464]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.467]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.467]      // while-condition  =>  TRUE
[09:01:33.467]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.470]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.470]      // while-condition  =>  TRUE
[09:01:33.470]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.473]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.473]      // while-condition  =>  TRUE
[09:01:33.473]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.476]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.476]      // while-condition  =>  TRUE
[09:01:33.476]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.479]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.479]      // while-condition  =>  TRUE
[09:01:33.479]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.481]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.481]      // while-condition  =>  TRUE
[09:01:33.481]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.484]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.484]      // while-condition  =>  TRUE
[09:01:33.484]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.487]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.487]      // while-condition  =>  TRUE
[09:01:33.488]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.490]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.490]      // while-condition  =>  TRUE
[09:01:33.490]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.493]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.495]      // while-condition  =>  TRUE
[09:01:33.495]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:33.496]      // while  =>  TIMEOUT
[09:01:33.496]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:01:33.496]    </control>
[09:01:33.496]    <block atomic="false" info="">
[09:01:33.497]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:01:33.499]        // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:01:33.500]        // -> [PCWithinFlash <= 0x00000000]
[09:01:33.501]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:01:33.503]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:01:33.503]    </block>
[09:01:33.504]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:01:33.504]      // if-block "PCWithinFlash == 0"
[09:01:33.504]        // =>  TRUE
[09:01:33.504]      // end if-block "PCWithinFlash == 0"
[09:01:33.504]    </control>
[09:01:33.505]  </sequence>
[09:01:33.505]  
[09:01:33.552]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[09:01:33.552]  
[09:01:33.552]  <debugvars>
[09:01:33.553]    // Pre-defined
[09:01:33.553]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:01:33.553]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:01:33.553]    __dp=0x00000000
[09:01:33.554]    __ap=0x00000000
[09:01:33.554]    __traceout=0x00000000      (Trace Disabled)
[09:01:33.554]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:01:33.554]    __FlashAddr=0x00000000
[09:01:33.554]    __FlashLen=0x00000000
[09:01:33.555]    __FlashArg=0x00000000
[09:01:33.555]    __FlashOp=0x00000000
[09:01:33.555]    __Result=0x00000000
[09:01:33.555]  </debugvars>
[09:01:33.556]  
[09:01:33.556]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[09:01:33.556]    <block atomic="false" info="">
[09:01:33.556]    </block>
[09:01:33.557]  </sequence>
[09:01:33.557]  
[09:01:33.559]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[09:01:33.559]  
[09:01:33.559]  <debugvars>
[09:01:33.559]    // Pre-defined
[09:01:33.559]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:01:33.560]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:01:33.560]    __dp=0x00000000
[09:01:33.560]    __ap=0x00000000
[09:01:33.560]    __traceout=0x00000000      (Trace Disabled)
[09:01:33.560]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:01:33.561]    __FlashAddr=0x00000000
[09:01:33.561]    __FlashLen=0x00000000
[09:01:33.561]    __FlashArg=0x00000000
[09:01:33.561]    __FlashOp=0x00000000
[09:01:33.562]    __Result=0x00000000
[09:01:33.562]  </debugvars>
[09:01:33.562]  
[09:01:33.562]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:01:33.563]    <block atomic="false" info="">
[09:01:33.563]      __var nReset      = 0x80;
[09:01:33.563]        // -> [nReset <= 0x00000080]
[09:01:33.563]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:01:33.566]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:01:33.566]    </block>
[09:01:33.566]    <control if="" while="1" timeout="50000" info="">
[09:01:33.566]      // while "1"  (timeout="50000")
[09:01:33.567]      // while-condition  =>  TRUE
[09:01:33.567]      // while "1"  (timeout="50000")
[09:01:33.567]      // while-condition  =>  TRUE
[09:01:33.567]      // while "1"  (timeout="50000")
[09:01:33.568]      // while-condition  =>  TRUE
[09:01:33.568]      // while "1"  (timeout="50000")
[09:01:33.568]      // while-condition  =>  TRUE
[09:01:33.568]      // while "1"  (timeout="50000")
[09:01:33.568]      // while-condition  =>  TRUE
[09:01:33.569]      // while "1"  (timeout="50000")
[09:01:33.569]      // while-condition  =>  TRUE
[09:01:33.569]      // while "1"  (timeout="50000")
[09:01:33.569]      // while-condition  =>  TRUE
[09:01:33.570]      // while "1"  (timeout="50000")
[09:01:33.570]      // while-condition  =>  TRUE
[09:01:33.570]      // while "1"  (timeout="50000")
[09:01:33.570]      // while-condition  =>  TRUE
[09:01:33.571]      // while "1"  (timeout="50000")
[09:01:33.571]      // while-condition  =>  TRUE
[09:01:33.571]      // while "1"  (timeout="50000")
[09:01:33.571]      // while-condition  =>  TRUE
[09:01:33.571]      // while "1"  (timeout="50000")
[09:01:33.572]      // while-condition  =>  TRUE
[09:01:33.572]      // while "1"  (timeout="50000")
[09:01:33.572]      // while-condition  =>  TRUE
[09:01:33.572]      // while "1"  (timeout="50000")
[09:01:33.573]      // while-condition  =>  TRUE
[09:01:33.573]      // while "1"  (timeout="50000")
[09:01:33.573]      // while-condition  =>  TRUE
[09:01:33.573]      // while "1"  (timeout="50000")
[09:01:33.573]      // while-condition  =>  TRUE
[09:01:33.574]      // while "1"  (timeout="50000")
[09:01:33.574]      // while-condition  =>  TRUE
[09:01:33.574]      // while "1"  (timeout="50000")
[09:01:33.574]      // while-condition  =>  TRUE
[09:01:33.575]      // while "1"  (timeout="50000")
[09:01:33.575]      // while-condition  =>  TRUE
[09:01:33.575]      // while "1"  (timeout="50000")
[09:01:33.575]      // while-condition  =>  TRUE
[09:01:33.576]      // while "1"  (timeout="50000")
[09:01:33.576]      // while-condition  =>  TRUE
[09:01:33.576]      // while "1"  (timeout="50000")
[09:01:33.576]      // while-condition  =>  TRUE
[09:01:33.577]      // while "1"  (timeout="50000")
[09:01:33.577]      // while-condition  =>  TRUE
[09:01:33.577]      // while "1"  (timeout="50000")
[09:01:33.577]      // while-condition  =>  TRUE
[09:01:33.578]      // while "1"  (timeout="50000")
[09:01:33.578]      // while-condition  =>  TRUE
[09:01:33.578]      // while "1"  (timeout="50000")
[09:01:33.578]      // while-condition  =>  TRUE
[09:01:33.578]      // while "1"  (timeout="50000")
[09:01:33.579]      // while-condition  =>  TRUE
[09:01:33.579]      // while "1"  (timeout="50000")
[09:01:33.579]      // while-condition  =>  TRUE
[09:01:33.579]      // while "1"  (timeout="50000")
[09:01:33.580]      // while-condition  =>  TRUE
[09:01:33.580]      // while "1"  (timeout="50000")
[09:01:33.580]      // while-condition  =>  TRUE
[09:01:33.581]      // while "1"  (timeout="50000")
[09:01:33.581]      // while-condition  =>  TRUE
[09:01:33.581]      // while "1"  (timeout="50000")
[09:01:33.581]      // while-condition  =>  TRUE
[09:01:33.582]      // while "1"  (timeout="50000")
[09:01:33.582]      // while-condition  =>  TRUE
[09:01:33.582]      // while "1"  (timeout="50000")
[09:01:33.582]      // while-condition  =>  TRUE
[09:01:33.583]      // while "1"  (timeout="50000")
[09:01:33.583]      // while-condition  =>  TRUE
[09:01:33.583]      // while "1"  (timeout="50000")
[09:01:33.583]      // while-condition  =>  TRUE
[09:01:33.583]      // while "1"  (timeout="50000")
[09:01:33.584]      // while-condition  =>  TRUE
[09:01:33.584]      // while "1"  (timeout="50000")
[09:01:33.584]      // while-condition  =>  TRUE
[09:01:33.584]      // while "1"  (timeout="50000")
[09:01:33.585]      // while-condition  =>  TRUE
[09:01:33.585]      // while "1"  (timeout="50000")
[09:01:33.585]      // while-condition  =>  TRUE
[09:01:33.585]      // while "1"  (timeout="50000")
[09:01:33.586]      // while-condition  =>  TRUE
[09:01:33.586]      // while "1"  (timeout="50000")
[09:01:33.586]      // while-condition  =>  TRUE
[09:01:33.586]      // while "1"  (timeout="50000")
[09:01:33.586]      // while-condition  =>  TRUE
[09:01:33.587]      // while "1"  (timeout="50000")
[09:01:33.587]      // while-condition  =>  TRUE
[09:01:33.587]      // while "1"  (timeout="50000")
[09:01:33.587]      // while-condition  =>  TRUE
[09:01:33.588]      // while "1"  (timeout="50000")
[09:01:33.588]      // while-condition  =>  TRUE
[09:01:33.588]      // while "1"  (timeout="50000")
[09:01:33.588]      // while-condition  =>  TRUE
[09:01:33.588]      // while "1"  (timeout="50000")
[09:01:33.589]      // while-condition  =>  TRUE
[09:01:33.589]      // while "1"  (timeout="50000")
[09:01:33.589]      // while-condition  =>  TRUE
[09:01:33.589]      // while "1"  (timeout="50000")
[09:01:33.590]      // while-condition  =>  TRUE
[09:01:33.590]      // while "1"  (timeout="50000")
[09:01:33.590]      // while-condition  =>  TRUE
[09:01:33.590]      // while "1"  (timeout="50000")
[09:01:33.591]      // while-condition  =>  TRUE
[09:01:33.591]      // while "1"  (timeout="50000")
[09:01:33.591]      // while-condition  =>  TRUE
[09:01:33.591]      // while "1"  (timeout="50000")
[09:01:33.592]      // while-condition  =>  TRUE
[09:01:33.592]      // while "1"  (timeout="50000")
[09:01:33.592]      // while-condition  =>  TRUE
[09:01:33.592]      // while "1"  (timeout="50000")
[09:01:33.593]      // while-condition  =>  TRUE
[09:01:33.593]      // while "1"  (timeout="50000")
[09:01:33.593]      // while-condition  =>  TRUE
[09:01:33.593]      // while "1"  (timeout="50000")
[09:01:33.593]      // while-condition  =>  TRUE
[09:01:33.594]      // while "1"  (timeout="50000")
[09:01:33.594]      // while-condition  =>  TRUE
[09:01:33.594]      // while "1"  (timeout="50000")
[09:01:33.594]      // while-condition  =>  TRUE
[09:01:33.595]      // while "1"  (timeout="50000")
[09:01:33.595]      // while-condition  =>  TRUE
[09:01:33.595]      // while "1"  (timeout="50000")
[09:01:33.595]      // while-condition  =>  TRUE
[09:01:33.596]      // while "1"  (timeout="50000")
[09:01:33.596]      // while-condition  =>  TRUE
[09:01:33.596]      // while "1"  (timeout="50000")
[09:01:33.597]      // while-condition  =>  TRUE
[09:01:33.597]      // while "1"  (timeout="50000")
[09:01:33.597]      // while-condition  =>  TRUE
[09:01:33.597]      // while "1"  (timeout="50000")
[09:01:33.598]      // while-condition  =>  TRUE
[09:01:33.598]      // while "1"  (timeout="50000")
[09:01:33.598]      // while-condition  =>  TRUE
[09:01:33.598]      // while "1"  (timeout="50000")
[09:01:33.599]      // while-condition  =>  TRUE
[09:01:33.599]      // while "1"  (timeout="50000")
[09:01:33.599]      // while-condition  =>  TRUE
[09:01:33.599]      // while "1"  (timeout="50000")
[09:01:33.599]      // while-condition  =>  TRUE
[09:01:33.600]      // while "1"  (timeout="50000")
[09:01:33.600]      // while-condition  =>  TRUE
[09:01:33.600]      // while "1"  (timeout="50000")
[09:01:33.600]      // while-condition  =>  TRUE
[09:01:33.601]      // while "1"  (timeout="50000")
[09:01:33.601]      // while-condition  =>  TRUE
[09:01:33.601]      // while "1"  (timeout="50000")
[09:01:33.601]      // while-condition  =>  TRUE
[09:01:33.602]      // while "1"  (timeout="50000")
[09:01:33.602]      // while-condition  =>  TRUE
[09:01:33.602]      // while "1"  (timeout="50000")
[09:01:33.602]      // while-condition  =>  TRUE
[09:01:33.602]      // while "1"  (timeout="50000")
[09:01:33.603]      // while-condition  =>  TRUE
[09:01:33.603]      // while "1"  (timeout="50000")
[09:01:33.603]      // while-condition  =>  TRUE
[09:01:33.603]      // while "1"  (timeout="50000")
[09:01:33.604]      // while-condition  =>  TRUE
[09:01:33.604]      // while "1"  (timeout="50000")
[09:01:33.604]      // while-condition  =>  TRUE
[09:01:33.604]      // while "1"  (timeout="50000")
[09:01:33.605]      // while-condition  =>  TRUE
[09:01:33.605]      // while "1"  (timeout="50000")
[09:01:33.605]      // while-condition  =>  TRUE
[09:01:33.605]      // while "1"  (timeout="50000")
[09:01:33.606]      // while-condition  =>  TRUE
[09:01:33.606]      // while "1"  (timeout="50000")
[09:01:33.606]      // while-condition  =>  TRUE
[09:01:33.606]      // while "1"  (timeout="50000")
[09:01:33.607]      // while-condition  =>  TRUE
[09:01:33.607]      // while "1"  (timeout="50000")
[09:01:33.607]      // while-condition  =>  TRUE
[09:01:33.607]      // while "1"  (timeout="50000")
[09:01:33.608]      // while-condition  =>  TRUE
[09:01:33.608]      // while "1"  (timeout="50000")
[09:01:33.608]      // while-condition  =>  TRUE
[09:01:33.608]      // while "1"  (timeout="50000")
[09:01:33.609]      // while-condition  =>  TRUE
[09:01:33.609]      // while "1"  (timeout="50000")
[09:01:33.609]      // while-condition  =>  TRUE
[09:01:33.609]      // while "1"  (timeout="50000")
[09:01:33.610]      // while-condition  =>  TRUE
[09:01:33.610]      // while "1"  (timeout="50000")
[09:01:33.610]      // while-condition  =>  TRUE
[09:01:33.610]      // while "1"  (timeout="50000")
[09:01:33.610]      // while-condition  =>  TRUE
[09:01:33.611]      // while "1"  (timeout="50000")
[09:01:33.611]      // while-condition  =>  TRUE
[09:01:33.611]      // while "1"  (timeout="50000")
[09:01:33.611]      // while-condition  =>  TRUE
[09:01:33.612]      // while "1"  (timeout="50000")
[09:01:33.612]      // while-condition  =>  TRUE
[09:01:33.612]      // while "1"  (timeout="50000")
[09:01:33.612]      // while-condition  =>  TRUE
[09:01:33.613]      // while "1"  (timeout="50000")
[09:01:33.613]      // while-condition  =>  TRUE
[09:01:33.613]      // while "1"  (timeout="50000")
[09:01:33.613]      // while-condition  =>  TRUE
[09:01:33.614]      // while "1"  (timeout="50000")
[09:01:33.614]      // while-condition  =>  TRUE
[09:01:33.614]      // while "1"  (timeout="50000")
[09:01:33.615]      // while-condition  =>  TRUE
[09:01:33.615]      // while "1"  (timeout="50000")
[09:01:33.615]      // while-condition  =>  TRUE
[09:01:33.615]      // while "1"  (timeout="50000")
[09:01:33.616]      // while-condition  =>  TRUE
[09:01:33.616]      // while "1"  (timeout="50000")
[09:01:33.616]      // while-condition  =>  TRUE
[09:01:33.616]      // while "1"  (timeout="50000")
[09:01:33.617]      // while-condition  =>  TRUE
[09:01:33.617]      // while "1"  (timeout="50000")
[09:01:33.617]      // while  =>  TIMEOUT
[09:01:33.617]      // end while "1"
[09:01:33.617]    </control>
[09:01:33.618]    <block atomic="false" info="">
[09:01:33.618]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:01:33.620]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:01:33.620]    </block>
[09:01:33.620]    <control if="" while="1" timeout="10000" info="">
[09:01:33.621]      // while "1"  (timeout="10000")
[09:01:33.621]      // while-condition  =>  TRUE
[09:01:33.621]      // while "1"  (timeout="10000")
[09:01:33.621]      // while-condition  =>  TRUE
[09:01:33.622]      // while "1"  (timeout="10000")
[09:01:33.622]      // while-condition  =>  TRUE
[09:01:33.622]      // while "1"  (timeout="10000")
[09:01:33.622]      // while-condition  =>  TRUE
[09:01:33.623]      // while "1"  (timeout="10000")
[09:01:33.623]      // while-condition  =>  TRUE
[09:01:33.623]      // while "1"  (timeout="10000")
[09:01:33.623]      // while-condition  =>  TRUE
[09:01:33.623]      // while "1"  (timeout="10000")
[09:01:33.624]      // while-condition  =>  TRUE
[09:01:33.624]      // while "1"  (timeout="10000")
[09:01:33.624]      // while-condition  =>  TRUE
[09:01:33.624]      // while "1"  (timeout="10000")
[09:01:33.625]      // while-condition  =>  TRUE
[09:01:33.625]      // while "1"  (timeout="10000")
[09:01:33.625]      // while-condition  =>  TRUE
[09:01:33.625]      // while "1"  (timeout="10000")
[09:01:33.625]      // while-condition  =>  TRUE
[09:01:33.626]      // while "1"  (timeout="10000")
[09:01:33.626]      // while-condition  =>  TRUE
[09:01:33.626]      // while "1"  (timeout="10000")
[09:01:33.626]      // while-condition  =>  TRUE
[09:01:33.627]      // while "1"  (timeout="10000")
[09:01:33.627]      // while-condition  =>  TRUE
[09:01:33.627]      // while "1"  (timeout="10000")
[09:01:33.627]      // while-condition  =>  TRUE
[09:01:33.628]      // while "1"  (timeout="10000")
[09:01:33.628]      // while-condition  =>  TRUE
[09:01:33.628]      // while "1"  (timeout="10000")
[09:01:33.628]      // while-condition  =>  TRUE
[09:01:33.629]      // while "1"  (timeout="10000")
[09:01:33.629]      // while-condition  =>  TRUE
[09:01:33.629]      // while "1"  (timeout="10000")
[09:01:33.629]      // while-condition  =>  TRUE
[09:01:33.630]      // while "1"  (timeout="10000")
[09:01:33.630]      // while-condition  =>  TRUE
[09:01:33.630]      // while "1"  (timeout="10000")
[09:01:33.630]      // while-condition  =>  TRUE
[09:01:33.631]      // while "1"  (timeout="10000")
[09:01:33.631]      // while-condition  =>  TRUE
[09:01:33.631]      // while "1"  (timeout="10000")
[09:01:33.632]      // while-condition  =>  TRUE
[09:01:33.632]      // while "1"  (timeout="10000")
[09:01:33.632]      // while-condition  =>  TRUE
[09:01:33.633]      // while "1"  (timeout="10000")
[09:01:33.633]      // while  =>  TIMEOUT
[09:01:33.633]      // end while "1"
[09:01:33.633]    </control>
[09:01:33.634]    <block atomic="true" info="">
[09:01:33.638]  
[09:01:33.638]  ! W001 : No atomic sequence support in debug unit
[09:01:33.638]  
[09:01:33.640]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:01:33.642]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:01:33.643]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:01:33.644]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:01:33.645]    </block>
[09:01:33.645]    <block atomic="false" info="">
[09:01:33.645]      __errorcontrol = 0x00000001;
[09:01:33.646]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:01:33.646]      ReadDP(0x0);
[09:01:33.648]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:01:33.649]      __errorcontrol = 0x00000000;
[09:01:33.649]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:01:33.649]    </block>
[09:01:33.649]  </sequence>
[09:01:33.650]  
[09:01:33.653]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[09:01:33.653]  
[09:01:33.654]  <debugvars>
[09:01:33.654]    // Pre-defined
[09:01:33.654]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:01:33.654]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:01:33.655]    __dp=0x00000000
[09:01:33.655]    __ap=0x00000000
[09:01:33.655]    __traceout=0x00000000      (Trace Disabled)
[09:01:33.655]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:01:33.656]    __FlashAddr=0x00000000
[09:01:33.656]    __FlashLen=0x00000000
[09:01:33.656]    __FlashArg=0x00000000
[09:01:33.656]    __FlashOp=0x00000000
[09:01:33.657]    __Result=0x00000000
[09:01:33.657]  </debugvars>
[09:01:33.657]  
[09:01:33.657]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[09:01:33.658]    <block atomic="false" info="">
[09:01:33.658]    </block>
[09:01:33.658]  </sequence>
[09:01:33.658]  
[09:01:33.877]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[09:01:33.877]  
[09:01:33.878]  <debugvars>
[09:01:33.878]    // Pre-defined
[09:01:33.878]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:01:33.879]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:01:33.879]    __dp=0x00000000
[09:01:33.880]    __ap=0x00000000
[09:01:33.880]    __traceout=0x00000000      (Trace Disabled)
[09:01:33.880]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:01:33.881]    __FlashAddr=0x00000000
[09:01:33.881]    __FlashLen=0x00000000
[09:01:33.881]    __FlashArg=0x00000000
[09:01:33.882]    __FlashOp=0x00000000
[09:01:33.882]    __Result=0x00000000
[09:01:33.882]  </debugvars>
[09:01:33.883]  
[09:01:33.883]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[09:01:33.883]    <block atomic="false" info="">
[09:01:33.883]      Sequence("ResetHardware");
[09:01:33.884]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:01:33.884]          <block atomic="false" info="">
[09:01:33.884]            __var nReset      = 0x80;
[09:01:33.884]              // -> [nReset <= 0x00000080]
[09:01:33.885]            DAP_SWJ_Pins(0x00, nReset, 0);
[09:01:33.887]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:01:33.887]          </block>
[09:01:33.887]          <control if="" while="1" timeout="50000" info="">
[09:01:33.888]            // while "1"  (timeout="50000")
[09:01:33.888]            // while-condition  =>  TRUE
[09:01:33.888]            // while "1"  (timeout="50000")
[09:01:33.888]            // while-condition  =>  TRUE
[09:01:33.889]            // while "1"  (timeout="50000")
[09:01:33.889]            // while-condition  =>  TRUE
[09:01:33.889]            // while "1"  (timeout="50000")
[09:01:33.889]            // while-condition  =>  TRUE
[09:01:33.890]            // while "1"  (timeout="50000")
[09:01:33.890]            // while-condition  =>  TRUE
[09:01:33.890]            // while "1"  (timeout="50000")
[09:01:33.890]            // while-condition  =>  TRUE
[09:01:33.891]            // while "1"  (timeout="50000")
[09:01:33.891]            // while-condition  =>  TRUE
[09:01:33.891]            // while "1"  (timeout="50000")
[09:01:33.891]            // while-condition  =>  TRUE
[09:01:33.892]            // while "1"  (timeout="50000")
[09:01:33.892]            // while-condition  =>  TRUE
[09:01:33.892]            // while "1"  (timeout="50000")
[09:01:33.892]            // while-condition  =>  TRUE
[09:01:33.892]            // while "1"  (timeout="50000")
[09:01:33.893]            // while-condition  =>  TRUE
[09:01:33.893]            // while "1"  (timeout="50000")
[09:01:33.893]            // while-condition  =>  TRUE
[09:01:33.893]            // while "1"  (timeout="50000")
[09:01:33.893]            // while-condition  =>  TRUE
[09:01:33.894]            // while "1"  (timeout="50000")
[09:01:33.894]            // while-condition  =>  TRUE
[09:01:33.894]            // while "1"  (timeout="50000")
[09:01:33.894]            // while-condition  =>  TRUE
[09:01:33.894]            // while "1"  (timeout="50000")
[09:01:33.895]            // while-condition  =>  TRUE
[09:01:33.895]            // while "1"  (timeout="50000")
[09:01:33.895]            // while-condition  =>  TRUE
[09:01:33.895]            // while "1"  (timeout="50000")
[09:01:33.895]            // while-condition  =>  TRUE
[09:01:33.896]            // while "1"  (timeout="50000")
[09:01:33.896]            // while-condition  =>  TRUE
[09:01:33.896]            // while "1"  (timeout="50000")
[09:01:33.896]            // while-condition  =>  TRUE
[09:01:33.897]            // while "1"  (timeout="50000")
[09:01:33.897]            // while-condition  =>  TRUE
[09:01:33.897]            // while "1"  (timeout="50000")
[09:01:33.897]            // while-condition  =>  TRUE
[09:01:33.897]            // while "1"  (timeout="50000")
[09:01:33.898]            // while-condition  =>  TRUE
[09:01:33.898]            // while "1"  (timeout="50000")
[09:01:33.898]            // while-condition  =>  TRUE
[09:01:33.898]            // while "1"  (timeout="50000")
[09:01:33.898]            // while-condition  =>  TRUE
[09:01:33.899]            // while "1"  (timeout="50000")
[09:01:33.899]            // while-condition  =>  TRUE
[09:01:33.899]            // while "1"  (timeout="50000")
[09:01:33.899]            // while-condition  =>  TRUE
[09:01:33.899]            // while "1"  (timeout="50000")
[09:01:33.899]            // while-condition  =>  TRUE
[09:01:33.900]            // while "1"  (timeout="50000")
[09:01:33.900]            // while-condition  =>  TRUE
[09:01:33.900]            // while "1"  (timeout="50000")
[09:01:33.900]            // while-condition  =>  TRUE
[09:01:33.900]            // while "1"  (timeout="50000")
[09:01:33.901]            // while-condition  =>  TRUE
[09:01:33.901]            // while "1"  (timeout="50000")
[09:01:33.901]            // while-condition  =>  TRUE
[09:01:33.901]            // while "1"  (timeout="50000")
[09:01:33.902]            // while-condition  =>  TRUE
[09:01:33.902]            // while "1"  (timeout="50000")
[09:01:33.902]            // while-condition  =>  TRUE
[09:01:33.902]            // while "1"  (timeout="50000")
[09:01:33.902]            // while-condition  =>  TRUE
[09:01:33.903]            // while "1"  (timeout="50000")
[09:01:33.903]            // while-condition  =>  TRUE
[09:01:33.903]            // while "1"  (timeout="50000")
[09:01:33.903]            // while-condition  =>  TRUE
[09:01:33.904]            // while "1"  (timeout="50000")
[09:01:33.904]            // while-condition  =>  TRUE
[09:01:33.904]            // while "1"  (timeout="50000")
[09:01:33.904]            // while-condition  =>  TRUE
[09:01:33.905]            // while "1"  (timeout="50000")
[09:01:33.905]            // while-condition  =>  TRUE
[09:01:33.905]            // while "1"  (timeout="50000")
[09:01:33.905]            // while-condition  =>  TRUE
[09:01:33.906]            // while "1"  (timeout="50000")
[09:01:33.906]            // while-condition  =>  TRUE
[09:01:33.906]            // while "1"  (timeout="50000")
[09:01:33.906]            // while-condition  =>  TRUE
[09:01:33.906]            // while "1"  (timeout="50000")
[09:01:33.907]            // while-condition  =>  TRUE
[09:01:33.907]            // while "1"  (timeout="50000")
[09:01:33.907]            // while-condition  =>  TRUE
[09:01:33.907]            // while "1"  (timeout="50000")
[09:01:33.908]            // while-condition  =>  TRUE
[09:01:33.908]            // while "1"  (timeout="50000")
[09:01:33.908]            // while-condition  =>  TRUE
[09:01:33.908]            // while "1"  (timeout="50000")
[09:01:33.908]            // while-condition  =>  TRUE
[09:01:33.909]            // while "1"  (timeout="50000")
[09:01:33.909]            // while-condition  =>  TRUE
[09:01:33.909]            // while "1"  (timeout="50000")
[09:01:33.909]            // while-condition  =>  TRUE
[09:01:33.910]            // while "1"  (timeout="50000")
[09:01:33.910]            // while-condition  =>  TRUE
[09:01:33.910]            // while "1"  (timeout="50000")
[09:01:33.910]            // while-condition  =>  TRUE
[09:01:33.911]            // while "1"  (timeout="50000")
[09:01:33.911]            // while-condition  =>  TRUE
[09:01:33.911]            // while "1"  (timeout="50000")
[09:01:33.911]            // while-condition  =>  TRUE
[09:01:33.912]            // while "1"  (timeout="50000")
[09:01:33.912]            // while-condition  =>  TRUE
[09:01:33.912]            // while "1"  (timeout="50000")
[09:01:33.912]            // while-condition  =>  TRUE
[09:01:33.913]            // while "1"  (timeout="50000")
[09:01:33.913]            // while-condition  =>  TRUE
[09:01:33.913]            // while "1"  (timeout="50000")
[09:01:33.913]            // while-condition  =>  TRUE
[09:01:33.914]            // while "1"  (timeout="50000")
[09:01:33.914]            // while-condition  =>  TRUE
[09:01:33.914]            // while "1"  (timeout="50000")
[09:01:33.914]            // while-condition  =>  TRUE
[09:01:33.915]            // while "1"  (timeout="50000")
[09:01:33.915]            // while-condition  =>  TRUE
[09:01:33.915]            // while "1"  (timeout="50000")
[09:01:33.915]            // while-condition  =>  TRUE
[09:01:33.916]            // while "1"  (timeout="50000")
[09:01:33.916]            // while-condition  =>  TRUE
[09:01:33.916]            // while "1"  (timeout="50000")
[09:01:33.916]            // while-condition  =>  TRUE
[09:01:33.916]            // while "1"  (timeout="50000")
[09:01:33.917]            // while-condition  =>  TRUE
[09:01:33.917]            // while "1"  (timeout="50000")
[09:01:33.917]            // while-condition  =>  TRUE
[09:01:33.917]            // while "1"  (timeout="50000")
[09:01:33.918]            // while-condition  =>  TRUE
[09:01:33.918]            // while "1"  (timeout="50000")
[09:01:33.918]            // while-condition  =>  TRUE
[09:01:33.918]            // while "1"  (timeout="50000")
[09:01:33.919]            // while-condition  =>  TRUE
[09:01:33.919]            // while "1"  (timeout="50000")
[09:01:33.919]            // while-condition  =>  TRUE
[09:01:33.919]            // while "1"  (timeout="50000")
[09:01:33.920]            // while-condition  =>  TRUE
[09:01:33.920]            // while "1"  (timeout="50000")
[09:01:33.920]            // while-condition  =>  TRUE
[09:01:33.920]            // while "1"  (timeout="50000")
[09:01:33.920]            // while-condition  =>  TRUE
[09:01:33.921]            // while "1"  (timeout="50000")
[09:01:33.921]            // while-condition  =>  TRUE
[09:01:33.921]            // while "1"  (timeout="50000")
[09:01:33.921]            // while-condition  =>  TRUE
[09:01:33.922]            // while "1"  (timeout="50000")
[09:01:33.922]            // while-condition  =>  TRUE
[09:01:33.922]            // while "1"  (timeout="50000")
[09:01:33.922]            // while-condition  =>  TRUE
[09:01:33.923]            // while "1"  (timeout="50000")
[09:01:33.923]            // while-condition  =>  TRUE
[09:01:33.923]            // while "1"  (timeout="50000")
[09:01:33.923]            // while-condition  =>  TRUE
[09:01:33.924]            // while "1"  (timeout="50000")
[09:01:33.924]            // while-condition  =>  TRUE
[09:01:33.924]            // while "1"  (timeout="50000")
[09:01:33.924]            // while-condition  =>  TRUE
[09:01:33.925]            // while "1"  (timeout="50000")
[09:01:33.925]            // while-condition  =>  TRUE
[09:01:33.925]            // while "1"  (timeout="50000")
[09:01:33.925]            // while-condition  =>  TRUE
[09:01:33.925]            // while "1"  (timeout="50000")
[09:01:33.926]            // while-condition  =>  TRUE
[09:01:33.926]            // while "1"  (timeout="50000")
[09:01:33.926]            // while-condition  =>  TRUE
[09:01:33.926]            // while "1"  (timeout="50000")
[09:01:33.927]            // while-condition  =>  TRUE
[09:01:33.927]            // while "1"  (timeout="50000")
[09:01:33.927]            // while-condition  =>  TRUE
[09:01:33.927]            // while "1"  (timeout="50000")
[09:01:33.928]            // while-condition  =>  TRUE
[09:01:33.928]            // while "1"  (timeout="50000")
[09:01:33.928]            // while-condition  =>  TRUE
[09:01:33.928]            // while "1"  (timeout="50000")
[09:01:33.928]            // while-condition  =>  TRUE
[09:01:33.929]            // while "1"  (timeout="50000")
[09:01:33.929]            // while-condition  =>  TRUE
[09:01:33.929]            // while "1"  (timeout="50000")
[09:01:33.929]            // while-condition  =>  TRUE
[09:01:33.930]            // while "1"  (timeout="50000")
[09:01:33.930]            // while-condition  =>  TRUE
[09:01:33.930]            // while "1"  (timeout="50000")
[09:01:33.930]            // while-condition  =>  TRUE
[09:01:33.931]            // while "1"  (timeout="50000")
[09:01:33.931]            // while-condition  =>  TRUE
[09:01:33.931]            // while "1"  (timeout="50000")
[09:01:33.931]            // while-condition  =>  TRUE
[09:01:33.932]            // while "1"  (timeout="50000")
[09:01:33.932]            // while-condition  =>  TRUE
[09:01:33.932]            // while "1"  (timeout="50000")
[09:01:33.932]            // while-condition  =>  TRUE
[09:01:33.933]            // while "1"  (timeout="50000")
[09:01:33.933]            // while-condition  =>  TRUE
[09:01:33.933]            // while "1"  (timeout="50000")
[09:01:33.933]            // while-condition  =>  TRUE
[09:01:33.933]            // while "1"  (timeout="50000")
[09:01:33.934]            // while-condition  =>  TRUE
[09:01:33.934]            // while "1"  (timeout="50000")
[09:01:33.934]            // while-condition  =>  TRUE
[09:01:33.934]            // while "1"  (timeout="50000")
[09:01:33.935]            // while-condition  =>  TRUE
[09:01:33.935]            // while "1"  (timeout="50000")
[09:01:33.935]            // while-condition  =>  TRUE
[09:01:33.935]            // while "1"  (timeout="50000")
[09:01:33.936]            // while-condition  =>  TRUE
[09:01:33.936]            // while "1"  (timeout="50000")
[09:01:33.936]            // while-condition  =>  TRUE
[09:01:33.936]            // while "1"  (timeout="50000")
[09:01:33.936]            // while-condition  =>  TRUE
[09:01:33.937]            // while "1"  (timeout="50000")
[09:01:33.937]            // while-condition  =>  TRUE
[09:01:33.937]            // while "1"  (timeout="50000")
[09:01:33.937]            // while-condition  =>  TRUE
[09:01:33.938]            // while "1"  (timeout="50000")
[09:01:33.938]            // while-condition  =>  TRUE
[09:01:33.938]            // while "1"  (timeout="50000")
[09:01:33.938]            // while-condition  =>  TRUE
[09:01:33.939]            // while "1"  (timeout="50000")
[09:01:33.939]            // while-condition  =>  TRUE
[09:01:33.939]            // while "1"  (timeout="50000")
[09:01:33.939]            // while-condition  =>  TRUE
[09:01:33.940]            // while "1"  (timeout="50000")
[09:01:33.940]            // while-condition  =>  TRUE
[09:01:33.940]            // while "1"  (timeout="50000")
[09:01:33.940]            // while-condition  =>  TRUE
[09:01:33.940]            // while "1"  (timeout="50000")
[09:01:33.941]            // while-condition  =>  TRUE
[09:01:33.941]            // while "1"  (timeout="50000")
[09:01:33.941]            // while-condition  =>  TRUE
[09:01:33.941]            // while "1"  (timeout="50000")
[09:01:33.942]            // while-condition  =>  TRUE
[09:01:33.942]            // while "1"  (timeout="50000")
[09:01:33.942]            // while-condition  =>  TRUE
[09:01:33.942]            // while "1"  (timeout="50000")
[09:01:33.943]            // while-condition  =>  TRUE
[09:01:33.943]            // while "1"  (timeout="50000")
[09:01:33.943]            // while-condition  =>  TRUE
[09:01:33.943]            // while "1"  (timeout="50000")
[09:01:33.944]            // while-condition  =>  TRUE
[09:01:33.944]            // while "1"  (timeout="50000")
[09:01:33.944]            // while  =>  TIMEOUT
[09:01:33.944]            // end while "1"
[09:01:33.945]          </control>
[09:01:33.945]          <block atomic="false" info="">
[09:01:33.945]            DAP_SWJ_Pins(nReset, nReset, 0);
[09:01:33.947]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:01:33.948]          </block>
[09:01:33.948]          <control if="" while="1" timeout="10000" info="">
[09:01:33.948]            // while "1"  (timeout="10000")
[09:01:33.949]            // while-condition  =>  TRUE
[09:01:33.949]            // while "1"  (timeout="10000")
[09:01:33.949]            // while-condition  =>  TRUE
[09:01:33.949]            // while "1"  (timeout="10000")
[09:01:33.950]            // while-condition  =>  TRUE
[09:01:33.950]            // while "1"  (timeout="10000")
[09:01:33.950]            // while-condition  =>  TRUE
[09:01:33.951]            // while "1"  (timeout="10000")
[09:01:33.951]            // while-condition  =>  TRUE
[09:01:33.951]            // while "1"  (timeout="10000")
[09:01:33.952]            // while-condition  =>  TRUE
[09:01:33.952]            // while "1"  (timeout="10000")
[09:01:33.952]            // while-condition  =>  TRUE
[09:01:33.953]            // while "1"  (timeout="10000")
[09:01:33.953]            // while-condition  =>  TRUE
[09:01:33.953]            // while "1"  (timeout="10000")
[09:01:33.954]            // while-condition  =>  TRUE
[09:01:33.954]            // while "1"  (timeout="10000")
[09:01:33.954]            // while-condition  =>  TRUE
[09:01:33.954]            // while "1"  (timeout="10000")
[09:01:33.955]            // while-condition  =>  TRUE
[09:01:33.955]            // while "1"  (timeout="10000")
[09:01:33.955]            // while-condition  =>  TRUE
[09:01:33.956]            // while "1"  (timeout="10000")
[09:01:33.956]            // while-condition  =>  TRUE
[09:01:33.956]            // while "1"  (timeout="10000")
[09:01:33.957]            // while-condition  =>  TRUE
[09:01:33.957]            // while "1"  (timeout="10000")
[09:01:33.957]            // while-condition  =>  TRUE
[09:01:33.958]            // while "1"  (timeout="10000")
[09:01:33.958]            // while-condition  =>  TRUE
[09:01:33.958]            // while "1"  (timeout="10000")
[09:01:33.959]            // while-condition  =>  TRUE
[09:01:33.959]            // while "1"  (timeout="10000")
[09:01:33.959]            // while-condition  =>  TRUE
[09:01:33.960]            // while "1"  (timeout="10000")
[09:01:33.960]            // while  =>  TIMEOUT
[09:01:33.960]            // end while "1"
[09:01:33.961]          </control>
[09:01:33.961]          <block atomic="true" info="">
[09:01:33.965]  
[09:01:33.965]  ! W001 : No atomic sequence support in debug unit
[09:01:33.965]  
[09:01:33.967]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:01:33.977]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:01:33.977]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:01:33.980]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:01:33.981]          </block>
[09:01:33.981]          <block atomic="false" info="">
[09:01:33.982]            __errorcontrol = 0x00000001;
[09:01:33.982]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:01:33.983]            ReadDP(0x0);
[09:01:33.985]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:01:33.986]            __errorcontrol = 0x00000000;
[09:01:33.986]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:01:33.987]          </block>
[09:01:33.987]        </sequence>
[09:01:33.988]      Sequence("DebugPortSetup");
[09:01:33.988]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:01:33.988]        </sequence>
[09:01:33.989]      Sequence("DebugPortStart");
[09:01:33.989]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:01:33.989]          <block atomic="false" info="">
[09:01:33.990]            __var SW_DP_ABORT  = 0x0;
[09:01:33.990]              // -> [SW_DP_ABORT <= 0x00000000]
[09:01:33.991]            __var DP_CTRL_STAT = 0x4;
[09:01:33.991]              // -> [DP_CTRL_STAT <= 0x00000004]
[09:01:33.991]            __var DP_SELECT    = 0x8;
[09:01:33.992]              // -> [DP_SELECT <= 0x00000008]
[09:01:33.992]            __var powered_down = 0;
[09:01:33.992]              // -> [powered_down <= 0x00000000]
[09:01:33.993]            WriteDP(DP_SELECT, 0x00000000);
[09:01:33.996]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:01:33.996]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:01:33.999]              // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:01:33.999]              // -> [powered_down <= 0x00000000]
[09:01:34.000]          </block>
[09:01:34.000]          <control if="powered_down" while="" timeout="0" info="">
[09:01:34.000]            // if-block "powered_down"
[09:01:34.000]              // =>  FALSE
[09:01:34.000]            // skip if-block "powered_down"
[09:01:34.000]          </control>
[09:01:34.001]        </sequence>
[09:01:34.001]      Sequence("DebugCoreStart");
[09:01:34.001]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:01:34.001]          <block atomic="true" info="">
[09:01:34.006]  
[09:01:34.006]  ! W001 : No atomic sequence support in debug unit
[09:01:34.006]  
[09:01:34.007]            __var DP_R_IDCODE    = 0x0;
[09:01:34.008]              // -> [DP_R_IDCODE <= 0x00000000]
[09:01:34.008]            __var DP_W_ABORT    = 0x0;
[09:01:34.008]              // -> [DP_W_ABORT <= 0x00000000]
[09:01:34.010]            __var DP_CTRLSTAT = 0x4;
[09:01:34.010]              // -> [DP_CTRLSTAT <= 0x00000004]
[09:01:34.011]            __var DP_W_SELECT    = 0x8;
[09:01:34.011]              // -> [DP_W_SELECT <= 0x00000008]
[09:01:34.011]            __var AP_TAR		= 0x4;
[09:01:34.012]              // -> [AP_TAR <= 0x00000004]
[09:01:34.012]            __var AP_BD0		= 0x0;
[09:01:34.013]              // -> [AP_BD0 <= 0x00000000]
[09:01:34.013]            __var AP_BD1		= 0x4;
[09:01:34.013]              // -> [AP_BD1 <= 0x00000004]
[09:01:34.014]            __var AP_BD2		= 0x8;
[09:01:34.014]              // -> [AP_BD2 <= 0x00000008]
[09:01:34.014]            __var PCWithinFlash = 0;
[09:01:34.015]              // -> [PCWithinFlash <= 0x00000000]
[09:01:34.015]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:01:34.021]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.021]          </block>
[09:01:34.022]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:01:34.023]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:01:34.029]              // -> [Read32(0xE000EDF0) => 0x00030003]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.047]            // while-condition  =>  FALSE
[09:01:34.048]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:01:34.048]          </control>
[09:01:34.049]          <block atomic="true" info="">
[09:01:34.053]  
[09:01:34.053]  ! W001 : No atomic sequence support in debug unit
[09:01:34.053]  
[09:01:34.055]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:01:34.059]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:01:34.060]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:01:34.062]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.062]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:01:34.065]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:01:34.065]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:01:34.070]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.074]          </block>
[09:01:34.075]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:01:34.076]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.078]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.078]            // while-condition  =>  TRUE
[09:01:34.079]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.082]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.083]            // while-condition  =>  TRUE
[09:01:34.083]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.086]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.087]            // while-condition  =>  TRUE
[09:01:34.087]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.090]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.091]            // while-condition  =>  TRUE
[09:01:34.091]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.094]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.095]            // while-condition  =>  TRUE
[09:01:34.095]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.097]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.098]            // while-condition  =>  TRUE
[09:01:34.098]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.100]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.101]            // while-condition  =>  TRUE
[09:01:34.101]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.104]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.104]            // while-condition  =>  TRUE
[09:01:34.105]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.108]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.109]            // while-condition  =>  TRUE
[09:01:34.109]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.112]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.112]            // while-condition  =>  TRUE
[09:01:34.113]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.115]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.115]            // while-condition  =>  TRUE
[09:01:34.117]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.119]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.120]            // while-condition  =>  TRUE
[09:01:34.120]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.122]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.123]            // while-condition  =>  TRUE
[09:01:34.124]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.126]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.127]            // while-condition  =>  TRUE
[09:01:34.127]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.129]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.129]            // while-condition  =>  TRUE
[09:01:34.130]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.133]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.134]            // while-condition  =>  TRUE
[09:01:34.134]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.137]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.138]            // while-condition  =>  TRUE
[09:01:34.138]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.140]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.140]            // while-condition  =>  TRUE
[09:01:34.141]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.143]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.143]            // while-condition  =>  TRUE
[09:01:34.144]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.146]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.146]            // while-condition  =>  TRUE
[09:01:34.147]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.150]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.150]            // while-condition  =>  TRUE
[09:01:34.151]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.153]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.153]            // while-condition  =>  TRUE
[09:01:34.154]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.156]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.156]            // while-condition  =>  TRUE
[09:01:34.157]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.159]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.159]            // while-condition  =>  TRUE
[09:01:34.159]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.161]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.162]            // while-condition  =>  TRUE
[09:01:34.162]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.164]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.165]            // while-condition  =>  TRUE
[09:01:34.166]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.168]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.168]            // while-condition  =>  TRUE
[09:01:34.169]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.171]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.171]            // while-condition  =>  TRUE
[09:01:34.172]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.175]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.176]            // while-condition  =>  TRUE
[09:01:34.176]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.178]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.178]            // while-condition  =>  TRUE
[09:01:34.179]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:34.179]            // while  =>  TIMEOUT
[09:01:34.180]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:01:34.180]          </control>
[09:01:34.181]          <block atomic="false" info="">
[09:01:34.181]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:01:34.184]              // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:01:34.184]              // -> [PCWithinFlash <= 0x00000000]
[09:01:34.185]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:01:34.187]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:01:34.187]          </block>
[09:01:34.188]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:01:34.188]            // if-block "PCWithinFlash == 0"
[09:01:34.188]              // =>  TRUE
[09:01:34.188]            // end if-block "PCWithinFlash == 0"
[09:01:34.188]          </control>
[09:01:34.189]        </sequence>
[09:01:34.189]    </block>
[09:01:34.189]  </sequence>
[09:01:34.189]  
[09:01:36.007]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[09:01:36.007]  
[09:01:36.008]  <debugvars>
[09:01:36.008]    // Pre-defined
[09:01:36.009]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:01:36.010]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:01:36.010]    __dp=0x00000000
[09:01:36.011]    __ap=0x00000000
[09:01:36.011]    __traceout=0x00000000      (Trace Disabled)
[09:01:36.012]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:01:36.012]    __FlashAddr=0x00000000
[09:01:36.012]    __FlashLen=0x00000000
[09:01:36.013]    __FlashArg=0x00000000
[09:01:36.013]    __FlashOp=0x00000000
[09:01:36.014]    __Result=0x00000000
[09:01:36.014]  </debugvars>
[09:01:36.014]  
[09:01:36.014]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[09:01:36.015]    <block atomic="false" info="">
[09:01:36.015]      __var nReset      = 0x80;
[09:01:36.015]        // -> [nReset <= 0x00000080]
[09:01:36.016]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:01:36.018]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:01:36.018]    </block>
[09:01:36.019]    <control if="" while="1" timeout="50000" info="">
[09:01:36.019]      // while "1"  (timeout="50000")
[09:01:36.019]      // while-condition  =>  TRUE
[09:01:36.020]      // while "1"  (timeout="50000")
[09:01:36.020]      // while-condition  =>  TRUE
[09:01:36.020]      // while "1"  (timeout="50000")
[09:01:36.020]      // while-condition  =>  TRUE
[09:01:36.021]      // while "1"  (timeout="50000")
[09:01:36.021]      // while-condition  =>  TRUE
[09:01:36.021]      // while "1"  (timeout="50000")
[09:01:36.021]      // while-condition  =>  TRUE
[09:01:36.021]      // while "1"  (timeout="50000")
[09:01:36.022]      // while-condition  =>  TRUE
[09:01:36.022]      // while "1"  (timeout="50000")
[09:01:36.022]      // while-condition  =>  TRUE
[09:01:36.023]      // while "1"  (timeout="50000")
[09:01:36.023]      // while-condition  =>  TRUE
[09:01:36.023]      // while "1"  (timeout="50000")
[09:01:36.023]      // while-condition  =>  TRUE
[09:01:36.024]      // while "1"  (timeout="50000")
[09:01:36.024]      // while-condition  =>  TRUE
[09:01:36.024]      // while "1"  (timeout="50000")
[09:01:36.024]      // while-condition  =>  TRUE
[09:01:36.024]      // while "1"  (timeout="50000")
[09:01:36.024]      // while-condition  =>  TRUE
[09:01:36.025]      // while "1"  (timeout="50000")
[09:01:36.025]      // while-condition  =>  TRUE
[09:01:36.025]      // while "1"  (timeout="50000")
[09:01:36.025]      // while-condition  =>  TRUE
[09:01:36.025]      // while "1"  (timeout="50000")
[09:01:36.026]      // while-condition  =>  TRUE
[09:01:36.026]      // while "1"  (timeout="50000")
[09:01:36.026]      // while-condition  =>  TRUE
[09:01:36.026]      // while "1"  (timeout="50000")
[09:01:36.026]      // while-condition  =>  TRUE
[09:01:36.027]      // while "1"  (timeout="50000")
[09:01:36.027]      // while-condition  =>  TRUE
[09:01:36.027]      // while "1"  (timeout="50000")
[09:01:36.027]      // while-condition  =>  TRUE
[09:01:36.027]      // while "1"  (timeout="50000")
[09:01:36.027]      // while-condition  =>  TRUE
[09:01:36.027]      // while "1"  (timeout="50000")
[09:01:36.027]      // while-condition  =>  TRUE
[09:01:36.027]      // while "1"  (timeout="50000")
[09:01:36.027]      // while-condition  =>  TRUE
[09:01:36.028]      // while "1"  (timeout="50000")
[09:01:36.028]      // while-condition  =>  TRUE
[09:01:36.028]      // while "1"  (timeout="50000")
[09:01:36.028]      // while-condition  =>  TRUE
[09:01:36.028]      // while "1"  (timeout="50000")
[09:01:36.029]      // while-condition  =>  TRUE
[09:01:36.029]      // while "1"  (timeout="50000")
[09:01:36.029]      // while-condition  =>  TRUE
[09:01:36.029]      // while "1"  (timeout="50000")
[09:01:36.030]      // while-condition  =>  TRUE
[09:01:36.030]      // while "1"  (timeout="50000")
[09:01:36.030]      // while-condition  =>  TRUE
[09:01:36.030]      // while "1"  (timeout="50000")
[09:01:36.030]      // while-condition  =>  TRUE
[09:01:36.031]      // while "1"  (timeout="50000")
[09:01:36.031]      // while-condition  =>  TRUE
[09:01:36.031]      // while "1"  (timeout="50000")
[09:01:36.031]      // while-condition  =>  TRUE
[09:01:36.033]      // while "1"  (timeout="50000")
[09:01:36.033]      // while-condition  =>  TRUE
[09:01:36.033]      // while "1"  (timeout="50000")
[09:01:36.033]      // while-condition  =>  TRUE
[09:01:36.033]      // while "1"  (timeout="50000")
[09:01:36.034]      // while-condition  =>  TRUE
[09:01:36.034]      // while "1"  (timeout="50000")
[09:01:36.034]      // while-condition  =>  TRUE
[09:01:36.034]      // while "1"  (timeout="50000")
[09:01:36.035]      // while-condition  =>  TRUE
[09:01:36.035]      // while "1"  (timeout="50000")
[09:01:36.035]      // while-condition  =>  TRUE
[09:01:36.036]      // while "1"  (timeout="50000")
[09:01:36.036]      // while-condition  =>  TRUE
[09:01:36.036]      // while "1"  (timeout="50000")
[09:01:36.036]      // while-condition  =>  TRUE
[09:01:36.036]      // while "1"  (timeout="50000")
[09:01:36.036]      // while-condition  =>  TRUE
[09:01:36.037]      // while "1"  (timeout="50000")
[09:01:36.037]      // while-condition  =>  TRUE
[09:01:36.037]      // while "1"  (timeout="50000")
[09:01:36.037]      // while-condition  =>  TRUE
[09:01:36.037]      // while "1"  (timeout="50000")
[09:01:36.038]      // while-condition  =>  TRUE
[09:01:36.038]      // while "1"  (timeout="50000")
[09:01:36.038]      // while-condition  =>  TRUE
[09:01:36.038]      // while "1"  (timeout="50000")
[09:01:36.038]      // while-condition  =>  TRUE
[09:01:36.038]      // while "1"  (timeout="50000")
[09:01:36.038]      // while-condition  =>  TRUE
[09:01:36.038]      // while "1"  (timeout="50000")
[09:01:36.039]      // while-condition  =>  TRUE
[09:01:36.039]      // while "1"  (timeout="50000")
[09:01:36.039]      // while-condition  =>  TRUE
[09:01:36.039]      // while "1"  (timeout="50000")
[09:01:36.039]      // while-condition  =>  TRUE
[09:01:36.040]      // while "1"  (timeout="50000")
[09:01:36.040]      // while-condition  =>  TRUE
[09:01:36.041]      // while "1"  (timeout="50000")
[09:01:36.041]      // while-condition  =>  TRUE
[09:01:36.041]      // while "1"  (timeout="50000")
[09:01:36.041]      // while-condition  =>  TRUE
[09:01:36.041]      // while "1"  (timeout="50000")
[09:01:36.041]      // while-condition  =>  TRUE
[09:01:36.041]      // while "1"  (timeout="50000")
[09:01:36.042]      // while-condition  =>  TRUE
[09:01:36.042]      // while "1"  (timeout="50000")
[09:01:36.042]      // while-condition  =>  TRUE
[09:01:36.042]      // while "1"  (timeout="50000")
[09:01:36.042]      // while-condition  =>  TRUE
[09:01:36.043]      // while "1"  (timeout="50000")
[09:01:36.043]      // while-condition  =>  TRUE
[09:01:36.043]      // while "1"  (timeout="50000")
[09:01:36.043]      // while-condition  =>  TRUE
[09:01:36.044]      // while "1"  (timeout="50000")
[09:01:36.044]      // while-condition  =>  TRUE
[09:01:36.044]      // while "1"  (timeout="50000")
[09:01:36.044]      // while-condition  =>  TRUE
[09:01:36.044]      // while "1"  (timeout="50000")
[09:01:36.044]      // while-condition  =>  TRUE
[09:01:36.045]      // while "1"  (timeout="50000")
[09:01:36.045]      // while-condition  =>  TRUE
[09:01:36.045]      // while "1"  (timeout="50000")
[09:01:36.045]      // while-condition  =>  TRUE
[09:01:36.045]      // while "1"  (timeout="50000")
[09:01:36.046]      // while-condition  =>  TRUE
[09:01:36.046]      // while "1"  (timeout="50000")
[09:01:36.046]      // while-condition  =>  TRUE
[09:01:36.046]      // while "1"  (timeout="50000")
[09:01:36.046]      // while-condition  =>  TRUE
[09:01:36.047]      // while "1"  (timeout="50000")
[09:01:36.047]      // while-condition  =>  TRUE
[09:01:36.047]      // while "1"  (timeout="50000")
[09:01:36.047]      // while-condition  =>  TRUE
[09:01:36.047]      // while "1"  (timeout="50000")
[09:01:36.048]      // while-condition  =>  TRUE
[09:01:36.048]      // while "1"  (timeout="50000")
[09:01:36.048]      // while-condition  =>  TRUE
[09:01:36.049]      // while "1"  (timeout="50000")
[09:01:36.049]      // while-condition  =>  TRUE
[09:01:36.049]      // while "1"  (timeout="50000")
[09:01:36.049]      // while-condition  =>  TRUE
[09:01:36.050]      // while "1"  (timeout="50000")
[09:01:36.050]      // while-condition  =>  TRUE
[09:01:36.050]      // while "1"  (timeout="50000")
[09:01:36.050]      // while-condition  =>  TRUE
[09:01:36.050]      // while "1"  (timeout="50000")
[09:01:36.050]      // while-condition  =>  TRUE
[09:01:36.051]      // while "1"  (timeout="50000")
[09:01:36.051]      // while-condition  =>  TRUE
[09:01:36.051]      // while "1"  (timeout="50000")
[09:01:36.051]      // while-condition  =>  TRUE
[09:01:36.052]      // while "1"  (timeout="50000")
[09:01:36.052]      // while-condition  =>  TRUE
[09:01:36.052]      // while "1"  (timeout="50000")
[09:01:36.052]      // while-condition  =>  TRUE
[09:01:36.053]      // while "1"  (timeout="50000")
[09:01:36.053]      // while-condition  =>  TRUE
[09:01:36.053]      // while "1"  (timeout="50000")
[09:01:36.053]      // while-condition  =>  TRUE
[09:01:36.054]      // while "1"  (timeout="50000")
[09:01:36.054]      // while-condition  =>  TRUE
[09:01:36.054]      // while "1"  (timeout="50000")
[09:01:36.054]      // while-condition  =>  TRUE
[09:01:36.054]      // while "1"  (timeout="50000")
[09:01:36.055]      // while-condition  =>  TRUE
[09:01:36.055]      // while "1"  (timeout="50000")
[09:01:36.055]      // while-condition  =>  TRUE
[09:01:36.055]      // while "1"  (timeout="50000")
[09:01:36.055]      // while-condition  =>  TRUE
[09:01:36.055]      // while "1"  (timeout="50000")
[09:01:36.056]      // while-condition  =>  TRUE
[09:01:36.056]      // while "1"  (timeout="50000")
[09:01:36.056]      // while-condition  =>  TRUE
[09:01:36.056]      // while "1"  (timeout="50000")
[09:01:36.057]      // while-condition  =>  TRUE
[09:01:36.057]      // while "1"  (timeout="50000")
[09:01:36.057]      // while-condition  =>  TRUE
[09:01:36.057]      // while "1"  (timeout="50000")
[09:01:36.057]      // while-condition  =>  TRUE
[09:01:36.057]      // while "1"  (timeout="50000")
[09:01:36.058]      // while-condition  =>  TRUE
[09:01:36.058]      // while "1"  (timeout="50000")
[09:01:36.058]      // while-condition  =>  TRUE
[09:01:36.058]      // while "1"  (timeout="50000")
[09:01:36.058]      // while-condition  =>  TRUE
[09:01:36.059]      // while "1"  (timeout="50000")
[09:01:36.059]      // while-condition  =>  TRUE
[09:01:36.059]      // while "1"  (timeout="50000")
[09:01:36.059]      // while-condition  =>  TRUE
[09:01:36.060]      // while "1"  (timeout="50000")
[09:01:36.060]      // while-condition  =>  TRUE
[09:01:36.060]      // while "1"  (timeout="50000")
[09:01:36.060]      // while-condition  =>  TRUE
[09:01:36.060]      // while "1"  (timeout="50000")
[09:01:36.061]      // while-condition  =>  TRUE
[09:01:36.061]      // while "1"  (timeout="50000")
[09:01:36.061]      // while-condition  =>  TRUE
[09:01:36.061]      // while "1"  (timeout="50000")
[09:01:36.061]      // while-condition  =>  TRUE
[09:01:36.061]      // while "1"  (timeout="50000")
[09:01:36.062]      // while-condition  =>  TRUE
[09:01:36.062]      // while "1"  (timeout="50000")
[09:01:36.062]      // while-condition  =>  TRUE
[09:01:36.062]      // while "1"  (timeout="50000")
[09:01:36.063]      // while-condition  =>  TRUE
[09:01:36.063]      // while "1"  (timeout="50000")
[09:01:36.063]      // while-condition  =>  TRUE
[09:01:36.063]      // while "1"  (timeout="50000")
[09:01:36.064]      // while-condition  =>  TRUE
[09:01:36.064]      // while "1"  (timeout="50000")
[09:01:36.064]      // while-condition  =>  TRUE
[09:01:36.065]      // while "1"  (timeout="50000")
[09:01:36.065]      // while-condition  =>  TRUE
[09:01:36.065]      // while "1"  (timeout="50000")
[09:01:36.066]      // while-condition  =>  TRUE
[09:01:36.066]      // while "1"  (timeout="50000")
[09:01:36.066]      // while-condition  =>  TRUE
[09:01:36.067]      // while "1"  (timeout="50000")
[09:01:36.067]      // while-condition  =>  TRUE
[09:01:36.067]      // while "1"  (timeout="50000")
[09:01:36.068]      // while-condition  =>  TRUE
[09:01:36.068]      // while "1"  (timeout="50000")
[09:01:36.068]      // while-condition  =>  TRUE
[09:01:36.068]      // while "1"  (timeout="50000")
[09:01:36.069]      // while-condition  =>  TRUE
[09:01:36.069]      // while "1"  (timeout="50000")
[09:01:36.069]      // while-condition  =>  TRUE
[09:01:36.070]      // while "1"  (timeout="50000")
[09:01:36.070]      // while  =>  TIMEOUT
[09:01:36.070]      // end while "1"
[09:01:36.071]    </control>
[09:01:36.071]    <block atomic="false" info="">
[09:01:36.071]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:01:36.073]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:01:36.074]    </block>
[09:01:36.074]  </sequence>
[09:01:36.074]  
[09:01:36.872]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:01:36.872]  
[09:01:36.873]  <debugvars>
[09:01:36.874]    // Pre-defined
[09:01:36.874]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:01:36.874]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:01:36.875]    __dp=0x00000000
[09:01:36.876]    __ap=0x00000000
[09:01:36.876]    __traceout=0x00000000      (Trace Disabled)
[09:01:36.876]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:01:36.877]    __FlashAddr=0x00000000
[09:01:36.877]    __FlashLen=0x00000000
[09:01:36.877]    __FlashArg=0x00000000
[09:01:36.878]    __FlashOp=0x00000000
[09:01:36.878]    __Result=0x00000000
[09:01:36.878]  </debugvars>
[09:01:36.879]  
[09:01:36.880]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:01:36.880]    <block atomic="false" info="">
[09:01:36.880]      __var nReset      = 0x80;
[09:01:36.880]        // -> [nReset <= 0x00000080]
[09:01:36.881]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:01:36.883]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:01:36.883]    </block>
[09:01:36.883]    <control if="" while="1" timeout="50000" info="">
[09:01:36.883]      // while "1"  (timeout="50000")
[09:01:36.884]      // while-condition  =>  TRUE
[09:01:36.884]      // while "1"  (timeout="50000")
[09:01:36.885]      // while-condition  =>  TRUE
[09:01:36.885]      // while "1"  (timeout="50000")
[09:01:36.885]      // while-condition  =>  TRUE
[09:01:36.885]      // while "1"  (timeout="50000")
[09:01:36.885]      // while-condition  =>  TRUE
[09:01:36.886]      // while "1"  (timeout="50000")
[09:01:36.886]      // while-condition  =>  TRUE
[09:01:36.886]      // while "1"  (timeout="50000")
[09:01:36.887]      // while-condition  =>  TRUE
[09:01:36.887]      // while "1"  (timeout="50000")
[09:01:36.888]      // while-condition  =>  TRUE
[09:01:36.888]      // while "1"  (timeout="50000")
[09:01:36.888]      // while-condition  =>  TRUE
[09:01:36.888]      // while "1"  (timeout="50000")
[09:01:36.888]      // while-condition  =>  TRUE
[09:01:36.888]      // while "1"  (timeout="50000")
[09:01:36.889]      // while-condition  =>  TRUE
[09:01:36.889]      // while "1"  (timeout="50000")
[09:01:36.889]      // while-condition  =>  TRUE
[09:01:36.889]      // while "1"  (timeout="50000")
[09:01:36.890]      // while-condition  =>  TRUE
[09:01:36.890]      // while "1"  (timeout="50000")
[09:01:36.891]      // while-condition  =>  TRUE
[09:01:36.891]      // while "1"  (timeout="50000")
[09:01:36.891]      // while-condition  =>  TRUE
[09:01:36.891]      // while "1"  (timeout="50000")
[09:01:36.891]      // while-condition  =>  TRUE
[09:01:36.891]      // while "1"  (timeout="50000")
[09:01:36.892]      // while-condition  =>  TRUE
[09:01:36.892]      // while "1"  (timeout="50000")
[09:01:36.892]      // while-condition  =>  TRUE
[09:01:36.892]      // while "1"  (timeout="50000")
[09:01:36.893]      // while-condition  =>  TRUE
[09:01:36.893]      // while "1"  (timeout="50000")
[09:01:36.893]      // while-condition  =>  TRUE
[09:01:36.893]      // while "1"  (timeout="50000")
[09:01:36.893]      // while-condition  =>  TRUE
[09:01:36.894]      // while "1"  (timeout="50000")
[09:01:36.894]      // while-condition  =>  TRUE
[09:01:36.894]      // while "1"  (timeout="50000")
[09:01:36.894]      // while-condition  =>  TRUE
[09:01:36.894]      // while "1"  (timeout="50000")
[09:01:36.894]      // while-condition  =>  TRUE
[09:01:36.895]      // while "1"  (timeout="50000")
[09:01:36.895]      // while-condition  =>  TRUE
[09:01:36.895]      // while "1"  (timeout="50000")
[09:01:36.895]      // while-condition  =>  TRUE
[09:01:36.895]      // while "1"  (timeout="50000")
[09:01:36.895]      // while-condition  =>  TRUE
[09:01:36.895]      // while "1"  (timeout="50000")
[09:01:36.895]      // while-condition  =>  TRUE
[09:01:36.896]      // while "1"  (timeout="50000")
[09:01:36.896]      // while-condition  =>  TRUE
[09:01:36.896]      // while "1"  (timeout="50000")
[09:01:36.896]      // while-condition  =>  TRUE
[09:01:36.896]      // while "1"  (timeout="50000")
[09:01:36.897]      // while-condition  =>  TRUE
[09:01:36.897]      // while "1"  (timeout="50000")
[09:01:36.897]      // while-condition  =>  TRUE
[09:01:36.898]      // while "1"  (timeout="50000")
[09:01:36.898]      // while-condition  =>  TRUE
[09:01:36.898]      // while "1"  (timeout="50000")
[09:01:36.898]      // while-condition  =>  TRUE
[09:01:36.898]      // while "1"  (timeout="50000")
[09:01:36.899]      // while-condition  =>  TRUE
[09:01:36.899]      // while "1"  (timeout="50000")
[09:01:36.899]      // while-condition  =>  TRUE
[09:01:36.899]      // while "1"  (timeout="50000")
[09:01:36.899]      // while-condition  =>  TRUE
[09:01:36.899]      // while "1"  (timeout="50000")
[09:01:36.899]      // while-condition  =>  TRUE
[09:01:36.899]      // while "1"  (timeout="50000")
[09:01:36.900]      // while-condition  =>  TRUE
[09:01:36.900]      // while "1"  (timeout="50000")
[09:01:36.900]      // while-condition  =>  TRUE
[09:01:36.900]      // while "1"  (timeout="50000")
[09:01:36.900]      // while-condition  =>  TRUE
[09:01:36.901]      // while "1"  (timeout="50000")
[09:01:36.901]      // while-condition  =>  TRUE
[09:01:36.901]      // while "1"  (timeout="50000")
[09:01:36.902]      // while-condition  =>  TRUE
[09:01:36.902]      // while "1"  (timeout="50000")
[09:01:36.902]      // while-condition  =>  TRUE
[09:01:36.902]      // while "1"  (timeout="50000")
[09:01:36.902]      // while-condition  =>  TRUE
[09:01:36.903]      // while "1"  (timeout="50000")
[09:01:36.903]      // while-condition  =>  TRUE
[09:01:36.903]      // while "1"  (timeout="50000")
[09:01:36.903]      // while-condition  =>  TRUE
[09:01:36.903]      // while "1"  (timeout="50000")
[09:01:36.904]      // while-condition  =>  TRUE
[09:01:36.904]      // while "1"  (timeout="50000")
[09:01:36.904]      // while-condition  =>  TRUE
[09:01:36.904]      // while "1"  (timeout="50000")
[09:01:36.904]      // while-condition  =>  TRUE
[09:01:36.904]      // while "1"  (timeout="50000")
[09:01:36.904]      // while-condition  =>  TRUE
[09:01:36.904]      // while "1"  (timeout="50000")
[09:01:36.905]      // while-condition  =>  TRUE
[09:01:36.905]      // while "1"  (timeout="50000")
[09:01:36.905]      // while-condition  =>  TRUE
[09:01:36.905]      // while "1"  (timeout="50000")
[09:01:36.905]      // while-condition  =>  TRUE
[09:01:36.906]      // while "1"  (timeout="50000")
[09:01:36.906]      // while-condition  =>  TRUE
[09:01:36.907]      // while "1"  (timeout="50000")
[09:01:36.907]      // while-condition  =>  TRUE
[09:01:36.907]      // while "1"  (timeout="50000")
[09:01:36.907]      // while-condition  =>  TRUE
[09:01:36.907]      // while "1"  (timeout="50000")
[09:01:36.908]      // while-condition  =>  TRUE
[09:01:36.908]      // while "1"  (timeout="50000")
[09:01:36.908]      // while-condition  =>  TRUE
[09:01:36.908]      // while "1"  (timeout="50000")
[09:01:36.908]      // while-condition  =>  TRUE
[09:01:36.909]      // while "1"  (timeout="50000")
[09:01:36.909]      // while-condition  =>  TRUE
[09:01:36.909]      // while "1"  (timeout="50000")
[09:01:36.909]      // while-condition  =>  TRUE
[09:01:36.909]      // while "1"  (timeout="50000")
[09:01:36.910]      // while-condition  =>  TRUE
[09:01:36.910]      // while "1"  (timeout="50000")
[09:01:36.910]      // while-condition  =>  TRUE
[09:01:36.910]      // while "1"  (timeout="50000")
[09:01:36.910]      // while-condition  =>  TRUE
[09:01:36.910]      // while "1"  (timeout="50000")
[09:01:36.910]      // while-condition  =>  TRUE
[09:01:36.910]      // while "1"  (timeout="50000")
[09:01:36.911]      // while-condition  =>  TRUE
[09:01:36.911]      // while "1"  (timeout="50000")
[09:01:36.911]      // while-condition  =>  TRUE
[09:01:36.911]      // while "1"  (timeout="50000")
[09:01:36.911]      // while-condition  =>  TRUE
[09:01:36.912]      // while "1"  (timeout="50000")
[09:01:36.912]      // while-condition  =>  TRUE
[09:01:36.913]      // while "1"  (timeout="50000")
[09:01:36.913]      // while-condition  =>  TRUE
[09:01:36.913]      // while "1"  (timeout="50000")
[09:01:36.913]      // while-condition  =>  TRUE
[09:01:36.913]      // while "1"  (timeout="50000")
[09:01:36.914]      // while-condition  =>  TRUE
[09:01:36.914]      // while "1"  (timeout="50000")
[09:01:36.914]      // while-condition  =>  TRUE
[09:01:36.914]      // while "1"  (timeout="50000")
[09:01:36.914]      // while-condition  =>  TRUE
[09:01:36.915]      // while "1"  (timeout="50000")
[09:01:36.915]      // while-condition  =>  TRUE
[09:01:36.915]      // while "1"  (timeout="50000")
[09:01:36.915]      // while-condition  =>  TRUE
[09:01:36.915]      // while "1"  (timeout="50000")
[09:01:36.915]      // while-condition  =>  TRUE
[09:01:36.916]      // while "1"  (timeout="50000")
[09:01:36.916]      // while-condition  =>  TRUE
[09:01:36.916]      // while "1"  (timeout="50000")
[09:01:36.916]      // while-condition  =>  TRUE
[09:01:36.916]      // while "1"  (timeout="50000")
[09:01:36.917]      // while-condition  =>  TRUE
[09:01:36.917]      // while "1"  (timeout="50000")
[09:01:36.917]      // while-condition  =>  TRUE
[09:01:36.917]      // while "1"  (timeout="50000")
[09:01:36.917]      // while-condition  =>  TRUE
[09:01:36.918]      // while "1"  (timeout="50000")
[09:01:36.918]      // while-condition  =>  TRUE
[09:01:36.918]      // while "1"  (timeout="50000")
[09:01:36.918]      // while-condition  =>  TRUE
[09:01:36.918]      // while "1"  (timeout="50000")
[09:01:36.919]      // while-condition  =>  TRUE
[09:01:36.919]      // while "1"  (timeout="50000")
[09:01:36.919]      // while-condition  =>  TRUE
[09:01:36.919]      // while "1"  (timeout="50000")
[09:01:36.920]      // while-condition  =>  TRUE
[09:01:36.920]      // while "1"  (timeout="50000")
[09:01:36.920]      // while-condition  =>  TRUE
[09:01:36.920]      // while "1"  (timeout="50000")
[09:01:36.920]      // while-condition  =>  TRUE
[09:01:36.920]      // while "1"  (timeout="50000")
[09:01:36.920]      // while-condition  =>  TRUE
[09:01:36.920]      // while "1"  (timeout="50000")
[09:01:36.920]      // while-condition  =>  TRUE
[09:01:36.921]      // while "1"  (timeout="50000")
[09:01:36.921]      // while-condition  =>  TRUE
[09:01:36.921]      // while "1"  (timeout="50000")
[09:01:36.921]      // while-condition  =>  TRUE
[09:01:36.922]      // while "1"  (timeout="50000")
[09:01:36.923]      // while-condition  =>  TRUE
[09:01:36.923]      // while "1"  (timeout="50000")
[09:01:36.923]      // while-condition  =>  TRUE
[09:01:36.923]      // while "1"  (timeout="50000")
[09:01:36.923]      // while-condition  =>  TRUE
[09:01:36.924]      // while "1"  (timeout="50000")
[09:01:36.924]      // while-condition  =>  TRUE
[09:01:36.924]      // while "1"  (timeout="50000")
[09:01:36.924]      // while-condition  =>  TRUE
[09:01:36.924]      // while "1"  (timeout="50000")
[09:01:36.925]      // while-condition  =>  TRUE
[09:01:36.925]      // while "1"  (timeout="50000")
[09:01:36.925]      // while-condition  =>  TRUE
[09:01:36.925]      // while "1"  (timeout="50000")
[09:01:36.925]      // while-condition  =>  TRUE
[09:01:36.926]      // while "1"  (timeout="50000")
[09:01:36.926]      // while-condition  =>  TRUE
[09:01:36.926]      // while "1"  (timeout="50000")
[09:01:36.926]      // while-condition  =>  TRUE
[09:01:36.926]      // while "1"  (timeout="50000")
[09:01:36.927]      // while-condition  =>  TRUE
[09:01:36.927]      // while "1"  (timeout="50000")
[09:01:36.927]      // while-condition  =>  TRUE
[09:01:36.927]      // while "1"  (timeout="50000")
[09:01:36.927]      // while-condition  =>  TRUE
[09:01:36.927]      // while "1"  (timeout="50000")
[09:01:36.928]      // while-condition  =>  TRUE
[09:01:36.928]      // while "1"  (timeout="50000")
[09:01:36.928]      // while-condition  =>  TRUE
[09:01:36.928]      // while "1"  (timeout="50000")
[09:01:36.928]      // while-condition  =>  TRUE
[09:01:36.929]      // while "1"  (timeout="50000")
[09:01:36.929]      // while-condition  =>  TRUE
[09:01:36.929]      // while "1"  (timeout="50000")
[09:01:36.929]      // while-condition  =>  TRUE
[09:01:36.929]      // while "1"  (timeout="50000")
[09:01:36.930]      // while-condition  =>  TRUE
[09:01:36.930]      // while "1"  (timeout="50000")
[09:01:36.930]      // while-condition  =>  TRUE
[09:01:36.930]      // while "1"  (timeout="50000")
[09:01:36.930]      // while-condition  =>  TRUE
[09:01:36.931]      // while "1"  (timeout="50000")
[09:01:36.931]      // while-condition  =>  TRUE
[09:01:36.931]      // while "1"  (timeout="50000")
[09:01:36.931]      // while-condition  =>  TRUE
[09:01:36.931]      // while "1"  (timeout="50000")
[09:01:36.931]      // while-condition  =>  TRUE
[09:01:36.931]      // while "1"  (timeout="50000")
[09:01:36.931]      // while-condition  =>  TRUE
[09:01:36.931]      // while "1"  (timeout="50000")
[09:01:36.932]      // while-condition  =>  TRUE
[09:01:36.932]      // while "1"  (timeout="50000")
[09:01:36.932]      // while-condition  =>  TRUE
[09:01:36.932]      // while "1"  (timeout="50000")
[09:01:36.932]      // while-condition  =>  TRUE
[09:01:36.933]      // while "1"  (timeout="50000")
[09:01:36.934]      // while-condition  =>  TRUE
[09:01:36.934]      // while "1"  (timeout="50000")
[09:01:36.934]      // while-condition  =>  TRUE
[09:01:36.934]      // while "1"  (timeout="50000")
[09:01:36.934]      // while-condition  =>  TRUE
[09:01:36.935]      // while "1"  (timeout="50000")
[09:01:36.935]      // while-condition  =>  TRUE
[09:01:36.935]      // while "1"  (timeout="50000")
[09:01:36.935]      // while-condition  =>  TRUE
[09:01:36.935]      // while "1"  (timeout="50000")
[09:01:36.935]      // while-condition  =>  TRUE
[09:01:36.935]      // while "1"  (timeout="50000")
[09:01:36.935]      // while-condition  =>  TRUE
[09:01:36.936]      // while "1"  (timeout="50000")
[09:01:36.936]      // while-condition  =>  TRUE
[09:01:36.936]      // while "1"  (timeout="50000")
[09:01:36.936]      // while-condition  =>  TRUE
[09:01:36.937]      // while "1"  (timeout="50000")
[09:01:36.937]      // while-condition  =>  TRUE
[09:01:36.937]      // while "1"  (timeout="50000")
[09:01:36.937]      // while-condition  =>  TRUE
[09:01:36.937]      // while "1"  (timeout="50000")
[09:01:36.938]      // while-condition  =>  TRUE
[09:01:36.938]      // while "1"  (timeout="50000")
[09:01:36.938]      // while-condition  =>  TRUE
[09:01:36.938]      // while "1"  (timeout="50000")
[09:01:36.939]      // while-condition  =>  TRUE
[09:01:36.939]      // while "1"  (timeout="50000")
[09:01:36.939]      // while-condition  =>  TRUE
[09:01:36.939]      // while "1"  (timeout="50000")
[09:01:36.940]      // while-condition  =>  TRUE
[09:01:36.940]      // while "1"  (timeout="50000")
[09:01:36.940]      // while-condition  =>  TRUE
[09:01:36.940]      // while "1"  (timeout="50000")
[09:01:36.941]      // while-condition  =>  TRUE
[09:01:36.941]      // while "1"  (timeout="50000")
[09:01:36.941]      // while-condition  =>  TRUE
[09:01:36.942]      // while "1"  (timeout="50000")
[09:01:36.942]      // while-condition  =>  TRUE
[09:01:36.942]      // while "1"  (timeout="50000")
[09:01:36.942]      // while-condition  =>  TRUE
[09:01:36.942]      // while "1"  (timeout="50000")
[09:01:36.942]      // while-condition  =>  TRUE
[09:01:36.942]      // while "1"  (timeout="50000")
[09:01:36.943]      // while-condition  =>  TRUE
[09:01:36.944]      // while "1"  (timeout="50000")
[09:01:36.944]      // while-condition  =>  TRUE
[09:01:36.944]      // while "1"  (timeout="50000")
[09:01:36.944]      // while-condition  =>  TRUE
[09:01:36.944]      // while "1"  (timeout="50000")
[09:01:36.945]      // while  =>  TIMEOUT
[09:01:36.945]      // end while "1"
[09:01:36.945]    </control>
[09:01:36.945]    <block atomic="false" info="">
[09:01:36.945]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:01:36.947]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:01:36.947]    </block>
[09:01:36.947]    <control if="" while="1" timeout="10000" info="">
[09:01:36.948]      // while "1"  (timeout="10000")
[09:01:36.948]      // while-condition  =>  TRUE
[09:01:36.948]      // while "1"  (timeout="10000")
[09:01:36.948]      // while-condition  =>  TRUE
[09:01:36.948]      // while "1"  (timeout="10000")
[09:01:36.949]      // while-condition  =>  TRUE
[09:01:36.949]      // while "1"  (timeout="10000")
[09:01:36.949]      // while-condition  =>  TRUE
[09:01:36.949]      // while "1"  (timeout="10000")
[09:01:36.950]      // while-condition  =>  TRUE
[09:01:36.950]      // while "1"  (timeout="10000")
[09:01:36.950]      // while-condition  =>  TRUE
[09:01:36.950]      // while "1"  (timeout="10000")
[09:01:36.951]      // while-condition  =>  TRUE
[09:01:36.951]      // while "1"  (timeout="10000")
[09:01:36.951]      // while-condition  =>  TRUE
[09:01:36.951]      // while "1"  (timeout="10000")
[09:01:36.951]      // while-condition  =>  TRUE
[09:01:36.952]      // while "1"  (timeout="10000")
[09:01:36.952]      // while-condition  =>  TRUE
[09:01:36.952]      // while "1"  (timeout="10000")
[09:01:36.952]      // while-condition  =>  TRUE
[09:01:36.953]      // while "1"  (timeout="10000")
[09:01:36.953]      // while-condition  =>  TRUE
[09:01:36.953]      // while "1"  (timeout="10000")
[09:01:36.954]      // while-condition  =>  TRUE
[09:01:36.954]      // while "1"  (timeout="10000")
[09:01:36.954]      // while-condition  =>  TRUE
[09:01:36.954]      // while "1"  (timeout="10000")
[09:01:36.954]      // while-condition  =>  TRUE
[09:01:36.955]      // while "1"  (timeout="10000")
[09:01:36.955]      // while-condition  =>  TRUE
[09:01:36.955]      // while "1"  (timeout="10000")
[09:01:36.955]      // while-condition  =>  TRUE
[09:01:36.955]      // while "1"  (timeout="10000")
[09:01:36.955]      // while-condition  =>  TRUE
[09:01:36.955]      // while "1"  (timeout="10000")
[09:01:36.955]      // while-condition  =>  TRUE
[09:01:36.956]      // while "1"  (timeout="10000")
[09:01:36.956]      // while-condition  =>  TRUE
[09:01:36.956]      // while "1"  (timeout="10000")
[09:01:36.956]      // while-condition  =>  TRUE
[09:01:36.956]      // while "1"  (timeout="10000")
[09:01:36.957]      // while-condition  =>  TRUE
[09:01:36.957]      // while "1"  (timeout="10000")
[09:01:36.957]      // while-condition  =>  TRUE
[09:01:36.957]      // while "1"  (timeout="10000")
[09:01:36.957]      // while-condition  =>  TRUE
[09:01:36.957]      // while "1"  (timeout="10000")
[09:01:36.958]      // while-condition  =>  TRUE
[09:01:36.958]      // while "1"  (timeout="10000")
[09:01:36.959]      // while-condition  =>  TRUE
[09:01:36.959]      // while "1"  (timeout="10000")
[09:01:36.959]      // while-condition  =>  TRUE
[09:01:36.959]      // while "1"  (timeout="10000")
[09:01:36.959]      // while-condition  =>  TRUE
[09:01:36.960]      // while "1"  (timeout="10000")
[09:01:36.960]      // while-condition  =>  TRUE
[09:01:36.960]      // while "1"  (timeout="10000")
[09:01:36.960]      // while  =>  TIMEOUT
[09:01:36.960]      // end while "1"
[09:01:36.961]    </control>
[09:01:36.961]    <block atomic="true" info="">
[09:01:36.964]  
[09:01:36.964]  ! W001 : No atomic sequence support in debug unit
[09:01:36.964]  
[09:01:36.966]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:01:36.968]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:01:36.969]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:01:36.971]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:01:36.972]    </block>
[09:01:36.973]    <block atomic="false" info="">
[09:01:36.973]      __errorcontrol = 0x00000001;
[09:01:36.974]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:01:36.974]      ReadDP(0x0);
[09:01:36.977]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:01:36.978]      __errorcontrol = 0x00000000;
[09:01:36.978]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:01:36.979]    </block>
[09:01:36.979]  </sequence>
[09:01:36.980]  
[09:01:36.980]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:01:36.980]  
[09:01:36.981]  <debugvars>
[09:01:36.981]    // Pre-defined
[09:01:36.981]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:01:36.982]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:01:36.982]    __dp=0x00000000
[09:01:36.983]    __ap=0x00000000
[09:01:36.984]    __traceout=0x00000000      (Trace Disabled)
[09:01:36.984]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:01:36.985]    __FlashAddr=0x00000000
[09:01:36.985]    __FlashLen=0x00000000
[09:01:36.986]    __FlashArg=0x00000000
[09:01:36.986]    __FlashOp=0x00000000
[09:01:36.986]    __Result=0x00000000
[09:01:36.987]  </debugvars>
[09:01:36.987]  
[09:01:36.987]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:01:36.988]  </sequence>
[09:01:36.988]  
[09:01:36.992]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[09:01:36.992]  
[09:01:36.993]  <debugvars>
[09:01:36.993]    // Pre-defined
[09:01:36.994]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:01:36.994]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:01:36.995]    __dp=0x00000000
[09:01:36.996]    __ap=0x00000000
[09:01:36.996]    __traceout=0x00000000      (Trace Disabled)
[09:01:36.996]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:01:36.996]    __FlashAddr=0x00000000
[09:01:36.996]    __FlashLen=0x00000000
[09:01:36.996]    __FlashArg=0x00000000
[09:01:36.997]    __FlashOp=0x00000000
[09:01:36.997]    __Result=0x00000000
[09:01:36.997]  </debugvars>
[09:01:36.998]  
[09:01:36.998]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:01:36.998]    <block atomic="false" info="">
[09:01:36.999]      __var SW_DP_ABORT  = 0x0;
[09:01:36.999]        // -> [SW_DP_ABORT <= 0x00000000]
[09:01:36.999]      __var DP_CTRL_STAT = 0x4;
[09:01:36.999]        // -> [DP_CTRL_STAT <= 0x00000004]
[09:01:37.000]      __var DP_SELECT    = 0x8;
[09:01:37.000]        // -> [DP_SELECT <= 0x00000008]
[09:01:37.000]      __var powered_down = 0;
[09:01:37.001]        // -> [powered_down <= 0x00000000]
[09:01:37.001]      WriteDP(DP_SELECT, 0x00000000);
[09:01:37.004]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:01:37.004]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:01:37.006]        // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:01:37.006]        // -> [powered_down <= 0x00000000]
[09:01:37.007]    </block>
[09:01:37.007]    <control if="powered_down" while="" timeout="0" info="">
[09:01:37.007]      // if-block "powered_down"
[09:01:37.007]        // =>  FALSE
[09:01:37.007]      // skip if-block "powered_down"
[09:01:37.007]    </control>
[09:01:37.008]  </sequence>
[09:01:37.008]  
[09:01:37.113]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:01:37.113]  
[09:01:37.114]  <debugvars>
[09:01:37.115]    // Pre-defined
[09:01:37.115]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:01:37.116]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:01:37.117]    __dp=0x00000000
[09:01:37.118]    __ap=0x00000000
[09:01:37.118]    __traceout=0x00000000      (Trace Disabled)
[09:01:37.119]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:01:37.120]    __FlashAddr=0x00000000
[09:01:37.120]    __FlashLen=0x00000000
[09:01:37.121]    __FlashArg=0x00000000
[09:01:37.122]    __FlashOp=0x00000000
[09:01:37.122]    __Result=0x00000000
[09:01:37.123]  </debugvars>
[09:01:37.123]  
[09:01:37.124]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:01:37.124]    <block atomic="true" info="">
[09:01:37.137]  
[09:01:37.137]  ! W001 : No atomic sequence support in debug unit
[09:01:37.137]  
[09:01:37.152]      __var DP_R_IDCODE    = 0x0;
[09:01:37.153]        // -> [DP_R_IDCODE <= 0x00000000]
[09:01:37.156]      __var DP_W_ABORT    = 0x0;
[09:01:37.157]        // -> [DP_W_ABORT <= 0x00000000]
[09:01:37.157]      __var DP_CTRLSTAT = 0x4;
[09:01:37.158]        // -> [DP_CTRLSTAT <= 0x00000004]
[09:01:37.158]      __var DP_W_SELECT    = 0x8;
[09:01:37.158]        // -> [DP_W_SELECT <= 0x00000008]
[09:01:37.159]      __var AP_TAR		= 0x4;
[09:01:37.159]        // -> [AP_TAR <= 0x00000004]
[09:01:37.159]      __var AP_BD0		= 0x0;
[09:01:37.160]        // -> [AP_BD0 <= 0x00000000]
[09:01:37.160]      __var AP_BD1		= 0x4;
[09:01:37.161]        // -> [AP_BD1 <= 0x00000004]
[09:01:37.161]      __var AP_BD2		= 0x8;
[09:01:37.161]        // -> [AP_BD2 <= 0x00000008]
[09:01:37.162]      __var PCWithinFlash = 0;
[09:01:37.163]        // -> [PCWithinFlash <= 0x00000000]
[09:01:37.164]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:01:37.170]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.170]    </block>
[09:01:37.171]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:01:37.199]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:01:37.205]        // -> [Read32(0xE000EDF0) => 0x00030003]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.205]      // while-condition  =>  FALSE
[09:01:37.205]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:01:37.206]    </control>
[09:01:37.207]    <block atomic="true" info="">
[09:01:37.211]  
[09:01:37.211]  ! W001 : No atomic sequence support in debug unit
[09:01:37.211]  
[09:01:37.215]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:01:37.217]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:01:37.218]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:01:37.220]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.221]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:01:37.223]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:01:37.224]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:01:37.228]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.229]    </block>
[09:01:37.229]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:01:37.229]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.232]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.232]      // while-condition  =>  TRUE
[09:01:37.233]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.236]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.236]      // while-condition  =>  TRUE
[09:01:37.237]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.240]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.241]      // while-condition  =>  TRUE
[09:01:37.241]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.244]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.245]      // while-condition  =>  TRUE
[09:01:37.245]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.248]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.249]      // while-condition  =>  TRUE
[09:01:37.249]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.252]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.252]      // while-condition  =>  TRUE
[09:01:37.253]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.255]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.255]      // while-condition  =>  TRUE
[09:01:37.256]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.259]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.260]      // while-condition  =>  TRUE
[09:01:37.260]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.262]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.263]      // while-condition  =>  TRUE
[09:01:37.263]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.265]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.266]      // while-condition  =>  TRUE
[09:01:37.266]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.268]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.269]      // while-condition  =>  TRUE
[09:01:37.270]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.272]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.272]      // while-condition  =>  TRUE
[09:01:37.273]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.275]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.275]      // while-condition  =>  TRUE
[09:01:37.276]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.278]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.278]      // while-condition  =>  TRUE
[09:01:37.278]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.281]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.281]      // while-condition  =>  TRUE
[09:01:37.281]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.284]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.285]      // while-condition  =>  TRUE
[09:01:37.285]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.287]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.287]      // while-condition  =>  TRUE
[09:01:37.287]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.290]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.290]      // while-condition  =>  TRUE
[09:01:37.291]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.293]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.293]      // while-condition  =>  TRUE
[09:01:37.294]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.296]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.296]      // while-condition  =>  TRUE
[09:01:37.297]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.299]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.300]      // while-condition  =>  TRUE
[09:01:37.301]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.304]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.305]      // while-condition  =>  TRUE
[09:01:37.306]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.308]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.308]      // while-condition  =>  TRUE
[09:01:37.309]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.312]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.313]      // while-condition  =>  TRUE
[09:01:37.313]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.316]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.317]      // while-condition  =>  TRUE
[09:01:37.318]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.320]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.321]      // while-condition  =>  TRUE
[09:01:37.322]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.324]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.324]      // while-condition  =>  TRUE
[09:01:37.325]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.328]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.328]      // while-condition  =>  TRUE
[09:01:37.329]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.332]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.333]      // while-condition  =>  TRUE
[09:01:37.334]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.336]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.337]      // while-condition  =>  TRUE
[09:01:37.338]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:37.338]      // while  =>  TIMEOUT
[09:01:37.339]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:01:37.339]    </control>
[09:01:37.340]    <block atomic="false" info="">
[09:01:37.341]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:01:37.344]        // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:01:37.345]        // -> [PCWithinFlash <= 0x00000000]
[09:01:37.345]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:01:37.348]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:01:37.349]    </block>
[09:01:37.349]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:01:37.350]      // if-block "PCWithinFlash == 0"
[09:01:37.351]        // =>  TRUE
[09:01:37.352]      // end if-block "PCWithinFlash == 0"
[09:01:37.353]    </control>
[09:01:37.353]  </sequence>
[09:01:37.353]  
[09:01:37.401]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[09:01:37.401]  
[09:01:37.452]  <debugvars>
[09:01:37.453]    // Pre-defined
[09:01:37.454]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:01:37.454]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:01:37.454]    __dp=0x00000000
[09:01:37.455]    __ap=0x00000000
[09:01:37.455]    __traceout=0x00000000      (Trace Disabled)
[09:01:37.458]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:01:37.458]    __FlashAddr=0x00000000
[09:01:37.459]    __FlashLen=0x00000000
[09:01:37.460]    __FlashArg=0x00000000
[09:01:37.460]    __FlashOp=0x00000000
[09:01:37.461]    __Result=0x00000000
[09:01:37.461]  </debugvars>
[09:01:37.462]  
[09:01:37.462]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[09:01:37.463]    <block atomic="false" info="">
[09:01:37.463]    </block>
[09:01:37.464]  </sequence>
[09:01:37.464]  
[09:01:37.468]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[09:01:37.468]  
[09:01:37.469]  <debugvars>
[09:01:37.469]    // Pre-defined
[09:01:37.470]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:01:37.470]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:01:37.471]    __dp=0x00000000
[09:01:37.472]    __ap=0x00000000
[09:01:37.472]    __traceout=0x00000000      (Trace Disabled)
[09:01:37.473]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:01:37.473]    __FlashAddr=0x00000000
[09:01:37.474]    __FlashLen=0x00000000
[09:01:37.474]    __FlashArg=0x00000000
[09:01:37.474]    __FlashOp=0x00000000
[09:01:37.475]    __Result=0x00000000
[09:01:37.476]  </debugvars>
[09:01:37.476]  
[09:01:37.477]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:01:37.477]    <block atomic="false" info="">
[09:01:37.478]      __var nReset      = 0x80;
[09:01:37.479]        // -> [nReset <= 0x00000080]
[09:01:37.479]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:01:37.482]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:01:37.482]    </block>
[09:01:37.482]    <control if="" while="1" timeout="50000" info="">
[09:01:37.483]      // while "1"  (timeout="50000")
[09:01:37.483]      // while-condition  =>  TRUE
[09:01:37.484]      // while "1"  (timeout="50000")
[09:01:37.484]      // while-condition  =>  TRUE
[09:01:37.484]      // while "1"  (timeout="50000")
[09:01:37.485]      // while-condition  =>  TRUE
[09:01:37.485]      // while "1"  (timeout="50000")
[09:01:37.486]      // while-condition  =>  TRUE
[09:01:37.486]      // while "1"  (timeout="50000")
[09:01:37.486]      // while-condition  =>  TRUE
[09:01:37.487]      // while "1"  (timeout="50000")
[09:01:37.487]      // while-condition  =>  TRUE
[09:01:37.488]      // while "1"  (timeout="50000")
[09:01:37.488]      // while-condition  =>  TRUE
[09:01:37.489]      // while "1"  (timeout="50000")
[09:01:37.489]      // while-condition  =>  TRUE
[09:01:37.490]      // while "1"  (timeout="50000")
[09:01:37.490]      // while-condition  =>  TRUE
[09:01:37.491]      // while "1"  (timeout="50000")
[09:01:37.491]      // while-condition  =>  TRUE
[09:01:37.491]      // while "1"  (timeout="50000")
[09:01:37.492]      // while-condition  =>  TRUE
[09:01:37.492]      // while "1"  (timeout="50000")
[09:01:37.492]      // while-condition  =>  TRUE
[09:01:37.492]      // while "1"  (timeout="50000")
[09:01:37.493]      // while-condition  =>  TRUE
[09:01:37.493]      // while "1"  (timeout="50000")
[09:01:37.493]      // while-condition  =>  TRUE
[09:01:37.493]      // while "1"  (timeout="50000")
[09:01:37.494]      // while-condition  =>  TRUE
[09:01:37.494]      // while "1"  (timeout="50000")
[09:01:37.494]      // while-condition  =>  TRUE
[09:01:37.494]      // while "1"  (timeout="50000")
[09:01:37.494]      // while-condition  =>  TRUE
[09:01:37.494]      // while "1"  (timeout="50000")
[09:01:37.494]      // while-condition  =>  TRUE
[09:01:37.495]      // while "1"  (timeout="50000")
[09:01:37.495]      // while-condition  =>  TRUE
[09:01:37.495]      // while "1"  (timeout="50000")
[09:01:37.495]      // while-condition  =>  TRUE
[09:01:37.496]      // while "1"  (timeout="50000")
[09:01:37.497]      // while-condition  =>  TRUE
[09:01:37.497]      // while "1"  (timeout="50000")
[09:01:37.497]      // while-condition  =>  TRUE
[09:01:37.497]      // while "1"  (timeout="50000")
[09:01:37.497]      // while-condition  =>  TRUE
[09:01:37.497]      // while "1"  (timeout="50000")
[09:01:37.498]      // while-condition  =>  TRUE
[09:01:37.499]      // while "1"  (timeout="50000")
[09:01:37.499]      // while-condition  =>  TRUE
[09:01:37.499]      // while "1"  (timeout="50000")
[09:01:37.499]      // while-condition  =>  TRUE
[09:01:37.500]      // while "1"  (timeout="50000")
[09:01:37.500]      // while-condition  =>  TRUE
[09:01:37.500]      // while "1"  (timeout="50000")
[09:01:37.500]      // while-condition  =>  TRUE
[09:01:37.501]      // while "1"  (timeout="50000")
[09:01:37.501]      // while-condition  =>  TRUE
[09:01:37.501]      // while "1"  (timeout="50000")
[09:01:37.502]      // while-condition  =>  TRUE
[09:01:37.502]      // while "1"  (timeout="50000")
[09:01:37.502]      // while-condition  =>  TRUE
[09:01:37.502]      // while "1"  (timeout="50000")
[09:01:37.502]      // while-condition  =>  TRUE
[09:01:37.503]      // while "1"  (timeout="50000")
[09:01:37.503]      // while-condition  =>  TRUE
[09:01:37.503]      // while "1"  (timeout="50000")
[09:01:37.503]      // while-condition  =>  TRUE
[09:01:37.503]      // while "1"  (timeout="50000")
[09:01:37.504]      // while-condition  =>  TRUE
[09:01:37.504]      // while "1"  (timeout="50000")
[09:01:37.504]      // while-condition  =>  TRUE
[09:01:37.504]      // while "1"  (timeout="50000")
[09:01:37.504]      // while-condition  =>  TRUE
[09:01:37.505]      // while "1"  (timeout="50000")
[09:01:37.505]      // while-condition  =>  TRUE
[09:01:37.505]      // while "1"  (timeout="50000")
[09:01:37.505]      // while-condition  =>  TRUE
[09:01:37.505]      // while "1"  (timeout="50000")
[09:01:37.506]      // while-condition  =>  TRUE
[09:01:37.506]      // while "1"  (timeout="50000")
[09:01:37.506]      // while-condition  =>  TRUE
[09:01:37.506]      // while "1"  (timeout="50000")
[09:01:37.506]      // while-condition  =>  TRUE
[09:01:37.506]      // while "1"  (timeout="50000")
[09:01:37.506]      // while-condition  =>  TRUE
[09:01:37.506]      // while "1"  (timeout="50000")
[09:01:37.506]      // while-condition  =>  TRUE
[09:01:37.507]      // while "1"  (timeout="50000")
[09:01:37.507]      // while-condition  =>  TRUE
[09:01:37.507]      // while "1"  (timeout="50000")
[09:01:37.507]      // while-condition  =>  TRUE
[09:01:37.507]      // while "1"  (timeout="50000")
[09:01:37.507]      // while-condition  =>  TRUE
[09:01:37.508]      // while "1"  (timeout="50000")
[09:01:37.509]      // while-condition  =>  TRUE
[09:01:37.509]      // while "1"  (timeout="50000")
[09:01:37.509]      // while-condition  =>  TRUE
[09:01:37.509]      // while "1"  (timeout="50000")
[09:01:37.509]      // while-condition  =>  TRUE
[09:01:37.510]      // while "1"  (timeout="50000")
[09:01:37.510]      // while-condition  =>  TRUE
[09:01:37.510]      // while "1"  (timeout="50000")
[09:01:37.510]      // while-condition  =>  TRUE
[09:01:37.510]      // while "1"  (timeout="50000")
[09:01:37.511]      // while-condition  =>  TRUE
[09:01:37.511]      // while "1"  (timeout="50000")
[09:01:37.511]      // while-condition  =>  TRUE
[09:01:37.511]      // while "1"  (timeout="50000")
[09:01:37.511]      // while-condition  =>  TRUE
[09:01:37.512]      // while "1"  (timeout="50000")
[09:01:37.512]      // while-condition  =>  TRUE
[09:01:37.512]      // while "1"  (timeout="50000")
[09:01:37.512]      // while-condition  =>  TRUE
[09:01:37.512]      // while "1"  (timeout="50000")
[09:01:37.512]      // while-condition  =>  TRUE
[09:01:37.512]      // while "1"  (timeout="50000")
[09:01:37.512]      // while-condition  =>  TRUE
[09:01:37.512]      // while "1"  (timeout="50000")
[09:01:37.512]      // while-condition  =>  TRUE
[09:01:37.513]      // while "1"  (timeout="50000")
[09:01:37.513]      // while-condition  =>  TRUE
[09:01:37.513]      // while "1"  (timeout="50000")
[09:01:37.513]      // while-condition  =>  TRUE
[09:01:37.514]      // while "1"  (timeout="50000")
[09:01:37.514]      // while-condition  =>  TRUE
[09:01:37.514]      // while "1"  (timeout="50000")
[09:01:37.514]      // while-condition  =>  TRUE
[09:01:37.514]      // while "1"  (timeout="50000")
[09:01:37.515]      // while-condition  =>  TRUE
[09:01:37.515]      // while "1"  (timeout="50000")
[09:01:37.515]      // while-condition  =>  TRUE
[09:01:37.515]      // while "1"  (timeout="50000")
[09:01:37.516]      // while-condition  =>  TRUE
[09:01:37.517]      // while "1"  (timeout="50000")
[09:01:37.517]      // while-condition  =>  TRUE
[09:01:37.517]      // while "1"  (timeout="50000")
[09:01:37.517]      // while-condition  =>  TRUE
[09:01:37.517]      // while "1"  (timeout="50000")
[09:01:37.518]      // while-condition  =>  TRUE
[09:01:37.518]      // while "1"  (timeout="50000")
[09:01:37.518]      // while-condition  =>  TRUE
[09:01:37.518]      // while "1"  (timeout="50000")
[09:01:37.518]      // while-condition  =>  TRUE
[09:01:37.518]      // while "1"  (timeout="50000")
[09:01:37.518]      // while-condition  =>  TRUE
[09:01:37.518]      // while "1"  (timeout="50000")
[09:01:37.518]      // while-condition  =>  TRUE
[09:01:37.518]      // while "1"  (timeout="50000")
[09:01:37.519]      // while-condition  =>  TRUE
[09:01:37.520]      // while "1"  (timeout="50000")
[09:01:37.520]      // while-condition  =>  TRUE
[09:01:37.520]      // while "1"  (timeout="50000")
[09:01:37.520]      // while-condition  =>  TRUE
[09:01:37.521]      // while "1"  (timeout="50000")
[09:01:37.521]      // while-condition  =>  TRUE
[09:01:37.521]      // while "1"  (timeout="50000")
[09:01:37.521]      // while-condition  =>  TRUE
[09:01:37.521]      // while "1"  (timeout="50000")
[09:01:37.522]      // while-condition  =>  TRUE
[09:01:37.522]      // while "1"  (timeout="50000")
[09:01:37.522]      // while-condition  =>  TRUE
[09:01:37.522]      // while "1"  (timeout="50000")
[09:01:37.522]      // while-condition  =>  TRUE
[09:01:37.523]      // while "1"  (timeout="50000")
[09:01:37.523]      // while-condition  =>  TRUE
[09:01:37.523]      // while "1"  (timeout="50000")
[09:01:37.523]      // while-condition  =>  TRUE
[09:01:37.523]      // while "1"  (timeout="50000")
[09:01:37.524]      // while-condition  =>  TRUE
[09:01:37.524]      // while "1"  (timeout="50000")
[09:01:37.524]      // while-condition  =>  TRUE
[09:01:37.524]      // while "1"  (timeout="50000")
[09:01:37.524]      // while-condition  =>  TRUE
[09:01:37.525]      // while "1"  (timeout="50000")
[09:01:37.525]      // while-condition  =>  TRUE
[09:01:37.525]      // while "1"  (timeout="50000")
[09:01:37.525]      // while-condition  =>  TRUE
[09:01:37.525]      // while "1"  (timeout="50000")
[09:01:37.525]      // while-condition  =>  TRUE
[09:01:37.525]      // while "1"  (timeout="50000")
[09:01:37.525]      // while-condition  =>  TRUE
[09:01:37.525]      // while "1"  (timeout="50000")
[09:01:37.525]      // while-condition  =>  TRUE
[09:01:37.526]      // while "1"  (timeout="50000")
[09:01:37.526]      // while-condition  =>  TRUE
[09:01:37.526]      // while "1"  (timeout="50000")
[09:01:37.526]      // while-condition  =>  TRUE
[09:01:37.526]      // while "1"  (timeout="50000")
[09:01:37.527]      // while-condition  =>  TRUE
[09:01:37.527]      // while "1"  (timeout="50000")
[09:01:37.527]      // while-condition  =>  TRUE
[09:01:37.527]      // while "1"  (timeout="50000")
[09:01:37.527]      // while-condition  =>  TRUE
[09:01:37.528]      // while "1"  (timeout="50000")
[09:01:37.528]      // while-condition  =>  TRUE
[09:01:37.528]      // while "1"  (timeout="50000")
[09:01:37.528]      // while-condition  =>  TRUE
[09:01:37.528]      // while "1"  (timeout="50000")
[09:01:37.529]      // while-condition  =>  TRUE
[09:01:37.530]      // while "1"  (timeout="50000")
[09:01:37.530]      // while-condition  =>  TRUE
[09:01:37.530]      // while "1"  (timeout="50000")
[09:01:37.530]      // while-condition  =>  TRUE
[09:01:37.530]      // while "1"  (timeout="50000")
[09:01:37.531]      // while-condition  =>  TRUE
[09:01:37.531]      // while "1"  (timeout="50000")
[09:01:37.531]      // while-condition  =>  TRUE
[09:01:37.531]      // while "1"  (timeout="50000")
[09:01:37.531]      // while-condition  =>  TRUE
[09:01:37.532]      // while "1"  (timeout="50000")
[09:01:37.532]      // while-condition  =>  TRUE
[09:01:37.532]      // while "1"  (timeout="50000")
[09:01:37.532]      // while-condition  =>  TRUE
[09:01:37.532]      // while "1"  (timeout="50000")
[09:01:37.532]      // while-condition  =>  TRUE
[09:01:37.532]      // while "1"  (timeout="50000")
[09:01:37.532]      // while-condition  =>  TRUE
[09:01:37.532]      // while "1"  (timeout="50000")
[09:01:37.533]      // while-condition  =>  TRUE
[09:01:37.534]      // while "1"  (timeout="50000")
[09:01:37.534]      // while-condition  =>  TRUE
[09:01:37.534]      // while "1"  (timeout="50000")
[09:01:37.534]      // while-condition  =>  TRUE
[09:01:37.534]      // while "1"  (timeout="50000")
[09:01:37.534]      // while-condition  =>  TRUE
[09:01:37.535]      // while "1"  (timeout="50000")
[09:01:37.535]      // while-condition  =>  TRUE
[09:01:37.535]      // while "1"  (timeout="50000")
[09:01:37.535]      // while-condition  =>  TRUE
[09:01:37.535]      // while "1"  (timeout="50000")
[09:01:37.535]      // while-condition  =>  TRUE
[09:01:37.535]      // while "1"  (timeout="50000")
[09:01:37.536]      // while-condition  =>  TRUE
[09:01:37.536]      // while "1"  (timeout="50000")
[09:01:37.536]      // while-condition  =>  TRUE
[09:01:37.536]      // while "1"  (timeout="50000")
[09:01:37.537]      // while-condition  =>  TRUE
[09:01:37.537]      // while "1"  (timeout="50000")
[09:01:37.537]      // while-condition  =>  TRUE
[09:01:37.537]      // while "1"  (timeout="50000")
[09:01:37.537]      // while-condition  =>  TRUE
[09:01:37.538]      // while "1"  (timeout="50000")
[09:01:37.538]      // while  =>  TIMEOUT
[09:01:37.539]      // end while "1"
[09:01:37.539]    </control>
[09:01:37.539]    <block atomic="false" info="">
[09:01:37.539]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:01:37.541]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:01:37.541]    </block>
[09:01:37.541]    <control if="" while="1" timeout="10000" info="">
[09:01:37.542]      // while "1"  (timeout="10000")
[09:01:37.542]      // while-condition  =>  TRUE
[09:01:37.542]      // while "1"  (timeout="10000")
[09:01:37.542]      // while-condition  =>  TRUE
[09:01:37.542]      // while "1"  (timeout="10000")
[09:01:37.543]      // while-condition  =>  TRUE
[09:01:37.543]      // while "1"  (timeout="10000")
[09:01:37.543]      // while-condition  =>  TRUE
[09:01:37.543]      // while "1"  (timeout="10000")
[09:01:37.543]      // while-condition  =>  TRUE
[09:01:37.544]      // while "1"  (timeout="10000")
[09:01:37.544]      // while-condition  =>  TRUE
[09:01:37.544]      // while "1"  (timeout="10000")
[09:01:37.544]      // while-condition  =>  TRUE
[09:01:37.544]      // while "1"  (timeout="10000")
[09:01:37.545]      // while-condition  =>  TRUE
[09:01:37.545]      // while "1"  (timeout="10000")
[09:01:37.546]      // while-condition  =>  TRUE
[09:01:37.546]      // while "1"  (timeout="10000")
[09:01:37.546]      // while-condition  =>  TRUE
[09:01:37.546]      // while "1"  (timeout="10000")
[09:01:37.547]      // while-condition  =>  TRUE
[09:01:37.547]      // while "1"  (timeout="10000")
[09:01:37.547]      // while-condition  =>  TRUE
[09:01:37.547]      // while "1"  (timeout="10000")
[09:01:37.547]      // while-condition  =>  TRUE
[09:01:37.547]      // while "1"  (timeout="10000")
[09:01:37.548]      // while-condition  =>  TRUE
[09:01:37.548]      // while "1"  (timeout="10000")
[09:01:37.548]      // while-condition  =>  TRUE
[09:01:37.548]      // while "1"  (timeout="10000")
[09:01:37.548]      // while-condition  =>  TRUE
[09:01:37.549]      // while "1"  (timeout="10000")
[09:01:37.549]      // while-condition  =>  TRUE
[09:01:37.549]      // while "1"  (timeout="10000")
[09:01:37.550]      // while-condition  =>  TRUE
[09:01:37.550]      // while "1"  (timeout="10000")
[09:01:37.550]      // while-condition  =>  TRUE
[09:01:37.550]      // while "1"  (timeout="10000")
[09:01:37.550]      // while-condition  =>  TRUE
[09:01:37.551]      // while "1"  (timeout="10000")
[09:01:37.551]      // while-condition  =>  TRUE
[09:01:37.551]      // while "1"  (timeout="10000")
[09:01:37.551]      // while-condition  =>  TRUE
[09:01:37.551]      // while "1"  (timeout="10000")
[09:01:37.552]      // while-condition  =>  TRUE
[09:01:37.552]      // while "1"  (timeout="10000")
[09:01:37.552]      // while-condition  =>  TRUE
[09:01:37.552]      // while "1"  (timeout="10000")
[09:01:37.552]      // while-condition  =>  TRUE
[09:01:37.552]      // while "1"  (timeout="10000")
[09:01:37.552]      // while-condition  =>  TRUE
[09:01:37.552]      // while "1"  (timeout="10000")
[09:01:37.553]      // while-condition  =>  TRUE
[09:01:37.553]      // while "1"  (timeout="10000")
[09:01:37.553]      // while-condition  =>  TRUE
[09:01:37.553]      // while "1"  (timeout="10000")
[09:01:37.553]      // while-condition  =>  TRUE
[09:01:37.554]      // while "1"  (timeout="10000")
[09:01:37.554]      // while  =>  TIMEOUT
[09:01:37.554]      // end while "1"
[09:01:37.555]    </control>
[09:01:37.555]    <block atomic="true" info="">
[09:01:37.557]  
[09:01:37.557]  ! W001 : No atomic sequence support in debug unit
[09:01:37.557]  
[09:01:37.559]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:01:37.562]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:01:37.562]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:01:37.565]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:01:37.565]    </block>
[09:01:37.566]    <block atomic="false" info="">
[09:01:37.567]      __errorcontrol = 0x00000001;
[09:01:37.567]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:01:37.568]      ReadDP(0x0);
[09:01:37.570]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:01:37.570]      __errorcontrol = 0x00000000;
[09:01:37.571]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:01:37.571]    </block>
[09:01:37.571]  </sequence>
[09:01:37.572]  
[09:01:37.578]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[09:01:37.578]  
[09:01:37.578]  <debugvars>
[09:01:37.579]    // Pre-defined
[09:01:37.579]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:01:37.580]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:01:37.581]    __dp=0x00000000
[09:01:37.581]    __ap=0x00000000
[09:01:37.582]    __traceout=0x00000000      (Trace Disabled)
[09:01:37.582]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:01:37.583]    __FlashAddr=0x00000000
[09:01:37.583]    __FlashLen=0x00000000
[09:01:37.583]    __FlashArg=0x00000000
[09:01:37.583]    __FlashOp=0x00000000
[09:01:37.584]    __Result=0x00000000
[09:01:37.585]  </debugvars>
[09:01:37.585]  
[09:01:37.585]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[09:01:37.586]    <block atomic="false" info="">
[09:01:37.586]    </block>
[09:01:37.586]  </sequence>
[09:01:37.587]  
[09:01:37.831]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[09:01:37.831]  
[09:01:37.831]  <debugvars>
[09:01:37.832]    // Pre-defined
[09:01:37.832]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:01:37.833]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:01:37.834]    __dp=0x00000000
[09:01:37.834]    __ap=0x00000000
[09:01:37.835]    __traceout=0x00000000      (Trace Disabled)
[09:01:37.835]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:01:37.836]    __FlashAddr=0x00000000
[09:01:37.836]    __FlashLen=0x00000000
[09:01:37.837]    __FlashArg=0x00000000
[09:01:37.837]    __FlashOp=0x00000000
[09:01:37.838]    __Result=0x00000000
[09:01:37.838]  </debugvars>
[09:01:37.839]  
[09:01:37.839]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[09:01:37.840]    <block atomic="false" info="">
[09:01:37.840]      Sequence("ResetHardware");
[09:01:37.841]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:01:37.841]          <block atomic="false" info="">
[09:01:37.842]            __var nReset      = 0x80;
[09:01:37.842]              // -> [nReset <= 0x00000080]
[09:01:37.843]            DAP_SWJ_Pins(0x00, nReset, 0);
[09:01:37.846]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:01:37.846]          </block>
[09:01:37.847]          <control if="" while="1" timeout="50000" info="">
[09:01:37.847]            // while "1"  (timeout="50000")
[09:01:37.847]            // while-condition  =>  TRUE
[09:01:37.848]            // while "1"  (timeout="50000")
[09:01:37.848]            // while-condition  =>  TRUE
[09:01:37.849]            // while "1"  (timeout="50000")
[09:01:37.849]            // while-condition  =>  TRUE
[09:01:37.850]            // while "1"  (timeout="50000")
[09:01:37.851]            // while-condition  =>  TRUE
[09:01:37.851]            // while "1"  (timeout="50000")
[09:01:37.851]            // while-condition  =>  TRUE
[09:01:37.851]            // while "1"  (timeout="50000")
[09:01:37.852]            // while-condition  =>  TRUE
[09:01:37.852]            // while "1"  (timeout="50000")
[09:01:37.852]            // while-condition  =>  TRUE
[09:01:37.852]            // while "1"  (timeout="50000")
[09:01:37.853]            // while-condition  =>  TRUE
[09:01:37.853]            // while "1"  (timeout="50000")
[09:01:37.853]            // while-condition  =>  TRUE
[09:01:37.853]            // while "1"  (timeout="50000")
[09:01:37.854]            // while-condition  =>  TRUE
[09:01:37.854]            // while "1"  (timeout="50000")
[09:01:37.854]            // while-condition  =>  TRUE
[09:01:37.855]            // while "1"  (timeout="50000")
[09:01:37.855]            // while-condition  =>  TRUE
[09:01:37.855]            // while "1"  (timeout="50000")
[09:01:37.855]            // while-condition  =>  TRUE
[09:01:37.855]            // while "1"  (timeout="50000")
[09:01:37.856]            // while-condition  =>  TRUE
[09:01:37.856]            // while "1"  (timeout="50000")
[09:01:37.856]            // while-condition  =>  TRUE
[09:01:37.856]            // while "1"  (timeout="50000")
[09:01:37.856]            // while-condition  =>  TRUE
[09:01:37.857]            // while "1"  (timeout="50000")
[09:01:37.857]            // while-condition  =>  TRUE
[09:01:37.857]            // while "1"  (timeout="50000")
[09:01:37.857]            // while-condition  =>  TRUE
[09:01:37.857]            // while "1"  (timeout="50000")
[09:01:37.857]            // while-condition  =>  TRUE
[09:01:37.857]            // while "1"  (timeout="50000")
[09:01:37.857]            // while-condition  =>  TRUE
[09:01:37.858]            // while "1"  (timeout="50000")
[09:01:37.859]            // while-condition  =>  TRUE
[09:01:37.859]            // while "1"  (timeout="50000")
[09:01:37.859]            // while-condition  =>  TRUE
[09:01:37.859]            // while "1"  (timeout="50000")
[09:01:37.859]            // while-condition  =>  TRUE
[09:01:37.859]            // while "1"  (timeout="50000")
[09:01:37.859]            // while-condition  =>  TRUE
[09:01:37.859]            // while "1"  (timeout="50000")
[09:01:37.859]            // while-condition  =>  TRUE
[09:01:37.860]            // while "1"  (timeout="50000")
[09:01:37.860]            // while-condition  =>  TRUE
[09:01:37.860]            // while "1"  (timeout="50000")
[09:01:37.860]            // while-condition  =>  TRUE
[09:01:37.860]            // while "1"  (timeout="50000")
[09:01:37.861]            // while-condition  =>  TRUE
[09:01:37.861]            // while "1"  (timeout="50000")
[09:01:37.862]            // while-condition  =>  TRUE
[09:01:37.862]            // while "1"  (timeout="50000")
[09:01:37.862]            // while-condition  =>  TRUE
[09:01:37.862]            // while "1"  (timeout="50000")
[09:01:37.862]            // while-condition  =>  TRUE
[09:01:37.862]            // while "1"  (timeout="50000")
[09:01:37.863]            // while-condition  =>  TRUE
[09:01:37.863]            // while "1"  (timeout="50000")
[09:01:37.863]            // while-condition  =>  TRUE
[09:01:37.863]            // while "1"  (timeout="50000")
[09:01:37.863]            // while-condition  =>  TRUE
[09:01:37.863]            // while "1"  (timeout="50000")
[09:01:37.864]            // while-condition  =>  TRUE
[09:01:37.864]            // while "1"  (timeout="50000")
[09:01:37.864]            // while-condition  =>  TRUE
[09:01:37.864]            // while "1"  (timeout="50000")
[09:01:37.864]            // while-condition  =>  TRUE
[09:01:37.865]            // while "1"  (timeout="50000")
[09:01:37.865]            // while-condition  =>  TRUE
[09:01:37.865]            // while "1"  (timeout="50000")
[09:01:37.865]            // while-condition  =>  TRUE
[09:01:37.865]            // while "1"  (timeout="50000")
[09:01:37.865]            // while-condition  =>  TRUE
[09:01:37.866]            // while "1"  (timeout="50000")
[09:01:37.866]            // while-condition  =>  TRUE
[09:01:37.866]            // while "1"  (timeout="50000")
[09:01:37.866]            // while-condition  =>  TRUE
[09:01:37.866]            // while "1"  (timeout="50000")
[09:01:37.866]            // while-condition  =>  TRUE
[09:01:37.867]            // while "1"  (timeout="50000")
[09:01:37.867]            // while-condition  =>  TRUE
[09:01:37.867]            // while "1"  (timeout="50000")
[09:01:37.868]            // while-condition  =>  TRUE
[09:01:37.868]            // while "1"  (timeout="50000")
[09:01:37.868]            // while-condition  =>  TRUE
[09:01:37.868]            // while "1"  (timeout="50000")
[09:01:37.868]            // while-condition  =>  TRUE
[09:01:37.869]            // while "1"  (timeout="50000")
[09:01:37.869]            // while-condition  =>  TRUE
[09:01:37.869]            // while "1"  (timeout="50000")
[09:01:37.869]            // while-condition  =>  TRUE
[09:01:37.869]            // while "1"  (timeout="50000")
[09:01:37.870]            // while-condition  =>  TRUE
[09:01:37.870]            // while "1"  (timeout="50000")
[09:01:37.870]            // while-condition  =>  TRUE
[09:01:37.870]            // while "1"  (timeout="50000")
[09:01:37.870]            // while-condition  =>  TRUE
[09:01:37.870]            // while "1"  (timeout="50000")
[09:01:37.870]            // while-condition  =>  TRUE
[09:01:37.870]            // while "1"  (timeout="50000")
[09:01:37.870]            // while-condition  =>  TRUE
[09:01:37.871]            // while "1"  (timeout="50000")
[09:01:37.871]            // while-condition  =>  TRUE
[09:01:37.872]            // while "1"  (timeout="50000")
[09:01:37.872]            // while-condition  =>  TRUE
[09:01:37.872]            // while "1"  (timeout="50000")
[09:01:37.872]            // while-condition  =>  TRUE
[09:01:37.872]            // while "1"  (timeout="50000")
[09:01:37.872]            // while-condition  =>  TRUE
[09:01:37.872]            // while "1"  (timeout="50000")
[09:01:37.872]            // while-condition  =>  TRUE
[09:01:37.872]            // while "1"  (timeout="50000")
[09:01:37.873]            // while-condition  =>  TRUE
[09:01:37.873]            // while "1"  (timeout="50000")
[09:01:37.873]            // while-condition  =>  TRUE
[09:01:37.873]            // while "1"  (timeout="50000")
[09:01:37.873]            // while-condition  =>  TRUE
[09:01:37.874]            // while "1"  (timeout="50000")
[09:01:37.875]            // while-condition  =>  TRUE
[09:01:37.875]            // while "1"  (timeout="50000")
[09:01:37.875]            // while-condition  =>  TRUE
[09:01:37.875]            // while "1"  (timeout="50000")
[09:01:37.875]            // while-condition  =>  TRUE
[09:01:37.876]            // while "1"  (timeout="50000")
[09:01:37.876]            // while-condition  =>  TRUE
[09:01:37.876]            // while "1"  (timeout="50000")
[09:01:37.876]            // while-condition  =>  TRUE
[09:01:37.876]            // while "1"  (timeout="50000")
[09:01:37.877]            // while-condition  =>  TRUE
[09:01:37.877]            // while "1"  (timeout="50000")
[09:01:37.877]            // while-condition  =>  TRUE
[09:01:37.877]            // while "1"  (timeout="50000")
[09:01:37.877]            // while-condition  =>  TRUE
[09:01:37.878]            // while "1"  (timeout="50000")
[09:01:37.878]            // while-condition  =>  TRUE
[09:01:37.878]            // while "1"  (timeout="50000")
[09:01:37.878]            // while-condition  =>  TRUE
[09:01:37.878]            // while "1"  (timeout="50000")
[09:01:37.878]            // while-condition  =>  TRUE
[09:01:37.879]            // while "1"  (timeout="50000")
[09:01:37.879]            // while-condition  =>  TRUE
[09:01:37.879]            // while "1"  (timeout="50000")
[09:01:37.880]            // while-condition  =>  TRUE
[09:01:37.880]            // while "1"  (timeout="50000")
[09:01:37.880]            // while-condition  =>  TRUE
[09:01:37.880]            // while "1"  (timeout="50000")
[09:01:37.880]            // while-condition  =>  TRUE
[09:01:37.880]            // while "1"  (timeout="50000")
[09:01:37.880]            // while-condition  =>  TRUE
[09:01:37.880]            // while "1"  (timeout="50000")
[09:01:37.881]            // while-condition  =>  TRUE
[09:01:37.881]            // while "1"  (timeout="50000")
[09:01:37.881]            // while-condition  =>  TRUE
[09:01:37.881]            // while "1"  (timeout="50000")
[09:01:37.881]            // while-condition  =>  TRUE
[09:01:37.882]            // while "1"  (timeout="50000")
[09:01:37.882]            // while-condition  =>  TRUE
[09:01:37.882]            // while "1"  (timeout="50000")
[09:01:37.883]            // while-condition  =>  TRUE
[09:01:37.883]            // while "1"  (timeout="50000")
[09:01:37.883]            // while-condition  =>  TRUE
[09:01:37.883]            // while "1"  (timeout="50000")
[09:01:37.884]            // while-condition  =>  TRUE
[09:01:37.884]            // while "1"  (timeout="50000")
[09:01:37.884]            // while-condition  =>  TRUE
[09:01:37.884]            // while "1"  (timeout="50000")
[09:01:37.884]            // while-condition  =>  TRUE
[09:01:37.885]            // while "1"  (timeout="50000")
[09:01:37.885]            // while-condition  =>  TRUE
[09:01:37.885]            // while "1"  (timeout="50000")
[09:01:37.885]            // while-condition  =>  TRUE
[09:01:37.885]            // while "1"  (timeout="50000")
[09:01:37.886]            // while-condition  =>  TRUE
[09:01:37.886]            // while "1"  (timeout="50000")
[09:01:37.886]            // while-condition  =>  TRUE
[09:01:37.886]            // while "1"  (timeout="50000")
[09:01:37.886]            // while-condition  =>  TRUE
[09:01:37.887]            // while "1"  (timeout="50000")
[09:01:37.887]            // while-condition  =>  TRUE
[09:01:37.887]            // while "1"  (timeout="50000")
[09:01:37.887]            // while-condition  =>  TRUE
[09:01:37.887]            // while "1"  (timeout="50000")
[09:01:37.888]            // while-condition  =>  TRUE
[09:01:37.888]            // while "1"  (timeout="50000")
[09:01:37.888]            // while-condition  =>  TRUE
[09:01:37.888]            // while "1"  (timeout="50000")
[09:01:37.888]            // while-condition  =>  TRUE
[09:01:37.888]            // while "1"  (timeout="50000")
[09:01:37.888]            // while-condition  =>  TRUE
[09:01:37.888]            // while "1"  (timeout="50000")
[09:01:37.888]            // while-condition  =>  TRUE
[09:01:37.888]            // while "1"  (timeout="50000")
[09:01:37.889]            // while-condition  =>  TRUE
[09:01:37.889]            // while "1"  (timeout="50000")
[09:01:37.889]            // while-condition  =>  TRUE
[09:01:37.889]            // while "1"  (timeout="50000")
[09:01:37.889]            // while-condition  =>  TRUE
[09:01:37.890]            // while "1"  (timeout="50000")
[09:01:37.891]            // while-condition  =>  TRUE
[09:01:37.891]            // while "1"  (timeout="50000")
[09:01:37.891]            // while-condition  =>  TRUE
[09:01:37.891]            // while "1"  (timeout="50000")
[09:01:37.891]            // while-condition  =>  TRUE
[09:01:37.891]            // while "1"  (timeout="50000")
[09:01:37.891]            // while-condition  =>  TRUE
[09:01:37.892]            // while "1"  (timeout="50000")
[09:01:37.892]            // while-condition  =>  TRUE
[09:01:37.892]            // while "1"  (timeout="50000")
[09:01:37.892]            // while-condition  =>  TRUE
[09:01:37.892]            // while "1"  (timeout="50000")
[09:01:37.893]            // while-condition  =>  TRUE
[09:01:37.893]            // while "1"  (timeout="50000")
[09:01:37.893]            // while-condition  =>  TRUE
[09:01:37.894]            // while "1"  (timeout="50000")
[09:01:37.894]            // while-condition  =>  TRUE
[09:01:37.894]            // while "1"  (timeout="50000")
[09:01:37.894]            // while-condition  =>  TRUE
[09:01:37.894]            // while "1"  (timeout="50000")
[09:01:37.895]            // while-condition  =>  TRUE
[09:01:37.895]            // while "1"  (timeout="50000")
[09:01:37.895]            // while-condition  =>  TRUE
[09:01:37.895]            // while "1"  (timeout="50000")
[09:01:37.895]            // while-condition  =>  TRUE
[09:01:37.896]            // while "1"  (timeout="50000")
[09:01:37.896]            // while-condition  =>  TRUE
[09:01:37.896]            // while "1"  (timeout="50000")
[09:01:37.896]            // while-condition  =>  TRUE
[09:01:37.896]            // while "1"  (timeout="50000")
[09:01:37.896]            // while-condition  =>  TRUE
[09:01:37.897]            // while "1"  (timeout="50000")
[09:01:37.897]            // while-condition  =>  TRUE
[09:01:37.897]            // while "1"  (timeout="50000")
[09:01:37.897]            // while-condition  =>  TRUE
[09:01:37.897]            // while "1"  (timeout="50000")
[09:01:37.898]            // while  =>  TIMEOUT
[09:01:37.898]            // end while "1"
[09:01:37.898]          </control>
[09:01:37.898]          <block atomic="false" info="">
[09:01:37.898]            DAP_SWJ_Pins(nReset, nReset, 0);
[09:01:37.901]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:01:37.901]          </block>
[09:01:37.901]          <control if="" while="1" timeout="10000" info="">
[09:01:37.902]            // while "1"  (timeout="10000")
[09:01:37.902]            // while-condition  =>  TRUE
[09:01:37.902]            // while "1"  (timeout="10000")
[09:01:37.902]            // while-condition  =>  TRUE
[09:01:37.902]            // while "1"  (timeout="10000")
[09:01:37.902]            // while-condition  =>  TRUE
[09:01:37.902]            // while "1"  (timeout="10000")
[09:01:37.903]            // while-condition  =>  TRUE
[09:01:37.903]            // while "1"  (timeout="10000")
[09:01:37.903]            // while-condition  =>  TRUE
[09:01:37.904]            // while "1"  (timeout="10000")
[09:01:37.904]            // while-condition  =>  TRUE
[09:01:37.904]            // while "1"  (timeout="10000")
[09:01:37.905]            // while-condition  =>  TRUE
[09:01:37.905]            // while "1"  (timeout="10000")
[09:01:37.906]            // while-condition  =>  TRUE
[09:01:37.906]            // while "1"  (timeout="10000")
[09:01:37.906]            // while-condition  =>  TRUE
[09:01:37.906]            // while "1"  (timeout="10000")
[09:01:37.908]            // while-condition  =>  TRUE
[09:01:37.908]            // while "1"  (timeout="10000")
[09:01:37.908]            // while-condition  =>  TRUE
[09:01:37.908]            // while "1"  (timeout="10000")
[09:01:37.909]            // while-condition  =>  TRUE
[09:01:37.916]            // while "1"  (timeout="10000")
[09:01:37.917]            // while  =>  TIMEOUT
[09:01:37.917]            // end while "1"
[09:01:37.918]          </control>
[09:01:37.919]          <block atomic="true" info="">
[09:01:37.935]  
[09:01:37.935]  ! W001 : No atomic sequence support in debug unit
[09:01:37.935]  
[09:01:37.953]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:01:37.957]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:01:37.958]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:01:37.961]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:01:37.962]          </block>
[09:01:37.962]          <block atomic="false" info="">
[09:01:37.963]            __errorcontrol = 0x00000001;
[09:01:37.964]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:01:37.964]            ReadDP(0x0);
[09:01:37.967]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:01:37.968]            __errorcontrol = 0x00000000;
[09:01:37.968]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:01:37.969]          </block>
[09:01:37.970]        </sequence>
[09:01:37.970]      Sequence("DebugPortSetup");
[09:01:37.971]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:01:37.972]        </sequence>
[09:01:37.972]      Sequence("DebugPortStart");
[09:01:37.973]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:01:37.973]          <block atomic="false" info="">
[09:01:37.974]            __var SW_DP_ABORT  = 0x0;
[09:01:37.975]              // -> [SW_DP_ABORT <= 0x00000000]
[09:01:37.976]            __var DP_CTRL_STAT = 0x4;
[09:01:37.976]              // -> [DP_CTRL_STAT <= 0x00000004]
[09:01:37.977]            __var DP_SELECT    = 0x8;
[09:01:37.978]              // -> [DP_SELECT <= 0x00000008]
[09:01:37.978]            __var powered_down = 0;
[09:01:37.979]              // -> [powered_down <= 0x00000000]
[09:01:37.979]            WriteDP(DP_SELECT, 0x00000000);
[09:01:37.982]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:01:37.982]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:01:37.985]              // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:01:37.986]              // -> [powered_down <= 0x00000000]
[09:01:37.986]          </block>
[09:01:37.986]          <control if="powered_down" while="" timeout="0" info="">
[09:01:37.987]            // if-block "powered_down"
[09:01:37.988]              // =>  FALSE
[09:01:37.988]            // skip if-block "powered_down"
[09:01:37.989]          </control>
[09:01:37.990]        </sequence>
[09:01:37.990]      Sequence("DebugCoreStart");
[09:01:37.990]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:01:37.992]          <block atomic="true" info="">
[09:01:37.999]  
[09:01:37.999]  ! W001 : No atomic sequence support in debug unit
[09:01:37.999]  
[09:01:38.002]            __var DP_R_IDCODE    = 0x0;
[09:01:38.003]              // -> [DP_R_IDCODE <= 0x00000000]
[09:01:38.003]            __var DP_W_ABORT    = 0x0;
[09:01:38.004]              // -> [DP_W_ABORT <= 0x00000000]
[09:01:38.004]            __var DP_CTRLSTAT = 0x4;
[09:01:38.006]              // -> [DP_CTRLSTAT <= 0x00000004]
[09:01:38.006]            __var DP_W_SELECT    = 0x8;
[09:01:38.006]              // -> [DP_W_SELECT <= 0x00000008]
[09:01:38.007]            __var AP_TAR		= 0x4;
[09:01:38.008]              // -> [AP_TAR <= 0x00000004]
[09:01:38.009]            __var AP_BD0		= 0x0;
[09:01:38.009]              // -> [AP_BD0 <= 0x00000000]
[09:01:38.010]            __var AP_BD1		= 0x4;
[09:01:38.010]              // -> [AP_BD1 <= 0x00000004]
[09:01:38.011]            __var AP_BD2		= 0x8;
[09:01:38.011]              // -> [AP_BD2 <= 0x00000008]
[09:01:38.011]            __var PCWithinFlash = 0;
[09:01:38.012]              // -> [PCWithinFlash <= 0x00000000]
[09:01:38.012]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:01:38.019]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.020]          </block>
[09:01:38.020]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:01:38.021]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:01:38.026]              // -> [Read32(0xE000EDF0) => 0x00030003]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.038]            // while-condition  =>  FALSE
[09:01:38.039]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:01:38.040]          </control>
[09:01:38.040]          <block atomic="true" info="">
[09:01:38.044]  
[09:01:38.044]  ! W001 : No atomic sequence support in debug unit
[09:01:38.044]  
[09:01:38.046]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:01:38.049]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:01:38.049]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:01:38.052]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.052]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:01:38.055]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:01:38.056]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:01:38.060]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.061]          </block>
[09:01:38.061]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:01:38.062]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.064]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.065]            // while-condition  =>  TRUE
[09:01:38.065]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.068]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.068]            // while-condition  =>  TRUE
[09:01:38.068]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.072]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.072]            // while-condition  =>  TRUE
[09:01:38.073]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.075]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.075]            // while-condition  =>  TRUE
[09:01:38.076]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.078]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.078]            // while-condition  =>  TRUE
[09:01:38.078]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.081]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.081]            // while-condition  =>  TRUE
[09:01:38.082]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.085]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.085]            // while-condition  =>  TRUE
[09:01:38.086]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.088]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.089]            // while-condition  =>  TRUE
[09:01:38.089]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.091]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.092]            // while-condition  =>  TRUE
[09:01:38.093]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.096]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.096]            // while-condition  =>  TRUE
[09:01:38.097]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.099]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.099]            // while-condition  =>  TRUE
[09:01:38.099]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.102]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.103]            // while-condition  =>  TRUE
[09:01:38.103]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.106]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.106]            // while-condition  =>  TRUE
[09:01:38.107]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.110]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.110]            // while-condition  =>  TRUE
[09:01:38.110]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.114]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.114]            // while-condition  =>  TRUE
[09:01:38.115]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.118]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.118]            // while-condition  =>  TRUE
[09:01:38.119]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.122]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.122]            // while-condition  =>  TRUE
[09:01:38.123]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.126]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.126]            // while-condition  =>  TRUE
[09:01:38.127]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.130]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.130]            // while-condition  =>  TRUE
[09:01:38.131]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.134]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.134]            // while-condition  =>  TRUE
[09:01:38.135]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.138]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.138]            // while-condition  =>  TRUE
[09:01:38.139]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.141]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.141]            // while-condition  =>  TRUE
[09:01:38.142]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.144]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.144]            // while-condition  =>  TRUE
[09:01:38.145]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.147]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.147]            // while-condition  =>  TRUE
[09:01:38.148]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.151]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.151]            // while-condition  =>  TRUE
[09:01:38.152]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.155]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.155]            // while-condition  =>  TRUE
[09:01:38.156]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.159]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.159]            // while-condition  =>  TRUE
[09:01:38.160]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.163]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.163]            // while-condition  =>  TRUE
[09:01:38.164]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:01:38.165]            // while  =>  TIMEOUT
[09:01:38.165]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:01:38.165]          </control>
[09:01:38.166]          <block atomic="false" info="">
[09:01:38.167]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:01:38.169]              // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:01:38.169]              // -> [PCWithinFlash <= 0x00000000]
[09:01:38.170]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:01:38.173]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:01:38.174]          </block>
[09:01:38.174]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:01:38.175]            // if-block "PCWithinFlash == 0"
[09:01:38.176]              // =>  TRUE
[09:01:38.176]            // end if-block "PCWithinFlash == 0"
[09:01:38.177]          </control>
[09:01:38.177]        </sequence>
[09:01:38.178]    </block>
[09:01:38.178]  </sequence>
[09:01:38.179]  
[09:01:46.644]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[09:01:46.644]  
[09:01:46.644]  <debugvars>
[09:01:46.645]    // Pre-defined
[09:01:46.645]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:01:46.645]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:01:46.646]    __dp=0x00000000
[09:01:46.646]    __ap=0x00000000
[09:01:46.647]    __traceout=0x00000000      (Trace Disabled)
[09:01:46.647]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:01:46.648]    __FlashAddr=0x00000000
[09:01:46.648]    __FlashLen=0x00000000
[09:01:46.648]    __FlashArg=0x00000000
[09:01:46.649]    __FlashOp=0x00000000
[09:01:46.649]    __Result=0x00000000
[09:01:46.649]  </debugvars>
[09:01:46.650]  
[09:01:46.650]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[09:01:46.650]    <block atomic="false" info="">
[09:01:46.651]      __var nReset      = 0x80;
[09:01:46.651]        // -> [nReset <= 0x00000080]
[09:01:46.651]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:01:47.677]  
[09:01:47.677]  !!! E320 : DAP access error
[09:01:47.677]  
[09:01:47.680]    </block>
[09:01:47.681]  </sequence>
[09:01:47.681]  
[09:02:14.810]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:02:14.810]  
[09:02:14.811]  <debugvars>
[09:02:14.811]    // Pre-defined
[09:02:14.811]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:02:14.812]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:02:14.812]    __dp=0x00000000
[09:02:14.813]    __ap=0x00000000
[09:02:14.813]    __traceout=0x00000000      (Trace Disabled)
[09:02:14.813]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:02:14.814]    __FlashAddr=0x00000000
[09:02:14.814]    __FlashLen=0x00000000
[09:02:14.814]    __FlashArg=0x00000000
[09:02:14.815]    __FlashOp=0x00000000
[09:02:14.815]    __Result=0x00000000
[09:02:14.816]  </debugvars>
[09:02:14.816]  
[09:02:14.816]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:02:14.817]    <block atomic="false" info="">
[09:02:14.817]      __var nReset      = 0x80;
[09:02:14.817]        // -> [nReset <= 0x00000080]
[09:02:14.818]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:02:14.819]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:02:14.820]    </block>
[09:02:14.820]    <control if="" while="1" timeout="50000" info="">
[09:02:14.820]      // while "1"  (timeout="50000")
[09:02:14.821]      // while-condition  =>  TRUE
[09:02:14.821]      // while "1"  (timeout="50000")
[09:02:14.821]      // while-condition  =>  TRUE
[09:02:14.821]      // while "1"  (timeout="50000")
[09:02:14.822]      // while-condition  =>  TRUE
[09:02:14.822]      // while "1"  (timeout="50000")
[09:02:14.822]      // while-condition  =>  TRUE
[09:02:14.823]      // while "1"  (timeout="50000")
[09:02:14.823]      // while-condition  =>  TRUE
[09:02:14.823]      // while "1"  (timeout="50000")
[09:02:14.823]      // while-condition  =>  TRUE
[09:02:14.824]      // while "1"  (timeout="50000")
[09:02:14.824]      // while-condition  =>  TRUE
[09:02:14.824]      // while "1"  (timeout="50000")
[09:02:14.825]      // while-condition  =>  TRUE
[09:02:14.825]      // while "1"  (timeout="50000")
[09:02:14.825]      // while-condition  =>  TRUE
[09:02:14.825]      // while "1"  (timeout="50000")
[09:02:14.826]      // while-condition  =>  TRUE
[09:02:14.826]      // while "1"  (timeout="50000")
[09:02:14.826]      // while-condition  =>  TRUE
[09:02:14.826]      // while "1"  (timeout="50000")
[09:02:14.827]      // while-condition  =>  TRUE
[09:02:14.827]      // while "1"  (timeout="50000")
[09:02:14.827]      // while-condition  =>  TRUE
[09:02:14.827]      // while "1"  (timeout="50000")
[09:02:14.828]      // while-condition  =>  TRUE
[09:02:14.828]      // while "1"  (timeout="50000")
[09:02:14.828]      // while-condition  =>  TRUE
[09:02:14.828]      // while "1"  (timeout="50000")
[09:02:14.828]      // while-condition  =>  TRUE
[09:02:14.828]      // while "1"  (timeout="50000")
[09:02:14.829]      // while-condition  =>  TRUE
[09:02:14.829]      // while "1"  (timeout="50000")
[09:02:14.829]      // while-condition  =>  TRUE
[09:02:14.829]      // while "1"  (timeout="50000")
[09:02:14.829]      // while-condition  =>  TRUE
[09:02:14.830]      // while "1"  (timeout="50000")
[09:02:14.830]      // while-condition  =>  TRUE
[09:02:14.830]      // while "1"  (timeout="50000")
[09:02:14.830]      // while-condition  =>  TRUE
[09:02:14.830]      // while "1"  (timeout="50000")
[09:02:14.831]      // while-condition  =>  TRUE
[09:02:14.831]      // while "1"  (timeout="50000")
[09:02:14.831]      // while-condition  =>  TRUE
[09:02:14.831]      // while "1"  (timeout="50000")
[09:02:14.831]      // while-condition  =>  TRUE
[09:02:14.832]      // while "1"  (timeout="50000")
[09:02:14.832]      // while-condition  =>  TRUE
[09:02:14.832]      // while "1"  (timeout="50000")
[09:02:14.832]      // while-condition  =>  TRUE
[09:02:14.832]      // while "1"  (timeout="50000")
[09:02:14.833]      // while-condition  =>  TRUE
[09:02:14.833]      // while "1"  (timeout="50000")
[09:02:14.833]      // while-condition  =>  TRUE
[09:02:14.833]      // while "1"  (timeout="50000")
[09:02:14.833]      // while-condition  =>  TRUE
[09:02:14.834]      // while "1"  (timeout="50000")
[09:02:14.834]      // while-condition  =>  TRUE
[09:02:14.834]      // while "1"  (timeout="50000")
[09:02:14.834]      // while-condition  =>  TRUE
[09:02:14.834]      // while "1"  (timeout="50000")
[09:02:14.835]      // while-condition  =>  TRUE
[09:02:14.835]      // while "1"  (timeout="50000")
[09:02:14.835]      // while-condition  =>  TRUE
[09:02:14.835]      // while "1"  (timeout="50000")
[09:02:14.835]      // while-condition  =>  TRUE
[09:02:14.836]      // while "1"  (timeout="50000")
[09:02:14.836]      // while-condition  =>  TRUE
[09:02:14.836]      // while "1"  (timeout="50000")
[09:02:14.836]      // while-condition  =>  TRUE
[09:02:14.836]      // while "1"  (timeout="50000")
[09:02:14.837]      // while-condition  =>  TRUE
[09:02:14.837]      // while "1"  (timeout="50000")
[09:02:14.837]      // while-condition  =>  TRUE
[09:02:14.837]      // while "1"  (timeout="50000")
[09:02:14.837]      // while-condition  =>  TRUE
[09:02:14.838]      // while "1"  (timeout="50000")
[09:02:14.838]      // while-condition  =>  TRUE
[09:02:14.838]      // while "1"  (timeout="50000")
[09:02:14.838]      // while-condition  =>  TRUE
[09:02:14.838]      // while "1"  (timeout="50000")
[09:02:14.839]      // while-condition  =>  TRUE
[09:02:14.839]      // while "1"  (timeout="50000")
[09:02:14.839]      // while-condition  =>  TRUE
[09:02:14.839]      // while "1"  (timeout="50000")
[09:02:14.839]      // while-condition  =>  TRUE
[09:02:14.839]      // while "1"  (timeout="50000")
[09:02:14.840]      // while-condition  =>  TRUE
[09:02:14.840]      // while "1"  (timeout="50000")
[09:02:14.840]      // while-condition  =>  TRUE
[09:02:14.840]      // while "1"  (timeout="50000")
[09:02:14.840]      // while-condition  =>  TRUE
[09:02:14.841]      // while "1"  (timeout="50000")
[09:02:14.841]      // while-condition  =>  TRUE
[09:02:14.841]      // while "1"  (timeout="50000")
[09:02:14.841]      // while-condition  =>  TRUE
[09:02:14.841]      // while "1"  (timeout="50000")
[09:02:14.842]      // while-condition  =>  TRUE
[09:02:14.842]      // while "1"  (timeout="50000")
[09:02:14.842]      // while-condition  =>  TRUE
[09:02:14.842]      // while "1"  (timeout="50000")
[09:02:14.843]      // while-condition  =>  TRUE
[09:02:14.843]      // while "1"  (timeout="50000")
[09:02:14.843]      // while-condition  =>  TRUE
[09:02:14.843]      // while "1"  (timeout="50000")
[09:02:14.843]      // while-condition  =>  TRUE
[09:02:14.844]      // while "1"  (timeout="50000")
[09:02:14.844]      // while-condition  =>  TRUE
[09:02:14.844]      // while "1"  (timeout="50000")
[09:02:14.844]      // while-condition  =>  TRUE
[09:02:14.845]      // while "1"  (timeout="50000")
[09:02:14.845]      // while-condition  =>  TRUE
[09:02:14.845]      // while "1"  (timeout="50000")
[09:02:14.845]      // while-condition  =>  TRUE
[09:02:14.845]      // while "1"  (timeout="50000")
[09:02:14.846]      // while-condition  =>  TRUE
[09:02:14.846]      // while "1"  (timeout="50000")
[09:02:14.846]      // while-condition  =>  TRUE
[09:02:14.846]      // while "1"  (timeout="50000")
[09:02:14.846]      // while-condition  =>  TRUE
[09:02:14.847]      // while "1"  (timeout="50000")
[09:02:14.847]      // while-condition  =>  TRUE
[09:02:14.847]      // while "1"  (timeout="50000")
[09:02:14.847]      // while-condition  =>  TRUE
[09:02:14.848]      // while "1"  (timeout="50000")
[09:02:14.848]      // while-condition  =>  TRUE
[09:02:14.848]      // while "1"  (timeout="50000")
[09:02:14.848]      // while-condition  =>  TRUE
[09:02:14.848]      // while "1"  (timeout="50000")
[09:02:14.849]      // while-condition  =>  TRUE
[09:02:14.849]      // while "1"  (timeout="50000")
[09:02:14.849]      // while-condition  =>  TRUE
[09:02:14.849]      // while "1"  (timeout="50000")
[09:02:14.850]      // while-condition  =>  TRUE
[09:02:14.850]      // while "1"  (timeout="50000")
[09:02:14.850]      // while-condition  =>  TRUE
[09:02:14.850]      // while "1"  (timeout="50000")
[09:02:14.850]      // while-condition  =>  TRUE
[09:02:14.851]      // while "1"  (timeout="50000")
[09:02:14.851]      // while-condition  =>  TRUE
[09:02:14.851]      // while "1"  (timeout="50000")
[09:02:14.851]      // while-condition  =>  TRUE
[09:02:14.852]      // while "1"  (timeout="50000")
[09:02:14.852]      // while-condition  =>  TRUE
[09:02:14.852]      // while "1"  (timeout="50000")
[09:02:14.852]      // while-condition  =>  TRUE
[09:02:14.852]      // while "1"  (timeout="50000")
[09:02:14.853]      // while-condition  =>  TRUE
[09:02:14.853]      // while "1"  (timeout="50000")
[09:02:14.853]      // while-condition  =>  TRUE
[09:02:14.853]      // while "1"  (timeout="50000")
[09:02:14.853]      // while-condition  =>  TRUE
[09:02:14.854]      // while "1"  (timeout="50000")
[09:02:14.854]      // while-condition  =>  TRUE
[09:02:14.854]      // while "1"  (timeout="50000")
[09:02:14.854]      // while-condition  =>  TRUE
[09:02:14.855]      // while "1"  (timeout="50000")
[09:02:14.855]      // while-condition  =>  TRUE
[09:02:14.855]      // while "1"  (timeout="50000")
[09:02:14.855]      // while-condition  =>  TRUE
[09:02:14.855]      // while "1"  (timeout="50000")
[09:02:14.856]      // while-condition  =>  TRUE
[09:02:14.856]      // while "1"  (timeout="50000")
[09:02:14.856]      // while-condition  =>  TRUE
[09:02:14.856]      // while "1"  (timeout="50000")
[09:02:14.856]      // while-condition  =>  TRUE
[09:02:14.857]      // while "1"  (timeout="50000")
[09:02:14.857]      // while-condition  =>  TRUE
[09:02:14.857]      // while "1"  (timeout="50000")
[09:02:14.857]      // while-condition  =>  TRUE
[09:02:14.858]      // while "1"  (timeout="50000")
[09:02:14.858]      // while-condition  =>  TRUE
[09:02:14.858]      // while "1"  (timeout="50000")
[09:02:14.858]      // while-condition  =>  TRUE
[09:02:14.858]      // while "1"  (timeout="50000")
[09:02:14.859]      // while-condition  =>  TRUE
[09:02:14.859]      // while "1"  (timeout="50000")
[09:02:14.859]      // while-condition  =>  TRUE
[09:02:14.859]      // while "1"  (timeout="50000")
[09:02:14.860]      // while-condition  =>  TRUE
[09:02:14.860]      // while "1"  (timeout="50000")
[09:02:14.860]      // while-condition  =>  TRUE
[09:02:14.860]      // while "1"  (timeout="50000")
[09:02:14.860]      // while-condition  =>  TRUE
[09:02:14.861]      // while "1"  (timeout="50000")
[09:02:14.861]      // while-condition  =>  TRUE
[09:02:14.861]      // while "1"  (timeout="50000")
[09:02:14.861]      // while-condition  =>  TRUE
[09:02:14.862]      // while "1"  (timeout="50000")
[09:02:14.862]      // while-condition  =>  TRUE
[09:02:14.862]      // while "1"  (timeout="50000")
[09:02:14.862]      // while-condition  =>  TRUE
[09:02:14.862]      // while "1"  (timeout="50000")
[09:02:14.863]      // while-condition  =>  TRUE
[09:02:14.863]      // while "1"  (timeout="50000")
[09:02:14.863]      // while-condition  =>  TRUE
[09:02:14.863]      // while "1"  (timeout="50000")
[09:02:14.864]      // while-condition  =>  TRUE
[09:02:14.864]      // while "1"  (timeout="50000")
[09:02:14.864]      // while-condition  =>  TRUE
[09:02:14.864]      // while "1"  (timeout="50000")
[09:02:14.865]      // while-condition  =>  TRUE
[09:02:14.865]      // while "1"  (timeout="50000")
[09:02:14.865]      // while-condition  =>  TRUE
[09:02:14.865]      // while "1"  (timeout="50000")
[09:02:14.865]      // while-condition  =>  TRUE
[09:02:14.866]      // while "1"  (timeout="50000")
[09:02:14.866]      // while-condition  =>  TRUE
[09:02:14.866]      // while "1"  (timeout="50000")
[09:02:14.866]      // while-condition  =>  TRUE
[09:02:14.867]      // while "1"  (timeout="50000")
[09:02:14.867]      // while-condition  =>  TRUE
[09:02:14.867]      // while "1"  (timeout="50000")
[09:02:14.867]      // while-condition  =>  TRUE
[09:02:14.867]      // while "1"  (timeout="50000")
[09:02:14.868]      // while-condition  =>  TRUE
[09:02:14.868]      // while "1"  (timeout="50000")
[09:02:14.868]      // while-condition  =>  TRUE
[09:02:14.868]      // while "1"  (timeout="50000")
[09:02:14.869]      // while-condition  =>  TRUE
[09:02:14.869]      // while "1"  (timeout="50000")
[09:02:14.869]      // while-condition  =>  TRUE
[09:02:14.869]      // while "1"  (timeout="50000")
[09:02:14.869]      // while-condition  =>  TRUE
[09:02:14.870]      // while "1"  (timeout="50000")
[09:02:14.870]      // while-condition  =>  TRUE
[09:02:14.870]      // while "1"  (timeout="50000")
[09:02:14.870]      // while-condition  =>  TRUE
[09:02:14.871]      // while "1"  (timeout="50000")
[09:02:14.871]      // while-condition  =>  TRUE
[09:02:14.871]      // while "1"  (timeout="50000")
[09:02:14.871]      // while-condition  =>  TRUE
[09:02:14.871]      // while "1"  (timeout="50000")
[09:02:14.872]      // while-condition  =>  TRUE
[09:02:14.872]      // while "1"  (timeout="50000")
[09:02:14.872]      // while-condition  =>  TRUE
[09:02:14.872]      // while "1"  (timeout="50000")
[09:02:14.873]      // while-condition  =>  TRUE
[09:02:14.873]      // while "1"  (timeout="50000")
[09:02:14.873]      // while-condition  =>  TRUE
[09:02:14.873]      // while "1"  (timeout="50000")
[09:02:14.874]      // while-condition  =>  TRUE
[09:02:14.874]      // while "1"  (timeout="50000")
[09:02:14.874]      // while-condition  =>  TRUE
[09:02:14.874]      // while "1"  (timeout="50000")
[09:02:14.874]      // while-condition  =>  TRUE
[09:02:14.875]      // while "1"  (timeout="50000")
[09:02:14.875]      // while-condition  =>  TRUE
[09:02:14.875]      // while "1"  (timeout="50000")
[09:02:14.876]      // while-condition  =>  TRUE
[09:02:14.876]      // while "1"  (timeout="50000")
[09:02:14.876]      // while-condition  =>  TRUE
[09:02:14.876]      // while "1"  (timeout="50000")
[09:02:14.877]      // while-condition  =>  TRUE
[09:02:14.877]      // while "1"  (timeout="50000")
[09:02:14.877]      // while-condition  =>  TRUE
[09:02:14.877]      // while "1"  (timeout="50000")
[09:02:14.878]      // while-condition  =>  TRUE
[09:02:14.878]      // while "1"  (timeout="50000")
[09:02:14.878]      // while-condition  =>  TRUE
[09:02:14.879]      // while "1"  (timeout="50000")
[09:02:14.879]      // while-condition  =>  TRUE
[09:02:14.879]      // while "1"  (timeout="50000")
[09:02:14.880]      // while-condition  =>  TRUE
[09:02:14.880]      // while "1"  (timeout="50000")
[09:02:14.880]      // while-condition  =>  TRUE
[09:02:14.880]      // while "1"  (timeout="50000")
[09:02:14.881]      // while-condition  =>  TRUE
[09:02:14.881]      // while "1"  (timeout="50000")
[09:02:14.881]      // while-condition  =>  TRUE
[09:02:14.881]      // while "1"  (timeout="50000")
[09:02:14.882]      // while-condition  =>  TRUE
[09:02:14.882]      // while "1"  (timeout="50000")
[09:02:14.882]      // while  =>  TIMEOUT
[09:02:14.882]      // end while "1"
[09:02:14.882]    </control>
[09:02:14.883]    <block atomic="false" info="">
[09:02:14.883]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:02:14.884]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:02:14.885]    </block>
[09:02:14.885]    <control if="" while="1" timeout="10000" info="">
[09:02:14.885]      // while "1"  (timeout="10000")
[09:02:14.885]      // while-condition  =>  TRUE
[09:02:14.885]      // while "1"  (timeout="10000")
[09:02:14.886]      // while-condition  =>  TRUE
[09:02:14.886]      // while "1"  (timeout="10000")
[09:02:14.886]      // while-condition  =>  TRUE
[09:02:14.886]      // while "1"  (timeout="10000")
[09:02:14.886]      // while-condition  =>  TRUE
[09:02:14.887]      // while "1"  (timeout="10000")
[09:02:14.887]      // while-condition  =>  TRUE
[09:02:14.888]      // while "1"  (timeout="10000")
[09:02:14.888]      // while-condition  =>  TRUE
[09:02:14.888]      // while "1"  (timeout="10000")
[09:02:14.888]      // while-condition  =>  TRUE
[09:02:14.888]      // while "1"  (timeout="10000")
[09:02:14.889]      // while-condition  =>  TRUE
[09:02:14.889]      // while "1"  (timeout="10000")
[09:02:14.889]      // while-condition  =>  TRUE
[09:02:14.889]      // while "1"  (timeout="10000")
[09:02:14.889]      // while-condition  =>  TRUE
[09:02:14.890]      // while "1"  (timeout="10000")
[09:02:14.890]      // while-condition  =>  TRUE
[09:02:14.890]      // while "1"  (timeout="10000")
[09:02:14.890]      // while-condition  =>  TRUE
[09:02:14.890]      // while "1"  (timeout="10000")
[09:02:14.891]      // while-condition  =>  TRUE
[09:02:14.891]      // while "1"  (timeout="10000")
[09:02:14.891]      // while-condition  =>  TRUE
[09:02:14.891]      // while "1"  (timeout="10000")
[09:02:14.892]      // while-condition  =>  TRUE
[09:02:14.892]      // while "1"  (timeout="10000")
[09:02:14.892]      // while-condition  =>  TRUE
[09:02:14.892]      // while "1"  (timeout="10000")
[09:02:14.892]      // while-condition  =>  TRUE
[09:02:14.893]      // while "1"  (timeout="10000")
[09:02:14.893]      // while-condition  =>  TRUE
[09:02:14.893]      // while "1"  (timeout="10000")
[09:02:14.893]      // while-condition  =>  TRUE
[09:02:14.894]      // while "1"  (timeout="10000")
[09:02:14.894]      // while-condition  =>  TRUE
[09:02:14.894]      // while "1"  (timeout="10000")
[09:02:14.894]      // while-condition  =>  TRUE
[09:02:14.894]      // while "1"  (timeout="10000")
[09:02:14.895]      // while-condition  =>  TRUE
[09:02:14.895]      // while "1"  (timeout="10000")
[09:02:14.895]      // while-condition  =>  TRUE
[09:02:14.895]      // while "1"  (timeout="10000")
[09:02:14.896]      // while-condition  =>  TRUE
[09:02:14.896]      // while "1"  (timeout="10000")
[09:02:14.896]      // while-condition  =>  TRUE
[09:02:14.896]      // while "1"  (timeout="10000")
[09:02:14.897]      // while-condition  =>  TRUE
[09:02:14.897]      // while "1"  (timeout="10000")
[09:02:14.897]      // while-condition  =>  TRUE
[09:02:14.897]      // while "1"  (timeout="10000")
[09:02:14.897]      // while-condition  =>  TRUE
[09:02:14.898]      // while "1"  (timeout="10000")
[09:02:14.898]      // while  =>  TIMEOUT
[09:02:14.898]      // end while "1"
[09:02:14.898]    </control>
[09:02:14.899]    <block atomic="true" info="">
[09:02:14.902]  
[09:02:14.902]  ! W001 : No atomic sequence support in debug unit
[09:02:14.902]  
[09:02:14.904]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:02:14.907]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:02:14.907]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:02:14.909]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:02:14.909]    </block>
[09:02:14.909]    <block atomic="false" info="">
[09:02:14.910]      __errorcontrol = 0x00000001;
[09:02:14.910]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:02:14.911]      ReadDP(0x0);
[09:02:14.919]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:02:14.936]      __errorcontrol = 0x00000000;
[09:02:14.937]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:02:14.937]    </block>
[09:02:14.937]  </sequence>
[09:02:14.938]  
[09:02:14.938]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:02:14.938]  
[09:02:14.939]  <debugvars>
[09:02:14.939]    // Pre-defined
[09:02:14.939]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:02:14.940]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:02:14.940]    __dp=0x00000000
[09:02:14.941]    __ap=0x00000000
[09:02:14.941]    __traceout=0x00000000      (Trace Disabled)
[09:02:14.941]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:02:14.942]    __FlashAddr=0x00000000
[09:02:14.942]    __FlashLen=0x00000000
[09:02:14.942]    __FlashArg=0x00000000
[09:02:14.943]    __FlashOp=0x00000000
[09:02:14.943]    __Result=0x00000000
[09:02:14.943]  </debugvars>
[09:02:14.944]  
[09:02:14.944]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:02:14.944]  </sequence>
[09:02:14.945]  
[09:02:23.800]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:02:23.800]  
[09:02:23.800]  <debugvars>
[09:02:23.801]    // Pre-defined
[09:02:23.801]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:02:23.802]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:02:23.802]    __dp=0x00000000
[09:02:23.802]    __ap=0x00000000
[09:02:23.803]    __traceout=0x00000000      (Trace Disabled)
[09:02:23.803]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:02:23.804]    __FlashAddr=0x00000000
[09:02:23.804]    __FlashLen=0x00000000
[09:02:23.804]    __FlashArg=0x00000000
[09:02:23.805]    __FlashOp=0x00000000
[09:02:23.805]    __Result=0x00000000
[09:02:23.805]  </debugvars>
[09:02:23.805]  
[09:02:23.806]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:02:23.806]    <block atomic="false" info="">
[09:02:23.806]      __var nReset      = 0x80;
[09:02:23.806]        // -> [nReset <= 0x00000080]
[09:02:23.806]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:02:23.809]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:02:23.809]    </block>
[09:02:23.809]    <control if="" while="1" timeout="50000" info="">
[09:02:23.809]      // while "1"  (timeout="50000")
[09:02:23.810]      // while-condition  =>  TRUE
[09:02:23.810]      // while "1"  (timeout="50000")
[09:02:23.810]      // while-condition  =>  TRUE
[09:02:23.810]      // while "1"  (timeout="50000")
[09:02:23.811]      // while-condition  =>  TRUE
[09:02:23.811]      // while "1"  (timeout="50000")
[09:02:23.811]      // while-condition  =>  TRUE
[09:02:23.812]      // while "1"  (timeout="50000")
[09:02:23.812]      // while-condition  =>  TRUE
[09:02:23.812]      // while "1"  (timeout="50000")
[09:02:23.813]      // while-condition  =>  TRUE
[09:02:23.813]      // while "1"  (timeout="50000")
[09:02:23.813]      // while-condition  =>  TRUE
[09:02:23.813]      // while "1"  (timeout="50000")
[09:02:23.814]      // while-condition  =>  TRUE
[09:02:23.814]      // while "1"  (timeout="50000")
[09:02:23.814]      // while-condition  =>  TRUE
[09:02:23.814]      // while "1"  (timeout="50000")
[09:02:23.815]      // while-condition  =>  TRUE
[09:02:23.815]      // while "1"  (timeout="50000")
[09:02:23.815]      // while-condition  =>  TRUE
[09:02:23.815]      // while "1"  (timeout="50000")
[09:02:23.816]      // while-condition  =>  TRUE
[09:02:23.816]      // while "1"  (timeout="50000")
[09:02:23.816]      // while-condition  =>  TRUE
[09:02:23.816]      // while "1"  (timeout="50000")
[09:02:23.817]      // while-condition  =>  TRUE
[09:02:23.817]      // while "1"  (timeout="50000")
[09:02:23.817]      // while-condition  =>  TRUE
[09:02:23.817]      // while "1"  (timeout="50000")
[09:02:23.817]      // while-condition  =>  TRUE
[09:02:23.818]      // while "1"  (timeout="50000")
[09:02:23.818]      // while-condition  =>  TRUE
[09:02:23.818]      // while "1"  (timeout="50000")
[09:02:23.818]      // while-condition  =>  TRUE
[09:02:23.818]      // while "1"  (timeout="50000")
[09:02:23.818]      // while-condition  =>  TRUE
[09:02:23.819]      // while "1"  (timeout="50000")
[09:02:23.819]      // while-condition  =>  TRUE
[09:02:23.819]      // while "1"  (timeout="50000")
[09:02:23.819]      // while-condition  =>  TRUE
[09:02:23.819]      // while "1"  (timeout="50000")
[09:02:23.819]      // while-condition  =>  TRUE
[09:02:23.819]      // while "1"  (timeout="50000")
[09:02:23.820]      // while-condition  =>  TRUE
[09:02:23.820]      // while "1"  (timeout="50000")
[09:02:23.820]      // while-condition  =>  TRUE
[09:02:23.820]      // while "1"  (timeout="50000")
[09:02:23.820]      // while-condition  =>  TRUE
[09:02:23.821]      // while "1"  (timeout="50000")
[09:02:23.821]      // while-condition  =>  TRUE
[09:02:23.821]      // while "1"  (timeout="50000")
[09:02:23.821]      // while-condition  =>  TRUE
[09:02:23.821]      // while "1"  (timeout="50000")
[09:02:23.821]      // while-condition  =>  TRUE
[09:02:23.822]      // while "1"  (timeout="50000")
[09:02:23.822]      // while-condition  =>  TRUE
[09:02:23.822]      // while "1"  (timeout="50000")
[09:02:23.823]      // while-condition  =>  TRUE
[09:02:23.823]      // while "1"  (timeout="50000")
[09:02:23.823]      // while-condition  =>  TRUE
[09:02:23.823]      // while "1"  (timeout="50000")
[09:02:23.823]      // while-condition  =>  TRUE
[09:02:23.824]      // while "1"  (timeout="50000")
[09:02:23.824]      // while-condition  =>  TRUE
[09:02:23.824]      // while "1"  (timeout="50000")
[09:02:23.824]      // while-condition  =>  TRUE
[09:02:23.824]      // while "1"  (timeout="50000")
[09:02:23.824]      // while-condition  =>  TRUE
[09:02:23.825]      // while "1"  (timeout="50000")
[09:02:23.825]      // while-condition  =>  TRUE
[09:02:23.825]      // while "1"  (timeout="50000")
[09:02:23.825]      // while-condition  =>  TRUE
[09:02:23.825]      // while "1"  (timeout="50000")
[09:02:23.826]      // while-condition  =>  TRUE
[09:02:23.826]      // while "1"  (timeout="50000")
[09:02:23.826]      // while-condition  =>  TRUE
[09:02:23.826]      // while "1"  (timeout="50000")
[09:02:23.826]      // while-condition  =>  TRUE
[09:02:23.827]      // while "1"  (timeout="50000")
[09:02:23.827]      // while-condition  =>  TRUE
[09:02:23.827]      // while "1"  (timeout="50000")
[09:02:23.827]      // while-condition  =>  TRUE
[09:02:23.827]      // while "1"  (timeout="50000")
[09:02:23.827]      // while-condition  =>  TRUE
[09:02:23.827]      // while "1"  (timeout="50000")
[09:02:23.828]      // while-condition  =>  TRUE
[09:02:23.828]      // while "1"  (timeout="50000")
[09:02:23.828]      // while-condition  =>  TRUE
[09:02:23.828]      // while "1"  (timeout="50000")
[09:02:23.828]      // while-condition  =>  TRUE
[09:02:23.829]      // while "1"  (timeout="50000")
[09:02:23.829]      // while-condition  =>  TRUE
[09:02:23.829]      // while "1"  (timeout="50000")
[09:02:23.829]      // while-condition  =>  TRUE
[09:02:23.829]      // while "1"  (timeout="50000")
[09:02:23.830]      // while-condition  =>  TRUE
[09:02:23.830]      // while "1"  (timeout="50000")
[09:02:23.830]      // while-condition  =>  TRUE
[09:02:23.830]      // while "1"  (timeout="50000")
[09:02:23.830]      // while-condition  =>  TRUE
[09:02:23.830]      // while "1"  (timeout="50000")
[09:02:23.831]      // while-condition  =>  TRUE
[09:02:23.831]      // while "1"  (timeout="50000")
[09:02:23.831]      // while-condition  =>  TRUE
[09:02:23.831]      // while "1"  (timeout="50000")
[09:02:23.831]      // while-condition  =>  TRUE
[09:02:23.832]      // while "1"  (timeout="50000")
[09:02:23.832]      // while-condition  =>  TRUE
[09:02:23.832]      // while "1"  (timeout="50000")
[09:02:23.832]      // while-condition  =>  TRUE
[09:02:23.832]      // while "1"  (timeout="50000")
[09:02:23.833]      // while-condition  =>  TRUE
[09:02:23.833]      // while "1"  (timeout="50000")
[09:02:23.833]      // while-condition  =>  TRUE
[09:02:23.833]      // while "1"  (timeout="50000")
[09:02:23.834]      // while-condition  =>  TRUE
[09:02:23.834]      // while "1"  (timeout="50000")
[09:02:23.834]      // while-condition  =>  TRUE
[09:02:23.834]      // while "1"  (timeout="50000")
[09:02:23.834]      // while-condition  =>  TRUE
[09:02:23.835]      // while "1"  (timeout="50000")
[09:02:23.835]      // while-condition  =>  TRUE
[09:02:23.835]      // while "1"  (timeout="50000")
[09:02:23.835]      // while-condition  =>  TRUE
[09:02:23.835]      // while "1"  (timeout="50000")
[09:02:23.836]      // while-condition  =>  TRUE
[09:02:23.836]      // while "1"  (timeout="50000")
[09:02:23.836]      // while-condition  =>  TRUE
[09:02:23.836]      // while "1"  (timeout="50000")
[09:02:23.836]      // while-condition  =>  TRUE
[09:02:23.836]      // while "1"  (timeout="50000")
[09:02:23.836]      // while-condition  =>  TRUE
[09:02:23.836]      // while "1"  (timeout="50000")
[09:02:23.836]      // while-condition  =>  TRUE
[09:02:23.837]      // while "1"  (timeout="50000")
[09:02:23.837]      // while-condition  =>  TRUE
[09:02:23.837]      // while "1"  (timeout="50000")
[09:02:23.837]      // while-condition  =>  TRUE
[09:02:23.837]      // while "1"  (timeout="50000")
[09:02:23.838]      // while-condition  =>  TRUE
[09:02:23.838]      // while "1"  (timeout="50000")
[09:02:23.839]      // while-condition  =>  TRUE
[09:02:23.839]      // while "1"  (timeout="50000")
[09:02:23.839]      // while-condition  =>  TRUE
[09:02:23.839]      // while "1"  (timeout="50000")
[09:02:23.839]      // while-condition  =>  TRUE
[09:02:23.839]      // while "1"  (timeout="50000")
[09:02:23.839]      // while-condition  =>  TRUE
[09:02:23.839]      // while "1"  (timeout="50000")
[09:02:23.839]      // while-condition  =>  TRUE
[09:02:23.840]      // while "1"  (timeout="50000")
[09:02:23.840]      // while-condition  =>  TRUE
[09:02:23.840]      // while "1"  (timeout="50000")
[09:02:23.840]      // while-condition  =>  TRUE
[09:02:23.840]      // while "1"  (timeout="50000")
[09:02:23.841]      // while-condition  =>  TRUE
[09:02:23.842]      // while "1"  (timeout="50000")
[09:02:23.842]      // while-condition  =>  TRUE
[09:02:23.842]      // while "1"  (timeout="50000")
[09:02:23.842]      // while-condition  =>  TRUE
[09:02:23.842]      // while "1"  (timeout="50000")
[09:02:23.843]      // while-condition  =>  TRUE
[09:02:23.843]      // while "1"  (timeout="50000")
[09:02:23.843]      // while-condition  =>  TRUE
[09:02:23.843]      // while "1"  (timeout="50000")
[09:02:23.843]      // while-condition  =>  TRUE
[09:02:23.844]      // while "1"  (timeout="50000")
[09:02:23.844]      // while-condition  =>  TRUE
[09:02:23.844]      // while "1"  (timeout="50000")
[09:02:23.844]      // while-condition  =>  TRUE
[09:02:23.844]      // while "1"  (timeout="50000")
[09:02:23.845]      // while-condition  =>  TRUE
[09:02:23.845]      // while "1"  (timeout="50000")
[09:02:23.845]      // while-condition  =>  TRUE
[09:02:23.845]      // while "1"  (timeout="50000")
[09:02:23.845]      // while-condition  =>  TRUE
[09:02:23.846]      // while "1"  (timeout="50000")
[09:02:23.846]      // while-condition  =>  TRUE
[09:02:23.846]      // while "1"  (timeout="50000")
[09:02:23.846]      // while-condition  =>  TRUE
[09:02:23.846]      // while "1"  (timeout="50000")
[09:02:23.846]      // while-condition  =>  TRUE
[09:02:23.847]      // while "1"  (timeout="50000")
[09:02:23.847]      // while-condition  =>  TRUE
[09:02:23.847]      // while "1"  (timeout="50000")
[09:02:23.847]      // while-condition  =>  TRUE
[09:02:23.847]      // while "1"  (timeout="50000")
[09:02:23.848]      // while-condition  =>  TRUE
[09:02:23.848]      // while "1"  (timeout="50000")
[09:02:23.848]      // while-condition  =>  TRUE
[09:02:23.848]      // while "1"  (timeout="50000")
[09:02:23.848]      // while-condition  =>  TRUE
[09:02:23.849]      // while "1"  (timeout="50000")
[09:02:23.849]      // while-condition  =>  TRUE
[09:02:23.849]      // while "1"  (timeout="50000")
[09:02:23.849]      // while-condition  =>  TRUE
[09:02:23.849]      // while "1"  (timeout="50000")
[09:02:23.849]      // while-condition  =>  TRUE
[09:02:23.849]      // while "1"  (timeout="50000")
[09:02:23.849]      // while-condition  =>  TRUE
[09:02:23.849]      // while "1"  (timeout="50000")
[09:02:23.849]      // while-condition  =>  TRUE
[09:02:23.850]      // while "1"  (timeout="50000")
[09:02:23.850]      // while-condition  =>  TRUE
[09:02:23.850]      // while "1"  (timeout="50000")
[09:02:23.850]      // while-condition  =>  TRUE
[09:02:23.850]      // while "1"  (timeout="50000")
[09:02:23.851]      // while-condition  =>  TRUE
[09:02:23.851]      // while "1"  (timeout="50000")
[09:02:23.851]      // while-condition  =>  TRUE
[09:02:23.851]      // while "1"  (timeout="50000")
[09:02:23.851]      // while-condition  =>  TRUE
[09:02:23.852]      // while "1"  (timeout="50000")
[09:02:23.852]      // while-condition  =>  TRUE
[09:02:23.852]      // while "1"  (timeout="50000")
[09:02:23.852]      // while-condition  =>  TRUE
[09:02:23.852]      // while "1"  (timeout="50000")
[09:02:23.853]      // while-condition  =>  TRUE
[09:02:23.853]      // while "1"  (timeout="50000")
[09:02:23.853]      // while-condition  =>  TRUE
[09:02:23.853]      // while "1"  (timeout="50000")
[09:02:23.853]      // while-condition  =>  TRUE
[09:02:23.854]      // while "1"  (timeout="50000")
[09:02:23.855]      // while-condition  =>  TRUE
[09:02:23.855]      // while "1"  (timeout="50000")
[09:02:23.855]      // while-condition  =>  TRUE
[09:02:23.855]      // while "1"  (timeout="50000")
[09:02:23.855]      // while-condition  =>  TRUE
[09:02:23.856]      // while "1"  (timeout="50000")
[09:02:23.856]      // while-condition  =>  TRUE
[09:02:23.856]      // while "1"  (timeout="50000")
[09:02:23.856]      // while-condition  =>  TRUE
[09:02:23.856]      // while "1"  (timeout="50000")
[09:02:23.857]      // while-condition  =>  TRUE
[09:02:23.857]      // while "1"  (timeout="50000")
[09:02:23.857]      // while-condition  =>  TRUE
[09:02:23.857]      // while "1"  (timeout="50000")
[09:02:23.857]      // while-condition  =>  TRUE
[09:02:23.857]      // while "1"  (timeout="50000")
[09:02:23.858]      // while-condition  =>  TRUE
[09:02:23.858]      // while "1"  (timeout="50000")
[09:02:23.858]      // while-condition  =>  TRUE
[09:02:23.858]      // while "1"  (timeout="50000")
[09:02:23.858]      // while-condition  =>  TRUE
[09:02:23.859]      // while "1"  (timeout="50000")
[09:02:23.859]      // while-condition  =>  TRUE
[09:02:23.859]      // while "1"  (timeout="50000")
[09:02:23.859]      // while-condition  =>  TRUE
[09:02:23.859]      // while "1"  (timeout="50000")
[09:02:23.859]      // while-condition  =>  TRUE
[09:02:23.859]      // while "1"  (timeout="50000")
[09:02:23.859]      // while-condition  =>  TRUE
[09:02:23.860]      // while "1"  (timeout="50000")
[09:02:23.860]      // while-condition  =>  TRUE
[09:02:23.860]      // while "1"  (timeout="50000")
[09:02:23.860]      // while-condition  =>  TRUE
[09:02:23.860]      // while "1"  (timeout="50000")
[09:02:23.861]      // while-condition  =>  TRUE
[09:02:23.861]      // while "1"  (timeout="50000")
[09:02:23.861]      // while-condition  =>  TRUE
[09:02:23.861]      // while "1"  (timeout="50000")
[09:02:23.861]      // while-condition  =>  TRUE
[09:02:23.861]      // while "1"  (timeout="50000")
[09:02:23.863]      // while-condition  =>  TRUE
[09:02:23.863]      // while "1"  (timeout="50000")
[09:02:23.863]      // while-condition  =>  TRUE
[09:02:23.863]      // while "1"  (timeout="50000")
[09:02:23.863]      // while-condition  =>  TRUE
[09:02:23.863]      // while "1"  (timeout="50000")
[09:02:23.864]      // while-condition  =>  TRUE
[09:02:23.864]      // while "1"  (timeout="50000")
[09:02:23.864]      // while-condition  =>  TRUE
[09:02:23.864]      // while "1"  (timeout="50000")
[09:02:23.864]      // while-condition  =>  TRUE
[09:02:23.865]      // while "1"  (timeout="50000")
[09:02:23.865]      // while-condition  =>  TRUE
[09:02:23.865]      // while "1"  (timeout="50000")
[09:02:23.865]      // while-condition  =>  TRUE
[09:02:23.865]      // while "1"  (timeout="50000")
[09:02:23.866]      // while-condition  =>  TRUE
[09:02:23.866]      // while "1"  (timeout="50000")
[09:02:23.866]      // while  =>  TIMEOUT
[09:02:23.866]      // end while "1"
[09:02:23.866]    </control>
[09:02:23.867]    <block atomic="false" info="">
[09:02:23.867]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:02:23.869]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:02:23.869]    </block>
[09:02:23.869]    <control if="" while="1" timeout="10000" info="">
[09:02:23.869]      // while "1"  (timeout="10000")
[09:02:23.870]      // while-condition  =>  TRUE
[09:02:23.870]      // while "1"  (timeout="10000")
[09:02:23.870]      // while-condition  =>  TRUE
[09:02:23.870]      // while "1"  (timeout="10000")
[09:02:23.871]      // while-condition  =>  TRUE
[09:02:23.871]      // while "1"  (timeout="10000")
[09:02:23.871]      // while-condition  =>  TRUE
[09:02:23.871]      // while "1"  (timeout="10000")
[09:02:23.871]      // while-condition  =>  TRUE
[09:02:23.872]      // while "1"  (timeout="10000")
[09:02:23.872]      // while-condition  =>  TRUE
[09:02:23.872]      // while "1"  (timeout="10000")
[09:02:23.872]      // while-condition  =>  TRUE
[09:02:23.873]      // while "1"  (timeout="10000")
[09:02:23.873]      // while-condition  =>  TRUE
[09:02:23.873]      // while "1"  (timeout="10000")
[09:02:23.873]      // while-condition  =>  TRUE
[09:02:23.874]      // while "1"  (timeout="10000")
[09:02:23.874]      // while-condition  =>  TRUE
[09:02:23.874]      // while "1"  (timeout="10000")
[09:02:23.874]      // while-condition  =>  TRUE
[09:02:23.875]      // while "1"  (timeout="10000")
[09:02:23.875]      // while-condition  =>  TRUE
[09:02:23.875]      // while "1"  (timeout="10000")
[09:02:23.875]      // while-condition  =>  TRUE
[09:02:23.876]      // while "1"  (timeout="10000")
[09:02:23.876]      // while-condition  =>  TRUE
[09:02:23.876]      // while "1"  (timeout="10000")
[09:02:23.876]      // while-condition  =>  TRUE
[09:02:23.876]      // while "1"  (timeout="10000")
[09:02:23.877]      // while-condition  =>  TRUE
[09:02:23.877]      // while "1"  (timeout="10000")
[09:02:23.877]      // while-condition  =>  TRUE
[09:02:23.877]      // while "1"  (timeout="10000")
[09:02:23.877]      // while-condition  =>  TRUE
[09:02:23.878]      // while "1"  (timeout="10000")
[09:02:23.878]      // while-condition  =>  TRUE
[09:02:23.878]      // while "1"  (timeout="10000")
[09:02:23.878]      // while-condition  =>  TRUE
[09:02:23.878]      // while "1"  (timeout="10000")
[09:02:23.878]      // while-condition  =>  TRUE
[09:02:23.878]      // while "1"  (timeout="10000")
[09:02:23.878]      // while-condition  =>  TRUE
[09:02:23.878]      // while "1"  (timeout="10000")
[09:02:23.878]      // while-condition  =>  TRUE
[09:02:23.879]      // while "1"  (timeout="10000")
[09:02:23.879]      // while-condition  =>  TRUE
[09:02:23.879]      // while "1"  (timeout="10000")
[09:02:23.879]      // while-condition  =>  TRUE
[09:02:23.880]      // while "1"  (timeout="10000")
[09:02:23.880]      // while-condition  =>  TRUE
[09:02:23.880]      // while "1"  (timeout="10000")
[09:02:23.880]      // while-condition  =>  TRUE
[09:02:23.880]      // while "1"  (timeout="10000")
[09:02:23.881]      // while-condition  =>  TRUE
[09:02:23.882]      // while "1"  (timeout="10000")
[09:02:23.882]      // while  =>  TIMEOUT
[09:02:23.882]      // end while "1"
[09:02:23.882]    </control>
[09:02:23.882]    <block atomic="true" info="">
[09:02:23.886]  
[09:02:23.886]  ! W001 : No atomic sequence support in debug unit
[09:02:23.886]  
[09:02:23.888]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:02:23.890]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:02:23.890]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:02:23.892]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:02:23.892]    </block>
[09:02:23.892]    <block atomic="false" info="">
[09:02:23.893]      __errorcontrol = 0x00000001;
[09:02:23.893]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:02:23.893]      ReadDP(0x0);
[09:02:23.902]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:02:23.919]      __errorcontrol = 0x00000000;
[09:02:23.920]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:02:23.920]    </block>
[09:02:23.921]  </sequence>
[09:02:23.922]  
[09:02:23.923]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:02:23.923]  
[09:02:23.923]  <debugvars>
[09:02:23.923]    // Pre-defined
[09:02:23.924]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:02:23.925]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:02:23.925]    __dp=0x00000000
[09:02:23.926]    __ap=0x00000000
[09:02:23.927]    __traceout=0x00000000      (Trace Disabled)
[09:02:23.927]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:02:23.928]    __FlashAddr=0x00000000
[09:02:23.928]    __FlashLen=0x00000000
[09:02:23.928]    __FlashArg=0x00000000
[09:02:23.929]    __FlashOp=0x00000000
[09:02:23.929]    __Result=0x00000000
[09:02:23.929]  </debugvars>
[09:02:23.930]  
[09:02:23.930]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:02:23.930]  </sequence>
[09:02:23.931]  
[09:02:30.480]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:02:30.480]  
[09:02:30.481]  <debugvars>
[09:02:30.481]    // Pre-defined
[09:02:30.482]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:02:30.482]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:02:30.483]    __dp=0x00000000
[09:02:30.483]    __ap=0x00000000
[09:02:30.484]    __traceout=0x00000000      (Trace Disabled)
[09:02:30.484]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:02:30.484]    __FlashAddr=0x00000000
[09:02:30.485]    __FlashLen=0x00000000
[09:02:30.485]    __FlashArg=0x00000000
[09:02:30.485]    __FlashOp=0x00000000
[09:02:30.485]    __Result=0x00000000
[09:02:30.486]  </debugvars>
[09:02:30.486]  
[09:02:30.486]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:02:30.487]    <block atomic="false" info="">
[09:02:30.487]      __var nReset      = 0x80;
[09:02:30.487]        // -> [nReset <= 0x00000080]
[09:02:30.488]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:02:30.489]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:02:30.490]    </block>
[09:02:30.490]    <control if="" while="1" timeout="50000" info="">
[09:02:30.490]      // while "1"  (timeout="50000")
[09:02:30.491]      // while-condition  =>  TRUE
[09:02:30.491]      // while "1"  (timeout="50000")
[09:02:30.491]      // while-condition  =>  TRUE
[09:02:30.492]      // while "1"  (timeout="50000")
[09:02:30.492]      // while-condition  =>  TRUE
[09:02:30.492]      // while "1"  (timeout="50000")
[09:02:30.492]      // while-condition  =>  TRUE
[09:02:30.493]      // while "1"  (timeout="50000")
[09:02:30.493]      // while-condition  =>  TRUE
[09:02:30.493]      // while "1"  (timeout="50000")
[09:02:30.494]      // while-condition  =>  TRUE
[09:02:30.494]      // while "1"  (timeout="50000")
[09:02:30.494]      // while-condition  =>  TRUE
[09:02:30.494]      // while "1"  (timeout="50000")
[09:02:30.495]      // while-condition  =>  TRUE
[09:02:30.495]      // while "1"  (timeout="50000")
[09:02:30.495]      // while-condition  =>  TRUE
[09:02:30.496]      // while "1"  (timeout="50000")
[09:02:30.496]      // while-condition  =>  TRUE
[09:02:30.496]      // while "1"  (timeout="50000")
[09:02:30.497]      // while-condition  =>  TRUE
[09:02:30.497]      // while "1"  (timeout="50000")
[09:02:30.497]      // while-condition  =>  TRUE
[09:02:30.497]      // while "1"  (timeout="50000")
[09:02:30.498]      // while-condition  =>  TRUE
[09:02:30.498]      // while "1"  (timeout="50000")
[09:02:30.498]      // while-condition  =>  TRUE
[09:02:30.498]      // while "1"  (timeout="50000")
[09:02:30.499]      // while-condition  =>  TRUE
[09:02:30.499]      // while "1"  (timeout="50000")
[09:02:30.499]      // while-condition  =>  TRUE
[09:02:30.499]      // while "1"  (timeout="50000")
[09:02:30.500]      // while-condition  =>  TRUE
[09:02:30.500]      // while "1"  (timeout="50000")
[09:02:30.500]      // while-condition  =>  TRUE
[09:02:30.500]      // while "1"  (timeout="50000")
[09:02:30.500]      // while-condition  =>  TRUE
[09:02:30.501]      // while "1"  (timeout="50000")
[09:02:30.501]      // while-condition  =>  TRUE
[09:02:30.501]      // while "1"  (timeout="50000")
[09:02:30.501]      // while-condition  =>  TRUE
[09:02:30.501]      // while "1"  (timeout="50000")
[09:02:30.502]      // while-condition  =>  TRUE
[09:02:30.502]      // while "1"  (timeout="50000")
[09:02:30.502]      // while-condition  =>  TRUE
[09:02:30.502]      // while "1"  (timeout="50000")
[09:02:30.502]      // while-condition  =>  TRUE
[09:02:30.503]      // while "1"  (timeout="50000")
[09:02:30.503]      // while-condition  =>  TRUE
[09:02:30.503]      // while "1"  (timeout="50000")
[09:02:30.503]      // while-condition  =>  TRUE
[09:02:30.503]      // while "1"  (timeout="50000")
[09:02:30.503]      // while-condition  =>  TRUE
[09:02:30.504]      // while "1"  (timeout="50000")
[09:02:30.504]      // while-condition  =>  TRUE
[09:02:30.504]      // while "1"  (timeout="50000")
[09:02:30.504]      // while-condition  =>  TRUE
[09:02:30.505]      // while "1"  (timeout="50000")
[09:02:30.505]      // while-condition  =>  TRUE
[09:02:30.505]      // while "1"  (timeout="50000")
[09:02:30.505]      // while-condition  =>  TRUE
[09:02:30.505]      // while "1"  (timeout="50000")
[09:02:30.506]      // while-condition  =>  TRUE
[09:02:30.506]      // while "1"  (timeout="50000")
[09:02:30.506]      // while-condition  =>  TRUE
[09:02:30.506]      // while "1"  (timeout="50000")
[09:02:30.506]      // while-condition  =>  TRUE
[09:02:30.507]      // while "1"  (timeout="50000")
[09:02:30.507]      // while-condition  =>  TRUE
[09:02:30.507]      // while "1"  (timeout="50000")
[09:02:30.507]      // while-condition  =>  TRUE
[09:02:30.507]      // while "1"  (timeout="50000")
[09:02:30.508]      // while-condition  =>  TRUE
[09:02:30.508]      // while "1"  (timeout="50000")
[09:02:30.508]      // while-condition  =>  TRUE
[09:02:30.508]      // while "1"  (timeout="50000")
[09:02:30.508]      // while-condition  =>  TRUE
[09:02:30.509]      // while "1"  (timeout="50000")
[09:02:30.509]      // while-condition  =>  TRUE
[09:02:30.509]      // while "1"  (timeout="50000")
[09:02:30.509]      // while-condition  =>  TRUE
[09:02:30.509]      // while "1"  (timeout="50000")
[09:02:30.510]      // while-condition  =>  TRUE
[09:02:30.510]      // while "1"  (timeout="50000")
[09:02:30.510]      // while-condition  =>  TRUE
[09:02:30.510]      // while "1"  (timeout="50000")
[09:02:30.510]      // while-condition  =>  TRUE
[09:02:30.511]      // while "1"  (timeout="50000")
[09:02:30.511]      // while-condition  =>  TRUE
[09:02:30.511]      // while "1"  (timeout="50000")
[09:02:30.511]      // while-condition  =>  TRUE
[09:02:30.511]      // while "1"  (timeout="50000")
[09:02:30.512]      // while-condition  =>  TRUE
[09:02:30.512]      // while "1"  (timeout="50000")
[09:02:30.512]      // while-condition  =>  TRUE
[09:02:30.512]      // while "1"  (timeout="50000")
[09:02:30.513]      // while-condition  =>  TRUE
[09:02:30.513]      // while "1"  (timeout="50000")
[09:02:30.513]      // while-condition  =>  TRUE
[09:02:30.513]      // while "1"  (timeout="50000")
[09:02:30.514]      // while-condition  =>  TRUE
[09:02:30.514]      // while "1"  (timeout="50000")
[09:02:30.514]      // while-condition  =>  TRUE
[09:02:30.514]      // while "1"  (timeout="50000")
[09:02:30.514]      // while-condition  =>  TRUE
[09:02:30.515]      // while "1"  (timeout="50000")
[09:02:30.515]      // while-condition  =>  TRUE
[09:02:30.515]      // while "1"  (timeout="50000")
[09:02:30.515]      // while-condition  =>  TRUE
[09:02:30.516]      // while "1"  (timeout="50000")
[09:02:30.516]      // while-condition  =>  TRUE
[09:02:30.516]      // while "1"  (timeout="50000")
[09:02:30.516]      // while-condition  =>  TRUE
[09:02:30.516]      // while "1"  (timeout="50000")
[09:02:30.517]      // while-condition  =>  TRUE
[09:02:30.517]      // while "1"  (timeout="50000")
[09:02:30.517]      // while-condition  =>  TRUE
[09:02:30.517]      // while "1"  (timeout="50000")
[09:02:30.518]      // while-condition  =>  TRUE
[09:02:30.518]      // while "1"  (timeout="50000")
[09:02:30.518]      // while-condition  =>  TRUE
[09:02:30.518]      // while "1"  (timeout="50000")
[09:02:30.518]      // while-condition  =>  TRUE
[09:02:30.519]      // while "1"  (timeout="50000")
[09:02:30.519]      // while-condition  =>  TRUE
[09:02:30.519]      // while "1"  (timeout="50000")
[09:02:30.519]      // while-condition  =>  TRUE
[09:02:30.520]      // while "1"  (timeout="50000")
[09:02:30.520]      // while-condition  =>  TRUE
[09:02:30.520]      // while "1"  (timeout="50000")
[09:02:30.520]      // while-condition  =>  TRUE
[09:02:30.520]      // while "1"  (timeout="50000")
[09:02:30.521]      // while-condition  =>  TRUE
[09:02:30.521]      // while "1"  (timeout="50000")
[09:02:30.521]      // while-condition  =>  TRUE
[09:02:30.521]      // while "1"  (timeout="50000")
[09:02:30.521]      // while-condition  =>  TRUE
[09:02:30.522]      // while "1"  (timeout="50000")
[09:02:30.522]      // while-condition  =>  TRUE
[09:02:30.522]      // while "1"  (timeout="50000")
[09:02:30.522]      // while-condition  =>  TRUE
[09:02:30.523]      // while "1"  (timeout="50000")
[09:02:30.523]      // while-condition  =>  TRUE
[09:02:30.523]      // while "1"  (timeout="50000")
[09:02:30.523]      // while-condition  =>  TRUE
[09:02:30.523]      // while "1"  (timeout="50000")
[09:02:30.524]      // while-condition  =>  TRUE
[09:02:30.524]      // while "1"  (timeout="50000")
[09:02:30.524]      // while-condition  =>  TRUE
[09:02:30.524]      // while "1"  (timeout="50000")
[09:02:30.525]      // while-condition  =>  TRUE
[09:02:30.525]      // while "1"  (timeout="50000")
[09:02:30.525]      // while-condition  =>  TRUE
[09:02:30.525]      // while "1"  (timeout="50000")
[09:02:30.525]      // while-condition  =>  TRUE
[09:02:30.526]      // while "1"  (timeout="50000")
[09:02:30.526]      // while-condition  =>  TRUE
[09:02:30.526]      // while "1"  (timeout="50000")
[09:02:30.526]      // while-condition  =>  TRUE
[09:02:30.527]      // while "1"  (timeout="50000")
[09:02:30.527]      // while-condition  =>  TRUE
[09:02:30.527]      // while "1"  (timeout="50000")
[09:02:30.528]      // while-condition  =>  TRUE
[09:02:30.528]      // while "1"  (timeout="50000")
[09:02:30.528]      // while-condition  =>  TRUE
[09:02:30.528]      // while "1"  (timeout="50000")
[09:02:30.529]      // while-condition  =>  TRUE
[09:02:30.529]      // while "1"  (timeout="50000")
[09:02:30.529]      // while-condition  =>  TRUE
[09:02:30.529]      // while "1"  (timeout="50000")
[09:02:30.529]      // while-condition  =>  TRUE
[09:02:30.530]      // while "1"  (timeout="50000")
[09:02:30.530]      // while-condition  =>  TRUE
[09:02:30.530]      // while "1"  (timeout="50000")
[09:02:30.530]      // while-condition  =>  TRUE
[09:02:30.531]      // while "1"  (timeout="50000")
[09:02:30.531]      // while-condition  =>  TRUE
[09:02:30.531]      // while "1"  (timeout="50000")
[09:02:30.531]      // while-condition  =>  TRUE
[09:02:30.531]      // while "1"  (timeout="50000")
[09:02:30.532]      // while-condition  =>  TRUE
[09:02:30.532]      // while "1"  (timeout="50000")
[09:02:30.532]      // while-condition  =>  TRUE
[09:02:30.532]      // while "1"  (timeout="50000")
[09:02:30.533]      // while-condition  =>  TRUE
[09:02:30.533]      // while "1"  (timeout="50000")
[09:02:30.533]      // while-condition  =>  TRUE
[09:02:30.533]      // while "1"  (timeout="50000")
[09:02:30.534]      // while-condition  =>  TRUE
[09:02:30.534]      // while "1"  (timeout="50000")
[09:02:30.534]      // while-condition  =>  TRUE
[09:02:30.534]      // while "1"  (timeout="50000")
[09:02:30.535]      // while-condition  =>  TRUE
[09:02:30.535]      // while "1"  (timeout="50000")
[09:02:30.535]      // while-condition  =>  TRUE
[09:02:30.535]      // while "1"  (timeout="50000")
[09:02:30.535]      // while-condition  =>  TRUE
[09:02:30.536]      // while "1"  (timeout="50000")
[09:02:30.536]      // while-condition  =>  TRUE
[09:02:30.536]      // while "1"  (timeout="50000")
[09:02:30.537]      // while-condition  =>  TRUE
[09:02:30.537]      // while "1"  (timeout="50000")
[09:02:30.537]      // while-condition  =>  TRUE
[09:02:30.537]      // while "1"  (timeout="50000")
[09:02:30.538]      // while-condition  =>  TRUE
[09:02:30.538]      // while "1"  (timeout="50000")
[09:02:30.538]      // while  =>  TIMEOUT
[09:02:30.538]      // end while "1"
[09:02:30.538]    </control>
[09:02:30.539]    <block atomic="false" info="">
[09:02:30.539]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:02:30.541]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:02:30.541]    </block>
[09:02:30.542]    <control if="" while="1" timeout="10000" info="">
[09:02:30.542]      // while "1"  (timeout="10000")
[09:02:30.542]      // while-condition  =>  TRUE
[09:02:30.542]      // while "1"  (timeout="10000")
[09:02:30.543]      // while-condition  =>  TRUE
[09:02:30.543]      // while "1"  (timeout="10000")
[09:02:30.543]      // while-condition  =>  TRUE
[09:02:30.543]      // while "1"  (timeout="10000")
[09:02:30.544]      // while-condition  =>  TRUE
[09:02:30.544]      // while "1"  (timeout="10000")
[09:02:30.544]      // while-condition  =>  TRUE
[09:02:30.544]      // while "1"  (timeout="10000")
[09:02:30.545]      // while-condition  =>  TRUE
[09:02:30.545]      // while "1"  (timeout="10000")
[09:02:30.545]      // while-condition  =>  TRUE
[09:02:30.546]      // while "1"  (timeout="10000")
[09:02:30.546]      // while-condition  =>  TRUE
[09:02:30.546]      // while "1"  (timeout="10000")
[09:02:30.546]      // while-condition  =>  TRUE
[09:02:30.547]      // while "1"  (timeout="10000")
[09:02:30.547]      // while-condition  =>  TRUE
[09:02:30.547]      // while "1"  (timeout="10000")
[09:02:30.548]      // while-condition  =>  TRUE
[09:02:30.548]      // while "1"  (timeout="10000")
[09:02:30.548]      // while-condition  =>  TRUE
[09:02:30.549]      // while "1"  (timeout="10000")
[09:02:30.549]      // while-condition  =>  TRUE
[09:02:30.549]      // while "1"  (timeout="10000")
[09:02:30.549]      // while-condition  =>  TRUE
[09:02:30.550]      // while "1"  (timeout="10000")
[09:02:30.550]      // while-condition  =>  TRUE
[09:02:30.550]      // while "1"  (timeout="10000")
[09:02:30.550]      // while-condition  =>  TRUE
[09:02:30.550]      // while "1"  (timeout="10000")
[09:02:30.551]      // while-condition  =>  TRUE
[09:02:30.551]      // while "1"  (timeout="10000")
[09:02:30.551]      // while-condition  =>  TRUE
[09:02:30.551]      // while "1"  (timeout="10000")
[09:02:30.552]      // while-condition  =>  TRUE
[09:02:30.552]      // while "1"  (timeout="10000")
[09:02:30.552]      // while-condition  =>  TRUE
[09:02:30.552]      // while "1"  (timeout="10000")
[09:02:30.553]      // while-condition  =>  TRUE
[09:02:30.553]      // while "1"  (timeout="10000")
[09:02:30.553]      // while-condition  =>  TRUE
[09:02:30.553]      // while "1"  (timeout="10000")
[09:02:30.553]      // while-condition  =>  TRUE
[09:02:30.554]      // while "1"  (timeout="10000")
[09:02:30.554]      // while  =>  TIMEOUT
[09:02:30.554]      // end while "1"
[09:02:30.554]    </control>
[09:02:30.554]    <block atomic="true" info="">
[09:02:30.558]  
[09:02:30.558]  ! W001 : No atomic sequence support in debug unit
[09:02:30.558]  
[09:02:30.560]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:02:30.562]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:02:30.562]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:02:30.564]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:02:30.565]    </block>
[09:02:30.565]    <block atomic="false" info="">
[09:02:30.565]      __errorcontrol = 0x00000001;
[09:02:30.566]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:02:30.566]      ReadDP(0x0);
[09:02:30.574]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:02:30.575]      __errorcontrol = 0x00000000;
[09:02:30.575]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:02:30.575]    </block>
[09:02:30.576]  </sequence>
[09:02:30.576]  
[09:02:30.576]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:02:30.576]  
[09:02:30.577]  <debugvars>
[09:02:30.577]    // Pre-defined
[09:02:30.577]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:02:30.577]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:02:30.578]    __dp=0x00000000
[09:02:30.578]    __ap=0x00000000
[09:02:30.578]    __traceout=0x00000000      (Trace Disabled)
[09:02:30.578]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:02:30.579]    __FlashAddr=0x00000000
[09:02:30.579]    __FlashLen=0x00000000
[09:02:30.579]    __FlashArg=0x00000000
[09:02:30.579]    __FlashOp=0x00000000
[09:02:30.580]    __Result=0x00000000
[09:02:30.580]  </debugvars>
[09:02:30.580]  
[09:02:30.581]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:02:30.581]  </sequence>
[09:02:30.581]  
[09:03:08.988]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:03:08.988]  
[09:03:08.989]  <debugvars>
[09:03:08.990]    // Pre-defined
[09:03:08.990]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:03:08.991]    __connection=0x00020201    (Connection Type="Debug", Reset Type="System Reset", Pre-Connect HW Reset)
[09:03:08.992]    __dp=0x00000000
[09:03:08.993]    __ap=0x00000000
[09:03:08.993]    __traceout=0x00000000      (Trace Disabled)
[09:03:08.993]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:03:08.994]    __FlashAddr=0x00000000
[09:03:08.994]    __FlashLen=0x00000000
[09:03:08.995]    __FlashArg=0x00000000
[09:03:08.995]    __FlashOp=0x00000000
[09:03:08.997]    __Result=0x00000000
[09:03:08.998]  </debugvars>
[09:03:08.998]  
[09:03:08.999]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:03:08.999]    <block atomic="false" info="">
[09:03:09.000]      __var nReset      = 0x80;
[09:03:09.001]        // -> [nReset <= 0x00000080]
[09:03:09.001]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:03:09.003]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:03:09.004]    </block>
[09:03:09.005]    <control if="" while="1" timeout="50000" info="">
[09:03:09.005]      // while "1"  (timeout="50000")
[09:03:09.006]      // while-condition  =>  TRUE
[09:03:09.007]      // while "1"  (timeout="50000")
[09:03:09.007]      // while-condition  =>  TRUE
[09:03:09.007]      // while "1"  (timeout="50000")
[09:03:09.008]      // while-condition  =>  TRUE
[09:03:09.008]      // while "1"  (timeout="50000")
[09:03:09.009]      // while-condition  =>  TRUE
[09:03:09.009]      // while "1"  (timeout="50000")
[09:03:09.009]      // while-condition  =>  TRUE
[09:03:09.009]      // while "1"  (timeout="50000")
[09:03:09.010]      // while-condition  =>  TRUE
[09:03:09.010]      // while "1"  (timeout="50000")
[09:03:09.010]      // while-condition  =>  TRUE
[09:03:09.011]      // while "1"  (timeout="50000")
[09:03:09.011]      // while-condition  =>  TRUE
[09:03:09.011]      // while "1"  (timeout="50000")
[09:03:09.011]      // while-condition  =>  TRUE
[09:03:09.012]      // while "1"  (timeout="50000")
[09:03:09.012]      // while-condition  =>  TRUE
[09:03:09.012]      // while "1"  (timeout="50000")
[09:03:09.013]      // while-condition  =>  TRUE
[09:03:09.013]      // while "1"  (timeout="50000")
[09:03:09.013]      // while-condition  =>  TRUE
[09:03:09.013]      // while "1"  (timeout="50000")
[09:03:09.014]      // while-condition  =>  TRUE
[09:03:09.014]      // while "1"  (timeout="50000")
[09:03:09.014]      // while-condition  =>  TRUE
[09:03:09.014]      // while "1"  (timeout="50000")
[09:03:09.015]      // while-condition  =>  TRUE
[09:03:09.015]      // while "1"  (timeout="50000")
[09:03:09.015]      // while-condition  =>  TRUE
[09:03:09.015]      // while "1"  (timeout="50000")
[09:03:09.016]      // while-condition  =>  TRUE
[09:03:09.016]      // while "1"  (timeout="50000")
[09:03:09.016]      // while-condition  =>  TRUE
[09:03:09.016]      // while "1"  (timeout="50000")
[09:03:09.016]      // while-condition  =>  TRUE
[09:03:09.017]      // while "1"  (timeout="50000")
[09:03:09.017]      // while-condition  =>  TRUE
[09:03:09.017]      // while "1"  (timeout="50000")
[09:03:09.017]      // while-condition  =>  TRUE
[09:03:09.017]      // while "1"  (timeout="50000")
[09:03:09.018]      // while-condition  =>  TRUE
[09:03:09.018]      // while "1"  (timeout="50000")
[09:03:09.018]      // while-condition  =>  TRUE
[09:03:09.018]      // while "1"  (timeout="50000")
[09:03:09.018]      // while-condition  =>  TRUE
[09:03:09.019]      // while "1"  (timeout="50000")
[09:03:09.019]      // while-condition  =>  TRUE
[09:03:09.019]      // while "1"  (timeout="50000")
[09:03:09.019]      // while-condition  =>  TRUE
[09:03:09.019]      // while "1"  (timeout="50000")
[09:03:09.020]      // while-condition  =>  TRUE
[09:03:09.020]      // while "1"  (timeout="50000")
[09:03:09.020]      // while-condition  =>  TRUE
[09:03:09.020]      // while "1"  (timeout="50000")
[09:03:09.020]      // while-condition  =>  TRUE
[09:03:09.020]      // while "1"  (timeout="50000")
[09:03:09.021]      // while-condition  =>  TRUE
[09:03:09.021]      // while "1"  (timeout="50000")
[09:03:09.021]      // while-condition  =>  TRUE
[09:03:09.021]      // while "1"  (timeout="50000")
[09:03:09.021]      // while-condition  =>  TRUE
[09:03:09.022]      // while "1"  (timeout="50000")
[09:03:09.022]      // while-condition  =>  TRUE
[09:03:09.022]      // while "1"  (timeout="50000")
[09:03:09.022]      // while-condition  =>  TRUE
[09:03:09.022]      // while "1"  (timeout="50000")
[09:03:09.022]      // while-condition  =>  TRUE
[09:03:09.022]      // while "1"  (timeout="50000")
[09:03:09.023]      // while-condition  =>  TRUE
[09:03:09.023]      // while "1"  (timeout="50000")
[09:03:09.023]      // while-condition  =>  TRUE
[09:03:09.023]      // while "1"  (timeout="50000")
[09:03:09.023]      // while-condition  =>  TRUE
[09:03:09.024]      // while "1"  (timeout="50000")
[09:03:09.024]      // while-condition  =>  TRUE
[09:03:09.024]      // while "1"  (timeout="50000")
[09:03:09.025]      // while-condition  =>  TRUE
[09:03:09.025]      // while "1"  (timeout="50000")
[09:03:09.025]      // while-condition  =>  TRUE
[09:03:09.025]      // while "1"  (timeout="50000")
[09:03:09.025]      // while-condition  =>  TRUE
[09:03:09.026]      // while "1"  (timeout="50000")
[09:03:09.026]      // while-condition  =>  TRUE
[09:03:09.026]      // while "1"  (timeout="50000")
[09:03:09.026]      // while-condition  =>  TRUE
[09:03:09.026]      // while "1"  (timeout="50000")
[09:03:09.027]      // while-condition  =>  TRUE
[09:03:09.027]      // while "1"  (timeout="50000")
[09:03:09.027]      // while-condition  =>  TRUE
[09:03:09.027]      // while "1"  (timeout="50000")
[09:03:09.027]      // while-condition  =>  TRUE
[09:03:09.028]      // while "1"  (timeout="50000")
[09:03:09.028]      // while-condition  =>  TRUE
[09:03:09.028]      // while "1"  (timeout="50000")
[09:03:09.028]      // while-condition  =>  TRUE
[09:03:09.028]      // while "1"  (timeout="50000")
[09:03:09.028]      // while-condition  =>  TRUE
[09:03:09.029]      // while "1"  (timeout="50000")
[09:03:09.029]      // while-condition  =>  TRUE
[09:03:09.029]      // while "1"  (timeout="50000")
[09:03:09.029]      // while-condition  =>  TRUE
[09:03:09.029]      // while "1"  (timeout="50000")
[09:03:09.030]      // while-condition  =>  TRUE
[09:03:09.030]      // while "1"  (timeout="50000")
[09:03:09.030]      // while-condition  =>  TRUE
[09:03:09.030]      // while "1"  (timeout="50000")
[09:03:09.030]      // while-condition  =>  TRUE
[09:03:09.031]      // while "1"  (timeout="50000")
[09:03:09.031]      // while-condition  =>  TRUE
[09:03:09.031]      // while "1"  (timeout="50000")
[09:03:09.031]      // while-condition  =>  TRUE
[09:03:09.031]      // while "1"  (timeout="50000")
[09:03:09.032]      // while-condition  =>  TRUE
[09:03:09.032]      // while "1"  (timeout="50000")
[09:03:09.032]      // while-condition  =>  TRUE
[09:03:09.032]      // while "1"  (timeout="50000")
[09:03:09.032]      // while-condition  =>  TRUE
[09:03:09.033]      // while "1"  (timeout="50000")
[09:03:09.033]      // while-condition  =>  TRUE
[09:03:09.033]      // while "1"  (timeout="50000")
[09:03:09.033]      // while-condition  =>  TRUE
[09:03:09.033]      // while "1"  (timeout="50000")
[09:03:09.033]      // while-condition  =>  TRUE
[09:03:09.033]      // while "1"  (timeout="50000")
[09:03:09.034]      // while-condition  =>  TRUE
[09:03:09.034]      // while "1"  (timeout="50000")
[09:03:09.034]      // while-condition  =>  TRUE
[09:03:09.034]      // while "1"  (timeout="50000")
[09:03:09.034]      // while-condition  =>  TRUE
[09:03:09.035]      // while "1"  (timeout="50000")
[09:03:09.035]      // while-condition  =>  TRUE
[09:03:09.035]      // while "1"  (timeout="50000")
[09:03:09.035]      // while-condition  =>  TRUE
[09:03:09.035]      // while "1"  (timeout="50000")
[09:03:09.036]      // while-condition  =>  TRUE
[09:03:09.036]      // while "1"  (timeout="50000")
[09:03:09.036]      // while-condition  =>  TRUE
[09:03:09.037]      // while "1"  (timeout="50000")
[09:03:09.037]      // while-condition  =>  TRUE
[09:03:09.037]      // while "1"  (timeout="50000")
[09:03:09.037]      // while-condition  =>  TRUE
[09:03:09.037]      // while "1"  (timeout="50000")
[09:03:09.037]      // while-condition  =>  TRUE
[09:03:09.037]      // while "1"  (timeout="50000")
[09:03:09.037]      // while-condition  =>  TRUE
[09:03:09.038]      // while "1"  (timeout="50000")
[09:03:09.038]      // while-condition  =>  TRUE
[09:03:09.038]      // while "1"  (timeout="50000")
[09:03:09.038]      // while-condition  =>  TRUE
[09:03:09.038]      // while "1"  (timeout="50000")
[09:03:09.039]      // while-condition  =>  TRUE
[09:03:09.039]      // while "1"  (timeout="50000")
[09:03:09.039]      // while-condition  =>  TRUE
[09:03:09.039]      // while "1"  (timeout="50000")
[09:03:09.040]      // while-condition  =>  TRUE
[09:03:09.040]      // while "1"  (timeout="50000")
[09:03:09.040]      // while-condition  =>  TRUE
[09:03:09.041]      // while "1"  (timeout="50000")
[09:03:09.041]      // while-condition  =>  TRUE
[09:03:09.041]      // while "1"  (timeout="50000")
[09:03:09.041]      // while-condition  =>  TRUE
[09:03:09.041]      // while "1"  (timeout="50000")
[09:03:09.042]      // while-condition  =>  TRUE
[09:03:09.042]      // while "1"  (timeout="50000")
[09:03:09.042]      // while-condition  =>  TRUE
[09:03:09.042]      // while "1"  (timeout="50000")
[09:03:09.042]      // while-condition  =>  TRUE
[09:03:09.043]      // while "1"  (timeout="50000")
[09:03:09.043]      // while-condition  =>  TRUE
[09:03:09.043]      // while "1"  (timeout="50000")
[09:03:09.043]      // while-condition  =>  TRUE
[09:03:09.043]      // while "1"  (timeout="50000")
[09:03:09.043]      // while-condition  =>  TRUE
[09:03:09.044]      // while "1"  (timeout="50000")
[09:03:09.044]      // while-condition  =>  TRUE
[09:03:09.044]      // while "1"  (timeout="50000")
[09:03:09.044]      // while-condition  =>  TRUE
[09:03:09.044]      // while "1"  (timeout="50000")
[09:03:09.044]      // while-condition  =>  TRUE
[09:03:09.045]      // while "1"  (timeout="50000")
[09:03:09.045]      // while-condition  =>  TRUE
[09:03:09.045]      // while "1"  (timeout="50000")
[09:03:09.046]      // while-condition  =>  TRUE
[09:03:09.046]      // while "1"  (timeout="50000")
[09:03:09.046]      // while-condition  =>  TRUE
[09:03:09.046]      // while "1"  (timeout="50000")
[09:03:09.046]      // while-condition  =>  TRUE
[09:03:09.046]      // while "1"  (timeout="50000")
[09:03:09.047]      // while-condition  =>  TRUE
[09:03:09.047]      // while "1"  (timeout="50000")
[09:03:09.047]      // while-condition  =>  TRUE
[09:03:09.047]      // while "1"  (timeout="50000")
[09:03:09.047]      // while-condition  =>  TRUE
[09:03:09.048]      // while "1"  (timeout="50000")
[09:03:09.048]      // while-condition  =>  TRUE
[09:03:09.048]      // while "1"  (timeout="50000")
[09:03:09.048]      // while-condition  =>  TRUE
[09:03:09.048]      // while "1"  (timeout="50000")
[09:03:09.049]      // while-condition  =>  TRUE
[09:03:09.049]      // while "1"  (timeout="50000")
[09:03:09.049]      // while-condition  =>  TRUE
[09:03:09.049]      // while "1"  (timeout="50000")
[09:03:09.049]      // while-condition  =>  TRUE
[09:03:09.050]      // while "1"  (timeout="50000")
[09:03:09.050]      // while-condition  =>  TRUE
[09:03:09.050]      // while "1"  (timeout="50000")
[09:03:09.050]      // while-condition  =>  TRUE
[09:03:09.050]      // while "1"  (timeout="50000")
[09:03:09.051]      // while-condition  =>  TRUE
[09:03:09.051]      // while "1"  (timeout="50000")
[09:03:09.051]      // while-condition  =>  TRUE
[09:03:09.051]      // while "1"  (timeout="50000")
[09:03:09.051]      // while-condition  =>  TRUE
[09:03:09.052]      // while "1"  (timeout="50000")
[09:03:09.052]      // while-condition  =>  TRUE
[09:03:09.052]      // while "1"  (timeout="50000")
[09:03:09.052]      // while-condition  =>  TRUE
[09:03:09.052]      // while "1"  (timeout="50000")
[09:03:09.053]      // while-condition  =>  TRUE
[09:03:09.053]      // while "1"  (timeout="50000")
[09:03:09.053]      // while-condition  =>  TRUE
[09:03:09.053]      // while "1"  (timeout="50000")
[09:03:09.053]      // while  =>  TIMEOUT
[09:03:09.053]      // end while "1"
[09:03:09.053]    </control>
[09:03:09.053]    <block atomic="false" info="">
[09:03:09.054]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:03:09.056]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:03:09.057]    </block>
[09:03:09.057]    <control if="" while="1" timeout="10000" info="">
[09:03:09.057]      // while "1"  (timeout="10000")
[09:03:09.057]      // while-condition  =>  TRUE
[09:03:09.057]      // while "1"  (timeout="10000")
[09:03:09.058]      // while-condition  =>  TRUE
[09:03:09.058]      // while "1"  (timeout="10000")
[09:03:09.058]      // while-condition  =>  TRUE
[09:03:09.058]      // while "1"  (timeout="10000")
[09:03:09.058]      // while-condition  =>  TRUE
[09:03:09.059]      // while "1"  (timeout="10000")
[09:03:09.059]      // while-condition  =>  TRUE
[09:03:09.059]      // while "1"  (timeout="10000")
[09:03:09.059]      // while-condition  =>  TRUE
[09:03:09.059]      // while "1"  (timeout="10000")
[09:03:09.059]      // while-condition  =>  TRUE
[09:03:09.059]      // while "1"  (timeout="10000")
[09:03:09.060]      // while-condition  =>  TRUE
[09:03:09.060]      // while "1"  (timeout="10000")
[09:03:09.061]      // while-condition  =>  TRUE
[09:03:09.061]      // while "1"  (timeout="10000")
[09:03:09.061]      // while-condition  =>  TRUE
[09:03:09.062]      // while "1"  (timeout="10000")
[09:03:09.062]      // while-condition  =>  TRUE
[09:03:09.062]      // while "1"  (timeout="10000")
[09:03:09.062]      // while-condition  =>  TRUE
[09:03:09.062]      // while "1"  (timeout="10000")
[09:03:09.063]      // while-condition  =>  TRUE
[09:03:09.063]      // while "1"  (timeout="10000")
[09:03:09.063]      // while-condition  =>  TRUE
[09:03:09.063]      // while "1"  (timeout="10000")
[09:03:09.063]      // while-condition  =>  TRUE
[09:03:09.064]      // while "1"  (timeout="10000")
[09:03:09.064]      // while-condition  =>  TRUE
[09:03:09.064]      // while "1"  (timeout="10000")
[09:03:09.064]      // while-condition  =>  TRUE
[09:03:09.064]      // while "1"  (timeout="10000")
[09:03:09.064]      // while-condition  =>  TRUE
[09:03:09.065]      // while "1"  (timeout="10000")
[09:03:09.065]      // while-condition  =>  TRUE
[09:03:09.065]      // while "1"  (timeout="10000")
[09:03:09.065]      // while-condition  =>  TRUE
[09:03:09.065]      // while "1"  (timeout="10000")
[09:03:09.066]      // while-condition  =>  TRUE
[09:03:09.066]      // while "1"  (timeout="10000")
[09:03:09.066]      // while-condition  =>  TRUE
[09:03:09.066]      // while "1"  (timeout="10000")
[09:03:09.066]      // while-condition  =>  TRUE
[09:03:09.067]      // while "1"  (timeout="10000")
[09:03:09.067]      // while-condition  =>  TRUE
[09:03:09.067]      // while "1"  (timeout="10000")
[09:03:09.067]      // while-condition  =>  TRUE
[09:03:09.068]      // while "1"  (timeout="10000")
[09:03:09.068]      // while-condition  =>  TRUE
[09:03:09.068]      // while "1"  (timeout="10000")
[09:03:09.068]      // while-condition  =>  TRUE
[09:03:09.068]      // while "1"  (timeout="10000")
[09:03:09.068]      // while-condition  =>  TRUE
[09:03:09.069]      // while "1"  (timeout="10000")
[09:03:09.069]      // while  =>  TIMEOUT
[09:03:09.069]      // end while "1"
[09:03:09.069]    </control>
[09:03:09.069]    <block atomic="true" info="">
[09:03:09.073]  
[09:03:09.073]  ! W001 : No atomic sequence support in debug unit
[09:03:09.073]  
[09:03:09.075]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:03:09.078]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:03:09.078]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:03:09.081]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:03:09.081]    </block>
[09:03:09.083]    <block atomic="false" info="">
[09:03:09.083]      __errorcontrol = 0x00000001;
[09:03:09.084]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:03:09.084]      ReadDP(0x0);
[09:03:09.094]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:03:09.109]      __errorcontrol = 0x00000000;
[09:03:09.109]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:03:09.110]    </block>
[09:03:09.110]  </sequence>
[09:03:09.111]  
[09:03:09.111]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:03:09.111]  
[09:03:09.112]  <debugvars>
[09:03:09.113]    // Pre-defined
[09:03:09.113]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:03:09.114]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[09:03:09.114]    __dp=0x00000000
[09:03:09.115]    __ap=0x00000000
[09:03:09.115]    __traceout=0x00000000      (Trace Disabled)
[09:03:09.116]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:03:09.116]    __FlashAddr=0x00000000
[09:03:09.116]    __FlashLen=0x00000000
[09:03:09.117]    __FlashArg=0x00000000
[09:03:09.117]    __FlashOp=0x00000000
[09:03:09.117]    __Result=0x00000000
[09:03:09.118]  </debugvars>
[09:03:09.119]  
[09:03:09.119]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:03:09.119]  </sequence>
[09:03:09.120]  
[09:03:13.099]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:03:13.099]  
[09:03:13.100]  <debugvars>
[09:03:13.100]    // Pre-defined
[09:03:13.101]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:03:13.102]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:03:13.102]    __dp=0x00000000
[09:03:13.103]    __ap=0x00000000
[09:03:13.104]    __traceout=0x00000000      (Trace Disabled)
[09:03:13.104]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:03:13.105]    __FlashAddr=0x00000000
[09:03:13.106]    __FlashLen=0x00000000
[09:03:13.106]    __FlashArg=0x00000000
[09:03:13.107]    __FlashOp=0x00000000
[09:03:13.107]    __Result=0x00000000
[09:03:13.108]  </debugvars>
[09:03:13.108]  
[09:03:13.108]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:03:13.109]    <block atomic="false" info="">
[09:03:13.109]      __var nReset      = 0x80;
[09:03:13.109]        // -> [nReset <= 0x00000080]
[09:03:13.109]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:03:13.111]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:03:13.112]    </block>
[09:03:13.112]    <control if="" while="1" timeout="50000" info="">
[09:03:13.112]      // while "1"  (timeout="50000")
[09:03:13.113]      // while-condition  =>  TRUE
[09:03:13.113]      // while "1"  (timeout="50000")
[09:03:13.113]      // while-condition  =>  TRUE
[09:03:13.114]      // while "1"  (timeout="50000")
[09:03:13.114]      // while-condition  =>  TRUE
[09:03:13.114]      // while "1"  (timeout="50000")
[09:03:13.114]      // while-condition  =>  TRUE
[09:03:13.114]      // while "1"  (timeout="50000")
[09:03:13.115]      // while-condition  =>  TRUE
[09:03:13.115]      // while "1"  (timeout="50000")
[09:03:13.115]      // while-condition  =>  TRUE
[09:03:13.115]      // while "1"  (timeout="50000")
[09:03:13.116]      // while-condition  =>  TRUE
[09:03:13.116]      // while "1"  (timeout="50000")
[09:03:13.116]      // while-condition  =>  TRUE
[09:03:13.117]      // while "1"  (timeout="50000")
[09:03:13.117]      // while-condition  =>  TRUE
[09:03:13.118]      // while "1"  (timeout="50000")
[09:03:13.118]      // while-condition  =>  TRUE
[09:03:13.119]      // while "1"  (timeout="50000")
[09:03:13.119]      // while-condition  =>  TRUE
[09:03:13.119]      // while "1"  (timeout="50000")
[09:03:13.120]      // while-condition  =>  TRUE
[09:03:13.121]      // while "1"  (timeout="50000")
[09:03:13.121]      // while-condition  =>  TRUE
[09:03:13.122]      // while "1"  (timeout="50000")
[09:03:13.122]      // while-condition  =>  TRUE
[09:03:13.122]      // while "1"  (timeout="50000")
[09:03:13.123]      // while-condition  =>  TRUE
[09:03:13.123]      // while "1"  (timeout="50000")
[09:03:13.123]      // while-condition  =>  TRUE
[09:03:13.123]      // while "1"  (timeout="50000")
[09:03:13.124]      // while-condition  =>  TRUE
[09:03:13.124]      // while "1"  (timeout="50000")
[09:03:13.124]      // while-condition  =>  TRUE
[09:03:13.124]      // while "1"  (timeout="50000")
[09:03:13.125]      // while-condition  =>  TRUE
[09:03:13.125]      // while "1"  (timeout="50000")
[09:03:13.125]      // while-condition  =>  TRUE
[09:03:13.125]      // while "1"  (timeout="50000")
[09:03:13.126]      // while-condition  =>  TRUE
[09:03:13.126]      // while "1"  (timeout="50000")
[09:03:13.126]      // while-condition  =>  TRUE
[09:03:13.126]      // while "1"  (timeout="50000")
[09:03:13.126]      // while-condition  =>  TRUE
[09:03:13.126]      // while "1"  (timeout="50000")
[09:03:13.127]      // while-condition  =>  TRUE
[09:03:13.127]      // while "1"  (timeout="50000")
[09:03:13.127]      // while-condition  =>  TRUE
[09:03:13.127]      // while "1"  (timeout="50000")
[09:03:13.127]      // while-condition  =>  TRUE
[09:03:13.128]      // while "1"  (timeout="50000")
[09:03:13.128]      // while-condition  =>  TRUE
[09:03:13.128]      // while "1"  (timeout="50000")
[09:03:13.129]      // while-condition  =>  TRUE
[09:03:13.129]      // while "1"  (timeout="50000")
[09:03:13.129]      // while-condition  =>  TRUE
[09:03:13.129]      // while "1"  (timeout="50000")
[09:03:13.129]      // while-condition  =>  TRUE
[09:03:13.129]      // while "1"  (timeout="50000")
[09:03:13.129]      // while-condition  =>  TRUE
[09:03:13.129]      // while "1"  (timeout="50000")
[09:03:13.130]      // while-condition  =>  TRUE
[09:03:13.130]      // while "1"  (timeout="50000")
[09:03:13.130]      // while-condition  =>  TRUE
[09:03:13.130]      // while "1"  (timeout="50000")
[09:03:13.130]      // while-condition  =>  TRUE
[09:03:13.130]      // while "1"  (timeout="50000")
[09:03:13.131]      // while-condition  =>  TRUE
[09:03:13.131]      // while "1"  (timeout="50000")
[09:03:13.131]      // while-condition  =>  TRUE
[09:03:13.131]      // while "1"  (timeout="50000")
[09:03:13.131]      // while-condition  =>  TRUE
[09:03:13.132]      // while "1"  (timeout="50000")
[09:03:13.132]      // while-condition  =>  TRUE
[09:03:13.132]      // while "1"  (timeout="50000")
[09:03:13.132]      // while-condition  =>  TRUE
[09:03:13.132]      // while "1"  (timeout="50000")
[09:03:13.133]      // while-condition  =>  TRUE
[09:03:13.133]      // while "1"  (timeout="50000")
[09:03:13.133]      // while-condition  =>  TRUE
[09:03:13.133]      // while "1"  (timeout="50000")
[09:03:13.133]      // while-condition  =>  TRUE
[09:03:13.134]      // while "1"  (timeout="50000")
[09:03:13.134]      // while-condition  =>  TRUE
[09:03:13.134]      // while "1"  (timeout="50000")
[09:03:13.134]      // while-condition  =>  TRUE
[09:03:13.134]      // while "1"  (timeout="50000")
[09:03:13.135]      // while-condition  =>  TRUE
[09:03:13.135]      // while "1"  (timeout="50000")
[09:03:13.136]      // while-condition  =>  TRUE
[09:03:13.136]      // while "1"  (timeout="50000")
[09:03:13.136]      // while-condition  =>  TRUE
[09:03:13.136]      // while "1"  (timeout="50000")
[09:03:13.136]      // while-condition  =>  TRUE
[09:03:13.137]      // while "1"  (timeout="50000")
[09:03:13.137]      // while-condition  =>  TRUE
[09:03:13.137]      // while "1"  (timeout="50000")
[09:03:13.137]      // while-condition  =>  TRUE
[09:03:13.137]      // while "1"  (timeout="50000")
[09:03:13.137]      // while-condition  =>  TRUE
[09:03:13.137]      // while "1"  (timeout="50000")
[09:03:13.137]      // while-condition  =>  TRUE
[09:03:13.137]      // while "1"  (timeout="50000")
[09:03:13.137]      // while-condition  =>  TRUE
[09:03:13.139]      // while "1"  (timeout="50000")
[09:03:13.139]      // while-condition  =>  TRUE
[09:03:13.139]      // while "1"  (timeout="50000")
[09:03:13.139]      // while-condition  =>  TRUE
[09:03:13.139]      // while "1"  (timeout="50000")
[09:03:13.139]      // while-condition  =>  TRUE
[09:03:13.139]      // while "1"  (timeout="50000")
[09:03:13.140]      // while-condition  =>  TRUE
[09:03:13.140]      // while "1"  (timeout="50000")
[09:03:13.140]      // while-condition  =>  TRUE
[09:03:13.141]      // while "1"  (timeout="50000")
[09:03:13.141]      // while-condition  =>  TRUE
[09:03:13.141]      // while "1"  (timeout="50000")
[09:03:13.141]      // while-condition  =>  TRUE
[09:03:13.141]      // while "1"  (timeout="50000")
[09:03:13.142]      // while-condition  =>  TRUE
[09:03:13.142]      // while "1"  (timeout="50000")
[09:03:13.142]      // while-condition  =>  TRUE
[09:03:13.142]      // while "1"  (timeout="50000")
[09:03:13.142]      // while-condition  =>  TRUE
[09:03:13.143]      // while "1"  (timeout="50000")
[09:03:13.143]      // while-condition  =>  TRUE
[09:03:13.143]      // while "1"  (timeout="50000")
[09:03:13.143]      // while-condition  =>  TRUE
[09:03:13.143]      // while "1"  (timeout="50000")
[09:03:13.144]      // while-condition  =>  TRUE
[09:03:13.144]      // while "1"  (timeout="50000")
[09:03:13.144]      // while-condition  =>  TRUE
[09:03:13.144]      // while "1"  (timeout="50000")
[09:03:13.144]      // while-condition  =>  TRUE
[09:03:13.144]      // while "1"  (timeout="50000")
[09:03:13.145]      // while-condition  =>  TRUE
[09:03:13.145]      // while "1"  (timeout="50000")
[09:03:13.145]      // while-condition  =>  TRUE
[09:03:13.145]      // while "1"  (timeout="50000")
[09:03:13.145]      // while-condition  =>  TRUE
[09:03:13.146]      // while "1"  (timeout="50000")
[09:03:13.146]      // while-condition  =>  TRUE
[09:03:13.146]      // while "1"  (timeout="50000")
[09:03:13.146]      // while-condition  =>  TRUE
[09:03:13.146]      // while "1"  (timeout="50000")
[09:03:13.146]      // while-condition  =>  TRUE
[09:03:13.146]      // while "1"  (timeout="50000")
[09:03:13.146]      // while-condition  =>  TRUE
[09:03:13.146]      // while "1"  (timeout="50000")
[09:03:13.147]      // while-condition  =>  TRUE
[09:03:13.148]      // while "1"  (timeout="50000")
[09:03:13.148]      // while-condition  =>  TRUE
[09:03:13.148]      // while "1"  (timeout="50000")
[09:03:13.148]      // while-condition  =>  TRUE
[09:03:13.148]      // while "1"  (timeout="50000")
[09:03:13.149]      // while-condition  =>  TRUE
[09:03:13.149]      // while "1"  (timeout="50000")
[09:03:13.149]      // while-condition  =>  TRUE
[09:03:13.149]      // while "1"  (timeout="50000")
[09:03:13.149]      // while-condition  =>  TRUE
[09:03:13.149]      // while "1"  (timeout="50000")
[09:03:13.149]      // while-condition  =>  TRUE
[09:03:13.149]      // while "1"  (timeout="50000")
[09:03:13.150]      // while-condition  =>  TRUE
[09:03:13.150]      // while "1"  (timeout="50000")
[09:03:13.150]      // while-condition  =>  TRUE
[09:03:13.150]      // while "1"  (timeout="50000")
[09:03:13.150]      // while-condition  =>  TRUE
[09:03:13.151]      // while "1"  (timeout="50000")
[09:03:13.151]      // while-condition  =>  TRUE
[09:03:13.151]      // while "1"  (timeout="50000")
[09:03:13.152]      // while-condition  =>  TRUE
[09:03:13.152]      // while "1"  (timeout="50000")
[09:03:13.152]      // while-condition  =>  TRUE
[09:03:13.152]      // while "1"  (timeout="50000")
[09:03:13.152]      // while-condition  =>  TRUE
[09:03:13.153]      // while "1"  (timeout="50000")
[09:03:13.153]      // while-condition  =>  TRUE
[09:03:13.153]      // while "1"  (timeout="50000")
[09:03:13.153]      // while-condition  =>  TRUE
[09:03:13.153]      // while "1"  (timeout="50000")
[09:03:13.154]      // while-condition  =>  TRUE
[09:03:13.154]      // while "1"  (timeout="50000")
[09:03:13.154]      // while-condition  =>  TRUE
[09:03:13.154]      // while "1"  (timeout="50000")
[09:03:13.154]      // while-condition  =>  TRUE
[09:03:13.154]      // while "1"  (timeout="50000")
[09:03:13.155]      // while-condition  =>  TRUE
[09:03:13.155]      // while "1"  (timeout="50000")
[09:03:13.155]      // while-condition  =>  TRUE
[09:03:13.155]      // while "1"  (timeout="50000")
[09:03:13.155]      // while-condition  =>  TRUE
[09:03:13.156]      // while "1"  (timeout="50000")
[09:03:13.156]      // while-condition  =>  TRUE
[09:03:13.156]      // while "1"  (timeout="50000")
[09:03:13.156]      // while-condition  =>  TRUE
[09:03:13.156]      // while "1"  (timeout="50000")
[09:03:13.157]      // while-condition  =>  TRUE
[09:03:13.157]      // while "1"  (timeout="50000")
[09:03:13.157]      // while-condition  =>  TRUE
[09:03:13.157]      // while "1"  (timeout="50000")
[09:03:13.157]      // while-condition  =>  TRUE
[09:03:13.158]      // while "1"  (timeout="50000")
[09:03:13.158]      // while-condition  =>  TRUE
[09:03:13.158]      // while "1"  (timeout="50000")
[09:03:13.158]      // while-condition  =>  TRUE
[09:03:13.158]      // while "1"  (timeout="50000")
[09:03:13.159]      // while-condition  =>  TRUE
[09:03:13.159]      // while "1"  (timeout="50000")
[09:03:13.159]      // while-condition  =>  TRUE
[09:03:13.159]      // while "1"  (timeout="50000")
[09:03:13.159]      // while-condition  =>  TRUE
[09:03:13.160]      // while "1"  (timeout="50000")
[09:03:13.160]      // while-condition  =>  TRUE
[09:03:13.160]      // while "1"  (timeout="50000")
[09:03:13.160]      // while-condition  =>  TRUE
[09:03:13.160]      // while "1"  (timeout="50000")
[09:03:13.160]      // while-condition  =>  TRUE
[09:03:13.160]      // while "1"  (timeout="50000")
[09:03:13.160]      // while-condition  =>  TRUE
[09:03:13.161]      // while "1"  (timeout="50000")
[09:03:13.161]      // while-condition  =>  TRUE
[09:03:13.161]      // while "1"  (timeout="50000")
[09:03:13.161]      // while-condition  =>  TRUE
[09:03:13.161]      // while "1"  (timeout="50000")
[09:03:13.162]      // while-condition  =>  TRUE
[09:03:13.162]      // while "1"  (timeout="50000")
[09:03:13.162]      // while-condition  =>  TRUE
[09:03:13.162]      // while "1"  (timeout="50000")
[09:03:13.162]      // while-condition  =>  TRUE
[09:03:13.163]      // while "1"  (timeout="50000")
[09:03:13.163]      // while  =>  TIMEOUT
[09:03:13.163]      // end while "1"
[09:03:13.164]    </control>
[09:03:13.164]    <block atomic="false" info="">
[09:03:13.164]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:03:13.166]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:03:13.167]    </block>
[09:03:13.167]    <control if="" while="1" timeout="10000" info="">
[09:03:13.167]      // while "1"  (timeout="10000")
[09:03:13.167]      // while-condition  =>  TRUE
[09:03:13.167]      // while "1"  (timeout="10000")
[09:03:13.168]      // while-condition  =>  TRUE
[09:03:13.168]      // while "1"  (timeout="10000")
[09:03:13.168]      // while-condition  =>  TRUE
[09:03:13.168]      // while "1"  (timeout="10000")
[09:03:13.169]      // while-condition  =>  TRUE
[09:03:13.169]      // while "1"  (timeout="10000")
[09:03:13.169]      // while-condition  =>  TRUE
[09:03:13.170]      // while "1"  (timeout="10000")
[09:03:13.170]      // while-condition  =>  TRUE
[09:03:13.170]      // while "1"  (timeout="10000")
[09:03:13.171]      // while-condition  =>  TRUE
[09:03:13.171]      // while "1"  (timeout="10000")
[09:03:13.171]      // while-condition  =>  TRUE
[09:03:13.171]      // while "1"  (timeout="10000")
[09:03:13.172]      // while-condition  =>  TRUE
[09:03:13.173]      // while "1"  (timeout="10000")
[09:03:13.173]      // while-condition  =>  TRUE
[09:03:13.173]      // while "1"  (timeout="10000")
[09:03:13.174]      // while-condition  =>  TRUE
[09:03:13.174]      // while "1"  (timeout="10000")
[09:03:13.174]      // while-condition  =>  TRUE
[09:03:13.175]      // while "1"  (timeout="10000")
[09:03:13.175]      // while-condition  =>  TRUE
[09:03:13.175]      // while "1"  (timeout="10000")
[09:03:13.176]      // while-condition  =>  TRUE
[09:03:13.176]      // while "1"  (timeout="10000")
[09:03:13.176]      // while-condition  =>  TRUE
[09:03:13.177]      // while "1"  (timeout="10000")
[09:03:13.177]      // while-condition  =>  TRUE
[09:03:13.177]      // while "1"  (timeout="10000")
[09:03:13.178]      // while-condition  =>  TRUE
[09:03:13.178]      // while "1"  (timeout="10000")
[09:03:13.179]      // while-condition  =>  TRUE
[09:03:13.179]      // while "1"  (timeout="10000")
[09:03:13.179]      // while  =>  TIMEOUT
[09:03:13.180]      // end while "1"
[09:03:13.180]    </control>
[09:03:13.180]    <block atomic="true" info="">
[09:03:13.183]  
[09:03:13.183]  ! W001 : No atomic sequence support in debug unit
[09:03:13.183]  
[09:03:13.185]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:03:13.188]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:03:13.189]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:03:13.192]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:03:13.193]    </block>
[09:03:13.194]    <block atomic="false" info="">
[09:03:13.195]      __errorcontrol = 0x00000001;
[09:03:13.195]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:03:13.196]      ReadDP(0x0);
[09:03:13.205]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:03:13.226]      __errorcontrol = 0x00000000;
[09:03:13.226]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:03:13.227]    </block>
[09:03:13.228]  </sequence>
[09:03:13.228]  
[09:03:13.229]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:03:13.229]  
[09:03:13.229]  <debugvars>
[09:03:13.231]    // Pre-defined
[09:03:13.231]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:03:13.232]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:03:13.233]    __dp=0x00000000
[09:03:13.233]    __ap=0x00000000
[09:03:13.234]    __traceout=0x00000000      (Trace Disabled)
[09:03:13.235]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:03:13.236]    __FlashAddr=0x00000000
[09:03:13.237]    __FlashLen=0x00000000
[09:03:13.237]    __FlashArg=0x00000000
[09:03:13.238]    __FlashOp=0x00000000
[09:03:13.238]    __Result=0x00000000
[09:03:13.239]  </debugvars>
[09:03:13.240]  
[09:03:13.240]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:03:13.241]  </sequence>
[09:03:13.242]  
[09:03:24.158]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:03:24.158]  
[09:03:24.158]  <debugvars>
[09:03:24.158]    // Pre-defined
[09:03:24.159]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:03:24.159]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:03:24.160]    __dp=0x00000000
[09:03:24.168]    __ap=0x00000000
[09:03:24.168]    __traceout=0x00000000      (Trace Disabled)
[09:03:24.169]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:03:24.169]    __FlashAddr=0x00000000
[09:03:24.169]    __FlashLen=0x00000000
[09:03:24.170]    __FlashArg=0x00000000
[09:03:24.170]    __FlashOp=0x00000000
[09:03:24.170]    __Result=0x00000000
[09:03:24.171]  </debugvars>
[09:03:24.171]  
[09:03:24.171]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:03:24.172]    <block atomic="false" info="">
[09:03:24.172]      __var nReset      = 0x80;
[09:03:24.172]        // -> [nReset <= 0x00000080]
[09:03:24.172]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:03:24.175]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:03:24.175]    </block>
[09:03:24.175]    <control if="" while="1" timeout="50000" info="">
[09:03:24.176]      // while "1"  (timeout="50000")
[09:03:24.176]      // while-condition  =>  TRUE
[09:03:24.176]      // while "1"  (timeout="50000")
[09:03:24.176]      // while-condition  =>  TRUE
[09:03:24.177]      // while "1"  (timeout="50000")
[09:03:24.177]      // while-condition  =>  TRUE
[09:03:24.177]      // while "1"  (timeout="50000")
[09:03:24.178]      // while-condition  =>  TRUE
[09:03:24.178]      // while "1"  (timeout="50000")
[09:03:24.178]      // while-condition  =>  TRUE
[09:03:24.179]      // while "1"  (timeout="50000")
[09:03:24.179]      // while-condition  =>  TRUE
[09:03:24.179]      // while "1"  (timeout="50000")
[09:03:24.179]      // while-condition  =>  TRUE
[09:03:24.180]      // while "1"  (timeout="50000")
[09:03:24.180]      // while-condition  =>  TRUE
[09:03:24.180]      // while "1"  (timeout="50000")
[09:03:24.181]      // while-condition  =>  TRUE
[09:03:24.181]      // while "1"  (timeout="50000")
[09:03:24.181]      // while-condition  =>  TRUE
[09:03:24.181]      // while "1"  (timeout="50000")
[09:03:24.182]      // while-condition  =>  TRUE
[09:03:24.182]      // while "1"  (timeout="50000")
[09:03:24.182]      // while-condition  =>  TRUE
[09:03:24.183]      // while "1"  (timeout="50000")
[09:03:24.183]      // while-condition  =>  TRUE
[09:03:24.183]      // while "1"  (timeout="50000")
[09:03:24.183]      // while-condition  =>  TRUE
[09:03:24.184]      // while "1"  (timeout="50000")
[09:03:24.184]      // while-condition  =>  TRUE
[09:03:24.184]      // while "1"  (timeout="50000")
[09:03:24.184]      // while-condition  =>  TRUE
[09:03:24.184]      // while "1"  (timeout="50000")
[09:03:24.185]      // while-condition  =>  TRUE
[09:03:24.185]      // while "1"  (timeout="50000")
[09:03:24.185]      // while-condition  =>  TRUE
[09:03:24.185]      // while "1"  (timeout="50000")
[09:03:24.186]      // while-condition  =>  TRUE
[09:03:24.186]      // while "1"  (timeout="50000")
[09:03:24.186]      // while-condition  =>  TRUE
[09:03:24.186]      // while "1"  (timeout="50000")
[09:03:24.186]      // while-condition  =>  TRUE
[09:03:24.187]      // while "1"  (timeout="50000")
[09:03:24.187]      // while-condition  =>  TRUE
[09:03:24.187]      // while "1"  (timeout="50000")
[09:03:24.187]      // while-condition  =>  TRUE
[09:03:24.188]      // while "1"  (timeout="50000")
[09:03:24.188]      // while-condition  =>  TRUE
[09:03:24.188]      // while "1"  (timeout="50000")
[09:03:24.188]      // while-condition  =>  TRUE
[09:03:24.189]      // while "1"  (timeout="50000")
[09:03:24.189]      // while-condition  =>  TRUE
[09:03:24.189]      // while "1"  (timeout="50000")
[09:03:24.189]      // while-condition  =>  TRUE
[09:03:24.190]      // while "1"  (timeout="50000")
[09:03:24.190]      // while-condition  =>  TRUE
[09:03:24.190]      // while "1"  (timeout="50000")
[09:03:24.190]      // while-condition  =>  TRUE
[09:03:24.191]      // while "1"  (timeout="50000")
[09:03:24.191]      // while-condition  =>  TRUE
[09:03:24.191]      // while "1"  (timeout="50000")
[09:03:24.191]      // while-condition  =>  TRUE
[09:03:24.192]      // while "1"  (timeout="50000")
[09:03:24.192]      // while-condition  =>  TRUE
[09:03:24.192]      // while "1"  (timeout="50000")
[09:03:24.192]      // while-condition  =>  TRUE
[09:03:24.193]      // while "1"  (timeout="50000")
[09:03:24.193]      // while-condition  =>  TRUE
[09:03:24.193]      // while "1"  (timeout="50000")
[09:03:24.194]      // while-condition  =>  TRUE
[09:03:24.194]      // while "1"  (timeout="50000")
[09:03:24.194]      // while-condition  =>  TRUE
[09:03:24.194]      // while "1"  (timeout="50000")
[09:03:24.195]      // while-condition  =>  TRUE
[09:03:24.195]      // while "1"  (timeout="50000")
[09:03:24.195]      // while-condition  =>  TRUE
[09:03:24.195]      // while "1"  (timeout="50000")
[09:03:24.196]      // while-condition  =>  TRUE
[09:03:24.196]      // while "1"  (timeout="50000")
[09:03:24.196]      // while-condition  =>  TRUE
[09:03:24.196]      // while "1"  (timeout="50000")
[09:03:24.196]      // while-condition  =>  TRUE
[09:03:24.197]      // while "1"  (timeout="50000")
[09:03:24.197]      // while-condition  =>  TRUE
[09:03:24.197]      // while "1"  (timeout="50000")
[09:03:24.197]      // while-condition  =>  TRUE
[09:03:24.198]      // while "1"  (timeout="50000")
[09:03:24.198]      // while-condition  =>  TRUE
[09:03:24.198]      // while "1"  (timeout="50000")
[09:03:24.198]      // while-condition  =>  TRUE
[09:03:24.198]      // while "1"  (timeout="50000")
[09:03:24.199]      // while-condition  =>  TRUE
[09:03:24.199]      // while "1"  (timeout="50000")
[09:03:24.199]      // while-condition  =>  TRUE
[09:03:24.199]      // while "1"  (timeout="50000")
[09:03:24.199]      // while-condition  =>  TRUE
[09:03:24.200]      // while "1"  (timeout="50000")
[09:03:24.200]      // while-condition  =>  TRUE
[09:03:24.200]      // while "1"  (timeout="50000")
[09:03:24.200]      // while-condition  =>  TRUE
[09:03:24.200]      // while "1"  (timeout="50000")
[09:03:24.201]      // while-condition  =>  TRUE
[09:03:24.201]      // while "1"  (timeout="50000")
[09:03:24.201]      // while-condition  =>  TRUE
[09:03:24.201]      // while "1"  (timeout="50000")
[09:03:24.201]      // while-condition  =>  TRUE
[09:03:24.202]      // while "1"  (timeout="50000")
[09:03:24.202]      // while-condition  =>  TRUE
[09:03:24.202]      // while "1"  (timeout="50000")
[09:03:24.202]      // while-condition  =>  TRUE
[09:03:24.202]      // while "1"  (timeout="50000")
[09:03:24.203]      // while-condition  =>  TRUE
[09:03:24.203]      // while "1"  (timeout="50000")
[09:03:24.203]      // while-condition  =>  TRUE
[09:03:24.203]      // while "1"  (timeout="50000")
[09:03:24.203]      // while-condition  =>  TRUE
[09:03:24.204]      // while "1"  (timeout="50000")
[09:03:24.204]      // while-condition  =>  TRUE
[09:03:24.204]      // while "1"  (timeout="50000")
[09:03:24.204]      // while-condition  =>  TRUE
[09:03:24.204]      // while "1"  (timeout="50000")
[09:03:24.205]      // while-condition  =>  TRUE
[09:03:24.205]      // while "1"  (timeout="50000")
[09:03:24.205]      // while-condition  =>  TRUE
[09:03:24.205]      // while "1"  (timeout="50000")
[09:03:24.205]      // while-condition  =>  TRUE
[09:03:24.206]      // while "1"  (timeout="50000")
[09:03:24.206]      // while-condition  =>  TRUE
[09:03:24.206]      // while "1"  (timeout="50000")
[09:03:24.206]      // while-condition  =>  TRUE
[09:03:24.206]      // while "1"  (timeout="50000")
[09:03:24.207]      // while-condition  =>  TRUE
[09:03:24.207]      // while "1"  (timeout="50000")
[09:03:24.207]      // while-condition  =>  TRUE
[09:03:24.207]      // while "1"  (timeout="50000")
[09:03:24.207]      // while-condition  =>  TRUE
[09:03:24.208]      // while "1"  (timeout="50000")
[09:03:24.208]      // while-condition  =>  TRUE
[09:03:24.208]      // while "1"  (timeout="50000")
[09:03:24.208]      // while-condition  =>  TRUE
[09:03:24.208]      // while "1"  (timeout="50000")
[09:03:24.209]      // while-condition  =>  TRUE
[09:03:24.209]      // while "1"  (timeout="50000")
[09:03:24.209]      // while-condition  =>  TRUE
[09:03:24.209]      // while "1"  (timeout="50000")
[09:03:24.209]      // while-condition  =>  TRUE
[09:03:24.210]      // while "1"  (timeout="50000")
[09:03:24.210]      // while-condition  =>  TRUE
[09:03:24.210]      // while "1"  (timeout="50000")
[09:03:24.210]      // while-condition  =>  TRUE
[09:03:24.210]      // while "1"  (timeout="50000")
[09:03:24.211]      // while-condition  =>  TRUE
[09:03:24.211]      // while "1"  (timeout="50000")
[09:03:24.211]      // while-condition  =>  TRUE
[09:03:24.211]      // while "1"  (timeout="50000")
[09:03:24.211]      // while-condition  =>  TRUE
[09:03:24.212]      // while "1"  (timeout="50000")
[09:03:24.212]      // while-condition  =>  TRUE
[09:03:24.212]      // while "1"  (timeout="50000")
[09:03:24.212]      // while-condition  =>  TRUE
[09:03:24.213]      // while "1"  (timeout="50000")
[09:03:24.213]      // while-condition  =>  TRUE
[09:03:24.213]      // while "1"  (timeout="50000")
[09:03:24.213]      // while-condition  =>  TRUE
[09:03:24.214]      // while "1"  (timeout="50000")
[09:03:24.214]      // while-condition  =>  TRUE
[09:03:24.214]      // while "1"  (timeout="50000")
[09:03:24.214]      // while-condition  =>  TRUE
[09:03:24.214]      // while "1"  (timeout="50000")
[09:03:24.215]      // while-condition  =>  TRUE
[09:03:24.215]      // while "1"  (timeout="50000")
[09:03:24.215]      // while-condition  =>  TRUE
[09:03:24.215]      // while "1"  (timeout="50000")
[09:03:24.216]      // while-condition  =>  TRUE
[09:03:24.216]      // while "1"  (timeout="50000")
[09:03:24.216]      // while-condition  =>  TRUE
[09:03:24.216]      // while "1"  (timeout="50000")
[09:03:24.217]      // while-condition  =>  TRUE
[09:03:24.217]      // while "1"  (timeout="50000")
[09:03:24.217]      // while-condition  =>  TRUE
[09:03:24.217]      // while "1"  (timeout="50000")
[09:03:24.218]      // while-condition  =>  TRUE
[09:03:24.218]      // while "1"  (timeout="50000")
[09:03:24.218]      // while-condition  =>  TRUE
[09:03:24.218]      // while "1"  (timeout="50000")
[09:03:24.218]      // while-condition  =>  TRUE
[09:03:24.219]      // while "1"  (timeout="50000")
[09:03:24.219]      // while-condition  =>  TRUE
[09:03:24.219]      // while "1"  (timeout="50000")
[09:03:24.219]      // while-condition  =>  TRUE
[09:03:24.220]      // while "1"  (timeout="50000")
[09:03:24.220]      // while-condition  =>  TRUE
[09:03:24.220]      // while "1"  (timeout="50000")
[09:03:24.220]      // while-condition  =>  TRUE
[09:03:24.221]      // while "1"  (timeout="50000")
[09:03:24.221]      // while-condition  =>  TRUE
[09:03:24.221]      // while "1"  (timeout="50000")
[09:03:24.221]      // while-condition  =>  TRUE
[09:03:24.221]      // while "1"  (timeout="50000")
[09:03:24.222]      // while-condition  =>  TRUE
[09:03:24.222]      // while "1"  (timeout="50000")
[09:03:24.222]      // while-condition  =>  TRUE
[09:03:24.222]      // while "1"  (timeout="50000")
[09:03:24.223]      // while-condition  =>  TRUE
[09:03:24.223]      // while "1"  (timeout="50000")
[09:03:24.223]      // while-condition  =>  TRUE
[09:03:24.223]      // while "1"  (timeout="50000")
[09:03:24.223]      // while-condition  =>  TRUE
[09:03:24.224]      // while "1"  (timeout="50000")
[09:03:24.224]      // while-condition  =>  TRUE
[09:03:24.224]      // while "1"  (timeout="50000")
[09:03:24.224]      // while-condition  =>  TRUE
[09:03:24.225]      // while "1"  (timeout="50000")
[09:03:24.225]      // while  =>  TIMEOUT
[09:03:24.225]      // end while "1"
[09:03:24.225]    </control>
[09:03:24.226]    <block atomic="false" info="">
[09:03:24.226]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:03:24.228]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:03:24.228]    </block>
[09:03:24.228]    <control if="" while="1" timeout="10000" info="">
[09:03:24.229]      // while "1"  (timeout="10000")
[09:03:24.229]      // while-condition  =>  TRUE
[09:03:24.229]      // while "1"  (timeout="10000")
[09:03:24.229]      // while-condition  =>  TRUE
[09:03:24.230]      // while "1"  (timeout="10000")
[09:03:24.230]      // while-condition  =>  TRUE
[09:03:24.230]      // while "1"  (timeout="10000")
[09:03:24.230]      // while-condition  =>  TRUE
[09:03:24.230]      // while "1"  (timeout="10000")
[09:03:24.231]      // while-condition  =>  TRUE
[09:03:24.231]      // while "1"  (timeout="10000")
[09:03:24.231]      // while-condition  =>  TRUE
[09:03:24.231]      // while "1"  (timeout="10000")
[09:03:24.232]      // while-condition  =>  TRUE
[09:03:24.232]      // while "1"  (timeout="10000")
[09:03:24.232]      // while-condition  =>  TRUE
[09:03:24.232]      // while "1"  (timeout="10000")
[09:03:24.232]      // while-condition  =>  TRUE
[09:03:24.233]      // while "1"  (timeout="10000")
[09:03:24.233]      // while-condition  =>  TRUE
[09:03:24.233]      // while "1"  (timeout="10000")
[09:03:24.233]      // while-condition  =>  TRUE
[09:03:24.234]      // while "1"  (timeout="10000")
[09:03:24.234]      // while-condition  =>  TRUE
[09:03:24.234]      // while "1"  (timeout="10000")
[09:03:24.234]      // while-condition  =>  TRUE
[09:03:24.235]      // while "1"  (timeout="10000")
[09:03:24.235]      // while-condition  =>  TRUE
[09:03:24.235]      // while "1"  (timeout="10000")
[09:03:24.235]      // while-condition  =>  TRUE
[09:03:24.236]      // while "1"  (timeout="10000")
[09:03:24.236]      // while-condition  =>  TRUE
[09:03:24.236]      // while "1"  (timeout="10000")
[09:03:24.236]      // while-condition  =>  TRUE
[09:03:24.236]      // while "1"  (timeout="10000")
[09:03:24.237]      // while-condition  =>  TRUE
[09:03:24.237]      // while "1"  (timeout="10000")
[09:03:24.237]      // while-condition  =>  TRUE
[09:03:24.237]      // while "1"  (timeout="10000")
[09:03:24.238]      // while-condition  =>  TRUE
[09:03:24.238]      // while "1"  (timeout="10000")
[09:03:24.238]      // while-condition  =>  TRUE
[09:03:24.238]      // while "1"  (timeout="10000")
[09:03:24.239]      // while-condition  =>  TRUE
[09:03:24.239]      // while "1"  (timeout="10000")
[09:03:24.239]      // while-condition  =>  TRUE
[09:03:24.239]      // while "1"  (timeout="10000")
[09:03:24.239]      // while-condition  =>  TRUE
[09:03:24.240]      // while "1"  (timeout="10000")
[09:03:24.240]      // while-condition  =>  TRUE
[09:03:24.240]      // while "1"  (timeout="10000")
[09:03:24.240]      // while-condition  =>  TRUE
[09:03:24.241]      // while "1"  (timeout="10000")
[09:03:24.241]      // while  =>  TIMEOUT
[09:03:24.241]      // end while "1"
[09:03:24.241]    </control>
[09:03:24.241]    <block atomic="true" info="">
[09:03:24.245]  
[09:03:24.245]  ! W001 : No atomic sequence support in debug unit
[09:03:24.245]  
[09:03:24.247]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:03:24.249]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:03:24.249]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:03:24.251]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:03:24.252]    </block>
[09:03:24.252]    <block atomic="false" info="">
[09:03:24.252]      __errorcontrol = 0x00000001;
[09:03:24.253]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:03:24.253]      ReadDP(0x0);
[09:03:24.261]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:03:24.261]      __errorcontrol = 0x00000000;
[09:03:24.262]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:03:24.262]    </block>
[09:03:24.262]  </sequence>
[09:03:24.263]  
[09:03:24.263]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:03:24.263]  
[09:03:24.264]  <debugvars>
[09:03:24.264]    // Pre-defined
[09:03:24.265]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:03:24.265]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:03:24.265]    __dp=0x00000000
[09:03:24.266]    __ap=0x00000000
[09:03:24.266]    __traceout=0x00000000      (Trace Disabled)
[09:03:24.267]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:03:24.267]    __FlashAddr=0x00000000
[09:03:24.267]    __FlashLen=0x00000000
[09:03:24.268]    __FlashArg=0x00000000
[09:03:24.268]    __FlashOp=0x00000000
[09:03:24.269]    __Result=0x00000000
[09:03:24.269]  </debugvars>
[09:03:24.269]  
[09:03:24.270]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:03:24.270]  </sequence>
[09:03:24.270]  
[09:03:58.295]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:03:58.295]  
[09:03:58.300]  <debugvars>
[09:03:58.300]    // Pre-defined
[09:03:58.301]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:03:58.301]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:03:58.302]    __dp=0x00000000
[09:03:58.302]    __ap=0x00000000
[09:03:58.302]    __traceout=0x00000000      (Trace Disabled)
[09:03:58.303]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:03:58.303]    __FlashAddr=0x00000000
[09:03:58.304]    __FlashLen=0x00000000
[09:03:58.304]    __FlashArg=0x00000000
[09:03:58.304]    __FlashOp=0x00000000
[09:03:58.305]    __Result=0x00000000
[09:03:58.305]  </debugvars>
[09:03:58.305]  
[09:03:58.306]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:03:58.306]    <block atomic="false" info="">
[09:03:58.307]      __var nReset      = 0x80;
[09:03:58.307]        // -> [nReset <= 0x00000080]
[09:03:58.307]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:03:58.310]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:03:58.310]    </block>
[09:03:58.311]    <control if="" while="1" timeout="50000" info="">
[09:03:58.311]      // while "1"  (timeout="50000")
[09:03:58.311]      // while-condition  =>  TRUE
[09:03:58.312]      // while "1"  (timeout="50000")
[09:03:58.312]      // while-condition  =>  TRUE
[09:03:58.312]      // while "1"  (timeout="50000")
[09:03:58.313]      // while-condition  =>  TRUE
[09:03:58.313]      // while "1"  (timeout="50000")
[09:03:58.313]      // while-condition  =>  TRUE
[09:03:58.314]      // while "1"  (timeout="50000")
[09:03:58.314]      // while-condition  =>  TRUE
[09:03:58.314]      // while "1"  (timeout="50000")
[09:03:58.315]      // while-condition  =>  TRUE
[09:03:58.315]      // while "1"  (timeout="50000")
[09:03:58.315]      // while-condition  =>  TRUE
[09:03:58.316]      // while "1"  (timeout="50000")
[09:03:58.326]      // while-condition  =>  TRUE
[09:03:58.326]      // while "1"  (timeout="50000")
[09:03:58.327]      // while-condition  =>  TRUE
[09:03:58.327]      // while "1"  (timeout="50000")
[09:03:58.327]      // while-condition  =>  TRUE
[09:03:58.328]      // while "1"  (timeout="50000")
[09:03:58.329]      // while-condition  =>  TRUE
[09:03:58.329]      // while "1"  (timeout="50000")
[09:03:58.330]      // while-condition  =>  TRUE
[09:03:58.330]      // while "1"  (timeout="50000")
[09:03:58.330]      // while-condition  =>  TRUE
[09:03:58.331]      // while "1"  (timeout="50000")
[09:03:58.331]      // while-condition  =>  TRUE
[09:03:58.332]      // while "1"  (timeout="50000")
[09:03:58.332]      // while-condition  =>  TRUE
[09:03:58.332]      // while "1"  (timeout="50000")
[09:03:58.333]      // while-condition  =>  TRUE
[09:03:58.333]      // while "1"  (timeout="50000")
[09:03:58.333]      // while-condition  =>  TRUE
[09:03:58.334]      // while "1"  (timeout="50000")
[09:03:58.334]      // while-condition  =>  TRUE
[09:03:58.334]      // while "1"  (timeout="50000")
[09:03:58.334]      // while-condition  =>  TRUE
[09:03:58.335]      // while "1"  (timeout="50000")
[09:03:58.335]      // while-condition  =>  TRUE
[09:03:58.335]      // while "1"  (timeout="50000")
[09:03:58.335]      // while-condition  =>  TRUE
[09:03:58.336]      // while "1"  (timeout="50000")
[09:03:58.336]      // while-condition  =>  TRUE
[09:03:58.336]      // while "1"  (timeout="50000")
[09:03:58.336]      // while-condition  =>  TRUE
[09:03:58.337]      // while "1"  (timeout="50000")
[09:03:58.337]      // while-condition  =>  TRUE
[09:03:58.337]      // while "1"  (timeout="50000")
[09:03:58.337]      // while-condition  =>  TRUE
[09:03:58.338]      // while "1"  (timeout="50000")
[09:03:58.338]      // while-condition  =>  TRUE
[09:03:58.338]      // while "1"  (timeout="50000")
[09:03:58.338]      // while-condition  =>  TRUE
[09:03:58.339]      // while "1"  (timeout="50000")
[09:03:58.339]      // while-condition  =>  TRUE
[09:03:58.339]      // while "1"  (timeout="50000")
[09:03:58.339]      // while-condition  =>  TRUE
[09:03:58.340]      // while "1"  (timeout="50000")
[09:03:58.340]      // while-condition  =>  TRUE
[09:03:58.340]      // while "1"  (timeout="50000")
[09:03:58.340]      // while-condition  =>  TRUE
[09:03:58.341]      // while "1"  (timeout="50000")
[09:03:58.341]      // while-condition  =>  TRUE
[09:03:58.341]      // while "1"  (timeout="50000")
[09:03:58.341]      // while-condition  =>  TRUE
[09:03:58.342]      // while "1"  (timeout="50000")
[09:03:58.342]      // while-condition  =>  TRUE
[09:03:58.342]      // while "1"  (timeout="50000")
[09:03:58.342]      // while-condition  =>  TRUE
[09:03:58.342]      // while "1"  (timeout="50000")
[09:03:58.343]      // while-condition  =>  TRUE
[09:03:58.343]      // while "1"  (timeout="50000")
[09:03:58.343]      // while-condition  =>  TRUE
[09:03:58.343]      // while "1"  (timeout="50000")
[09:03:58.343]      // while-condition  =>  TRUE
[09:03:58.344]      // while "1"  (timeout="50000")
[09:03:58.344]      // while-condition  =>  TRUE
[09:03:58.344]      // while "1"  (timeout="50000")
[09:03:58.344]      // while-condition  =>  TRUE
[09:03:58.344]      // while "1"  (timeout="50000")
[09:03:58.345]      // while-condition  =>  TRUE
[09:03:58.345]      // while "1"  (timeout="50000")
[09:03:58.345]      // while-condition  =>  TRUE
[09:03:58.345]      // while "1"  (timeout="50000")
[09:03:58.345]      // while-condition  =>  TRUE
[09:03:58.346]      // while "1"  (timeout="50000")
[09:03:58.346]      // while-condition  =>  TRUE
[09:03:58.346]      // while "1"  (timeout="50000")
[09:03:58.346]      // while-condition  =>  TRUE
[09:03:58.346]      // while "1"  (timeout="50000")
[09:03:58.347]      // while-condition  =>  TRUE
[09:03:58.347]      // while "1"  (timeout="50000")
[09:03:58.347]      // while-condition  =>  TRUE
[09:03:58.347]      // while "1"  (timeout="50000")
[09:03:58.347]      // while-condition  =>  TRUE
[09:03:58.348]      // while "1"  (timeout="50000")
[09:03:58.348]      // while-condition  =>  TRUE
[09:03:58.348]      // while "1"  (timeout="50000")
[09:03:58.348]      // while-condition  =>  TRUE
[09:03:58.348]      // while "1"  (timeout="50000")
[09:03:58.349]      // while-condition  =>  TRUE
[09:03:58.349]      // while "1"  (timeout="50000")
[09:03:58.349]      // while-condition  =>  TRUE
[09:03:58.349]      // while "1"  (timeout="50000")
[09:03:58.349]      // while-condition  =>  TRUE
[09:03:58.350]      // while "1"  (timeout="50000")
[09:03:58.350]      // while-condition  =>  TRUE
[09:03:58.350]      // while "1"  (timeout="50000")
[09:03:58.350]      // while-condition  =>  TRUE
[09:03:58.350]      // while "1"  (timeout="50000")
[09:03:58.351]      // while-condition  =>  TRUE
[09:03:58.351]      // while "1"  (timeout="50000")
[09:03:58.351]      // while-condition  =>  TRUE
[09:03:58.351]      // while "1"  (timeout="50000")
[09:03:58.351]      // while-condition  =>  TRUE
[09:03:58.352]      // while "1"  (timeout="50000")
[09:03:58.352]      // while-condition  =>  TRUE
[09:03:58.352]      // while "1"  (timeout="50000")
[09:03:58.352]      // while-condition  =>  TRUE
[09:03:58.353]      // while "1"  (timeout="50000")
[09:03:58.353]      // while-condition  =>  TRUE
[09:03:58.353]      // while "1"  (timeout="50000")
[09:03:58.353]      // while-condition  =>  TRUE
[09:03:58.354]      // while "1"  (timeout="50000")
[09:03:58.354]      // while-condition  =>  TRUE
[09:03:58.354]      // while "1"  (timeout="50000")
[09:03:58.354]      // while-condition  =>  TRUE
[09:03:58.354]      // while "1"  (timeout="50000")
[09:03:58.355]      // while-condition  =>  TRUE
[09:03:58.355]      // while "1"  (timeout="50000")
[09:03:58.355]      // while-condition  =>  TRUE
[09:03:58.355]      // while "1"  (timeout="50000")
[09:03:58.356]      // while-condition  =>  TRUE
[09:03:58.356]      // while "1"  (timeout="50000")
[09:03:58.356]      // while-condition  =>  TRUE
[09:03:58.356]      // while "1"  (timeout="50000")
[09:03:58.357]      // while-condition  =>  TRUE
[09:03:58.357]      // while "1"  (timeout="50000")
[09:03:58.357]      // while-condition  =>  TRUE
[09:03:58.357]      // while "1"  (timeout="50000")
[09:03:58.357]      // while-condition  =>  TRUE
[09:03:58.358]      // while "1"  (timeout="50000")
[09:03:58.358]      // while-condition  =>  TRUE
[09:03:58.358]      // while "1"  (timeout="50000")
[09:03:58.358]      // while-condition  =>  TRUE
[09:03:58.358]      // while "1"  (timeout="50000")
[09:03:58.359]      // while-condition  =>  TRUE
[09:03:58.359]      // while "1"  (timeout="50000")
[09:03:58.359]      // while-condition  =>  TRUE
[09:03:58.359]      // while "1"  (timeout="50000")
[09:03:58.360]      // while-condition  =>  TRUE
[09:03:58.360]      // while "1"  (timeout="50000")
[09:03:58.360]      // while-condition  =>  TRUE
[09:03:58.360]      // while "1"  (timeout="50000")
[09:03:58.361]      // while-condition  =>  TRUE
[09:03:58.361]      // while "1"  (timeout="50000")
[09:03:58.361]      // while-condition  =>  TRUE
[09:03:58.361]      // while "1"  (timeout="50000")
[09:03:58.361]      // while-condition  =>  TRUE
[09:03:58.362]      // while "1"  (timeout="50000")
[09:03:58.362]      // while-condition  =>  TRUE
[09:03:58.362]      // while "1"  (timeout="50000")
[09:03:58.362]      // while-condition  =>  TRUE
[09:03:58.363]      // while "1"  (timeout="50000")
[09:03:58.363]      // while-condition  =>  TRUE
[09:03:58.363]      // while "1"  (timeout="50000")
[09:03:58.363]      // while-condition  =>  TRUE
[09:03:58.363]      // while "1"  (timeout="50000")
[09:03:58.364]      // while-condition  =>  TRUE
[09:03:58.364]      // while "1"  (timeout="50000")
[09:03:58.364]      // while-condition  =>  TRUE
[09:03:58.364]      // while "1"  (timeout="50000")
[09:03:58.365]      // while-condition  =>  TRUE
[09:03:58.365]      // while "1"  (timeout="50000")
[09:03:58.365]      // while-condition  =>  TRUE
[09:03:58.365]      // while "1"  (timeout="50000")
[09:03:58.366]      // while-condition  =>  TRUE
[09:03:58.367]      // while "1"  (timeout="50000")
[09:03:58.367]      // while  =>  TIMEOUT
[09:03:58.367]      // end while "1"
[09:03:58.367]    </control>
[09:03:58.368]    <block atomic="false" info="">
[09:03:58.368]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:03:58.370]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:03:58.370]    </block>
[09:03:58.370]    <control if="" while="1" timeout="10000" info="">
[09:03:58.371]      // while "1"  (timeout="10000")
[09:03:58.371]      // while-condition  =>  TRUE
[09:03:58.371]      // while "1"  (timeout="10000")
[09:03:58.371]      // while-condition  =>  TRUE
[09:03:58.372]      // while "1"  (timeout="10000")
[09:03:58.372]      // while-condition  =>  TRUE
[09:03:58.372]      // while "1"  (timeout="10000")
[09:03:58.372]      // while-condition  =>  TRUE
[09:03:58.373]      // while "1"  (timeout="10000")
[09:03:58.373]      // while-condition  =>  TRUE
[09:03:58.373]      // while "1"  (timeout="10000")
[09:03:58.373]      // while-condition  =>  TRUE
[09:03:58.374]      // while "1"  (timeout="10000")
[09:03:58.374]      // while-condition  =>  TRUE
[09:03:58.374]      // while "1"  (timeout="10000")
[09:03:58.375]      // while-condition  =>  TRUE
[09:03:58.375]      // while "1"  (timeout="10000")
[09:03:58.375]      // while-condition  =>  TRUE
[09:03:58.375]      // while "1"  (timeout="10000")
[09:03:58.376]      // while-condition  =>  TRUE
[09:03:58.376]      // while "1"  (timeout="10000")
[09:03:58.376]      // while-condition  =>  TRUE
[09:03:58.377]      // while "1"  (timeout="10000")
[09:03:58.377]      // while-condition  =>  TRUE
[09:03:58.377]      // while "1"  (timeout="10000")
[09:03:58.377]      // while-condition  =>  TRUE
[09:03:58.378]      // while "1"  (timeout="10000")
[09:03:58.388]      // while-condition  =>  TRUE
[09:03:58.389]      // while "1"  (timeout="10000")
[09:03:58.389]      // while  =>  TIMEOUT
[09:03:58.393]      // end while "1"
[09:03:58.394]    </control>
[09:03:58.394]    <block atomic="true" info="">
[09:03:58.398]  
[09:03:58.398]  ! W001 : No atomic sequence support in debug unit
[09:03:58.398]  
[09:03:58.404]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:03:58.406]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:03:58.409]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:03:58.411]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:03:58.414]    </block>
[09:03:58.418]    <block atomic="false" info="">
[09:03:58.418]      __errorcontrol = 0x00000001;
[09:03:58.418]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:03:58.418]      ReadDP(0x0);
[09:03:58.421]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:03:58.421]      __errorcontrol = 0x00000000;
[09:03:58.422]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:03:58.422]    </block>
[09:03:58.422]  </sequence>
[09:03:58.422]  
[09:03:58.422]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:03:58.422]  
[09:03:58.423]  <debugvars>
[09:03:58.423]    // Pre-defined
[09:03:58.423]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:03:58.424]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:03:58.424]    __dp=0x00000000
[09:03:58.424]    __ap=0x00000000
[09:03:58.425]    __traceout=0x00000000      (Trace Disabled)
[09:03:58.425]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:03:58.425]    __FlashAddr=0x00000000
[09:03:58.425]    __FlashLen=0x00000000
[09:03:58.426]    __FlashArg=0x00000000
[09:03:58.426]    __FlashOp=0x00000000
[09:03:58.426]    __Result=0x00000000
[09:03:58.427]  </debugvars>
[09:03:58.427]  
[09:03:58.427]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:03:58.428]  </sequence>
[09:03:58.428]  
[09:03:58.432]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[09:03:58.432]  
[09:03:58.433]  <debugvars>
[09:03:58.433]    // Pre-defined
[09:03:58.433]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:03:58.434]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:03:58.434]    __dp=0x00000000
[09:03:58.434]    __ap=0x00000000
[09:03:58.435]    __traceout=0x00000000      (Trace Disabled)
[09:03:58.435]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:03:58.435]    __FlashAddr=0x00000000
[09:03:58.436]    __FlashLen=0x00000000
[09:03:58.436]    __FlashArg=0x00000000
[09:03:58.436]    __FlashOp=0x00000000
[09:03:58.437]    __Result=0x00000000
[09:03:58.437]  </debugvars>
[09:03:58.437]  
[09:03:58.438]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:03:58.438]    <block atomic="false" info="">
[09:03:58.438]      __var SW_DP_ABORT  = 0x0;
[09:03:58.439]        // -> [SW_DP_ABORT <= 0x00000000]
[09:03:58.439]      __var DP_CTRL_STAT = 0x4;
[09:03:58.439]        // -> [DP_CTRL_STAT <= 0x00000004]
[09:03:58.440]      __var DP_SELECT    = 0x8;
[09:03:58.440]        // -> [DP_SELECT <= 0x00000008]
[09:03:58.440]      __var powered_down = 0;
[09:03:58.441]        // -> [powered_down <= 0x00000000]
[09:03:58.441]      WriteDP(DP_SELECT, 0x00000000);
[09:03:58.443]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:03:58.454]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:03:58.456]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[09:03:58.460]        // -> [powered_down <= 0x00000001]
[09:03:58.460]    </block>
[09:03:58.461]    <control if="powered_down" while="" timeout="0" info="">
[09:03:58.461]      // if-block "powered_down"
[09:03:58.461]        // =>  TRUE
[09:03:58.462]      <block atomic="false" info="">
[09:03:58.462]        WriteDP(DP_CTRL_STAT, 0x50000000);
[09:03:58.467]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[09:03:58.468]      </block>
[09:03:58.468]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[09:03:58.472]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[09:03:58.474]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:03:58.475]        // while-condition  =>  FALSE
[09:03:58.475]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[09:03:58.476]      </control>
[09:03:58.476]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[09:03:58.476]        // if-block "(__protocol & 0xFFFF) == 1"
[09:03:58.477]          // =>  FALSE
[09:03:58.477]        // skip if-block "(__protocol & 0xFFFF) == 1"
[09:03:58.477]      </control>
[09:03:58.478]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[09:03:58.478]        // if-block "(__protocol & 0xFFFF) == 2"
[09:03:58.479]          // =>  TRUE
[09:03:58.479]        <block atomic="false" info="">
[09:03:58.480]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[09:03:58.481]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[09:03:58.482]          WriteDP(SW_DP_ABORT, 0x0000001E);
[09:03:58.484]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[09:03:58.485]        </block>
[09:03:58.485]        // end if-block "(__protocol & 0xFFFF) == 2"
[09:03:58.486]      </control>
[09:03:58.486]      // end if-block "powered_down"
[09:03:58.486]    </control>
[09:03:58.487]  </sequence>
[09:03:58.487]  
[09:03:58.591]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:03:58.591]  
[09:03:58.595]  <debugvars>
[09:03:58.595]    // Pre-defined
[09:03:58.596]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:03:58.596]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:03:58.597]    __dp=0x00000000
[09:03:58.597]    __ap=0x00000000
[09:03:58.597]    __traceout=0x00000000      (Trace Disabled)
[09:03:58.598]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:03:58.598]    __FlashAddr=0x00000000
[09:03:58.599]    __FlashLen=0x00000000
[09:03:58.599]    __FlashArg=0x00000000
[09:03:58.599]    __FlashOp=0x00000000
[09:03:58.600]    __Result=0x00000000
[09:03:58.600]  </debugvars>
[09:03:58.600]  
[09:03:58.601]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:03:58.601]    <block atomic="true" info="">
[09:03:58.615]  
[09:03:58.615]  ! W001 : No atomic sequence support in debug unit
[09:03:58.615]  
[09:03:58.622]      __var DP_R_IDCODE    = 0x0;
[09:03:58.623]        // -> [DP_R_IDCODE <= 0x00000000]
[09:03:58.623]      __var DP_W_ABORT    = 0x0;
[09:03:58.626]        // -> [DP_W_ABORT <= 0x00000000]
[09:03:58.626]      __var DP_CTRLSTAT = 0x4;
[09:03:58.627]        // -> [DP_CTRLSTAT <= 0x00000004]
[09:03:58.627]      __var DP_W_SELECT    = 0x8;
[09:03:58.627]        // -> [DP_W_SELECT <= 0x00000008]
[09:03:58.627]      __var AP_TAR		= 0x4;
[09:03:58.627]        // -> [AP_TAR <= 0x00000004]
[09:03:58.628]      __var AP_BD0		= 0x0;
[09:03:58.628]        // -> [AP_BD0 <= 0x00000000]
[09:03:58.628]      __var AP_BD1		= 0x4;
[09:03:58.628]        // -> [AP_BD1 <= 0x00000004]
[09:03:58.629]      __var AP_BD2		= 0x8;
[09:03:58.629]        // -> [AP_BD2 <= 0x00000008]
[09:03:58.629]      __var PCWithinFlash = 0;
[09:03:58.629]        // -> [PCWithinFlash <= 0x00000000]
[09:03:58.630]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:03:58.636]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.641]    </block>
[09:03:58.641]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:03:58.641]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:03:58.648]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.648]      // while-condition  =>  FALSE
[09:03:58.648]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:03:58.649]    </control>
[09:03:58.649]    <block atomic="true" info="">
[09:03:58.658]  
[09:03:58.658]  ! W001 : No atomic sequence support in debug unit
[09:03:58.658]  
[09:03:58.664]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:03:58.667]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:03:58.667]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:03:58.669]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.669]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:03:58.671]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:03:58.671]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:03:58.675]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.696]    </block>
[09:03:58.696]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:03:58.697]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:58.699]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.700]      // while-condition  =>  TRUE
[09:03:58.701]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:58.703]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.704]      // while-condition  =>  TRUE
[09:03:58.704]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:58.707]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.707]      // while-condition  =>  TRUE
[09:03:58.708]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:58.710]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.710]      // while-condition  =>  TRUE
[09:03:58.711]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:58.713]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.714]      // while-condition  =>  TRUE
[09:03:58.714]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:58.716]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.716]      // while-condition  =>  TRUE
[09:03:58.716]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:58.719]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.719]      // while-condition  =>  TRUE
[09:03:58.719]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:58.722]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.722]      // while-condition  =>  TRUE
[09:03:58.722]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:58.725]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.725]      // while-condition  =>  TRUE
[09:03:58.725]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:58.728]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.728]      // while-condition  =>  TRUE
[09:03:58.728]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:58.731]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.731]      // while-condition  =>  TRUE
[09:03:58.731]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:58.734]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.734]      // while-condition  =>  TRUE
[09:03:58.734]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:58.737]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.737]      // while-condition  =>  TRUE
[09:03:58.737]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:58.740]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.752]      // while-condition  =>  TRUE
[09:03:58.752]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:58.755]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.759]      // while-condition  =>  TRUE
[09:03:58.759]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:58.761]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.761]      // while-condition  =>  TRUE
[09:03:58.761]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:58.764]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.764]      // while-condition  =>  TRUE
[09:03:58.770]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:58.772]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.772]      // while-condition  =>  TRUE
[09:03:58.772]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:58.775]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.777]      // while-condition  =>  TRUE
[09:03:58.778]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:58.780]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.788]      // while-condition  =>  TRUE
[09:03:58.789]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:58.791]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.791]      // while-condition  =>  TRUE
[09:03:58.791]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:58.794]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.794]      // while-condition  =>  TRUE
[09:03:58.794]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:58.797]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.800]      // while-condition  =>  TRUE
[09:03:58.800]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:58.803]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.803]      // while-condition  =>  TRUE
[09:03:58.803]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:58.804]      // while  =>  TIMEOUT
[09:03:58.804]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:03:58.804]    </control>
[09:03:58.804]    <block atomic="false" info="">
[09:03:58.805]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:03:58.807]        // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:03:58.807]        // -> [PCWithinFlash <= 0x00000000]
[09:03:58.807]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:03:58.810]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:03:58.810]    </block>
[09:03:58.810]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:03:58.811]      // if-block "PCWithinFlash == 0"
[09:03:58.811]        // =>  TRUE
[09:03:58.811]      // end if-block "PCWithinFlash == 0"
[09:03:58.811]    </control>
[09:03:58.812]  </sequence>
[09:03:58.812]  
[09:03:58.858]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[09:03:58.858]  
[09:03:58.859]  <debugvars>
[09:03:58.859]    // Pre-defined
[09:03:58.859]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:03:58.859]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:03:58.860]    __dp=0x00000000
[09:03:58.860]    __ap=0x00000000
[09:03:58.860]    __traceout=0x00000000      (Trace Disabled)
[09:03:58.860]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:03:58.861]    __FlashAddr=0x00000000
[09:03:58.861]    __FlashLen=0x00000000
[09:03:58.861]    __FlashArg=0x00000000
[09:03:58.862]    __FlashOp=0x00000000
[09:03:58.862]    __Result=0x00000000
[09:03:58.862]  </debugvars>
[09:03:58.867]  
[09:03:58.867]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[09:03:58.868]    <block atomic="false" info="">
[09:03:58.868]    </block>
[09:03:58.868]  </sequence>
[09:03:58.868]  
[09:03:58.870]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[09:03:58.870]  
[09:03:58.871]  <debugvars>
[09:03:58.871]    // Pre-defined
[09:03:58.871]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:03:58.871]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:03:58.872]    __dp=0x00000000
[09:03:58.872]    __ap=0x00000000
[09:03:58.872]    __traceout=0x00000000      (Trace Disabled)
[09:03:58.872]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:03:58.873]    __FlashAddr=0x00000000
[09:03:58.873]    __FlashLen=0x00000000
[09:03:58.873]    __FlashArg=0x00000000
[09:03:58.873]    __FlashOp=0x00000000
[09:03:58.874]    __Result=0x00000000
[09:03:58.874]  </debugvars>
[09:03:58.874]  
[09:03:58.874]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:03:58.875]    <block atomic="false" info="">
[09:03:58.875]      __var nReset      = 0x80;
[09:03:58.875]        // -> [nReset <= 0x00000080]
[09:03:58.875]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:03:58.877]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:03:58.878]    </block>
[09:03:58.878]    <control if="" while="1" timeout="50000" info="">
[09:03:58.878]      // while "1"  (timeout="50000")
[09:03:58.878]      // while-condition  =>  TRUE
[09:03:58.879]      // while "1"  (timeout="50000")
[09:03:58.879]      // while-condition  =>  TRUE
[09:03:58.879]      // while "1"  (timeout="50000")
[09:03:58.879]      // while-condition  =>  TRUE
[09:03:58.880]      // while "1"  (timeout="50000")
[09:03:58.880]      // while-condition  =>  TRUE
[09:03:58.880]      // while "1"  (timeout="50000")
[09:03:58.880]      // while-condition  =>  TRUE
[09:03:58.881]      // while "1"  (timeout="50000")
[09:03:58.881]      // while-condition  =>  TRUE
[09:03:58.881]      // while "1"  (timeout="50000")
[09:03:58.881]      // while-condition  =>  TRUE
[09:03:58.881]      // while "1"  (timeout="50000")
[09:03:58.882]      // while-condition  =>  TRUE
[09:03:58.882]      // while "1"  (timeout="50000")
[09:03:58.882]      // while-condition  =>  TRUE
[09:03:58.882]      // while "1"  (timeout="50000")
[09:03:58.883]      // while-condition  =>  TRUE
[09:03:58.883]      // while "1"  (timeout="50000")
[09:03:58.883]      // while-condition  =>  TRUE
[09:03:58.883]      // while "1"  (timeout="50000")
[09:03:58.884]      // while-condition  =>  TRUE
[09:03:58.884]      // while "1"  (timeout="50000")
[09:03:58.884]      // while-condition  =>  TRUE
[09:03:58.884]      // while "1"  (timeout="50000")
[09:03:58.884]      // while-condition  =>  TRUE
[09:03:58.885]      // while "1"  (timeout="50000")
[09:03:58.885]      // while-condition  =>  TRUE
[09:03:58.885]      // while "1"  (timeout="50000")
[09:03:58.885]      // while-condition  =>  TRUE
[09:03:58.886]      // while "1"  (timeout="50000")
[09:03:58.886]      // while-condition  =>  TRUE
[09:03:58.886]      // while "1"  (timeout="50000")
[09:03:58.887]      // while-condition  =>  TRUE
[09:03:58.888]      // while "1"  (timeout="50000")
[09:03:58.888]      // while-condition  =>  TRUE
[09:03:58.888]      // while "1"  (timeout="50000")
[09:03:58.888]      // while-condition  =>  TRUE
[09:03:58.889]      // while "1"  (timeout="50000")
[09:03:58.889]      // while-condition  =>  TRUE
[09:03:58.889]      // while "1"  (timeout="50000")
[09:03:58.889]      // while-condition  =>  TRUE
[09:03:58.890]      // while "1"  (timeout="50000")
[09:03:58.890]      // while-condition  =>  TRUE
[09:03:58.890]      // while "1"  (timeout="50000")
[09:03:58.890]      // while-condition  =>  TRUE
[09:03:58.890]      // while "1"  (timeout="50000")
[09:03:58.891]      // while-condition  =>  TRUE
[09:03:58.891]      // while "1"  (timeout="50000")
[09:03:58.891]      // while-condition  =>  TRUE
[09:03:58.891]      // while "1"  (timeout="50000")
[09:03:58.892]      // while-condition  =>  TRUE
[09:03:58.892]      // while "1"  (timeout="50000")
[09:03:58.892]      // while-condition  =>  TRUE
[09:03:58.892]      // while "1"  (timeout="50000")
[09:03:58.893]      // while-condition  =>  TRUE
[09:03:58.893]      // while "1"  (timeout="50000")
[09:03:58.893]      // while-condition  =>  TRUE
[09:03:58.893]      // while "1"  (timeout="50000")
[09:03:58.894]      // while-condition  =>  TRUE
[09:03:58.894]      // while "1"  (timeout="50000")
[09:03:58.894]      // while-condition  =>  TRUE
[09:03:58.894]      // while "1"  (timeout="50000")
[09:03:58.895]      // while-condition  =>  TRUE
[09:03:58.895]      // while "1"  (timeout="50000")
[09:03:58.895]      // while-condition  =>  TRUE
[09:03:58.895]      // while "1"  (timeout="50000")
[09:03:58.896]      // while-condition  =>  TRUE
[09:03:58.896]      // while "1"  (timeout="50000")
[09:03:58.896]      // while-condition  =>  TRUE
[09:03:58.896]      // while "1"  (timeout="50000")
[09:03:58.897]      // while-condition  =>  TRUE
[09:03:58.897]      // while "1"  (timeout="50000")
[09:03:58.897]      // while-condition  =>  TRUE
[09:03:58.897]      // while "1"  (timeout="50000")
[09:03:58.898]      // while-condition  =>  TRUE
[09:03:58.898]      // while "1"  (timeout="50000")
[09:03:58.898]      // while-condition  =>  TRUE
[09:03:58.898]      // while "1"  (timeout="50000")
[09:03:58.898]      // while-condition  =>  TRUE
[09:03:58.899]      // while "1"  (timeout="50000")
[09:03:58.899]      // while-condition  =>  TRUE
[09:03:58.899]      // while "1"  (timeout="50000")
[09:03:58.899]      // while-condition  =>  TRUE
[09:03:58.900]      // while "1"  (timeout="50000")
[09:03:58.900]      // while-condition  =>  TRUE
[09:03:58.900]      // while "1"  (timeout="50000")
[09:03:58.900]      // while-condition  =>  TRUE
[09:03:58.900]      // while "1"  (timeout="50000")
[09:03:58.901]      // while-condition  =>  TRUE
[09:03:58.901]      // while "1"  (timeout="50000")
[09:03:58.901]      // while-condition  =>  TRUE
[09:03:58.901]      // while "1"  (timeout="50000")
[09:03:58.902]      // while-condition  =>  TRUE
[09:03:58.902]      // while "1"  (timeout="50000")
[09:03:58.902]      // while-condition  =>  TRUE
[09:03:58.902]      // while "1"  (timeout="50000")
[09:03:58.902]      // while-condition  =>  TRUE
[09:03:58.903]      // while "1"  (timeout="50000")
[09:03:58.903]      // while-condition  =>  TRUE
[09:03:58.903]      // while "1"  (timeout="50000")
[09:03:58.903]      // while-condition  =>  TRUE
[09:03:58.904]      // while "1"  (timeout="50000")
[09:03:58.904]      // while-condition  =>  TRUE
[09:03:58.904]      // while "1"  (timeout="50000")
[09:03:58.904]      // while-condition  =>  TRUE
[09:03:58.905]      // while "1"  (timeout="50000")
[09:03:58.905]      // while-condition  =>  TRUE
[09:03:58.905]      // while "1"  (timeout="50000")
[09:03:58.905]      // while-condition  =>  TRUE
[09:03:58.906]      // while "1"  (timeout="50000")
[09:03:58.906]      // while-condition  =>  TRUE
[09:03:58.906]      // while "1"  (timeout="50000")
[09:03:58.906]      // while-condition  =>  TRUE
[09:03:58.907]      // while "1"  (timeout="50000")
[09:03:58.907]      // while-condition  =>  TRUE
[09:03:58.907]      // while "1"  (timeout="50000")
[09:03:58.907]      // while-condition  =>  TRUE
[09:03:58.907]      // while "1"  (timeout="50000")
[09:03:58.908]      // while-condition  =>  TRUE
[09:03:58.908]      // while "1"  (timeout="50000")
[09:03:58.908]      // while-condition  =>  TRUE
[09:03:58.908]      // while "1"  (timeout="50000")
[09:03:58.909]      // while-condition  =>  TRUE
[09:03:58.909]      // while "1"  (timeout="50000")
[09:03:58.909]      // while-condition  =>  TRUE
[09:03:58.909]      // while "1"  (timeout="50000")
[09:03:58.910]      // while-condition  =>  TRUE
[09:03:58.910]      // while "1"  (timeout="50000")
[09:03:58.910]      // while-condition  =>  TRUE
[09:03:58.910]      // while "1"  (timeout="50000")
[09:03:58.910]      // while-condition  =>  TRUE
[09:03:58.911]      // while "1"  (timeout="50000")
[09:03:58.911]      // while-condition  =>  TRUE
[09:03:58.911]      // while "1"  (timeout="50000")
[09:03:58.911]      // while-condition  =>  TRUE
[09:03:58.912]      // while "1"  (timeout="50000")
[09:03:58.912]      // while-condition  =>  TRUE
[09:03:58.912]      // while "1"  (timeout="50000")
[09:03:58.912]      // while-condition  =>  TRUE
[09:03:58.913]      // while "1"  (timeout="50000")
[09:03:58.913]      // while-condition  =>  TRUE
[09:03:58.913]      // while "1"  (timeout="50000")
[09:03:58.913]      // while-condition  =>  TRUE
[09:03:58.914]      // while "1"  (timeout="50000")
[09:03:58.914]      // while-condition  =>  TRUE
[09:03:58.914]      // while "1"  (timeout="50000")
[09:03:58.914]      // while-condition  =>  TRUE
[09:03:58.914]      // while "1"  (timeout="50000")
[09:03:58.915]      // while-condition  =>  TRUE
[09:03:58.915]      // while "1"  (timeout="50000")
[09:03:58.915]      // while-condition  =>  TRUE
[09:03:58.915]      // while "1"  (timeout="50000")
[09:03:58.916]      // while-condition  =>  TRUE
[09:03:58.916]      // while "1"  (timeout="50000")
[09:03:58.916]      // while-condition  =>  TRUE
[09:03:58.916]      // while "1"  (timeout="50000")
[09:03:58.917]      // while-condition  =>  TRUE
[09:03:58.917]      // while "1"  (timeout="50000")
[09:03:58.917]      // while-condition  =>  TRUE
[09:03:58.918]      // while "1"  (timeout="50000")
[09:03:58.918]      // while-condition  =>  TRUE
[09:03:58.918]      // while "1"  (timeout="50000")
[09:03:58.918]      // while-condition  =>  TRUE
[09:03:58.919]      // while "1"  (timeout="50000")
[09:03:58.919]      // while-condition  =>  TRUE
[09:03:58.919]      // while "1"  (timeout="50000")
[09:03:58.919]      // while-condition  =>  TRUE
[09:03:58.920]      // while "1"  (timeout="50000")
[09:03:58.920]      // while-condition  =>  TRUE
[09:03:58.920]      // while "1"  (timeout="50000")
[09:03:58.920]      // while-condition  =>  TRUE
[09:03:58.920]      // while "1"  (timeout="50000")
[09:03:58.921]      // while-condition  =>  TRUE
[09:03:58.921]      // while "1"  (timeout="50000")
[09:03:58.921]      // while-condition  =>  TRUE
[09:03:58.921]      // while "1"  (timeout="50000")
[09:03:58.922]      // while-condition  =>  TRUE
[09:03:58.922]      // while "1"  (timeout="50000")
[09:03:58.922]      // while-condition  =>  TRUE
[09:03:58.922]      // while "1"  (timeout="50000")
[09:03:58.923]      // while-condition  =>  TRUE
[09:03:58.923]      // while "1"  (timeout="50000")
[09:03:58.923]      // while-condition  =>  TRUE
[09:03:58.923]      // while "1"  (timeout="50000")
[09:03:58.923]      // while-condition  =>  TRUE
[09:03:58.924]      // while "1"  (timeout="50000")
[09:03:58.924]      // while-condition  =>  TRUE
[09:03:58.924]      // while "1"  (timeout="50000")
[09:03:58.924]      // while-condition  =>  TRUE
[09:03:58.925]      // while "1"  (timeout="50000")
[09:03:58.925]      // while-condition  =>  TRUE
[09:03:58.925]      // while "1"  (timeout="50000")
[09:03:58.925]      // while-condition  =>  TRUE
[09:03:58.925]      // while "1"  (timeout="50000")
[09:03:58.926]      // while-condition  =>  TRUE
[09:03:58.926]      // while "1"  (timeout="50000")
[09:03:58.926]      // while-condition  =>  TRUE
[09:03:58.926]      // while "1"  (timeout="50000")
[09:03:58.927]      // while-condition  =>  TRUE
[09:03:58.927]      // while "1"  (timeout="50000")
[09:03:58.927]      // while-condition  =>  TRUE
[09:03:58.927]      // while "1"  (timeout="50000")
[09:03:58.927]      // while-condition  =>  TRUE
[09:03:58.928]      // while "1"  (timeout="50000")
[09:03:58.928]      // while-condition  =>  TRUE
[09:03:58.928]      // while "1"  (timeout="50000")
[09:03:58.928]      // while-condition  =>  TRUE
[09:03:58.929]      // while "1"  (timeout="50000")
[09:03:58.929]      // while  =>  TIMEOUT
[09:03:58.929]      // end while "1"
[09:03:58.929]    </control>
[09:03:58.930]    <block atomic="false" info="">
[09:03:58.930]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:03:58.932]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:03:58.932]    </block>
[09:03:58.933]    <control if="" while="1" timeout="10000" info="">
[09:03:58.933]      // while "1"  (timeout="10000")
[09:03:58.933]      // while-condition  =>  TRUE
[09:03:58.933]      // while "1"  (timeout="10000")
[09:03:58.933]      // while-condition  =>  TRUE
[09:03:58.934]      // while "1"  (timeout="10000")
[09:03:58.934]      // while-condition  =>  TRUE
[09:03:58.934]      // while "1"  (timeout="10000")
[09:03:58.934]      // while-condition  =>  TRUE
[09:03:58.935]      // while "1"  (timeout="10000")
[09:03:58.935]      // while-condition  =>  TRUE
[09:03:58.935]      // while "1"  (timeout="10000")
[09:03:58.935]      // while-condition  =>  TRUE
[09:03:58.935]      // while "1"  (timeout="10000")
[09:03:58.936]      // while-condition  =>  TRUE
[09:03:58.936]      // while "1"  (timeout="10000")
[09:03:58.936]      // while-condition  =>  TRUE
[09:03:58.936]      // while "1"  (timeout="10000")
[09:03:58.937]      // while-condition  =>  TRUE
[09:03:58.937]      // while "1"  (timeout="10000")
[09:03:58.937]      // while-condition  =>  TRUE
[09:03:58.937]      // while "1"  (timeout="10000")
[09:03:58.938]      // while-condition  =>  TRUE
[09:03:58.938]      // while "1"  (timeout="10000")
[09:03:58.938]      // while-condition  =>  TRUE
[09:03:58.938]      // while "1"  (timeout="10000")
[09:03:58.938]      // while-condition  =>  TRUE
[09:03:58.939]      // while "1"  (timeout="10000")
[09:03:58.939]      // while-condition  =>  TRUE
[09:03:58.939]      // while "1"  (timeout="10000")
[09:03:58.939]      // while-condition  =>  TRUE
[09:03:58.940]      // while "1"  (timeout="10000")
[09:03:58.940]      // while-condition  =>  TRUE
[09:03:58.954]      // while "1"  (timeout="10000")
[09:03:58.955]      // while  =>  TIMEOUT
[09:03:58.955]      // end while "1"
[09:03:58.955]    </control>
[09:03:58.955]    <block atomic="true" info="">
[09:03:58.962]  
[09:03:58.962]  ! W001 : No atomic sequence support in debug unit
[09:03:58.962]  
[09:03:58.964]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:03:58.966]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:03:58.966]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:03:58.973]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:03:58.973]    </block>
[09:03:58.974]    <block atomic="false" info="">
[09:03:58.974]      __errorcontrol = 0x00000001;
[09:03:58.974]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:03:58.974]      ReadDP(0x0);
[09:03:58.976]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:03:58.976]      __errorcontrol = 0x00000000;
[09:03:58.977]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:03:58.977]    </block>
[09:03:58.977]  </sequence>
[09:03:58.978]  
[09:03:58.985]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[09:03:58.985]  
[09:03:59.000]  <debugvars>
[09:03:59.000]    // Pre-defined
[09:03:59.000]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:03:59.001]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:03:59.001]    __dp=0x00000000
[09:03:59.001]    __ap=0x00000000
[09:03:59.001]    __traceout=0x00000000      (Trace Disabled)
[09:03:59.002]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:03:59.002]    __FlashAddr=0x00000000
[09:03:59.002]    __FlashLen=0x00000000
[09:03:59.002]    __FlashArg=0x00000000
[09:03:59.003]    __FlashOp=0x00000000
[09:03:59.003]    __Result=0x00000000
[09:03:59.003]  </debugvars>
[09:03:59.003]  
[09:03:59.004]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[09:03:59.004]    <block atomic="false" info="">
[09:03:59.004]    </block>
[09:03:59.004]  </sequence>
[09:03:59.005]  
[09:03:59.240]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[09:03:59.240]  
[09:03:59.242]  <debugvars>
[09:03:59.242]    // Pre-defined
[09:03:59.243]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:03:59.244]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:03:59.244]    __dp=0x00000000
[09:03:59.244]    __ap=0x00000000
[09:03:59.245]    __traceout=0x00000000      (Trace Disabled)
[09:03:59.248]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:03:59.250]    __FlashAddr=0x00000000
[09:03:59.254]    __FlashLen=0x00000000
[09:03:59.254]    __FlashArg=0x00000000
[09:03:59.255]    __FlashOp=0x00000000
[09:03:59.256]    __Result=0x00000000
[09:03:59.256]  </debugvars>
[09:03:59.257]  
[09:03:59.257]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[09:03:59.258]    <block atomic="false" info="">
[09:03:59.258]      Sequence("ResetHardware");
[09:03:59.260]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:03:59.260]          <block atomic="false" info="">
[09:03:59.264]            __var nReset      = 0x80;
[09:03:59.264]              // -> [nReset <= 0x00000080]
[09:03:59.274]            DAP_SWJ_Pins(0x00, nReset, 0);
[09:03:59.276]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:03:59.277]          </block>
[09:03:59.277]          <control if="" while="1" timeout="50000" info="">
[09:03:59.278]            // while "1"  (timeout="50000")
[09:03:59.278]            // while-condition  =>  TRUE
[09:03:59.282]            // while "1"  (timeout="50000")
[09:03:59.283]            // while-condition  =>  TRUE
[09:03:59.284]            // while "1"  (timeout="50000")
[09:03:59.284]            // while-condition  =>  TRUE
[09:03:59.284]            // while "1"  (timeout="50000")
[09:03:59.285]            // while-condition  =>  TRUE
[09:03:59.285]            // while "1"  (timeout="50000")
[09:03:59.286]            // while-condition  =>  TRUE
[09:03:59.286]            // while "1"  (timeout="50000")
[09:03:59.287]            // while-condition  =>  TRUE
[09:03:59.288]            // while "1"  (timeout="50000")
[09:03:59.288]            // while-condition  =>  TRUE
[09:03:59.289]            // while "1"  (timeout="50000")
[09:03:59.290]            // while-condition  =>  TRUE
[09:03:59.291]            // while "1"  (timeout="50000")
[09:03:59.291]            // while-condition  =>  TRUE
[09:03:59.292]            // while "1"  (timeout="50000")
[09:03:59.292]            // while-condition  =>  TRUE
[09:03:59.292]            // while "1"  (timeout="50000")
[09:03:59.293]            // while-condition  =>  TRUE
[09:03:59.294]            // while "1"  (timeout="50000")
[09:03:59.294]            // while-condition  =>  TRUE
[09:03:59.294]            // while "1"  (timeout="50000")
[09:03:59.295]            // while-condition  =>  TRUE
[09:03:59.295]            // while "1"  (timeout="50000")
[09:03:59.296]            // while-condition  =>  TRUE
[09:03:59.297]            // while "1"  (timeout="50000")
[09:03:59.297]            // while-condition  =>  TRUE
[09:03:59.298]            // while "1"  (timeout="50000")
[09:03:59.298]            // while-condition  =>  TRUE
[09:03:59.298]            // while "1"  (timeout="50000")
[09:03:59.299]            // while-condition  =>  TRUE
[09:03:59.299]            // while "1"  (timeout="50000")
[09:03:59.300]            // while-condition  =>  TRUE
[09:03:59.300]            // while "1"  (timeout="50000")
[09:03:59.300]            // while-condition  =>  TRUE
[09:03:59.301]            // while "1"  (timeout="50000")
[09:03:59.301]            // while-condition  =>  TRUE
[09:03:59.302]            // while "1"  (timeout="50000")
[09:03:59.302]            // while-condition  =>  TRUE
[09:03:59.302]            // while "1"  (timeout="50000")
[09:03:59.303]            // while-condition  =>  TRUE
[09:03:59.303]            // while "1"  (timeout="50000")
[09:03:59.303]            // while-condition  =>  TRUE
[09:03:59.304]            // while "1"  (timeout="50000")
[09:03:59.304]            // while-condition  =>  TRUE
[09:03:59.305]            // while "1"  (timeout="50000")
[09:03:59.306]            // while-condition  =>  TRUE
[09:03:59.306]            // while "1"  (timeout="50000")
[09:03:59.307]            // while-condition  =>  TRUE
[09:03:59.307]            // while "1"  (timeout="50000")
[09:03:59.308]            // while-condition  =>  TRUE
[09:03:59.308]            // while "1"  (timeout="50000")
[09:03:59.308]            // while-condition  =>  TRUE
[09:03:59.308]            // while "1"  (timeout="50000")
[09:03:59.309]            // while-condition  =>  TRUE
[09:03:59.309]            // while "1"  (timeout="50000")
[09:03:59.309]            // while-condition  =>  TRUE
[09:03:59.309]            // while "1"  (timeout="50000")
[09:03:59.309]            // while-condition  =>  TRUE
[09:03:59.309]            // while "1"  (timeout="50000")
[09:03:59.309]            // while-condition  =>  TRUE
[09:03:59.310]            // while "1"  (timeout="50000")
[09:03:59.311]            // while-condition  =>  TRUE
[09:03:59.311]            // while "1"  (timeout="50000")
[09:03:59.311]            // while-condition  =>  TRUE
[09:03:59.311]            // while "1"  (timeout="50000")
[09:03:59.311]            // while-condition  =>  TRUE
[09:03:59.311]            // while "1"  (timeout="50000")
[09:03:59.311]            // while-condition  =>  TRUE
[09:03:59.311]            // while "1"  (timeout="50000")
[09:03:59.312]            // while-condition  =>  TRUE
[09:03:59.312]            // while "1"  (timeout="50000")
[09:03:59.312]            // while-condition  =>  TRUE
[09:03:59.312]            // while "1"  (timeout="50000")
[09:03:59.312]            // while-condition  =>  TRUE
[09:03:59.312]            // while "1"  (timeout="50000")
[09:03:59.313]            // while-condition  =>  TRUE
[09:03:59.323]            // while "1"  (timeout="50000")
[09:03:59.324]            // while-condition  =>  TRUE
[09:03:59.324]            // while "1"  (timeout="50000")
[09:03:59.324]            // while-condition  =>  TRUE
[09:03:59.325]            // while "1"  (timeout="50000")
[09:03:59.331]            // while-condition  =>  TRUE
[09:03:59.331]            // while "1"  (timeout="50000")
[09:03:59.331]            // while-condition  =>  TRUE
[09:03:59.333]            // while "1"  (timeout="50000")
[09:03:59.334]            // while-condition  =>  TRUE
[09:03:59.334]            // while "1"  (timeout="50000")
[09:03:59.334]            // while  =>  TIMEOUT
[09:03:59.335]            // end while "1"
[09:03:59.335]          </control>
[09:03:59.336]          <block atomic="false" info="">
[09:03:59.337]            DAP_SWJ_Pins(nReset, nReset, 0);
[09:03:59.340]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:03:59.340]          </block>
[09:03:59.341]          <control if="" while="1" timeout="10000" info="">
[09:03:59.342]            // while "1"  (timeout="10000")
[09:03:59.343]            // while-condition  =>  TRUE
[09:03:59.343]            // while "1"  (timeout="10000")
[09:03:59.343]            // while-condition  =>  TRUE
[09:03:59.353]            // while "1"  (timeout="10000")
[09:03:59.354]            // while  =>  TIMEOUT
[09:03:59.354]            // end while "1"
[09:03:59.354]          </control>
[09:03:59.355]          <block atomic="true" info="">
[09:03:59.358]  
[09:03:59.358]  ! W001 : No atomic sequence support in debug unit
[09:03:59.358]  
[09:03:59.360]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:03:59.362]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:03:59.363]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:03:59.365]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:03:59.366]          </block>
[09:03:59.366]          <block atomic="false" info="">
[09:03:59.366]            __errorcontrol = 0x00000001;
[09:03:59.368]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:03:59.369]            ReadDP(0x0);
[09:03:59.371]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:03:59.371]            __errorcontrol = 0x00000000;
[09:03:59.371]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:03:59.372]          </block>
[09:03:59.373]        </sequence>
[09:03:59.373]      Sequence("DebugPortSetup");
[09:03:59.373]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:03:59.373]        </sequence>
[09:03:59.373]      Sequence("DebugPortStart");
[09:03:59.373]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:03:59.374]          <block atomic="false" info="">
[09:03:59.374]            __var SW_DP_ABORT  = 0x0;
[09:03:59.374]              // -> [SW_DP_ABORT <= 0x00000000]
[09:03:59.374]            __var DP_CTRL_STAT = 0x4;
[09:03:59.375]              // -> [DP_CTRL_STAT <= 0x00000004]
[09:03:59.376]            __var DP_SELECT    = 0x8;
[09:03:59.376]              // -> [DP_SELECT <= 0x00000008]
[09:03:59.376]            __var powered_down = 0;
[09:03:59.377]              // -> [powered_down <= 0x00000000]
[09:03:59.377]            WriteDP(DP_SELECT, 0x00000000);
[09:03:59.379]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:03:59.380]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:03:59.382]              // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:03:59.382]              // -> [powered_down <= 0x00000000]
[09:03:59.382]          </block>
[09:03:59.384]          <control if="powered_down" while="" timeout="0" info="">
[09:03:59.384]            // if-block "powered_down"
[09:03:59.386]              // =>  FALSE
[09:03:59.386]            // skip if-block "powered_down"
[09:03:59.387]          </control>
[09:03:59.387]        </sequence>
[09:03:59.388]      Sequence("DebugCoreStart");
[09:03:59.389]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:03:59.389]          <block atomic="true" info="">
[09:03:59.393]  
[09:03:59.393]  ! W001 : No atomic sequence support in debug unit
[09:03:59.393]  
[09:03:59.395]            __var DP_R_IDCODE    = 0x0;
[09:03:59.409]              // -> [DP_R_IDCODE <= 0x00000000]
[09:03:59.410]            __var DP_W_ABORT    = 0x0;
[09:03:59.410]              // -> [DP_W_ABORT <= 0x00000000]
[09:03:59.411]            __var DP_CTRLSTAT = 0x4;
[09:03:59.411]              // -> [DP_CTRLSTAT <= 0x00000004]
[09:03:59.411]            __var DP_W_SELECT    = 0x8;
[09:03:59.417]              // -> [DP_W_SELECT <= 0x00000008]
[09:03:59.417]            __var AP_TAR		= 0x4;
[09:03:59.417]              // -> [AP_TAR <= 0x00000004]
[09:03:59.418]            __var AP_BD0		= 0x0;
[09:03:59.418]              // -> [AP_BD0 <= 0x00000000]
[09:03:59.420]            __var AP_BD1		= 0x4;
[09:03:59.420]              // -> [AP_BD1 <= 0x00000004]
[09:03:59.420]            __var AP_BD2		= 0x8;
[09:03:59.421]              // -> [AP_BD2 <= 0x00000008]
[09:03:59.421]            __var PCWithinFlash = 0;
[09:03:59.422]              // -> [PCWithinFlash <= 0x00000000]
[09:03:59.422]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:03:59.428]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.428]          </block>
[09:03:59.428]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:03:59.429]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:03:59.435]              // -> [Read32(0xE000EDF0) => 0x00030003]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.436]            // while-condition  =>  FALSE
[09:03:59.436]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:03:59.436]          </control>
[09:03:59.436]          <block atomic="true" info="">
[09:03:59.439]  
[09:03:59.439]  ! W001 : No atomic sequence support in debug unit
[09:03:59.439]  
[09:03:59.442]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:03:59.445]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:03:59.445]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:03:59.448]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.449]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:03:59.451]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:03:59.451]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:03:59.456]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.461]          </block>
[09:03:59.461]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:03:59.465]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.468]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.468]            // while-condition  =>  TRUE
[09:03:59.469]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.472]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.474]            // while-condition  =>  TRUE
[09:03:59.474]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.477]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.478]            // while-condition  =>  TRUE
[09:03:59.478]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.481]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.485]            // while-condition  =>  TRUE
[09:03:59.486]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.489]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.490]            // while-condition  =>  TRUE
[09:03:59.491]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.493]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.494]            // while-condition  =>  TRUE
[09:03:59.494]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.497]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.497]            // while-condition  =>  TRUE
[09:03:59.498]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.501]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.503]            // while-condition  =>  TRUE
[09:03:59.503]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.506]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.506]            // while-condition  =>  TRUE
[09:03:59.506]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.509]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.509]            // while-condition  =>  TRUE
[09:03:59.509]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.512]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.512]            // while-condition  =>  TRUE
[09:03:59.512]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.515]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.515]            // while-condition  =>  TRUE
[09:03:59.515]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.518]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.518]            // while-condition  =>  TRUE
[09:03:59.518]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.521]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.521]            // while-condition  =>  TRUE
[09:03:59.521]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.524]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.524]            // while-condition  =>  TRUE
[09:03:59.524]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.527]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.527]            // while-condition  =>  TRUE
[09:03:59.527]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.530]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.530]            // while-condition  =>  TRUE
[09:03:59.530]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.533]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.533]            // while-condition  =>  TRUE
[09:03:59.533]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.536]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.536]            // while-condition  =>  TRUE
[09:03:59.536]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.539]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.539]            // while-condition  =>  TRUE
[09:03:59.540]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.542]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.542]            // while-condition  =>  TRUE
[09:03:59.542]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.545]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.545]            // while-condition  =>  TRUE
[09:03:59.545]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.548]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.548]            // while-condition  =>  TRUE
[09:03:59.549]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.551]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.551]            // while-condition  =>  TRUE
[09:03:59.552]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.554]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.554]            // while-condition  =>  TRUE
[09:03:59.555]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.557]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.557]            // while-condition  =>  TRUE
[09:03:59.558]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.560]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.560]            // while-condition  =>  TRUE
[09:03:59.561]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.563]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.563]            // while-condition  =>  TRUE
[09:03:59.564]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.566]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.566]            // while-condition  =>  TRUE
[09:03:59.567]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.569]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.569]            // while-condition  =>  TRUE
[09:03:59.570]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:03:59.570]            // while  =>  TIMEOUT
[09:03:59.570]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:03:59.571]          </control>
[09:03:59.571]          <block atomic="false" info="">
[09:03:59.572]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:03:59.574]              // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:03:59.574]              // -> [PCWithinFlash <= 0x00000000]
[09:03:59.575]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:03:59.577]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:03:59.577]          </block>
[09:03:59.577]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:03:59.578]            // if-block "PCWithinFlash == 0"
[09:03:59.578]              // =>  TRUE
[09:03:59.578]            // end if-block "PCWithinFlash == 0"
[09:03:59.579]          </control>
[09:03:59.579]        </sequence>
[09:03:59.579]    </block>
[09:03:59.580]  </sequence>
[09:03:59.580]  
[09:04:10.660]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[09:04:10.660]  
[09:04:10.661]  <debugvars>
[09:04:10.661]    // Pre-defined
[09:04:10.661]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:04:10.663]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:04:10.663]    __dp=0x00000000
[09:04:10.664]    __ap=0x00000000
[09:04:10.664]    __traceout=0x00000000      (Trace Disabled)
[09:04:10.664]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:04:10.665]    __FlashAddr=0x00000000
[09:04:10.665]    __FlashLen=0x00000000
[09:04:10.666]    __FlashArg=0x00000000
[09:04:10.666]    __FlashOp=0x00000000
[09:04:10.666]    __Result=0x00000000
[09:04:10.666]  </debugvars>
[09:04:10.667]  
[09:04:10.668]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[09:04:10.668]    <block atomic="false" info="">
[09:04:10.668]      __var nReset      = 0x80;
[09:04:10.668]        // -> [nReset <= 0x00000080]
[09:04:10.669]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:04:10.670]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:04:10.671]    </block>
[09:04:10.671]    <control if="" while="1" timeout="50000" info="">
[09:04:10.671]      // while "1"  (timeout="50000")
[09:04:10.671]      // while-condition  =>  TRUE
[09:04:10.672]      // while "1"  (timeout="50000")
[09:04:10.672]      // while-condition  =>  TRUE
[09:04:10.672]      // while "1"  (timeout="50000")
[09:04:10.672]      // while-condition  =>  TRUE
[09:04:10.673]      // while "1"  (timeout="50000")
[09:04:10.674]      // while-condition  =>  TRUE
[09:04:10.674]      // while "1"  (timeout="50000")
[09:04:10.674]      // while-condition  =>  TRUE
[09:04:10.674]      // while "1"  (timeout="50000")
[09:04:10.675]      // while-condition  =>  TRUE
[09:04:10.675]      // while "1"  (timeout="50000")
[09:04:10.675]      // while-condition  =>  TRUE
[09:04:10.675]      // while "1"  (timeout="50000")
[09:04:10.675]      // while-condition  =>  TRUE
[09:04:10.675]      // while "1"  (timeout="50000")
[09:04:10.675]      // while-condition  =>  TRUE
[09:04:10.676]      // while "1"  (timeout="50000")
[09:04:10.676]      // while-condition  =>  TRUE
[09:04:10.676]      // while "1"  (timeout="50000")
[09:04:10.676]      // while-condition  =>  TRUE
[09:04:10.677]      // while "1"  (timeout="50000")
[09:04:10.677]      // while-condition  =>  TRUE
[09:04:10.677]      // while "1"  (timeout="50000")
[09:04:10.677]      // while-condition  =>  TRUE
[09:04:10.678]      // while "1"  (timeout="50000")
[09:04:10.679]      // while-condition  =>  TRUE
[09:04:10.679]      // while "1"  (timeout="50000")
[09:04:10.679]      // while-condition  =>  TRUE
[09:04:10.679]      // while "1"  (timeout="50000")
[09:04:10.679]      // while-condition  =>  TRUE
[09:04:10.679]      // while "1"  (timeout="50000")
[09:04:10.680]      // while-condition  =>  TRUE
[09:04:10.680]      // while "1"  (timeout="50000")
[09:04:10.680]      // while-condition  =>  TRUE
[09:04:10.680]      // while "1"  (timeout="50000")
[09:04:10.680]      // while-condition  =>  TRUE
[09:04:10.681]      // while "1"  (timeout="50000")
[09:04:10.681]      // while-condition  =>  TRUE
[09:04:10.681]      // while "1"  (timeout="50000")
[09:04:10.681]      // while-condition  =>  TRUE
[09:04:10.681]      // while "1"  (timeout="50000")
[09:04:10.682]      // while-condition  =>  TRUE
[09:04:10.682]      // while "1"  (timeout="50000")
[09:04:10.682]      // while-condition  =>  TRUE
[09:04:10.682]      // while "1"  (timeout="50000")
[09:04:10.682]      // while-condition  =>  TRUE
[09:04:10.682]      // while "1"  (timeout="50000")
[09:04:10.683]      // while-condition  =>  TRUE
[09:04:10.683]      // while "1"  (timeout="50000")
[09:04:10.683]      // while-condition  =>  TRUE
[09:04:10.683]      // while "1"  (timeout="50000")
[09:04:10.683]      // while-condition  =>  TRUE
[09:04:10.684]      // while "1"  (timeout="50000")
[09:04:10.684]      // while-condition  =>  TRUE
[09:04:10.684]      // while "1"  (timeout="50000")
[09:04:10.684]      // while-condition  =>  TRUE
[09:04:10.684]      // while "1"  (timeout="50000")
[09:04:10.685]      // while-condition  =>  TRUE
[09:04:10.685]      // while "1"  (timeout="50000")
[09:04:10.685]      // while-condition  =>  TRUE
[09:04:10.685]      // while "1"  (timeout="50000")
[09:04:10.685]      // while-condition  =>  TRUE
[09:04:10.685]      // while "1"  (timeout="50000")
[09:04:10.685]      // while-condition  =>  TRUE
[09:04:10.685]      // while "1"  (timeout="50000")
[09:04:10.685]      // while-condition  =>  TRUE
[09:04:10.686]      // while "1"  (timeout="50000")
[09:04:10.686]      // while-condition  =>  TRUE
[09:04:10.686]      // while "1"  (timeout="50000")
[09:04:10.686]      // while-condition  =>  TRUE
[09:04:10.686]      // while "1"  (timeout="50000")
[09:04:10.686]      // while-condition  =>  TRUE
[09:04:10.687]      // while "1"  (timeout="50000")
[09:04:10.687]      // while-condition  =>  TRUE
[09:04:10.687]      // while "1"  (timeout="50000")
[09:04:10.687]      // while-condition  =>  TRUE
[09:04:10.688]      // while "1"  (timeout="50000")
[09:04:10.689]      // while-condition  =>  TRUE
[09:04:10.689]      // while "1"  (timeout="50000")
[09:04:10.689]      // while-condition  =>  TRUE
[09:04:10.689]      // while "1"  (timeout="50000")
[09:04:10.689]      // while-condition  =>  TRUE
[09:04:10.690]      // while "1"  (timeout="50000")
[09:04:10.690]      // while-condition  =>  TRUE
[09:04:10.690]      // while "1"  (timeout="50000")
[09:04:10.690]      // while-condition  =>  TRUE
[09:04:10.690]      // while "1"  (timeout="50000")
[09:04:10.691]      // while-condition  =>  TRUE
[09:04:10.691]      // while "1"  (timeout="50000")
[09:04:10.691]      // while-condition  =>  TRUE
[09:04:10.691]      // while "1"  (timeout="50000")
[09:04:10.691]      // while-condition  =>  TRUE
[09:04:10.691]      // while "1"  (timeout="50000")
[09:04:10.691]      // while-condition  =>  TRUE
[09:04:10.691]      // while "1"  (timeout="50000")
[09:04:10.691]      // while-condition  =>  TRUE
[09:04:10.692]      // while "1"  (timeout="50000")
[09:04:10.692]      // while-condition  =>  TRUE
[09:04:10.692]      // while "1"  (timeout="50000")
[09:04:10.692]      // while-condition  =>  TRUE
[09:04:10.692]      // while "1"  (timeout="50000")
[09:04:10.693]      // while-condition  =>  TRUE
[09:04:10.693]      // while "1"  (timeout="50000")
[09:04:10.693]      // while-condition  =>  TRUE
[09:04:10.693]      // while "1"  (timeout="50000")
[09:04:10.694]      // while-condition  =>  TRUE
[09:04:10.694]      // while "1"  (timeout="50000")
[09:04:10.694]      // while-condition  =>  TRUE
[09:04:10.694]      // while "1"  (timeout="50000")
[09:04:10.694]      // while-condition  =>  TRUE
[09:04:10.695]      // while "1"  (timeout="50000")
[09:04:10.695]      // while-condition  =>  TRUE
[09:04:10.695]      // while "1"  (timeout="50000")
[09:04:10.695]      // while-condition  =>  TRUE
[09:04:10.696]      // while "1"  (timeout="50000")
[09:04:10.696]      // while-condition  =>  TRUE
[09:04:10.696]      // while "1"  (timeout="50000")
[09:04:10.696]      // while-condition  =>  TRUE
[09:04:10.697]      // while "1"  (timeout="50000")
[09:04:10.697]      // while-condition  =>  TRUE
[09:04:10.697]      // while "1"  (timeout="50000")
[09:04:10.697]      // while-condition  =>  TRUE
[09:04:10.698]      // while "1"  (timeout="50000")
[09:04:10.699]      // while-condition  =>  TRUE
[09:04:10.699]      // while "1"  (timeout="50000")
[09:04:10.699]      // while-condition  =>  TRUE
[09:04:10.699]      // while "1"  (timeout="50000")
[09:04:10.700]      // while-condition  =>  TRUE
[09:04:10.700]      // while "1"  (timeout="50000")
[09:04:10.700]      // while-condition  =>  TRUE
[09:04:10.700]      // while "1"  (timeout="50000")
[09:04:10.700]      // while-condition  =>  TRUE
[09:04:10.701]      // while "1"  (timeout="50000")
[09:04:10.701]      // while-condition  =>  TRUE
[09:04:10.701]      // while "1"  (timeout="50000")
[09:04:10.701]      // while-condition  =>  TRUE
[09:04:10.701]      // while "1"  (timeout="50000")
[09:04:10.701]      // while-condition  =>  TRUE
[09:04:10.701]      // while "1"  (timeout="50000")
[09:04:10.701]      // while-condition  =>  TRUE
[09:04:10.701]      // while "1"  (timeout="50000")
[09:04:10.702]      // while-condition  =>  TRUE
[09:04:10.703]      // while "1"  (timeout="50000")
[09:04:10.703]      // while-condition  =>  TRUE
[09:04:10.703]      // while "1"  (timeout="50000")
[09:04:10.703]      // while-condition  =>  TRUE
[09:04:10.703]      // while "1"  (timeout="50000")
[09:04:10.703]      // while-condition  =>  TRUE
[09:04:10.704]      // while "1"  (timeout="50000")
[09:04:10.704]      // while-condition  =>  TRUE
[09:04:10.704]      // while "1"  (timeout="50000")
[09:04:10.704]      // while-condition  =>  TRUE
[09:04:10.704]      // while "1"  (timeout="50000")
[09:04:10.705]      // while-condition  =>  TRUE
[09:04:10.705]      // while "1"  (timeout="50000")
[09:04:10.705]      // while-condition  =>  TRUE
[09:04:10.705]      // while "1"  (timeout="50000")
[09:04:10.705]      // while-condition  =>  TRUE
[09:04:10.706]      // while "1"  (timeout="50000")
[09:04:10.706]      // while-condition  =>  TRUE
[09:04:10.706]      // while "1"  (timeout="50000")
[09:04:10.706]      // while-condition  =>  TRUE
[09:04:10.706]      // while "1"  (timeout="50000")
[09:04:10.706]      // while-condition  =>  TRUE
[09:04:10.706]      // while "1"  (timeout="50000")
[09:04:10.706]      // while-condition  =>  TRUE
[09:04:10.706]      // while "1"  (timeout="50000")
[09:04:10.707]      // while-condition  =>  TRUE
[09:04:10.707]      // while "1"  (timeout="50000")
[09:04:10.707]      // while-condition  =>  TRUE
[09:04:10.707]      // while "1"  (timeout="50000")
[09:04:10.707]      // while-condition  =>  TRUE
[09:04:10.708]      // while "1"  (timeout="50000")
[09:04:10.708]      // while-condition  =>  TRUE
[09:04:10.708]      // while "1"  (timeout="50000")
[09:04:10.708]      // while-condition  =>  TRUE
[09:04:10.708]      // while "1"  (timeout="50000")
[09:04:10.709]      // while-condition  =>  TRUE
[09:04:10.710]      // while "1"  (timeout="50000")
[09:04:10.710]      // while-condition  =>  TRUE
[09:04:10.710]      // while "1"  (timeout="50000")
[09:04:10.710]      // while-condition  =>  TRUE
[09:04:10.710]      // while "1"  (timeout="50000")
[09:04:10.711]      // while-condition  =>  TRUE
[09:04:10.711]      // while "1"  (timeout="50000")
[09:04:10.711]      // while-condition  =>  TRUE
[09:04:10.711]      // while "1"  (timeout="50000")
[09:04:10.712]      // while-condition  =>  TRUE
[09:04:10.712]      // while "1"  (timeout="50000")
[09:04:10.712]      // while-condition  =>  TRUE
[09:04:10.712]      // while "1"  (timeout="50000")
[09:04:10.712]      // while-condition  =>  TRUE
[09:04:10.713]      // while "1"  (timeout="50000")
[09:04:10.713]      // while-condition  =>  TRUE
[09:04:10.713]      // while "1"  (timeout="50000")
[09:04:10.713]      // while-condition  =>  TRUE
[09:04:10.713]      // while "1"  (timeout="50000")
[09:04:10.714]      // while-condition  =>  TRUE
[09:04:10.714]      // while "1"  (timeout="50000")
[09:04:10.714]      // while-condition  =>  TRUE
[09:04:10.714]      // while "1"  (timeout="50000")
[09:04:10.714]      // while-condition  =>  TRUE
[09:04:10.715]      // while "1"  (timeout="50000")
[09:04:10.715]      // while-condition  =>  TRUE
[09:04:10.715]      // while "1"  (timeout="50000")
[09:04:10.715]      // while-condition  =>  TRUE
[09:04:10.715]      // while "1"  (timeout="50000")
[09:04:10.715]      // while-condition  =>  TRUE
[09:04:10.716]      // while "1"  (timeout="50000")
[09:04:10.716]      // while-condition  =>  TRUE
[09:04:10.716]      // while "1"  (timeout="50000")
[09:04:10.716]      // while-condition  =>  TRUE
[09:04:10.716]      // while "1"  (timeout="50000")
[09:04:10.717]      // while-condition  =>  TRUE
[09:04:10.717]      // while "1"  (timeout="50000")
[09:04:10.717]      // while-condition  =>  TRUE
[09:04:10.717]      // while "1"  (timeout="50000")
[09:04:10.717]      // while-condition  =>  TRUE
[09:04:10.717]      // while "1"  (timeout="50000")
[09:04:10.717]      // while-condition  =>  TRUE
[09:04:10.717]      // while "1"  (timeout="50000")
[09:04:10.717]      // while-condition  =>  TRUE
[09:04:10.718]      // while "1"  (timeout="50000")
[09:04:10.718]      // while-condition  =>  TRUE
[09:04:10.718]      // while "1"  (timeout="50000")
[09:04:10.718]      // while-condition  =>  TRUE
[09:04:10.718]      // while "1"  (timeout="50000")
[09:04:10.719]      // while-condition  =>  TRUE
[09:04:10.720]      // while "1"  (timeout="50000")
[09:04:10.720]      // while-condition  =>  TRUE
[09:04:10.720]      // while "1"  (timeout="50000")
[09:04:10.720]      // while-condition  =>  TRUE
[09:04:10.720]      // while "1"  (timeout="50000")
[09:04:10.721]      // while-condition  =>  TRUE
[09:04:10.721]      // while "1"  (timeout="50000")
[09:04:10.721]      // while-condition  =>  TRUE
[09:04:10.721]      // while "1"  (timeout="50000")
[09:04:10.721]      // while-condition  =>  TRUE
[09:04:10.721]      // while "1"  (timeout="50000")
[09:04:10.722]      // while-condition  =>  TRUE
[09:04:10.722]      // while "1"  (timeout="50000")
[09:04:10.722]      // while-condition  =>  TRUE
[09:04:10.722]      // while "1"  (timeout="50000")
[09:04:10.722]      // while-condition  =>  TRUE
[09:04:10.722]      // while "1"  (timeout="50000")
[09:04:10.722]      // while-condition  =>  TRUE
[09:04:10.722]      // while "1"  (timeout="50000")
[09:04:10.722]      // while-condition  =>  TRUE
[09:04:10.723]      // while "1"  (timeout="50000")
[09:04:10.723]      // while-condition  =>  TRUE
[09:04:10.723]      // while "1"  (timeout="50000")
[09:04:10.723]      // while-condition  =>  TRUE
[09:04:10.723]      // while "1"  (timeout="50000")
[09:04:10.724]      // while-condition  =>  TRUE
[09:04:10.724]      // while "1"  (timeout="50000")
[09:04:10.724]      // while-condition  =>  TRUE
[09:04:10.724]      // while "1"  (timeout="50000")
[09:04:10.724]      // while-condition  =>  TRUE
[09:04:10.725]      // while "1"  (timeout="50000")
[09:04:10.726]      // while  =>  TIMEOUT
[09:04:10.726]      // end while "1"
[09:04:10.726]    </control>
[09:04:10.726]    <block atomic="false" info="">
[09:04:10.726]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:04:10.728]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:04:10.728]    </block>
[09:04:10.728]  </sequence>
[09:04:10.728]  
[09:05:08.976]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:05:08.976]  
[09:05:08.976]  <debugvars>
[09:05:08.977]    // Pre-defined
[09:05:08.977]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:05:08.978]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:05:08.978]    __dp=0x00000000
[09:05:08.978]    __ap=0x00000000
[09:05:08.979]    __traceout=0x00000000      (Trace Disabled)
[09:05:08.979]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:05:08.979]    __FlashAddr=0x00000000
[09:05:08.980]    __FlashLen=0x00000000
[09:05:08.980]    __FlashArg=0x00000000
[09:05:08.980]    __FlashOp=0x00000000
[09:05:08.981]    __Result=0x00000000
[09:05:08.981]  </debugvars>
[09:05:08.982]  
[09:05:08.982]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:05:08.982]    <block atomic="false" info="">
[09:05:08.983]      __var nReset      = 0x80;
[09:05:08.983]        // -> [nReset <= 0x00000080]
[09:05:08.983]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:05:08.985]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:05:08.985]    </block>
[09:05:08.986]    <control if="" while="1" timeout="50000" info="">
[09:05:08.986]      // while "1"  (timeout="50000")
[09:05:08.986]      // while-condition  =>  TRUE
[09:05:08.987]      // while "1"  (timeout="50000")
[09:05:08.987]      // while-condition  =>  TRUE
[09:05:08.987]      // while "1"  (timeout="50000")
[09:05:08.988]      // while-condition  =>  TRUE
[09:05:08.988]      // while "1"  (timeout="50000")
[09:05:08.988]      // while-condition  =>  TRUE
[09:05:08.988]      // while "1"  (timeout="50000")
[09:05:08.989]      // while-condition  =>  TRUE
[09:05:08.989]      // while "1"  (timeout="50000")
[09:05:08.989]      // while-condition  =>  TRUE
[09:05:08.990]      // while "1"  (timeout="50000")
[09:05:08.990]      // while-condition  =>  TRUE
[09:05:08.990]      // while "1"  (timeout="50000")
[09:05:08.991]      // while-condition  =>  TRUE
[09:05:08.991]      // while "1"  (timeout="50000")
[09:05:08.991]      // while-condition  =>  TRUE
[09:05:08.991]      // while "1"  (timeout="50000")
[09:05:08.992]      // while-condition  =>  TRUE
[09:05:08.992]      // while "1"  (timeout="50000")
[09:05:08.992]      // while-condition  =>  TRUE
[09:05:08.993]      // while "1"  (timeout="50000")
[09:05:08.993]      // while-condition  =>  TRUE
[09:05:08.993]      // while "1"  (timeout="50000")
[09:05:08.994]      // while-condition  =>  TRUE
[09:05:08.994]      // while "1"  (timeout="50000")
[09:05:08.994]      // while-condition  =>  TRUE
[09:05:08.995]      // while "1"  (timeout="50000")
[09:05:08.995]      // while-condition  =>  TRUE
[09:05:08.995]      // while "1"  (timeout="50000")
[09:05:08.996]      // while-condition  =>  TRUE
[09:05:08.996]      // while "1"  (timeout="50000")
[09:05:08.996]      // while-condition  =>  TRUE
[09:05:08.997]      // while "1"  (timeout="50000")
[09:05:08.997]      // while-condition  =>  TRUE
[09:05:08.997]      // while "1"  (timeout="50000")
[09:05:08.998]      // while-condition  =>  TRUE
[09:05:08.998]      // while "1"  (timeout="50000")
[09:05:08.998]      // while-condition  =>  TRUE
[09:05:08.999]      // while "1"  (timeout="50000")
[09:05:08.999]      // while-condition  =>  TRUE
[09:05:08.999]      // while "1"  (timeout="50000")
[09:05:08.999]      // while-condition  =>  TRUE
[09:05:09.000]      // while "1"  (timeout="50000")
[09:05:09.000]      // while-condition  =>  TRUE
[09:05:09.000]      // while "1"  (timeout="50000")
[09:05:09.000]      // while-condition  =>  TRUE
[09:05:09.001]      // while "1"  (timeout="50000")
[09:05:09.001]      // while-condition  =>  TRUE
[09:05:09.001]      // while "1"  (timeout="50000")
[09:05:09.001]      // while-condition  =>  TRUE
[09:05:09.001]      // while "1"  (timeout="50000")
[09:05:09.002]      // while-condition  =>  TRUE
[09:05:09.002]      // while "1"  (timeout="50000")
[09:05:09.002]      // while-condition  =>  TRUE
[09:05:09.002]      // while "1"  (timeout="50000")
[09:05:09.003]      // while-condition  =>  TRUE
[09:05:09.003]      // while "1"  (timeout="50000")
[09:05:09.003]      // while-condition  =>  TRUE
[09:05:09.003]      // while "1"  (timeout="50000")
[09:05:09.003]      // while-condition  =>  TRUE
[09:05:09.004]      // while "1"  (timeout="50000")
[09:05:09.004]      // while-condition  =>  TRUE
[09:05:09.004]      // while "1"  (timeout="50000")
[09:05:09.004]      // while-condition  =>  TRUE
[09:05:09.004]      // while "1"  (timeout="50000")
[09:05:09.005]      // while-condition  =>  TRUE
[09:05:09.005]      // while "1"  (timeout="50000")
[09:05:09.005]      // while-condition  =>  TRUE
[09:05:09.005]      // while "1"  (timeout="50000")
[09:05:09.005]      // while-condition  =>  TRUE
[09:05:09.006]      // while "1"  (timeout="50000")
[09:05:09.006]      // while-condition  =>  TRUE
[09:05:09.006]      // while "1"  (timeout="50000")
[09:05:09.006]      // while-condition  =>  TRUE
[09:05:09.006]      // while "1"  (timeout="50000")
[09:05:09.007]      // while-condition  =>  TRUE
[09:05:09.007]      // while "1"  (timeout="50000")
[09:05:09.007]      // while-condition  =>  TRUE
[09:05:09.007]      // while "1"  (timeout="50000")
[09:05:09.007]      // while-condition  =>  TRUE
[09:05:09.008]      // while "1"  (timeout="50000")
[09:05:09.008]      // while-condition  =>  TRUE
[09:05:09.008]      // while "1"  (timeout="50000")
[09:05:09.008]      // while-condition  =>  TRUE
[09:05:09.008]      // while "1"  (timeout="50000")
[09:05:09.009]      // while-condition  =>  TRUE
[09:05:09.009]      // while "1"  (timeout="50000")
[09:05:09.009]      // while-condition  =>  TRUE
[09:05:09.009]      // while "1"  (timeout="50000")
[09:05:09.009]      // while-condition  =>  TRUE
[09:05:09.010]      // while "1"  (timeout="50000")
[09:05:09.010]      // while-condition  =>  TRUE
[09:05:09.010]      // while "1"  (timeout="50000")
[09:05:09.010]      // while-condition  =>  TRUE
[09:05:09.010]      // while "1"  (timeout="50000")
[09:05:09.011]      // while-condition  =>  TRUE
[09:05:09.011]      // while "1"  (timeout="50000")
[09:05:09.011]      // while-condition  =>  TRUE
[09:05:09.011]      // while "1"  (timeout="50000")
[09:05:09.011]      // while-condition  =>  TRUE
[09:05:09.012]      // while "1"  (timeout="50000")
[09:05:09.012]      // while-condition  =>  TRUE
[09:05:09.012]      // while "1"  (timeout="50000")
[09:05:09.012]      // while-condition  =>  TRUE
[09:05:09.012]      // while "1"  (timeout="50000")
[09:05:09.013]      // while-condition  =>  TRUE
[09:05:09.013]      // while "1"  (timeout="50000")
[09:05:09.013]      // while-condition  =>  TRUE
[09:05:09.013]      // while "1"  (timeout="50000")
[09:05:09.013]      // while-condition  =>  TRUE
[09:05:09.014]      // while "1"  (timeout="50000")
[09:05:09.014]      // while-condition  =>  TRUE
[09:05:09.014]      // while "1"  (timeout="50000")
[09:05:09.014]      // while-condition  =>  TRUE
[09:05:09.014]      // while "1"  (timeout="50000")
[09:05:09.015]      // while-condition  =>  TRUE
[09:05:09.015]      // while "1"  (timeout="50000")
[09:05:09.015]      // while-condition  =>  TRUE
[09:05:09.015]      // while "1"  (timeout="50000")
[09:05:09.016]      // while-condition  =>  TRUE
[09:05:09.016]      // while "1"  (timeout="50000")
[09:05:09.016]      // while-condition  =>  TRUE
[09:05:09.016]      // while "1"  (timeout="50000")
[09:05:09.016]      // while-condition  =>  TRUE
[09:05:09.017]      // while "1"  (timeout="50000")
[09:05:09.017]      // while-condition  =>  TRUE
[09:05:09.017]      // while "1"  (timeout="50000")
[09:05:09.017]      // while-condition  =>  TRUE
[09:05:09.017]      // while "1"  (timeout="50000")
[09:05:09.018]      // while-condition  =>  TRUE
[09:05:09.018]      // while "1"  (timeout="50000")
[09:05:09.018]      // while-condition  =>  TRUE
[09:05:09.018]      // while "1"  (timeout="50000")
[09:05:09.018]      // while-condition  =>  TRUE
[09:05:09.019]      // while "1"  (timeout="50000")
[09:05:09.019]      // while-condition  =>  TRUE
[09:05:09.019]      // while "1"  (timeout="50000")
[09:05:09.019]      // while-condition  =>  TRUE
[09:05:09.020]      // while "1"  (timeout="50000")
[09:05:09.020]      // while-condition  =>  TRUE
[09:05:09.020]      // while "1"  (timeout="50000")
[09:05:09.020]      // while-condition  =>  TRUE
[09:05:09.020]      // while "1"  (timeout="50000")
[09:05:09.021]      // while-condition  =>  TRUE
[09:05:09.021]      // while "1"  (timeout="50000")
[09:05:09.021]      // while-condition  =>  TRUE
[09:05:09.021]      // while "1"  (timeout="50000")
[09:05:09.021]      // while-condition  =>  TRUE
[09:05:09.022]      // while "1"  (timeout="50000")
[09:05:09.022]      // while-condition  =>  TRUE
[09:05:09.022]      // while "1"  (timeout="50000")
[09:05:09.022]      // while-condition  =>  TRUE
[09:05:09.023]      // while "1"  (timeout="50000")
[09:05:09.023]      // while-condition  =>  TRUE
[09:05:09.023]      // while "1"  (timeout="50000")
[09:05:09.023]      // while-condition  =>  TRUE
[09:05:09.024]      // while "1"  (timeout="50000")
[09:05:09.024]      // while-condition  =>  TRUE
[09:05:09.024]      // while "1"  (timeout="50000")
[09:05:09.025]      // while-condition  =>  TRUE
[09:05:09.025]      // while "1"  (timeout="50000")
[09:05:09.025]      // while-condition  =>  TRUE
[09:05:09.026]      // while "1"  (timeout="50000")
[09:05:09.026]      // while-condition  =>  TRUE
[09:05:09.026]      // while "1"  (timeout="50000")
[09:05:09.026]      // while-condition  =>  TRUE
[09:05:09.027]      // while "1"  (timeout="50000")
[09:05:09.028]      // while-condition  =>  TRUE
[09:05:09.028]      // while "1"  (timeout="50000")
[09:05:09.028]      // while-condition  =>  TRUE
[09:05:09.029]      // while "1"  (timeout="50000")
[09:05:09.029]      // while-condition  =>  TRUE
[09:05:09.029]      // while "1"  (timeout="50000")
[09:05:09.029]      // while-condition  =>  TRUE
[09:05:09.030]      // while "1"  (timeout="50000")
[09:05:09.030]      // while-condition  =>  TRUE
[09:05:09.030]      // while "1"  (timeout="50000")
[09:05:09.030]      // while-condition  =>  TRUE
[09:05:09.031]      // while "1"  (timeout="50000")
[09:05:09.031]      // while-condition  =>  TRUE
[09:05:09.031]      // while "1"  (timeout="50000")
[09:05:09.031]      // while-condition  =>  TRUE
[09:05:09.032]      // while "1"  (timeout="50000")
[09:05:09.032]      // while-condition  =>  TRUE
[09:05:09.032]      // while "1"  (timeout="50000")
[09:05:09.032]      // while-condition  =>  TRUE
[09:05:09.033]      // while "1"  (timeout="50000")
[09:05:09.033]      // while-condition  =>  TRUE
[09:05:09.033]      // while "1"  (timeout="50000")
[09:05:09.033]      // while-condition  =>  TRUE
[09:05:09.033]      // while "1"  (timeout="50000")
[09:05:09.034]      // while-condition  =>  TRUE
[09:05:09.034]      // while "1"  (timeout="50000")
[09:05:09.034]      // while-condition  =>  TRUE
[09:05:09.034]      // while "1"  (timeout="50000")
[09:05:09.034]      // while-condition  =>  TRUE
[09:05:09.035]      // while "1"  (timeout="50000")
[09:05:09.035]      // while-condition  =>  TRUE
[09:05:09.035]      // while "1"  (timeout="50000")
[09:05:09.035]      // while-condition  =>  TRUE
[09:05:09.035]      // while "1"  (timeout="50000")
[09:05:09.036]      // while-condition  =>  TRUE
[09:05:09.036]      // while "1"  (timeout="50000")
[09:05:09.036]      // while-condition  =>  TRUE
[09:05:09.036]      // while "1"  (timeout="50000")
[09:05:09.036]      // while-condition  =>  TRUE
[09:05:09.037]      // while "1"  (timeout="50000")
[09:05:09.037]      // while  =>  TIMEOUT
[09:05:09.037]      // end while "1"
[09:05:09.037]    </control>
[09:05:09.037]    <block atomic="false" info="">
[09:05:09.038]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:05:09.040]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:05:09.040]    </block>
[09:05:09.040]    <control if="" while="1" timeout="10000" info="">
[09:05:09.041]      // while "1"  (timeout="10000")
[09:05:09.041]      // while-condition  =>  TRUE
[09:05:09.041]      // while "1"  (timeout="10000")
[09:05:09.041]      // while-condition  =>  TRUE
[09:05:09.041]      // while "1"  (timeout="10000")
[09:05:09.042]      // while-condition  =>  TRUE
[09:05:09.042]      // while "1"  (timeout="10000")
[09:05:09.042]      // while-condition  =>  TRUE
[09:05:09.043]      // while "1"  (timeout="10000")
[09:05:09.043]      // while-condition  =>  TRUE
[09:05:09.043]      // while "1"  (timeout="10000")
[09:05:09.043]      // while-condition  =>  TRUE
[09:05:09.044]      // while "1"  (timeout="10000")
[09:05:09.044]      // while-condition  =>  TRUE
[09:05:09.044]      // while "1"  (timeout="10000")
[09:05:09.044]      // while-condition  =>  TRUE
[09:05:09.045]      // while "1"  (timeout="10000")
[09:05:09.045]      // while-condition  =>  TRUE
[09:05:09.045]      // while "1"  (timeout="10000")
[09:05:09.045]      // while-condition  =>  TRUE
[09:05:09.046]      // while "1"  (timeout="10000")
[09:05:09.046]      // while-condition  =>  TRUE
[09:05:09.046]      // while "1"  (timeout="10000")
[09:05:09.046]      // while-condition  =>  TRUE
[09:05:09.047]      // while "1"  (timeout="10000")
[09:05:09.047]      // while-condition  =>  TRUE
[09:05:09.047]      // while "1"  (timeout="10000")
[09:05:09.047]      // while-condition  =>  TRUE
[09:05:09.047]      // while "1"  (timeout="10000")
[09:05:09.048]      // while-condition  =>  TRUE
[09:05:09.048]      // while "1"  (timeout="10000")
[09:05:09.048]      // while-condition  =>  TRUE
[09:05:09.048]      // while "1"  (timeout="10000")
[09:05:09.048]      // while-condition  =>  TRUE
[09:05:09.049]      // while "1"  (timeout="10000")
[09:05:09.049]      // while-condition  =>  TRUE
[09:05:09.049]      // while "1"  (timeout="10000")
[09:05:09.049]      // while-condition  =>  TRUE
[09:05:09.049]      // while "1"  (timeout="10000")
[09:05:09.050]      // while-condition  =>  TRUE
[09:05:09.050]      // while "1"  (timeout="10000")
[09:05:09.050]      // while-condition  =>  TRUE
[09:05:09.050]      // while "1"  (timeout="10000")
[09:05:09.051]      // while-condition  =>  TRUE
[09:05:09.051]      // while "1"  (timeout="10000")
[09:05:09.051]      // while-condition  =>  TRUE
[09:05:09.051]      // while "1"  (timeout="10000")
[09:05:09.051]      // while-condition  =>  TRUE
[09:05:09.052]      // while "1"  (timeout="10000")
[09:05:09.052]      // while-condition  =>  TRUE
[09:05:09.052]      // while "1"  (timeout="10000")
[09:05:09.052]      // while-condition  =>  TRUE
[09:05:09.052]      // while "1"  (timeout="10000")
[09:05:09.052]      // while-condition  =>  TRUE
[09:05:09.053]      // while "1"  (timeout="10000")
[09:05:09.053]      // while  =>  TIMEOUT
[09:05:09.053]      // end while "1"
[09:05:09.053]    </control>
[09:05:09.054]    <block atomic="true" info="">
[09:05:09.057]  
[09:05:09.057]  ! W001 : No atomic sequence support in debug unit
[09:05:09.057]  
[09:05:09.059]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:05:09.060]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:05:09.060]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:05:09.062]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:05:09.062]    </block>
[09:05:09.063]    <block atomic="false" info="">
[09:05:09.064]      __errorcontrol = 0x00000001;
[09:05:09.064]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:05:09.064]      ReadDP(0x0);
[09:05:09.066]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:05:09.066]      __errorcontrol = 0x00000000;
[09:05:09.067]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:05:09.067]    </block>
[09:05:09.068]  </sequence>
[09:05:09.068]  
[09:05:09.068]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:05:09.068]  
[09:05:09.069]  <debugvars>
[09:05:09.069]    // Pre-defined
[09:05:09.069]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:05:09.070]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:05:09.070]    __dp=0x00000000
[09:05:09.070]    __ap=0x00000000
[09:05:09.071]    __traceout=0x00000000      (Trace Disabled)
[09:05:09.071]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:05:09.071]    __FlashAddr=0x00000000
[09:05:09.071]    __FlashLen=0x00000000
[09:05:09.072]    __FlashArg=0x00000000
[09:05:09.072]    __FlashOp=0x00000000
[09:05:09.072]    __Result=0x00000000
[09:05:09.073]  </debugvars>
[09:05:09.073]  
[09:05:09.073]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:05:09.073]  </sequence>
[09:05:09.074]  
[09:05:09.078]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[09:05:09.078]  
[09:05:09.079]  <debugvars>
[09:05:09.079]    // Pre-defined
[09:05:09.079]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:05:09.079]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:05:09.080]    __dp=0x00000000
[09:05:09.080]    __ap=0x00000000
[09:05:09.080]    __traceout=0x00000000      (Trace Disabled)
[09:05:09.081]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:05:09.081]    __FlashAddr=0x00000000
[09:05:09.081]    __FlashLen=0x00000000
[09:05:09.081]    __FlashArg=0x00000000
[09:05:09.082]    __FlashOp=0x00000000
[09:05:09.082]    __Result=0x00000000
[09:05:09.082]  </debugvars>
[09:05:09.083]  
[09:05:09.083]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:05:09.083]    <block atomic="false" info="">
[09:05:09.083]      __var SW_DP_ABORT  = 0x0;
[09:05:09.084]        // -> [SW_DP_ABORT <= 0x00000000]
[09:05:09.084]      __var DP_CTRL_STAT = 0x4;
[09:05:09.084]        // -> [DP_CTRL_STAT <= 0x00000004]
[09:05:09.085]      __var DP_SELECT    = 0x8;
[09:05:09.085]        // -> [DP_SELECT <= 0x00000008]
[09:05:09.085]      __var powered_down = 0;
[09:05:09.085]        // -> [powered_down <= 0x00000000]
[09:05:09.086]      WriteDP(DP_SELECT, 0x00000000);
[09:05:09.088]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:05:09.088]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:05:09.090]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[09:05:09.090]        // -> [powered_down <= 0x00000001]
[09:05:09.091]    </block>
[09:05:09.091]    <control if="powered_down" while="" timeout="0" info="">
[09:05:09.091]      // if-block "powered_down"
[09:05:09.092]        // =>  TRUE
[09:05:09.092]      <block atomic="false" info="">
[09:05:09.092]        WriteDP(DP_CTRL_STAT, 0x50000000);
[09:05:09.094]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[09:05:09.095]      </block>
[09:05:09.095]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[09:05:09.095]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[09:05:09.097]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:05:09.098]        // while-condition  =>  FALSE
[09:05:09.098]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[09:05:09.098]      </control>
[09:05:09.099]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[09:05:09.099]        // if-block "(__protocol & 0xFFFF) == 1"
[09:05:09.099]          // =>  FALSE
[09:05:09.100]        // skip if-block "(__protocol & 0xFFFF) == 1"
[09:05:09.100]      </control>
[09:05:09.100]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[09:05:09.100]        // if-block "(__protocol & 0xFFFF) == 2"
[09:05:09.101]          // =>  TRUE
[09:05:09.101]        <block atomic="false" info="">
[09:05:09.101]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[09:05:09.103]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[09:05:09.103]          WriteDP(SW_DP_ABORT, 0x0000001E);
[09:05:09.105]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[09:05:09.105]        </block>
[09:05:09.106]        // end if-block "(__protocol & 0xFFFF) == 2"
[09:05:09.106]      </control>
[09:05:09.106]      // end if-block "powered_down"
[09:05:09.107]    </control>
[09:05:09.107]  </sequence>
[09:05:09.107]  
[09:05:09.211]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:05:09.211]  
[09:05:09.212]  <debugvars>
[09:05:09.212]    // Pre-defined
[09:05:09.213]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:05:09.213]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:05:09.213]    __dp=0x00000000
[09:05:09.213]    __ap=0x00000000
[09:05:09.214]    __traceout=0x00000000      (Trace Disabled)
[09:05:09.214]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:05:09.214]    __FlashAddr=0x00000000
[09:05:09.215]    __FlashLen=0x00000000
[09:05:09.215]    __FlashArg=0x00000000
[09:05:09.215]    __FlashOp=0x00000000
[09:05:09.216]    __Result=0x00000000
[09:05:09.216]  </debugvars>
[09:05:09.216]  
[09:05:09.217]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:05:09.217]    <block atomic="true" info="">
[09:05:09.220]  
[09:05:09.220]  ! W001 : No atomic sequence support in debug unit
[09:05:09.220]  
[09:05:09.222]      __var DP_R_IDCODE    = 0x0;
[09:05:09.230]        // -> [DP_R_IDCODE <= 0x00000000]
[09:05:09.230]      __var DP_W_ABORT    = 0x0;
[09:05:09.230]        // -> [DP_W_ABORT <= 0x00000000]
[09:05:09.231]      __var DP_CTRLSTAT = 0x4;
[09:05:09.231]        // -> [DP_CTRLSTAT <= 0x00000004]
[09:05:09.231]      __var DP_W_SELECT    = 0x8;
[09:05:09.232]        // -> [DP_W_SELECT <= 0x00000008]
[09:05:09.232]      __var AP_TAR		= 0x4;
[09:05:09.232]        // -> [AP_TAR <= 0x00000004]
[09:05:09.233]      __var AP_BD0		= 0x0;
[09:05:09.233]        // -> [AP_BD0 <= 0x00000000]
[09:05:09.233]      __var AP_BD1		= 0x4;
[09:05:09.234]        // -> [AP_BD1 <= 0x00000004]
[09:05:09.234]      __var AP_BD2		= 0x8;
[09:05:09.234]        // -> [AP_BD2 <= 0x00000008]
[09:05:09.235]      __var PCWithinFlash = 0;
[09:05:09.235]        // -> [PCWithinFlash <= 0x00000000]
[09:05:09.235]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:05:09.242]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.247]    </block>
[09:05:09.247]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:05:09.248]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:05:09.254]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.254]      // while-condition  =>  FALSE
[09:05:09.254]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:05:09.254]    </control>
[09:05:09.255]    <block atomic="true" info="">
[09:05:09.260]  
[09:05:09.260]  ! W001 : No atomic sequence support in debug unit
[09:05:09.260]  
[09:05:09.264]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:05:09.266]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:05:09.266]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:05:09.268]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.268]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:05:09.270]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:05:09.270]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:05:09.274]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.274]    </block>
[09:05:09.274]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:05:09.274]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.277]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.277]      // while-condition  =>  TRUE
[09:05:09.277]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.279]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.279]      // while-condition  =>  TRUE
[09:05:09.280]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.282]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.282]      // while-condition  =>  TRUE
[09:05:09.282]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.285]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.285]      // while-condition  =>  TRUE
[09:05:09.285]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.288]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.288]      // while-condition  =>  TRUE
[09:05:09.288]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.291]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.291]      // while-condition  =>  TRUE
[09:05:09.291]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.294]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.294]      // while-condition  =>  TRUE
[09:05:09.294]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.297]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.297]      // while-condition  =>  TRUE
[09:05:09.297]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.299]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.299]      // while-condition  =>  TRUE
[09:05:09.299]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.302]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.302]      // while-condition  =>  TRUE
[09:05:09.302]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.305]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.305]      // while-condition  =>  TRUE
[09:05:09.305]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.308]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.308]      // while-condition  =>  TRUE
[09:05:09.308]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.311]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.321]      // while-condition  =>  TRUE
[09:05:09.322]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.324]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.324]      // while-condition  =>  TRUE
[09:05:09.324]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.327]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.327]      // while-condition  =>  TRUE
[09:05:09.327]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.330]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.330]      // while-condition  =>  TRUE
[09:05:09.330]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.333]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.334]      // while-condition  =>  TRUE
[09:05:09.334]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.336]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.337]      // while-condition  =>  TRUE
[09:05:09.337]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.339]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.339]      // while-condition  =>  TRUE
[09:05:09.339]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.342]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.342]      // while-condition  =>  TRUE
[09:05:09.342]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.345]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.345]      // while-condition  =>  TRUE
[09:05:09.346]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.348]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.348]      // while-condition  =>  TRUE
[09:05:09.348]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.351]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.351]      // while-condition  =>  TRUE
[09:05:09.351]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.354]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.354]      // while-condition  =>  TRUE
[09:05:09.355]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.357]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.357]      // while-condition  =>  TRUE
[09:05:09.357]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.360]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.360]      // while-condition  =>  TRUE
[09:05:09.360]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.363]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.363]      // while-condition  =>  TRUE
[09:05:09.363]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.366]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.366]      // while-condition  =>  TRUE
[09:05:09.367]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.369]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.369]      // while-condition  =>  TRUE
[09:05:09.369]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.372]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.372]      // while-condition  =>  TRUE
[09:05:09.372]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.375]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.375]      // while-condition  =>  TRUE
[09:05:09.375]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.378]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.378]      // while-condition  =>  TRUE
[09:05:09.379]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.381]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.381]      // while-condition  =>  TRUE
[09:05:09.381]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.382]      // while  =>  TIMEOUT
[09:05:09.382]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:05:09.382]    </control>
[09:05:09.382]    <block atomic="false" info="">
[09:05:09.383]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:05:09.385]        // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.385]        // -> [PCWithinFlash <= 0x00000000]
[09:05:09.385]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:05:09.388]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:05:09.388]    </block>
[09:05:09.388]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:05:09.389]      // if-block "PCWithinFlash == 0"
[09:05:09.389]        // =>  TRUE
[09:05:09.389]      // end if-block "PCWithinFlash == 0"
[09:05:09.389]    </control>
[09:05:09.390]  </sequence>
[09:05:09.390]  
[09:05:09.436]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[09:05:09.436]  
[09:05:09.437]  <debugvars>
[09:05:09.437]    // Pre-defined
[09:05:09.437]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:05:09.438]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:05:09.438]    __dp=0x00000000
[09:05:09.438]    __ap=0x00000000
[09:05:09.439]    __traceout=0x00000000      (Trace Disabled)
[09:05:09.439]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:05:09.439]    __FlashAddr=0x00000000
[09:05:09.439]    __FlashLen=0x00000000
[09:05:09.440]    __FlashArg=0x00000000
[09:05:09.440]    __FlashOp=0x00000000
[09:05:09.440]    __Result=0x00000000
[09:05:09.440]  </debugvars>
[09:05:09.441]  
[09:05:09.441]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[09:05:09.441]    <block atomic="false" info="">
[09:05:09.441]    </block>
[09:05:09.442]  </sequence>
[09:05:09.442]  
[09:05:09.444]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[09:05:09.444]  
[09:05:09.445]  <debugvars>
[09:05:09.445]    // Pre-defined
[09:05:09.445]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:05:09.445]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:05:09.446]    __dp=0x00000000
[09:05:09.446]    __ap=0x00000000
[09:05:09.446]    __traceout=0x00000000      (Trace Disabled)
[09:05:09.447]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:05:09.447]    __FlashAddr=0x00000000
[09:05:09.447]    __FlashLen=0x00000000
[09:05:09.447]    __FlashArg=0x00000000
[09:05:09.448]    __FlashOp=0x00000000
[09:05:09.448]    __Result=0x00000000
[09:05:09.448]  </debugvars>
[09:05:09.448]  
[09:05:09.449]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:05:09.449]    <block atomic="false" info="">
[09:05:09.449]      __var nReset      = 0x80;
[09:05:09.449]        // -> [nReset <= 0x00000080]
[09:05:09.450]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:05:09.451]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:05:09.451]    </block>
[09:05:09.452]    <control if="" while="1" timeout="50000" info="">
[09:05:09.452]      // while "1"  (timeout="50000")
[09:05:09.452]      // while-condition  =>  TRUE
[09:05:09.452]      // while "1"  (timeout="50000")
[09:05:09.453]      // while-condition  =>  TRUE
[09:05:09.453]      // while "1"  (timeout="50000")
[09:05:09.453]      // while-condition  =>  TRUE
[09:05:09.453]      // while "1"  (timeout="50000")
[09:05:09.453]      // while-condition  =>  TRUE
[09:05:09.454]      // while "1"  (timeout="50000")
[09:05:09.454]      // while-condition  =>  TRUE
[09:05:09.454]      // while "1"  (timeout="50000")
[09:05:09.454]      // while-condition  =>  TRUE
[09:05:09.455]      // while "1"  (timeout="50000")
[09:05:09.455]      // while-condition  =>  TRUE
[09:05:09.455]      // while "1"  (timeout="50000")
[09:05:09.455]      // while-condition  =>  TRUE
[09:05:09.456]      // while "1"  (timeout="50000")
[09:05:09.456]      // while-condition  =>  TRUE
[09:05:09.456]      // while "1"  (timeout="50000")
[09:05:09.456]      // while-condition  =>  TRUE
[09:05:09.456]      // while "1"  (timeout="50000")
[09:05:09.457]      // while-condition  =>  TRUE
[09:05:09.457]      // while "1"  (timeout="50000")
[09:05:09.457]      // while-condition  =>  TRUE
[09:05:09.458]      // while "1"  (timeout="50000")
[09:05:09.458]      // while-condition  =>  TRUE
[09:05:09.458]      // while "1"  (timeout="50000")
[09:05:09.458]      // while-condition  =>  TRUE
[09:05:09.458]      // while "1"  (timeout="50000")
[09:05:09.459]      // while-condition  =>  TRUE
[09:05:09.459]      // while "1"  (timeout="50000")
[09:05:09.459]      // while-condition  =>  TRUE
[09:05:09.459]      // while "1"  (timeout="50000")
[09:05:09.460]      // while-condition  =>  TRUE
[09:05:09.460]      // while "1"  (timeout="50000")
[09:05:09.460]      // while-condition  =>  TRUE
[09:05:09.460]      // while "1"  (timeout="50000")
[09:05:09.461]      // while-condition  =>  TRUE
[09:05:09.461]      // while "1"  (timeout="50000")
[09:05:09.461]      // while-condition  =>  TRUE
[09:05:09.461]      // while "1"  (timeout="50000")
[09:05:09.462]      // while-condition  =>  TRUE
[09:05:09.462]      // while "1"  (timeout="50000")
[09:05:09.462]      // while-condition  =>  TRUE
[09:05:09.462]      // while "1"  (timeout="50000")
[09:05:09.463]      // while-condition  =>  TRUE
[09:05:09.463]      // while "1"  (timeout="50000")
[09:05:09.463]      // while-condition  =>  TRUE
[09:05:09.463]      // while "1"  (timeout="50000")
[09:05:09.463]      // while-condition  =>  TRUE
[09:05:09.464]      // while "1"  (timeout="50000")
[09:05:09.464]      // while-condition  =>  TRUE
[09:05:09.464]      // while "1"  (timeout="50000")
[09:05:09.465]      // while-condition  =>  TRUE
[09:05:09.465]      // while "1"  (timeout="50000")
[09:05:09.465]      // while-condition  =>  TRUE
[09:05:09.465]      // while "1"  (timeout="50000")
[09:05:09.465]      // while-condition  =>  TRUE
[09:05:09.466]      // while "1"  (timeout="50000")
[09:05:09.466]      // while-condition  =>  TRUE
[09:05:09.466]      // while "1"  (timeout="50000")
[09:05:09.466]      // while-condition  =>  TRUE
[09:05:09.467]      // while "1"  (timeout="50000")
[09:05:09.467]      // while-condition  =>  TRUE
[09:05:09.467]      // while "1"  (timeout="50000")
[09:05:09.467]      // while-condition  =>  TRUE
[09:05:09.467]      // while "1"  (timeout="50000")
[09:05:09.468]      // while-condition  =>  TRUE
[09:05:09.468]      // while "1"  (timeout="50000")
[09:05:09.468]      // while-condition  =>  TRUE
[09:05:09.468]      // while "1"  (timeout="50000")
[09:05:09.469]      // while-condition  =>  TRUE
[09:05:09.469]      // while "1"  (timeout="50000")
[09:05:09.469]      // while-condition  =>  TRUE
[09:05:09.469]      // while "1"  (timeout="50000")
[09:05:09.470]      // while-condition  =>  TRUE
[09:05:09.470]      // while "1"  (timeout="50000")
[09:05:09.470]      // while-condition  =>  TRUE
[09:05:09.470]      // while "1"  (timeout="50000")
[09:05:09.471]      // while-condition  =>  TRUE
[09:05:09.471]      // while "1"  (timeout="50000")
[09:05:09.471]      // while-condition  =>  TRUE
[09:05:09.471]      // while "1"  (timeout="50000")
[09:05:09.471]      // while-condition  =>  TRUE
[09:05:09.472]      // while "1"  (timeout="50000")
[09:05:09.472]      // while-condition  =>  TRUE
[09:05:09.472]      // while "1"  (timeout="50000")
[09:05:09.472]      // while-condition  =>  TRUE
[09:05:09.473]      // while "1"  (timeout="50000")
[09:05:09.473]      // while-condition  =>  TRUE
[09:05:09.473]      // while "1"  (timeout="50000")
[09:05:09.473]      // while-condition  =>  TRUE
[09:05:09.473]      // while "1"  (timeout="50000")
[09:05:09.474]      // while-condition  =>  TRUE
[09:05:09.474]      // while "1"  (timeout="50000")
[09:05:09.474]      // while-condition  =>  TRUE
[09:05:09.474]      // while "1"  (timeout="50000")
[09:05:09.475]      // while-condition  =>  TRUE
[09:05:09.475]      // while "1"  (timeout="50000")
[09:05:09.475]      // while-condition  =>  TRUE
[09:05:09.475]      // while "1"  (timeout="50000")
[09:05:09.476]      // while-condition  =>  TRUE
[09:05:09.476]      // while "1"  (timeout="50000")
[09:05:09.476]      // while-condition  =>  TRUE
[09:05:09.476]      // while "1"  (timeout="50000")
[09:05:09.477]      // while-condition  =>  TRUE
[09:05:09.477]      // while "1"  (timeout="50000")
[09:05:09.477]      // while-condition  =>  TRUE
[09:05:09.477]      // while "1"  (timeout="50000")
[09:05:09.478]      // while-condition  =>  TRUE
[09:05:09.478]      // while "1"  (timeout="50000")
[09:05:09.478]      // while-condition  =>  TRUE
[09:05:09.478]      // while "1"  (timeout="50000")
[09:05:09.479]      // while-condition  =>  TRUE
[09:05:09.479]      // while "1"  (timeout="50000")
[09:05:09.479]      // while-condition  =>  TRUE
[09:05:09.479]      // while "1"  (timeout="50000")
[09:05:09.479]      // while-condition  =>  TRUE
[09:05:09.480]      // while "1"  (timeout="50000")
[09:05:09.480]      // while-condition  =>  TRUE
[09:05:09.480]      // while "1"  (timeout="50000")
[09:05:09.480]      // while-condition  =>  TRUE
[09:05:09.481]      // while "1"  (timeout="50000")
[09:05:09.481]      // while-condition  =>  TRUE
[09:05:09.481]      // while "1"  (timeout="50000")
[09:05:09.481]      // while-condition  =>  TRUE
[09:05:09.482]      // while "1"  (timeout="50000")
[09:05:09.482]      // while-condition  =>  TRUE
[09:05:09.482]      // while "1"  (timeout="50000")
[09:05:09.482]      // while-condition  =>  TRUE
[09:05:09.482]      // while "1"  (timeout="50000")
[09:05:09.483]      // while-condition  =>  TRUE
[09:05:09.483]      // while "1"  (timeout="50000")
[09:05:09.483]      // while-condition  =>  TRUE
[09:05:09.483]      // while "1"  (timeout="50000")
[09:05:09.484]      // while-condition  =>  TRUE
[09:05:09.484]      // while "1"  (timeout="50000")
[09:05:09.484]      // while-condition  =>  TRUE
[09:05:09.484]      // while "1"  (timeout="50000")
[09:05:09.485]      // while-condition  =>  TRUE
[09:05:09.485]      // while "1"  (timeout="50000")
[09:05:09.485]      // while-condition  =>  TRUE
[09:05:09.485]      // while "1"  (timeout="50000")
[09:05:09.486]      // while-condition  =>  TRUE
[09:05:09.486]      // while "1"  (timeout="50000")
[09:05:09.486]      // while-condition  =>  TRUE
[09:05:09.486]      // while "1"  (timeout="50000")
[09:05:09.487]      // while-condition  =>  TRUE
[09:05:09.487]      // while "1"  (timeout="50000")
[09:05:09.487]      // while-condition  =>  TRUE
[09:05:09.487]      // while "1"  (timeout="50000")
[09:05:09.488]      // while-condition  =>  TRUE
[09:05:09.488]      // while "1"  (timeout="50000")
[09:05:09.488]      // while-condition  =>  TRUE
[09:05:09.488]      // while "1"  (timeout="50000")
[09:05:09.489]      // while-condition  =>  TRUE
[09:05:09.489]      // while "1"  (timeout="50000")
[09:05:09.489]      // while-condition  =>  TRUE
[09:05:09.489]      // while "1"  (timeout="50000")
[09:05:09.490]      // while-condition  =>  TRUE
[09:05:09.490]      // while "1"  (timeout="50000")
[09:05:09.490]      // while-condition  =>  TRUE
[09:05:09.490]      // while "1"  (timeout="50000")
[09:05:09.490]      // while-condition  =>  TRUE
[09:05:09.491]      // while "1"  (timeout="50000")
[09:05:09.491]      // while-condition  =>  TRUE
[09:05:09.491]      // while "1"  (timeout="50000")
[09:05:09.491]      // while-condition  =>  TRUE
[09:05:09.492]      // while "1"  (timeout="50000")
[09:05:09.492]      // while-condition  =>  TRUE
[09:05:09.492]      // while "1"  (timeout="50000")
[09:05:09.492]      // while-condition  =>  TRUE
[09:05:09.493]      // while "1"  (timeout="50000")
[09:05:09.493]      // while-condition  =>  TRUE
[09:05:09.493]      // while "1"  (timeout="50000")
[09:05:09.493]      // while-condition  =>  TRUE
[09:05:09.493]      // while "1"  (timeout="50000")
[09:05:09.494]      // while-condition  =>  TRUE
[09:05:09.494]      // while "1"  (timeout="50000")
[09:05:09.494]      // while-condition  =>  TRUE
[09:05:09.494]      // while "1"  (timeout="50000")
[09:05:09.495]      // while-condition  =>  TRUE
[09:05:09.495]      // while "1"  (timeout="50000")
[09:05:09.495]      // while-condition  =>  TRUE
[09:05:09.495]      // while "1"  (timeout="50000")
[09:05:09.496]      // while-condition  =>  TRUE
[09:05:09.496]      // while "1"  (timeout="50000")
[09:05:09.496]      // while-condition  =>  TRUE
[09:05:09.496]      // while "1"  (timeout="50000")
[09:05:09.497]      // while-condition  =>  TRUE
[09:05:09.497]      // while "1"  (timeout="50000")
[09:05:09.497]      // while-condition  =>  TRUE
[09:05:09.497]      // while "1"  (timeout="50000")
[09:05:09.498]      // while-condition  =>  TRUE
[09:05:09.498]      // while "1"  (timeout="50000")
[09:05:09.498]      // while-condition  =>  TRUE
[09:05:09.498]      // while "1"  (timeout="50000")
[09:05:09.499]      // while-condition  =>  TRUE
[09:05:09.499]      // while "1"  (timeout="50000")
[09:05:09.499]      // while-condition  =>  TRUE
[09:05:09.499]      // while "1"  (timeout="50000")
[09:05:09.500]      // while-condition  =>  TRUE
[09:05:09.500]      // while "1"  (timeout="50000")
[09:05:09.500]      // while-condition  =>  TRUE
[09:05:09.500]      // while "1"  (timeout="50000")
[09:05:09.500]      // while-condition  =>  TRUE
[09:05:09.501]      // while "1"  (timeout="50000")
[09:05:09.501]      // while-condition  =>  TRUE
[09:05:09.501]      // while "1"  (timeout="50000")
[09:05:09.501]      // while-condition  =>  TRUE
[09:05:09.502]      // while "1"  (timeout="50000")
[09:05:09.502]      // while-condition  =>  TRUE
[09:05:09.502]      // while "1"  (timeout="50000")
[09:05:09.502]      // while-condition  =>  TRUE
[09:05:09.502]      // while "1"  (timeout="50000")
[09:05:09.503]      // while-condition  =>  TRUE
[09:05:09.503]      // while "1"  (timeout="50000")
[09:05:09.503]      // while-condition  =>  TRUE
[09:05:09.503]      // while "1"  (timeout="50000")
[09:05:09.504]      // while-condition  =>  TRUE
[09:05:09.504]      // while "1"  (timeout="50000")
[09:05:09.504]      // while-condition  =>  TRUE
[09:05:09.504]      // while "1"  (timeout="50000")
[09:05:09.505]      // while-condition  =>  TRUE
[09:05:09.505]      // while "1"  (timeout="50000")
[09:05:09.505]      // while-condition  =>  TRUE
[09:05:09.505]      // while "1"  (timeout="50000")
[09:05:09.505]      // while-condition  =>  TRUE
[09:05:09.506]      // while "1"  (timeout="50000")
[09:05:09.506]      // while  =>  TIMEOUT
[09:05:09.506]      // end while "1"
[09:05:09.506]    </control>
[09:05:09.507]    <block atomic="false" info="">
[09:05:09.507]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:05:09.509]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:05:09.510]    </block>
[09:05:09.510]    <control if="" while="1" timeout="10000" info="">
[09:05:09.510]      // while "1"  (timeout="10000")
[09:05:09.510]      // while-condition  =>  TRUE
[09:05:09.511]      // while "1"  (timeout="10000")
[09:05:09.511]      // while-condition  =>  TRUE
[09:05:09.511]      // while "1"  (timeout="10000")
[09:05:09.511]      // while-condition  =>  TRUE
[09:05:09.512]      // while "1"  (timeout="10000")
[09:05:09.512]      // while-condition  =>  TRUE
[09:05:09.512]      // while "1"  (timeout="10000")
[09:05:09.512]      // while-condition  =>  TRUE
[09:05:09.513]      // while "1"  (timeout="10000")
[09:05:09.513]      // while-condition  =>  TRUE
[09:05:09.513]      // while "1"  (timeout="10000")
[09:05:09.513]      // while-condition  =>  TRUE
[09:05:09.513]      // while "1"  (timeout="10000")
[09:05:09.514]      // while-condition  =>  TRUE
[09:05:09.514]      // while "1"  (timeout="10000")
[09:05:09.514]      // while-condition  =>  TRUE
[09:05:09.514]      // while "1"  (timeout="10000")
[09:05:09.515]      // while-condition  =>  TRUE
[09:05:09.515]      // while "1"  (timeout="10000")
[09:05:09.515]      // while-condition  =>  TRUE
[09:05:09.515]      // while "1"  (timeout="10000")
[09:05:09.516]      // while-condition  =>  TRUE
[09:05:09.516]      // while "1"  (timeout="10000")
[09:05:09.516]      // while-condition  =>  TRUE
[09:05:09.516]      // while "1"  (timeout="10000")
[09:05:09.517]      // while-condition  =>  TRUE
[09:05:09.517]      // while "1"  (timeout="10000")
[09:05:09.517]      // while-condition  =>  TRUE
[09:05:09.517]      // while "1"  (timeout="10000")
[09:05:09.518]      // while-condition  =>  TRUE
[09:05:09.518]      // while "1"  (timeout="10000")
[09:05:09.518]      // while-condition  =>  TRUE
[09:05:09.518]      // while "1"  (timeout="10000")
[09:05:09.519]      // while-condition  =>  TRUE
[09:05:09.519]      // while "1"  (timeout="10000")
[09:05:09.519]      // while-condition  =>  TRUE
[09:05:09.519]      // while "1"  (timeout="10000")
[09:05:09.519]      // while-condition  =>  TRUE
[09:05:09.520]      // while "1"  (timeout="10000")
[09:05:09.520]      // while-condition  =>  TRUE
[09:05:09.520]      // while "1"  (timeout="10000")
[09:05:09.520]      // while-condition  =>  TRUE
[09:05:09.521]      // while "1"  (timeout="10000")
[09:05:09.521]      // while-condition  =>  TRUE
[09:05:09.521]      // while "1"  (timeout="10000")
[09:05:09.521]      // while-condition  =>  TRUE
[09:05:09.522]      // while "1"  (timeout="10000")
[09:05:09.522]      // while  =>  TIMEOUT
[09:05:09.522]      // end while "1"
[09:05:09.522]    </control>
[09:05:09.522]    <block atomic="true" info="">
[09:05:09.528]  
[09:05:09.528]  ! W001 : No atomic sequence support in debug unit
[09:05:09.528]  
[09:05:09.530]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:05:09.532]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:05:09.533]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:05:09.534]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:05:09.535]    </block>
[09:05:09.535]    <block atomic="false" info="">
[09:05:09.535]      __errorcontrol = 0x00000001;
[09:05:09.536]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:05:09.537]      ReadDP(0x0);
[09:05:09.538]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:05:09.539]      __errorcontrol = 0x00000000;
[09:05:09.539]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:05:09.539]    </block>
[09:05:09.539]  </sequence>
[09:05:09.540]  
[09:05:09.543]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[09:05:09.543]  
[09:05:09.544]  <debugvars>
[09:05:09.544]    // Pre-defined
[09:05:09.544]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:05:09.544]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:05:09.545]    __dp=0x00000000
[09:05:09.545]    __ap=0x00000000
[09:05:09.545]    __traceout=0x00000000      (Trace Disabled)
[09:05:09.545]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:05:09.546]    __FlashAddr=0x00000000
[09:05:09.546]    __FlashLen=0x00000000
[09:05:09.546]    __FlashArg=0x00000000
[09:05:09.547]    __FlashOp=0x00000000
[09:05:09.547]    __Result=0x00000000
[09:05:09.547]  </debugvars>
[09:05:09.547]  
[09:05:09.548]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[09:05:09.548]    <block atomic="false" info="">
[09:05:09.548]    </block>
[09:05:09.548]  </sequence>
[09:05:09.549]  
[09:05:09.784]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[09:05:09.784]  
[09:05:09.785]  <debugvars>
[09:05:09.785]    // Pre-defined
[09:05:09.786]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:05:09.787]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:05:09.787]    __dp=0x00000000
[09:05:09.788]    __ap=0x00000000
[09:05:09.789]    __traceout=0x00000000      (Trace Disabled)
[09:05:09.789]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:05:09.790]    __FlashAddr=0x00000000
[09:05:09.790]    __FlashLen=0x00000000
[09:05:09.791]    __FlashArg=0x00000000
[09:05:09.791]    __FlashOp=0x00000000
[09:05:09.793]    __Result=0x00000000
[09:05:09.793]  </debugvars>
[09:05:09.794]  
[09:05:09.794]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[09:05:09.795]    <block atomic="false" info="">
[09:05:09.795]      Sequence("ResetHardware");
[09:05:09.796]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:05:09.796]          <block atomic="false" info="">
[09:05:09.797]            __var nReset      = 0x80;
[09:05:09.797]              // -> [nReset <= 0x00000080]
[09:05:09.797]            DAP_SWJ_Pins(0x00, nReset, 0);
[09:05:09.799]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:05:09.800]          </block>
[09:05:09.801]          <control if="" while="1" timeout="50000" info="">
[09:05:09.801]            // while "1"  (timeout="50000")
[09:05:09.801]            // while-condition  =>  TRUE
[09:05:09.802]            // while "1"  (timeout="50000")
[09:05:09.803]            // while-condition  =>  TRUE
[09:05:09.803]            // while "1"  (timeout="50000")
[09:05:09.804]            // while-condition  =>  TRUE
[09:05:09.804]            // while "1"  (timeout="50000")
[09:05:09.804]            // while-condition  =>  TRUE
[09:05:09.805]            // while "1"  (timeout="50000")
[09:05:09.805]            // while-condition  =>  TRUE
[09:05:09.806]            // while "1"  (timeout="50000")
[09:05:09.806]            // while-condition  =>  TRUE
[09:05:09.806]            // while "1"  (timeout="50000")
[09:05:09.807]            // while-condition  =>  TRUE
[09:05:09.807]            // while "1"  (timeout="50000")
[09:05:09.807]            // while-condition  =>  TRUE
[09:05:09.808]            // while "1"  (timeout="50000")
[09:05:09.808]            // while-condition  =>  TRUE
[09:05:09.808]            // while "1"  (timeout="50000")
[09:05:09.808]            // while-condition  =>  TRUE
[09:05:09.809]            // while "1"  (timeout="50000")
[09:05:09.809]            // while-condition  =>  TRUE
[09:05:09.809]            // while "1"  (timeout="50000")
[09:05:09.810]            // while-condition  =>  TRUE
[09:05:09.810]            // while "1"  (timeout="50000")
[09:05:09.810]            // while-condition  =>  TRUE
[09:05:09.810]            // while "1"  (timeout="50000")
[09:05:09.810]            // while-condition  =>  TRUE
[09:05:09.811]            // while "1"  (timeout="50000")
[09:05:09.811]            // while-condition  =>  TRUE
[09:05:09.811]            // while "1"  (timeout="50000")
[09:05:09.812]            // while-condition  =>  TRUE
[09:05:09.812]            // while "1"  (timeout="50000")
[09:05:09.812]            // while-condition  =>  TRUE
[09:05:09.812]            // while "1"  (timeout="50000")
[09:05:09.813]            // while-condition  =>  TRUE
[09:05:09.813]            // while "1"  (timeout="50000")
[09:05:09.813]            // while-condition  =>  TRUE
[09:05:09.814]            // while "1"  (timeout="50000")
[09:05:09.814]            // while-condition  =>  TRUE
[09:05:09.814]            // while "1"  (timeout="50000")
[09:05:09.814]            // while-condition  =>  TRUE
[09:05:09.815]            // while "1"  (timeout="50000")
[09:05:09.815]            // while-condition  =>  TRUE
[09:05:09.815]            // while "1"  (timeout="50000")
[09:05:09.816]            // while-condition  =>  TRUE
[09:05:09.816]            // while "1"  (timeout="50000")
[09:05:09.816]            // while-condition  =>  TRUE
[09:05:09.817]            // while "1"  (timeout="50000")
[09:05:09.817]            // while-condition  =>  TRUE
[09:05:09.817]            // while "1"  (timeout="50000")
[09:05:09.817]            // while-condition  =>  TRUE
[09:05:09.817]            // while "1"  (timeout="50000")
[09:05:09.818]            // while-condition  =>  TRUE
[09:05:09.818]            // while "1"  (timeout="50000")
[09:05:09.818]            // while-condition  =>  TRUE
[09:05:09.818]            // while "1"  (timeout="50000")
[09:05:09.819]            // while-condition  =>  TRUE
[09:05:09.819]            // while "1"  (timeout="50000")
[09:05:09.819]            // while-condition  =>  TRUE
[09:05:09.819]            // while "1"  (timeout="50000")
[09:05:09.819]            // while-condition  =>  TRUE
[09:05:09.820]            // while "1"  (timeout="50000")
[09:05:09.820]            // while-condition  =>  TRUE
[09:05:09.820]            // while "1"  (timeout="50000")
[09:05:09.820]            // while-condition  =>  TRUE
[09:05:09.820]            // while "1"  (timeout="50000")
[09:05:09.820]            // while-condition  =>  TRUE
[09:05:09.821]            // while "1"  (timeout="50000")
[09:05:09.821]            // while-condition  =>  TRUE
[09:05:09.821]            // while "1"  (timeout="50000")
[09:05:09.821]            // while-condition  =>  TRUE
[09:05:09.821]            // while "1"  (timeout="50000")
[09:05:09.821]            // while-condition  =>  TRUE
[09:05:09.821]            // while "1"  (timeout="50000")
[09:05:09.821]            // while-condition  =>  TRUE
[09:05:09.821]            // while "1"  (timeout="50000")
[09:05:09.822]            // while-condition  =>  TRUE
[09:05:09.822]            // while "1"  (timeout="50000")
[09:05:09.822]            // while-condition  =>  TRUE
[09:05:09.822]            // while "1"  (timeout="50000")
[09:05:09.822]            // while-condition  =>  TRUE
[09:05:09.823]            // while "1"  (timeout="50000")
[09:05:09.823]            // while-condition  =>  TRUE
[09:05:09.823]            // while "1"  (timeout="50000")
[09:05:09.823]            // while-condition  =>  TRUE
[09:05:09.823]            // while "1"  (timeout="50000")
[09:05:09.823]            // while-condition  =>  TRUE
[09:05:09.824]            // while "1"  (timeout="50000")
[09:05:09.824]            // while-condition  =>  TRUE
[09:05:09.824]            // while "1"  (timeout="50000")
[09:05:09.824]            // while-condition  =>  TRUE
[09:05:09.824]            // while "1"  (timeout="50000")
[09:05:09.826]            // while-condition  =>  TRUE
[09:05:09.826]            // while "1"  (timeout="50000")
[09:05:09.826]            // while-condition  =>  TRUE
[09:05:09.826]            // while "1"  (timeout="50000")
[09:05:09.826]            // while-condition  =>  TRUE
[09:05:09.827]            // while "1"  (timeout="50000")
[09:05:09.827]            // while-condition  =>  TRUE
[09:05:09.827]            // while "1"  (timeout="50000")
[09:05:09.827]            // while-condition  =>  TRUE
[09:05:09.827]            // while "1"  (timeout="50000")
[09:05:09.828]            // while-condition  =>  TRUE
[09:05:09.828]            // while "1"  (timeout="50000")
[09:05:09.828]            // while-condition  =>  TRUE
[09:05:09.828]            // while "1"  (timeout="50000")
[09:05:09.828]            // while-condition  =>  TRUE
[09:05:09.828]            // while "1"  (timeout="50000")
[09:05:09.829]            // while-condition  =>  TRUE
[09:05:09.829]            // while "1"  (timeout="50000")
[09:05:09.829]            // while-condition  =>  TRUE
[09:05:09.829]            // while "1"  (timeout="50000")
[09:05:09.829]            // while-condition  =>  TRUE
[09:05:09.829]            // while "1"  (timeout="50000")
[09:05:09.829]            // while-condition  =>  TRUE
[09:05:09.829]            // while "1"  (timeout="50000")
[09:05:09.829]            // while-condition  =>  TRUE
[09:05:09.830]            // while "1"  (timeout="50000")
[09:05:09.830]            // while-condition  =>  TRUE
[09:05:09.830]            // while "1"  (timeout="50000")
[09:05:09.830]            // while-condition  =>  TRUE
[09:05:09.831]            // while "1"  (timeout="50000")
[09:05:09.831]            // while-condition  =>  TRUE
[09:05:09.831]            // while "1"  (timeout="50000")
[09:05:09.832]            // while-condition  =>  TRUE
[09:05:09.832]            // while "1"  (timeout="50000")
[09:05:09.832]            // while-condition  =>  TRUE
[09:05:09.832]            // while "1"  (timeout="50000")
[09:05:09.832]            // while-condition  =>  TRUE
[09:05:09.833]            // while "1"  (timeout="50000")
[09:05:09.833]            // while-condition  =>  TRUE
[09:05:09.833]            // while "1"  (timeout="50000")
[09:05:09.833]            // while-condition  =>  TRUE
[09:05:09.834]            // while "1"  (timeout="50000")
[09:05:09.834]            // while-condition  =>  TRUE
[09:05:09.834]            // while "1"  (timeout="50000")
[09:05:09.834]            // while-condition  =>  TRUE
[09:05:09.835]            // while "1"  (timeout="50000")
[09:05:09.836]            // while-condition  =>  TRUE
[09:05:09.836]            // while "1"  (timeout="50000")
[09:05:09.836]            // while-condition  =>  TRUE
[09:05:09.836]            // while "1"  (timeout="50000")
[09:05:09.837]            // while-condition  =>  TRUE
[09:05:09.837]            // while "1"  (timeout="50000")
[09:05:09.837]            // while-condition  =>  TRUE
[09:05:09.837]            // while "1"  (timeout="50000")
[09:05:09.838]            // while-condition  =>  TRUE
[09:05:09.838]            // while "1"  (timeout="50000")
[09:05:09.838]            // while-condition  =>  TRUE
[09:05:09.838]            // while "1"  (timeout="50000")
[09:05:09.838]            // while-condition  =>  TRUE
[09:05:09.839]            // while "1"  (timeout="50000")
[09:05:09.839]            // while-condition  =>  TRUE
[09:05:09.839]            // while "1"  (timeout="50000")
[09:05:09.839]            // while-condition  =>  TRUE
[09:05:09.839]            // while "1"  (timeout="50000")
[09:05:09.839]            // while-condition  =>  TRUE
[09:05:09.839]            // while "1"  (timeout="50000")
[09:05:09.839]            // while-condition  =>  TRUE
[09:05:09.839]            // while "1"  (timeout="50000")
[09:05:09.839]            // while-condition  =>  TRUE
[09:05:09.841]            // while "1"  (timeout="50000")
[09:05:09.841]            // while-condition  =>  TRUE
[09:05:09.841]            // while "1"  (timeout="50000")
[09:05:09.841]            // while-condition  =>  TRUE
[09:05:09.841]            // while "1"  (timeout="50000")
[09:05:09.841]            // while-condition  =>  TRUE
[09:05:09.841]            // while "1"  (timeout="50000")
[09:05:09.841]            // while-condition  =>  TRUE
[09:05:09.842]            // while "1"  (timeout="50000")
[09:05:09.842]            // while-condition  =>  TRUE
[09:05:09.842]            // while "1"  (timeout="50000")
[09:05:09.843]            // while-condition  =>  TRUE
[09:05:09.843]            // while "1"  (timeout="50000")
[09:05:09.843]            // while-condition  =>  TRUE
[09:05:09.843]            // while "1"  (timeout="50000")
[09:05:09.843]            // while-condition  =>  TRUE
[09:05:09.844]            // while "1"  (timeout="50000")
[09:05:09.844]            // while-condition  =>  TRUE
[09:05:09.844]            // while "1"  (timeout="50000")
[09:05:09.844]            // while-condition  =>  TRUE
[09:05:09.844]            // while "1"  (timeout="50000")
[09:05:09.845]            // while-condition  =>  TRUE
[09:05:09.845]            // while "1"  (timeout="50000")
[09:05:09.845]            // while-condition  =>  TRUE
[09:05:09.845]            // while "1"  (timeout="50000")
[09:05:09.845]            // while-condition  =>  TRUE
[09:05:09.846]            // while "1"  (timeout="50000")
[09:05:09.846]            // while-condition  =>  TRUE
[09:05:09.846]            // while "1"  (timeout="50000")
[09:05:09.846]            // while-condition  =>  TRUE
[09:05:09.846]            // while "1"  (timeout="50000")
[09:05:09.847]            // while-condition  =>  TRUE
[09:05:09.847]            // while "1"  (timeout="50000")
[09:05:09.847]            // while-condition  =>  TRUE
[09:05:09.847]            // while "1"  (timeout="50000")
[09:05:09.847]            // while-condition  =>  TRUE
[09:05:09.847]            // while "1"  (timeout="50000")
[09:05:09.847]            // while-condition  =>  TRUE
[09:05:09.847]            // while "1"  (timeout="50000")
[09:05:09.847]            // while-condition  =>  TRUE
[09:05:09.847]            // while "1"  (timeout="50000")
[09:05:09.849]            // while-condition  =>  TRUE
[09:05:09.849]            // while "1"  (timeout="50000")
[09:05:09.849]            // while-condition  =>  TRUE
[09:05:09.849]            // while "1"  (timeout="50000")
[09:05:09.849]            // while  =>  TIMEOUT
[09:05:09.849]            // end while "1"
[09:05:09.850]          </control>
[09:05:09.850]          <block atomic="false" info="">
[09:05:09.850]            DAP_SWJ_Pins(nReset, nReset, 0);
[09:05:09.852]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:05:09.852]          </block>
[09:05:09.852]          <control if="" while="1" timeout="10000" info="">
[09:05:09.852]            // while "1"  (timeout="10000")
[09:05:09.853]            // while-condition  =>  TRUE
[09:05:09.853]            // while "1"  (timeout="10000")
[09:05:09.853]            // while-condition  =>  TRUE
[09:05:09.853]            // while "1"  (timeout="10000")
[09:05:09.853]            // while-condition  =>  TRUE
[09:05:09.854]            // while "1"  (timeout="10000")
[09:05:09.854]            // while-condition  =>  TRUE
[09:05:09.854]            // while "1"  (timeout="10000")
[09:05:09.854]            // while-condition  =>  TRUE
[09:05:09.854]            // while "1"  (timeout="10000")
[09:05:09.854]            // while-condition  =>  TRUE
[09:05:09.855]            // while "1"  (timeout="10000")
[09:05:09.855]            // while-condition  =>  TRUE
[09:05:09.855]            // while "1"  (timeout="10000")
[09:05:09.855]            // while-condition  =>  TRUE
[09:05:09.855]            // while "1"  (timeout="10000")
[09:05:09.856]            // while-condition  =>  TRUE
[09:05:09.856]            // while "1"  (timeout="10000")
[09:05:09.856]            // while-condition  =>  TRUE
[09:05:09.856]            // while "1"  (timeout="10000")
[09:05:09.856]            // while-condition  =>  TRUE
[09:05:09.857]            // while "1"  (timeout="10000")
[09:05:09.857]            // while-condition  =>  TRUE
[09:05:09.857]            // while "1"  (timeout="10000")
[09:05:09.857]            // while-condition  =>  TRUE
[09:05:09.857]            // while "1"  (timeout="10000")
[09:05:09.858]            // while-condition  =>  TRUE
[09:05:09.858]            // while "1"  (timeout="10000")
[09:05:09.858]            // while-condition  =>  TRUE
[09:05:09.858]            // while "1"  (timeout="10000")
[09:05:09.858]            // while-condition  =>  TRUE
[09:05:09.859]            // while "1"  (timeout="10000")
[09:05:09.859]            // while-condition  =>  TRUE
[09:05:09.859]            // while "1"  (timeout="10000")
[09:05:09.859]            // while-condition  =>  TRUE
[09:05:09.859]            // while "1"  (timeout="10000")
[09:05:09.859]            // while-condition  =>  TRUE
[09:05:09.860]            // while "1"  (timeout="10000")
[09:05:09.860]            // while-condition  =>  TRUE
[09:05:09.860]            // while "1"  (timeout="10000")
[09:05:09.860]            // while-condition  =>  TRUE
[09:05:09.860]            // while "1"  (timeout="10000")
[09:05:09.861]            // while-condition  =>  TRUE
[09:05:09.861]            // while "1"  (timeout="10000")
[09:05:09.861]            // while-condition  =>  TRUE
[09:05:09.861]            // while "1"  (timeout="10000")
[09:05:09.861]            // while-condition  =>  TRUE
[09:05:09.862]            // while "1"  (timeout="10000")
[09:05:09.862]            // while-condition  =>  TRUE
[09:05:09.862]            // while "1"  (timeout="10000")
[09:05:09.862]            // while-condition  =>  TRUE
[09:05:09.863]            // while "1"  (timeout="10000")
[09:05:09.863]            // while-condition  =>  TRUE
[09:05:09.863]            // while "1"  (timeout="10000")
[09:05:09.863]            // while-condition  =>  TRUE
[09:05:09.864]            // while "1"  (timeout="10000")
[09:05:09.864]            // while-condition  =>  TRUE
[09:05:09.864]            // while "1"  (timeout="10000")
[09:05:09.864]            // while-condition  =>  TRUE
[09:05:09.864]            // while "1"  (timeout="10000")
[09:05:09.865]            // while-condition  =>  TRUE
[09:05:09.865]            // while "1"  (timeout="10000")
[09:05:09.865]            // while  =>  TIMEOUT
[09:05:09.865]            // end while "1"
[09:05:09.866]          </control>
[09:05:09.866]          <block atomic="true" info="">
[09:05:09.869]  
[09:05:09.869]  ! W001 : No atomic sequence support in debug unit
[09:05:09.869]  
[09:05:09.871]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:05:09.874]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:05:09.874]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:05:09.877]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:05:09.878]          </block>
[09:05:09.878]          <block atomic="false" info="">
[09:05:09.879]            __errorcontrol = 0x00000001;
[09:05:09.879]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:05:09.880]            ReadDP(0x0);
[09:05:09.883]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:05:09.884]            __errorcontrol = 0x00000000;
[09:05:09.885]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:05:09.885]          </block>
[09:05:09.886]        </sequence>
[09:05:09.886]      Sequence("DebugPortSetup");
[09:05:09.887]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:05:09.887]        </sequence>
[09:05:09.888]      Sequence("DebugPortStart");
[09:05:09.888]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:05:09.889]          <block atomic="false" info="">
[09:05:09.890]            __var SW_DP_ABORT  = 0x0;
[09:05:09.890]              // -> [SW_DP_ABORT <= 0x00000000]
[09:05:09.890]            __var DP_CTRL_STAT = 0x4;
[09:05:09.891]              // -> [DP_CTRL_STAT <= 0x00000004]
[09:05:09.891]            __var DP_SELECT    = 0x8;
[09:05:09.891]              // -> [DP_SELECT <= 0x00000008]
[09:05:09.892]            __var powered_down = 0;
[09:05:09.892]              // -> [powered_down <= 0x00000000]
[09:05:09.892]            WriteDP(DP_SELECT, 0x00000000);
[09:05:09.894]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:05:09.894]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:05:09.898]              // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:05:09.898]              // -> [powered_down <= 0x00000000]
[09:05:09.898]          </block>
[09:05:09.899]          <control if="powered_down" while="" timeout="0" info="">
[09:05:09.899]            // if-block "powered_down"
[09:05:09.899]              // =>  FALSE
[09:05:09.899]            // skip if-block "powered_down"
[09:05:09.900]          </control>
[09:05:09.900]        </sequence>
[09:05:09.900]      Sequence("DebugCoreStart");
[09:05:09.901]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:05:09.901]          <block atomic="true" info="">
[09:05:09.904]  
[09:05:09.904]  ! W001 : No atomic sequence support in debug unit
[09:05:09.904]  
[09:05:09.906]            __var DP_R_IDCODE    = 0x0;
[09:05:09.906]              // -> [DP_R_IDCODE <= 0x00000000]
[09:05:09.907]            __var DP_W_ABORT    = 0x0;
[09:05:09.908]              // -> [DP_W_ABORT <= 0x00000000]
[09:05:09.908]            __var DP_CTRLSTAT = 0x4;
[09:05:09.909]              // -> [DP_CTRLSTAT <= 0x00000004]
[09:05:09.909]            __var DP_W_SELECT    = 0x8;
[09:05:09.910]              // -> [DP_W_SELECT <= 0x00000008]
[09:05:09.910]            __var AP_TAR		= 0x4;
[09:05:09.911]              // -> [AP_TAR <= 0x00000004]
[09:05:09.911]            __var AP_BD0		= 0x0;
[09:05:09.911]              // -> [AP_BD0 <= 0x00000000]
[09:05:09.911]            __var AP_BD1		= 0x4;
[09:05:09.912]              // -> [AP_BD1 <= 0x00000004]
[09:05:09.912]            __var AP_BD2		= 0x8;
[09:05:09.912]              // -> [AP_BD2 <= 0x00000008]
[09:05:09.913]            __var PCWithinFlash = 0;
[09:05:09.913]              // -> [PCWithinFlash <= 0x00000000]
[09:05:09.913]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:05:09.920]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.921]          </block>
[09:05:09.921]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:05:09.921]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:05:09.928]              // -> [Read32(0xE000EDF0) => 0x00030003]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.929]            // while-condition  =>  FALSE
[09:05:09.929]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:05:09.930]          </control>
[09:05:09.931]          <block atomic="true" info="">
[09:05:09.935]  
[09:05:09.935]  ! W001 : No atomic sequence support in debug unit
[09:05:09.935]  
[09:05:09.936]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:05:09.939]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:05:09.939]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:05:09.942]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.942]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:05:09.945]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:05:09.945]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:05:09.949]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.949]          </block>
[09:05:09.964]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:05:09.964]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.967]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.967]            // while-condition  =>  TRUE
[09:05:09.968]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.970]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.970]            // while-condition  =>  TRUE
[09:05:09.971]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.972]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.972]            // while-condition  =>  TRUE
[09:05:09.973]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.976]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.976]            // while-condition  =>  TRUE
[09:05:09.977]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.980]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.980]            // while-condition  =>  TRUE
[09:05:09.981]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.983]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.983]            // while-condition  =>  TRUE
[09:05:09.984]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.986]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.986]            // while-condition  =>  TRUE
[09:05:09.987]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.989]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.989]            // while-condition  =>  TRUE
[09:05:09.989]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.992]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.992]            // while-condition  =>  TRUE
[09:05:09.992]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:09.996]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:09.996]            // while-condition  =>  TRUE
[09:05:09.997]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:10.000]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:10.000]            // while-condition  =>  TRUE
[09:05:10.001]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:10.003]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:10.003]            // while-condition  =>  TRUE
[09:05:10.004]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:10.006]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:10.006]            // while-condition  =>  TRUE
[09:05:10.007]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:10.009]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:10.009]            // while-condition  =>  TRUE
[09:05:10.010]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:10.012]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:10.012]            // while-condition  =>  TRUE
[09:05:10.013]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:10.015]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:10.015]            // while-condition  =>  TRUE
[09:05:10.016]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:10.017]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:10.018]            // while-condition  =>  TRUE
[09:05:10.019]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:10.021]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:10.021]            // while-condition  =>  TRUE
[09:05:10.022]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:10.024]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:10.024]            // while-condition  =>  TRUE
[09:05:10.025]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:10.027]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:10.027]            // while-condition  =>  TRUE
[09:05:10.028]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:10.030]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:10.030]            // while-condition  =>  TRUE
[09:05:10.031]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:10.033]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:10.033]            // while-condition  =>  TRUE
[09:05:10.033]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:10.036]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:10.036]            // while-condition  =>  TRUE
[09:05:10.036]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:10.039]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:10.039]            // while-condition  =>  TRUE
[09:05:10.039]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:10.042]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:10.042]            // while-condition  =>  TRUE
[09:05:10.042]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:10.045]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:10.045]            // while-condition  =>  TRUE
[09:05:10.046]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:10.048]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:10.048]            // while-condition  =>  TRUE
[09:05:10.048]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:10.051]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:10.051]            // while-condition  =>  TRUE
[09:05:10.052]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:10.054]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:10.054]            // while-condition  =>  TRUE
[09:05:10.054]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:10.057]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:10.057]            // while-condition  =>  TRUE
[09:05:10.058]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:10.061]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:10.061]            // while-condition  =>  TRUE
[09:05:10.062]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:10.064]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:10.065]            // while-condition  =>  TRUE
[09:05:10.065]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:10.068]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:05:10.068]            // while-condition  =>  TRUE
[09:05:10.069]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:05:10.069]            // while  =>  TIMEOUT
[09:05:10.070]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:05:10.070]          </control>
[09:05:10.071]          <block atomic="false" info="">
[09:05:10.071]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:05:10.074]              // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:05:10.074]              // -> [PCWithinFlash <= 0x00000000]
[09:05:10.075]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:05:10.077]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:05:10.077]          </block>
[09:05:10.078]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:05:10.078]            // if-block "PCWithinFlash == 0"
[09:05:10.079]              // =>  TRUE
[09:05:10.079]            // end if-block "PCWithinFlash == 0"
[09:05:10.080]          </control>
[09:05:10.080]        </sequence>
[09:05:10.081]    </block>
[09:05:10.081]  </sequence>
[09:05:10.081]  
[09:05:21.154]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[09:05:21.154]  
[09:05:21.155]  <debugvars>
[09:05:21.155]    // Pre-defined
[09:05:21.155]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:05:21.156]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:05:21.156]    __dp=0x00000000
[09:05:21.157]    __ap=0x00000000
[09:05:21.157]    __traceout=0x00000000      (Trace Disabled)
[09:05:21.158]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:05:21.158]    __FlashAddr=0x00000000
[09:05:21.159]    __FlashLen=0x00000000
[09:05:21.159]    __FlashArg=0x00000000
[09:05:21.159]    __FlashOp=0x00000000
[09:05:21.160]    __Result=0x00000000
[09:05:21.161]  </debugvars>
[09:05:21.161]  
[09:05:21.161]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[09:05:21.162]    <block atomic="false" info="">
[09:05:21.162]      __var nReset      = 0x80;
[09:05:21.162]        // -> [nReset <= 0x00000080]
[09:05:21.163]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:05:21.165]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:05:21.165]    </block>
[09:05:21.165]    <control if="" while="1" timeout="50000" info="">
[09:05:21.165]      // while "1"  (timeout="50000")
[09:05:21.165]      // while-condition  =>  TRUE
[09:05:21.165]      // while "1"  (timeout="50000")
[09:05:21.166]      // while-condition  =>  TRUE
[09:05:21.166]      // while "1"  (timeout="50000")
[09:05:21.166]      // while-condition  =>  TRUE
[09:05:21.166]      // while "1"  (timeout="50000")
[09:05:21.167]      // while-condition  =>  TRUE
[09:05:21.167]      // while "1"  (timeout="50000")
[09:05:21.167]      // while-condition  =>  TRUE
[09:05:21.167]      // while "1"  (timeout="50000")
[09:05:21.168]      // while-condition  =>  TRUE
[09:05:21.168]      // while "1"  (timeout="50000")
[09:05:21.168]      // while-condition  =>  TRUE
[09:05:21.168]      // while "1"  (timeout="50000")
[09:05:21.168]      // while-condition  =>  TRUE
[09:05:21.169]      // while "1"  (timeout="50000")
[09:05:21.170]      // while-condition  =>  TRUE
[09:05:21.170]      // while "1"  (timeout="50000")
[09:05:21.170]      // while-condition  =>  TRUE
[09:05:21.170]      // while "1"  (timeout="50000")
[09:05:21.171]      // while-condition  =>  TRUE
[09:05:21.171]      // while "1"  (timeout="50000")
[09:05:21.171]      // while-condition  =>  TRUE
[09:05:21.171]      // while "1"  (timeout="50000")
[09:05:21.171]      // while-condition  =>  TRUE
[09:05:21.172]      // while "1"  (timeout="50000")
[09:05:21.172]      // while-condition  =>  TRUE
[09:05:21.172]      // while "1"  (timeout="50000")
[09:05:21.172]      // while-condition  =>  TRUE
[09:05:21.172]      // while "1"  (timeout="50000")
[09:05:21.173]      // while-condition  =>  TRUE
[09:05:21.173]      // while "1"  (timeout="50000")
[09:05:21.173]      // while-condition  =>  TRUE
[09:05:21.173]      // while "1"  (timeout="50000")
[09:05:21.173]      // while-condition  =>  TRUE
[09:05:21.174]      // while "1"  (timeout="50000")
[09:05:21.174]      // while-condition  =>  TRUE
[09:05:21.174]      // while "1"  (timeout="50000")
[09:05:21.174]      // while-condition  =>  TRUE
[09:05:21.174]      // while "1"  (timeout="50000")
[09:05:21.175]      // while-condition  =>  TRUE
[09:05:21.175]      // while "1"  (timeout="50000")
[09:05:21.175]      // while-condition  =>  TRUE
[09:05:21.175]      // while "1"  (timeout="50000")
[09:05:21.175]      // while-condition  =>  TRUE
[09:05:21.175]      // while "1"  (timeout="50000")
[09:05:21.175]      // while-condition  =>  TRUE
[09:05:21.175]      // while "1"  (timeout="50000")
[09:05:21.175]      // while-condition  =>  TRUE
[09:05:21.175]      // while "1"  (timeout="50000")
[09:05:21.175]      // while-condition  =>  TRUE
[09:05:21.176]      // while "1"  (timeout="50000")
[09:05:21.177]      // while-condition  =>  TRUE
[09:05:21.177]      // while "1"  (timeout="50000")
[09:05:21.177]      // while-condition  =>  TRUE
[09:05:21.177]      // while "1"  (timeout="50000")
[09:05:21.177]      // while-condition  =>  TRUE
[09:05:21.178]      // while "1"  (timeout="50000")
[09:05:21.178]      // while-condition  =>  TRUE
[09:05:21.178]      // while "1"  (timeout="50000")
[09:05:21.178]      // while-condition  =>  TRUE
[09:05:21.178]      // while "1"  (timeout="50000")
[09:05:21.178]      // while-condition  =>  TRUE
[09:05:21.178]      // while "1"  (timeout="50000")
[09:05:21.178]      // while-condition  =>  TRUE
[09:05:21.179]      // while "1"  (timeout="50000")
[09:05:21.179]      // while-condition  =>  TRUE
[09:05:21.179]      // while "1"  (timeout="50000")
[09:05:21.179]      // while-condition  =>  TRUE
[09:05:21.179]      // while "1"  (timeout="50000")
[09:05:21.180]      // while-condition  =>  TRUE
[09:05:21.180]      // while "1"  (timeout="50000")
[09:05:21.180]      // while-condition  =>  TRUE
[09:05:21.180]      // while "1"  (timeout="50000")
[09:05:21.180]      // while-condition  =>  TRUE
[09:05:21.180]      // while "1"  (timeout="50000")
[09:05:21.181]      // while-condition  =>  TRUE
[09:05:21.182]      // while "1"  (timeout="50000")
[09:05:21.182]      // while-condition  =>  TRUE
[09:05:21.182]      // while "1"  (timeout="50000")
[09:05:21.182]      // while-condition  =>  TRUE
[09:05:21.182]      // while "1"  (timeout="50000")
[09:05:21.183]      // while-condition  =>  TRUE
[09:05:21.183]      // while "1"  (timeout="50000")
[09:05:21.183]      // while-condition  =>  TRUE
[09:05:21.183]      // while "1"  (timeout="50000")
[09:05:21.183]      // while-condition  =>  TRUE
[09:05:21.184]      // while "1"  (timeout="50000")
[09:05:21.184]      // while-condition  =>  TRUE
[09:05:21.184]      // while "1"  (timeout="50000")
[09:05:21.184]      // while-condition  =>  TRUE
[09:05:21.184]      // while "1"  (timeout="50000")
[09:05:21.184]      // while-condition  =>  TRUE
[09:05:21.185]      // while "1"  (timeout="50000")
[09:05:21.185]      // while-condition  =>  TRUE
[09:05:21.185]      // while "1"  (timeout="50000")
[09:05:21.185]      // while-condition  =>  TRUE
[09:05:21.185]      // while "1"  (timeout="50000")
[09:05:21.186]      // while-condition  =>  TRUE
[09:05:21.186]      // while "1"  (timeout="50000")
[09:05:21.186]      // while-condition  =>  TRUE
[09:05:21.186]      // while "1"  (timeout="50000")
[09:05:21.186]      // while-condition  =>  TRUE
[09:05:21.187]      // while "1"  (timeout="50000")
[09:05:21.187]      // while-condition  =>  TRUE
[09:05:21.187]      // while "1"  (timeout="50000")
[09:05:21.187]      // while-condition  =>  TRUE
[09:05:21.187]      // while "1"  (timeout="50000")
[09:05:21.188]      // while-condition  =>  TRUE
[09:05:21.188]      // while "1"  (timeout="50000")
[09:05:21.188]      // while-condition  =>  TRUE
[09:05:21.188]      // while "1"  (timeout="50000")
[09:05:21.188]      // while-condition  =>  TRUE
[09:05:21.189]      // while "1"  (timeout="50000")
[09:05:21.189]      // while-condition  =>  TRUE
[09:05:21.189]      // while "1"  (timeout="50000")
[09:05:21.189]      // while-condition  =>  TRUE
[09:05:21.189]      // while "1"  (timeout="50000")
[09:05:21.189]      // while-condition  =>  TRUE
[09:05:21.189]      // while "1"  (timeout="50000")
[09:05:21.189]      // while-condition  =>  TRUE
[09:05:21.189]      // while "1"  (timeout="50000")
[09:05:21.190]      // while-condition  =>  TRUE
[09:05:21.191]      // while "1"  (timeout="50000")
[09:05:21.191]      // while-condition  =>  TRUE
[09:05:21.191]      // while "1"  (timeout="50000")
[09:05:21.191]      // while-condition  =>  TRUE
[09:05:21.191]      // while "1"  (timeout="50000")
[09:05:21.191]      // while-condition  =>  TRUE
[09:05:21.192]      // while "1"  (timeout="50000")
[09:05:21.192]      // while-condition  =>  TRUE
[09:05:21.192]      // while "1"  (timeout="50000")
[09:05:21.192]      // while-condition  =>  TRUE
[09:05:21.193]      // while "1"  (timeout="50000")
[09:05:21.193]      // while-condition  =>  TRUE
[09:05:21.193]      // while "1"  (timeout="50000")
[09:05:21.193]      // while-condition  =>  TRUE
[09:05:21.193]      // while "1"  (timeout="50000")
[09:05:21.194]      // while-condition  =>  TRUE
[09:05:21.194]      // while "1"  (timeout="50000")
[09:05:21.194]      // while-condition  =>  TRUE
[09:05:21.194]      // while "1"  (timeout="50000")
[09:05:21.194]      // while-condition  =>  TRUE
[09:05:21.194]      // while "1"  (timeout="50000")
[09:05:21.195]      // while-condition  =>  TRUE
[09:05:21.195]      // while "1"  (timeout="50000")
[09:05:21.195]      // while-condition  =>  TRUE
[09:05:21.195]      // while "1"  (timeout="50000")
[09:05:21.195]      // while-condition  =>  TRUE
[09:05:21.195]      // while "1"  (timeout="50000")
[09:05:21.196]      // while-condition  =>  TRUE
[09:05:21.196]      // while "1"  (timeout="50000")
[09:05:21.196]      // while-condition  =>  TRUE
[09:05:21.196]      // while "1"  (timeout="50000")
[09:05:21.197]      // while-condition  =>  TRUE
[09:05:21.197]      // while "1"  (timeout="50000")
[09:05:21.197]      // while-condition  =>  TRUE
[09:05:21.197]      // while "1"  (timeout="50000")
[09:05:21.197]      // while-condition  =>  TRUE
[09:05:21.198]      // while "1"  (timeout="50000")
[09:05:21.198]      // while-condition  =>  TRUE
[09:05:21.198]      // while "1"  (timeout="50000")
[09:05:21.198]      // while-condition  =>  TRUE
[09:05:21.198]      // while "1"  (timeout="50000")
[09:05:21.199]      // while-condition  =>  TRUE
[09:05:21.199]      // while "1"  (timeout="50000")
[09:05:21.199]      // while-condition  =>  TRUE
[09:05:21.199]      // while "1"  (timeout="50000")
[09:05:21.199]      // while-condition  =>  TRUE
[09:05:21.199]      // while "1"  (timeout="50000")
[09:05:21.199]      // while-condition  =>  TRUE
[09:05:21.199]      // while "1"  (timeout="50000")
[09:05:21.199]      // while-condition  =>  TRUE
[09:05:21.200]      // while "1"  (timeout="50000")
[09:05:21.200]      // while-condition  =>  TRUE
[09:05:21.200]      // while "1"  (timeout="50000")
[09:05:21.200]      // while-condition  =>  TRUE
[09:05:21.200]      // while "1"  (timeout="50000")
[09:05:21.201]      // while-condition  =>  TRUE
[09:05:21.202]      // while "1"  (timeout="50000")
[09:05:21.202]      // while-condition  =>  TRUE
[09:05:21.202]      // while "1"  (timeout="50000")
[09:05:21.202]      // while-condition  =>  TRUE
[09:05:21.202]      // while "1"  (timeout="50000")
[09:05:21.202]      // while-condition  =>  TRUE
[09:05:21.203]      // while "1"  (timeout="50000")
[09:05:21.203]      // while-condition  =>  TRUE
[09:05:21.203]      // while "1"  (timeout="50000")
[09:05:21.203]      // while-condition  =>  TRUE
[09:05:21.203]      // while "1"  (timeout="50000")
[09:05:21.204]      // while-condition  =>  TRUE
[09:05:21.204]      // while "1"  (timeout="50000")
[09:05:21.204]      // while-condition  =>  TRUE
[09:05:21.204]      // while "1"  (timeout="50000")
[09:05:21.204]      // while-condition  =>  TRUE
[09:05:21.205]      // while "1"  (timeout="50000")
[09:05:21.205]      // while-condition  =>  TRUE
[09:05:21.205]      // while "1"  (timeout="50000")
[09:05:21.205]      // while-condition  =>  TRUE
[09:05:21.205]      // while "1"  (timeout="50000")
[09:05:21.205]      // while-condition  =>  TRUE
[09:05:21.205]      // while "1"  (timeout="50000")
[09:05:21.205]      // while-condition  =>  TRUE
[09:05:21.206]      // while "1"  (timeout="50000")
[09:05:21.206]      // while-condition  =>  TRUE
[09:05:21.206]      // while "1"  (timeout="50000")
[09:05:21.206]      // while-condition  =>  TRUE
[09:05:21.206]      // while "1"  (timeout="50000")
[09:05:21.207]      // while-condition  =>  TRUE
[09:05:21.207]      // while "1"  (timeout="50000")
[09:05:21.207]      // while-condition  =>  TRUE
[09:05:21.207]      // while "1"  (timeout="50000")
[09:05:21.208]      // while-condition  =>  TRUE
[09:05:21.208]      // while "1"  (timeout="50000")
[09:05:21.208]      // while-condition  =>  TRUE
[09:05:21.208]      // while "1"  (timeout="50000")
[09:05:21.209]      // while-condition  =>  TRUE
[09:05:21.209]      // while "1"  (timeout="50000")
[09:05:21.209]      // while-condition  =>  TRUE
[09:05:21.209]      // while "1"  (timeout="50000")
[09:05:21.210]      // while-condition  =>  TRUE
[09:05:21.210]      // while "1"  (timeout="50000")
[09:05:21.210]      // while-condition  =>  TRUE
[09:05:21.210]      // while "1"  (timeout="50000")
[09:05:21.210]      // while-condition  =>  TRUE
[09:05:21.211]      // while "1"  (timeout="50000")
[09:05:21.211]      // while-condition  =>  TRUE
[09:05:21.211]      // while "1"  (timeout="50000")
[09:05:21.212]      // while-condition  =>  TRUE
[09:05:21.212]      // while "1"  (timeout="50000")
[09:05:21.212]      // while-condition  =>  TRUE
[09:05:21.213]      // while "1"  (timeout="50000")
[09:05:21.214]      // while-condition  =>  TRUE
[09:05:21.214]      // while "1"  (timeout="50000")
[09:05:21.214]      // while-condition  =>  TRUE
[09:05:21.215]      // while "1"  (timeout="50000")
[09:05:21.215]      // while-condition  =>  TRUE
[09:05:21.215]      // while "1"  (timeout="50000")
[09:05:21.215]      // while-condition  =>  TRUE
[09:05:21.216]      // while "1"  (timeout="50000")
[09:05:21.216]      // while-condition  =>  TRUE
[09:05:21.216]      // while "1"  (timeout="50000")
[09:05:21.217]      // while-condition  =>  TRUE
[09:05:21.217]      // while "1"  (timeout="50000")
[09:05:21.217]      // while-condition  =>  TRUE
[09:05:21.217]      // while "1"  (timeout="50000")
[09:05:21.218]      // while-condition  =>  TRUE
[09:05:21.218]      // while "1"  (timeout="50000")
[09:05:21.218]      // while-condition  =>  TRUE
[09:05:21.219]      // while "1"  (timeout="50000")
[09:05:21.220]      // while-condition  =>  TRUE
[09:05:21.220]      // while "1"  (timeout="50000")
[09:05:21.220]      // while-condition  =>  TRUE
[09:05:21.220]      // while "1"  (timeout="50000")
[09:05:21.220]      // while-condition  =>  TRUE
[09:05:21.220]      // while "1"  (timeout="50000")
[09:05:21.220]      // while-condition  =>  TRUE
[09:05:21.220]      // while "1"  (timeout="50000")
[09:05:21.221]      // while-condition  =>  TRUE
[09:05:21.221]      // while "1"  (timeout="50000")
[09:05:21.221]      // while-condition  =>  TRUE
[09:05:21.221]      // while "1"  (timeout="50000")
[09:05:21.221]      // while-condition  =>  TRUE
[09:05:21.222]      // while "1"  (timeout="50000")
[09:05:21.222]      // while-condition  =>  TRUE
[09:05:21.222]      // while "1"  (timeout="50000")
[09:05:21.222]      // while-condition  =>  TRUE
[09:05:21.222]      // while "1"  (timeout="50000")
[09:05:21.222]      // while-condition  =>  TRUE
[09:05:21.223]      // while "1"  (timeout="50000")
[09:05:21.224]      // while-condition  =>  TRUE
[09:05:21.224]      // while "1"  (timeout="50000")
[09:05:21.224]      // while-condition  =>  TRUE
[09:05:21.224]      // while "1"  (timeout="50000")
[09:05:21.224]      // while  =>  TIMEOUT
[09:05:21.224]      // end while "1"
[09:05:21.225]    </control>
[09:05:21.225]    <block atomic="false" info="">
[09:05:21.225]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:05:21.227]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:05:21.227]    </block>
[09:05:21.227]  </sequence>
[09:05:21.227]  
[09:06:18.362]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:06:18.362]  
[09:06:18.362]  <debugvars>
[09:06:18.363]    // Pre-defined
[09:06:18.363]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:06:18.363]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:06:18.364]    __dp=0x00000000
[09:06:18.364]    __ap=0x00000000
[09:06:18.364]    __traceout=0x00000000      (Trace Disabled)
[09:06:18.365]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:06:18.365]    __FlashAddr=0x00000000
[09:06:18.366]    __FlashLen=0x00000000
[09:06:18.366]    __FlashArg=0x00000000
[09:06:18.366]    __FlashOp=0x00000000
[09:06:18.367]    __Result=0x00000000
[09:06:18.367]  </debugvars>
[09:06:18.367]  
[09:06:18.368]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:06:18.368]    <block atomic="false" info="">
[09:06:18.368]      __var nReset      = 0x80;
[09:06:18.369]        // -> [nReset <= 0x00000080]
[09:06:18.369]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:06:18.371]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:06:18.371]    </block>
[09:06:18.371]    <control if="" while="1" timeout="50000" info="">
[09:06:18.372]      // while "1"  (timeout="50000")
[09:06:18.372]      // while-condition  =>  TRUE
[09:06:18.372]      // while "1"  (timeout="50000")
[09:06:18.373]      // while-condition  =>  TRUE
[09:06:18.373]      // while "1"  (timeout="50000")
[09:06:18.373]      // while-condition  =>  TRUE
[09:06:18.373]      // while "1"  (timeout="50000")
[09:06:18.374]      // while-condition  =>  TRUE
[09:06:18.374]      // while "1"  (timeout="50000")
[09:06:18.374]      // while-condition  =>  TRUE
[09:06:18.374]      // while "1"  (timeout="50000")
[09:06:18.375]      // while-condition  =>  TRUE
[09:06:18.375]      // while "1"  (timeout="50000")
[09:06:18.375]      // while-condition  =>  TRUE
[09:06:18.375]      // while "1"  (timeout="50000")
[09:06:18.376]      // while-condition  =>  TRUE
[09:06:18.376]      // while "1"  (timeout="50000")
[09:06:18.376]      // while-condition  =>  TRUE
[09:06:18.376]      // while "1"  (timeout="50000")
[09:06:18.377]      // while-condition  =>  TRUE
[09:06:18.377]      // while "1"  (timeout="50000")
[09:06:18.377]      // while-condition  =>  TRUE
[09:06:18.377]      // while "1"  (timeout="50000")
[09:06:18.378]      // while-condition  =>  TRUE
[09:06:18.378]      // while "1"  (timeout="50000")
[09:06:18.378]      // while-condition  =>  TRUE
[09:06:18.378]      // while "1"  (timeout="50000")
[09:06:18.378]      // while-condition  =>  TRUE
[09:06:18.379]      // while "1"  (timeout="50000")
[09:06:18.379]      // while-condition  =>  TRUE
[09:06:18.379]      // while "1"  (timeout="50000")
[09:06:18.379]      // while-condition  =>  TRUE
[09:06:18.379]      // while "1"  (timeout="50000")
[09:06:18.380]      // while-condition  =>  TRUE
[09:06:18.380]      // while "1"  (timeout="50000")
[09:06:18.380]      // while-condition  =>  TRUE
[09:06:18.380]      // while "1"  (timeout="50000")
[09:06:18.380]      // while-condition  =>  TRUE
[09:06:18.381]      // while "1"  (timeout="50000")
[09:06:18.381]      // while-condition  =>  TRUE
[09:06:18.381]      // while "1"  (timeout="50000")
[09:06:18.381]      // while-condition  =>  TRUE
[09:06:18.381]      // while "1"  (timeout="50000")
[09:06:18.382]      // while-condition  =>  TRUE
[09:06:18.382]      // while "1"  (timeout="50000")
[09:06:18.382]      // while-condition  =>  TRUE
[09:06:18.382]      // while "1"  (timeout="50000")
[09:06:18.382]      // while-condition  =>  TRUE
[09:06:18.383]      // while "1"  (timeout="50000")
[09:06:18.383]      // while-condition  =>  TRUE
[09:06:18.383]      // while "1"  (timeout="50000")
[09:06:18.383]      // while-condition  =>  TRUE
[09:06:18.383]      // while "1"  (timeout="50000")
[09:06:18.384]      // while-condition  =>  TRUE
[09:06:18.384]      // while "1"  (timeout="50000")
[09:06:18.384]      // while-condition  =>  TRUE
[09:06:18.384]      // while "1"  (timeout="50000")
[09:06:18.384]      // while-condition  =>  TRUE
[09:06:18.385]      // while "1"  (timeout="50000")
[09:06:18.385]      // while-condition  =>  TRUE
[09:06:18.385]      // while "1"  (timeout="50000")
[09:06:18.385]      // while-condition  =>  TRUE
[09:06:18.386]      // while "1"  (timeout="50000")
[09:06:18.386]      // while-condition  =>  TRUE
[09:06:18.386]      // while "1"  (timeout="50000")
[09:06:18.386]      // while-condition  =>  TRUE
[09:06:18.386]      // while "1"  (timeout="50000")
[09:06:18.386]      // while-condition  =>  TRUE
[09:06:18.387]      // while "1"  (timeout="50000")
[09:06:18.387]      // while-condition  =>  TRUE
[09:06:18.387]      // while "1"  (timeout="50000")
[09:06:18.387]      // while-condition  =>  TRUE
[09:06:18.387]      // while "1"  (timeout="50000")
[09:06:18.388]      // while-condition  =>  TRUE
[09:06:18.388]      // while "1"  (timeout="50000")
[09:06:18.388]      // while-condition  =>  TRUE
[09:06:18.388]      // while "1"  (timeout="50000")
[09:06:18.388]      // while-condition  =>  TRUE
[09:06:18.389]      // while "1"  (timeout="50000")
[09:06:18.389]      // while-condition  =>  TRUE
[09:06:18.389]      // while "1"  (timeout="50000")
[09:06:18.389]      // while-condition  =>  TRUE
[09:06:18.389]      // while "1"  (timeout="50000")
[09:06:18.390]      // while-condition  =>  TRUE
[09:06:18.390]      // while "1"  (timeout="50000")
[09:06:18.390]      // while-condition  =>  TRUE
[09:06:18.390]      // while "1"  (timeout="50000")
[09:06:18.391]      // while-condition  =>  TRUE
[09:06:18.391]      // while "1"  (timeout="50000")
[09:06:18.391]      // while-condition  =>  TRUE
[09:06:18.391]      // while "1"  (timeout="50000")
[09:06:18.391]      // while-condition  =>  TRUE
[09:06:18.392]      // while "1"  (timeout="50000")
[09:06:18.392]      // while-condition  =>  TRUE
[09:06:18.392]      // while "1"  (timeout="50000")
[09:06:18.392]      // while-condition  =>  TRUE
[09:06:18.393]      // while "1"  (timeout="50000")
[09:06:18.393]      // while-condition  =>  TRUE
[09:06:18.393]      // while "1"  (timeout="50000")
[09:06:18.393]      // while-condition  =>  TRUE
[09:06:18.394]      // while "1"  (timeout="50000")
[09:06:18.394]      // while-condition  =>  TRUE
[09:06:18.394]      // while "1"  (timeout="50000")
[09:06:18.394]      // while-condition  =>  TRUE
[09:06:18.394]      // while "1"  (timeout="50000")
[09:06:18.395]      // while-condition  =>  TRUE
[09:06:18.395]      // while "1"  (timeout="50000")
[09:06:18.395]      // while-condition  =>  TRUE
[09:06:18.395]      // while "1"  (timeout="50000")
[09:06:18.396]      // while-condition  =>  TRUE
[09:06:18.396]      // while "1"  (timeout="50000")
[09:06:18.396]      // while-condition  =>  TRUE
[09:06:18.396]      // while "1"  (timeout="50000")
[09:06:18.397]      // while-condition  =>  TRUE
[09:06:18.397]      // while "1"  (timeout="50000")
[09:06:18.397]      // while-condition  =>  TRUE
[09:06:18.397]      // while "1"  (timeout="50000")
[09:06:18.397]      // while-condition  =>  TRUE
[09:06:18.398]      // while "1"  (timeout="50000")
[09:06:18.398]      // while-condition  =>  TRUE
[09:06:18.398]      // while "1"  (timeout="50000")
[09:06:18.398]      // while-condition  =>  TRUE
[09:06:18.399]      // while "1"  (timeout="50000")
[09:06:18.399]      // while-condition  =>  TRUE
[09:06:18.399]      // while "1"  (timeout="50000")
[09:06:18.399]      // while-condition  =>  TRUE
[09:06:18.399]      // while "1"  (timeout="50000")
[09:06:18.400]      // while-condition  =>  TRUE
[09:06:18.400]      // while "1"  (timeout="50000")
[09:06:18.400]      // while-condition  =>  TRUE
[09:06:18.400]      // while "1"  (timeout="50000")
[09:06:18.401]      // while-condition  =>  TRUE
[09:06:18.401]      // while "1"  (timeout="50000")
[09:06:18.401]      // while-condition  =>  TRUE
[09:06:18.401]      // while "1"  (timeout="50000")
[09:06:18.401]      // while-condition  =>  TRUE
[09:06:18.402]      // while "1"  (timeout="50000")
[09:06:18.402]      // while-condition  =>  TRUE
[09:06:18.402]      // while "1"  (timeout="50000")
[09:06:18.402]      // while-condition  =>  TRUE
[09:06:18.403]      // while "1"  (timeout="50000")
[09:06:18.403]      // while-condition  =>  TRUE
[09:06:18.403]      // while "1"  (timeout="50000")
[09:06:18.403]      // while-condition  =>  TRUE
[09:06:18.403]      // while "1"  (timeout="50000")
[09:06:18.404]      // while-condition  =>  TRUE
[09:06:18.404]      // while "1"  (timeout="50000")
[09:06:18.404]      // while-condition  =>  TRUE
[09:06:18.404]      // while "1"  (timeout="50000")
[09:06:18.405]      // while-condition  =>  TRUE
[09:06:18.405]      // while "1"  (timeout="50000")
[09:06:18.405]      // while-condition  =>  TRUE
[09:06:18.405]      // while "1"  (timeout="50000")
[09:06:18.405]      // while-condition  =>  TRUE
[09:06:18.406]      // while "1"  (timeout="50000")
[09:06:18.406]      // while-condition  =>  TRUE
[09:06:18.406]      // while "1"  (timeout="50000")
[09:06:18.406]      // while-condition  =>  TRUE
[09:06:18.406]      // while "1"  (timeout="50000")
[09:06:18.407]      // while-condition  =>  TRUE
[09:06:18.407]      // while "1"  (timeout="50000")
[09:06:18.407]      // while-condition  =>  TRUE
[09:06:18.407]      // while "1"  (timeout="50000")
[09:06:18.408]      // while-condition  =>  TRUE
[09:06:18.408]      // while "1"  (timeout="50000")
[09:06:18.408]      // while-condition  =>  TRUE
[09:06:18.408]      // while "1"  (timeout="50000")
[09:06:18.408]      // while-condition  =>  TRUE
[09:06:18.409]      // while "1"  (timeout="50000")
[09:06:18.409]      // while-condition  =>  TRUE
[09:06:18.409]      // while "1"  (timeout="50000")
[09:06:18.409]      // while-condition  =>  TRUE
[09:06:18.410]      // while "1"  (timeout="50000")
[09:06:18.410]      // while-condition  =>  TRUE
[09:06:18.410]      // while "1"  (timeout="50000")
[09:06:18.410]      // while-condition  =>  TRUE
[09:06:18.410]      // while "1"  (timeout="50000")
[09:06:18.411]      // while-condition  =>  TRUE
[09:06:18.411]      // while "1"  (timeout="50000")
[09:06:18.411]      // while-condition  =>  TRUE
[09:06:18.411]      // while "1"  (timeout="50000")
[09:06:18.412]      // while-condition  =>  TRUE
[09:06:18.412]      // while "1"  (timeout="50000")
[09:06:18.412]      // while-condition  =>  TRUE
[09:06:18.412]      // while "1"  (timeout="50000")
[09:06:18.413]      // while-condition  =>  TRUE
[09:06:18.413]      // while "1"  (timeout="50000")
[09:06:18.413]      // while-condition  =>  TRUE
[09:06:18.413]      // while "1"  (timeout="50000")
[09:06:18.413]      // while-condition  =>  TRUE
[09:06:18.414]      // while "1"  (timeout="50000")
[09:06:18.414]      // while-condition  =>  TRUE
[09:06:18.414]      // while "1"  (timeout="50000")
[09:06:18.414]      // while-condition  =>  TRUE
[09:06:18.415]      // while "1"  (timeout="50000")
[09:06:18.415]      // while-condition  =>  TRUE
[09:06:18.415]      // while "1"  (timeout="50000")
[09:06:18.415]      // while-condition  =>  TRUE
[09:06:18.415]      // while "1"  (timeout="50000")
[09:06:18.416]      // while-condition  =>  TRUE
[09:06:18.416]      // while "1"  (timeout="50000")
[09:06:18.416]      // while-condition  =>  TRUE
[09:06:18.416]      // while "1"  (timeout="50000")
[09:06:18.417]      // while-condition  =>  TRUE
[09:06:18.417]      // while "1"  (timeout="50000")
[09:06:18.417]      // while-condition  =>  TRUE
[09:06:18.417]      // while "1"  (timeout="50000")
[09:06:18.417]      // while-condition  =>  TRUE
[09:06:18.418]      // while "1"  (timeout="50000")
[09:06:18.418]      // while-condition  =>  TRUE
[09:06:18.418]      // while "1"  (timeout="50000")
[09:06:18.418]      // while-condition  =>  TRUE
[09:06:18.419]      // while "1"  (timeout="50000")
[09:06:18.419]      // while-condition  =>  TRUE
[09:06:18.419]      // while "1"  (timeout="50000")
[09:06:18.419]      // while-condition  =>  TRUE
[09:06:18.420]      // while "1"  (timeout="50000")
[09:06:18.420]      // while-condition  =>  TRUE
[09:06:18.420]      // while "1"  (timeout="50000")
[09:06:18.420]      // while-condition  =>  TRUE
[09:06:18.420]      // while "1"  (timeout="50000")
[09:06:18.421]      // while-condition  =>  TRUE
[09:06:18.421]      // while "1"  (timeout="50000")
[09:06:18.421]      // while-condition  =>  TRUE
[09:06:18.422]      // while "1"  (timeout="50000")
[09:06:18.422]      // while-condition  =>  TRUE
[09:06:18.422]      // while "1"  (timeout="50000")
[09:06:18.423]      // while-condition  =>  TRUE
[09:06:18.423]      // while "1"  (timeout="50000")
[09:06:18.423]      // while-condition  =>  TRUE
[09:06:18.423]      // while "1"  (timeout="50000")
[09:06:18.424]      // while-condition  =>  TRUE
[09:06:18.424]      // while "1"  (timeout="50000")
[09:06:18.424]      // while-condition  =>  TRUE
[09:06:18.424]      // while "1"  (timeout="50000")
[09:06:18.425]      // while-condition  =>  TRUE
[09:06:18.425]      // while "1"  (timeout="50000")
[09:06:18.425]      // while-condition  =>  TRUE
[09:06:18.425]      // while "1"  (timeout="50000")
[09:06:18.426]      // while-condition  =>  TRUE
[09:06:18.426]      // while "1"  (timeout="50000")
[09:06:18.426]      // while-condition  =>  TRUE
[09:06:18.426]      // while "1"  (timeout="50000")
[09:06:18.427]      // while-condition  =>  TRUE
[09:06:18.427]      // while "1"  (timeout="50000")
[09:06:18.427]      // while  =>  TIMEOUT
[09:06:18.427]      // end while "1"
[09:06:18.427]    </control>
[09:06:18.428]    <block atomic="false" info="">
[09:06:18.428]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:06:18.430]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:06:18.430]    </block>
[09:06:18.430]    <control if="" while="1" timeout="10000" info="">
[09:06:18.431]      // while "1"  (timeout="10000")
[09:06:18.431]      // while-condition  =>  TRUE
[09:06:18.431]      // while "1"  (timeout="10000")
[09:06:18.431]      // while-condition  =>  TRUE
[09:06:18.431]      // while "1"  (timeout="10000")
[09:06:18.432]      // while-condition  =>  TRUE
[09:06:18.432]      // while "1"  (timeout="10000")
[09:06:18.432]      // while-condition  =>  TRUE
[09:06:18.432]      // while "1"  (timeout="10000")
[09:06:18.433]      // while-condition  =>  TRUE
[09:06:18.433]      // while "1"  (timeout="10000")
[09:06:18.433]      // while-condition  =>  TRUE
[09:06:18.433]      // while "1"  (timeout="10000")
[09:06:18.434]      // while-condition  =>  TRUE
[09:06:18.434]      // while "1"  (timeout="10000")
[09:06:18.434]      // while-condition  =>  TRUE
[09:06:18.434]      // while "1"  (timeout="10000")
[09:06:18.435]      // while-condition  =>  TRUE
[09:06:18.435]      // while "1"  (timeout="10000")
[09:06:18.435]      // while-condition  =>  TRUE
[09:06:18.435]      // while "1"  (timeout="10000")
[09:06:18.435]      // while-condition  =>  TRUE
[09:06:18.436]      // while "1"  (timeout="10000")
[09:06:18.436]      // while-condition  =>  TRUE
[09:06:18.436]      // while "1"  (timeout="10000")
[09:06:18.436]      // while-condition  =>  TRUE
[09:06:18.437]      // while "1"  (timeout="10000")
[09:06:18.437]      // while-condition  =>  TRUE
[09:06:18.437]      // while "1"  (timeout="10000")
[09:06:18.437]      // while-condition  =>  TRUE
[09:06:18.438]      // while "1"  (timeout="10000")
[09:06:18.438]      // while-condition  =>  TRUE
[09:06:18.438]      // while "1"  (timeout="10000")
[09:06:18.438]      // while-condition  =>  TRUE
[09:06:18.438]      // while "1"  (timeout="10000")
[09:06:18.439]      // while-condition  =>  TRUE
[09:06:18.439]      // while "1"  (timeout="10000")
[09:06:18.439]      // while-condition  =>  TRUE
[09:06:18.439]      // while "1"  (timeout="10000")
[09:06:18.440]      // while-condition  =>  TRUE
[09:06:18.440]      // while "1"  (timeout="10000")
[09:06:18.440]      // while-condition  =>  TRUE
[09:06:18.440]      // while "1"  (timeout="10000")
[09:06:18.441]      // while-condition  =>  TRUE
[09:06:18.441]      // while "1"  (timeout="10000")
[09:06:18.441]      // while-condition  =>  TRUE
[09:06:18.441]      // while "1"  (timeout="10000")
[09:06:18.441]      // while-condition  =>  TRUE
[09:06:18.442]      // while "1"  (timeout="10000")
[09:06:18.442]      // while-condition  =>  TRUE
[09:06:18.442]      // while "1"  (timeout="10000")
[09:06:18.442]      // while-condition  =>  TRUE
[09:06:18.443]      // while "1"  (timeout="10000")
[09:06:18.443]      // while  =>  TIMEOUT
[09:06:18.443]      // end while "1"
[09:06:18.443]    </control>
[09:06:18.444]    <block atomic="true" info="">
[09:06:18.447]  
[09:06:18.447]  ! W001 : No atomic sequence support in debug unit
[09:06:18.447]  
[09:06:18.449]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:06:18.461]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:06:18.462]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:06:18.464]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:06:18.465]    </block>
[09:06:18.465]    <block atomic="false" info="">
[09:06:18.466]      __errorcontrol = 0x00000001;
[09:06:18.466]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:06:18.466]      ReadDP(0x0);
[09:06:18.468]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:06:18.469]      __errorcontrol = 0x00000000;
[09:06:18.469]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:06:18.470]    </block>
[09:06:18.470]  </sequence>
[09:06:18.470]  
[09:06:18.471]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:06:18.471]  
[09:06:18.471]  <debugvars>
[09:06:18.472]    // Pre-defined
[09:06:18.472]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:06:18.472]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:06:18.473]    __dp=0x00000000
[09:06:18.473]    __ap=0x00000000
[09:06:18.474]    __traceout=0x00000000      (Trace Disabled)
[09:06:18.474]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:06:18.474]    __FlashAddr=0x00000000
[09:06:18.475]    __FlashLen=0x00000000
[09:06:18.475]    __FlashArg=0x00000000
[09:06:18.475]    __FlashOp=0x00000000
[09:06:18.476]    __Result=0x00000000
[09:06:18.476]  </debugvars>
[09:06:18.477]  
[09:06:18.477]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:06:18.477]  </sequence>
[09:06:18.478]  
[09:06:18.482]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[09:06:18.482]  
[09:06:18.483]  <debugvars>
[09:06:18.483]    // Pre-defined
[09:06:18.484]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:06:18.484]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:06:18.484]    __dp=0x00000000
[09:06:18.485]    __ap=0x00000000
[09:06:18.485]    __traceout=0x00000000      (Trace Disabled)
[09:06:18.485]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:06:18.486]    __FlashAddr=0x00000000
[09:06:18.486]    __FlashLen=0x00000000
[09:06:18.486]    __FlashArg=0x00000000
[09:06:18.487]    __FlashOp=0x00000000
[09:06:18.487]    __Result=0x00000000
[09:06:18.487]  </debugvars>
[09:06:18.488]  
[09:06:18.488]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:06:18.488]    <block atomic="false" info="">
[09:06:18.489]      __var SW_DP_ABORT  = 0x0;
[09:06:18.489]        // -> [SW_DP_ABORT <= 0x00000000]
[09:06:18.489]      __var DP_CTRL_STAT = 0x4;
[09:06:18.490]        // -> [DP_CTRL_STAT <= 0x00000004]
[09:06:18.490]      __var DP_SELECT    = 0x8;
[09:06:18.490]        // -> [DP_SELECT <= 0x00000008]
[09:06:18.491]      __var powered_down = 0;
[09:06:18.491]        // -> [powered_down <= 0x00000000]
[09:06:18.491]      WriteDP(DP_SELECT, 0x00000000);
[09:06:18.494]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:06:18.494]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:06:18.495]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[09:06:18.496]        // -> [powered_down <= 0x00000001]
[09:06:18.496]    </block>
[09:06:18.496]    <control if="powered_down" while="" timeout="0" info="">
[09:06:18.497]      // if-block "powered_down"
[09:06:18.497]        // =>  TRUE
[09:06:18.498]      <block atomic="false" info="">
[09:06:18.498]        WriteDP(DP_CTRL_STAT, 0x50000000);
[09:06:18.501]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[09:06:18.501]      </block>
[09:06:18.501]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[09:06:18.502]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[09:06:18.504]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:06:18.504]        // while-condition  =>  FALSE
[09:06:18.505]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[09:06:18.505]      </control>
[09:06:18.505]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[09:06:18.506]        // if-block "(__protocol & 0xFFFF) == 1"
[09:06:18.506]          // =>  FALSE
[09:06:18.506]        // skip if-block "(__protocol & 0xFFFF) == 1"
[09:06:18.507]      </control>
[09:06:18.507]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[09:06:18.507]        // if-block "(__protocol & 0xFFFF) == 2"
[09:06:18.508]          // =>  TRUE
[09:06:18.508]        <block atomic="false" info="">
[09:06:18.508]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[09:06:18.511]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[09:06:18.511]          WriteDP(SW_DP_ABORT, 0x0000001E);
[09:06:18.513]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[09:06:18.513]        </block>
[09:06:18.513]        // end if-block "(__protocol & 0xFFFF) == 2"
[09:06:18.514]      </control>
[09:06:18.514]      // end if-block "powered_down"
[09:06:18.514]    </control>
[09:06:18.515]  </sequence>
[09:06:18.515]  
[09:06:18.620]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:06:18.620]  
[09:06:18.620]  <debugvars>
[09:06:18.621]    // Pre-defined
[09:06:18.621]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:06:18.621]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:06:18.622]    __dp=0x00000000
[09:06:18.622]    __ap=0x00000000
[09:06:18.623]    __traceout=0x00000000      (Trace Disabled)
[09:06:18.623]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:06:18.623]    __FlashAddr=0x00000000
[09:06:18.624]    __FlashLen=0x00000000
[09:06:18.624]    __FlashArg=0x00000000
[09:06:18.624]    __FlashOp=0x00000000
[09:06:18.625]    __Result=0x00000000
[09:06:18.625]  </debugvars>
[09:06:18.626]  
[09:06:18.626]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:06:18.626]    <block atomic="true" info="">
[09:06:18.630]  
[09:06:18.630]  ! W001 : No atomic sequence support in debug unit
[09:06:18.630]  
[09:06:18.632]      __var DP_R_IDCODE    = 0x0;
[09:06:18.632]        // -> [DP_R_IDCODE <= 0x00000000]
[09:06:18.632]      __var DP_W_ABORT    = 0x0;
[09:06:18.633]        // -> [DP_W_ABORT <= 0x00000000]
[09:06:18.633]      __var DP_CTRLSTAT = 0x4;
[09:06:18.633]        // -> [DP_CTRLSTAT <= 0x00000004]
[09:06:18.634]      __var DP_W_SELECT    = 0x8;
[09:06:18.634]        // -> [DP_W_SELECT <= 0x00000008]
[09:06:18.634]      __var AP_TAR		= 0x4;
[09:06:18.635]        // -> [AP_TAR <= 0x00000004]
[09:06:18.635]      __var AP_BD0		= 0x0;
[09:06:18.635]        // -> [AP_BD0 <= 0x00000000]
[09:06:18.636]      __var AP_BD1		= 0x4;
[09:06:18.636]        // -> [AP_BD1 <= 0x00000004]
[09:06:18.637]      __var AP_BD2		= 0x8;
[09:06:18.637]        // -> [AP_BD2 <= 0x00000008]
[09:06:18.637]      __var PCWithinFlash = 0;
[09:06:18.638]        // -> [PCWithinFlash <= 0x00000000]
[09:06:18.638]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:06:18.644]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.644]    </block>
[09:06:18.645]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:06:18.645]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:06:18.651]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.659]      // while-condition  =>  FALSE
[09:06:18.660]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:06:18.660]    </control>
[09:06:18.660]    <block atomic="true" info="">
[09:06:18.668]  
[09:06:18.668]  ! W001 : No atomic sequence support in debug unit
[09:06:18.668]  
[09:06:18.672]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:06:18.678]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:06:18.678]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:06:18.680]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.680]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:06:18.682]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:06:18.682]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:06:18.686]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.686]    </block>
[09:06:18.687]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:06:18.687]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.689]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.689]      // while-condition  =>  TRUE
[09:06:18.690]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.692]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.692]      // while-condition  =>  TRUE
[09:06:18.693]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.695]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.695]      // while-condition  =>  TRUE
[09:06:18.696]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.698]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.699]      // while-condition  =>  TRUE
[09:06:18.699]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.701]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.702]      // while-condition  =>  TRUE
[09:06:18.702]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.704]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.704]      // while-condition  =>  TRUE
[09:06:18.705]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.707]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.707]      // while-condition  =>  TRUE
[09:06:18.708]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.710]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.710]      // while-condition  =>  TRUE
[09:06:18.711]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.713]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.713]      // while-condition  =>  TRUE
[09:06:18.714]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.716]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.716]      // while-condition  =>  TRUE
[09:06:18.717]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.731]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.732]      // while-condition  =>  TRUE
[09:06:18.732]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.734]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.736]      // while-condition  =>  TRUE
[09:06:18.736]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.738]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.738]      // while-condition  =>  TRUE
[09:06:18.739]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.741]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.741]      // while-condition  =>  TRUE
[09:06:18.742]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.744]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.745]      // while-condition  =>  TRUE
[09:06:18.745]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.747]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.748]      // while-condition  =>  TRUE
[09:06:18.748]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.750]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.751]      // while-condition  =>  TRUE
[09:06:18.751]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.753]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.754]      // while-condition  =>  TRUE
[09:06:18.754]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.756]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.757]      // while-condition  =>  TRUE
[09:06:18.757]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.759]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.760]      // while-condition  =>  TRUE
[09:06:18.760]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.762]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.763]      // while-condition  =>  TRUE
[09:06:18.763]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.765]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.766]      // while-condition  =>  TRUE
[09:06:18.766]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.768]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.769]      // while-condition  =>  TRUE
[09:06:18.769]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.771]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.772]      // while-condition  =>  TRUE
[09:06:18.772]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.774]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.775]      // while-condition  =>  TRUE
[09:06:18.775]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.777]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.778]      // while-condition  =>  TRUE
[09:06:18.778]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.780]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.781]      // while-condition  =>  TRUE
[09:06:18.781]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.783]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.784]      // while-condition  =>  TRUE
[09:06:18.784]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.786]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.787]      // while-condition  =>  TRUE
[09:06:18.787]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:18.787]      // while  =>  TIMEOUT
[09:06:18.787]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:06:18.788]    </control>
[09:06:18.788]    <block atomic="false" info="">
[09:06:18.788]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:06:18.790]        // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:06:18.791]        // -> [PCWithinFlash <= 0x00000000]
[09:06:18.791]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:06:18.793]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:06:18.794]    </block>
[09:06:18.794]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:06:18.794]      // if-block "PCWithinFlash == 0"
[09:06:18.794]        // =>  TRUE
[09:06:18.795]      // end if-block "PCWithinFlash == 0"
[09:06:18.795]    </control>
[09:06:18.795]  </sequence>
[09:06:18.795]  
[09:06:18.841]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[09:06:18.841]  
[09:06:18.841]  <debugvars>
[09:06:18.841]    // Pre-defined
[09:06:18.842]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:06:18.842]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:06:18.842]    __dp=0x00000000
[09:06:18.842]    __ap=0x00000000
[09:06:18.843]    __traceout=0x00000000      (Trace Disabled)
[09:06:18.843]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:06:18.843]    __FlashAddr=0x00000000
[09:06:18.843]    __FlashLen=0x00000000
[09:06:18.844]    __FlashArg=0x00000000
[09:06:18.844]    __FlashOp=0x00000000
[09:06:18.844]    __Result=0x00000000
[09:06:18.845]  </debugvars>
[09:06:18.845]  
[09:06:18.845]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[09:06:18.845]    <block atomic="false" info="">
[09:06:18.845]    </block>
[09:06:18.846]  </sequence>
[09:06:18.846]  
[09:06:18.848]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[09:06:18.848]  
[09:06:18.849]  <debugvars>
[09:06:18.849]    // Pre-defined
[09:06:18.849]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:06:18.849]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:06:18.850]    __dp=0x00000000
[09:06:18.850]    __ap=0x00000000
[09:06:18.850]    __traceout=0x00000000      (Trace Disabled)
[09:06:18.850]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:06:18.851]    __FlashAddr=0x00000000
[09:06:18.851]    __FlashLen=0x00000000
[09:06:18.851]    __FlashArg=0x00000000
[09:06:18.851]    __FlashOp=0x00000000
[09:06:18.852]    __Result=0x00000000
[09:06:18.852]  </debugvars>
[09:06:18.852]  
[09:06:18.852]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:06:18.852]    <block atomic="false" info="">
[09:06:18.853]      __var nReset      = 0x80;
[09:06:18.853]        // -> [nReset <= 0x00000080]
[09:06:18.853]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:06:18.855]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:06:18.856]    </block>
[09:06:18.856]    <control if="" while="1" timeout="50000" info="">
[09:06:18.856]      // while "1"  (timeout="50000")
[09:06:18.857]      // while-condition  =>  TRUE
[09:06:18.857]      // while "1"  (timeout="50000")
[09:06:18.857]      // while-condition  =>  TRUE
[09:06:18.857]      // while "1"  (timeout="50000")
[09:06:18.857]      // while-condition  =>  TRUE
[09:06:18.858]      // while "1"  (timeout="50000")
[09:06:18.858]      // while-condition  =>  TRUE
[09:06:18.858]      // while "1"  (timeout="50000")
[09:06:18.858]      // while-condition  =>  TRUE
[09:06:18.859]      // while "1"  (timeout="50000")
[09:06:18.859]      // while-condition  =>  TRUE
[09:06:18.859]      // while "1"  (timeout="50000")
[09:06:18.859]      // while-condition  =>  TRUE
[09:06:18.860]      // while "1"  (timeout="50000")
[09:06:18.860]      // while-condition  =>  TRUE
[09:06:18.860]      // while "1"  (timeout="50000")
[09:06:18.860]      // while-condition  =>  TRUE
[09:06:18.861]      // while "1"  (timeout="50000")
[09:06:18.861]      // while-condition  =>  TRUE
[09:06:18.861]      // while "1"  (timeout="50000")
[09:06:18.862]      // while-condition  =>  TRUE
[09:06:18.862]      // while "1"  (timeout="50000")
[09:06:18.862]      // while-condition  =>  TRUE
[09:06:18.862]      // while "1"  (timeout="50000")
[09:06:18.863]      // while-condition  =>  TRUE
[09:06:18.863]      // while "1"  (timeout="50000")
[09:06:18.863]      // while-condition  =>  TRUE
[09:06:18.863]      // while "1"  (timeout="50000")
[09:06:18.863]      // while-condition  =>  TRUE
[09:06:18.864]      // while "1"  (timeout="50000")
[09:06:18.864]      // while-condition  =>  TRUE
[09:06:18.864]      // while "1"  (timeout="50000")
[09:06:18.864]      // while-condition  =>  TRUE
[09:06:18.865]      // while "1"  (timeout="50000")
[09:06:18.865]      // while-condition  =>  TRUE
[09:06:18.865]      // while "1"  (timeout="50000")
[09:06:18.865]      // while-condition  =>  TRUE
[09:06:18.866]      // while "1"  (timeout="50000")
[09:06:18.866]      // while-condition  =>  TRUE
[09:06:18.866]      // while "1"  (timeout="50000")
[09:06:18.866]      // while-condition  =>  TRUE
[09:06:18.867]      // while "1"  (timeout="50000")
[09:06:18.867]      // while-condition  =>  TRUE
[09:06:18.867]      // while "1"  (timeout="50000")
[09:06:18.867]      // while-condition  =>  TRUE
[09:06:18.867]      // while "1"  (timeout="50000")
[09:06:18.868]      // while-condition  =>  TRUE
[09:06:18.868]      // while "1"  (timeout="50000")
[09:06:18.868]      // while-condition  =>  TRUE
[09:06:18.868]      // while "1"  (timeout="50000")
[09:06:18.869]      // while-condition  =>  TRUE
[09:06:18.869]      // while "1"  (timeout="50000")
[09:06:18.869]      // while-condition  =>  TRUE
[09:06:18.869]      // while "1"  (timeout="50000")
[09:06:18.870]      // while-condition  =>  TRUE
[09:06:18.870]      // while "1"  (timeout="50000")
[09:06:18.870]      // while-condition  =>  TRUE
[09:06:18.870]      // while "1"  (timeout="50000")
[09:06:18.870]      // while-condition  =>  TRUE
[09:06:18.871]      // while "1"  (timeout="50000")
[09:06:18.871]      // while-condition  =>  TRUE
[09:06:18.871]      // while "1"  (timeout="50000")
[09:06:18.871]      // while-condition  =>  TRUE
[09:06:18.872]      // while "1"  (timeout="50000")
[09:06:18.872]      // while-condition  =>  TRUE
[09:06:18.872]      // while "1"  (timeout="50000")
[09:06:18.872]      // while-condition  =>  TRUE
[09:06:18.873]      // while "1"  (timeout="50000")
[09:06:18.873]      // while-condition  =>  TRUE
[09:06:18.873]      // while "1"  (timeout="50000")
[09:06:18.873]      // while-condition  =>  TRUE
[09:06:18.873]      // while "1"  (timeout="50000")
[09:06:18.874]      // while-condition  =>  TRUE
[09:06:18.874]      // while "1"  (timeout="50000")
[09:06:18.874]      // while-condition  =>  TRUE
[09:06:18.874]      // while "1"  (timeout="50000")
[09:06:18.875]      // while-condition  =>  TRUE
[09:06:18.875]      // while "1"  (timeout="50000")
[09:06:18.875]      // while-condition  =>  TRUE
[09:06:18.875]      // while "1"  (timeout="50000")
[09:06:18.876]      // while-condition  =>  TRUE
[09:06:18.876]      // while "1"  (timeout="50000")
[09:06:18.876]      // while-condition  =>  TRUE
[09:06:18.876]      // while "1"  (timeout="50000")
[09:06:18.877]      // while-condition  =>  TRUE
[09:06:18.877]      // while "1"  (timeout="50000")
[09:06:18.877]      // while-condition  =>  TRUE
[09:06:18.877]      // while "1"  (timeout="50000")
[09:06:18.878]      // while-condition  =>  TRUE
[09:06:18.878]      // while "1"  (timeout="50000")
[09:06:18.878]      // while-condition  =>  TRUE
[09:06:18.878]      // while "1"  (timeout="50000")
[09:06:18.879]      // while-condition  =>  TRUE
[09:06:18.879]      // while "1"  (timeout="50000")
[09:06:18.879]      // while-condition  =>  TRUE
[09:06:18.879]      // while "1"  (timeout="50000")
[09:06:18.879]      // while-condition  =>  TRUE
[09:06:18.880]      // while "1"  (timeout="50000")
[09:06:18.880]      // while-condition  =>  TRUE
[09:06:18.880]      // while "1"  (timeout="50000")
[09:06:18.880]      // while-condition  =>  TRUE
[09:06:18.881]      // while "1"  (timeout="50000")
[09:06:18.881]      // while-condition  =>  TRUE
[09:06:18.881]      // while "1"  (timeout="50000")
[09:06:18.881]      // while-condition  =>  TRUE
[09:06:18.882]      // while "1"  (timeout="50000")
[09:06:18.882]      // while-condition  =>  TRUE
[09:06:18.882]      // while "1"  (timeout="50000")
[09:06:18.882]      // while-condition  =>  TRUE
[09:06:18.883]      // while "1"  (timeout="50000")
[09:06:18.883]      // while-condition  =>  TRUE
[09:06:18.883]      // while "1"  (timeout="50000")
[09:06:18.883]      // while-condition  =>  TRUE
[09:06:18.883]      // while "1"  (timeout="50000")
[09:06:18.884]      // while-condition  =>  TRUE
[09:06:18.884]      // while "1"  (timeout="50000")
[09:06:18.884]      // while-condition  =>  TRUE
[09:06:18.884]      // while "1"  (timeout="50000")
[09:06:18.885]      // while-condition  =>  TRUE
[09:06:18.885]      // while "1"  (timeout="50000")
[09:06:18.885]      // while-condition  =>  TRUE
[09:06:18.885]      // while "1"  (timeout="50000")
[09:06:18.886]      // while-condition  =>  TRUE
[09:06:18.886]      // while "1"  (timeout="50000")
[09:06:18.886]      // while-condition  =>  TRUE
[09:06:18.886]      // while "1"  (timeout="50000")
[09:06:18.887]      // while-condition  =>  TRUE
[09:06:18.887]      // while "1"  (timeout="50000")
[09:06:18.887]      // while-condition  =>  TRUE
[09:06:18.887]      // while "1"  (timeout="50000")
[09:06:18.888]      // while-condition  =>  TRUE
[09:06:18.888]      // while "1"  (timeout="50000")
[09:06:18.888]      // while-condition  =>  TRUE
[09:06:18.888]      // while "1"  (timeout="50000")
[09:06:18.888]      // while-condition  =>  TRUE
[09:06:18.889]      // while "1"  (timeout="50000")
[09:06:18.889]      // while-condition  =>  TRUE
[09:06:18.889]      // while "1"  (timeout="50000")
[09:06:18.889]      // while-condition  =>  TRUE
[09:06:18.890]      // while "1"  (timeout="50000")
[09:06:18.890]      // while-condition  =>  TRUE
[09:06:18.890]      // while "1"  (timeout="50000")
[09:06:18.890]      // while-condition  =>  TRUE
[09:06:18.891]      // while "1"  (timeout="50000")
[09:06:18.891]      // while-condition  =>  TRUE
[09:06:18.892]      // while "1"  (timeout="50000")
[09:06:18.892]      // while-condition  =>  TRUE
[09:06:18.892]      // while "1"  (timeout="50000")
[09:06:18.892]      // while-condition  =>  TRUE
[09:06:18.893]      // while "1"  (timeout="50000")
[09:06:18.893]      // while-condition  =>  TRUE
[09:06:18.893]      // while "1"  (timeout="50000")
[09:06:18.893]      // while-condition  =>  TRUE
[09:06:18.894]      // while "1"  (timeout="50000")
[09:06:18.894]      // while-condition  =>  TRUE
[09:06:18.894]      // while "1"  (timeout="50000")
[09:06:18.894]      // while-condition  =>  TRUE
[09:06:18.894]      // while "1"  (timeout="50000")
[09:06:18.895]      // while-condition  =>  TRUE
[09:06:18.895]      // while "1"  (timeout="50000")
[09:06:18.895]      // while-condition  =>  TRUE
[09:06:18.895]      // while "1"  (timeout="50000")
[09:06:18.896]      // while-condition  =>  TRUE
[09:06:18.896]      // while "1"  (timeout="50000")
[09:06:18.896]      // while-condition  =>  TRUE
[09:06:18.896]      // while "1"  (timeout="50000")
[09:06:18.897]      // while-condition  =>  TRUE
[09:06:18.897]      // while "1"  (timeout="50000")
[09:06:18.897]      // while-condition  =>  TRUE
[09:06:18.897]      // while "1"  (timeout="50000")
[09:06:18.898]      // while-condition  =>  TRUE
[09:06:18.898]      // while "1"  (timeout="50000")
[09:06:18.898]      // while-condition  =>  TRUE
[09:06:18.898]      // while "1"  (timeout="50000")
[09:06:18.899]      // while-condition  =>  TRUE
[09:06:18.899]      // while "1"  (timeout="50000")
[09:06:18.899]      // while-condition  =>  TRUE
[09:06:18.899]      // while "1"  (timeout="50000")
[09:06:18.900]      // while-condition  =>  TRUE
[09:06:18.900]      // while "1"  (timeout="50000")
[09:06:18.900]      // while-condition  =>  TRUE
[09:06:18.900]      // while "1"  (timeout="50000")
[09:06:18.900]      // while-condition  =>  TRUE
[09:06:18.901]      // while "1"  (timeout="50000")
[09:06:18.901]      // while-condition  =>  TRUE
[09:06:18.901]      // while "1"  (timeout="50000")
[09:06:18.901]      // while-condition  =>  TRUE
[09:06:18.902]      // while "1"  (timeout="50000")
[09:06:18.902]      // while-condition  =>  TRUE
[09:06:18.902]      // while "1"  (timeout="50000")
[09:06:18.902]      // while-condition  =>  TRUE
[09:06:18.903]      // while "1"  (timeout="50000")
[09:06:18.903]      // while-condition  =>  TRUE
[09:06:18.903]      // while "1"  (timeout="50000")
[09:06:18.903]      // while-condition  =>  TRUE
[09:06:18.904]      // while "1"  (timeout="50000")
[09:06:18.904]      // while-condition  =>  TRUE
[09:06:18.904]      // while "1"  (timeout="50000")
[09:06:18.904]      // while-condition  =>  TRUE
[09:06:18.904]      // while "1"  (timeout="50000")
[09:06:18.905]      // while-condition  =>  TRUE
[09:06:18.905]      // while "1"  (timeout="50000")
[09:06:18.905]      // while-condition  =>  TRUE
[09:06:18.905]      // while "1"  (timeout="50000")
[09:06:18.906]      // while-condition  =>  TRUE
[09:06:18.906]      // while "1"  (timeout="50000")
[09:06:18.906]      // while-condition  =>  TRUE
[09:06:18.906]      // while "1"  (timeout="50000")
[09:06:18.907]      // while-condition  =>  TRUE
[09:06:18.907]      // while "1"  (timeout="50000")
[09:06:18.907]      // while-condition  =>  TRUE
[09:06:18.907]      // while "1"  (timeout="50000")
[09:06:18.907]      // while-condition  =>  TRUE
[09:06:18.908]      // while "1"  (timeout="50000")
[09:06:18.908]      // while-condition  =>  TRUE
[09:06:18.908]      // while "1"  (timeout="50000")
[09:06:18.908]      // while-condition  =>  TRUE
[09:06:18.909]      // while "1"  (timeout="50000")
[09:06:18.909]      // while-condition  =>  TRUE
[09:06:18.909]      // while "1"  (timeout="50000")
[09:06:18.909]      // while-condition  =>  TRUE
[09:06:18.909]      // while "1"  (timeout="50000")
[09:06:18.910]      // while-condition  =>  TRUE
[09:06:18.910]      // while "1"  (timeout="50000")
[09:06:18.910]      // while-condition  =>  TRUE
[09:06:18.910]      // while "1"  (timeout="50000")
[09:06:18.911]      // while-condition  =>  TRUE
[09:06:18.911]      // while "1"  (timeout="50000")
[09:06:18.911]      // while  =>  TIMEOUT
[09:06:18.911]      // end while "1"
[09:06:18.912]    </control>
[09:06:18.912]    <block atomic="false" info="">
[09:06:18.912]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:06:18.915]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:06:18.915]    </block>
[09:06:18.915]    <control if="" while="1" timeout="10000" info="">
[09:06:18.915]      // while "1"  (timeout="10000")
[09:06:18.916]      // while-condition  =>  TRUE
[09:06:18.916]      // while "1"  (timeout="10000")
[09:06:18.916]      // while-condition  =>  TRUE
[09:06:18.916]      // while "1"  (timeout="10000")
[09:06:18.917]      // while-condition  =>  TRUE
[09:06:18.917]      // while "1"  (timeout="10000")
[09:06:18.917]      // while-condition  =>  TRUE
[09:06:18.917]      // while "1"  (timeout="10000")
[09:06:18.918]      // while-condition  =>  TRUE
[09:06:18.918]      // while "1"  (timeout="10000")
[09:06:18.919]      // while-condition  =>  TRUE
[09:06:18.919]      // while "1"  (timeout="10000")
[09:06:18.919]      // while-condition  =>  TRUE
[09:06:18.919]      // while "1"  (timeout="10000")
[09:06:18.920]      // while-condition  =>  TRUE
[09:06:18.920]      // while "1"  (timeout="10000")
[09:06:18.920]      // while-condition  =>  TRUE
[09:06:18.920]      // while "1"  (timeout="10000")
[09:06:18.921]      // while-condition  =>  TRUE
[09:06:18.921]      // while "1"  (timeout="10000")
[09:06:18.921]      // while-condition  =>  TRUE
[09:06:18.921]      // while "1"  (timeout="10000")
[09:06:18.922]      // while-condition  =>  TRUE
[09:06:18.922]      // while "1"  (timeout="10000")
[09:06:18.922]      // while-condition  =>  TRUE
[09:06:18.922]      // while "1"  (timeout="10000")
[09:06:18.923]      // while-condition  =>  TRUE
[09:06:18.923]      // while "1"  (timeout="10000")
[09:06:18.923]      // while-condition  =>  TRUE
[09:06:18.923]      // while "1"  (timeout="10000")
[09:06:18.923]      // while-condition  =>  TRUE
[09:06:18.924]      // while "1"  (timeout="10000")
[09:06:18.924]      // while-condition  =>  TRUE
[09:06:18.924]      // while "1"  (timeout="10000")
[09:06:18.924]      // while-condition  =>  TRUE
[09:06:18.925]      // while "1"  (timeout="10000")
[09:06:18.925]      // while-condition  =>  TRUE
[09:06:18.925]      // while "1"  (timeout="10000")
[09:06:18.925]      // while-condition  =>  TRUE
[09:06:18.926]      // while "1"  (timeout="10000")
[09:06:18.926]      // while-condition  =>  TRUE
[09:06:18.926]      // while "1"  (timeout="10000")
[09:06:18.926]      // while-condition  =>  TRUE
[09:06:18.926]      // while "1"  (timeout="10000")
[09:06:18.927]      // while-condition  =>  TRUE
[09:06:18.927]      // while "1"  (timeout="10000")
[09:06:18.927]      // while  =>  TIMEOUT
[09:06:18.927]      // end while "1"
[09:06:18.928]    </control>
[09:06:18.928]    <block atomic="true" info="">
[09:06:18.933]  
[09:06:18.933]  ! W001 : No atomic sequence support in debug unit
[09:06:18.933]  
[09:06:18.935]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:06:18.937]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:06:18.937]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:06:18.939]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:06:18.939]    </block>
[09:06:18.939]    <block atomic="false" info="">
[09:06:18.939]      __errorcontrol = 0x00000001;
[09:06:18.940]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:06:18.940]      ReadDP(0x0);
[09:06:18.942]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:06:18.942]      __errorcontrol = 0x00000000;
[09:06:18.942]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:06:18.942]    </block>
[09:06:18.943]  </sequence>
[09:06:18.943]  
[09:06:18.949]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[09:06:18.949]  
[09:06:18.949]  <debugvars>
[09:06:18.949]    // Pre-defined
[09:06:18.950]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:06:18.950]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:06:18.950]    __dp=0x00000000
[09:06:18.950]    __ap=0x00000000
[09:06:18.951]    __traceout=0x00000000      (Trace Disabled)
[09:06:18.951]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:06:18.951]    __FlashAddr=0x00000000
[09:06:18.951]    __FlashLen=0x00000000
[09:06:18.951]    __FlashArg=0x00000000
[09:06:18.952]    __FlashOp=0x00000000
[09:06:18.952]    __Result=0x00000000
[09:06:18.952]  </debugvars>
[09:06:18.952]  
[09:06:18.953]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[09:06:18.953]    <block atomic="false" info="">
[09:06:18.953]    </block>
[09:06:18.953]  </sequence>
[09:06:18.954]  
[09:06:19.181]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[09:06:19.181]  
[09:06:19.182]  <debugvars>
[09:06:19.182]    // Pre-defined
[09:06:19.183]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:06:19.184]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:06:19.185]    __dp=0x00000000
[09:06:19.185]    __ap=0x00000000
[09:06:19.186]    __traceout=0x00000000      (Trace Disabled)
[09:06:19.186]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:06:19.186]    __FlashAddr=0x00000000
[09:06:19.187]    __FlashLen=0x00000000
[09:06:19.188]    __FlashArg=0x00000000
[09:06:19.189]    __FlashOp=0x00000000
[09:06:19.190]    __Result=0x00000000
[09:06:19.190]  </debugvars>
[09:06:19.191]  
[09:06:19.192]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[09:06:19.192]    <block atomic="false" info="">
[09:06:19.193]      Sequence("ResetHardware");
[09:06:19.193]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:06:19.193]          <block atomic="false" info="">
[09:06:19.193]            __var nReset      = 0x80;
[09:06:19.194]              // -> [nReset <= 0x00000080]
[09:06:19.194]            DAP_SWJ_Pins(0x00, nReset, 0);
[09:06:19.197]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:06:19.198]          </block>
[09:06:19.198]          <control if="" while="1" timeout="50000" info="">
[09:06:19.199]            // while "1"  (timeout="50000")
[09:06:19.200]            // while-condition  =>  TRUE
[09:06:19.200]            // while "1"  (timeout="50000")
[09:06:19.200]            // while-condition  =>  TRUE
[09:06:19.201]            // while "1"  (timeout="50000")
[09:06:19.201]            // while-condition  =>  TRUE
[09:06:19.202]            // while "1"  (timeout="50000")
[09:06:19.203]            // while-condition  =>  TRUE
[09:06:19.203]            // while "1"  (timeout="50000")
[09:06:19.204]            // while-condition  =>  TRUE
[09:06:19.204]            // while "1"  (timeout="50000")
[09:06:19.205]            // while-condition  =>  TRUE
[09:06:19.205]            // while "1"  (timeout="50000")
[09:06:19.206]            // while-condition  =>  TRUE
[09:06:19.206]            // while "1"  (timeout="50000")
[09:06:19.206]            // while-condition  =>  TRUE
[09:06:19.206]            // while "1"  (timeout="50000")
[09:06:19.207]            // while-condition  =>  TRUE
[09:06:19.207]            // while "1"  (timeout="50000")
[09:06:19.208]            // while-condition  =>  TRUE
[09:06:19.208]            // while "1"  (timeout="50000")
[09:06:19.208]            // while-condition  =>  TRUE
[09:06:19.209]            // while "1"  (timeout="50000")
[09:06:19.210]            // while-condition  =>  TRUE
[09:06:19.210]            // while "1"  (timeout="50000")
[09:06:19.210]            // while-condition  =>  TRUE
[09:06:19.210]            // while "1"  (timeout="50000")
[09:06:19.210]            // while-condition  =>  TRUE
[09:06:19.211]            // while "1"  (timeout="50000")
[09:06:19.212]            // while-condition  =>  TRUE
[09:06:19.212]            // while "1"  (timeout="50000")
[09:06:19.212]            // while-condition  =>  TRUE
[09:06:19.213]            // while "1"  (timeout="50000")
[09:06:19.213]            // while-condition  =>  TRUE
[09:06:19.213]            // while "1"  (timeout="50000")
[09:06:19.213]            // while-condition  =>  TRUE
[09:06:19.214]            // while "1"  (timeout="50000")
[09:06:19.214]            // while-condition  =>  TRUE
[09:06:19.214]            // while "1"  (timeout="50000")
[09:06:19.214]            // while-condition  =>  TRUE
[09:06:19.214]            // while "1"  (timeout="50000")
[09:06:19.215]            // while-condition  =>  TRUE
[09:06:19.215]            // while "1"  (timeout="50000")
[09:06:19.215]            // while-condition  =>  TRUE
[09:06:19.215]            // while "1"  (timeout="50000")
[09:06:19.216]            // while-condition  =>  TRUE
[09:06:19.216]            // while "1"  (timeout="50000")
[09:06:19.216]            // while-condition  =>  TRUE
[09:06:19.216]            // while "1"  (timeout="50000")
[09:06:19.216]            // while-condition  =>  TRUE
[09:06:19.217]            // while "1"  (timeout="50000")
[09:06:19.217]            // while-condition  =>  TRUE
[09:06:19.217]            // while "1"  (timeout="50000")
[09:06:19.217]            // while-condition  =>  TRUE
[09:06:19.217]            // while "1"  (timeout="50000")
[09:06:19.218]            // while-condition  =>  TRUE
[09:06:19.218]            // while "1"  (timeout="50000")
[09:06:19.218]            // while-condition  =>  TRUE
[09:06:19.218]            // while "1"  (timeout="50000")
[09:06:19.218]            // while-condition  =>  TRUE
[09:06:19.218]            // while "1"  (timeout="50000")
[09:06:19.218]            // while-condition  =>  TRUE
[09:06:19.218]            // while "1"  (timeout="50000")
[09:06:19.218]            // while-condition  =>  TRUE
[09:06:19.218]            // while "1"  (timeout="50000")
[09:06:19.219]            // while-condition  =>  TRUE
[09:06:19.219]            // while "1"  (timeout="50000")
[09:06:19.219]            // while-condition  =>  TRUE
[09:06:19.219]            // while "1"  (timeout="50000")
[09:06:19.219]            // while-condition  =>  TRUE
[09:06:19.220]            // while "1"  (timeout="50000")
[09:06:19.221]            // while-condition  =>  TRUE
[09:06:19.221]            // while "1"  (timeout="50000")
[09:06:19.221]            // while-condition  =>  TRUE
[09:06:19.221]            // while "1"  (timeout="50000")
[09:06:19.221]            // while-condition  =>  TRUE
[09:06:19.222]            // while "1"  (timeout="50000")
[09:06:19.222]            // while-condition  =>  TRUE
[09:06:19.222]            // while "1"  (timeout="50000")
[09:06:19.222]            // while-condition  =>  TRUE
[09:06:19.222]            // while "1"  (timeout="50000")
[09:06:19.223]            // while-condition  =>  TRUE
[09:06:19.223]            // while "1"  (timeout="50000")
[09:06:19.223]            // while-condition  =>  TRUE
[09:06:19.223]            // while "1"  (timeout="50000")
[09:06:19.223]            // while-condition  =>  TRUE
[09:06:19.224]            // while "1"  (timeout="50000")
[09:06:19.224]            // while-condition  =>  TRUE
[09:06:19.224]            // while "1"  (timeout="50000")
[09:06:19.224]            // while-condition  =>  TRUE
[09:06:19.224]            // while "1"  (timeout="50000")
[09:06:19.225]            // while-condition  =>  TRUE
[09:06:19.225]            // while "1"  (timeout="50000")
[09:06:19.225]            // while-condition  =>  TRUE
[09:06:19.225]            // while "1"  (timeout="50000")
[09:06:19.225]            // while-condition  =>  TRUE
[09:06:19.225]            // while "1"  (timeout="50000")
[09:06:19.226]            // while-condition  =>  TRUE
[09:06:19.226]            // while "1"  (timeout="50000")
[09:06:19.226]            // while-condition  =>  TRUE
[09:06:19.226]            // while "1"  (timeout="50000")
[09:06:19.226]            // while-condition  =>  TRUE
[09:06:19.226]            // while "1"  (timeout="50000")
[09:06:19.226]            // while-condition  =>  TRUE
[09:06:19.226]            // while "1"  (timeout="50000")
[09:06:19.226]            // while-condition  =>  TRUE
[09:06:19.227]            // while "1"  (timeout="50000")
[09:06:19.227]            // while-condition  =>  TRUE
[09:06:19.227]            // while "1"  (timeout="50000")
[09:06:19.227]            // while-condition  =>  TRUE
[09:06:19.227]            // while "1"  (timeout="50000")
[09:06:19.227]            // while-condition  =>  TRUE
[09:06:19.228]            // while "1"  (timeout="50000")
[09:06:19.228]            // while-condition  =>  TRUE
[09:06:19.228]            // while "1"  (timeout="50000")
[09:06:19.228]            // while-condition  =>  TRUE
[09:06:19.228]            // while "1"  (timeout="50000")
[09:06:19.229]            // while-condition  =>  TRUE
[09:06:19.229]            // while "1"  (timeout="50000")
[09:06:19.229]            // while-condition  =>  TRUE
[09:06:19.229]            // while "1"  (timeout="50000")
[09:06:19.229]            // while-condition  =>  TRUE
[09:06:19.230]            // while "1"  (timeout="50000")
[09:06:19.230]            // while-condition  =>  TRUE
[09:06:19.230]            // while "1"  (timeout="50000")
[09:06:19.230]            // while-condition  =>  TRUE
[09:06:19.231]            // while "1"  (timeout="50000")
[09:06:19.231]            // while-condition  =>  TRUE
[09:06:19.231]            // while "1"  (timeout="50000")
[09:06:19.231]            // while-condition  =>  TRUE
[09:06:19.232]            // while "1"  (timeout="50000")
[09:06:19.232]            // while-condition  =>  TRUE
[09:06:19.232]            // while "1"  (timeout="50000")
[09:06:19.232]            // while-condition  =>  TRUE
[09:06:19.233]            // while "1"  (timeout="50000")
[09:06:19.233]            // while-condition  =>  TRUE
[09:06:19.233]            // while "1"  (timeout="50000")
[09:06:19.233]            // while-condition  =>  TRUE
[09:06:19.233]            // while "1"  (timeout="50000")
[09:06:19.234]            // while-condition  =>  TRUE
[09:06:19.235]            // while "1"  (timeout="50000")
[09:06:19.235]            // while-condition  =>  TRUE
[09:06:19.235]            // while "1"  (timeout="50000")
[09:06:19.236]            // while-condition  =>  TRUE
[09:06:19.236]            // while "1"  (timeout="50000")
[09:06:19.236]            // while-condition  =>  TRUE
[09:06:19.236]            // while "1"  (timeout="50000")
[09:06:19.236]            // while-condition  =>  TRUE
[09:06:19.237]            // while "1"  (timeout="50000")
[09:06:19.237]            // while-condition  =>  TRUE
[09:06:19.237]            // while "1"  (timeout="50000")
[09:06:19.237]            // while-condition  =>  TRUE
[09:06:19.237]            // while "1"  (timeout="50000")
[09:06:19.238]            // while-condition  =>  TRUE
[09:06:19.238]            // while "1"  (timeout="50000")
[09:06:19.238]            // while-condition  =>  TRUE
[09:06:19.238]            // while "1"  (timeout="50000")
[09:06:19.238]            // while-condition  =>  TRUE
[09:06:19.238]            // while "1"  (timeout="50000")
[09:06:19.238]            // while-condition  =>  TRUE
[09:06:19.238]            // while "1"  (timeout="50000")
[09:06:19.239]            // while-condition  =>  TRUE
[09:06:19.239]            // while "1"  (timeout="50000")
[09:06:19.239]            // while-condition  =>  TRUE
[09:06:19.239]            // while "1"  (timeout="50000")
[09:06:19.239]            // while-condition  =>  TRUE
[09:06:19.241]            // while "1"  (timeout="50000")
[09:06:19.241]            // while-condition  =>  TRUE
[09:06:19.241]            // while "1"  (timeout="50000")
[09:06:19.241]            // while-condition  =>  TRUE
[09:06:19.241]            // while "1"  (timeout="50000")
[09:06:19.242]            // while-condition  =>  TRUE
[09:06:19.242]            // while "1"  (timeout="50000")
[09:06:19.242]            // while-condition  =>  TRUE
[09:06:19.242]            // while "1"  (timeout="50000")
[09:06:19.242]            // while-condition  =>  TRUE
[09:06:19.243]            // while "1"  (timeout="50000")
[09:06:19.243]            // while-condition  =>  TRUE
[09:06:19.243]            // while "1"  (timeout="50000")
[09:06:19.243]            // while-condition  =>  TRUE
[09:06:19.243]            // while "1"  (timeout="50000")
[09:06:19.244]            // while-condition  =>  TRUE
[09:06:19.244]            // while "1"  (timeout="50000")
[09:06:19.244]            // while-condition  =>  TRUE
[09:06:19.244]            // while "1"  (timeout="50000")
[09:06:19.244]            // while-condition  =>  TRUE
[09:06:19.244]            // while "1"  (timeout="50000")
[09:06:19.244]            // while-condition  =>  TRUE
[09:06:19.244]            // while "1"  (timeout="50000")
[09:06:19.244]            // while-condition  =>  TRUE
[09:06:19.244]            // while "1"  (timeout="50000")
[09:06:19.245]            // while-condition  =>  TRUE
[09:06:19.245]            // while "1"  (timeout="50000")
[09:06:19.245]            // while-condition  =>  TRUE
[09:06:19.245]            // while "1"  (timeout="50000")
[09:06:19.245]            // while-condition  =>  TRUE
[09:06:19.246]            // while "1"  (timeout="50000")
[09:06:19.246]            // while-condition  =>  TRUE
[09:06:19.246]            // while "1"  (timeout="50000")
[09:06:19.246]            // while-condition  =>  TRUE
[09:06:19.246]            // while "1"  (timeout="50000")
[09:06:19.247]            // while-condition  =>  TRUE
[09:06:19.247]            // while "1"  (timeout="50000")
[09:06:19.247]            // while-condition  =>  TRUE
[09:06:19.247]            // while "1"  (timeout="50000")
[09:06:19.247]            // while-condition  =>  TRUE
[09:06:19.247]            // while "1"  (timeout="50000")
[09:06:19.248]            // while-condition  =>  TRUE
[09:06:19.248]            // while "1"  (timeout="50000")
[09:06:19.248]            // while-condition  =>  TRUE
[09:06:19.248]            // while "1"  (timeout="50000")
[09:06:19.248]            // while-condition  =>  TRUE
[09:06:19.249]            // while "1"  (timeout="50000")
[09:06:19.249]            // while-condition  =>  TRUE
[09:06:19.249]            // while "1"  (timeout="50000")
[09:06:19.249]            // while-condition  =>  TRUE
[09:06:19.249]            // while "1"  (timeout="50000")
[09:06:19.250]            // while-condition  =>  TRUE
[09:06:19.250]            // while "1"  (timeout="50000")
[09:06:19.250]            // while-condition  =>  TRUE
[09:06:19.250]            // while "1"  (timeout="50000")
[09:06:19.250]            // while-condition  =>  TRUE
[09:06:19.252]            // while "1"  (timeout="50000")
[09:06:19.252]            // while-condition  =>  TRUE
[09:06:19.252]            // while "1"  (timeout="50000")
[09:06:19.252]            // while-condition  =>  TRUE
[09:06:19.253]            // while "1"  (timeout="50000")
[09:06:19.253]            // while-condition  =>  TRUE
[09:06:19.253]            // while "1"  (timeout="50000")
[09:06:19.253]            // while-condition  =>  TRUE
[09:06:19.253]            // while "1"  (timeout="50000")
[09:06:19.253]            // while-condition  =>  TRUE
[09:06:19.254]            // while "1"  (timeout="50000")
[09:06:19.254]            // while-condition  =>  TRUE
[09:06:19.254]            // while "1"  (timeout="50000")
[09:06:19.254]            // while-condition  =>  TRUE
[09:06:19.254]            // while "1"  (timeout="50000")
[09:06:19.255]            // while-condition  =>  TRUE
[09:06:19.255]            // while "1"  (timeout="50000")
[09:06:19.255]            // while  =>  TIMEOUT
[09:06:19.255]            // end while "1"
[09:06:19.256]          </control>
[09:06:19.256]          <block atomic="false" info="">
[09:06:19.256]            DAP_SWJ_Pins(nReset, nReset, 0);
[09:06:19.258]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:06:19.259]          </block>
[09:06:19.259]          <control if="" while="1" timeout="10000" info="">
[09:06:19.259]            // while "1"  (timeout="10000")
[09:06:19.259]            // while-condition  =>  TRUE
[09:06:19.259]            // while "1"  (timeout="10000")
[09:06:19.259]            // while-condition  =>  TRUE
[09:06:19.259]            // while "1"  (timeout="10000")
[09:06:19.259]            // while-condition  =>  TRUE
[09:06:19.259]            // while "1"  (timeout="10000")
[09:06:19.259]            // while-condition  =>  TRUE
[09:06:19.260]            // while "1"  (timeout="10000")
[09:06:19.260]            // while-condition  =>  TRUE
[09:06:19.260]            // while "1"  (timeout="10000")
[09:06:19.261]            // while-condition  =>  TRUE
[09:06:19.261]            // while "1"  (timeout="10000")
[09:06:19.261]            // while-condition  =>  TRUE
[09:06:19.261]            // while "1"  (timeout="10000")
[09:06:19.262]            // while-condition  =>  TRUE
[09:06:19.263]            // while "1"  (timeout="10000")
[09:06:19.263]            // while-condition  =>  TRUE
[09:06:19.263]            // while "1"  (timeout="10000")
[09:06:19.264]            // while-condition  =>  TRUE
[09:06:19.264]            // while "1"  (timeout="10000")
[09:06:19.264]            // while-condition  =>  TRUE
[09:06:19.264]            // while "1"  (timeout="10000")
[09:06:19.265]            // while-condition  =>  TRUE
[09:06:19.265]            // while "1"  (timeout="10000")
[09:06:19.265]            // while-condition  =>  TRUE
[09:06:19.265]            // while "1"  (timeout="10000")
[09:06:19.265]            // while-condition  =>  TRUE
[09:06:19.266]            // while "1"  (timeout="10000")
[09:06:19.266]            // while-condition  =>  TRUE
[09:06:19.266]            // while "1"  (timeout="10000")
[09:06:19.266]            // while-condition  =>  TRUE
[09:06:19.266]            // while "1"  (timeout="10000")
[09:06:19.266]            // while-condition  =>  TRUE
[09:06:19.266]            // while "1"  (timeout="10000")
[09:06:19.266]            // while-condition  =>  TRUE
[09:06:19.266]            // while "1"  (timeout="10000")
[09:06:19.266]            // while-condition  =>  TRUE
[09:06:19.267]            // while "1"  (timeout="10000")
[09:06:19.267]            // while-condition  =>  TRUE
[09:06:19.267]            // while "1"  (timeout="10000")
[09:06:19.267]            // while-condition  =>  TRUE
[09:06:19.267]            // while "1"  (timeout="10000")
[09:06:19.269]            // while-condition  =>  TRUE
[09:06:19.269]            // while "1"  (timeout="10000")
[09:06:19.269]            // while-condition  =>  TRUE
[09:06:19.269]            // while "1"  (timeout="10000")
[09:06:19.269]            // while-condition  =>  TRUE
[09:06:19.270]            // while "1"  (timeout="10000")
[09:06:19.270]            // while-condition  =>  TRUE
[09:06:19.270]            // while "1"  (timeout="10000")
[09:06:19.270]            // while-condition  =>  TRUE
[09:06:19.270]            // while "1"  (timeout="10000")
[09:06:19.270]            // while-condition  =>  TRUE
[09:06:19.270]            // while "1"  (timeout="10000")
[09:06:19.270]            // while-condition  =>  TRUE
[09:06:19.270]            // while "1"  (timeout="10000")
[09:06:19.270]            // while-condition  =>  TRUE
[09:06:19.271]            // while "1"  (timeout="10000")
[09:06:19.271]            // while  =>  TIMEOUT
[09:06:19.271]            // end while "1"
[09:06:19.271]          </control>
[09:06:19.271]          <block atomic="true" info="">
[09:06:19.274]  
[09:06:19.274]  ! W001 : No atomic sequence support in debug unit
[09:06:19.274]  
[09:06:19.277]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:06:19.279]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:06:19.280]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:06:19.282]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:06:19.283]          </block>
[09:06:19.283]          <block atomic="false" info="">
[09:06:19.283]            __errorcontrol = 0x00000001;
[09:06:19.284]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:06:19.284]            ReadDP(0x0);
[09:06:19.286]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:06:19.287]            __errorcontrol = 0x00000000;
[09:06:19.287]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:06:19.287]          </block>
[09:06:19.288]        </sequence>
[09:06:19.288]      Sequence("DebugPortSetup");
[09:06:19.288]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:06:19.289]        </sequence>
[09:06:19.289]      Sequence("DebugPortStart");
[09:06:19.289]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:06:19.290]          <block atomic="false" info="">
[09:06:19.290]            __var SW_DP_ABORT  = 0x0;
[09:06:19.290]              // -> [SW_DP_ABORT <= 0x00000000]
[09:06:19.290]            __var DP_CTRL_STAT = 0x4;
[09:06:19.291]              // -> [DP_CTRL_STAT <= 0x00000004]
[09:06:19.291]            __var DP_SELECT    = 0x8;
[09:06:19.291]              // -> [DP_SELECT <= 0x00000008]
[09:06:19.291]            __var powered_down = 0;
[09:06:19.292]              // -> [powered_down <= 0x00000000]
[09:06:19.292]            WriteDP(DP_SELECT, 0x00000000);
[09:06:19.294]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:06:19.295]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:06:19.297]              // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:06:19.298]              // -> [powered_down <= 0x00000000]
[09:06:19.298]          </block>
[09:06:19.299]          <control if="powered_down" while="" timeout="0" info="">
[09:06:19.300]            // if-block "powered_down"
[09:06:19.300]              // =>  FALSE
[09:06:19.301]            // skip if-block "powered_down"
[09:06:19.301]          </control>
[09:06:19.302]        </sequence>
[09:06:19.302]      Sequence("DebugCoreStart");
[09:06:19.303]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:06:19.303]          <block atomic="true" info="">
[09:06:19.306]  
[09:06:19.306]  ! W001 : No atomic sequence support in debug unit
[09:06:19.306]  
[09:06:19.308]            __var DP_R_IDCODE    = 0x0;
[09:06:19.309]              // -> [DP_R_IDCODE <= 0x00000000]
[09:06:19.309]            __var DP_W_ABORT    = 0x0;
[09:06:19.309]              // -> [DP_W_ABORT <= 0x00000000]
[09:06:19.310]            __var DP_CTRLSTAT = 0x4;
[09:06:19.310]              // -> [DP_CTRLSTAT <= 0x00000004]
[09:06:19.311]            __var DP_W_SELECT    = 0x8;
[09:06:19.311]              // -> [DP_W_SELECT <= 0x00000008]
[09:06:19.311]            __var AP_TAR		= 0x4;
[09:06:19.312]              // -> [AP_TAR <= 0x00000004]
[09:06:19.312]            __var AP_BD0		= 0x0;
[09:06:19.312]              // -> [AP_BD0 <= 0x00000000]
[09:06:19.313]            __var AP_BD1		= 0x4;
[09:06:19.313]              // -> [AP_BD1 <= 0x00000004]
[09:06:19.313]            __var AP_BD2		= 0x8;
[09:06:19.314]              // -> [AP_BD2 <= 0x00000008]
[09:06:19.314]            __var PCWithinFlash = 0;
[09:06:19.314]              // -> [PCWithinFlash <= 0x00000000]
[09:06:19.314]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:06:19.321]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.336]          </block>
[09:06:19.336]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:06:19.337]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:06:19.343]              // -> [Read32(0xE000EDF0) => 0x00030003]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.343]            // while-condition  =>  FALSE
[09:06:19.343]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:06:19.344]          </control>
[09:06:19.345]          <block atomic="true" info="">
[09:06:19.348]  
[09:06:19.348]  ! W001 : No atomic sequence support in debug unit
[09:06:19.348]  
[09:06:19.350]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:06:19.352]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:06:19.353]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:06:19.356]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.356]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:06:19.359]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:06:19.360]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:06:19.364]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.365]          </block>
[09:06:19.366]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:06:19.366]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.368]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.369]            // while-condition  =>  TRUE
[09:06:19.370]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.372]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.372]            // while-condition  =>  TRUE
[09:06:19.373]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.374]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.375]            // while-condition  =>  TRUE
[09:06:19.376]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.378]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.379]            // while-condition  =>  TRUE
[09:06:19.379]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.381]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.382]            // while-condition  =>  TRUE
[09:06:19.382]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.385]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.385]            // while-condition  =>  TRUE
[09:06:19.386]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.387]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.388]            // while-condition  =>  TRUE
[09:06:19.389]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.391]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.392]            // while-condition  =>  TRUE
[09:06:19.392]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.394]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.395]            // while-condition  =>  TRUE
[09:06:19.395]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.397]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.397]            // while-condition  =>  TRUE
[09:06:19.398]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.401]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.402]            // while-condition  =>  TRUE
[09:06:19.402]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.405]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.406]            // while-condition  =>  TRUE
[09:06:19.406]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.409]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.410]            // while-condition  =>  TRUE
[09:06:19.411]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.413]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.414]            // while-condition  =>  TRUE
[09:06:19.415]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.417]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.417]            // while-condition  =>  TRUE
[09:06:19.418]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.421]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.422]            // while-condition  =>  TRUE
[09:06:19.422]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.425]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.426]            // while-condition  =>  TRUE
[09:06:19.426]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.429]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.430]            // while-condition  =>  TRUE
[09:06:19.430]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.432]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.433]            // while-condition  =>  TRUE
[09:06:19.433]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.436]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.436]            // while-condition  =>  TRUE
[09:06:19.436]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.439]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.440]            // while-condition  =>  TRUE
[09:06:19.440]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.442]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.443]            // while-condition  =>  TRUE
[09:06:19.443]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.445]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.446]            // while-condition  =>  TRUE
[09:06:19.446]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.448]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.448]            // while-condition  =>  TRUE
[09:06:19.449]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.451]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.452]            // while-condition  =>  TRUE
[09:06:19.452]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.454]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.454]            // while-condition  =>  TRUE
[09:06:19.455]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.457]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.457]            // while-condition  =>  TRUE
[09:06:19.457]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.460]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.460]            // while-condition  =>  TRUE
[09:06:19.460]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.463]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.463]            // while-condition  =>  TRUE
[09:06:19.463]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.466]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.466]            // while-condition  =>  TRUE
[09:06:19.467]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.469]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.470]            // while-condition  =>  TRUE
[09:06:19.471]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.473]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.474]            // while-condition  =>  TRUE
[09:06:19.474]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:06:19.475]            // while  =>  TIMEOUT
[09:06:19.476]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:06:19.477]          </control>
[09:06:19.477]          <block atomic="false" info="">
[09:06:19.477]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:06:19.479]              // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:06:19.480]              // -> [PCWithinFlash <= 0x00000000]
[09:06:19.480]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:06:19.482]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:06:19.483]          </block>
[09:06:19.484]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:06:19.485]            // if-block "PCWithinFlash == 0"
[09:06:19.485]              // =>  TRUE
[09:06:19.486]            // end if-block "PCWithinFlash == 0"
[09:06:19.486]          </control>
[09:06:19.487]        </sequence>
[09:06:19.487]    </block>
[09:06:19.488]  </sequence>
[09:06:19.488]  
[09:06:30.509]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[09:06:30.509]  
[09:06:30.510]  <debugvars>
[09:06:30.510]    // Pre-defined
[09:06:30.511]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:06:30.511]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:06:30.512]    __dp=0x00000000
[09:06:30.512]    __ap=0x00000000
[09:06:30.512]    __traceout=0x00000000      (Trace Disabled)
[09:06:30.514]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:06:30.514]    __FlashAddr=0x00000000
[09:06:30.515]    __FlashLen=0x00000000
[09:06:30.515]    __FlashArg=0x00000000
[09:06:30.516]    __FlashOp=0x00000000
[09:06:30.516]    __Result=0x00000000
[09:06:30.517]  </debugvars>
[09:06:30.518]  
[09:06:30.518]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[09:06:30.519]    <block atomic="false" info="">
[09:06:30.519]      __var nReset      = 0x80;
[09:06:30.520]        // -> [nReset <= 0x00000080]
[09:06:30.520]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:06:30.522]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:06:30.522]    </block>
[09:06:30.522]    <control if="" while="1" timeout="50000" info="">
[09:06:30.523]      // while "1"  (timeout="50000")
[09:06:30.523]      // while-condition  =>  TRUE
[09:06:30.524]      // while "1"  (timeout="50000")
[09:06:30.524]      // while-condition  =>  TRUE
[09:06:30.526]      // while "1"  (timeout="50000")
[09:06:30.526]      // while-condition  =>  TRUE
[09:06:30.527]      // while "1"  (timeout="50000")
[09:06:30.527]      // while-condition  =>  TRUE
[09:06:30.527]      // while "1"  (timeout="50000")
[09:06:30.528]      // while-condition  =>  TRUE
[09:06:30.529]      // while "1"  (timeout="50000")
[09:06:30.529]      // while-condition  =>  TRUE
[09:06:30.530]      // while "1"  (timeout="50000")
[09:06:30.530]      // while-condition  =>  TRUE
[09:06:30.531]      // while "1"  (timeout="50000")
[09:06:30.531]      // while-condition  =>  TRUE
[09:06:30.531]      // while "1"  (timeout="50000")
[09:06:30.531]      // while-condition  =>  TRUE
[09:06:30.532]      // while "1"  (timeout="50000")
[09:06:30.532]      // while-condition  =>  TRUE
[09:06:30.534]      // while "1"  (timeout="50000")
[09:06:30.534]      // while-condition  =>  TRUE
[09:06:30.535]      // while "1"  (timeout="50000")
[09:06:30.535]      // while-condition  =>  TRUE
[09:06:30.535]      // while "1"  (timeout="50000")
[09:06:30.535]      // while-condition  =>  TRUE
[09:06:30.536]      // while "1"  (timeout="50000")
[09:06:30.536]      // while-condition  =>  TRUE
[09:06:30.538]      // while "1"  (timeout="50000")
[09:06:30.538]      // while-condition  =>  TRUE
[09:06:30.538]      // while "1"  (timeout="50000")
[09:06:30.538]      // while-condition  =>  TRUE
[09:06:30.539]      // while "1"  (timeout="50000")
[09:06:30.539]      // while-condition  =>  TRUE
[09:06:30.539]      // while "1"  (timeout="50000")
[09:06:30.540]      // while-condition  =>  TRUE
[09:06:30.540]      // while "1"  (timeout="50000")
[09:06:30.540]      // while-condition  =>  TRUE
[09:06:30.541]      // while "1"  (timeout="50000")
[09:06:30.541]      // while-condition  =>  TRUE
[09:06:30.541]      // while "1"  (timeout="50000")
[09:06:30.541]      // while-condition  =>  TRUE
[09:06:30.542]      // while "1"  (timeout="50000")
[09:06:30.542]      // while-condition  =>  TRUE
[09:06:30.542]      // while "1"  (timeout="50000")
[09:06:30.542]      // while-condition  =>  TRUE
[09:06:30.542]      // while "1"  (timeout="50000")
[09:06:30.542]      // while-condition  =>  TRUE
[09:06:30.542]      // while "1"  (timeout="50000")
[09:06:30.544]      // while-condition  =>  TRUE
[09:06:30.544]      // while "1"  (timeout="50000")
[09:06:30.544]      // while-condition  =>  TRUE
[09:06:30.544]      // while "1"  (timeout="50000")
[09:06:30.544]      // while-condition  =>  TRUE
[09:06:30.545]      // while "1"  (timeout="50000")
[09:06:30.545]      // while-condition  =>  TRUE
[09:06:30.545]      // while "1"  (timeout="50000")
[09:06:30.545]      // while-condition  =>  TRUE
[09:06:30.546]      // while "1"  (timeout="50000")
[09:06:30.546]      // while-condition  =>  TRUE
[09:06:30.546]      // while "1"  (timeout="50000")
[09:06:30.546]      // while-condition  =>  TRUE
[09:06:30.546]      // while "1"  (timeout="50000")
[09:06:30.547]      // while-condition  =>  TRUE
[09:06:30.547]      // while "1"  (timeout="50000")
[09:06:30.547]      // while-condition  =>  TRUE
[09:06:30.547]      // while "1"  (timeout="50000")
[09:06:30.547]      // while-condition  =>  TRUE
[09:06:30.547]      // while "1"  (timeout="50000")
[09:06:30.548]      // while-condition  =>  TRUE
[09:06:30.548]      // while "1"  (timeout="50000")
[09:06:30.548]      // while-condition  =>  TRUE
[09:06:30.548]      // while "1"  (timeout="50000")
[09:06:30.548]      // while-condition  =>  TRUE
[09:06:30.549]      // while "1"  (timeout="50000")
[09:06:30.549]      // while-condition  =>  TRUE
[09:06:30.549]      // while "1"  (timeout="50000")
[09:06:30.549]      // while-condition  =>  TRUE
[09:06:30.549]      // while "1"  (timeout="50000")
[09:06:30.550]      // while-condition  =>  TRUE
[09:06:30.550]      // while "1"  (timeout="50000")
[09:06:30.550]      // while-condition  =>  TRUE
[09:06:30.550]      // while "1"  (timeout="50000")
[09:06:30.550]      // while-condition  =>  TRUE
[09:06:30.551]      // while "1"  (timeout="50000")
[09:06:30.551]      // while-condition  =>  TRUE
[09:06:30.551]      // while "1"  (timeout="50000")
[09:06:30.551]      // while-condition  =>  TRUE
[09:06:30.551]      // while "1"  (timeout="50000")
[09:06:30.552]      // while-condition  =>  TRUE
[09:06:30.552]      // while "1"  (timeout="50000")
[09:06:30.552]      // while-condition  =>  TRUE
[09:06:30.552]      // while "1"  (timeout="50000")
[09:06:30.552]      // while-condition  =>  TRUE
[09:06:30.552]      // while "1"  (timeout="50000")
[09:06:30.552]      // while-condition  =>  TRUE
[09:06:30.552]      // while "1"  (timeout="50000")
[09:06:30.552]      // while-condition  =>  TRUE
[09:06:30.552]      // while "1"  (timeout="50000")
[09:06:30.553]      // while-condition  =>  TRUE
[09:06:30.554]      // while "1"  (timeout="50000")
[09:06:30.554]      // while-condition  =>  TRUE
[09:06:30.554]      // while "1"  (timeout="50000")
[09:06:30.554]      // while-condition  =>  TRUE
[09:06:30.554]      // while "1"  (timeout="50000")
[09:06:30.554]      // while-condition  =>  TRUE
[09:06:30.555]      // while "1"  (timeout="50000")
[09:06:30.555]      // while-condition  =>  TRUE
[09:06:30.555]      // while "1"  (timeout="50000")
[09:06:30.555]      // while-condition  =>  TRUE
[09:06:30.555]      // while "1"  (timeout="50000")
[09:06:30.556]      // while-condition  =>  TRUE
[09:06:30.556]      // while "1"  (timeout="50000")
[09:06:30.556]      // while-condition  =>  TRUE
[09:06:30.556]      // while "1"  (timeout="50000")
[09:06:30.557]      // while-condition  =>  TRUE
[09:06:30.557]      // while "1"  (timeout="50000")
[09:06:30.557]      // while-condition  =>  TRUE
[09:06:30.557]      // while "1"  (timeout="50000")
[09:06:30.557]      // while-condition  =>  TRUE
[09:06:30.558]      // while "1"  (timeout="50000")
[09:06:30.558]      // while-condition  =>  TRUE
[09:06:30.558]      // while "1"  (timeout="50000")
[09:06:30.558]      // while-condition  =>  TRUE
[09:06:30.558]      // while "1"  (timeout="50000")
[09:06:30.559]      // while-condition  =>  TRUE
[09:06:30.559]      // while "1"  (timeout="50000")
[09:06:30.559]      // while-condition  =>  TRUE
[09:06:30.559]      // while "1"  (timeout="50000")
[09:06:30.559]      // while-condition  =>  TRUE
[09:06:30.560]      // while "1"  (timeout="50000")
[09:06:30.560]      // while-condition  =>  TRUE
[09:06:30.560]      // while "1"  (timeout="50000")
[09:06:30.560]      // while-condition  =>  TRUE
[09:06:30.560]      // while "1"  (timeout="50000")
[09:06:30.561]      // while-condition  =>  TRUE
[09:06:30.561]      // while "1"  (timeout="50000")
[09:06:30.561]      // while-condition  =>  TRUE
[09:06:30.561]      // while "1"  (timeout="50000")
[09:06:30.561]      // while-condition  =>  TRUE
[09:06:30.561]      // while "1"  (timeout="50000")
[09:06:30.562]      // while-condition  =>  TRUE
[09:06:30.562]      // while "1"  (timeout="50000")
[09:06:30.562]      // while-condition  =>  TRUE
[09:06:30.562]      // while "1"  (timeout="50000")
[09:06:30.562]      // while-condition  =>  TRUE
[09:06:30.562]      // while "1"  (timeout="50000")
[09:06:30.562]      // while-condition  =>  TRUE
[09:06:30.562]      // while "1"  (timeout="50000")
[09:06:30.562]      // while-condition  =>  TRUE
[09:06:30.563]      // while "1"  (timeout="50000")
[09:06:30.563]      // while-condition  =>  TRUE
[09:06:30.563]      // while "1"  (timeout="50000")
[09:06:30.563]      // while-condition  =>  TRUE
[09:06:30.563]      // while "1"  (timeout="50000")
[09:06:30.564]      // while-condition  =>  TRUE
[09:06:30.565]      // while "1"  (timeout="50000")
[09:06:30.565]      // while-condition  =>  TRUE
[09:06:30.565]      // while "1"  (timeout="50000")
[09:06:30.565]      // while-condition  =>  TRUE
[09:06:30.565]      // while "1"  (timeout="50000")
[09:06:30.566]      // while-condition  =>  TRUE
[09:06:30.566]      // while "1"  (timeout="50000")
[09:06:30.566]      // while-condition  =>  TRUE
[09:06:30.566]      // while "1"  (timeout="50000")
[09:06:30.566]      // while-condition  =>  TRUE
[09:06:30.567]      // while "1"  (timeout="50000")
[09:06:30.567]      // while-condition  =>  TRUE
[09:06:30.567]      // while "1"  (timeout="50000")
[09:06:30.567]      // while-condition  =>  TRUE
[09:06:30.567]      // while "1"  (timeout="50000")
[09:06:30.568]      // while-condition  =>  TRUE
[09:06:30.568]      // while "1"  (timeout="50000")
[09:06:30.568]      // while-condition  =>  TRUE
[09:06:30.568]      // while "1"  (timeout="50000")
[09:06:30.568]      // while-condition  =>  TRUE
[09:06:30.569]      // while "1"  (timeout="50000")
[09:06:30.569]      // while-condition  =>  TRUE
[09:06:30.569]      // while "1"  (timeout="50000")
[09:06:30.569]      // while-condition  =>  TRUE
[09:06:30.570]      // while "1"  (timeout="50000")
[09:06:30.570]      // while-condition  =>  TRUE
[09:06:30.570]      // while "1"  (timeout="50000")
[09:06:30.570]      // while-condition  =>  TRUE
[09:06:30.570]      // while "1"  (timeout="50000")
[09:06:30.570]      // while-condition  =>  TRUE
[09:06:30.570]      // while "1"  (timeout="50000")
[09:06:30.571]      // while-condition  =>  TRUE
[09:06:30.571]      // while "1"  (timeout="50000")
[09:06:30.571]      // while-condition  =>  TRUE
[09:06:30.571]      // while "1"  (timeout="50000")
[09:06:30.571]      // while-condition  =>  TRUE
[09:06:30.572]      // while "1"  (timeout="50000")
[09:06:30.572]      // while-condition  =>  TRUE
[09:06:30.572]      // while "1"  (timeout="50000")
[09:06:30.572]      // while-condition  =>  TRUE
[09:06:30.572]      // while "1"  (timeout="50000")
[09:06:30.572]      // while-condition  =>  TRUE
[09:06:30.572]      // while "1"  (timeout="50000")
[09:06:30.572]      // while-condition  =>  TRUE
[09:06:30.574]      // while "1"  (timeout="50000")
[09:06:30.574]      // while-condition  =>  TRUE
[09:06:30.574]      // while "1"  (timeout="50000")
[09:06:30.574]      // while-condition  =>  TRUE
[09:06:30.574]      // while "1"  (timeout="50000")
[09:06:30.575]      // while-condition  =>  TRUE
[09:06:30.575]      // while "1"  (timeout="50000")
[09:06:30.575]      // while-condition  =>  TRUE
[09:06:30.575]      // while "1"  (timeout="50000")
[09:06:30.575]      // while-condition  =>  TRUE
[09:06:30.576]      // while "1"  (timeout="50000")
[09:06:30.576]      // while-condition  =>  TRUE
[09:06:30.576]      // while "1"  (timeout="50000")
[09:06:30.576]      // while-condition  =>  TRUE
[09:06:30.576]      // while "1"  (timeout="50000")
[09:06:30.577]      // while-condition  =>  TRUE
[09:06:30.577]      // while "1"  (timeout="50000")
[09:06:30.577]      // while-condition  =>  TRUE
[09:06:30.577]      // while "1"  (timeout="50000")
[09:06:30.577]      // while-condition  =>  TRUE
[09:06:30.578]      // while "1"  (timeout="50000")
[09:06:30.578]      // while-condition  =>  TRUE
[09:06:30.578]      // while "1"  (timeout="50000")
[09:06:30.578]      // while-condition  =>  TRUE
[09:06:30.578]      // while "1"  (timeout="50000")
[09:06:30.579]      // while-condition  =>  TRUE
[09:06:30.579]      // while "1"  (timeout="50000")
[09:06:30.579]      // while-condition  =>  TRUE
[09:06:30.579]      // while "1"  (timeout="50000")
[09:06:30.579]      // while-condition  =>  TRUE
[09:06:30.580]      // while "1"  (timeout="50000")
[09:06:30.580]      // while-condition  =>  TRUE
[09:06:30.580]      // while "1"  (timeout="50000")
[09:06:30.580]      // while-condition  =>  TRUE
[09:06:30.580]      // while "1"  (timeout="50000")
[09:06:30.581]      // while-condition  =>  TRUE
[09:06:30.581]      // while "1"  (timeout="50000")
[09:06:30.581]      // while-condition  =>  TRUE
[09:06:30.581]      // while "1"  (timeout="50000")
[09:06:30.581]      // while-condition  =>  TRUE
[09:06:30.582]      // while "1"  (timeout="50000")
[09:06:30.582]      // while-condition  =>  TRUE
[09:06:30.582]      // while "1"  (timeout="50000")
[09:06:30.582]      // while-condition  =>  TRUE
[09:06:30.582]      // while "1"  (timeout="50000")
[09:06:30.582]      // while-condition  =>  TRUE
[09:06:30.582]      // while "1"  (timeout="50000")
[09:06:30.582]      // while-condition  =>  TRUE
[09:06:30.582]      // while "1"  (timeout="50000")
[09:06:30.582]      // while-condition  =>  TRUE
[09:06:30.583]      // while "1"  (timeout="50000")
[09:06:30.584]      // while  =>  TIMEOUT
[09:06:30.584]      // end while "1"
[09:06:30.584]    </control>
[09:06:30.584]    <block atomic="false" info="">
[09:06:30.584]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:06:30.586]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:06:30.586]    </block>
[09:06:30.586]  </sequence>
[09:06:30.586]  
[09:07:33.890]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:07:33.890]  
[09:07:33.890]  <debugvars>
[09:07:33.891]    // Pre-defined
[09:07:33.891]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:07:33.892]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:07:33.892]    __dp=0x00000000
[09:07:33.893]    __ap=0x00000000
[09:07:33.893]    __traceout=0x00000000      (Trace Disabled)
[09:07:33.894]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:07:33.894]    __FlashAddr=0x00000000
[09:07:33.894]    __FlashLen=0x00000000
[09:07:33.895]    __FlashArg=0x00000000
[09:07:33.895]    __FlashOp=0x00000000
[09:07:33.896]    __Result=0x00000000
[09:07:33.896]  </debugvars>
[09:07:33.896]  
[09:07:33.897]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:07:33.897]    <block atomic="false" info="">
[09:07:33.897]      __var nReset      = 0x80;
[09:07:33.898]        // -> [nReset <= 0x00000080]
[09:07:33.898]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:07:33.900]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:07:33.900]    </block>
[09:07:33.901]    <control if="" while="1" timeout="50000" info="">
[09:07:33.901]      // while "1"  (timeout="50000")
[09:07:33.902]      // while-condition  =>  TRUE
[09:07:33.902]      // while "1"  (timeout="50000")
[09:07:33.902]      // while-condition  =>  TRUE
[09:07:33.903]      // while "1"  (timeout="50000")
[09:07:33.903]      // while-condition  =>  TRUE
[09:07:33.903]      // while "1"  (timeout="50000")
[09:07:33.904]      // while-condition  =>  TRUE
[09:07:33.904]      // while "1"  (timeout="50000")
[09:07:33.904]      // while-condition  =>  TRUE
[09:07:33.905]      // while "1"  (timeout="50000")
[09:07:33.905]      // while-condition  =>  TRUE
[09:07:33.905]      // while "1"  (timeout="50000")
[09:07:33.905]      // while-condition  =>  TRUE
[09:07:33.906]      // while "1"  (timeout="50000")
[09:07:33.906]      // while-condition  =>  TRUE
[09:07:33.906]      // while "1"  (timeout="50000")
[09:07:33.907]      // while-condition  =>  TRUE
[09:07:33.907]      // while "1"  (timeout="50000")
[09:07:33.907]      // while-condition  =>  TRUE
[09:07:33.907]      // while "1"  (timeout="50000")
[09:07:33.908]      // while-condition  =>  TRUE
[09:07:33.908]      // while "1"  (timeout="50000")
[09:07:33.908]      // while-condition  =>  TRUE
[09:07:33.909]      // while "1"  (timeout="50000")
[09:07:33.909]      // while-condition  =>  TRUE
[09:07:33.909]      // while "1"  (timeout="50000")
[09:07:33.909]      // while-condition  =>  TRUE
[09:07:33.910]      // while "1"  (timeout="50000")
[09:07:33.910]      // while-condition  =>  TRUE
[09:07:33.910]      // while "1"  (timeout="50000")
[09:07:33.910]      // while-condition  =>  TRUE
[09:07:33.910]      // while "1"  (timeout="50000")
[09:07:33.911]      // while-condition  =>  TRUE
[09:07:33.911]      // while "1"  (timeout="50000")
[09:07:33.911]      // while-condition  =>  TRUE
[09:07:33.911]      // while "1"  (timeout="50000")
[09:07:33.912]      // while-condition  =>  TRUE
[09:07:33.912]      // while "1"  (timeout="50000")
[09:07:33.912]      // while-condition  =>  TRUE
[09:07:33.912]      // while "1"  (timeout="50000")
[09:07:33.912]      // while-condition  =>  TRUE
[09:07:33.913]      // while "1"  (timeout="50000")
[09:07:33.913]      // while-condition  =>  TRUE
[09:07:33.913]      // while "1"  (timeout="50000")
[09:07:33.913]      // while-condition  =>  TRUE
[09:07:33.913]      // while "1"  (timeout="50000")
[09:07:33.913]      // while-condition  =>  TRUE
[09:07:33.914]      // while "1"  (timeout="50000")
[09:07:33.914]      // while-condition  =>  TRUE
[09:07:33.914]      // while "1"  (timeout="50000")
[09:07:33.914]      // while-condition  =>  TRUE
[09:07:33.915]      // while "1"  (timeout="50000")
[09:07:33.915]      // while-condition  =>  TRUE
[09:07:33.915]      // while "1"  (timeout="50000")
[09:07:33.915]      // while-condition  =>  TRUE
[09:07:33.915]      // while "1"  (timeout="50000")
[09:07:33.916]      // while-condition  =>  TRUE
[09:07:33.916]      // while "1"  (timeout="50000")
[09:07:33.916]      // while-condition  =>  TRUE
[09:07:33.916]      // while "1"  (timeout="50000")
[09:07:33.916]      // while-condition  =>  TRUE
[09:07:33.916]      // while "1"  (timeout="50000")
[09:07:33.917]      // while-condition  =>  TRUE
[09:07:33.917]      // while "1"  (timeout="50000")
[09:07:33.917]      // while-condition  =>  TRUE
[09:07:33.917]      // while "1"  (timeout="50000")
[09:07:33.918]      // while-condition  =>  TRUE
[09:07:33.918]      // while "1"  (timeout="50000")
[09:07:33.918]      // while-condition  =>  TRUE
[09:07:33.918]      // while "1"  (timeout="50000")
[09:07:33.918]      // while-condition  =>  TRUE
[09:07:33.918]      // while "1"  (timeout="50000")
[09:07:33.919]      // while-condition  =>  TRUE
[09:07:33.919]      // while "1"  (timeout="50000")
[09:07:33.919]      // while-condition  =>  TRUE
[09:07:33.919]      // while "1"  (timeout="50000")
[09:07:33.920]      // while-condition  =>  TRUE
[09:07:33.920]      // while "1"  (timeout="50000")
[09:07:33.920]      // while-condition  =>  TRUE
[09:07:33.920]      // while "1"  (timeout="50000")
[09:07:33.920]      // while-condition  =>  TRUE
[09:07:33.921]      // while "1"  (timeout="50000")
[09:07:33.921]      // while-condition  =>  TRUE
[09:07:33.921]      // while "1"  (timeout="50000")
[09:07:33.921]      // while-condition  =>  TRUE
[09:07:33.922]      // while "1"  (timeout="50000")
[09:07:33.922]      // while-condition  =>  TRUE
[09:07:33.922]      // while "1"  (timeout="50000")
[09:07:33.922]      // while-condition  =>  TRUE
[09:07:33.922]      // while "1"  (timeout="50000")
[09:07:33.923]      // while-condition  =>  TRUE
[09:07:33.923]      // while "1"  (timeout="50000")
[09:07:33.923]      // while-condition  =>  TRUE
[09:07:33.923]      // while "1"  (timeout="50000")
[09:07:33.924]      // while-condition  =>  TRUE
[09:07:33.924]      // while "1"  (timeout="50000")
[09:07:33.924]      // while-condition  =>  TRUE
[09:07:33.924]      // while "1"  (timeout="50000")
[09:07:33.924]      // while-condition  =>  TRUE
[09:07:33.925]      // while "1"  (timeout="50000")
[09:07:33.925]      // while-condition  =>  TRUE
[09:07:33.925]      // while "1"  (timeout="50000")
[09:07:33.925]      // while-condition  =>  TRUE
[09:07:33.926]      // while "1"  (timeout="50000")
[09:07:33.926]      // while-condition  =>  TRUE
[09:07:33.926]      // while "1"  (timeout="50000")
[09:07:33.926]      // while-condition  =>  TRUE
[09:07:33.926]      // while "1"  (timeout="50000")
[09:07:33.927]      // while-condition  =>  TRUE
[09:07:33.927]      // while "1"  (timeout="50000")
[09:07:33.927]      // while-condition  =>  TRUE
[09:07:33.927]      // while "1"  (timeout="50000")
[09:07:33.928]      // while-condition  =>  TRUE
[09:07:33.928]      // while "1"  (timeout="50000")
[09:07:33.928]      // while-condition  =>  TRUE
[09:07:33.928]      // while "1"  (timeout="50000")
[09:07:33.928]      // while-condition  =>  TRUE
[09:07:33.929]      // while "1"  (timeout="50000")
[09:07:33.929]      // while-condition  =>  TRUE
[09:07:33.929]      // while "1"  (timeout="50000")
[09:07:33.929]      // while-condition  =>  TRUE
[09:07:33.930]      // while "1"  (timeout="50000")
[09:07:33.930]      // while-condition  =>  TRUE
[09:07:33.930]      // while "1"  (timeout="50000")
[09:07:33.930]      // while-condition  =>  TRUE
[09:07:33.930]      // while "1"  (timeout="50000")
[09:07:33.931]      // while-condition  =>  TRUE
[09:07:33.931]      // while "1"  (timeout="50000")
[09:07:33.931]      // while-condition  =>  TRUE
[09:07:33.931]      // while "1"  (timeout="50000")
[09:07:33.932]      // while-condition  =>  TRUE
[09:07:33.932]      // while "1"  (timeout="50000")
[09:07:33.932]      // while-condition  =>  TRUE
[09:07:33.932]      // while "1"  (timeout="50000")
[09:07:33.932]      // while-condition  =>  TRUE
[09:07:33.933]      // while "1"  (timeout="50000")
[09:07:33.933]      // while-condition  =>  TRUE
[09:07:33.933]      // while "1"  (timeout="50000")
[09:07:33.933]      // while-condition  =>  TRUE
[09:07:33.934]      // while "1"  (timeout="50000")
[09:07:33.934]      // while-condition  =>  TRUE
[09:07:33.934]      // while "1"  (timeout="50000")
[09:07:33.934]      // while-condition  =>  TRUE
[09:07:33.934]      // while "1"  (timeout="50000")
[09:07:33.935]      // while-condition  =>  TRUE
[09:07:33.935]      // while "1"  (timeout="50000")
[09:07:33.935]      // while-condition  =>  TRUE
[09:07:33.935]      // while "1"  (timeout="50000")
[09:07:33.936]      // while-condition  =>  TRUE
[09:07:33.936]      // while "1"  (timeout="50000")
[09:07:33.936]      // while-condition  =>  TRUE
[09:07:33.936]      // while "1"  (timeout="50000")
[09:07:33.936]      // while-condition  =>  TRUE
[09:07:33.937]      // while "1"  (timeout="50000")
[09:07:33.937]      // while-condition  =>  TRUE
[09:07:33.937]      // while "1"  (timeout="50000")
[09:07:33.937]      // while-condition  =>  TRUE
[09:07:33.938]      // while "1"  (timeout="50000")
[09:07:33.938]      // while-condition  =>  TRUE
[09:07:33.938]      // while "1"  (timeout="50000")
[09:07:33.938]      // while-condition  =>  TRUE
[09:07:33.939]      // while "1"  (timeout="50000")
[09:07:33.939]      // while-condition  =>  TRUE
[09:07:33.939]      // while "1"  (timeout="50000")
[09:07:33.939]      // while-condition  =>  TRUE
[09:07:33.939]      // while "1"  (timeout="50000")
[09:07:33.940]      // while-condition  =>  TRUE
[09:07:33.940]      // while "1"  (timeout="50000")
[09:07:33.940]      // while-condition  =>  TRUE
[09:07:33.940]      // while "1"  (timeout="50000")
[09:07:33.941]      // while-condition  =>  TRUE
[09:07:33.941]      // while "1"  (timeout="50000")
[09:07:33.941]      // while-condition  =>  TRUE
[09:07:33.941]      // while "1"  (timeout="50000")
[09:07:33.941]      // while-condition  =>  TRUE
[09:07:33.942]      // while "1"  (timeout="50000")
[09:07:33.942]      // while-condition  =>  TRUE
[09:07:33.942]      // while "1"  (timeout="50000")
[09:07:33.942]      // while-condition  =>  TRUE
[09:07:33.943]      // while "1"  (timeout="50000")
[09:07:33.943]      // while-condition  =>  TRUE
[09:07:33.943]      // while "1"  (timeout="50000")
[09:07:33.943]      // while-condition  =>  TRUE
[09:07:33.944]      // while "1"  (timeout="50000")
[09:07:33.944]      // while-condition  =>  TRUE
[09:07:33.944]      // while "1"  (timeout="50000")
[09:07:33.944]      // while-condition  =>  TRUE
[09:07:33.944]      // while "1"  (timeout="50000")
[09:07:33.945]      // while-condition  =>  TRUE
[09:07:33.945]      // while "1"  (timeout="50000")
[09:07:33.945]      // while-condition  =>  TRUE
[09:07:33.945]      // while "1"  (timeout="50000")
[09:07:33.946]      // while-condition  =>  TRUE
[09:07:33.946]      // while "1"  (timeout="50000")
[09:07:33.946]      // while-condition  =>  TRUE
[09:07:33.946]      // while "1"  (timeout="50000")
[09:07:33.946]      // while-condition  =>  TRUE
[09:07:33.947]      // while "1"  (timeout="50000")
[09:07:33.947]      // while-condition  =>  TRUE
[09:07:33.947]      // while "1"  (timeout="50000")
[09:07:33.947]      // while-condition  =>  TRUE
[09:07:33.948]      // while "1"  (timeout="50000")
[09:07:33.948]      // while-condition  =>  TRUE
[09:07:33.948]      // while "1"  (timeout="50000")
[09:07:33.948]      // while-condition  =>  TRUE
[09:07:33.949]      // while "1"  (timeout="50000")
[09:07:33.949]      // while-condition  =>  TRUE
[09:07:33.949]      // while "1"  (timeout="50000")
[09:07:33.949]      // while-condition  =>  TRUE
[09:07:33.949]      // while "1"  (timeout="50000")
[09:07:33.950]      // while-condition  =>  TRUE
[09:07:33.950]      // while "1"  (timeout="50000")
[09:07:33.950]      // while-condition  =>  TRUE
[09:07:33.950]      // while "1"  (timeout="50000")
[09:07:33.951]      // while-condition  =>  TRUE
[09:07:33.951]      // while "1"  (timeout="50000")
[09:07:33.951]      // while-condition  =>  TRUE
[09:07:33.951]      // while "1"  (timeout="50000")
[09:07:33.952]      // while-condition  =>  TRUE
[09:07:33.952]      // while "1"  (timeout="50000")
[09:07:33.952]      // while-condition  =>  TRUE
[09:07:33.953]      // while "1"  (timeout="50000")
[09:07:33.953]      // while-condition  =>  TRUE
[09:07:33.953]      // while "1"  (timeout="50000")
[09:07:33.954]      // while-condition  =>  TRUE
[09:07:33.954]      // while "1"  (timeout="50000")
[09:07:33.954]      // while-condition  =>  TRUE
[09:07:33.954]      // while "1"  (timeout="50000")
[09:07:33.955]      // while-condition  =>  TRUE
[09:07:33.955]      // while "1"  (timeout="50000")
[09:07:33.955]      // while-condition  =>  TRUE
[09:07:33.956]      // while "1"  (timeout="50000")
[09:07:33.956]      // while-condition  =>  TRUE
[09:07:33.956]      // while "1"  (timeout="50000")
[09:07:33.956]      // while-condition  =>  TRUE
[09:07:33.956]      // while "1"  (timeout="50000")
[09:07:33.957]      // while-condition  =>  TRUE
[09:07:33.957]      // while "1"  (timeout="50000")
[09:07:33.957]      // while-condition  =>  TRUE
[09:07:33.957]      // while "1"  (timeout="50000")
[09:07:33.958]      // while-condition  =>  TRUE
[09:07:33.958]      // while "1"  (timeout="50000")
[09:07:33.958]      // while  =>  TIMEOUT
[09:07:33.959]      // end while "1"
[09:07:33.959]    </control>
[09:07:33.959]    <block atomic="false" info="">
[09:07:33.959]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:07:33.961]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:07:33.961]    </block>
[09:07:33.962]    <control if="" while="1" timeout="10000" info="">
[09:07:33.962]      // while "1"  (timeout="10000")
[09:07:33.962]      // while-condition  =>  TRUE
[09:07:33.962]      // while "1"  (timeout="10000")
[09:07:33.963]      // while-condition  =>  TRUE
[09:07:33.963]      // while "1"  (timeout="10000")
[09:07:33.963]      // while-condition  =>  TRUE
[09:07:33.963]      // while "1"  (timeout="10000")
[09:07:33.963]      // while-condition  =>  TRUE
[09:07:33.964]      // while "1"  (timeout="10000")
[09:07:33.964]      // while-condition  =>  TRUE
[09:07:33.964]      // while "1"  (timeout="10000")
[09:07:33.964]      // while-condition  =>  TRUE
[09:07:33.965]      // while "1"  (timeout="10000")
[09:07:33.965]      // while-condition  =>  TRUE
[09:07:33.965]      // while "1"  (timeout="10000")
[09:07:33.965]      // while-condition  =>  TRUE
[09:07:33.966]      // while "1"  (timeout="10000")
[09:07:33.966]      // while-condition  =>  TRUE
[09:07:33.966]      // while "1"  (timeout="10000")
[09:07:33.966]      // while-condition  =>  TRUE
[09:07:33.967]      // while "1"  (timeout="10000")
[09:07:33.967]      // while-condition  =>  TRUE
[09:07:33.967]      // while "1"  (timeout="10000")
[09:07:33.967]      // while-condition  =>  TRUE
[09:07:33.968]      // while "1"  (timeout="10000")
[09:07:33.968]      // while-condition  =>  TRUE
[09:07:33.968]      // while "1"  (timeout="10000")
[09:07:33.968]      // while-condition  =>  TRUE
[09:07:33.969]      // while "1"  (timeout="10000")
[09:07:33.969]      // while-condition  =>  TRUE
[09:07:33.969]      // while "1"  (timeout="10000")
[09:07:33.969]      // while-condition  =>  TRUE
[09:07:33.969]      // while "1"  (timeout="10000")
[09:07:33.970]      // while-condition  =>  TRUE
[09:07:33.970]      // while "1"  (timeout="10000")
[09:07:33.970]      // while-condition  =>  TRUE
[09:07:33.970]      // while "1"  (timeout="10000")
[09:07:33.970]      // while-condition  =>  TRUE
[09:07:33.971]      // while "1"  (timeout="10000")
[09:07:33.971]      // while-condition  =>  TRUE
[09:07:33.971]      // while "1"  (timeout="10000")
[09:07:33.971]      // while-condition  =>  TRUE
[09:07:33.971]      // while "1"  (timeout="10000")
[09:07:33.972]      // while-condition  =>  TRUE
[09:07:33.972]      // while "1"  (timeout="10000")
[09:07:33.972]      // while-condition  =>  TRUE
[09:07:33.972]      // while "1"  (timeout="10000")
[09:07:33.973]      // while-condition  =>  TRUE
[09:07:33.973]      // while "1"  (timeout="10000")
[09:07:33.973]      // while-condition  =>  TRUE
[09:07:33.973]      // while "1"  (timeout="10000")
[09:07:33.973]      // while-condition  =>  TRUE
[09:07:33.974]      // while "1"  (timeout="10000")
[09:07:33.974]      // while  =>  TIMEOUT
[09:07:33.974]      // end while "1"
[09:07:33.974]    </control>
[09:07:33.974]    <block atomic="true" info="">
[09:07:33.978]  
[09:07:33.978]  ! W001 : No atomic sequence support in debug unit
[09:07:33.978]  
[09:07:33.980]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:07:33.981]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:07:33.982]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:07:33.983]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:07:33.984]    </block>
[09:07:33.984]    <block atomic="false" info="">
[09:07:33.984]      __errorcontrol = 0x00000001;
[09:07:33.985]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:07:33.985]      ReadDP(0x0);
[09:07:33.987]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:07:33.988]      __errorcontrol = 0x00000000;
[09:07:33.988]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:07:33.988]    </block>
[09:07:33.989]  </sequence>
[09:07:33.989]  
[09:07:33.989]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:07:33.989]  
[09:07:33.989]  <debugvars>
[09:07:33.990]    // Pre-defined
[09:07:33.990]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:07:33.990]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:07:33.991]    __dp=0x00000000
[09:07:33.991]    __ap=0x00000000
[09:07:33.991]    __traceout=0x00000000      (Trace Disabled)
[09:07:33.991]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:07:33.992]    __FlashAddr=0x00000000
[09:07:33.992]    __FlashLen=0x00000000
[09:07:33.992]    __FlashArg=0x00000000
[09:07:33.992]    __FlashOp=0x00000000
[09:07:33.993]    __Result=0x00000000
[09:07:33.993]  </debugvars>
[09:07:33.993]  
[09:07:33.993]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:07:33.994]  </sequence>
[09:07:33.994]  
[09:07:33.998]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[09:07:33.998]  
[09:07:33.999]  <debugvars>
[09:07:33.999]    // Pre-defined
[09:07:33.999]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:07:34.000]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:07:34.000]    __dp=0x00000000
[09:07:34.000]    __ap=0x00000000
[09:07:34.001]    __traceout=0x00000000      (Trace Disabled)
[09:07:34.001]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:07:34.001]    __FlashAddr=0x00000000
[09:07:34.002]    __FlashLen=0x00000000
[09:07:34.002]    __FlashArg=0x00000000
[09:07:34.002]    __FlashOp=0x00000000
[09:07:34.003]    __Result=0x00000000
[09:07:34.003]  </debugvars>
[09:07:34.003]  
[09:07:34.004]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:07:34.004]    <block atomic="false" info="">
[09:07:34.004]      __var SW_DP_ABORT  = 0x0;
[09:07:34.004]        // -> [SW_DP_ABORT <= 0x00000000]
[09:07:34.005]      __var DP_CTRL_STAT = 0x4;
[09:07:34.005]        // -> [DP_CTRL_STAT <= 0x00000004]
[09:07:34.005]      __var DP_SELECT    = 0x8;
[09:07:34.006]        // -> [DP_SELECT <= 0x00000008]
[09:07:34.006]      __var powered_down = 0;
[09:07:34.006]        // -> [powered_down <= 0x00000000]
[09:07:34.007]      WriteDP(DP_SELECT, 0x00000000);
[09:07:34.008]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:07:34.009]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:07:34.011]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[09:07:34.012]        // -> [powered_down <= 0x00000001]
[09:07:34.012]    </block>
[09:07:34.013]    <control if="powered_down" while="" timeout="0" info="">
[09:07:34.013]      // if-block "powered_down"
[09:07:34.014]        // =>  TRUE
[09:07:34.014]      <block atomic="false" info="">
[09:07:34.014]        WriteDP(DP_CTRL_STAT, 0x50000000);
[09:07:34.017]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[09:07:34.017]      </block>
[09:07:34.018]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[09:07:34.018]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[09:07:34.020]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:07:34.020]        // while-condition  =>  FALSE
[09:07:34.021]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[09:07:34.021]      </control>
[09:07:34.021]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[09:07:34.022]        // if-block "(__protocol & 0xFFFF) == 1"
[09:07:34.022]          // =>  FALSE
[09:07:34.023]        // skip if-block "(__protocol & 0xFFFF) == 1"
[09:07:34.023]      </control>
[09:07:34.023]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[09:07:34.024]        // if-block "(__protocol & 0xFFFF) == 2"
[09:07:34.024]          // =>  TRUE
[09:07:34.024]        <block atomic="false" info="">
[09:07:34.025]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[09:07:34.027]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[09:07:34.027]          WriteDP(SW_DP_ABORT, 0x0000001E);
[09:07:34.029]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[09:07:34.029]        </block>
[09:07:34.030]        // end if-block "(__protocol & 0xFFFF) == 2"
[09:07:34.030]      </control>
[09:07:34.030]      // end if-block "powered_down"
[09:07:34.031]    </control>
[09:07:34.031]  </sequence>
[09:07:34.031]  
[09:07:34.136]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:07:34.136]  
[09:07:34.137]  <debugvars>
[09:07:34.137]    // Pre-defined
[09:07:34.137]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:07:34.137]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:07:34.138]    __dp=0x00000000
[09:07:34.138]    __ap=0x00000000
[09:07:34.138]    __traceout=0x00000000      (Trace Disabled)
[09:07:34.138]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:07:34.138]    __FlashAddr=0x00000000
[09:07:34.139]    __FlashLen=0x00000000
[09:07:34.139]    __FlashArg=0x00000000
[09:07:34.139]    __FlashOp=0x00000000
[09:07:34.139]    __Result=0x00000000
[09:07:34.140]  </debugvars>
[09:07:34.140]  
[09:07:34.140]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:07:34.140]    <block atomic="true" info="">
[09:07:34.147]  
[09:07:34.147]  ! W001 : No atomic sequence support in debug unit
[09:07:34.147]  
[09:07:34.150]      __var DP_R_IDCODE    = 0x0;
[09:07:34.151]        // -> [DP_R_IDCODE <= 0x00000000]
[09:07:34.151]      __var DP_W_ABORT    = 0x0;
[09:07:34.151]        // -> [DP_W_ABORT <= 0x00000000]
[09:07:34.151]      __var DP_CTRLSTAT = 0x4;
[09:07:34.152]        // -> [DP_CTRLSTAT <= 0x00000004]
[09:07:34.152]      __var DP_W_SELECT    = 0x8;
[09:07:34.152]        // -> [DP_W_SELECT <= 0x00000008]
[09:07:34.152]      __var AP_TAR		= 0x4;
[09:07:34.152]        // -> [AP_TAR <= 0x00000004]
[09:07:34.153]      __var AP_BD0		= 0x0;
[09:07:34.153]        // -> [AP_BD0 <= 0x00000000]
[09:07:34.153]      __var AP_BD1		= 0x4;
[09:07:34.153]        // -> [AP_BD1 <= 0x00000004]
[09:07:34.154]      __var AP_BD2		= 0x8;
[09:07:34.154]        // -> [AP_BD2 <= 0x00000008]
[09:07:34.154]      __var PCWithinFlash = 0;
[09:07:34.154]        // -> [PCWithinFlash <= 0x00000000]
[09:07:34.154]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:07:34.160]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.161]    </block>
[09:07:34.161]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:07:34.161]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:07:34.167]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.168]      // while-condition  =>  FALSE
[09:07:34.168]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:07:34.168]    </control>
[09:07:34.168]    <block atomic="true" info="">
[09:07:34.174]  
[09:07:34.174]  ! W001 : No atomic sequence support in debug unit
[09:07:34.174]  
[09:07:34.184]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:07:34.186]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:07:34.190]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:07:34.191]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.192]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:07:34.195]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:07:34.196]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:07:34.200]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.201]    </block>
[09:07:34.201]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:07:34.202]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.204]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.205]      // while-condition  =>  TRUE
[09:07:34.205]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.207]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.208]      // while-condition  =>  TRUE
[09:07:34.208]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.210]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.211]      // while-condition  =>  TRUE
[09:07:34.211]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.213]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.214]      // while-condition  =>  TRUE
[09:07:34.215]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.218]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.219]      // while-condition  =>  TRUE
[09:07:34.219]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.221]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.222]      // while-condition  =>  TRUE
[09:07:34.222]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.224]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.225]      // while-condition  =>  TRUE
[09:07:34.225]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.227]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.228]      // while-condition  =>  TRUE
[09:07:34.228]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.231]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.231]      // while-condition  =>  TRUE
[09:07:34.231]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.233]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.234]      // while-condition  =>  TRUE
[09:07:34.234]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.236]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.237]      // while-condition  =>  TRUE
[09:07:34.237]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.239]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.240]      // while-condition  =>  TRUE
[09:07:34.240]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.242]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.243]      // while-condition  =>  TRUE
[09:07:34.243]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.246]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.246]      // while-condition  =>  TRUE
[09:07:34.246]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.248]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.249]      // while-condition  =>  TRUE
[09:07:34.249]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.251]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.252]      // while-condition  =>  TRUE
[09:07:34.252]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.255]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.255]      // while-condition  =>  TRUE
[09:07:34.255]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.258]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.258]      // while-condition  =>  TRUE
[09:07:34.258]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.261]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.261]      // while-condition  =>  TRUE
[09:07:34.261]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.264]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.264]      // while-condition  =>  TRUE
[09:07:34.264]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.267]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.267]      // while-condition  =>  TRUE
[09:07:34.267]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.270]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.270]      // while-condition  =>  TRUE
[09:07:34.270]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.273]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.273]      // while-condition  =>  TRUE
[09:07:34.273]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.276]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.276]      // while-condition  =>  TRUE
[09:07:34.276]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.279]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.279]      // while-condition  =>  TRUE
[09:07:34.280]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.282]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.282]      // while-condition  =>  TRUE
[09:07:34.282]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.285]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.285]      // while-condition  =>  TRUE
[09:07:34.285]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.288]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.288]      // while-condition  =>  TRUE
[09:07:34.288]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.291]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.291]      // while-condition  =>  TRUE
[09:07:34.291]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.294]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.294]      // while-condition  =>  TRUE
[09:07:34.294]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.297]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.297]      // while-condition  =>  TRUE
[09:07:34.297]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.300]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.300]      // while-condition  =>  TRUE
[09:07:34.300]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.303]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.303]      // while-condition  =>  TRUE
[09:07:34.303]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.303]      // while  =>  TIMEOUT
[09:07:34.304]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:07:34.304]    </control>
[09:07:34.304]    <block atomic="false" info="">
[09:07:34.304]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:07:34.307]        // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.307]        // -> [PCWithinFlash <= 0x00000000]
[09:07:34.307]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:07:34.310]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:07:34.310]    </block>
[09:07:34.310]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:07:34.311]      // if-block "PCWithinFlash == 0"
[09:07:34.311]        // =>  TRUE
[09:07:34.311]      // end if-block "PCWithinFlash == 0"
[09:07:34.311]    </control>
[09:07:34.312]  </sequence>
[09:07:34.312]  
[09:07:34.359]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[09:07:34.359]  
[09:07:34.360]  <debugvars>
[09:07:34.360]    // Pre-defined
[09:07:34.360]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:07:34.360]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:07:34.361]    __dp=0x00000000
[09:07:34.361]    __ap=0x00000000
[09:07:34.361]    __traceout=0x00000000      (Trace Disabled)
[09:07:34.361]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:07:34.362]    __FlashAddr=0x00000000
[09:07:34.362]    __FlashLen=0x00000000
[09:07:34.362]    __FlashArg=0x00000000
[09:07:34.362]    __FlashOp=0x00000000
[09:07:34.363]    __Result=0x00000000
[09:07:34.363]  </debugvars>
[09:07:34.363]  
[09:07:34.363]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[09:07:34.364]    <block atomic="false" info="">
[09:07:34.364]    </block>
[09:07:34.364]  </sequence>
[09:07:34.364]  
[09:07:34.367]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[09:07:34.367]  
[09:07:34.367]  <debugvars>
[09:07:34.367]    // Pre-defined
[09:07:34.368]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:07:34.368]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:07:34.368]    __dp=0x00000000
[09:07:34.368]    __ap=0x00000000
[09:07:34.369]    __traceout=0x00000000      (Trace Disabled)
[09:07:34.369]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:07:34.369]    __FlashAddr=0x00000000
[09:07:34.369]    __FlashLen=0x00000000
[09:07:34.370]    __FlashArg=0x00000000
[09:07:34.370]    __FlashOp=0x00000000
[09:07:34.370]    __Result=0x00000000
[09:07:34.370]  </debugvars>
[09:07:34.370]  
[09:07:34.371]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:07:34.371]    <block atomic="false" info="">
[09:07:34.371]      __var nReset      = 0x80;
[09:07:34.371]        // -> [nReset <= 0x00000080]
[09:07:34.372]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:07:34.374]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:07:34.374]    </block>
[09:07:34.374]    <control if="" while="1" timeout="50000" info="">
[09:07:34.375]      // while "1"  (timeout="50000")
[09:07:34.375]      // while-condition  =>  TRUE
[09:07:34.375]      // while "1"  (timeout="50000")
[09:07:34.375]      // while-condition  =>  TRUE
[09:07:34.376]      // while "1"  (timeout="50000")
[09:07:34.376]      // while-condition  =>  TRUE
[09:07:34.376]      // while "1"  (timeout="50000")
[09:07:34.376]      // while-condition  =>  TRUE
[09:07:34.376]      // while "1"  (timeout="50000")
[09:07:34.377]      // while-condition  =>  TRUE
[09:07:34.377]      // while "1"  (timeout="50000")
[09:07:34.377]      // while-condition  =>  TRUE
[09:07:34.377]      // while "1"  (timeout="50000")
[09:07:34.378]      // while-condition  =>  TRUE
[09:07:34.378]      // while "1"  (timeout="50000")
[09:07:34.378]      // while-condition  =>  TRUE
[09:07:34.379]      // while "1"  (timeout="50000")
[09:07:34.379]      // while-condition  =>  TRUE
[09:07:34.379]      // while "1"  (timeout="50000")
[09:07:34.379]      // while-condition  =>  TRUE
[09:07:34.379]      // while "1"  (timeout="50000")
[09:07:34.380]      // while-condition  =>  TRUE
[09:07:34.380]      // while "1"  (timeout="50000")
[09:07:34.380]      // while-condition  =>  TRUE
[09:07:34.380]      // while "1"  (timeout="50000")
[09:07:34.381]      // while-condition  =>  TRUE
[09:07:34.381]      // while "1"  (timeout="50000")
[09:07:34.381]      // while-condition  =>  TRUE
[09:07:34.381]      // while "1"  (timeout="50000")
[09:07:34.382]      // while-condition  =>  TRUE
[09:07:34.382]      // while "1"  (timeout="50000")
[09:07:34.382]      // while-condition  =>  TRUE
[09:07:34.382]      // while "1"  (timeout="50000")
[09:07:34.382]      // while-condition  =>  TRUE
[09:07:34.383]      // while "1"  (timeout="50000")
[09:07:34.383]      // while-condition  =>  TRUE
[09:07:34.383]      // while "1"  (timeout="50000")
[09:07:34.383]      // while-condition  =>  TRUE
[09:07:34.384]      // while "1"  (timeout="50000")
[09:07:34.384]      // while-condition  =>  TRUE
[09:07:34.384]      // while "1"  (timeout="50000")
[09:07:34.384]      // while-condition  =>  TRUE
[09:07:34.385]      // while "1"  (timeout="50000")
[09:07:34.385]      // while-condition  =>  TRUE
[09:07:34.385]      // while "1"  (timeout="50000")
[09:07:34.385]      // while-condition  =>  TRUE
[09:07:34.386]      // while "1"  (timeout="50000")
[09:07:34.386]      // while-condition  =>  TRUE
[09:07:34.386]      // while "1"  (timeout="50000")
[09:07:34.386]      // while-condition  =>  TRUE
[09:07:34.386]      // while "1"  (timeout="50000")
[09:07:34.387]      // while-condition  =>  TRUE
[09:07:34.387]      // while "1"  (timeout="50000")
[09:07:34.387]      // while-condition  =>  TRUE
[09:07:34.387]      // while "1"  (timeout="50000")
[09:07:34.388]      // while-condition  =>  TRUE
[09:07:34.388]      // while "1"  (timeout="50000")
[09:07:34.388]      // while-condition  =>  TRUE
[09:07:34.388]      // while "1"  (timeout="50000")
[09:07:34.389]      // while-condition  =>  TRUE
[09:07:34.389]      // while "1"  (timeout="50000")
[09:07:34.389]      // while-condition  =>  TRUE
[09:07:34.389]      // while "1"  (timeout="50000")
[09:07:34.389]      // while-condition  =>  TRUE
[09:07:34.390]      // while "1"  (timeout="50000")
[09:07:34.390]      // while-condition  =>  TRUE
[09:07:34.390]      // while "1"  (timeout="50000")
[09:07:34.390]      // while-condition  =>  TRUE
[09:07:34.391]      // while "1"  (timeout="50000")
[09:07:34.391]      // while-condition  =>  TRUE
[09:07:34.391]      // while "1"  (timeout="50000")
[09:07:34.391]      // while-condition  =>  TRUE
[09:07:34.392]      // while "1"  (timeout="50000")
[09:07:34.392]      // while-condition  =>  TRUE
[09:07:34.392]      // while "1"  (timeout="50000")
[09:07:34.392]      // while-condition  =>  TRUE
[09:07:34.393]      // while "1"  (timeout="50000")
[09:07:34.393]      // while-condition  =>  TRUE
[09:07:34.393]      // while "1"  (timeout="50000")
[09:07:34.393]      // while-condition  =>  TRUE
[09:07:34.394]      // while "1"  (timeout="50000")
[09:07:34.394]      // while-condition  =>  TRUE
[09:07:34.394]      // while "1"  (timeout="50000")
[09:07:34.394]      // while-condition  =>  TRUE
[09:07:34.394]      // while "1"  (timeout="50000")
[09:07:34.395]      // while-condition  =>  TRUE
[09:07:34.395]      // while "1"  (timeout="50000")
[09:07:34.395]      // while-condition  =>  TRUE
[09:07:34.395]      // while "1"  (timeout="50000")
[09:07:34.396]      // while-condition  =>  TRUE
[09:07:34.396]      // while "1"  (timeout="50000")
[09:07:34.396]      // while-condition  =>  TRUE
[09:07:34.396]      // while "1"  (timeout="50000")
[09:07:34.397]      // while-condition  =>  TRUE
[09:07:34.397]      // while "1"  (timeout="50000")
[09:07:34.397]      // while-condition  =>  TRUE
[09:07:34.397]      // while "1"  (timeout="50000")
[09:07:34.398]      // while-condition  =>  TRUE
[09:07:34.398]      // while "1"  (timeout="50000")
[09:07:34.398]      // while-condition  =>  TRUE
[09:07:34.398]      // while "1"  (timeout="50000")
[09:07:34.398]      // while-condition  =>  TRUE
[09:07:34.399]      // while "1"  (timeout="50000")
[09:07:34.399]      // while-condition  =>  TRUE
[09:07:34.399]      // while "1"  (timeout="50000")
[09:07:34.399]      // while-condition  =>  TRUE
[09:07:34.400]      // while "1"  (timeout="50000")
[09:07:34.400]      // while-condition  =>  TRUE
[09:07:34.400]      // while "1"  (timeout="50000")
[09:07:34.400]      // while-condition  =>  TRUE
[09:07:34.400]      // while "1"  (timeout="50000")
[09:07:34.401]      // while-condition  =>  TRUE
[09:07:34.401]      // while "1"  (timeout="50000")
[09:07:34.401]      // while-condition  =>  TRUE
[09:07:34.401]      // while "1"  (timeout="50000")
[09:07:34.402]      // while-condition  =>  TRUE
[09:07:34.402]      // while "1"  (timeout="50000")
[09:07:34.402]      // while-condition  =>  TRUE
[09:07:34.402]      // while "1"  (timeout="50000")
[09:07:34.403]      // while-condition  =>  TRUE
[09:07:34.403]      // while "1"  (timeout="50000")
[09:07:34.403]      // while-condition  =>  TRUE
[09:07:34.404]      // while "1"  (timeout="50000")
[09:07:34.404]      // while-condition  =>  TRUE
[09:07:34.404]      // while "1"  (timeout="50000")
[09:07:34.404]      // while-condition  =>  TRUE
[09:07:34.404]      // while "1"  (timeout="50000")
[09:07:34.405]      // while-condition  =>  TRUE
[09:07:34.405]      // while "1"  (timeout="50000")
[09:07:34.405]      // while-condition  =>  TRUE
[09:07:34.405]      // while "1"  (timeout="50000")
[09:07:34.405]      // while-condition  =>  TRUE
[09:07:34.405]      // while "1"  (timeout="50000")
[09:07:34.405]      // while-condition  =>  TRUE
[09:07:34.405]      // while "1"  (timeout="50000")
[09:07:34.405]      // while-condition  =>  TRUE
[09:07:34.407]      // while "1"  (timeout="50000")
[09:07:34.407]      // while-condition  =>  TRUE
[09:07:34.407]      // while "1"  (timeout="50000")
[09:07:34.407]      // while-condition  =>  TRUE
[09:07:34.407]      // while "1"  (timeout="50000")
[09:07:34.407]      // while-condition  =>  TRUE
[09:07:34.407]      // while "1"  (timeout="50000")
[09:07:34.407]      // while-condition  =>  TRUE
[09:07:34.409]      // while "1"  (timeout="50000")
[09:07:34.409]      // while-condition  =>  TRUE
[09:07:34.409]      // while "1"  (timeout="50000")
[09:07:34.409]      // while-condition  =>  TRUE
[09:07:34.409]      // while "1"  (timeout="50000")
[09:07:34.409]      // while-condition  =>  TRUE
[09:07:34.409]      // while "1"  (timeout="50000")
[09:07:34.409]      // while-condition  =>  TRUE
[09:07:34.409]      // while "1"  (timeout="50000")
[09:07:34.410]      // while-condition  =>  TRUE
[09:07:34.410]      // while "1"  (timeout="50000")
[09:07:34.410]      // while-condition  =>  TRUE
[09:07:34.410]      // while "1"  (timeout="50000")
[09:07:34.411]      // while-condition  =>  TRUE
[09:07:34.411]      // while "1"  (timeout="50000")
[09:07:34.411]      // while-condition  =>  TRUE
[09:07:34.411]      // while "1"  (timeout="50000")
[09:07:34.412]      // while-condition  =>  TRUE
[09:07:34.412]      // while "1"  (timeout="50000")
[09:07:34.412]      // while-condition  =>  TRUE
[09:07:34.412]      // while "1"  (timeout="50000")
[09:07:34.413]      // while-condition  =>  TRUE
[09:07:34.413]      // while "1"  (timeout="50000")
[09:07:34.413]      // while-condition  =>  TRUE
[09:07:34.413]      // while "1"  (timeout="50000")
[09:07:34.414]      // while-condition  =>  TRUE
[09:07:34.414]      // while "1"  (timeout="50000")
[09:07:34.414]      // while-condition  =>  TRUE
[09:07:34.414]      // while "1"  (timeout="50000")
[09:07:34.414]      // while-condition  =>  TRUE
[09:07:34.415]      // while "1"  (timeout="50000")
[09:07:34.415]      // while-condition  =>  TRUE
[09:07:34.415]      // while "1"  (timeout="50000")
[09:07:34.415]      // while-condition  =>  TRUE
[09:07:34.416]      // while "1"  (timeout="50000")
[09:07:34.416]      // while-condition  =>  TRUE
[09:07:34.416]      // while "1"  (timeout="50000")
[09:07:34.416]      // while-condition  =>  TRUE
[09:07:34.417]      // while "1"  (timeout="50000")
[09:07:34.417]      // while-condition  =>  TRUE
[09:07:34.417]      // while "1"  (timeout="50000")
[09:07:34.417]      // while-condition  =>  TRUE
[09:07:34.418]      // while "1"  (timeout="50000")
[09:07:34.418]      // while-condition  =>  TRUE
[09:07:34.418]      // while "1"  (timeout="50000")
[09:07:34.418]      // while-condition  =>  TRUE
[09:07:34.418]      // while "1"  (timeout="50000")
[09:07:34.419]      // while-condition  =>  TRUE
[09:07:34.419]      // while "1"  (timeout="50000")
[09:07:34.419]      // while-condition  =>  TRUE
[09:07:34.419]      // while "1"  (timeout="50000")
[09:07:34.420]      // while-condition  =>  TRUE
[09:07:34.420]      // while "1"  (timeout="50000")
[09:07:34.420]      // while-condition  =>  TRUE
[09:07:34.420]      // while "1"  (timeout="50000")
[09:07:34.421]      // while-condition  =>  TRUE
[09:07:34.421]      // while "1"  (timeout="50000")
[09:07:34.421]      // while-condition  =>  TRUE
[09:07:34.421]      // while "1"  (timeout="50000")
[09:07:34.421]      // while-condition  =>  TRUE
[09:07:34.422]      // while "1"  (timeout="50000")
[09:07:34.422]      // while-condition  =>  TRUE
[09:07:34.422]      // while "1"  (timeout="50000")
[09:07:34.422]      // while-condition  =>  TRUE
[09:07:34.423]      // while "1"  (timeout="50000")
[09:07:34.423]      // while-condition  =>  TRUE
[09:07:34.423]      // while "1"  (timeout="50000")
[09:07:34.423]      // while-condition  =>  TRUE
[09:07:34.424]      // while "1"  (timeout="50000")
[09:07:34.424]      // while-condition  =>  TRUE
[09:07:34.424]      // while "1"  (timeout="50000")
[09:07:34.424]      // while-condition  =>  TRUE
[09:07:34.425]      // while "1"  (timeout="50000")
[09:07:34.425]      // while-condition  =>  TRUE
[09:07:34.425]      // while "1"  (timeout="50000")
[09:07:34.425]      // while-condition  =>  TRUE
[09:07:34.425]      // while "1"  (timeout="50000")
[09:07:34.426]      // while-condition  =>  TRUE
[09:07:34.426]      // while "1"  (timeout="50000")
[09:07:34.426]      // while  =>  TIMEOUT
[09:07:34.426]      // end while "1"
[09:07:34.427]    </control>
[09:07:34.428]    <block atomic="false" info="">
[09:07:34.428]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:07:34.430]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:07:34.430]    </block>
[09:07:34.431]    <control if="" while="1" timeout="10000" info="">
[09:07:34.431]      // while "1"  (timeout="10000")
[09:07:34.431]      // while-condition  =>  TRUE
[09:07:34.431]      // while "1"  (timeout="10000")
[09:07:34.431]      // while-condition  =>  TRUE
[09:07:34.432]      // while "1"  (timeout="10000")
[09:07:34.432]      // while-condition  =>  TRUE
[09:07:34.432]      // while "1"  (timeout="10000")
[09:07:34.432]      // while-condition  =>  TRUE
[09:07:34.433]      // while "1"  (timeout="10000")
[09:07:34.433]      // while-condition  =>  TRUE
[09:07:34.433]      // while "1"  (timeout="10000")
[09:07:34.433]      // while-condition  =>  TRUE
[09:07:34.434]      // while "1"  (timeout="10000")
[09:07:34.434]      // while-condition  =>  TRUE
[09:07:34.434]      // while "1"  (timeout="10000")
[09:07:34.435]      // while-condition  =>  TRUE
[09:07:34.435]      // while "1"  (timeout="10000")
[09:07:34.435]      // while-condition  =>  TRUE
[09:07:34.436]      // while "1"  (timeout="10000")
[09:07:34.436]      // while-condition  =>  TRUE
[09:07:34.436]      // while "1"  (timeout="10000")
[09:07:34.436]      // while-condition  =>  TRUE
[09:07:34.437]      // while "1"  (timeout="10000")
[09:07:34.437]      // while-condition  =>  TRUE
[09:07:34.437]      // while "1"  (timeout="10000")
[09:07:34.437]      // while-condition  =>  TRUE
[09:07:34.438]      // while "1"  (timeout="10000")
[09:07:34.438]      // while-condition  =>  TRUE
[09:07:34.438]      // while "1"  (timeout="10000")
[09:07:34.438]      // while-condition  =>  TRUE
[09:07:34.439]      // while "1"  (timeout="10000")
[09:07:34.439]      // while-condition  =>  TRUE
[09:07:34.439]      // while "1"  (timeout="10000")
[09:07:34.439]      // while-condition  =>  TRUE
[09:07:34.440]      // while "1"  (timeout="10000")
[09:07:34.440]      // while-condition  =>  TRUE
[09:07:34.440]      // while "1"  (timeout="10000")
[09:07:34.440]      // while-condition  =>  TRUE
[09:07:34.440]      // while "1"  (timeout="10000")
[09:07:34.441]      // while-condition  =>  TRUE
[09:07:34.441]      // while "1"  (timeout="10000")
[09:07:34.441]      // while-condition  =>  TRUE
[09:07:34.441]      // while "1"  (timeout="10000")
[09:07:34.442]      // while-condition  =>  TRUE
[09:07:34.442]      // while "1"  (timeout="10000")
[09:07:34.442]      // while  =>  TIMEOUT
[09:07:34.442]      // end while "1"
[09:07:34.443]    </control>
[09:07:34.443]    <block atomic="true" info="">
[09:07:34.447]  
[09:07:34.447]  ! W001 : No atomic sequence support in debug unit
[09:07:34.447]  
[09:07:34.449]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:07:34.451]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:07:34.451]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:07:34.453]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:07:34.453]    </block>
[09:07:34.454]    <block atomic="false" info="">
[09:07:34.454]      __errorcontrol = 0x00000001;
[09:07:34.454]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:07:34.454]      ReadDP(0x0);
[09:07:34.456]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:07:34.456]      __errorcontrol = 0x00000000;
[09:07:34.457]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:07:34.457]    </block>
[09:07:34.457]  </sequence>
[09:07:34.457]  
[09:07:34.461]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[09:07:34.461]  
[09:07:34.461]  <debugvars>
[09:07:34.462]    // Pre-defined
[09:07:34.462]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:07:34.462]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:07:34.463]    __dp=0x00000000
[09:07:34.463]    __ap=0x00000000
[09:07:34.463]    __traceout=0x00000000      (Trace Disabled)
[09:07:34.463]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:07:34.464]    __FlashAddr=0x00000000
[09:07:34.464]    __FlashLen=0x00000000
[09:07:34.464]    __FlashArg=0x00000000
[09:07:34.464]    __FlashOp=0x00000000
[09:07:34.465]    __Result=0x00000000
[09:07:34.465]  </debugvars>
[09:07:34.465]  
[09:07:34.465]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[09:07:34.466]    <block atomic="false" info="">
[09:07:34.466]    </block>
[09:07:34.466]  </sequence>
[09:07:34.466]  
[09:07:34.692]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[09:07:34.692]  
[09:07:34.693]  <debugvars>
[09:07:34.693]    // Pre-defined
[09:07:34.693]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:07:34.694]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:07:34.694]    __dp=0x00000000
[09:07:34.695]    __ap=0x00000000
[09:07:34.695]    __traceout=0x00000000      (Trace Disabled)
[09:07:34.696]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:07:34.696]    __FlashAddr=0x00000000
[09:07:34.697]    __FlashLen=0x00000000
[09:07:34.697]    __FlashArg=0x00000000
[09:07:34.697]    __FlashOp=0x00000000
[09:07:34.698]    __Result=0x00000000
[09:07:34.698]  </debugvars>
[09:07:34.699]  
[09:07:34.699]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[09:07:34.699]    <block atomic="false" info="">
[09:07:34.700]      Sequence("ResetHardware");
[09:07:34.700]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:07:34.701]          <block atomic="false" info="">
[09:07:34.702]            __var nReset      = 0x80;
[09:07:34.702]              // -> [nReset <= 0x00000080]
[09:07:34.702]            DAP_SWJ_Pins(0x00, nReset, 0);
[09:07:34.705]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:07:34.705]          </block>
[09:07:34.705]          <control if="" while="1" timeout="50000" info="">
[09:07:34.706]            // while "1"  (timeout="50000")
[09:07:34.706]            // while-condition  =>  TRUE
[09:07:34.707]            // while "1"  (timeout="50000")
[09:07:34.707]            // while-condition  =>  TRUE
[09:07:34.707]            // while "1"  (timeout="50000")
[09:07:34.708]            // while-condition  =>  TRUE
[09:07:34.708]            // while "1"  (timeout="50000")
[09:07:34.708]            // while-condition  =>  TRUE
[09:07:34.709]            // while "1"  (timeout="50000")
[09:07:34.709]            // while-condition  =>  TRUE
[09:07:34.709]            // while "1"  (timeout="50000")
[09:07:34.709]            // while-condition  =>  TRUE
[09:07:34.710]            // while "1"  (timeout="50000")
[09:07:34.710]            // while-condition  =>  TRUE
[09:07:34.710]            // while "1"  (timeout="50000")
[09:07:34.711]            // while-condition  =>  TRUE
[09:07:34.711]            // while "1"  (timeout="50000")
[09:07:34.711]            // while-condition  =>  TRUE
[09:07:34.712]            // while "1"  (timeout="50000")
[09:07:34.712]            // while-condition  =>  TRUE
[09:07:34.712]            // while "1"  (timeout="50000")
[09:07:34.712]            // while-condition  =>  TRUE
[09:07:34.713]            // while "1"  (timeout="50000")
[09:07:34.713]            // while-condition  =>  TRUE
[09:07:34.713]            // while "1"  (timeout="50000")
[09:07:34.714]            // while-condition  =>  TRUE
[09:07:34.714]            // while "1"  (timeout="50000")
[09:07:34.714]            // while-condition  =>  TRUE
[09:07:34.714]            // while "1"  (timeout="50000")
[09:07:34.715]            // while-condition  =>  TRUE
[09:07:34.715]            // while "1"  (timeout="50000")
[09:07:34.715]            // while-condition  =>  TRUE
[09:07:34.716]            // while "1"  (timeout="50000")
[09:07:34.716]            // while-condition  =>  TRUE
[09:07:34.716]            // while "1"  (timeout="50000")
[09:07:34.717]            // while-condition  =>  TRUE
[09:07:34.717]            // while "1"  (timeout="50000")
[09:07:34.718]            // while-condition  =>  TRUE
[09:07:34.718]            // while "1"  (timeout="50000")
[09:07:34.718]            // while-condition  =>  TRUE
[09:07:34.719]            // while "1"  (timeout="50000")
[09:07:34.719]            // while-condition  =>  TRUE
[09:07:34.719]            // while "1"  (timeout="50000")
[09:07:34.719]            // while-condition  =>  TRUE
[09:07:34.719]            // while "1"  (timeout="50000")
[09:07:34.720]            // while-condition  =>  TRUE
[09:07:34.720]            // while "1"  (timeout="50000")
[09:07:34.720]            // while-condition  =>  TRUE
[09:07:34.720]            // while "1"  (timeout="50000")
[09:07:34.720]            // while-condition  =>  TRUE
[09:07:34.721]            // while "1"  (timeout="50000")
[09:07:34.721]            // while-condition  =>  TRUE
[09:07:34.721]            // while "1"  (timeout="50000")
[09:07:34.721]            // while-condition  =>  TRUE
[09:07:34.721]            // while "1"  (timeout="50000")
[09:07:34.722]            // while-condition  =>  TRUE
[09:07:34.722]            // while "1"  (timeout="50000")
[09:07:34.722]            // while-condition  =>  TRUE
[09:07:34.722]            // while "1"  (timeout="50000")
[09:07:34.722]            // while-condition  =>  TRUE
[09:07:34.722]            // while "1"  (timeout="50000")
[09:07:34.722]            // while-condition  =>  TRUE
[09:07:34.723]            // while "1"  (timeout="50000")
[09:07:34.723]            // while-condition  =>  TRUE
[09:07:34.724]            // while "1"  (timeout="50000")
[09:07:34.724]            // while-condition  =>  TRUE
[09:07:34.724]            // while "1"  (timeout="50000")
[09:07:34.724]            // while-condition  =>  TRUE
[09:07:34.724]            // while "1"  (timeout="50000")
[09:07:34.724]            // while-condition  =>  TRUE
[09:07:34.725]            // while "1"  (timeout="50000")
[09:07:34.725]            // while-condition  =>  TRUE
[09:07:34.725]            // while "1"  (timeout="50000")
[09:07:34.725]            // while-condition  =>  TRUE
[09:07:34.725]            // while "1"  (timeout="50000")
[09:07:34.725]            // while-condition  =>  TRUE
[09:07:34.725]            // while "1"  (timeout="50000")
[09:07:34.726]            // while-condition  =>  TRUE
[09:07:34.726]            // while "1"  (timeout="50000")
[09:07:34.726]            // while-condition  =>  TRUE
[09:07:34.727]            // while "1"  (timeout="50000")
[09:07:34.727]            // while-condition  =>  TRUE
[09:07:34.727]            // while "1"  (timeout="50000")
[09:07:34.727]            // while-condition  =>  TRUE
[09:07:34.727]            // while "1"  (timeout="50000")
[09:07:34.728]            // while-condition  =>  TRUE
[09:07:34.728]            // while "1"  (timeout="50000")
[09:07:34.728]            // while-condition  =>  TRUE
[09:07:34.728]            // while "1"  (timeout="50000")
[09:07:34.728]            // while-condition  =>  TRUE
[09:07:34.729]            // while "1"  (timeout="50000")
[09:07:34.729]            // while-condition  =>  TRUE
[09:07:34.729]            // while "1"  (timeout="50000")
[09:07:34.729]            // while-condition  =>  TRUE
[09:07:34.729]            // while "1"  (timeout="50000")
[09:07:34.730]            // while-condition  =>  TRUE
[09:07:34.730]            // while "1"  (timeout="50000")
[09:07:34.730]            // while-condition  =>  TRUE
[09:07:34.730]            // while "1"  (timeout="50000")
[09:07:34.730]            // while-condition  =>  TRUE
[09:07:34.730]            // while "1"  (timeout="50000")
[09:07:34.731]            // while-condition  =>  TRUE
[09:07:34.731]            // while "1"  (timeout="50000")
[09:07:34.731]            // while-condition  =>  TRUE
[09:07:34.731]            // while "1"  (timeout="50000")
[09:07:34.731]            // while-condition  =>  TRUE
[09:07:34.731]            // while "1"  (timeout="50000")
[09:07:34.732]            // while-condition  =>  TRUE
[09:07:34.732]            // while "1"  (timeout="50000")
[09:07:34.732]            // while-condition  =>  TRUE
[09:07:34.732]            // while "1"  (timeout="50000")
[09:07:34.733]            // while-condition  =>  TRUE
[09:07:34.733]            // while "1"  (timeout="50000")
[09:07:34.733]            // while-condition  =>  TRUE
[09:07:34.733]            // while "1"  (timeout="50000")
[09:07:34.733]            // while-condition  =>  TRUE
[09:07:34.734]            // while "1"  (timeout="50000")
[09:07:34.734]            // while-condition  =>  TRUE
[09:07:34.734]            // while "1"  (timeout="50000")
[09:07:34.734]            // while-condition  =>  TRUE
[09:07:34.734]            // while "1"  (timeout="50000")
[09:07:34.735]            // while-condition  =>  TRUE
[09:07:34.735]            // while "1"  (timeout="50000")
[09:07:34.735]            // while-condition  =>  TRUE
[09:07:34.735]            // while "1"  (timeout="50000")
[09:07:34.735]            // while-condition  =>  TRUE
[09:07:34.736]            // while "1"  (timeout="50000")
[09:07:34.736]            // while-condition  =>  TRUE
[09:07:34.736]            // while "1"  (timeout="50000")
[09:07:34.736]            // while-condition  =>  TRUE
[09:07:34.736]            // while "1"  (timeout="50000")
[09:07:34.737]            // while-condition  =>  TRUE
[09:07:34.737]            // while "1"  (timeout="50000")
[09:07:34.737]            // while-condition  =>  TRUE
[09:07:34.737]            // while "1"  (timeout="50000")
[09:07:34.737]            // while-condition  =>  TRUE
[09:07:34.737]            // while "1"  (timeout="50000")
[09:07:34.737]            // while-condition  =>  TRUE
[09:07:34.737]            // while "1"  (timeout="50000")
[09:07:34.738]            // while-condition  =>  TRUE
[09:07:34.738]            // while "1"  (timeout="50000")
[09:07:34.738]            // while-condition  =>  TRUE
[09:07:34.738]            // while "1"  (timeout="50000")
[09:07:34.738]            // while-condition  =>  TRUE
[09:07:34.739]            // while "1"  (timeout="50000")
[09:07:34.739]            // while-condition  =>  TRUE
[09:07:34.739]            // while "1"  (timeout="50000")
[09:07:34.739]            // while-condition  =>  TRUE
[09:07:34.739]            // while "1"  (timeout="50000")
[09:07:34.739]            // while-condition  =>  TRUE
[09:07:34.740]            // while "1"  (timeout="50000")
[09:07:34.740]            // while-condition  =>  TRUE
[09:07:34.740]            // while "1"  (timeout="50000")
[09:07:34.740]            // while-condition  =>  TRUE
[09:07:34.740]            // while "1"  (timeout="50000")
[09:07:34.741]            // while-condition  =>  TRUE
[09:07:34.741]            // while "1"  (timeout="50000")
[09:07:34.741]            // while-condition  =>  TRUE
[09:07:34.741]            // while "1"  (timeout="50000")
[09:07:34.741]            // while-condition  =>  TRUE
[09:07:34.742]            // while "1"  (timeout="50000")
[09:07:34.742]            // while-condition  =>  TRUE
[09:07:34.743]            // while "1"  (timeout="50000")
[09:07:34.743]            // while-condition  =>  TRUE
[09:07:34.743]            // while "1"  (timeout="50000")
[09:07:34.743]            // while-condition  =>  TRUE
[09:07:34.743]            // while "1"  (timeout="50000")
[09:07:34.744]            // while-condition  =>  TRUE
[09:07:34.744]            // while "1"  (timeout="50000")
[09:07:34.744]            // while-condition  =>  TRUE
[09:07:34.744]            // while "1"  (timeout="50000")
[09:07:34.744]            // while-condition  =>  TRUE
[09:07:34.745]            // while "1"  (timeout="50000")
[09:07:34.745]            // while-condition  =>  TRUE
[09:07:34.745]            // while "1"  (timeout="50000")
[09:07:34.745]            // while-condition  =>  TRUE
[09:07:34.745]            // while "1"  (timeout="50000")
[09:07:34.746]            // while-condition  =>  TRUE
[09:07:34.746]            // while "1"  (timeout="50000")
[09:07:34.746]            // while-condition  =>  TRUE
[09:07:34.746]            // while "1"  (timeout="50000")
[09:07:34.746]            // while-condition  =>  TRUE
[09:07:34.746]            // while "1"  (timeout="50000")
[09:07:34.747]            // while-condition  =>  TRUE
[09:07:34.747]            // while "1"  (timeout="50000")
[09:07:34.747]            // while-condition  =>  TRUE
[09:07:34.747]            // while "1"  (timeout="50000")
[09:07:34.747]            // while-condition  =>  TRUE
[09:07:34.748]            // while "1"  (timeout="50000")
[09:07:34.748]            // while-condition  =>  TRUE
[09:07:34.748]            // while "1"  (timeout="50000")
[09:07:34.748]            // while-condition  =>  TRUE
[09:07:34.748]            // while "1"  (timeout="50000")
[09:07:34.749]            // while-condition  =>  TRUE
[09:07:34.749]            // while "1"  (timeout="50000")
[09:07:34.749]            // while-condition  =>  TRUE
[09:07:34.749]            // while "1"  (timeout="50000")
[09:07:34.749]            // while-condition  =>  TRUE
[09:07:34.750]            // while "1"  (timeout="50000")
[09:07:34.750]            // while-condition  =>  TRUE
[09:07:34.750]            // while "1"  (timeout="50000")
[09:07:34.750]            // while-condition  =>  TRUE
[09:07:34.750]            // while "1"  (timeout="50000")
[09:07:34.750]            // while-condition  =>  TRUE
[09:07:34.750]            // while "1"  (timeout="50000")
[09:07:34.751]            // while-condition  =>  TRUE
[09:07:34.751]            // while "1"  (timeout="50000")
[09:07:34.751]            // while-condition  =>  TRUE
[09:07:34.751]            // while "1"  (timeout="50000")
[09:07:34.751]            // while-condition  =>  TRUE
[09:07:34.752]            // while "1"  (timeout="50000")
[09:07:34.752]            // while-condition  =>  TRUE
[09:07:34.752]            // while "1"  (timeout="50000")
[09:07:34.752]            // while-condition  =>  TRUE
[09:07:34.752]            // while "1"  (timeout="50000")
[09:07:34.753]            // while-condition  =>  TRUE
[09:07:34.753]            // while "1"  (timeout="50000")
[09:07:34.753]            // while-condition  =>  TRUE
[09:07:34.753]            // while "1"  (timeout="50000")
[09:07:34.753]            // while-condition  =>  TRUE
[09:07:34.753]            // while "1"  (timeout="50000")
[09:07:34.754]            // while-condition  =>  TRUE
[09:07:34.754]            // while "1"  (timeout="50000")
[09:07:34.754]            // while-condition  =>  TRUE
[09:07:34.754]            // while "1"  (timeout="50000")
[09:07:34.754]            // while-condition  =>  TRUE
[09:07:34.754]            // while "1"  (timeout="50000")
[09:07:34.755]            // while-condition  =>  TRUE
[09:07:34.756]            // while "1"  (timeout="50000")
[09:07:34.756]            // while  =>  TIMEOUT
[09:07:34.756]            // end while "1"
[09:07:34.756]          </control>
[09:07:34.756]          <block atomic="false" info="">
[09:07:34.757]            DAP_SWJ_Pins(nReset, nReset, 0);
[09:07:34.759]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:07:34.759]          </block>
[09:07:34.759]          <control if="" while="1" timeout="10000" info="">
[09:07:34.760]            // while "1"  (timeout="10000")
[09:07:34.760]            // while-condition  =>  TRUE
[09:07:34.760]            // while "1"  (timeout="10000")
[09:07:34.760]            // while-condition  =>  TRUE
[09:07:34.760]            // while "1"  (timeout="10000")
[09:07:34.760]            // while-condition  =>  TRUE
[09:07:34.761]            // while "1"  (timeout="10000")
[09:07:34.761]            // while-condition  =>  TRUE
[09:07:34.762]            // while "1"  (timeout="10000")
[09:07:34.762]            // while-condition  =>  TRUE
[09:07:34.762]            // while "1"  (timeout="10000")
[09:07:34.762]            // while-condition  =>  TRUE
[09:07:34.763]            // while "1"  (timeout="10000")
[09:07:34.763]            // while-condition  =>  TRUE
[09:07:34.763]            // while "1"  (timeout="10000")
[09:07:34.763]            // while-condition  =>  TRUE
[09:07:34.764]            // while "1"  (timeout="10000")
[09:07:34.764]            // while-condition  =>  TRUE
[09:07:34.764]            // while "1"  (timeout="10000")
[09:07:34.765]            // while-condition  =>  TRUE
[09:07:34.765]            // while "1"  (timeout="10000")
[09:07:34.765]            // while-condition  =>  TRUE
[09:07:34.765]            // while "1"  (timeout="10000")
[09:07:34.766]            // while-condition  =>  TRUE
[09:07:34.766]            // while "1"  (timeout="10000")
[09:07:34.766]            // while-condition  =>  TRUE
[09:07:34.767]            // while "1"  (timeout="10000")
[09:07:34.767]            // while-condition  =>  TRUE
[09:07:34.767]            // while "1"  (timeout="10000")
[09:07:34.767]            // while-condition  =>  TRUE
[09:07:34.767]            // while "1"  (timeout="10000")
[09:07:34.767]            // while-condition  =>  TRUE
[09:07:34.767]            // while "1"  (timeout="10000")
[09:07:34.768]            // while-condition  =>  TRUE
[09:07:34.768]            // while "1"  (timeout="10000")
[09:07:34.768]            // while-condition  =>  TRUE
[09:07:34.768]            // while "1"  (timeout="10000")
[09:07:34.768]            // while-condition  =>  TRUE
[09:07:34.769]            // while "1"  (timeout="10000")
[09:07:34.769]            // while-condition  =>  TRUE
[09:07:34.769]            // while "1"  (timeout="10000")
[09:07:34.769]            // while-condition  =>  TRUE
[09:07:34.769]            // while "1"  (timeout="10000")
[09:07:34.769]            // while-condition  =>  TRUE
[09:07:34.769]            // while "1"  (timeout="10000")
[09:07:34.769]            // while-condition  =>  TRUE
[09:07:34.770]            // while "1"  (timeout="10000")
[09:07:34.770]            // while  =>  TIMEOUT
[09:07:34.770]            // end while "1"
[09:07:34.770]          </control>
[09:07:34.770]          <block atomic="true" info="">
[09:07:34.773]  
[09:07:34.773]  ! W001 : No atomic sequence support in debug unit
[09:07:34.773]  
[09:07:34.776]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:07:34.778]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:07:34.778]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:07:34.780]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:07:34.780]          </block>
[09:07:34.780]          <block atomic="false" info="">
[09:07:34.780]            __errorcontrol = 0x00000001;
[09:07:34.781]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:07:34.781]            ReadDP(0x0);
[09:07:34.783]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:07:34.783]            __errorcontrol = 0x00000000;
[09:07:34.783]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:07:34.783]          </block>
[09:07:34.784]        </sequence>
[09:07:34.784]      Sequence("DebugPortSetup");
[09:07:34.784]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:07:34.785]        </sequence>
[09:07:34.785]      Sequence("DebugPortStart");
[09:07:34.785]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:07:34.786]          <block atomic="false" info="">
[09:07:34.786]            __var SW_DP_ABORT  = 0x0;
[09:07:34.786]              // -> [SW_DP_ABORT <= 0x00000000]
[09:07:34.787]            __var DP_CTRL_STAT = 0x4;
[09:07:34.787]              // -> [DP_CTRL_STAT <= 0x00000004]
[09:07:34.787]            __var DP_SELECT    = 0x8;
[09:07:34.788]              // -> [DP_SELECT <= 0x00000008]
[09:07:34.788]            __var powered_down = 0;
[09:07:34.789]              // -> [powered_down <= 0x00000000]
[09:07:34.789]            WriteDP(DP_SELECT, 0x00000000);
[09:07:34.792]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:07:34.793]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:07:34.795]              // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:07:34.795]              // -> [powered_down <= 0x00000000]
[09:07:34.796]          </block>
[09:07:34.797]          <control if="powered_down" while="" timeout="0" info="">
[09:07:34.797]            // if-block "powered_down"
[09:07:34.798]              // =>  FALSE
[09:07:34.798]            // skip if-block "powered_down"
[09:07:34.799]          </control>
[09:07:34.799]        </sequence>
[09:07:34.800]      Sequence("DebugCoreStart");
[09:07:34.800]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:07:34.800]          <block atomic="true" info="">
[09:07:34.803]  
[09:07:34.803]  ! W001 : No atomic sequence support in debug unit
[09:07:34.803]  
[09:07:34.805]            __var DP_R_IDCODE    = 0x0;
[09:07:34.805]              // -> [DP_R_IDCODE <= 0x00000000]
[09:07:34.807]            __var DP_W_ABORT    = 0x0;
[09:07:34.807]              // -> [DP_W_ABORT <= 0x00000000]
[09:07:34.808]            __var DP_CTRLSTAT = 0x4;
[09:07:34.808]              // -> [DP_CTRLSTAT <= 0x00000004]
[09:07:34.809]            __var DP_W_SELECT    = 0x8;
[09:07:34.809]              // -> [DP_W_SELECT <= 0x00000008]
[09:07:34.810]            __var AP_TAR		= 0x4;
[09:07:34.810]              // -> [AP_TAR <= 0x00000004]
[09:07:34.810]            __var AP_BD0		= 0x0;
[09:07:34.811]              // -> [AP_BD0 <= 0x00000000]
[09:07:34.811]            __var AP_BD1		= 0x4;
[09:07:34.812]              // -> [AP_BD1 <= 0x00000004]
[09:07:34.813]            __var AP_BD2		= 0x8;
[09:07:34.813]              // -> [AP_BD2 <= 0x00000008]
[09:07:34.814]            __var PCWithinFlash = 0;
[09:07:34.814]              // -> [PCWithinFlash <= 0x00000000]
[09:07:34.814]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:07:34.820]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.824]          </block>
[09:07:34.824]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:07:34.825]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:07:34.831]              // -> [Read32(0xE000EDF0) => 0x00030003]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.831]            // while-condition  =>  FALSE
[09:07:34.832]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:07:34.832]          </control>
[09:07:34.833]          <block atomic="true" info="">
[09:07:34.835]  
[09:07:34.835]  ! W001 : No atomic sequence support in debug unit
[09:07:34.835]  
[09:07:34.837]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:07:34.842]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:07:34.843]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:07:34.845]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.846]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:07:34.848]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:07:34.848]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:07:34.853]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.853]          </block>
[09:07:34.854]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:07:34.855]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.858]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.859]            // while-condition  =>  TRUE
[09:07:34.859]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.862]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.862]            // while-condition  =>  TRUE
[09:07:34.863]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.865]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.866]            // while-condition  =>  TRUE
[09:07:34.866]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.869]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.869]            // while-condition  =>  TRUE
[09:07:34.870]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.872]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.873]            // while-condition  =>  TRUE
[09:07:34.873]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.876]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.876]            // while-condition  =>  TRUE
[09:07:34.877]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.879]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.879]            // while-condition  =>  TRUE
[09:07:34.880]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.882]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.882]            // while-condition  =>  TRUE
[09:07:34.883]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.885]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.885]            // while-condition  =>  TRUE
[09:07:34.885]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.887]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.887]            // while-condition  =>  TRUE
[09:07:34.887]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.890]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.890]            // while-condition  =>  TRUE
[09:07:34.891]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.893]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.894]            // while-condition  =>  TRUE
[09:07:34.894]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.896]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.896]            // while-condition  =>  TRUE
[09:07:34.896]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.898]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.898]            // while-condition  =>  TRUE
[09:07:34.900]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.902]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.903]            // while-condition  =>  TRUE
[09:07:34.903]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.906]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.907]            // while-condition  =>  TRUE
[09:07:34.907]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.910]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.910]            // while-condition  =>  TRUE
[09:07:34.911]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.913]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.914]            // while-condition  =>  TRUE
[09:07:34.914]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.917]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.917]            // while-condition  =>  TRUE
[09:07:34.917]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.919]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.920]            // while-condition  =>  TRUE
[09:07:34.920]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.923]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.923]            // while-condition  =>  TRUE
[09:07:34.924]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.926]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.926]            // while-condition  =>  TRUE
[09:07:34.926]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.929]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.929]            // while-condition  =>  TRUE
[09:07:34.929]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.932]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.932]            // while-condition  =>  TRUE
[09:07:34.933]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.935]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.935]            // while-condition  =>  TRUE
[09:07:34.936]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.938]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.938]            // while-condition  =>  TRUE
[09:07:34.939]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.941]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.941]            // while-condition  =>  TRUE
[09:07:34.942]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.944]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.944]            // while-condition  =>  TRUE
[09:07:34.945]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.947]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.948]            // while-condition  =>  TRUE
[09:07:34.948]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.950]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.950]            // while-condition  =>  TRUE
[09:07:34.951]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.954]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.954]            // while-condition  =>  TRUE
[09:07:34.954]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.957]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.958]            // while-condition  =>  TRUE
[09:07:34.958]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.960]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.960]            // while-condition  =>  TRUE
[09:07:34.961]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:07:34.961]            // while  =>  TIMEOUT
[09:07:34.962]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:07:34.963]          </control>
[09:07:34.963]          <block atomic="false" info="">
[09:07:34.963]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:07:34.966]              // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:07:34.967]              // -> [PCWithinFlash <= 0x00000000]
[09:07:34.967]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:07:34.970]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:07:34.970]          </block>
[09:07:34.971]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:07:34.972]            // if-block "PCWithinFlash == 0"
[09:07:34.972]              // =>  TRUE
[09:07:34.973]            // end if-block "PCWithinFlash == 0"
[09:07:34.973]          </control>
[09:07:34.974]        </sequence>
[09:07:34.974]    </block>
[09:07:34.974]  </sequence>
[09:07:34.975]  
[09:07:46.018]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[09:07:46.018]  
[09:07:46.019]  <debugvars>
[09:07:46.020]    // Pre-defined
[09:07:46.020]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:07:46.021]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:07:46.021]    __dp=0x00000000
[09:07:46.022]    __ap=0x00000000
[09:07:46.022]    __traceout=0x00000000      (Trace Disabled)
[09:07:46.023]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:07:46.023]    __FlashAddr=0x00000000
[09:07:46.024]    __FlashLen=0x00000000
[09:07:46.024]    __FlashArg=0x00000000
[09:07:46.024]    __FlashOp=0x00000000
[09:07:46.025]    __Result=0x00000000
[09:07:46.026]  </debugvars>
[09:07:46.026]  
[09:07:46.026]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[09:07:46.026]    <block atomic="false" info="">
[09:07:46.026]      __var nReset      = 0x80;
[09:07:46.026]        // -> [nReset <= 0x00000080]
[09:07:46.026]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:07:46.028]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:07:46.028]    </block>
[09:07:46.029]    <control if="" while="1" timeout="50000" info="">
[09:07:46.030]      // while "1"  (timeout="50000")
[09:07:46.030]      // while-condition  =>  TRUE
[09:07:46.030]      // while "1"  (timeout="50000")
[09:07:46.030]      // while-condition  =>  TRUE
[09:07:46.031]      // while "1"  (timeout="50000")
[09:07:46.031]      // while-condition  =>  TRUE
[09:07:46.031]      // while "1"  (timeout="50000")
[09:07:46.031]      // while-condition  =>  TRUE
[09:07:46.032]      // while "1"  (timeout="50000")
[09:07:46.032]      // while-condition  =>  TRUE
[09:07:46.032]      // while "1"  (timeout="50000")
[09:07:46.032]      // while-condition  =>  TRUE
[09:07:46.033]      // while "1"  (timeout="50000")
[09:07:46.033]      // while-condition  =>  TRUE
[09:07:46.033]      // while "1"  (timeout="50000")
[09:07:46.033]      // while-condition  =>  TRUE
[09:07:46.034]      // while "1"  (timeout="50000")
[09:07:46.034]      // while-condition  =>  TRUE
[09:07:46.034]      // while "1"  (timeout="50000")
[09:07:46.034]      // while-condition  =>  TRUE
[09:07:46.034]      // while "1"  (timeout="50000")
[09:07:46.034]      // while-condition  =>  TRUE
[09:07:46.035]      // while "1"  (timeout="50000")
[09:07:46.035]      // while-condition  =>  TRUE
[09:07:46.035]      // while "1"  (timeout="50000")
[09:07:46.036]      // while-condition  =>  TRUE
[09:07:46.036]      // while "1"  (timeout="50000")
[09:07:46.036]      // while-condition  =>  TRUE
[09:07:46.036]      // while "1"  (timeout="50000")
[09:07:46.036]      // while-condition  =>  TRUE
[09:07:46.036]      // while "1"  (timeout="50000")
[09:07:46.036]      // while-condition  =>  TRUE
[09:07:46.037]      // while "1"  (timeout="50000")
[09:07:46.037]      // while-condition  =>  TRUE
[09:07:46.037]      // while "1"  (timeout="50000")
[09:07:46.037]      // while-condition  =>  TRUE
[09:07:46.037]      // while "1"  (timeout="50000")
[09:07:46.037]      // while-condition  =>  TRUE
[09:07:46.038]      // while "1"  (timeout="50000")
[09:07:46.038]      // while-condition  =>  TRUE
[09:07:46.038]      // while "1"  (timeout="50000")
[09:07:46.038]      // while-condition  =>  TRUE
[09:07:46.038]      // while "1"  (timeout="50000")
[09:07:46.039]      // while-condition  =>  TRUE
[09:07:46.039]      // while "1"  (timeout="50000")
[09:07:46.039]      // while-condition  =>  TRUE
[09:07:46.040]      // while "1"  (timeout="50000")
[09:07:46.040]      // while-condition  =>  TRUE
[09:07:46.040]      // while "1"  (timeout="50000")
[09:07:46.040]      // while-condition  =>  TRUE
[09:07:46.040]      // while "1"  (timeout="50000")
[09:07:46.041]      // while-condition  =>  TRUE
[09:07:46.041]      // while "1"  (timeout="50000")
[09:07:46.041]      // while-condition  =>  TRUE
[09:07:46.041]      // while "1"  (timeout="50000")
[09:07:46.041]      // while-condition  =>  TRUE
[09:07:46.042]      // while "1"  (timeout="50000")
[09:07:46.042]      // while-condition  =>  TRUE
[09:07:46.042]      // while "1"  (timeout="50000")
[09:07:46.042]      // while-condition  =>  TRUE
[09:07:46.042]      // while "1"  (timeout="50000")
[09:07:46.042]      // while-condition  =>  TRUE
[09:07:46.043]      // while "1"  (timeout="50000")
[09:07:46.043]      // while-condition  =>  TRUE
[09:07:46.043]      // while "1"  (timeout="50000")
[09:07:46.043]      // while-condition  =>  TRUE
[09:07:46.043]      // while "1"  (timeout="50000")
[09:07:46.044]      // while-condition  =>  TRUE
[09:07:46.044]      // while "1"  (timeout="50000")
[09:07:46.044]      // while-condition  =>  TRUE
[09:07:46.044]      // while "1"  (timeout="50000")
[09:07:46.044]      // while-condition  =>  TRUE
[09:07:46.045]      // while "1"  (timeout="50000")
[09:07:46.045]      // while-condition  =>  TRUE
[09:07:46.045]      // while "1"  (timeout="50000")
[09:07:46.045]      // while-condition  =>  TRUE
[09:07:46.045]      // while "1"  (timeout="50000")
[09:07:46.046]      // while-condition  =>  TRUE
[09:07:46.046]      // while "1"  (timeout="50000")
[09:07:46.046]      // while-condition  =>  TRUE
[09:07:46.046]      // while "1"  (timeout="50000")
[09:07:46.046]      // while-condition  =>  TRUE
[09:07:46.046]      // while "1"  (timeout="50000")
[09:07:46.047]      // while-condition  =>  TRUE
[09:07:46.047]      // while "1"  (timeout="50000")
[09:07:46.047]      // while-condition  =>  TRUE
[09:07:46.047]      // while "1"  (timeout="50000")
[09:07:46.047]      // while-condition  =>  TRUE
[09:07:46.048]      // while "1"  (timeout="50000")
[09:07:46.048]      // while-condition  =>  TRUE
[09:07:46.048]      // while "1"  (timeout="50000")
[09:07:46.048]      // while-condition  =>  TRUE
[09:07:46.048]      // while "1"  (timeout="50000")
[09:07:46.048]      // while-condition  =>  TRUE
[09:07:46.048]      // while "1"  (timeout="50000")
[09:07:46.048]      // while-condition  =>  TRUE
[09:07:46.049]      // while "1"  (timeout="50000")
[09:07:46.049]      // while-condition  =>  TRUE
[09:07:46.050]      // while "1"  (timeout="50000")
[09:07:46.050]      // while-condition  =>  TRUE
[09:07:46.050]      // while "1"  (timeout="50000")
[09:07:46.050]      // while-condition  =>  TRUE
[09:07:46.050]      // while "1"  (timeout="50000")
[09:07:46.051]      // while-condition  =>  TRUE
[09:07:46.051]      // while "1"  (timeout="50000")
[09:07:46.051]      // while-condition  =>  TRUE
[09:07:46.051]      // while "1"  (timeout="50000")
[09:07:46.051]      // while-condition  =>  TRUE
[09:07:46.052]      // while "1"  (timeout="50000")
[09:07:46.052]      // while-condition  =>  TRUE
[09:07:46.052]      // while "1"  (timeout="50000")
[09:07:46.052]      // while-condition  =>  TRUE
[09:07:46.052]      // while "1"  (timeout="50000")
[09:07:46.052]      // while-condition  =>  TRUE
[09:07:46.053]      // while "1"  (timeout="50000")
[09:07:46.053]      // while-condition  =>  TRUE
[09:07:46.053]      // while "1"  (timeout="50000")
[09:07:46.053]      // while-condition  =>  TRUE
[09:07:46.053]      // while "1"  (timeout="50000")
[09:07:46.054]      // while-condition  =>  TRUE
[09:07:46.054]      // while "1"  (timeout="50000")
[09:07:46.054]      // while-condition  =>  TRUE
[09:07:46.054]      // while "1"  (timeout="50000")
[09:07:46.054]      // while-condition  =>  TRUE
[09:07:46.054]      // while "1"  (timeout="50000")
[09:07:46.054]      // while-condition  =>  TRUE
[09:07:46.054]      // while "1"  (timeout="50000")
[09:07:46.054]      // while-condition  =>  TRUE
[09:07:46.054]      // while "1"  (timeout="50000")
[09:07:46.055]      // while-condition  =>  TRUE
[09:07:46.055]      // while "1"  (timeout="50000")
[09:07:46.055]      // while-condition  =>  TRUE
[09:07:46.055]      // while "1"  (timeout="50000")
[09:07:46.055]      // while-condition  =>  TRUE
[09:07:46.057]      // while "1"  (timeout="50000")
[09:07:46.057]      // while-condition  =>  TRUE
[09:07:46.057]      // while "1"  (timeout="50000")
[09:07:46.057]      // while-condition  =>  TRUE
[09:07:46.057]      // while "1"  (timeout="50000")
[09:07:46.058]      // while-condition  =>  TRUE
[09:07:46.058]      // while "1"  (timeout="50000")
[09:07:46.058]      // while-condition  =>  TRUE
[09:07:46.058]      // while "1"  (timeout="50000")
[09:07:46.058]      // while-condition  =>  TRUE
[09:07:46.058]      // while "1"  (timeout="50000")
[09:07:46.058]      // while-condition  =>  TRUE
[09:07:46.058]      // while "1"  (timeout="50000")
[09:07:46.059]      // while-condition  =>  TRUE
[09:07:46.059]      // while "1"  (timeout="50000")
[09:07:46.059]      // while-condition  =>  TRUE
[09:07:46.059]      // while "1"  (timeout="50000")
[09:07:46.059]      // while-condition  =>  TRUE
[09:07:46.060]      // while "1"  (timeout="50000")
[09:07:46.060]      // while-condition  =>  TRUE
[09:07:46.061]      // while "1"  (timeout="50000")
[09:07:46.061]      // while-condition  =>  TRUE
[09:07:46.061]      // while "1"  (timeout="50000")
[09:07:46.061]      // while-condition  =>  TRUE
[09:07:46.061]      // while "1"  (timeout="50000")
[09:07:46.062]      // while-condition  =>  TRUE
[09:07:46.062]      // while "1"  (timeout="50000")
[09:07:46.062]      // while-condition  =>  TRUE
[09:07:46.062]      // while "1"  (timeout="50000")
[09:07:46.062]      // while-condition  =>  TRUE
[09:07:46.063]      // while "1"  (timeout="50000")
[09:07:46.063]      // while-condition  =>  TRUE
[09:07:46.063]      // while "1"  (timeout="50000")
[09:07:46.063]      // while-condition  =>  TRUE
[09:07:46.063]      // while "1"  (timeout="50000")
[09:07:46.063]      // while-condition  =>  TRUE
[09:07:46.064]      // while "1"  (timeout="50000")
[09:07:46.064]      // while-condition  =>  TRUE
[09:07:46.064]      // while "1"  (timeout="50000")
[09:07:46.064]      // while-condition  =>  TRUE
[09:07:46.064]      // while "1"  (timeout="50000")
[09:07:46.065]      // while-condition  =>  TRUE
[09:07:46.065]      // while "1"  (timeout="50000")
[09:07:46.065]      // while-condition  =>  TRUE
[09:07:46.065]      // while "1"  (timeout="50000")
[09:07:46.065]      // while-condition  =>  TRUE
[09:07:46.065]      // while "1"  (timeout="50000")
[09:07:46.065]      // while-condition  =>  TRUE
[09:07:46.065]      // while "1"  (timeout="50000")
[09:07:46.065]      // while-condition  =>  TRUE
[09:07:46.066]      // while "1"  (timeout="50000")
[09:07:46.066]      // while-condition  =>  TRUE
[09:07:46.066]      // while "1"  (timeout="50000")
[09:07:46.066]      // while-condition  =>  TRUE
[09:07:46.066]      // while "1"  (timeout="50000")
[09:07:46.067]      // while-condition  =>  TRUE
[09:07:46.068]      // while "1"  (timeout="50000")
[09:07:46.068]      // while-condition  =>  TRUE
[09:07:46.068]      // while "1"  (timeout="50000")
[09:07:46.068]      // while-condition  =>  TRUE
[09:07:46.068]      // while "1"  (timeout="50000")
[09:07:46.068]      // while-condition  =>  TRUE
[09:07:46.068]      // while "1"  (timeout="50000")
[09:07:46.068]      // while-condition  =>  TRUE
[09:07:46.069]      // while "1"  (timeout="50000")
[09:07:46.069]      // while-condition  =>  TRUE
[09:07:46.070]      // while "1"  (timeout="50000")
[09:07:46.070]      // while-condition  =>  TRUE
[09:07:46.070]      // while "1"  (timeout="50000")
[09:07:46.070]      // while-condition  =>  TRUE
[09:07:46.070]      // while "1"  (timeout="50000")
[09:07:46.071]      // while-condition  =>  TRUE
[09:07:46.071]      // while "1"  (timeout="50000")
[09:07:46.071]      // while-condition  =>  TRUE
[09:07:46.071]      // while "1"  (timeout="50000")
[09:07:46.071]      // while-condition  =>  TRUE
[09:07:46.071]      // while "1"  (timeout="50000")
[09:07:46.072]      // while-condition  =>  TRUE
[09:07:46.072]      // while "1"  (timeout="50000")
[09:07:46.072]      // while-condition  =>  TRUE
[09:07:46.072]      // while "1"  (timeout="50000")
[09:07:46.072]      // while-condition  =>  TRUE
[09:07:46.073]      // while "1"  (timeout="50000")
[09:07:46.073]      // while-condition  =>  TRUE
[09:07:46.073]      // while "1"  (timeout="50000")
[09:07:46.073]      // while-condition  =>  TRUE
[09:07:46.073]      // while "1"  (timeout="50000")
[09:07:46.074]      // while-condition  =>  TRUE
[09:07:46.074]      // while "1"  (timeout="50000")
[09:07:46.074]      // while-condition  =>  TRUE
[09:07:46.074]      // while "1"  (timeout="50000")
[09:07:46.074]      // while-condition  =>  TRUE
[09:07:46.074]      // while "1"  (timeout="50000")
[09:07:46.074]      // while-condition  =>  TRUE
[09:07:46.074]      // while "1"  (timeout="50000")
[09:07:46.075]      // while-condition  =>  TRUE
[09:07:46.075]      // while "1"  (timeout="50000")
[09:07:46.076]      // while-condition  =>  TRUE
[09:07:46.076]      // while "1"  (timeout="50000")
[09:07:46.076]      // while-condition  =>  TRUE
[09:07:46.076]      // while "1"  (timeout="50000")
[09:07:46.076]      // while-condition  =>  TRUE
[09:07:46.076]      // while "1"  (timeout="50000")
[09:07:46.076]      // while-condition  =>  TRUE
[09:07:46.076]      // while "1"  (timeout="50000")
[09:07:46.077]      // while-condition  =>  TRUE
[09:07:46.077]      // while "1"  (timeout="50000")
[09:07:46.077]      // while-condition  =>  TRUE
[09:07:46.077]      // while "1"  (timeout="50000")
[09:07:46.077]      // while-condition  =>  TRUE
[09:07:46.077]      // while "1"  (timeout="50000")
[09:07:46.078]      // while-condition  =>  TRUE
[09:07:46.078]      // while "1"  (timeout="50000")
[09:07:46.078]      // while-condition  =>  TRUE
[09:07:46.078]      // while "1"  (timeout="50000")
[09:07:46.078]      // while-condition  =>  TRUE
[09:07:46.079]      // while "1"  (timeout="50000")
[09:07:46.080]      // while-condition  =>  TRUE
[09:07:46.080]      // while "1"  (timeout="50000")
[09:07:46.080]      // while-condition  =>  TRUE
[09:07:46.080]      // while "1"  (timeout="50000")
[09:07:46.080]      // while-condition  =>  TRUE
[09:07:46.081]      // while "1"  (timeout="50000")
[09:07:46.081]      // while-condition  =>  TRUE
[09:07:46.081]      // while "1"  (timeout="50000")
[09:07:46.081]      // while-condition  =>  TRUE
[09:07:46.081]      // while "1"  (timeout="50000")
[09:07:46.082]      // while-condition  =>  TRUE
[09:07:46.082]      // while "1"  (timeout="50000")
[09:07:46.082]      // while-condition  =>  TRUE
[09:07:46.082]      // while "1"  (timeout="50000")
[09:07:46.082]      // while-condition  =>  TRUE
[09:07:46.083]      // while "1"  (timeout="50000")
[09:07:46.083]      // while  =>  TIMEOUT
[09:07:46.083]      // end while "1"
[09:07:46.083]    </control>
[09:07:46.083]    <block atomic="false" info="">
[09:07:46.084]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:07:46.086]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:07:46.087]    </block>
[09:07:46.087]  </sequence>
[09:07:46.087]  
[09:08:19.603]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:08:19.603]  
[09:08:19.604]  <debugvars>
[09:08:19.604]    // Pre-defined
[09:08:19.605]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:08:19.605]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:08:19.605]    __dp=0x00000000
[09:08:19.606]    __ap=0x00000000
[09:08:19.606]    __traceout=0x00000000      (Trace Disabled)
[09:08:19.607]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:08:19.607]    __FlashAddr=0x00000000
[09:08:19.607]    __FlashLen=0x00000000
[09:08:19.608]    __FlashArg=0x00000000
[09:08:19.608]    __FlashOp=0x00000000
[09:08:19.608]    __Result=0x00000000
[09:08:19.609]  </debugvars>
[09:08:19.609]  
[09:08:19.609]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:08:19.610]    <block atomic="false" info="">
[09:08:19.610]      __var nReset      = 0x80;
[09:08:19.610]        // -> [nReset <= 0x00000080]
[09:08:19.611]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:08:19.613]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:08:19.614]    </block>
[09:08:19.614]    <control if="" while="1" timeout="50000" info="">
[09:08:19.614]      // while "1"  (timeout="50000")
[09:08:19.614]      // while-condition  =>  TRUE
[09:08:19.615]      // while "1"  (timeout="50000")
[09:08:19.615]      // while-condition  =>  TRUE
[09:08:19.615]      // while "1"  (timeout="50000")
[09:08:19.616]      // while-condition  =>  TRUE
[09:08:19.616]      // while "1"  (timeout="50000")
[09:08:19.616]      // while-condition  =>  TRUE
[09:08:19.616]      // while "1"  (timeout="50000")
[09:08:19.617]      // while-condition  =>  TRUE
[09:08:19.617]      // while "1"  (timeout="50000")
[09:08:19.617]      // while-condition  =>  TRUE
[09:08:19.618]      // while "1"  (timeout="50000")
[09:08:19.618]      // while-condition  =>  TRUE
[09:08:19.618]      // while "1"  (timeout="50000")
[09:08:19.619]      // while-condition  =>  TRUE
[09:08:19.619]      // while "1"  (timeout="50000")
[09:08:19.619]      // while-condition  =>  TRUE
[09:08:19.619]      // while "1"  (timeout="50000")
[09:08:19.620]      // while-condition  =>  TRUE
[09:08:19.620]      // while "1"  (timeout="50000")
[09:08:19.620]      // while-condition  =>  TRUE
[09:08:19.621]      // while "1"  (timeout="50000")
[09:08:19.621]      // while-condition  =>  TRUE
[09:08:19.621]      // while "1"  (timeout="50000")
[09:08:19.621]      // while-condition  =>  TRUE
[09:08:19.622]      // while "1"  (timeout="50000")
[09:08:19.622]      // while-condition  =>  TRUE
[09:08:19.622]      // while "1"  (timeout="50000")
[09:08:19.623]      // while-condition  =>  TRUE
[09:08:19.623]      // while "1"  (timeout="50000")
[09:08:19.623]      // while-condition  =>  TRUE
[09:08:19.623]      // while "1"  (timeout="50000")
[09:08:19.623]      // while-condition  =>  TRUE
[09:08:19.624]      // while "1"  (timeout="50000")
[09:08:19.624]      // while-condition  =>  TRUE
[09:08:19.624]      // while "1"  (timeout="50000")
[09:08:19.624]      // while-condition  =>  TRUE
[09:08:19.624]      // while "1"  (timeout="50000")
[09:08:19.625]      // while-condition  =>  TRUE
[09:08:19.625]      // while "1"  (timeout="50000")
[09:08:19.625]      // while-condition  =>  TRUE
[09:08:19.625]      // while "1"  (timeout="50000")
[09:08:19.625]      // while-condition  =>  TRUE
[09:08:19.626]      // while "1"  (timeout="50000")
[09:08:19.626]      // while-condition  =>  TRUE
[09:08:19.626]      // while "1"  (timeout="50000")
[09:08:19.626]      // while-condition  =>  TRUE
[09:08:19.626]      // while "1"  (timeout="50000")
[09:08:19.627]      // while-condition  =>  TRUE
[09:08:19.627]      // while "1"  (timeout="50000")
[09:08:19.627]      // while-condition  =>  TRUE
[09:08:19.628]      // while "1"  (timeout="50000")
[09:08:19.628]      // while-condition  =>  TRUE
[09:08:19.628]      // while "1"  (timeout="50000")
[09:08:19.628]      // while-condition  =>  TRUE
[09:08:19.629]      // while "1"  (timeout="50000")
[09:08:19.629]      // while-condition  =>  TRUE
[09:08:19.629]      // while "1"  (timeout="50000")
[09:08:19.629]      // while-condition  =>  TRUE
[09:08:19.630]      // while "1"  (timeout="50000")
[09:08:19.630]      // while-condition  =>  TRUE
[09:08:19.630]      // while "1"  (timeout="50000")
[09:08:19.630]      // while-condition  =>  TRUE
[09:08:19.630]      // while "1"  (timeout="50000")
[09:08:19.631]      // while-condition  =>  TRUE
[09:08:19.631]      // while "1"  (timeout="50000")
[09:08:19.631]      // while-condition  =>  TRUE
[09:08:19.631]      // while "1"  (timeout="50000")
[09:08:19.632]      // while-condition  =>  TRUE
[09:08:19.632]      // while "1"  (timeout="50000")
[09:08:19.632]      // while-condition  =>  TRUE
[09:08:19.632]      // while "1"  (timeout="50000")
[09:08:19.632]      // while-condition  =>  TRUE
[09:08:19.633]      // while "1"  (timeout="50000")
[09:08:19.633]      // while-condition  =>  TRUE
[09:08:19.633]      // while "1"  (timeout="50000")
[09:08:19.633]      // while-condition  =>  TRUE
[09:08:19.634]      // while "1"  (timeout="50000")
[09:08:19.634]      // while-condition  =>  TRUE
[09:08:19.634]      // while "1"  (timeout="50000")
[09:08:19.634]      // while-condition  =>  TRUE
[09:08:19.634]      // while "1"  (timeout="50000")
[09:08:19.635]      // while-condition  =>  TRUE
[09:08:19.635]      // while "1"  (timeout="50000")
[09:08:19.635]      // while-condition  =>  TRUE
[09:08:19.635]      // while "1"  (timeout="50000")
[09:08:19.636]      // while-condition  =>  TRUE
[09:08:19.636]      // while "1"  (timeout="50000")
[09:08:19.636]      // while-condition  =>  TRUE
[09:08:19.636]      // while "1"  (timeout="50000")
[09:08:19.637]      // while-condition  =>  TRUE
[09:08:19.637]      // while "1"  (timeout="50000")
[09:08:19.637]      // while-condition  =>  TRUE
[09:08:19.637]      // while "1"  (timeout="50000")
[09:08:19.637]      // while-condition  =>  TRUE
[09:08:19.638]      // while "1"  (timeout="50000")
[09:08:19.638]      // while-condition  =>  TRUE
[09:08:19.638]      // while "1"  (timeout="50000")
[09:08:19.638]      // while-condition  =>  TRUE
[09:08:19.639]      // while "1"  (timeout="50000")
[09:08:19.639]      // while-condition  =>  TRUE
[09:08:19.639]      // while "1"  (timeout="50000")
[09:08:19.639]      // while-condition  =>  TRUE
[09:08:19.640]      // while "1"  (timeout="50000")
[09:08:19.640]      // while-condition  =>  TRUE
[09:08:19.640]      // while "1"  (timeout="50000")
[09:08:19.640]      // while-condition  =>  TRUE
[09:08:19.640]      // while "1"  (timeout="50000")
[09:08:19.641]      // while-condition  =>  TRUE
[09:08:19.641]      // while "1"  (timeout="50000")
[09:08:19.641]      // while-condition  =>  TRUE
[09:08:19.642]      // while "1"  (timeout="50000")
[09:08:19.642]      // while-condition  =>  TRUE
[09:08:19.642]      // while "1"  (timeout="50000")
[09:08:19.643]      // while-condition  =>  TRUE
[09:08:19.643]      // while "1"  (timeout="50000")
[09:08:19.643]      // while-condition  =>  TRUE
[09:08:19.643]      // while "1"  (timeout="50000")
[09:08:19.644]      // while-condition  =>  TRUE
[09:08:19.644]      // while "1"  (timeout="50000")
[09:08:19.644]      // while-condition  =>  TRUE
[09:08:19.644]      // while "1"  (timeout="50000")
[09:08:19.645]      // while-condition  =>  TRUE
[09:08:19.645]      // while "1"  (timeout="50000")
[09:08:19.645]      // while-condition  =>  TRUE
[09:08:19.646]      // while "1"  (timeout="50000")
[09:08:19.646]      // while-condition  =>  TRUE
[09:08:19.646]      // while "1"  (timeout="50000")
[09:08:19.646]      // while-condition  =>  TRUE
[09:08:19.647]      // while "1"  (timeout="50000")
[09:08:19.647]      // while-condition  =>  TRUE
[09:08:19.647]      // while "1"  (timeout="50000")
[09:08:19.648]      // while-condition  =>  TRUE
[09:08:19.648]      // while "1"  (timeout="50000")
[09:08:19.648]      // while-condition  =>  TRUE
[09:08:19.648]      // while "1"  (timeout="50000")
[09:08:19.648]      // while-condition  =>  TRUE
[09:08:19.649]      // while "1"  (timeout="50000")
[09:08:19.649]      // while-condition  =>  TRUE
[09:08:19.649]      // while "1"  (timeout="50000")
[09:08:19.649]      // while-condition  =>  TRUE
[09:08:19.650]      // while "1"  (timeout="50000")
[09:08:19.650]      // while-condition  =>  TRUE
[09:08:19.650]      // while "1"  (timeout="50000")
[09:08:19.650]      // while-condition  =>  TRUE
[09:08:19.650]      // while "1"  (timeout="50000")
[09:08:19.651]      // while-condition  =>  TRUE
[09:08:19.651]      // while "1"  (timeout="50000")
[09:08:19.651]      // while-condition  =>  TRUE
[09:08:19.651]      // while "1"  (timeout="50000")
[09:08:19.651]      // while-condition  =>  TRUE
[09:08:19.652]      // while "1"  (timeout="50000")
[09:08:19.652]      // while-condition  =>  TRUE
[09:08:19.652]      // while "1"  (timeout="50000")
[09:08:19.652]      // while-condition  =>  TRUE
[09:08:19.652]      // while "1"  (timeout="50000")
[09:08:19.652]      // while-condition  =>  TRUE
[09:08:19.653]      // while "1"  (timeout="50000")
[09:08:19.653]      // while-condition  =>  TRUE
[09:08:19.653]      // while "1"  (timeout="50000")
[09:08:19.653]      // while-condition  =>  TRUE
[09:08:19.653]      // while "1"  (timeout="50000")
[09:08:19.654]      // while-condition  =>  TRUE
[09:08:19.654]      // while "1"  (timeout="50000")
[09:08:19.654]      // while-condition  =>  TRUE
[09:08:19.654]      // while "1"  (timeout="50000")
[09:08:19.654]      // while-condition  =>  TRUE
[09:08:19.655]      // while "1"  (timeout="50000")
[09:08:19.655]      // while-condition  =>  TRUE
[09:08:19.655]      // while "1"  (timeout="50000")
[09:08:19.655]      // while-condition  =>  TRUE
[09:08:19.655]      // while "1"  (timeout="50000")
[09:08:19.656]      // while-condition  =>  TRUE
[09:08:19.656]      // while "1"  (timeout="50000")
[09:08:19.656]      // while-condition  =>  TRUE
[09:08:19.656]      // while "1"  (timeout="50000")
[09:08:19.656]      // while-condition  =>  TRUE
[09:08:19.657]      // while "1"  (timeout="50000")
[09:08:19.657]      // while-condition  =>  TRUE
[09:08:19.657]      // while "1"  (timeout="50000")
[09:08:19.657]      // while-condition  =>  TRUE
[09:08:19.657]      // while "1"  (timeout="50000")
[09:08:19.658]      // while-condition  =>  TRUE
[09:08:19.658]      // while "1"  (timeout="50000")
[09:08:19.658]      // while-condition  =>  TRUE
[09:08:19.658]      // while "1"  (timeout="50000")
[09:08:19.658]      // while-condition  =>  TRUE
[09:08:19.659]      // while "1"  (timeout="50000")
[09:08:19.659]      // while-condition  =>  TRUE
[09:08:19.659]      // while "1"  (timeout="50000")
[09:08:19.659]      // while-condition  =>  TRUE
[09:08:19.659]      // while "1"  (timeout="50000")
[09:08:19.660]      // while-condition  =>  TRUE
[09:08:19.660]      // while "1"  (timeout="50000")
[09:08:19.660]      // while-condition  =>  TRUE
[09:08:19.660]      // while "1"  (timeout="50000")
[09:08:19.661]      // while-condition  =>  TRUE
[09:08:19.661]      // while "1"  (timeout="50000")
[09:08:19.661]      // while-condition  =>  TRUE
[09:08:19.661]      // while "1"  (timeout="50000")
[09:08:19.661]      // while-condition  =>  TRUE
[09:08:19.662]      // while "1"  (timeout="50000")
[09:08:19.662]      // while-condition  =>  TRUE
[09:08:19.662]      // while "1"  (timeout="50000")
[09:08:19.662]      // while-condition  =>  TRUE
[09:08:19.663]      // while "1"  (timeout="50000")
[09:08:19.663]      // while-condition  =>  TRUE
[09:08:19.663]      // while "1"  (timeout="50000")
[09:08:19.663]      // while-condition  =>  TRUE
[09:08:19.663]      // while "1"  (timeout="50000")
[09:08:19.664]      // while-condition  =>  TRUE
[09:08:19.664]      // while "1"  (timeout="50000")
[09:08:19.664]      // while-condition  =>  TRUE
[09:08:19.664]      // while "1"  (timeout="50000")
[09:08:19.665]      // while-condition  =>  TRUE
[09:08:19.665]      // while "1"  (timeout="50000")
[09:08:19.665]      // while-condition  =>  TRUE
[09:08:19.665]      // while "1"  (timeout="50000")
[09:08:19.665]      // while-condition  =>  TRUE
[09:08:19.666]      // while "1"  (timeout="50000")
[09:08:19.666]      // while-condition  =>  TRUE
[09:08:19.666]      // while "1"  (timeout="50000")
[09:08:19.666]      // while-condition  =>  TRUE
[09:08:19.667]      // while "1"  (timeout="50000")
[09:08:19.667]      // while-condition  =>  TRUE
[09:08:19.667]      // while "1"  (timeout="50000")
[09:08:19.667]      // while-condition  =>  TRUE
[09:08:19.668]      // while "1"  (timeout="50000")
[09:08:19.668]      // while-condition  =>  TRUE
[09:08:19.668]      // while "1"  (timeout="50000")
[09:08:19.668]      // while-condition  =>  TRUE
[09:08:19.668]      // while "1"  (timeout="50000")
[09:08:19.669]      // while-condition  =>  TRUE
[09:08:19.669]      // while "1"  (timeout="50000")
[09:08:19.669]      // while-condition  =>  TRUE
[09:08:19.669]      // while "1"  (timeout="50000")
[09:08:19.670]      // while-condition  =>  TRUE
[09:08:19.670]      // while "1"  (timeout="50000")
[09:08:19.670]      // while-condition  =>  TRUE
[09:08:19.670]      // while "1"  (timeout="50000")
[09:08:19.671]      // while-condition  =>  TRUE
[09:08:19.671]      // while "1"  (timeout="50000")
[09:08:19.671]      // while-condition  =>  TRUE
[09:08:19.671]      // while "1"  (timeout="50000")
[09:08:19.671]      // while-condition  =>  TRUE
[09:08:19.672]      // while "1"  (timeout="50000")
[09:08:19.672]      // while-condition  =>  TRUE
[09:08:19.672]      // while "1"  (timeout="50000")
[09:08:19.672]      // while-condition  =>  TRUE
[09:08:19.673]      // while "1"  (timeout="50000")
[09:08:19.673]      // while-condition  =>  TRUE
[09:08:19.673]      // while "1"  (timeout="50000")
[09:08:19.673]      // while-condition  =>  TRUE
[09:08:19.674]      // while "1"  (timeout="50000")
[09:08:19.674]      // while-condition  =>  TRUE
[09:08:19.674]      // while "1"  (timeout="50000")
[09:08:19.674]      // while-condition  =>  TRUE
[09:08:19.675]      // while "1"  (timeout="50000")
[09:08:19.675]      // while-condition  =>  TRUE
[09:08:19.675]      // while "1"  (timeout="50000")
[09:08:19.675]      // while-condition  =>  TRUE
[09:08:19.675]      // while "1"  (timeout="50000")
[09:08:19.676]      // while-condition  =>  TRUE
[09:08:19.676]      // while "1"  (timeout="50000")
[09:08:19.676]      // while-condition  =>  TRUE
[09:08:19.676]      // while "1"  (timeout="50000")
[09:08:19.677]      // while-condition  =>  TRUE
[09:08:19.677]      // while "1"  (timeout="50000")
[09:08:19.677]      // while  =>  TIMEOUT
[09:08:19.677]      // end while "1"
[09:08:19.678]    </control>
[09:08:19.678]    <block atomic="false" info="">
[09:08:19.678]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:08:19.680]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:08:19.681]    </block>
[09:08:19.681]    <control if="" while="1" timeout="10000" info="">
[09:08:19.681]      // while "1"  (timeout="10000")
[09:08:19.681]      // while-condition  =>  TRUE
[09:08:19.682]      // while "1"  (timeout="10000")
[09:08:19.682]      // while-condition  =>  TRUE
[09:08:19.682]      // while "1"  (timeout="10000")
[09:08:19.682]      // while-condition  =>  TRUE
[09:08:19.682]      // while "1"  (timeout="10000")
[09:08:19.683]      // while-condition  =>  TRUE
[09:08:19.683]      // while "1"  (timeout="10000")
[09:08:19.683]      // while-condition  =>  TRUE
[09:08:19.684]      // while "1"  (timeout="10000")
[09:08:19.684]      // while-condition  =>  TRUE
[09:08:19.684]      // while "1"  (timeout="10000")
[09:08:19.685]      // while-condition  =>  TRUE
[09:08:19.685]      // while "1"  (timeout="10000")
[09:08:19.685]      // while-condition  =>  TRUE
[09:08:19.685]      // while "1"  (timeout="10000")
[09:08:19.686]      // while-condition  =>  TRUE
[09:08:19.686]      // while "1"  (timeout="10000")
[09:08:19.686]      // while-condition  =>  TRUE
[09:08:19.686]      // while "1"  (timeout="10000")
[09:08:19.687]      // while-condition  =>  TRUE
[09:08:19.687]      // while "1"  (timeout="10000")
[09:08:19.687]      // while-condition  =>  TRUE
[09:08:19.687]      // while "1"  (timeout="10000")
[09:08:19.688]      // while-condition  =>  TRUE
[09:08:19.688]      // while "1"  (timeout="10000")
[09:08:19.688]      // while-condition  =>  TRUE
[09:08:19.688]      // while "1"  (timeout="10000")
[09:08:19.689]      // while-condition  =>  TRUE
[09:08:19.690]      // while "1"  (timeout="10000")
[09:08:19.690]      // while-condition  =>  TRUE
[09:08:19.690]      // while "1"  (timeout="10000")
[09:08:19.690]      // while-condition  =>  TRUE
[09:08:19.690]      // while "1"  (timeout="10000")
[09:08:19.691]      // while-condition  =>  TRUE
[09:08:19.691]      // while "1"  (timeout="10000")
[09:08:19.691]      // while-condition  =>  TRUE
[09:08:19.691]      // while "1"  (timeout="10000")
[09:08:19.692]      // while-condition  =>  TRUE
[09:08:19.692]      // while "1"  (timeout="10000")
[09:08:19.692]      // while  =>  TIMEOUT
[09:08:19.693]      // end while "1"
[09:08:19.693]    </control>
[09:08:19.693]    <block atomic="true" info="">
[09:08:19.697]  
[09:08:19.697]  ! W001 : No atomic sequence support in debug unit
[09:08:19.697]  
[09:08:19.698]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:08:19.700]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:08:19.701]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:08:19.702]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:08:19.703]    </block>
[09:08:19.703]    <block atomic="false" info="">
[09:08:19.704]      __errorcontrol = 0x00000001;
[09:08:19.704]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:08:19.704]      ReadDP(0x0);
[09:08:19.706]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:08:19.707]      __errorcontrol = 0x00000000;
[09:08:19.707]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:08:19.708]    </block>
[09:08:19.708]  </sequence>
[09:08:19.708]  
[09:08:19.709]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:08:19.709]  
[09:08:19.709]  <debugvars>
[09:08:19.709]    // Pre-defined
[09:08:19.710]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:08:19.710]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:08:19.711]    __dp=0x00000000
[09:08:19.711]    __ap=0x00000000
[09:08:19.711]    __traceout=0x00000000      (Trace Disabled)
[09:08:19.712]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:08:19.712]    __FlashAddr=0x00000000
[09:08:19.712]    __FlashLen=0x00000000
[09:08:19.713]    __FlashArg=0x00000000
[09:08:19.713]    __FlashOp=0x00000000
[09:08:19.714]    __Result=0x00000000
[09:08:19.714]  </debugvars>
[09:08:19.714]  
[09:08:19.715]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:08:19.715]  </sequence>
[09:08:19.715]  
[09:08:19.720]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[09:08:19.720]  
[09:08:19.720]  <debugvars>
[09:08:19.720]    // Pre-defined
[09:08:19.721]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:08:19.721]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:08:19.721]    __dp=0x00000000
[09:08:19.722]    __ap=0x00000000
[09:08:19.722]    __traceout=0x00000000      (Trace Disabled)
[09:08:19.722]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:08:19.723]    __FlashAddr=0x00000000
[09:08:19.723]    __FlashLen=0x00000000
[09:08:19.723]    __FlashArg=0x00000000
[09:08:19.724]    __FlashOp=0x00000000
[09:08:19.724]    __Result=0x00000000
[09:08:19.724]  </debugvars>
[09:08:19.725]  
[09:08:19.725]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:08:19.725]    <block atomic="false" info="">
[09:08:19.726]      __var SW_DP_ABORT  = 0x0;
[09:08:19.726]        // -> [SW_DP_ABORT <= 0x00000000]
[09:08:19.726]      __var DP_CTRL_STAT = 0x4;
[09:08:19.727]        // -> [DP_CTRL_STAT <= 0x00000004]
[09:08:19.727]      __var DP_SELECT    = 0x8;
[09:08:19.727]        // -> [DP_SELECT <= 0x00000008]
[09:08:19.728]      __var powered_down = 0;
[09:08:19.728]        // -> [powered_down <= 0x00000000]
[09:08:19.728]      WriteDP(DP_SELECT, 0x00000000);
[09:08:19.731]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:08:19.731]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:08:19.733]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[09:08:19.733]        // -> [powered_down <= 0x00000001]
[09:08:19.733]    </block>
[09:08:19.734]    <control if="powered_down" while="" timeout="0" info="">
[09:08:19.734]      // if-block "powered_down"
[09:08:19.734]        // =>  TRUE
[09:08:19.735]      <block atomic="false" info="">
[09:08:19.735]        WriteDP(DP_CTRL_STAT, 0x50000000);
[09:08:19.737]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[09:08:19.737]      </block>
[09:08:19.737]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[09:08:19.738]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[09:08:19.740]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:08:19.740]        // while-condition  =>  FALSE
[09:08:19.740]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[09:08:19.741]      </control>
[09:08:19.741]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[09:08:19.741]        // if-block "(__protocol & 0xFFFF) == 1"
[09:08:19.742]          // =>  FALSE
[09:08:19.742]        // skip if-block "(__protocol & 0xFFFF) == 1"
[09:08:19.742]      </control>
[09:08:19.743]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[09:08:19.743]        // if-block "(__protocol & 0xFFFF) == 2"
[09:08:19.743]          // =>  TRUE
[09:08:19.744]        <block atomic="false" info="">
[09:08:19.744]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[09:08:19.747]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[09:08:19.747]          WriteDP(SW_DP_ABORT, 0x0000001E);
[09:08:19.750]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[09:08:19.750]        </block>
[09:08:19.750]        // end if-block "(__protocol & 0xFFFF) == 2"
[09:08:19.751]      </control>
[09:08:19.751]      // end if-block "powered_down"
[09:08:19.751]    </control>
[09:08:19.752]  </sequence>
[09:08:19.752]  
[09:08:19.856]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:08:19.856]  
[09:08:19.856]  <debugvars>
[09:08:19.857]    // Pre-defined
[09:08:19.857]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:08:19.858]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:08:19.858]    __dp=0x00000000
[09:08:19.858]    __ap=0x00000000
[09:08:19.859]    __traceout=0x00000000      (Trace Disabled)
[09:08:19.859]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:08:19.860]    __FlashAddr=0x00000000
[09:08:19.860]    __FlashLen=0x00000000
[09:08:19.860]    __FlashArg=0x00000000
[09:08:19.861]    __FlashOp=0x00000000
[09:08:19.861]    __Result=0x00000000
[09:08:19.861]  </debugvars>
[09:08:19.862]  
[09:08:19.862]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:08:19.863]    <block atomic="true" info="">
[09:08:19.866]  
[09:08:19.866]  ! W001 : No atomic sequence support in debug unit
[09:08:19.866]  
[09:08:19.868]      __var DP_R_IDCODE    = 0x0;
[09:08:19.868]        // -> [DP_R_IDCODE <= 0x00000000]
[09:08:19.868]      __var DP_W_ABORT    = 0x0;
[09:08:19.869]        // -> [DP_W_ABORT <= 0x00000000]
[09:08:19.869]      __var DP_CTRLSTAT = 0x4;
[09:08:19.870]        // -> [DP_CTRLSTAT <= 0x00000004]
[09:08:19.870]      __var DP_W_SELECT    = 0x8;
[09:08:19.870]        // -> [DP_W_SELECT <= 0x00000008]
[09:08:19.871]      __var AP_TAR		= 0x4;
[09:08:19.871]        // -> [AP_TAR <= 0x00000004]
[09:08:19.871]      __var AP_BD0		= 0x0;
[09:08:19.872]        // -> [AP_BD0 <= 0x00000000]
[09:08:19.872]      __var AP_BD1		= 0x4;
[09:08:19.873]        // -> [AP_BD1 <= 0x00000004]
[09:08:19.873]      __var AP_BD2		= 0x8;
[09:08:19.873]        // -> [AP_BD2 <= 0x00000008]
[09:08:19.874]      __var PCWithinFlash = 0;
[09:08:19.874]        // -> [PCWithinFlash <= 0x00000000]
[09:08:19.875]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:08:19.881]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.886]    </block>
[09:08:19.887]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:08:19.887]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:08:19.893]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.894]      // while-condition  =>  FALSE
[09:08:19.894]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:08:19.894]    </control>
[09:08:19.895]    <block atomic="true" info="">
[09:08:19.899]  
[09:08:19.899]  ! W001 : No atomic sequence support in debug unit
[09:08:19.899]  
[09:08:19.900]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:08:19.906]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:08:19.906]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:08:19.909]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.909]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:08:19.911]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:08:19.912]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:08:19.916]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.916]    </block>
[09:08:19.917]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:08:19.917]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:19.920]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.920]      // while-condition  =>  TRUE
[09:08:19.921]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:19.923]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.924]      // while-condition  =>  TRUE
[09:08:19.924]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:19.926]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.927]      // while-condition  =>  TRUE
[09:08:19.927]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:19.929]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.930]      // while-condition  =>  TRUE
[09:08:19.930]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:19.932]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.933]      // while-condition  =>  TRUE
[09:08:19.933]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:19.935]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.936]      // while-condition  =>  TRUE
[09:08:19.936]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:19.938]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.939]      // while-condition  =>  TRUE
[09:08:19.939]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:19.941]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.942]      // while-condition  =>  TRUE
[09:08:19.942]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:19.944]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.945]      // while-condition  =>  TRUE
[09:08:19.945]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:19.947]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.948]      // while-condition  =>  TRUE
[09:08:19.948]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:19.950]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.951]      // while-condition  =>  TRUE
[09:08:19.951]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:19.953]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.954]      // while-condition  =>  TRUE
[09:08:19.954]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:19.957]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.958]      // while-condition  =>  TRUE
[09:08:19.958]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:19.960]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.961]      // while-condition  =>  TRUE
[09:08:19.961]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:19.963]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.963]      // while-condition  =>  TRUE
[09:08:19.964]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:19.966]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.966]      // while-condition  =>  TRUE
[09:08:19.967]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:19.969]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.969]      // while-condition  =>  TRUE
[09:08:19.970]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:19.972]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.972]      // while-condition  =>  TRUE
[09:08:19.973]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:19.975]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.975]      // while-condition  =>  TRUE
[09:08:19.976]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:19.978]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.978]      // while-condition  =>  TRUE
[09:08:19.979]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:19.981]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.981]      // while-condition  =>  TRUE
[09:08:19.982]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:19.984]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.984]      // while-condition  =>  TRUE
[09:08:19.985]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:19.987]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.987]      // while-condition  =>  TRUE
[09:08:19.988]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:19.990]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.990]      // while-condition  =>  TRUE
[09:08:19.991]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:19.993]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.994]      // while-condition  =>  TRUE
[09:08:19.994]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:19.996]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:19.996]      // while-condition  =>  TRUE
[09:08:19.997]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:19.999]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.000]      // while-condition  =>  TRUE
[09:08:20.000]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.002]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.003]      // while-condition  =>  TRUE
[09:08:20.003]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.005]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.006]      // while-condition  =>  TRUE
[09:08:20.006]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.008]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.009]      // while-condition  =>  TRUE
[09:08:20.009]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.011]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.012]      // while-condition  =>  TRUE
[09:08:20.012]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.014]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.015]      // while-condition  =>  TRUE
[09:08:20.015]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.017]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.018]      // while-condition  =>  TRUE
[09:08:20.018]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.020]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.021]      // while-condition  =>  TRUE
[09:08:20.021]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.021]      // while  =>  TIMEOUT
[09:08:20.021]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:08:20.022]    </control>
[09:08:20.022]    <block atomic="false" info="">
[09:08:20.022]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:08:20.024]        // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.025]        // -> [PCWithinFlash <= 0x00000000]
[09:08:20.025]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:08:20.027]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:08:20.028]    </block>
[09:08:20.028]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:08:20.028]      // if-block "PCWithinFlash == 0"
[09:08:20.029]        // =>  TRUE
[09:08:20.029]      // end if-block "PCWithinFlash == 0"
[09:08:20.029]    </control>
[09:08:20.029]  </sequence>
[09:08:20.030]  
[09:08:20.076]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[09:08:20.076]  
[09:08:20.076]  <debugvars>
[09:08:20.077]    // Pre-defined
[09:08:20.077]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:08:20.077]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:08:20.077]    __dp=0x00000000
[09:08:20.078]    __ap=0x00000000
[09:08:20.078]    __traceout=0x00000000      (Trace Disabled)
[09:08:20.078]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:08:20.078]    __FlashAddr=0x00000000
[09:08:20.078]    __FlashLen=0x00000000
[09:08:20.079]    __FlashArg=0x00000000
[09:08:20.079]    __FlashOp=0x00000000
[09:08:20.079]    __Result=0x00000000
[09:08:20.079]  </debugvars>
[09:08:20.080]  
[09:08:20.080]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[09:08:20.080]    <block atomic="false" info="">
[09:08:20.080]    </block>
[09:08:20.080]  </sequence>
[09:08:20.081]  
[09:08:20.082]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[09:08:20.082]  
[09:08:20.083]  <debugvars>
[09:08:20.083]    // Pre-defined
[09:08:20.083]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:08:20.083]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:08:20.084]    __dp=0x00000000
[09:08:20.084]    __ap=0x00000000
[09:08:20.084]    __traceout=0x00000000      (Trace Disabled)
[09:08:20.084]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:08:20.085]    __FlashAddr=0x00000000
[09:08:20.085]    __FlashLen=0x00000000
[09:08:20.085]    __FlashArg=0x00000000
[09:08:20.085]    __FlashOp=0x00000000
[09:08:20.086]    __Result=0x00000000
[09:08:20.086]  </debugvars>
[09:08:20.086]  
[09:08:20.086]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:08:20.087]    <block atomic="false" info="">
[09:08:20.087]      __var nReset      = 0x80;
[09:08:20.087]        // -> [nReset <= 0x00000080]
[09:08:20.087]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:08:20.089]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:08:20.090]    </block>
[09:08:20.090]    <control if="" while="1" timeout="50000" info="">
[09:08:20.090]      // while "1"  (timeout="50000")
[09:08:20.090]      // while-condition  =>  TRUE
[09:08:20.091]      // while "1"  (timeout="50000")
[09:08:20.091]      // while-condition  =>  TRUE
[09:08:20.091]      // while "1"  (timeout="50000")
[09:08:20.091]      // while-condition  =>  TRUE
[09:08:20.092]      // while "1"  (timeout="50000")
[09:08:20.092]      // while-condition  =>  TRUE
[09:08:20.092]      // while "1"  (timeout="50000")
[09:08:20.093]      // while-condition  =>  TRUE
[09:08:20.093]      // while "1"  (timeout="50000")
[09:08:20.093]      // while-condition  =>  TRUE
[09:08:20.093]      // while "1"  (timeout="50000")
[09:08:20.093]      // while-condition  =>  TRUE
[09:08:20.094]      // while "1"  (timeout="50000")
[09:08:20.094]      // while-condition  =>  TRUE
[09:08:20.094]      // while "1"  (timeout="50000")
[09:08:20.094]      // while-condition  =>  TRUE
[09:08:20.095]      // while "1"  (timeout="50000")
[09:08:20.095]      // while-condition  =>  TRUE
[09:08:20.095]      // while "1"  (timeout="50000")
[09:08:20.095]      // while-condition  =>  TRUE
[09:08:20.096]      // while "1"  (timeout="50000")
[09:08:20.096]      // while-condition  =>  TRUE
[09:08:20.096]      // while "1"  (timeout="50000")
[09:08:20.096]      // while-condition  =>  TRUE
[09:08:20.096]      // while "1"  (timeout="50000")
[09:08:20.097]      // while-condition  =>  TRUE
[09:08:20.097]      // while "1"  (timeout="50000")
[09:08:20.097]      // while-condition  =>  TRUE
[09:08:20.097]      // while "1"  (timeout="50000")
[09:08:20.098]      // while-condition  =>  TRUE
[09:08:20.098]      // while "1"  (timeout="50000")
[09:08:20.098]      // while-condition  =>  TRUE
[09:08:20.098]      // while "1"  (timeout="50000")
[09:08:20.098]      // while-condition  =>  TRUE
[09:08:20.099]      // while "1"  (timeout="50000")
[09:08:20.099]      // while-condition  =>  TRUE
[09:08:20.099]      // while "1"  (timeout="50000")
[09:08:20.099]      // while-condition  =>  TRUE
[09:08:20.100]      // while "1"  (timeout="50000")
[09:08:20.100]      // while-condition  =>  TRUE
[09:08:20.100]      // while "1"  (timeout="50000")
[09:08:20.100]      // while-condition  =>  TRUE
[09:08:20.100]      // while "1"  (timeout="50000")
[09:08:20.101]      // while-condition  =>  TRUE
[09:08:20.101]      // while "1"  (timeout="50000")
[09:08:20.101]      // while-condition  =>  TRUE
[09:08:20.101]      // while "1"  (timeout="50000")
[09:08:20.102]      // while-condition  =>  TRUE
[09:08:20.102]      // while "1"  (timeout="50000")
[09:08:20.102]      // while-condition  =>  TRUE
[09:08:20.102]      // while "1"  (timeout="50000")
[09:08:20.102]      // while-condition  =>  TRUE
[09:08:20.103]      // while "1"  (timeout="50000")
[09:08:20.103]      // while-condition  =>  TRUE
[09:08:20.103]      // while "1"  (timeout="50000")
[09:08:20.103]      // while-condition  =>  TRUE
[09:08:20.104]      // while "1"  (timeout="50000")
[09:08:20.104]      // while-condition  =>  TRUE
[09:08:20.104]      // while "1"  (timeout="50000")
[09:08:20.104]      // while-condition  =>  TRUE
[09:08:20.104]      // while "1"  (timeout="50000")
[09:08:20.105]      // while-condition  =>  TRUE
[09:08:20.105]      // while "1"  (timeout="50000")
[09:08:20.105]      // while-condition  =>  TRUE
[09:08:20.105]      // while "1"  (timeout="50000")
[09:08:20.106]      // while-condition  =>  TRUE
[09:08:20.106]      // while "1"  (timeout="50000")
[09:08:20.106]      // while-condition  =>  TRUE
[09:08:20.106]      // while "1"  (timeout="50000")
[09:08:20.107]      // while-condition  =>  TRUE
[09:08:20.107]      // while "1"  (timeout="50000")
[09:08:20.107]      // while-condition  =>  TRUE
[09:08:20.107]      // while "1"  (timeout="50000")
[09:08:20.107]      // while-condition  =>  TRUE
[09:08:20.108]      // while "1"  (timeout="50000")
[09:08:20.108]      // while-condition  =>  TRUE
[09:08:20.108]      // while "1"  (timeout="50000")
[09:08:20.108]      // while-condition  =>  TRUE
[09:08:20.109]      // while "1"  (timeout="50000")
[09:08:20.109]      // while-condition  =>  TRUE
[09:08:20.109]      // while "1"  (timeout="50000")
[09:08:20.109]      // while-condition  =>  TRUE
[09:08:20.110]      // while "1"  (timeout="50000")
[09:08:20.110]      // while-condition  =>  TRUE
[09:08:20.110]      // while "1"  (timeout="50000")
[09:08:20.110]      // while-condition  =>  TRUE
[09:08:20.111]      // while "1"  (timeout="50000")
[09:08:20.111]      // while-condition  =>  TRUE
[09:08:20.111]      // while "1"  (timeout="50000")
[09:08:20.112]      // while-condition  =>  TRUE
[09:08:20.112]      // while "1"  (timeout="50000")
[09:08:20.112]      // while-condition  =>  TRUE
[09:08:20.113]      // while "1"  (timeout="50000")
[09:08:20.113]      // while-condition  =>  TRUE
[09:08:20.113]      // while "1"  (timeout="50000")
[09:08:20.113]      // while-condition  =>  TRUE
[09:08:20.114]      // while "1"  (timeout="50000")
[09:08:20.114]      // while-condition  =>  TRUE
[09:08:20.114]      // while "1"  (timeout="50000")
[09:08:20.114]      // while-condition  =>  TRUE
[09:08:20.115]      // while "1"  (timeout="50000")
[09:08:20.115]      // while-condition  =>  TRUE
[09:08:20.115]      // while "1"  (timeout="50000")
[09:08:20.115]      // while-condition  =>  TRUE
[09:08:20.115]      // while "1"  (timeout="50000")
[09:08:20.116]      // while-condition  =>  TRUE
[09:08:20.116]      // while "1"  (timeout="50000")
[09:08:20.116]      // while-condition  =>  TRUE
[09:08:20.116]      // while "1"  (timeout="50000")
[09:08:20.117]      // while-condition  =>  TRUE
[09:08:20.117]      // while "1"  (timeout="50000")
[09:08:20.117]      // while-condition  =>  TRUE
[09:08:20.117]      // while "1"  (timeout="50000")
[09:08:20.118]      // while-condition  =>  TRUE
[09:08:20.118]      // while "1"  (timeout="50000")
[09:08:20.118]      // while-condition  =>  TRUE
[09:08:20.118]      // while "1"  (timeout="50000")
[09:08:20.119]      // while-condition  =>  TRUE
[09:08:20.119]      // while "1"  (timeout="50000")
[09:08:20.119]      // while-condition  =>  TRUE
[09:08:20.119]      // while "1"  (timeout="50000")
[09:08:20.120]      // while-condition  =>  TRUE
[09:08:20.120]      // while "1"  (timeout="50000")
[09:08:20.120]      // while-condition  =>  TRUE
[09:08:20.120]      // while "1"  (timeout="50000")
[09:08:20.121]      // while-condition  =>  TRUE
[09:08:20.121]      // while "1"  (timeout="50000")
[09:08:20.121]      // while-condition  =>  TRUE
[09:08:20.121]      // while "1"  (timeout="50000")
[09:08:20.121]      // while-condition  =>  TRUE
[09:08:20.122]      // while "1"  (timeout="50000")
[09:08:20.122]      // while-condition  =>  TRUE
[09:08:20.122]      // while "1"  (timeout="50000")
[09:08:20.122]      // while-condition  =>  TRUE
[09:08:20.123]      // while "1"  (timeout="50000")
[09:08:20.123]      // while-condition  =>  TRUE
[09:08:20.123]      // while "1"  (timeout="50000")
[09:08:20.123]      // while-condition  =>  TRUE
[09:08:20.124]      // while "1"  (timeout="50000")
[09:08:20.124]      // while-condition  =>  TRUE
[09:08:20.124]      // while "1"  (timeout="50000")
[09:08:20.124]      // while-condition  =>  TRUE
[09:08:20.125]      // while "1"  (timeout="50000")
[09:08:20.125]      // while-condition  =>  TRUE
[09:08:20.125]      // while "1"  (timeout="50000")
[09:08:20.125]      // while-condition  =>  TRUE
[09:08:20.126]      // while "1"  (timeout="50000")
[09:08:20.126]      // while-condition  =>  TRUE
[09:08:20.126]      // while "1"  (timeout="50000")
[09:08:20.126]      // while-condition  =>  TRUE
[09:08:20.126]      // while "1"  (timeout="50000")
[09:08:20.127]      // while-condition  =>  TRUE
[09:08:20.127]      // while "1"  (timeout="50000")
[09:08:20.127]      // while-condition  =>  TRUE
[09:08:20.128]      // while "1"  (timeout="50000")
[09:08:20.128]      // while-condition  =>  TRUE
[09:08:20.128]      // while "1"  (timeout="50000")
[09:08:20.128]      // while-condition  =>  TRUE
[09:08:20.129]      // while "1"  (timeout="50000")
[09:08:20.129]      // while-condition  =>  TRUE
[09:08:20.129]      // while "1"  (timeout="50000")
[09:08:20.130]      // while-condition  =>  TRUE
[09:08:20.130]      // while "1"  (timeout="50000")
[09:08:20.130]      // while-condition  =>  TRUE
[09:08:20.130]      // while "1"  (timeout="50000")
[09:08:20.130]      // while-condition  =>  TRUE
[09:08:20.131]      // while "1"  (timeout="50000")
[09:08:20.131]      // while-condition  =>  TRUE
[09:08:20.131]      // while "1"  (timeout="50000")
[09:08:20.132]      // while-condition  =>  TRUE
[09:08:20.132]      // while "1"  (timeout="50000")
[09:08:20.132]      // while-condition  =>  TRUE
[09:08:20.132]      // while "1"  (timeout="50000")
[09:08:20.133]      // while-condition  =>  TRUE
[09:08:20.133]      // while "1"  (timeout="50000")
[09:08:20.133]      // while-condition  =>  TRUE
[09:08:20.133]      // while "1"  (timeout="50000")
[09:08:20.134]      // while-condition  =>  TRUE
[09:08:20.134]      // while "1"  (timeout="50000")
[09:08:20.134]      // while-condition  =>  TRUE
[09:08:20.134]      // while "1"  (timeout="50000")
[09:08:20.135]      // while-condition  =>  TRUE
[09:08:20.135]      // while "1"  (timeout="50000")
[09:08:20.135]      // while-condition  =>  TRUE
[09:08:20.135]      // while "1"  (timeout="50000")
[09:08:20.135]      // while-condition  =>  TRUE
[09:08:20.136]      // while "1"  (timeout="50000")
[09:08:20.136]      // while-condition  =>  TRUE
[09:08:20.136]      // while "1"  (timeout="50000")
[09:08:20.136]      // while-condition  =>  TRUE
[09:08:20.137]      // while "1"  (timeout="50000")
[09:08:20.137]      // while-condition  =>  TRUE
[09:08:20.137]      // while "1"  (timeout="50000")
[09:08:20.137]      // while-condition  =>  TRUE
[09:08:20.138]      // while "1"  (timeout="50000")
[09:08:20.138]      // while-condition  =>  TRUE
[09:08:20.138]      // while "1"  (timeout="50000")
[09:08:20.138]      // while-condition  =>  TRUE
[09:08:20.138]      // while "1"  (timeout="50000")
[09:08:20.139]      // while-condition  =>  TRUE
[09:08:20.139]      // while "1"  (timeout="50000")
[09:08:20.139]      // while-condition  =>  TRUE
[09:08:20.139]      // while "1"  (timeout="50000")
[09:08:20.140]      // while-condition  =>  TRUE
[09:08:20.140]      // while "1"  (timeout="50000")
[09:08:20.140]      // while-condition  =>  TRUE
[09:08:20.140]      // while "1"  (timeout="50000")
[09:08:20.141]      // while-condition  =>  TRUE
[09:08:20.141]      // while "1"  (timeout="50000")
[09:08:20.141]      // while-condition  =>  TRUE
[09:08:20.141]      // while "1"  (timeout="50000")
[09:08:20.142]      // while-condition  =>  TRUE
[09:08:20.142]      // while "1"  (timeout="50000")
[09:08:20.142]      // while-condition  =>  TRUE
[09:08:20.142]      // while "1"  (timeout="50000")
[09:08:20.143]      // while-condition  =>  TRUE
[09:08:20.143]      // while "1"  (timeout="50000")
[09:08:20.143]      // while-condition  =>  TRUE
[09:08:20.143]      // while "1"  (timeout="50000")
[09:08:20.143]      // while-condition  =>  TRUE
[09:08:20.144]      // while "1"  (timeout="50000")
[09:08:20.144]      // while-condition  =>  TRUE
[09:08:20.144]      // while "1"  (timeout="50000")
[09:08:20.145]      // while-condition  =>  TRUE
[09:08:20.145]      // while "1"  (timeout="50000")
[09:08:20.145]      // while-condition  =>  TRUE
[09:08:20.145]      // while "1"  (timeout="50000")
[09:08:20.146]      // while-condition  =>  TRUE
[09:08:20.146]      // while "1"  (timeout="50000")
[09:08:20.146]      // while  =>  TIMEOUT
[09:08:20.146]      // end while "1"
[09:08:20.147]    </control>
[09:08:20.147]    <block atomic="false" info="">
[09:08:20.147]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:08:20.149]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:08:20.149]    </block>
[09:08:20.149]    <control if="" while="1" timeout="10000" info="">
[09:08:20.149]      // while "1"  (timeout="10000")
[09:08:20.150]      // while-condition  =>  TRUE
[09:08:20.150]      // while "1"  (timeout="10000")
[09:08:20.150]      // while-condition  =>  TRUE
[09:08:20.150]      // while "1"  (timeout="10000")
[09:08:20.150]      // while-condition  =>  TRUE
[09:08:20.151]      // while "1"  (timeout="10000")
[09:08:20.151]      // while-condition  =>  TRUE
[09:08:20.151]      // while "1"  (timeout="10000")
[09:08:20.151]      // while-condition  =>  TRUE
[09:08:20.152]      // while "1"  (timeout="10000")
[09:08:20.152]      // while-condition  =>  TRUE
[09:08:20.152]      // while "1"  (timeout="10000")
[09:08:20.152]      // while-condition  =>  TRUE
[09:08:20.153]      // while "1"  (timeout="10000")
[09:08:20.153]      // while-condition  =>  TRUE
[09:08:20.153]      // while "1"  (timeout="10000")
[09:08:20.153]      // while-condition  =>  TRUE
[09:08:20.153]      // while "1"  (timeout="10000")
[09:08:20.154]      // while-condition  =>  TRUE
[09:08:20.154]      // while "1"  (timeout="10000")
[09:08:20.154]      // while-condition  =>  TRUE
[09:08:20.154]      // while "1"  (timeout="10000")
[09:08:20.155]      // while-condition  =>  TRUE
[09:08:20.155]      // while "1"  (timeout="10000")
[09:08:20.155]      // while-condition  =>  TRUE
[09:08:20.155]      // while "1"  (timeout="10000")
[09:08:20.155]      // while-condition  =>  TRUE
[09:08:20.155]      // while "1"  (timeout="10000")
[09:08:20.155]      // while-condition  =>  TRUE
[09:08:20.155]      // while "1"  (timeout="10000")
[09:08:20.156]      // while-condition  =>  TRUE
[09:08:20.156]      // while "1"  (timeout="10000")
[09:08:20.156]      // while-condition  =>  TRUE
[09:08:20.156]      // while "1"  (timeout="10000")
[09:08:20.157]      // while-condition  =>  TRUE
[09:08:20.157]      // while "1"  (timeout="10000")
[09:08:20.157]      // while-condition  =>  TRUE
[09:08:20.157]      // while "1"  (timeout="10000")
[09:08:20.157]      // while-condition  =>  TRUE
[09:08:20.158]      // while "1"  (timeout="10000")
[09:08:20.158]      // while-condition  =>  TRUE
[09:08:20.158]      // while "1"  (timeout="10000")
[09:08:20.158]      // while-condition  =>  TRUE
[09:08:20.159]      // while "1"  (timeout="10000")
[09:08:20.159]      // while-condition  =>  TRUE
[09:08:20.159]      // while "1"  (timeout="10000")
[09:08:20.160]      // while-condition  =>  TRUE
[09:08:20.160]      // while "1"  (timeout="10000")
[09:08:20.160]      // while  =>  TIMEOUT
[09:08:20.160]      // end while "1"
[09:08:20.161]    </control>
[09:08:20.161]    <block atomic="true" info="">
[09:08:20.166]  
[09:08:20.166]  ! W001 : No atomic sequence support in debug unit
[09:08:20.166]  
[09:08:20.169]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:08:20.171]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:08:20.171]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:08:20.173]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:08:20.173]    </block>
[09:08:20.173]    <block atomic="false" info="">
[09:08:20.173]      __errorcontrol = 0x00000001;
[09:08:20.174]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:08:20.174]      ReadDP(0x0);
[09:08:20.176]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:08:20.176]      __errorcontrol = 0x00000000;
[09:08:20.176]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:08:20.177]    </block>
[09:08:20.177]  </sequence>
[09:08:20.177]  
[09:08:20.184]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[09:08:20.184]  
[09:08:20.194]  <debugvars>
[09:08:20.194]    // Pre-defined
[09:08:20.195]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:08:20.195]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:08:20.195]    __dp=0x00000000
[09:08:20.195]    __ap=0x00000000
[09:08:20.196]    __traceout=0x00000000      (Trace Disabled)
[09:08:20.196]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:08:20.196]    __FlashAddr=0x00000000
[09:08:20.196]    __FlashLen=0x00000000
[09:08:20.197]    __FlashArg=0x00000000
[09:08:20.197]    __FlashOp=0x00000000
[09:08:20.197]    __Result=0x00000000
[09:08:20.197]  </debugvars>
[09:08:20.198]  
[09:08:20.198]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[09:08:20.198]    <block atomic="false" info="">
[09:08:20.198]    </block>
[09:08:20.199]  </sequence>
[09:08:20.199]  
[09:08:20.426]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[09:08:20.426]  
[09:08:20.426]  <debugvars>
[09:08:20.427]    // Pre-defined
[09:08:20.427]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:08:20.427]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:08:20.428]    __dp=0x00000000
[09:08:20.428]    __ap=0x00000000
[09:08:20.428]    __traceout=0x00000000      (Trace Disabled)
[09:08:20.429]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:08:20.429]    __FlashAddr=0x00000000
[09:08:20.429]    __FlashLen=0x00000000
[09:08:20.429]    __FlashArg=0x00000000
[09:08:20.430]    __FlashOp=0x00000000
[09:08:20.430]    __Result=0x00000000
[09:08:20.430]  </debugvars>
[09:08:20.430]  
[09:08:20.431]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[09:08:20.431]    <block atomic="false" info="">
[09:08:20.431]      Sequence("ResetHardware");
[09:08:20.431]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:08:20.432]          <block atomic="false" info="">
[09:08:20.432]            __var nReset      = 0x80;
[09:08:20.432]              // -> [nReset <= 0x00000080]
[09:08:20.432]            DAP_SWJ_Pins(0x00, nReset, 0);
[09:08:20.435]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:08:20.435]          </block>
[09:08:20.435]          <control if="" while="1" timeout="50000" info="">
[09:08:20.435]            // while "1"  (timeout="50000")
[09:08:20.436]            // while-condition  =>  TRUE
[09:08:20.436]            // while "1"  (timeout="50000")
[09:08:20.436]            // while-condition  =>  TRUE
[09:08:20.436]            // while "1"  (timeout="50000")
[09:08:20.437]            // while-condition  =>  TRUE
[09:08:20.437]            // while "1"  (timeout="50000")
[09:08:20.437]            // while-condition  =>  TRUE
[09:08:20.437]            // while "1"  (timeout="50000")
[09:08:20.437]            // while-condition  =>  TRUE
[09:08:20.438]            // while "1"  (timeout="50000")
[09:08:20.438]            // while-condition  =>  TRUE
[09:08:20.438]            // while "1"  (timeout="50000")
[09:08:20.438]            // while-condition  =>  TRUE
[09:08:20.438]            // while "1"  (timeout="50000")
[09:08:20.439]            // while-condition  =>  TRUE
[09:08:20.439]            // while "1"  (timeout="50000")
[09:08:20.439]            // while-condition  =>  TRUE
[09:08:20.439]            // while "1"  (timeout="50000")
[09:08:20.439]            // while-condition  =>  TRUE
[09:08:20.440]            // while "1"  (timeout="50000")
[09:08:20.440]            // while-condition  =>  TRUE
[09:08:20.440]            // while "1"  (timeout="50000")
[09:08:20.440]            // while-condition  =>  TRUE
[09:08:20.440]            // while "1"  (timeout="50000")
[09:08:20.441]            // while-condition  =>  TRUE
[09:08:20.441]            // while "1"  (timeout="50000")
[09:08:20.441]            // while-condition  =>  TRUE
[09:08:20.442]            // while "1"  (timeout="50000")
[09:08:20.442]            // while-condition  =>  TRUE
[09:08:20.442]            // while "1"  (timeout="50000")
[09:08:20.442]            // while-condition  =>  TRUE
[09:08:20.442]            // while "1"  (timeout="50000")
[09:08:20.442]            // while-condition  =>  TRUE
[09:08:20.443]            // while "1"  (timeout="50000")
[09:08:20.443]            // while-condition  =>  TRUE
[09:08:20.443]            // while "1"  (timeout="50000")
[09:08:20.443]            // while-condition  =>  TRUE
[09:08:20.443]            // while "1"  (timeout="50000")
[09:08:20.443]            // while-condition  =>  TRUE
[09:08:20.444]            // while "1"  (timeout="50000")
[09:08:20.444]            // while-condition  =>  TRUE
[09:08:20.445]            // while "1"  (timeout="50000")
[09:08:20.445]            // while-condition  =>  TRUE
[09:08:20.445]            // while "1"  (timeout="50000")
[09:08:20.445]            // while-condition  =>  TRUE
[09:08:20.445]            // while "1"  (timeout="50000")
[09:08:20.446]            // while-condition  =>  TRUE
[09:08:20.446]            // while "1"  (timeout="50000")
[09:08:20.446]            // while-condition  =>  TRUE
[09:08:20.446]            // while "1"  (timeout="50000")
[09:08:20.446]            // while-condition  =>  TRUE
[09:08:20.447]            // while "1"  (timeout="50000")
[09:08:20.447]            // while-condition  =>  TRUE
[09:08:20.447]            // while "1"  (timeout="50000")
[09:08:20.447]            // while-condition  =>  TRUE
[09:08:20.447]            // while "1"  (timeout="50000")
[09:08:20.448]            // while-condition  =>  TRUE
[09:08:20.448]            // while "1"  (timeout="50000")
[09:08:20.448]            // while-condition  =>  TRUE
[09:08:20.448]            // while "1"  (timeout="50000")
[09:08:20.448]            // while-condition  =>  TRUE
[09:08:20.448]            // while "1"  (timeout="50000")
[09:08:20.449]            // while-condition  =>  TRUE
[09:08:20.449]            // while "1"  (timeout="50000")
[09:08:20.449]            // while-condition  =>  TRUE
[09:08:20.449]            // while "1"  (timeout="50000")
[09:08:20.450]            // while-condition  =>  TRUE
[09:08:20.450]            // while "1"  (timeout="50000")
[09:08:20.450]            // while-condition  =>  TRUE
[09:08:20.450]            // while "1"  (timeout="50000")
[09:08:20.450]            // while-condition  =>  TRUE
[09:08:20.451]            // while "1"  (timeout="50000")
[09:08:20.451]            // while-condition  =>  TRUE
[09:08:20.451]            // while "1"  (timeout="50000")
[09:08:20.451]            // while-condition  =>  TRUE
[09:08:20.451]            // while "1"  (timeout="50000")
[09:08:20.451]            // while-condition  =>  TRUE
[09:08:20.452]            // while "1"  (timeout="50000")
[09:08:20.452]            // while-condition  =>  TRUE
[09:08:20.452]            // while "1"  (timeout="50000")
[09:08:20.452]            // while-condition  =>  TRUE
[09:08:20.452]            // while "1"  (timeout="50000")
[09:08:20.453]            // while-condition  =>  TRUE
[09:08:20.453]            // while "1"  (timeout="50000")
[09:08:20.453]            // while-condition  =>  TRUE
[09:08:20.453]            // while "1"  (timeout="50000")
[09:08:20.453]            // while-condition  =>  TRUE
[09:08:20.454]            // while "1"  (timeout="50000")
[09:08:20.454]            // while-condition  =>  TRUE
[09:08:20.454]            // while "1"  (timeout="50000")
[09:08:20.454]            // while-condition  =>  TRUE
[09:08:20.454]            // while "1"  (timeout="50000")
[09:08:20.455]            // while-condition  =>  TRUE
[09:08:20.455]            // while "1"  (timeout="50000")
[09:08:20.455]            // while-condition  =>  TRUE
[09:08:20.455]            // while "1"  (timeout="50000")
[09:08:20.456]            // while-condition  =>  TRUE
[09:08:20.456]            // while "1"  (timeout="50000")
[09:08:20.456]            // while-condition  =>  TRUE
[09:08:20.456]            // while "1"  (timeout="50000")
[09:08:20.457]            // while-condition  =>  TRUE
[09:08:20.457]            // while "1"  (timeout="50000")
[09:08:20.457]            // while-condition  =>  TRUE
[09:08:20.457]            // while "1"  (timeout="50000")
[09:08:20.458]            // while-condition  =>  TRUE
[09:08:20.458]            // while "1"  (timeout="50000")
[09:08:20.458]            // while-condition  =>  TRUE
[09:08:20.458]            // while "1"  (timeout="50000")
[09:08:20.458]            // while-condition  =>  TRUE
[09:08:20.459]            // while "1"  (timeout="50000")
[09:08:20.459]            // while-condition  =>  TRUE
[09:08:20.459]            // while "1"  (timeout="50000")
[09:08:20.459]            // while-condition  =>  TRUE
[09:08:20.459]            // while "1"  (timeout="50000")
[09:08:20.459]            // while-condition  =>  TRUE
[09:08:20.459]            // while "1"  (timeout="50000")
[09:08:20.460]            // while-condition  =>  TRUE
[09:08:20.460]            // while "1"  (timeout="50000")
[09:08:20.460]            // while-condition  =>  TRUE
[09:08:20.460]            // while "1"  (timeout="50000")
[09:08:20.461]            // while-condition  =>  TRUE
[09:08:20.461]            // while "1"  (timeout="50000")
[09:08:20.461]            // while-condition  =>  TRUE
[09:08:20.461]            // while "1"  (timeout="50000")
[09:08:20.462]            // while-condition  =>  TRUE
[09:08:20.462]            // while "1"  (timeout="50000")
[09:08:20.462]            // while-condition  =>  TRUE
[09:08:20.462]            // while "1"  (timeout="50000")
[09:08:20.462]            // while-condition  =>  TRUE
[09:08:20.462]            // while "1"  (timeout="50000")
[09:08:20.463]            // while-condition  =>  TRUE
[09:08:20.463]            // while "1"  (timeout="50000")
[09:08:20.463]            // while-condition  =>  TRUE
[09:08:20.463]            // while "1"  (timeout="50000")
[09:08:20.464]            // while-condition  =>  TRUE
[09:08:20.464]            // while "1"  (timeout="50000")
[09:08:20.464]            // while-condition  =>  TRUE
[09:08:20.464]            // while "1"  (timeout="50000")
[09:08:20.465]            // while-condition  =>  TRUE
[09:08:20.465]            // while "1"  (timeout="50000")
[09:08:20.465]            // while-condition  =>  TRUE
[09:08:20.465]            // while "1"  (timeout="50000")
[09:08:20.466]            // while-condition  =>  TRUE
[09:08:20.466]            // while "1"  (timeout="50000")
[09:08:20.466]            // while-condition  =>  TRUE
[09:08:20.466]            // while "1"  (timeout="50000")
[09:08:20.466]            // while-condition  =>  TRUE
[09:08:20.467]            // while "1"  (timeout="50000")
[09:08:20.468]            // while-condition  =>  TRUE
[09:08:20.468]            // while "1"  (timeout="50000")
[09:08:20.468]            // while-condition  =>  TRUE
[09:08:20.468]            // while "1"  (timeout="50000")
[09:08:20.468]            // while-condition  =>  TRUE
[09:08:20.468]            // while "1"  (timeout="50000")
[09:08:20.469]            // while-condition  =>  TRUE
[09:08:20.469]            // while "1"  (timeout="50000")
[09:08:20.469]            // while-condition  =>  TRUE
[09:08:20.470]            // while "1"  (timeout="50000")
[09:08:20.470]            // while-condition  =>  TRUE
[09:08:20.470]            // while "1"  (timeout="50000")
[09:08:20.470]            // while-condition  =>  TRUE
[09:08:20.470]            // while "1"  (timeout="50000")
[09:08:20.470]            // while-condition  =>  TRUE
[09:08:20.471]            // while "1"  (timeout="50000")
[09:08:20.471]            // while-condition  =>  TRUE
[09:08:20.471]            // while "1"  (timeout="50000")
[09:08:20.471]            // while-condition  =>  TRUE
[09:08:20.471]            // while "1"  (timeout="50000")
[09:08:20.472]            // while-condition  =>  TRUE
[09:08:20.472]            // while "1"  (timeout="50000")
[09:08:20.472]            // while-condition  =>  TRUE
[09:08:20.472]            // while "1"  (timeout="50000")
[09:08:20.472]            // while-condition  =>  TRUE
[09:08:20.472]            // while "1"  (timeout="50000")
[09:08:20.473]            // while-condition  =>  TRUE
[09:08:20.473]            // while "1"  (timeout="50000")
[09:08:20.473]            // while-condition  =>  TRUE
[09:08:20.473]            // while "1"  (timeout="50000")
[09:08:20.473]            // while-condition  =>  TRUE
[09:08:20.473]            // while "1"  (timeout="50000")
[09:08:20.474]            // while-condition  =>  TRUE
[09:08:20.474]            // while "1"  (timeout="50000")
[09:08:20.474]            // while-condition  =>  TRUE
[09:08:20.474]            // while "1"  (timeout="50000")
[09:08:20.474]            // while-condition  =>  TRUE
[09:08:20.475]            // while "1"  (timeout="50000")
[09:08:20.475]            // while-condition  =>  TRUE
[09:08:20.475]            // while "1"  (timeout="50000")
[09:08:20.475]            // while-condition  =>  TRUE
[09:08:20.476]            // while "1"  (timeout="50000")
[09:08:20.476]            // while-condition  =>  TRUE
[09:08:20.476]            // while "1"  (timeout="50000")
[09:08:20.476]            // while-condition  =>  TRUE
[09:08:20.476]            // while "1"  (timeout="50000")
[09:08:20.477]            // while-condition  =>  TRUE
[09:08:20.477]            // while "1"  (timeout="50000")
[09:08:20.477]            // while-condition  =>  TRUE
[09:08:20.477]            // while "1"  (timeout="50000")
[09:08:20.477]            // while-condition  =>  TRUE
[09:08:20.477]            // while "1"  (timeout="50000")
[09:08:20.478]            // while-condition  =>  TRUE
[09:08:20.478]            // while "1"  (timeout="50000")
[09:08:20.478]            // while-condition  =>  TRUE
[09:08:20.478]            // while "1"  (timeout="50000")
[09:08:20.478]            // while-condition  =>  TRUE
[09:08:20.479]            // while "1"  (timeout="50000")
[09:08:20.479]            // while-condition  =>  TRUE
[09:08:20.479]            // while "1"  (timeout="50000")
[09:08:20.479]            // while-condition  =>  TRUE
[09:08:20.479]            // while "1"  (timeout="50000")
[09:08:20.480]            // while-condition  =>  TRUE
[09:08:20.480]            // while "1"  (timeout="50000")
[09:08:20.480]            // while-condition  =>  TRUE
[09:08:20.480]            // while "1"  (timeout="50000")
[09:08:20.480]            // while-condition  =>  TRUE
[09:08:20.481]            // while "1"  (timeout="50000")
[09:08:20.481]            // while-condition  =>  TRUE
[09:08:20.481]            // while "1"  (timeout="50000")
[09:08:20.481]            // while-condition  =>  TRUE
[09:08:20.481]            // while "1"  (timeout="50000")
[09:08:20.481]            // while-condition  =>  TRUE
[09:08:20.482]            // while "1"  (timeout="50000")
[09:08:20.482]            // while-condition  =>  TRUE
[09:08:20.482]            // while "1"  (timeout="50000")
[09:08:20.482]            // while-condition  =>  TRUE
[09:08:20.482]            // while "1"  (timeout="50000")
[09:08:20.482]            // while-condition  =>  TRUE
[09:08:20.483]            // while "1"  (timeout="50000")
[09:08:20.483]            // while-condition  =>  TRUE
[09:08:20.483]            // while "1"  (timeout="50000")
[09:08:20.483]            // while-condition  =>  TRUE
[09:08:20.483]            // while "1"  (timeout="50000")
[09:08:20.484]            // while-condition  =>  TRUE
[09:08:20.484]            // while "1"  (timeout="50000")
[09:08:20.484]            // while-condition  =>  TRUE
[09:08:20.484]            // while "1"  (timeout="50000")
[09:08:20.484]            // while-condition  =>  TRUE
[09:08:20.485]            // while "1"  (timeout="50000")
[09:08:20.485]            // while-condition  =>  TRUE
[09:08:20.485]            // while "1"  (timeout="50000")
[09:08:20.485]            // while-condition  =>  TRUE
[09:08:20.486]            // while "1"  (timeout="50000")
[09:08:20.486]            // while-condition  =>  TRUE
[09:08:20.487]            // while "1"  (timeout="50000")
[09:08:20.487]            // while-condition  =>  TRUE
[09:08:20.487]            // while "1"  (timeout="50000")
[09:08:20.487]            // while-condition  =>  TRUE
[09:08:20.487]            // while "1"  (timeout="50000")
[09:08:20.488]            // while-condition  =>  TRUE
[09:08:20.488]            // while "1"  (timeout="50000")
[09:08:20.488]            // while-condition  =>  TRUE
[09:08:20.488]            // while "1"  (timeout="50000")
[09:08:20.488]            // while-condition  =>  TRUE
[09:08:20.489]            // while "1"  (timeout="50000")
[09:08:20.489]            // while  =>  TIMEOUT
[09:08:20.489]            // end while "1"
[09:08:20.489]          </control>
[09:08:20.489]          <block atomic="false" info="">
[09:08:20.490]            DAP_SWJ_Pins(nReset, nReset, 0);
[09:08:20.492]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:08:20.492]          </block>
[09:08:20.492]          <control if="" while="1" timeout="10000" info="">
[09:08:20.492]            // while "1"  (timeout="10000")
[09:08:20.493]            // while-condition  =>  TRUE
[09:08:20.493]            // while "1"  (timeout="10000")
[09:08:20.493]            // while-condition  =>  TRUE
[09:08:20.493]            // while "1"  (timeout="10000")
[09:08:20.494]            // while-condition  =>  TRUE
[09:08:20.494]            // while "1"  (timeout="10000")
[09:08:20.494]            // while-condition  =>  TRUE
[09:08:20.495]            // while "1"  (timeout="10000")
[09:08:20.495]            // while-condition  =>  TRUE
[09:08:20.495]            // while "1"  (timeout="10000")
[09:08:20.495]            // while-condition  =>  TRUE
[09:08:20.496]            // while "1"  (timeout="10000")
[09:08:20.496]            // while-condition  =>  TRUE
[09:08:20.496]            // while "1"  (timeout="10000")
[09:08:20.497]            // while-condition  =>  TRUE
[09:08:20.497]            // while "1"  (timeout="10000")
[09:08:20.497]            // while-condition  =>  TRUE
[09:08:20.497]            // while "1"  (timeout="10000")
[09:08:20.498]            // while-condition  =>  TRUE
[09:08:20.498]            // while "1"  (timeout="10000")
[09:08:20.498]            // while-condition  =>  TRUE
[09:08:20.499]            // while "1"  (timeout="10000")
[09:08:20.499]            // while-condition  =>  TRUE
[09:08:20.499]            // while "1"  (timeout="10000")
[09:08:20.499]            // while-condition  =>  TRUE
[09:08:20.499]            // while "1"  (timeout="10000")
[09:08:20.499]            // while-condition  =>  TRUE
[09:08:20.500]            // while "1"  (timeout="10000")
[09:08:20.500]            // while-condition  =>  TRUE
[09:08:20.500]            // while "1"  (timeout="10000")
[09:08:20.501]            // while-condition  =>  TRUE
[09:08:20.501]            // while "1"  (timeout="10000")
[09:08:20.501]            // while-condition  =>  TRUE
[09:08:20.501]            // while "1"  (timeout="10000")
[09:08:20.502]            // while-condition  =>  TRUE
[09:08:20.502]            // while "1"  (timeout="10000")
[09:08:20.502]            // while-condition  =>  TRUE
[09:08:20.502]            // while "1"  (timeout="10000")
[09:08:20.502]            // while-condition  =>  TRUE
[09:08:20.502]            // while "1"  (timeout="10000")
[09:08:20.503]            // while-condition  =>  TRUE
[09:08:20.503]            // while "1"  (timeout="10000")
[09:08:20.503]            // while-condition  =>  TRUE
[09:08:20.503]            // while "1"  (timeout="10000")
[09:08:20.503]            // while-condition  =>  TRUE
[09:08:20.504]            // while "1"  (timeout="10000")
[09:08:20.504]            // while-condition  =>  TRUE
[09:08:20.504]            // while "1"  (timeout="10000")
[09:08:20.504]            // while-condition  =>  TRUE
[09:08:20.504]            // while "1"  (timeout="10000")
[09:08:20.504]            // while  =>  TIMEOUT
[09:08:20.504]            // end while "1"
[09:08:20.504]          </control>
[09:08:20.504]          <block atomic="true" info="">
[09:08:20.507]  
[09:08:20.507]  ! W001 : No atomic sequence support in debug unit
[09:08:20.507]  
[09:08:20.510]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:08:20.513]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:08:20.513]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:08:20.516]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:08:20.516]          </block>
[09:08:20.517]          <block atomic="false" info="">
[09:08:20.518]            __errorcontrol = 0x00000001;
[09:08:20.518]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:08:20.519]            ReadDP(0x0);
[09:08:20.522]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:08:20.522]            __errorcontrol = 0x00000000;
[09:08:20.523]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:08:20.524]          </block>
[09:08:20.524]        </sequence>
[09:08:20.525]      Sequence("DebugPortSetup");
[09:08:20.525]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:08:20.526]        </sequence>
[09:08:20.526]      Sequence("DebugPortStart");
[09:08:20.526]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:08:20.527]          <block atomic="false" info="">
[09:08:20.527]            __var SW_DP_ABORT  = 0x0;
[09:08:20.528]              // -> [SW_DP_ABORT <= 0x00000000]
[09:08:20.529]            __var DP_CTRL_STAT = 0x4;
[09:08:20.529]              // -> [DP_CTRL_STAT <= 0x00000004]
[09:08:20.530]            __var DP_SELECT    = 0x8;
[09:08:20.530]              // -> [DP_SELECT <= 0x00000008]
[09:08:20.530]            __var powered_down = 0;
[09:08:20.530]              // -> [powered_down <= 0x00000000]
[09:08:20.531]            WriteDP(DP_SELECT, 0x00000000);
[09:08:20.533]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:08:20.534]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:08:20.536]              // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:08:20.536]              // -> [powered_down <= 0x00000000]
[09:08:20.537]          </block>
[09:08:20.537]          <control if="powered_down" while="" timeout="0" info="">
[09:08:20.537]            // if-block "powered_down"
[09:08:20.538]              // =>  FALSE
[09:08:20.538]            // skip if-block "powered_down"
[09:08:20.538]          </control>
[09:08:20.538]        </sequence>
[09:08:20.539]      Sequence("DebugCoreStart");
[09:08:20.539]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:08:20.539]          <block atomic="true" info="">
[09:08:20.541]  
[09:08:20.541]  ! W001 : No atomic sequence support in debug unit
[09:08:20.541]  
[09:08:20.544]            __var DP_R_IDCODE    = 0x0;
[09:08:20.545]              // -> [DP_R_IDCODE <= 0x00000000]
[09:08:20.545]            __var DP_W_ABORT    = 0x0;
[09:08:20.546]              // -> [DP_W_ABORT <= 0x00000000]
[09:08:20.547]            __var DP_CTRLSTAT = 0x4;
[09:08:20.548]              // -> [DP_CTRLSTAT <= 0x00000004]
[09:08:20.548]            __var DP_W_SELECT    = 0x8;
[09:08:20.549]              // -> [DP_W_SELECT <= 0x00000008]
[09:08:20.549]            __var AP_TAR		= 0x4;
[09:08:20.549]              // -> [AP_TAR <= 0x00000004]
[09:08:20.550]            __var AP_BD0		= 0x0;
[09:08:20.550]              // -> [AP_BD0 <= 0x00000000]
[09:08:20.551]            __var AP_BD1		= 0x4;
[09:08:20.552]              // -> [AP_BD1 <= 0x00000004]
[09:08:20.552]            __var AP_BD2		= 0x8;
[09:08:20.552]              // -> [AP_BD2 <= 0x00000008]
[09:08:20.552]            __var PCWithinFlash = 0;
[09:08:20.553]              // -> [PCWithinFlash <= 0x00000000]
[09:08:20.553]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:08:20.558]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.559]          </block>
[09:08:20.562]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:08:20.563]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:08:20.570]              // -> [Read32(0xE000EDF0) => 0x00030003]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.579]            // while-condition  =>  FALSE
[09:08:20.579]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:08:20.579]          </control>
[09:08:20.580]          <block atomic="true" info="">
[09:08:20.584]  
[09:08:20.584]  ! W001 : No atomic sequence support in debug unit
[09:08:20.584]  
[09:08:20.586]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:08:20.598]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:08:20.598]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:08:20.601]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.601]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:08:20.605]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:08:20.605]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:08:20.610]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.610]          </block>
[09:08:20.611]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:08:20.611]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.614]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.614]            // while-condition  =>  TRUE
[09:08:20.615]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.619]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.620]            // while-condition  =>  TRUE
[09:08:20.620]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.623]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.623]            // while-condition  =>  TRUE
[09:08:20.624]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.627]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.627]            // while-condition  =>  TRUE
[09:08:20.628]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.631]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.631]            // while-condition  =>  TRUE
[09:08:20.632]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.635]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.635]            // while-condition  =>  TRUE
[09:08:20.635]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.638]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.638]            // while-condition  =>  TRUE
[09:08:20.639]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.641]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.641]            // while-condition  =>  TRUE
[09:08:20.641]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.643]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.644]            // while-condition  =>  TRUE
[09:08:20.644]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.646]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.647]            // while-condition  =>  TRUE
[09:08:20.647]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.649]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.650]            // while-condition  =>  TRUE
[09:08:20.650]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.653]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.653]            // while-condition  =>  TRUE
[09:08:20.654]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.656]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.656]            // while-condition  =>  TRUE
[09:08:20.656]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.659]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.659]            // while-condition  =>  TRUE
[09:08:20.659]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.662]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.662]            // while-condition  =>  TRUE
[09:08:20.662]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.664]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.665]            // while-condition  =>  TRUE
[09:08:20.665]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.668]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.668]            // while-condition  =>  TRUE
[09:08:20.669]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.672]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.672]            // while-condition  =>  TRUE
[09:08:20.672]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.674]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.675]            // while-condition  =>  TRUE
[09:08:20.675]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.678]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.679]            // while-condition  =>  TRUE
[09:08:20.679]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.682]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.682]            // while-condition  =>  TRUE
[09:08:20.683]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.686]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.686]            // while-condition  =>  TRUE
[09:08:20.687]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.690]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.691]            // while-condition  =>  TRUE
[09:08:20.691]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.694]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.694]            // while-condition  =>  TRUE
[09:08:20.695]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.698]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.699]            // while-condition  =>  TRUE
[09:08:20.699]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.702]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.702]            // while-condition  =>  TRUE
[09:08:20.703]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.706]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.706]            // while-condition  =>  TRUE
[09:08:20.707]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.710]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.710]            // while-condition  =>  TRUE
[09:08:20.711]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:08:20.711]            // while  =>  TIMEOUT
[09:08:20.712]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:08:20.712]          </control>
[09:08:20.713]          <block atomic="false" info="">
[09:08:20.713]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:08:20.716]              // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:08:20.716]              // -> [PCWithinFlash <= 0x00000000]
[09:08:20.717]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:08:20.720]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:08:20.720]          </block>
[09:08:20.721]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:08:20.721]            // if-block "PCWithinFlash == 0"
[09:08:20.722]              // =>  TRUE
[09:08:20.722]            // end if-block "PCWithinFlash == 0"
[09:08:20.723]          </control>
[09:08:20.723]        </sequence>
[09:08:20.724]    </block>
[09:08:20.725]  </sequence>
[09:08:20.725]  
[09:08:31.745]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[09:08:31.745]  
[09:08:31.745]  <debugvars>
[09:08:31.745]    // Pre-defined
[09:08:31.746]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:08:31.746]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:08:31.746]    __dp=0x00000000
[09:08:31.747]    __ap=0x00000000
[09:08:31.747]    __traceout=0x00000000      (Trace Disabled)
[09:08:31.747]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:08:31.748]    __FlashAddr=0x00000000
[09:08:31.748]    __FlashLen=0x00000000
[09:08:31.748]    __FlashArg=0x00000000
[09:08:31.749]    __FlashOp=0x00000000
[09:08:31.749]    __Result=0x00000000
[09:08:31.749]  </debugvars>
[09:08:31.749]  
[09:08:31.750]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[09:08:31.750]    <block atomic="false" info="">
[09:08:31.750]      __var nReset      = 0x80;
[09:08:31.751]        // -> [nReset <= 0x00000080]
[09:08:31.751]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:08:31.753]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:08:31.754]    </block>
[09:08:31.755]    <control if="" while="1" timeout="50000" info="">
[09:08:31.755]      // while "1"  (timeout="50000")
[09:08:31.756]      // while-condition  =>  TRUE
[09:08:31.756]      // while "1"  (timeout="50000")
[09:08:31.756]      // while-condition  =>  TRUE
[09:08:31.757]      // while "1"  (timeout="50000")
[09:08:31.757]      // while-condition  =>  TRUE
[09:08:31.757]      // while "1"  (timeout="50000")
[09:08:31.758]      // while-condition  =>  TRUE
[09:08:31.758]      // while "1"  (timeout="50000")
[09:08:31.758]      // while-condition  =>  TRUE
[09:08:31.758]      // while "1"  (timeout="50000")
[09:08:31.759]      // while-condition  =>  TRUE
[09:08:31.760]      // while "1"  (timeout="50000")
[09:08:31.760]      // while-condition  =>  TRUE
[09:08:31.760]      // while "1"  (timeout="50000")
[09:08:31.760]      // while-condition  =>  TRUE
[09:08:31.761]      // while "1"  (timeout="50000")
[09:08:31.761]      // while-condition  =>  TRUE
[09:08:31.761]      // while "1"  (timeout="50000")
[09:08:31.761]      // while-condition  =>  TRUE
[09:08:31.762]      // while "1"  (timeout="50000")
[09:08:31.762]      // while-condition  =>  TRUE
[09:08:31.762]      // while "1"  (timeout="50000")
[09:08:31.762]      // while-condition  =>  TRUE
[09:08:31.763]      // while "1"  (timeout="50000")
[09:08:31.763]      // while-condition  =>  TRUE
[09:08:31.763]      // while "1"  (timeout="50000")
[09:08:31.763]      // while-condition  =>  TRUE
[09:08:31.764]      // while "1"  (timeout="50000")
[09:08:31.764]      // while-condition  =>  TRUE
[09:08:31.764]      // while "1"  (timeout="50000")
[09:08:31.764]      // while-condition  =>  TRUE
[09:08:31.764]      // while "1"  (timeout="50000")
[09:08:31.764]      // while-condition  =>  TRUE
[09:08:31.764]      // while "1"  (timeout="50000")
[09:08:31.765]      // while-condition  =>  TRUE
[09:08:31.765]      // while "1"  (timeout="50000")
[09:08:31.765]      // while-condition  =>  TRUE
[09:08:31.766]      // while "1"  (timeout="50000")
[09:08:31.766]      // while-condition  =>  TRUE
[09:08:31.766]      // while "1"  (timeout="50000")
[09:08:31.766]      // while-condition  =>  TRUE
[09:08:31.766]      // while "1"  (timeout="50000")
[09:08:31.766]      // while-condition  =>  TRUE
[09:08:31.767]      // while "1"  (timeout="50000")
[09:08:31.767]      // while-condition  =>  TRUE
[09:08:31.767]      // while "1"  (timeout="50000")
[09:08:31.767]      // while-condition  =>  TRUE
[09:08:31.767]      // while "1"  (timeout="50000")
[09:08:31.768]      // while-condition  =>  TRUE
[09:08:31.768]      // while "1"  (timeout="50000")
[09:08:31.768]      // while-condition  =>  TRUE
[09:08:31.768]      // while "1"  (timeout="50000")
[09:08:31.768]      // while-condition  =>  TRUE
[09:08:31.768]      // while "1"  (timeout="50000")
[09:08:31.768]      // while-condition  =>  TRUE
[09:08:31.768]      // while "1"  (timeout="50000")
[09:08:31.769]      // while-condition  =>  TRUE
[09:08:31.769]      // while "1"  (timeout="50000")
[09:08:31.770]      // while-condition  =>  TRUE
[09:08:31.770]      // while "1"  (timeout="50000")
[09:08:31.770]      // while-condition  =>  TRUE
[09:08:31.770]      // while "1"  (timeout="50000")
[09:08:31.770]      // while-condition  =>  TRUE
[09:08:31.771]      // while "1"  (timeout="50000")
[09:08:31.771]      // while-condition  =>  TRUE
[09:08:31.771]      // while "1"  (timeout="50000")
[09:08:31.771]      // while-condition  =>  TRUE
[09:08:31.771]      // while "1"  (timeout="50000")
[09:08:31.771]      // while-condition  =>  TRUE
[09:08:31.772]      // while "1"  (timeout="50000")
[09:08:31.772]      // while-condition  =>  TRUE
[09:08:31.772]      // while "1"  (timeout="50000")
[09:08:31.772]      // while-condition  =>  TRUE
[09:08:31.772]      // while "1"  (timeout="50000")
[09:08:31.772]      // while-condition  =>  TRUE
[09:08:31.772]      // while "1"  (timeout="50000")
[09:08:31.772]      // while-condition  =>  TRUE
[09:08:31.772]      // while "1"  (timeout="50000")
[09:08:31.773]      // while-condition  =>  TRUE
[09:08:31.774]      // while "1"  (timeout="50000")
[09:08:31.774]      // while-condition  =>  TRUE
[09:08:31.774]      // while "1"  (timeout="50000")
[09:08:31.774]      // while-condition  =>  TRUE
[09:08:31.774]      // while "1"  (timeout="50000")
[09:08:31.774]      // while-condition  =>  TRUE
[09:08:31.774]      // while "1"  (timeout="50000")
[09:08:31.775]      // while-condition  =>  TRUE
[09:08:31.775]      // while "1"  (timeout="50000")
[09:08:31.775]      // while-condition  =>  TRUE
[09:08:31.775]      // while "1"  (timeout="50000")
[09:08:31.775]      // while-condition  =>  TRUE
[09:08:31.776]      // while "1"  (timeout="50000")
[09:08:31.776]      // while-condition  =>  TRUE
[09:08:31.776]      // while "1"  (timeout="50000")
[09:08:31.776]      // while-condition  =>  TRUE
[09:08:31.776]      // while "1"  (timeout="50000")
[09:08:31.777]      // while-condition  =>  TRUE
[09:08:31.777]      // while "1"  (timeout="50000")
[09:08:31.777]      // while-condition  =>  TRUE
[09:08:31.777]      // while "1"  (timeout="50000")
[09:08:31.778]      // while-condition  =>  TRUE
[09:08:31.778]      // while "1"  (timeout="50000")
[09:08:31.778]      // while-condition  =>  TRUE
[09:08:31.778]      // while "1"  (timeout="50000")
[09:08:31.778]      // while-condition  =>  TRUE
[09:08:31.778]      // while "1"  (timeout="50000")
[09:08:31.778]      // while-condition  =>  TRUE
[09:08:31.778]      // while "1"  (timeout="50000")
[09:08:31.779]      // while-condition  =>  TRUE
[09:08:31.779]      // while "1"  (timeout="50000")
[09:08:31.780]      // while-condition  =>  TRUE
[09:08:31.780]      // while "1"  (timeout="50000")
[09:08:31.780]      // while-condition  =>  TRUE
[09:08:31.780]      // while "1"  (timeout="50000")
[09:08:31.780]      // while-condition  =>  TRUE
[09:08:31.781]      // while "1"  (timeout="50000")
[09:08:31.781]      // while-condition  =>  TRUE
[09:08:31.781]      // while "1"  (timeout="50000")
[09:08:31.781]      // while-condition  =>  TRUE
[09:08:31.781]      // while "1"  (timeout="50000")
[09:08:31.782]      // while-condition  =>  TRUE
[09:08:31.782]      // while "1"  (timeout="50000")
[09:08:31.782]      // while-condition  =>  TRUE
[09:08:31.782]      // while "1"  (timeout="50000")
[09:08:31.782]      // while-condition  =>  TRUE
[09:08:31.783]      // while "1"  (timeout="50000")
[09:08:31.783]      // while-condition  =>  TRUE
[09:08:31.783]      // while "1"  (timeout="50000")
[09:08:31.783]      // while-condition  =>  TRUE
[09:08:31.783]      // while "1"  (timeout="50000")
[09:08:31.784]      // while-condition  =>  TRUE
[09:08:31.784]      // while "1"  (timeout="50000")
[09:08:31.784]      // while-condition  =>  TRUE
[09:08:31.784]      // while "1"  (timeout="50000")
[09:08:31.784]      // while-condition  =>  TRUE
[09:08:31.784]      // while "1"  (timeout="50000")
[09:08:31.785]      // while-condition  =>  TRUE
[09:08:31.785]      // while "1"  (timeout="50000")
[09:08:31.785]      // while-condition  =>  TRUE
[09:08:31.785]      // while "1"  (timeout="50000")
[09:08:31.785]      // while-condition  =>  TRUE
[09:08:31.785]      // while "1"  (timeout="50000")
[09:08:31.786]      // while-condition  =>  TRUE
[09:08:31.786]      // while "1"  (timeout="50000")
[09:08:31.786]      // while-condition  =>  TRUE
[09:08:31.786]      // while "1"  (timeout="50000")
[09:08:31.786]      // while-condition  =>  TRUE
[09:08:31.787]      // while "1"  (timeout="50000")
[09:08:31.787]      // while-condition  =>  TRUE
[09:08:31.787]      // while "1"  (timeout="50000")
[09:08:31.787]      // while-condition  =>  TRUE
[09:08:31.787]      // while "1"  (timeout="50000")
[09:08:31.787]      // while-condition  =>  TRUE
[09:08:31.787]      // while "1"  (timeout="50000")
[09:08:31.787]      // while-condition  =>  TRUE
[09:08:31.787]      // while "1"  (timeout="50000")
[09:08:31.788]      // while-condition  =>  TRUE
[09:08:31.788]      // while "1"  (timeout="50000")
[09:08:31.788]      // while-condition  =>  TRUE
[09:08:31.788]      // while "1"  (timeout="50000")
[09:08:31.788]      // while-condition  =>  TRUE
[09:08:31.790]      // while "1"  (timeout="50000")
[09:08:31.790]      // while-condition  =>  TRUE
[09:08:31.790]      // while "1"  (timeout="50000")
[09:08:31.790]      // while-condition  =>  TRUE
[09:08:31.790]      // while "1"  (timeout="50000")
[09:08:31.791]      // while-condition  =>  TRUE
[09:08:31.791]      // while "1"  (timeout="50000")
[09:08:31.791]      // while-condition  =>  TRUE
[09:08:31.791]      // while "1"  (timeout="50000")
[09:08:31.791]      // while-condition  =>  TRUE
[09:08:31.792]      // while "1"  (timeout="50000")
[09:08:31.792]      // while-condition  =>  TRUE
[09:08:31.792]      // while "1"  (timeout="50000")
[09:08:31.792]      // while-condition  =>  TRUE
[09:08:31.792]      // while "1"  (timeout="50000")
[09:08:31.792]      // while-condition  =>  TRUE
[09:08:31.792]      // while "1"  (timeout="50000")
[09:08:31.793]      // while-condition  =>  TRUE
[09:08:31.793]      // while "1"  (timeout="50000")
[09:08:31.793]      // while-condition  =>  TRUE
[09:08:31.793]      // while "1"  (timeout="50000")
[09:08:31.793]      // while-condition  =>  TRUE
[09:08:31.794]      // while "1"  (timeout="50000")
[09:08:31.794]      // while-condition  =>  TRUE
[09:08:31.794]      // while "1"  (timeout="50000")
[09:08:31.794]      // while-condition  =>  TRUE
[09:08:31.795]      // while "1"  (timeout="50000")
[09:08:31.795]      // while-condition  =>  TRUE
[09:08:31.795]      // while "1"  (timeout="50000")
[09:08:31.795]      // while-condition  =>  TRUE
[09:08:31.795]      // while "1"  (timeout="50000")
[09:08:31.796]      // while-condition  =>  TRUE
[09:08:31.796]      // while "1"  (timeout="50000")
[09:08:31.796]      // while-condition  =>  TRUE
[09:08:31.796]      // while "1"  (timeout="50000")
[09:08:31.796]      // while-condition  =>  TRUE
[09:08:31.796]      // while "1"  (timeout="50000")
[09:08:31.797]      // while-condition  =>  TRUE
[09:08:31.797]      // while "1"  (timeout="50000")
[09:08:31.797]      // while-condition  =>  TRUE
[09:08:31.797]      // while "1"  (timeout="50000")
[09:08:31.798]      // while-condition  =>  TRUE
[09:08:31.798]      // while "1"  (timeout="50000")
[09:08:31.798]      // while-condition  =>  TRUE
[09:08:31.798]      // while "1"  (timeout="50000")
[09:08:31.798]      // while-condition  =>  TRUE
[09:08:31.798]      // while "1"  (timeout="50000")
[09:08:31.798]      // while-condition  =>  TRUE
[09:08:31.798]      // while "1"  (timeout="50000")
[09:08:31.798]      // while-condition  =>  TRUE
[09:08:31.798]      // while "1"  (timeout="50000")
[09:08:31.799]      // while-condition  =>  TRUE
[09:08:31.800]      // while "1"  (timeout="50000")
[09:08:31.800]      // while-condition  =>  TRUE
[09:08:31.800]      // while "1"  (timeout="50000")
[09:08:31.800]      // while-condition  =>  TRUE
[09:08:31.800]      // while "1"  (timeout="50000")
[09:08:31.801]      // while-condition  =>  TRUE
[09:08:31.801]      // while "1"  (timeout="50000")
[09:08:31.801]      // while-condition  =>  TRUE
[09:08:31.801]      // while "1"  (timeout="50000")
[09:08:31.801]      // while-condition  =>  TRUE
[09:08:31.801]      // while "1"  (timeout="50000")
[09:08:31.802]      // while-condition  =>  TRUE
[09:08:31.802]      // while "1"  (timeout="50000")
[09:08:31.802]      // while-condition  =>  TRUE
[09:08:31.802]      // while "1"  (timeout="50000")
[09:08:31.802]      // while-condition  =>  TRUE
[09:08:31.803]      // while "1"  (timeout="50000")
[09:08:31.803]      // while-condition  =>  TRUE
[09:08:31.803]      // while "1"  (timeout="50000")
[09:08:31.803]      // while-condition  =>  TRUE
[09:08:31.803]      // while "1"  (timeout="50000")
[09:08:31.804]      // while-condition  =>  TRUE
[09:08:31.804]      // while "1"  (timeout="50000")
[09:08:31.804]      // while-condition  =>  TRUE
[09:08:31.804]      // while "1"  (timeout="50000")
[09:08:31.805]      // while-condition  =>  TRUE
[09:08:31.805]      // while "1"  (timeout="50000")
[09:08:31.805]      // while-condition  =>  TRUE
[09:08:31.805]      // while "1"  (timeout="50000")
[09:08:31.805]      // while-condition  =>  TRUE
[09:08:31.806]      // while "1"  (timeout="50000")
[09:08:31.806]      // while-condition  =>  TRUE
[09:08:31.806]      // while "1"  (timeout="50000")
[09:08:31.806]      // while-condition  =>  TRUE
[09:08:31.806]      // while "1"  (timeout="50000")
[09:08:31.806]      // while-condition  =>  TRUE
[09:08:31.807]      // while "1"  (timeout="50000")
[09:08:31.807]      // while-condition  =>  TRUE
[09:08:31.807]      // while "1"  (timeout="50000")
[09:08:31.807]      // while-condition  =>  TRUE
[09:08:31.808]      // while "1"  (timeout="50000")
[09:08:31.808]      // while-condition  =>  TRUE
[09:08:31.808]      // while "1"  (timeout="50000")
[09:08:31.808]      // while-condition  =>  TRUE
[09:08:31.808]      // while "1"  (timeout="50000")
[09:08:31.808]      // while-condition  =>  TRUE
[09:08:31.808]      // while "1"  (timeout="50000")
[09:08:31.808]      // while-condition  =>  TRUE
[09:08:31.808]      // while "1"  (timeout="50000")
[09:08:31.809]      // while-condition  =>  TRUE
[09:08:31.809]      // while "1"  (timeout="50000")
[09:08:31.809]      // while-condition  =>  TRUE
[09:08:31.809]      // while "1"  (timeout="50000")
[09:08:31.809]      // while-condition  =>  TRUE
[09:08:31.811]      // while "1"  (timeout="50000")
[09:08:31.811]      // while-condition  =>  TRUE
[09:08:31.811]      // while "1"  (timeout="50000")
[09:08:31.811]      // while-condition  =>  TRUE
[09:08:31.811]      // while "1"  (timeout="50000")
[09:08:31.811]      // while-condition  =>  TRUE
[09:08:31.812]      // while "1"  (timeout="50000")
[09:08:31.812]      // while-condition  =>  TRUE
[09:08:31.812]      // while "1"  (timeout="50000")
[09:08:31.812]      // while-condition  =>  TRUE
[09:08:31.812]      // while "1"  (timeout="50000")
[09:08:31.813]      // while-condition  =>  TRUE
[09:08:31.813]      // while "1"  (timeout="50000")
[09:08:31.813]      // while-condition  =>  TRUE
[09:08:31.813]      // while "1"  (timeout="50000")
[09:08:31.813]      // while-condition  =>  TRUE
[09:08:31.814]      // while "1"  (timeout="50000")
[09:08:31.814]      // while-condition  =>  TRUE
[09:08:31.814]      // while "1"  (timeout="50000")
[09:08:31.814]      // while-condition  =>  TRUE
[09:08:31.814]      // while "1"  (timeout="50000")
[09:08:31.815]      // while-condition  =>  TRUE
[09:08:31.815]      // while "1"  (timeout="50000")
[09:08:31.815]      // while-condition  =>  TRUE
[09:08:31.815]      // while "1"  (timeout="50000")
[09:08:31.815]      // while-condition  =>  TRUE
[09:08:31.816]      // while "1"  (timeout="50000")
[09:08:31.816]      // while-condition  =>  TRUE
[09:08:31.816]      // while "1"  (timeout="50000")
[09:08:31.816]      // while-condition  =>  TRUE
[09:08:31.816]      // while "1"  (timeout="50000")
[09:08:31.816]      // while-condition  =>  TRUE
[09:08:31.817]      // while "1"  (timeout="50000")
[09:08:31.817]      // while  =>  TIMEOUT
[09:08:31.817]      // end while "1"
[09:08:31.817]    </control>
[09:08:31.817]    <block atomic="false" info="">
[09:08:31.817]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:08:31.819]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:08:31.819]    </block>
[09:08:31.820]  </sequence>
[09:08:31.820]  
[09:09:13.782]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:09:13.782]  
[09:09:13.782]  <debugvars>
[09:09:13.782]    // Pre-defined
[09:09:13.783]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:09:13.783]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:09:13.783]    __dp=0x00000000
[09:09:13.784]    __ap=0x00000000
[09:09:13.784]    __traceout=0x00000000      (Trace Disabled)
[09:09:13.784]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:09:13.785]    __FlashAddr=0x00000000
[09:09:13.785]    __FlashLen=0x00000000
[09:09:13.785]    __FlashArg=0x00000000
[09:09:13.786]    __FlashOp=0x00000000
[09:09:13.786]    __Result=0x00000000
[09:09:13.786]  </debugvars>
[09:09:13.787]  
[09:09:13.787]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:09:13.787]    <block atomic="false" info="">
[09:09:13.787]      __var nReset      = 0x80;
[09:09:13.788]        // -> [nReset <= 0x00000080]
[09:09:13.788]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:09:13.791]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:09:13.791]    </block>
[09:09:13.791]    <control if="" while="1" timeout="50000" info="">
[09:09:13.792]      // while "1"  (timeout="50000")
[09:09:13.792]      // while-condition  =>  TRUE
[09:09:13.792]      // while "1"  (timeout="50000")
[09:09:13.792]      // while-condition  =>  TRUE
[09:09:13.793]      // while "1"  (timeout="50000")
[09:09:13.793]      // while-condition  =>  TRUE
[09:09:13.793]      // while "1"  (timeout="50000")
[09:09:13.794]      // while-condition  =>  TRUE
[09:09:13.794]      // while "1"  (timeout="50000")
[09:09:13.794]      // while-condition  =>  TRUE
[09:09:13.794]      // while "1"  (timeout="50000")
[09:09:13.795]      // while-condition  =>  TRUE
[09:09:13.795]      // while "1"  (timeout="50000")
[09:09:13.795]      // while-condition  =>  TRUE
[09:09:13.796]      // while "1"  (timeout="50000")
[09:09:13.796]      // while-condition  =>  TRUE
[09:09:13.796]      // while "1"  (timeout="50000")
[09:09:13.797]      // while-condition  =>  TRUE
[09:09:13.797]      // while "1"  (timeout="50000")
[09:09:13.797]      // while-condition  =>  TRUE
[09:09:13.797]      // while "1"  (timeout="50000")
[09:09:13.798]      // while-condition  =>  TRUE
[09:09:13.798]      // while "1"  (timeout="50000")
[09:09:13.798]      // while-condition  =>  TRUE
[09:09:13.799]      // while "1"  (timeout="50000")
[09:09:13.799]      // while-condition  =>  TRUE
[09:09:13.799]      // while "1"  (timeout="50000")
[09:09:13.799]      // while-condition  =>  TRUE
[09:09:13.800]      // while "1"  (timeout="50000")
[09:09:13.800]      // while-condition  =>  TRUE
[09:09:13.800]      // while "1"  (timeout="50000")
[09:09:13.800]      // while-condition  =>  TRUE
[09:09:13.800]      // while "1"  (timeout="50000")
[09:09:13.801]      // while-condition  =>  TRUE
[09:09:13.801]      // while "1"  (timeout="50000")
[09:09:13.801]      // while-condition  =>  TRUE
[09:09:13.801]      // while "1"  (timeout="50000")
[09:09:13.801]      // while-condition  =>  TRUE
[09:09:13.802]      // while "1"  (timeout="50000")
[09:09:13.802]      // while-condition  =>  TRUE
[09:09:13.802]      // while "1"  (timeout="50000")
[09:09:13.802]      // while-condition  =>  TRUE
[09:09:13.802]      // while "1"  (timeout="50000")
[09:09:13.803]      // while-condition  =>  TRUE
[09:09:13.803]      // while "1"  (timeout="50000")
[09:09:13.803]      // while-condition  =>  TRUE
[09:09:13.803]      // while "1"  (timeout="50000")
[09:09:13.803]      // while-condition  =>  TRUE
[09:09:13.804]      // while "1"  (timeout="50000")
[09:09:13.804]      // while-condition  =>  TRUE
[09:09:13.804]      // while "1"  (timeout="50000")
[09:09:13.804]      // while-condition  =>  TRUE
[09:09:13.804]      // while "1"  (timeout="50000")
[09:09:13.805]      // while-condition  =>  TRUE
[09:09:13.805]      // while "1"  (timeout="50000")
[09:09:13.805]      // while-condition  =>  TRUE
[09:09:13.805]      // while "1"  (timeout="50000")
[09:09:13.805]      // while-condition  =>  TRUE
[09:09:13.806]      // while "1"  (timeout="50000")
[09:09:13.806]      // while-condition  =>  TRUE
[09:09:13.806]      // while "1"  (timeout="50000")
[09:09:13.806]      // while-condition  =>  TRUE
[09:09:13.806]      // while "1"  (timeout="50000")
[09:09:13.807]      // while-condition  =>  TRUE
[09:09:13.807]      // while "1"  (timeout="50000")
[09:09:13.807]      // while-condition  =>  TRUE
[09:09:13.807]      // while "1"  (timeout="50000")
[09:09:13.807]      // while-condition  =>  TRUE
[09:09:13.808]      // while "1"  (timeout="50000")
[09:09:13.808]      // while-condition  =>  TRUE
[09:09:13.808]      // while "1"  (timeout="50000")
[09:09:13.808]      // while-condition  =>  TRUE
[09:09:13.808]      // while "1"  (timeout="50000")
[09:09:13.809]      // while-condition  =>  TRUE
[09:09:13.809]      // while "1"  (timeout="50000")
[09:09:13.809]      // while-condition  =>  TRUE
[09:09:13.809]      // while "1"  (timeout="50000")
[09:09:13.810]      // while-condition  =>  TRUE
[09:09:13.810]      // while "1"  (timeout="50000")
[09:09:13.810]      // while-condition  =>  TRUE
[09:09:13.810]      // while "1"  (timeout="50000")
[09:09:13.810]      // while-condition  =>  TRUE
[09:09:13.811]      // while "1"  (timeout="50000")
[09:09:13.811]      // while-condition  =>  TRUE
[09:09:13.811]      // while "1"  (timeout="50000")
[09:09:13.811]      // while-condition  =>  TRUE
[09:09:13.812]      // while "1"  (timeout="50000")
[09:09:13.812]      // while-condition  =>  TRUE
[09:09:13.812]      // while "1"  (timeout="50000")
[09:09:13.812]      // while-condition  =>  TRUE
[09:09:13.813]      // while "1"  (timeout="50000")
[09:09:13.813]      // while-condition  =>  TRUE
[09:09:13.813]      // while "1"  (timeout="50000")
[09:09:13.813]      // while-condition  =>  TRUE
[09:09:13.814]      // while "1"  (timeout="50000")
[09:09:13.814]      // while-condition  =>  TRUE
[09:09:13.814]      // while "1"  (timeout="50000")
[09:09:13.814]      // while-condition  =>  TRUE
[09:09:13.814]      // while "1"  (timeout="50000")
[09:09:13.815]      // while-condition  =>  TRUE
[09:09:13.815]      // while "1"  (timeout="50000")
[09:09:13.815]      // while-condition  =>  TRUE
[09:09:13.815]      // while "1"  (timeout="50000")
[09:09:13.816]      // while-condition  =>  TRUE
[09:09:13.816]      // while "1"  (timeout="50000")
[09:09:13.816]      // while-condition  =>  TRUE
[09:09:13.816]      // while "1"  (timeout="50000")
[09:09:13.816]      // while-condition  =>  TRUE
[09:09:13.817]      // while "1"  (timeout="50000")
[09:09:13.817]      // while-condition  =>  TRUE
[09:09:13.817]      // while "1"  (timeout="50000")
[09:09:13.817]      // while-condition  =>  TRUE
[09:09:13.818]      // while "1"  (timeout="50000")
[09:09:13.818]      // while-condition  =>  TRUE
[09:09:13.818]      // while "1"  (timeout="50000")
[09:09:13.818]      // while-condition  =>  TRUE
[09:09:13.818]      // while "1"  (timeout="50000")
[09:09:13.819]      // while-condition  =>  TRUE
[09:09:13.819]      // while "1"  (timeout="50000")
[09:09:13.819]      // while-condition  =>  TRUE
[09:09:13.820]      // while "1"  (timeout="50000")
[09:09:13.820]      // while-condition  =>  TRUE
[09:09:13.820]      // while "1"  (timeout="50000")
[09:09:13.821]      // while-condition  =>  TRUE
[09:09:13.821]      // while "1"  (timeout="50000")
[09:09:13.821]      // while-condition  =>  TRUE
[09:09:13.822]      // while "1"  (timeout="50000")
[09:09:13.822]      // while-condition  =>  TRUE
[09:09:13.822]      // while "1"  (timeout="50000")
[09:09:13.822]      // while-condition  =>  TRUE
[09:09:13.823]      // while "1"  (timeout="50000")
[09:09:13.823]      // while-condition  =>  TRUE
[09:09:13.823]      // while "1"  (timeout="50000")
[09:09:13.823]      // while-condition  =>  TRUE
[09:09:13.823]      // while "1"  (timeout="50000")
[09:09:13.824]      // while-condition  =>  TRUE
[09:09:13.824]      // while "1"  (timeout="50000")
[09:09:13.824]      // while-condition  =>  TRUE
[09:09:13.824]      // while "1"  (timeout="50000")
[09:09:13.825]      // while-condition  =>  TRUE
[09:09:13.825]      // while "1"  (timeout="50000")
[09:09:13.825]      // while-condition  =>  TRUE
[09:09:13.825]      // while "1"  (timeout="50000")
[09:09:13.825]      // while-condition  =>  TRUE
[09:09:13.826]      // while "1"  (timeout="50000")
[09:09:13.826]      // while-condition  =>  TRUE
[09:09:13.826]      // while "1"  (timeout="50000")
[09:09:13.826]      // while-condition  =>  TRUE
[09:09:13.827]      // while "1"  (timeout="50000")
[09:09:13.827]      // while-condition  =>  TRUE
[09:09:13.827]      // while "1"  (timeout="50000")
[09:09:13.827]      // while-condition  =>  TRUE
[09:09:13.828]      // while "1"  (timeout="50000")
[09:09:13.828]      // while-condition  =>  TRUE
[09:09:13.828]      // while "1"  (timeout="50000")
[09:09:13.828]      // while-condition  =>  TRUE
[09:09:13.828]      // while "1"  (timeout="50000")
[09:09:13.829]      // while-condition  =>  TRUE
[09:09:13.829]      // while "1"  (timeout="50000")
[09:09:13.829]      // while-condition  =>  TRUE
[09:09:13.829]      // while "1"  (timeout="50000")
[09:09:13.829]      // while-condition  =>  TRUE
[09:09:13.830]      // while "1"  (timeout="50000")
[09:09:13.830]      // while-condition  =>  TRUE
[09:09:13.830]      // while "1"  (timeout="50000")
[09:09:13.830]      // while-condition  =>  TRUE
[09:09:13.830]      // while "1"  (timeout="50000")
[09:09:13.831]      // while-condition  =>  TRUE
[09:09:13.831]      // while "1"  (timeout="50000")
[09:09:13.831]      // while-condition  =>  TRUE
[09:09:13.831]      // while "1"  (timeout="50000")
[09:09:13.831]      // while-condition  =>  TRUE
[09:09:13.832]      // while "1"  (timeout="50000")
[09:09:13.832]      // while-condition  =>  TRUE
[09:09:13.832]      // while "1"  (timeout="50000")
[09:09:13.832]      // while-condition  =>  TRUE
[09:09:13.832]      // while "1"  (timeout="50000")
[09:09:13.833]      // while-condition  =>  TRUE
[09:09:13.833]      // while "1"  (timeout="50000")
[09:09:13.833]      // while-condition  =>  TRUE
[09:09:13.833]      // while "1"  (timeout="50000")
[09:09:13.833]      // while-condition  =>  TRUE
[09:09:13.834]      // while "1"  (timeout="50000")
[09:09:13.834]      // while-condition  =>  TRUE
[09:09:13.834]      // while "1"  (timeout="50000")
[09:09:13.834]      // while-condition  =>  TRUE
[09:09:13.834]      // while "1"  (timeout="50000")
[09:09:13.835]      // while-condition  =>  TRUE
[09:09:13.835]      // while "1"  (timeout="50000")
[09:09:13.835]      // while-condition  =>  TRUE
[09:09:13.835]      // while "1"  (timeout="50000")
[09:09:13.835]      // while-condition  =>  TRUE
[09:09:13.836]      // while "1"  (timeout="50000")
[09:09:13.836]      // while-condition  =>  TRUE
[09:09:13.836]      // while "1"  (timeout="50000")
[09:09:13.836]      // while-condition  =>  TRUE
[09:09:13.836]      // while "1"  (timeout="50000")
[09:09:13.837]      // while-condition  =>  TRUE
[09:09:13.837]      // while "1"  (timeout="50000")
[09:09:13.837]      // while-condition  =>  TRUE
[09:09:13.837]      // while "1"  (timeout="50000")
[09:09:13.837]      // while-condition  =>  TRUE
[09:09:13.838]      // while "1"  (timeout="50000")
[09:09:13.838]      // while-condition  =>  TRUE
[09:09:13.838]      // while "1"  (timeout="50000")
[09:09:13.838]      // while-condition  =>  TRUE
[09:09:13.838]      // while "1"  (timeout="50000")
[09:09:13.839]      // while-condition  =>  TRUE
[09:09:13.839]      // while "1"  (timeout="50000")
[09:09:13.839]      // while-condition  =>  TRUE
[09:09:13.839]      // while "1"  (timeout="50000")
[09:09:13.840]      // while-condition  =>  TRUE
[09:09:13.840]      // while "1"  (timeout="50000")
[09:09:13.840]      // while-condition  =>  TRUE
[09:09:13.840]      // while "1"  (timeout="50000")
[09:09:13.841]      // while-condition  =>  TRUE
[09:09:13.841]      // while "1"  (timeout="50000")
[09:09:13.841]      // while-condition  =>  TRUE
[09:09:13.841]      // while "1"  (timeout="50000")
[09:09:13.841]      // while-condition  =>  TRUE
[09:09:13.842]      // while "1"  (timeout="50000")
[09:09:13.842]      // while-condition  =>  TRUE
[09:09:13.842]      // while "1"  (timeout="50000")
[09:09:13.842]      // while-condition  =>  TRUE
[09:09:13.843]      // while "1"  (timeout="50000")
[09:09:13.843]      // while-condition  =>  TRUE
[09:09:13.843]      // while "1"  (timeout="50000")
[09:09:13.843]      // while-condition  =>  TRUE
[09:09:13.844]      // while "1"  (timeout="50000")
[09:09:13.844]      // while-condition  =>  TRUE
[09:09:13.844]      // while "1"  (timeout="50000")
[09:09:13.844]      // while-condition  =>  TRUE
[09:09:13.845]      // while "1"  (timeout="50000")
[09:09:13.845]      // while-condition  =>  TRUE
[09:09:13.845]      // while "1"  (timeout="50000")
[09:09:13.845]      // while-condition  =>  TRUE
[09:09:13.846]      // while "1"  (timeout="50000")
[09:09:13.846]      // while-condition  =>  TRUE
[09:09:13.846]      // while "1"  (timeout="50000")
[09:09:13.847]      // while-condition  =>  TRUE
[09:09:13.847]      // while "1"  (timeout="50000")
[09:09:13.847]      // while-condition  =>  TRUE
[09:09:13.847]      // while "1"  (timeout="50000")
[09:09:13.848]      // while-condition  =>  TRUE
[09:09:13.848]      // while "1"  (timeout="50000")
[09:09:13.848]      // while  =>  TIMEOUT
[09:09:13.849]      // end while "1"
[09:09:13.849]    </control>
[09:09:13.849]    <block atomic="false" info="">
[09:09:13.849]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:09:13.852]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:09:13.852]    </block>
[09:09:13.853]    <control if="" while="1" timeout="10000" info="">
[09:09:13.853]      // while "1"  (timeout="10000")
[09:09:13.854]      // while-condition  =>  TRUE
[09:09:13.854]      // while "1"  (timeout="10000")
[09:09:13.855]      // while-condition  =>  TRUE
[09:09:13.855]      // while "1"  (timeout="10000")
[09:09:13.855]      // while-condition  =>  TRUE
[09:09:13.856]      // while "1"  (timeout="10000")
[09:09:13.856]      // while-condition  =>  TRUE
[09:09:13.856]      // while "1"  (timeout="10000")
[09:09:13.857]      // while-condition  =>  TRUE
[09:09:13.857]      // while "1"  (timeout="10000")
[09:09:13.858]      // while-condition  =>  TRUE
[09:09:13.858]      // while "1"  (timeout="10000")
[09:09:13.858]      // while-condition  =>  TRUE
[09:09:13.859]      // while "1"  (timeout="10000")
[09:09:13.859]      // while-condition  =>  TRUE
[09:09:13.859]      // while "1"  (timeout="10000")
[09:09:13.860]      // while-condition  =>  TRUE
[09:09:13.860]      // while "1"  (timeout="10000")
[09:09:13.860]      // while-condition  =>  TRUE
[09:09:13.861]      // while "1"  (timeout="10000")
[09:09:13.861]      // while-condition  =>  TRUE
[09:09:13.861]      // while "1"  (timeout="10000")
[09:09:13.862]      // while-condition  =>  TRUE
[09:09:13.862]      // while "1"  (timeout="10000")
[09:09:13.862]      // while-condition  =>  TRUE
[09:09:13.863]      // while "1"  (timeout="10000")
[09:09:13.863]      // while-condition  =>  TRUE
[09:09:13.863]      // while "1"  (timeout="10000")
[09:09:13.864]      // while-condition  =>  TRUE
[09:09:13.864]      // while "1"  (timeout="10000")
[09:09:13.864]      // while  =>  TIMEOUT
[09:09:13.865]      // end while "1"
[09:09:13.865]    </control>
[09:09:13.865]    <block atomic="true" info="">
[09:09:13.869]  
[09:09:13.869]  ! W001 : No atomic sequence support in debug unit
[09:09:13.869]  
[09:09:13.871]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:09:13.873]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:09:13.873]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:09:13.876]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:09:13.876]    </block>
[09:09:13.877]    <block atomic="false" info="">
[09:09:13.877]      __errorcontrol = 0x00000001;
[09:09:13.877]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:09:13.878]      ReadDP(0x0);
[09:09:13.880]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:09:13.881]      __errorcontrol = 0x00000000;
[09:09:13.881]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:09:13.882]    </block>
[09:09:13.882]  </sequence>
[09:09:13.882]  
[09:09:13.883]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:09:13.883]  
[09:09:13.883]  <debugvars>
[09:09:13.883]    // Pre-defined
[09:09:13.884]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:09:13.884]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:09:13.884]    __dp=0x00000000
[09:09:13.885]    __ap=0x00000000
[09:09:13.885]    __traceout=0x00000000      (Trace Disabled)
[09:09:13.885]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:09:13.886]    __FlashAddr=0x00000000
[09:09:13.886]    __FlashLen=0x00000000
[09:09:13.886]    __FlashArg=0x00000000
[09:09:13.887]    __FlashOp=0x00000000
[09:09:13.887]    __Result=0x00000000
[09:09:13.887]  </debugvars>
[09:09:13.888]  
[09:09:13.888]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:09:13.888]  </sequence>
[09:09:13.889]  
[09:09:13.893]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[09:09:13.893]  
[09:09:13.893]  <debugvars>
[09:09:13.894]    // Pre-defined
[09:09:13.894]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:09:13.894]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:09:13.895]    __dp=0x00000000
[09:09:13.895]    __ap=0x00000000
[09:09:13.896]    __traceout=0x00000000      (Trace Disabled)
[09:09:13.896]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:09:13.896]    __FlashAddr=0x00000000
[09:09:13.897]    __FlashLen=0x00000000
[09:09:13.897]    __FlashArg=0x00000000
[09:09:13.897]    __FlashOp=0x00000000
[09:09:13.898]    __Result=0x00000000
[09:09:13.898]  </debugvars>
[09:09:13.898]  
[09:09:13.899]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:09:13.899]    <block atomic="false" info="">
[09:09:13.899]      __var SW_DP_ABORT  = 0x0;
[09:09:13.900]        // -> [SW_DP_ABORT <= 0x00000000]
[09:09:13.900]      __var DP_CTRL_STAT = 0x4;
[09:09:13.900]        // -> [DP_CTRL_STAT <= 0x00000004]
[09:09:13.901]      __var DP_SELECT    = 0x8;
[09:09:13.901]        // -> [DP_SELECT <= 0x00000008]
[09:09:13.901]      __var powered_down = 0;
[09:09:13.902]        // -> [powered_down <= 0x00000000]
[09:09:13.902]      WriteDP(DP_SELECT, 0x00000000);
[09:09:13.904]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:09:13.904]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:09:13.907]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[09:09:13.907]        // -> [powered_down <= 0x00000001]
[09:09:13.908]    </block>
[09:09:13.908]    <control if="powered_down" while="" timeout="0" info="">
[09:09:13.908]      // if-block "powered_down"
[09:09:13.909]        // =>  TRUE
[09:09:13.909]      <block atomic="false" info="">
[09:09:13.909]        WriteDP(DP_CTRL_STAT, 0x50000000);
[09:09:13.912]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[09:09:13.912]      </block>
[09:09:13.913]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[09:09:13.913]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[09:09:13.915]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:09:13.915]        // while-condition  =>  FALSE
[09:09:13.916]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[09:09:13.916]      </control>
[09:09:13.916]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[09:09:13.917]        // if-block "(__protocol & 0xFFFF) == 1"
[09:09:13.917]          // =>  FALSE
[09:09:13.917]        // skip if-block "(__protocol & 0xFFFF) == 1"
[09:09:13.918]      </control>
[09:09:13.918]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[09:09:13.918]        // if-block "(__protocol & 0xFFFF) == 2"
[09:09:13.919]          // =>  TRUE
[09:09:13.919]        <block atomic="false" info="">
[09:09:13.920]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[09:09:13.922]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[09:09:13.922]          WriteDP(SW_DP_ABORT, 0x0000001E);
[09:09:13.925]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[09:09:13.925]        </block>
[09:09:13.926]        // end if-block "(__protocol & 0xFFFF) == 2"
[09:09:13.926]      </control>
[09:09:13.926]      // end if-block "powered_down"
[09:09:13.927]    </control>
[09:09:13.927]  </sequence>
[09:09:13.928]  
[09:09:14.032]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:09:14.032]  
[09:09:14.032]  <debugvars>
[09:09:14.033]    // Pre-defined
[09:09:14.033]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:09:14.034]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:09:14.034]    __dp=0x00000000
[09:09:14.035]    __ap=0x00000000
[09:09:14.035]    __traceout=0x00000000      (Trace Disabled)
[09:09:14.035]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:09:14.036]    __FlashAddr=0x00000000
[09:09:14.036]    __FlashLen=0x00000000
[09:09:14.037]    __FlashArg=0x00000000
[09:09:14.037]    __FlashOp=0x00000000
[09:09:14.037]    __Result=0x00000000
[09:09:14.038]  </debugvars>
[09:09:14.038]  
[09:09:14.038]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:09:14.039]    <block atomic="true" info="">
[09:09:14.042]  
[09:09:14.042]  ! W001 : No atomic sequence support in debug unit
[09:09:14.042]  
[09:09:14.046]      __var DP_R_IDCODE    = 0x0;
[09:09:14.046]        // -> [DP_R_IDCODE <= 0x00000000]
[09:09:14.047]      __var DP_W_ABORT    = 0x0;
[09:09:14.047]        // -> [DP_W_ABORT <= 0x00000000]
[09:09:14.047]      __var DP_CTRLSTAT = 0x4;
[09:09:14.048]        // -> [DP_CTRLSTAT <= 0x00000004]
[09:09:14.048]      __var DP_W_SELECT    = 0x8;
[09:09:14.048]        // -> [DP_W_SELECT <= 0x00000008]
[09:09:14.048]      __var AP_TAR		= 0x4;
[09:09:14.049]        // -> [AP_TAR <= 0x00000004]
[09:09:14.049]      __var AP_BD0		= 0x0;
[09:09:14.049]        // -> [AP_BD0 <= 0x00000000]
[09:09:14.050]      __var AP_BD1		= 0x4;
[09:09:14.050]        // -> [AP_BD1 <= 0x00000004]
[09:09:14.050]      __var AP_BD2		= 0x8;
[09:09:14.051]        // -> [AP_BD2 <= 0x00000008]
[09:09:14.051]      __var PCWithinFlash = 0;
[09:09:14.051]        // -> [PCWithinFlash <= 0x00000000]
[09:09:14.051]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:09:14.058]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.068]    </block>
[09:09:14.068]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:09:14.069]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:09:14.075]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.075]      // while-condition  =>  FALSE
[09:09:14.075]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:09:14.076]    </control>
[09:09:14.076]    <block atomic="true" info="">
[09:09:14.081]  
[09:09:14.081]  ! W001 : No atomic sequence support in debug unit
[09:09:14.081]  
[09:09:14.083]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:09:14.095]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:09:14.095]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:09:14.097]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.097]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:09:14.099]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:09:14.099]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:09:14.103]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.103]    </block>
[09:09:14.103]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:09:14.104]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.106]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.106]      // while-condition  =>  TRUE
[09:09:14.106]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.109]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.109]      // while-condition  =>  TRUE
[09:09:14.109]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.112]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.112]      // while-condition  =>  TRUE
[09:09:14.112]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.115]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.115]      // while-condition  =>  TRUE
[09:09:14.116]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.118]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.118]      // while-condition  =>  TRUE
[09:09:14.119]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.121]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.121]      // while-condition  =>  TRUE
[09:09:14.121]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.124]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.126]      // while-condition  =>  TRUE
[09:09:14.126]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.128]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.129]      // while-condition  =>  TRUE
[09:09:14.130]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.132]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.132]      // while-condition  =>  TRUE
[09:09:14.132]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.135]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.135]      // while-condition  =>  TRUE
[09:09:14.135]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.138]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.138]      // while-condition  =>  TRUE
[09:09:14.138]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.141]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.141]      // while-condition  =>  TRUE
[09:09:14.141]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.144]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.144]      // while-condition  =>  TRUE
[09:09:14.145]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.147]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.147]      // while-condition  =>  TRUE
[09:09:14.148]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.150]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.150]      // while-condition  =>  TRUE
[09:09:14.151]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.153]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.153]      // while-condition  =>  TRUE
[09:09:14.154]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.156]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.156]      // while-condition  =>  TRUE
[09:09:14.157]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.159]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.159]      // while-condition  =>  TRUE
[09:09:14.160]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.162]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.163]      // while-condition  =>  TRUE
[09:09:14.163]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.165]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.165]      // while-condition  =>  TRUE
[09:09:14.165]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.168]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.168]      // while-condition  =>  TRUE
[09:09:14.169]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.171]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.171]      // while-condition  =>  TRUE
[09:09:14.172]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.174]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.174]      // while-condition  =>  TRUE
[09:09:14.175]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.177]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.178]      // while-condition  =>  TRUE
[09:09:14.178]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.180]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.180]      // while-condition  =>  TRUE
[09:09:14.181]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.183]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.183]      // while-condition  =>  TRUE
[09:09:14.184]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.186]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.186]      // while-condition  =>  TRUE
[09:09:14.187]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.189]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.189]      // while-condition  =>  TRUE
[09:09:14.190]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.192]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.192]      // while-condition  =>  TRUE
[09:09:14.193]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.195]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.196]      // while-condition  =>  TRUE
[09:09:14.196]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.198]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.199]      // while-condition  =>  TRUE
[09:09:14.199]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.201]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.201]      // while-condition  =>  TRUE
[09:09:14.202]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.204]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.204]      // while-condition  =>  TRUE
[09:09:14.205]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.207]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.207]      // while-condition  =>  TRUE
[09:09:14.208]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.208]      // while  =>  TIMEOUT
[09:09:14.208]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:09:14.208]    </control>
[09:09:14.209]    <block atomic="false" info="">
[09:09:14.209]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:09:14.211]        // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.211]        // -> [PCWithinFlash <= 0x00000000]
[09:09:14.212]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:09:14.214]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:09:14.214]    </block>
[09:09:14.215]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:09:14.215]      // if-block "PCWithinFlash == 0"
[09:09:14.215]        // =>  TRUE
[09:09:14.215]      // end if-block "PCWithinFlash == 0"
[09:09:14.216]    </control>
[09:09:14.216]  </sequence>
[09:09:14.216]  
[09:09:14.263]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[09:09:14.263]  
[09:09:14.277]  <debugvars>
[09:09:14.278]    // Pre-defined
[09:09:14.278]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:09:14.278]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:09:14.278]    __dp=0x00000000
[09:09:14.279]    __ap=0x00000000
[09:09:14.279]    __traceout=0x00000000      (Trace Disabled)
[09:09:14.279]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:09:14.279]    __FlashAddr=0x00000000
[09:09:14.279]    __FlashLen=0x00000000
[09:09:14.280]    __FlashArg=0x00000000
[09:09:14.280]    __FlashOp=0x00000000
[09:09:14.280]    __Result=0x00000000
[09:09:14.280]  </debugvars>
[09:09:14.281]  
[09:09:14.281]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[09:09:14.281]    <block atomic="false" info="">
[09:09:14.281]    </block>
[09:09:14.282]  </sequence>
[09:09:14.282]  
[09:09:14.284]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[09:09:14.284]  
[09:09:14.285]  <debugvars>
[09:09:14.285]    // Pre-defined
[09:09:14.285]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:09:14.285]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:09:14.286]    __dp=0x00000000
[09:09:14.286]    __ap=0x00000000
[09:09:14.286]    __traceout=0x00000000      (Trace Disabled)
[09:09:14.286]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:09:14.287]    __FlashAddr=0x00000000
[09:09:14.287]    __FlashLen=0x00000000
[09:09:14.287]    __FlashArg=0x00000000
[09:09:14.287]    __FlashOp=0x00000000
[09:09:14.288]    __Result=0x00000000
[09:09:14.288]  </debugvars>
[09:09:14.288]  
[09:09:14.288]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:09:14.289]    <block atomic="false" info="">
[09:09:14.289]      __var nReset      = 0x80;
[09:09:14.289]        // -> [nReset <= 0x00000080]
[09:09:14.289]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:09:14.291]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:09:14.292]    </block>
[09:09:14.292]    <control if="" while="1" timeout="50000" info="">
[09:09:14.292]      // while "1"  (timeout="50000")
[09:09:14.292]      // while-condition  =>  TRUE
[09:09:14.293]      // while "1"  (timeout="50000")
[09:09:14.293]      // while-condition  =>  TRUE
[09:09:14.293]      // while "1"  (timeout="50000")
[09:09:14.293]      // while-condition  =>  TRUE
[09:09:14.294]      // while "1"  (timeout="50000")
[09:09:14.294]      // while-condition  =>  TRUE
[09:09:14.294]      // while "1"  (timeout="50000")
[09:09:14.294]      // while-condition  =>  TRUE
[09:09:14.295]      // while "1"  (timeout="50000")
[09:09:14.295]      // while-condition  =>  TRUE
[09:09:14.295]      // while "1"  (timeout="50000")
[09:09:14.295]      // while-condition  =>  TRUE
[09:09:14.295]      // while "1"  (timeout="50000")
[09:09:14.295]      // while-condition  =>  TRUE
[09:09:14.295]      // while "1"  (timeout="50000")
[09:09:14.295]      // while-condition  =>  TRUE
[09:09:14.295]      // while "1"  (timeout="50000")
[09:09:14.296]      // while-condition  =>  TRUE
[09:09:14.296]      // while "1"  (timeout="50000")
[09:09:14.296]      // while-condition  =>  TRUE
[09:09:14.296]      // while "1"  (timeout="50000")
[09:09:14.298]      // while-condition  =>  TRUE
[09:09:14.298]      // while "1"  (timeout="50000")
[09:09:14.298]      // while-condition  =>  TRUE
[09:09:14.298]      // while "1"  (timeout="50000")
[09:09:14.298]      // while-condition  =>  TRUE
[09:09:14.298]      // while "1"  (timeout="50000")
[09:09:14.298]      // while-condition  =>  TRUE
[09:09:14.298]      // while "1"  (timeout="50000")
[09:09:14.299]      // while-condition  =>  TRUE
[09:09:14.299]      // while "1"  (timeout="50000")
[09:09:14.299]      // while-condition  =>  TRUE
[09:09:14.299]      // while "1"  (timeout="50000")
[09:09:14.300]      // while-condition  =>  TRUE
[09:09:14.300]      // while "1"  (timeout="50000")
[09:09:14.300]      // while-condition  =>  TRUE
[09:09:14.300]      // while "1"  (timeout="50000")
[09:09:14.301]      // while-condition  =>  TRUE
[09:09:14.301]      // while "1"  (timeout="50000")
[09:09:14.301]      // while-condition  =>  TRUE
[09:09:14.301]      // while "1"  (timeout="50000")
[09:09:14.302]      // while-condition  =>  TRUE
[09:09:14.302]      // while "1"  (timeout="50000")
[09:09:14.302]      // while-condition  =>  TRUE
[09:09:14.302]      // while "1"  (timeout="50000")
[09:09:14.303]      // while-condition  =>  TRUE
[09:09:14.303]      // while "1"  (timeout="50000")
[09:09:14.303]      // while-condition  =>  TRUE
[09:09:14.303]      // while "1"  (timeout="50000")
[09:09:14.303]      // while-condition  =>  TRUE
[09:09:14.304]      // while "1"  (timeout="50000")
[09:09:14.304]      // while-condition  =>  TRUE
[09:09:14.304]      // while "1"  (timeout="50000")
[09:09:14.304]      // while-condition  =>  TRUE
[09:09:14.305]      // while "1"  (timeout="50000")
[09:09:14.305]      // while-condition  =>  TRUE
[09:09:14.305]      // while "1"  (timeout="50000")
[09:09:14.305]      // while-condition  =>  TRUE
[09:09:14.306]      // while "1"  (timeout="50000")
[09:09:14.306]      // while-condition  =>  TRUE
[09:09:14.306]      // while "1"  (timeout="50000")
[09:09:14.307]      // while-condition  =>  TRUE
[09:09:14.307]      // while "1"  (timeout="50000")
[09:09:14.307]      // while-condition  =>  TRUE
[09:09:14.307]      // while "1"  (timeout="50000")
[09:09:14.308]      // while-condition  =>  TRUE
[09:09:14.308]      // while "1"  (timeout="50000")
[09:09:14.308]      // while-condition  =>  TRUE
[09:09:14.308]      // while "1"  (timeout="50000")
[09:09:14.308]      // while-condition  =>  TRUE
[09:09:14.309]      // while "1"  (timeout="50000")
[09:09:14.309]      // while-condition  =>  TRUE
[09:09:14.309]      // while "1"  (timeout="50000")
[09:09:14.309]      // while-condition  =>  TRUE
[09:09:14.310]      // while "1"  (timeout="50000")
[09:09:14.310]      // while-condition  =>  TRUE
[09:09:14.310]      // while "1"  (timeout="50000")
[09:09:14.310]      // while-condition  =>  TRUE
[09:09:14.311]      // while "1"  (timeout="50000")
[09:09:14.311]      // while-condition  =>  TRUE
[09:09:14.311]      // while "1"  (timeout="50000")
[09:09:14.311]      // while-condition  =>  TRUE
[09:09:14.312]      // while "1"  (timeout="50000")
[09:09:14.312]      // while-condition  =>  TRUE
[09:09:14.312]      // while "1"  (timeout="50000")
[09:09:14.312]      // while-condition  =>  TRUE
[09:09:14.312]      // while "1"  (timeout="50000")
[09:09:14.313]      // while-condition  =>  TRUE
[09:09:14.313]      // while "1"  (timeout="50000")
[09:09:14.313]      // while-condition  =>  TRUE
[09:09:14.313]      // while "1"  (timeout="50000")
[09:09:14.314]      // while-condition  =>  TRUE
[09:09:14.314]      // while "1"  (timeout="50000")
[09:09:14.314]      // while-condition  =>  TRUE
[09:09:14.314]      // while "1"  (timeout="50000")
[09:09:14.315]      // while-condition  =>  TRUE
[09:09:14.315]      // while "1"  (timeout="50000")
[09:09:14.315]      // while-condition  =>  TRUE
[09:09:14.315]      // while "1"  (timeout="50000")
[09:09:14.316]      // while-condition  =>  TRUE
[09:09:14.316]      // while "1"  (timeout="50000")
[09:09:14.316]      // while-condition  =>  TRUE
[09:09:14.316]      // while "1"  (timeout="50000")
[09:09:14.316]      // while-condition  =>  TRUE
[09:09:14.317]      // while "1"  (timeout="50000")
[09:09:14.317]      // while-condition  =>  TRUE
[09:09:14.317]      // while "1"  (timeout="50000")
[09:09:14.317]      // while-condition  =>  TRUE
[09:09:14.318]      // while "1"  (timeout="50000")
[09:09:14.318]      // while-condition  =>  TRUE
[09:09:14.318]      // while "1"  (timeout="50000")
[09:09:14.318]      // while-condition  =>  TRUE
[09:09:14.319]      // while "1"  (timeout="50000")
[09:09:14.319]      // while-condition  =>  TRUE
[09:09:14.319]      // while "1"  (timeout="50000")
[09:09:14.319]      // while-condition  =>  TRUE
[09:09:14.319]      // while "1"  (timeout="50000")
[09:09:14.320]      // while-condition  =>  TRUE
[09:09:14.320]      // while "1"  (timeout="50000")
[09:09:14.320]      // while-condition  =>  TRUE
[09:09:14.320]      // while "1"  (timeout="50000")
[09:09:14.321]      // while-condition  =>  TRUE
[09:09:14.321]      // while "1"  (timeout="50000")
[09:09:14.321]      // while-condition  =>  TRUE
[09:09:14.322]      // while "1"  (timeout="50000")
[09:09:14.322]      // while-condition  =>  TRUE
[09:09:14.322]      // while "1"  (timeout="50000")
[09:09:14.323]      // while-condition  =>  TRUE
[09:09:14.323]      // while "1"  (timeout="50000")
[09:09:14.323]      // while-condition  =>  TRUE
[09:09:14.323]      // while "1"  (timeout="50000")
[09:09:14.324]      // while-condition  =>  TRUE
[09:09:14.324]      // while "1"  (timeout="50000")
[09:09:14.324]      // while-condition  =>  TRUE
[09:09:14.324]      // while "1"  (timeout="50000")
[09:09:14.324]      // while-condition  =>  TRUE
[09:09:14.325]      // while "1"  (timeout="50000")
[09:09:14.325]      // while-condition  =>  TRUE
[09:09:14.325]      // while "1"  (timeout="50000")
[09:09:14.325]      // while-condition  =>  TRUE
[09:09:14.326]      // while "1"  (timeout="50000")
[09:09:14.326]      // while-condition  =>  TRUE
[09:09:14.326]      // while "1"  (timeout="50000")
[09:09:14.326]      // while-condition  =>  TRUE
[09:09:14.327]      // while "1"  (timeout="50000")
[09:09:14.327]      // while-condition  =>  TRUE
[09:09:14.327]      // while "1"  (timeout="50000")
[09:09:14.327]      // while-condition  =>  TRUE
[09:09:14.328]      // while "1"  (timeout="50000")
[09:09:14.328]      // while-condition  =>  TRUE
[09:09:14.328]      // while "1"  (timeout="50000")
[09:09:14.328]      // while-condition  =>  TRUE
[09:09:14.329]      // while "1"  (timeout="50000")
[09:09:14.329]      // while-condition  =>  TRUE
[09:09:14.329]      // while "1"  (timeout="50000")
[09:09:14.329]      // while-condition  =>  TRUE
[09:09:14.330]      // while "1"  (timeout="50000")
[09:09:14.330]      // while-condition  =>  TRUE
[09:09:14.330]      // while "1"  (timeout="50000")
[09:09:14.330]      // while-condition  =>  TRUE
[09:09:14.330]      // while "1"  (timeout="50000")
[09:09:14.331]      // while-condition  =>  TRUE
[09:09:14.331]      // while "1"  (timeout="50000")
[09:09:14.331]      // while-condition  =>  TRUE
[09:09:14.331]      // while "1"  (timeout="50000")
[09:09:14.332]      // while-condition  =>  TRUE
[09:09:14.332]      // while "1"  (timeout="50000")
[09:09:14.332]      // while-condition  =>  TRUE
[09:09:14.332]      // while "1"  (timeout="50000")
[09:09:14.333]      // while-condition  =>  TRUE
[09:09:14.333]      // while "1"  (timeout="50000")
[09:09:14.333]      // while-condition  =>  TRUE
[09:09:14.333]      // while "1"  (timeout="50000")
[09:09:14.333]      // while-condition  =>  TRUE
[09:09:14.334]      // while "1"  (timeout="50000")
[09:09:14.334]      // while-condition  =>  TRUE
[09:09:14.334]      // while "1"  (timeout="50000")
[09:09:14.334]      // while-condition  =>  TRUE
[09:09:14.335]      // while "1"  (timeout="50000")
[09:09:14.335]      // while-condition  =>  TRUE
[09:09:14.335]      // while "1"  (timeout="50000")
[09:09:14.335]      // while-condition  =>  TRUE
[09:09:14.336]      // while "1"  (timeout="50000")
[09:09:14.336]      // while-condition  =>  TRUE
[09:09:14.336]      // while "1"  (timeout="50000")
[09:09:14.337]      // while-condition  =>  TRUE
[09:09:14.337]      // while "1"  (timeout="50000")
[09:09:14.337]      // while-condition  =>  TRUE
[09:09:14.337]      // while "1"  (timeout="50000")
[09:09:14.337]      // while-condition  =>  TRUE
[09:09:14.338]      // while "1"  (timeout="50000")
[09:09:14.338]      // while-condition  =>  TRUE
[09:09:14.338]      // while "1"  (timeout="50000")
[09:09:14.338]      // while-condition  =>  TRUE
[09:09:14.339]      // while "1"  (timeout="50000")
[09:09:14.339]      // while-condition  =>  TRUE
[09:09:14.339]      // while "1"  (timeout="50000")
[09:09:14.339]      // while-condition  =>  TRUE
[09:09:14.340]      // while "1"  (timeout="50000")
[09:09:14.340]      // while-condition  =>  TRUE
[09:09:14.340]      // while "1"  (timeout="50000")
[09:09:14.340]      // while-condition  =>  TRUE
[09:09:14.340]      // while "1"  (timeout="50000")
[09:09:14.341]      // while-condition  =>  TRUE
[09:09:14.341]      // while "1"  (timeout="50000")
[09:09:14.341]      // while-condition  =>  TRUE
[09:09:14.341]      // while "1"  (timeout="50000")
[09:09:14.342]      // while-condition  =>  TRUE
[09:09:14.342]      // while "1"  (timeout="50000")
[09:09:14.342]      // while-condition  =>  TRUE
[09:09:14.342]      // while "1"  (timeout="50000")
[09:09:14.343]      // while-condition  =>  TRUE
[09:09:14.343]      // while "1"  (timeout="50000")
[09:09:14.343]      // while-condition  =>  TRUE
[09:09:14.343]      // while "1"  (timeout="50000")
[09:09:14.344]      // while-condition  =>  TRUE
[09:09:14.344]      // while "1"  (timeout="50000")
[09:09:14.344]      // while-condition  =>  TRUE
[09:09:14.344]      // while "1"  (timeout="50000")
[09:09:14.345]      // while-condition  =>  TRUE
[09:09:14.345]      // while "1"  (timeout="50000")
[09:09:14.345]      // while-condition  =>  TRUE
[09:09:14.345]      // while "1"  (timeout="50000")
[09:09:14.346]      // while-condition  =>  TRUE
[09:09:14.346]      // while "1"  (timeout="50000")
[09:09:14.346]      // while-condition  =>  TRUE
[09:09:14.346]      // while "1"  (timeout="50000")
[09:09:14.347]      // while-condition  =>  TRUE
[09:09:14.347]      // while "1"  (timeout="50000")
[09:09:14.347]      // while-condition  =>  TRUE
[09:09:14.347]      // while "1"  (timeout="50000")
[09:09:14.347]      // while-condition  =>  TRUE
[09:09:14.348]      // while "1"  (timeout="50000")
[09:09:14.348]      // while  =>  TIMEOUT
[09:09:14.348]      // end while "1"
[09:09:14.348]    </control>
[09:09:14.349]    <block atomic="false" info="">
[09:09:14.349]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:09:14.350]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:09:14.351]    </block>
[09:09:14.351]    <control if="" while="1" timeout="10000" info="">
[09:09:14.351]      // while "1"  (timeout="10000")
[09:09:14.352]      // while-condition  =>  TRUE
[09:09:14.352]      // while "1"  (timeout="10000")
[09:09:14.352]      // while-condition  =>  TRUE
[09:09:14.352]      // while "1"  (timeout="10000")
[09:09:14.353]      // while-condition  =>  TRUE
[09:09:14.353]      // while "1"  (timeout="10000")
[09:09:14.353]      // while-condition  =>  TRUE
[09:09:14.353]      // while "1"  (timeout="10000")
[09:09:14.354]      // while-condition  =>  TRUE
[09:09:14.354]      // while "1"  (timeout="10000")
[09:09:14.354]      // while-condition  =>  TRUE
[09:09:14.354]      // while "1"  (timeout="10000")
[09:09:14.355]      // while-condition  =>  TRUE
[09:09:14.355]      // while "1"  (timeout="10000")
[09:09:14.355]      // while-condition  =>  TRUE
[09:09:14.355]      // while "1"  (timeout="10000")
[09:09:14.355]      // while-condition  =>  TRUE
[09:09:14.356]      // while "1"  (timeout="10000")
[09:09:14.356]      // while-condition  =>  TRUE
[09:09:14.356]      // while "1"  (timeout="10000")
[09:09:14.356]      // while-condition  =>  TRUE
[09:09:14.357]      // while "1"  (timeout="10000")
[09:09:14.357]      // while-condition  =>  TRUE
[09:09:14.357]      // while "1"  (timeout="10000")
[09:09:14.357]      // while-condition  =>  TRUE
[09:09:14.358]      // while "1"  (timeout="10000")
[09:09:14.358]      // while-condition  =>  TRUE
[09:09:14.358]      // while "1"  (timeout="10000")
[09:09:14.358]      // while-condition  =>  TRUE
[09:09:14.359]      // while "1"  (timeout="10000")
[09:09:14.359]      // while-condition  =>  TRUE
[09:09:14.359]      // while "1"  (timeout="10000")
[09:09:14.359]      // while-condition  =>  TRUE
[09:09:14.360]      // while "1"  (timeout="10000")
[09:09:14.360]      // while-condition  =>  TRUE
[09:09:14.360]      // while "1"  (timeout="10000")
[09:09:14.360]      // while-condition  =>  TRUE
[09:09:14.361]      // while "1"  (timeout="10000")
[09:09:14.361]      // while-condition  =>  TRUE
[09:09:14.361]      // while "1"  (timeout="10000")
[09:09:14.361]      // while-condition  =>  TRUE
[09:09:14.361]      // while "1"  (timeout="10000")
[09:09:14.362]      // while-condition  =>  TRUE
[09:09:14.362]      // while "1"  (timeout="10000")
[09:09:14.362]      // while-condition  =>  TRUE
[09:09:14.362]      // while "1"  (timeout="10000")
[09:09:14.363]      // while-condition  =>  TRUE
[09:09:14.363]      // while "1"  (timeout="10000")
[09:09:14.363]      // while  =>  TIMEOUT
[09:09:14.363]      // end while "1"
[09:09:14.363]    </control>
[09:09:14.364]    <block atomic="true" info="">
[09:09:14.368]  
[09:09:14.368]  ! W001 : No atomic sequence support in debug unit
[09:09:14.368]  
[09:09:14.371]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:09:14.373]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:09:14.373]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:09:14.375]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:09:14.375]    </block>
[09:09:14.375]    <block atomic="false" info="">
[09:09:14.375]      __errorcontrol = 0x00000001;
[09:09:14.376]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:09:14.376]      ReadDP(0x0);
[09:09:14.378]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:09:14.378]      __errorcontrol = 0x00000000;
[09:09:14.378]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:09:14.378]    </block>
[09:09:14.379]  </sequence>
[09:09:14.379]  
[09:09:14.386]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[09:09:14.386]  
[09:09:14.393]  <debugvars>
[09:09:14.393]    // Pre-defined
[09:09:14.393]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:09:14.394]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:09:14.394]    __dp=0x00000000
[09:09:14.394]    __ap=0x00000000
[09:09:14.395]    __traceout=0x00000000      (Trace Disabled)
[09:09:14.395]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:09:14.395]    __FlashAddr=0x00000000
[09:09:14.395]    __FlashLen=0x00000000
[09:09:14.395]    __FlashArg=0x00000000
[09:09:14.396]    __FlashOp=0x00000000
[09:09:14.396]    __Result=0x00000000
[09:09:14.396]  </debugvars>
[09:09:14.396]  
[09:09:14.397]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[09:09:14.397]    <block atomic="false" info="">
[09:09:14.397]    </block>
[09:09:14.397]  </sequence>
[09:09:14.397]  
[09:09:14.638]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[09:09:14.638]  
[09:09:14.639]  <debugvars>
[09:09:14.639]    // Pre-defined
[09:09:14.640]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:09:14.640]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:09:14.641]    __dp=0x00000000
[09:09:14.641]    __ap=0x00000000
[09:09:14.642]    __traceout=0x00000000      (Trace Disabled)
[09:09:14.642]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:09:14.643]    __FlashAddr=0x00000000
[09:09:14.643]    __FlashLen=0x00000000
[09:09:14.644]    __FlashArg=0x00000000
[09:09:14.644]    __FlashOp=0x00000000
[09:09:14.645]    __Result=0x00000000
[09:09:14.645]  </debugvars>
[09:09:14.645]  
[09:09:14.646]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[09:09:14.646]    <block atomic="false" info="">
[09:09:14.647]      Sequence("ResetHardware");
[09:09:14.647]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:09:14.648]          <block atomic="false" info="">
[09:09:14.648]            __var nReset      = 0x80;
[09:09:14.649]              // -> [nReset <= 0x00000080]
[09:09:14.649]            DAP_SWJ_Pins(0x00, nReset, 0);
[09:09:14.652]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:09:14.652]          </block>
[09:09:14.653]          <control if="" while="1" timeout="50000" info="">
[09:09:14.653]            // while "1"  (timeout="50000")
[09:09:14.654]            // while-condition  =>  TRUE
[09:09:14.655]            // while "1"  (timeout="50000")
[09:09:14.655]            // while-condition  =>  TRUE
[09:09:14.655]            // while "1"  (timeout="50000")
[09:09:14.655]            // while-condition  =>  TRUE
[09:09:14.656]            // while "1"  (timeout="50000")
[09:09:14.656]            // while-condition  =>  TRUE
[09:09:14.657]            // while "1"  (timeout="50000")
[09:09:14.657]            // while-condition  =>  TRUE
[09:09:14.657]            // while "1"  (timeout="50000")
[09:09:14.657]            // while-condition  =>  TRUE
[09:09:14.657]            // while "1"  (timeout="50000")
[09:09:14.657]            // while-condition  =>  TRUE
[09:09:14.657]            // while "1"  (timeout="50000")
[09:09:14.658]            // while-condition  =>  TRUE
[09:09:14.658]            // while "1"  (timeout="50000")
[09:09:14.658]            // while-condition  =>  TRUE
[09:09:14.658]            // while "1"  (timeout="50000")
[09:09:14.659]            // while-condition  =>  TRUE
[09:09:14.659]            // while "1"  (timeout="50000")
[09:09:14.659]            // while-condition  =>  TRUE
[09:09:14.659]            // while "1"  (timeout="50000")
[09:09:14.660]            // while-condition  =>  TRUE
[09:09:14.660]            // while "1"  (timeout="50000")
[09:09:14.661]            // while-condition  =>  TRUE
[09:09:14.661]            // while "1"  (timeout="50000")
[09:09:14.661]            // while-condition  =>  TRUE
[09:09:14.661]            // while "1"  (timeout="50000")
[09:09:14.661]            // while-condition  =>  TRUE
[09:09:14.662]            // while "1"  (timeout="50000")
[09:09:14.662]            // while-condition  =>  TRUE
[09:09:14.662]            // while "1"  (timeout="50000")
[09:09:14.662]            // while-condition  =>  TRUE
[09:09:14.663]            // while "1"  (timeout="50000")
[09:09:14.663]            // while-condition  =>  TRUE
[09:09:14.663]            // while "1"  (timeout="50000")
[09:09:14.663]            // while-condition  =>  TRUE
[09:09:14.663]            // while "1"  (timeout="50000")
[09:09:14.664]            // while-condition  =>  TRUE
[09:09:14.664]            // while "1"  (timeout="50000")
[09:09:14.664]            // while-condition  =>  TRUE
[09:09:14.664]            // while "1"  (timeout="50000")
[09:09:14.664]            // while-condition  =>  TRUE
[09:09:14.665]            // while "1"  (timeout="50000")
[09:09:14.665]            // while-condition  =>  TRUE
[09:09:14.665]            // while "1"  (timeout="50000")
[09:09:14.665]            // while-condition  =>  TRUE
[09:09:14.665]            // while "1"  (timeout="50000")
[09:09:14.665]            // while-condition  =>  TRUE
[09:09:14.665]            // while "1"  (timeout="50000")
[09:09:14.665]            // while-condition  =>  TRUE
[09:09:14.666]            // while "1"  (timeout="50000")
[09:09:14.666]            // while-condition  =>  TRUE
[09:09:14.666]            // while "1"  (timeout="50000")
[09:09:14.667]            // while-condition  =>  TRUE
[09:09:14.667]            // while "1"  (timeout="50000")
[09:09:14.667]            // while-condition  =>  TRUE
[09:09:14.667]            // while "1"  (timeout="50000")
[09:09:14.667]            // while-condition  =>  TRUE
[09:09:14.667]            // while "1"  (timeout="50000")
[09:09:14.667]            // while-condition  =>  TRUE
[09:09:14.667]            // while "1"  (timeout="50000")
[09:09:14.667]            // while-condition  =>  TRUE
[09:09:14.668]            // while "1"  (timeout="50000")
[09:09:14.668]            // while-condition  =>  TRUE
[09:09:14.668]            // while "1"  (timeout="50000")
[09:09:14.668]            // while-condition  =>  TRUE
[09:09:14.668]            // while "1"  (timeout="50000")
[09:09:14.669]            // while-condition  =>  TRUE
[09:09:14.670]            // while "1"  (timeout="50000")
[09:09:14.671]            // while-condition  =>  TRUE
[09:09:14.671]            // while "1"  (timeout="50000")
[09:09:14.671]            // while-condition  =>  TRUE
[09:09:14.671]            // while "1"  (timeout="50000")
[09:09:14.671]            // while-condition  =>  TRUE
[09:09:14.672]            // while "1"  (timeout="50000")
[09:09:14.672]            // while-condition  =>  TRUE
[09:09:14.672]            // while "1"  (timeout="50000")
[09:09:14.672]            // while-condition  =>  TRUE
[09:09:14.672]            // while "1"  (timeout="50000")
[09:09:14.673]            // while-condition  =>  TRUE
[09:09:14.673]            // while "1"  (timeout="50000")
[09:09:14.673]            // while-condition  =>  TRUE
[09:09:14.673]            // while "1"  (timeout="50000")
[09:09:14.673]            // while-condition  =>  TRUE
[09:09:14.673]            // while "1"  (timeout="50000")
[09:09:14.674]            // while-condition  =>  TRUE
[09:09:14.674]            // while "1"  (timeout="50000")
[09:09:14.674]            // while-condition  =>  TRUE
[09:09:14.674]            // while "1"  (timeout="50000")
[09:09:14.674]            // while-condition  =>  TRUE
[09:09:14.675]            // while "1"  (timeout="50000")
[09:09:14.675]            // while-condition  =>  TRUE
[09:09:14.675]            // while "1"  (timeout="50000")
[09:09:14.675]            // while-condition  =>  TRUE
[09:09:14.675]            // while "1"  (timeout="50000")
[09:09:14.675]            // while-condition  =>  TRUE
[09:09:14.675]            // while "1"  (timeout="50000")
[09:09:14.676]            // while-condition  =>  TRUE
[09:09:14.676]            // while "1"  (timeout="50000")
[09:09:14.676]            // while-condition  =>  TRUE
[09:09:14.676]            // while "1"  (timeout="50000")
[09:09:14.676]            // while-condition  =>  TRUE
[09:09:14.677]            // while "1"  (timeout="50000")
[09:09:14.677]            // while-condition  =>  TRUE
[09:09:14.677]            // while "1"  (timeout="50000")
[09:09:14.677]            // while-condition  =>  TRUE
[09:09:14.677]            // while "1"  (timeout="50000")
[09:09:14.678]            // while-condition  =>  TRUE
[09:09:14.678]            // while "1"  (timeout="50000")
[09:09:14.678]            // while-condition  =>  TRUE
[09:09:14.678]            // while "1"  (timeout="50000")
[09:09:14.678]            // while-condition  =>  TRUE
[09:09:14.678]            // while "1"  (timeout="50000")
[09:09:14.679]            // while-condition  =>  TRUE
[09:09:14.679]            // while "1"  (timeout="50000")
[09:09:14.679]            // while-condition  =>  TRUE
[09:09:14.679]            // while "1"  (timeout="50000")
[09:09:14.679]            // while-condition  =>  TRUE
[09:09:14.679]            // while "1"  (timeout="50000")
[09:09:14.680]            // while-condition  =>  TRUE
[09:09:14.681]            // while "1"  (timeout="50000")
[09:09:14.681]            // while-condition  =>  TRUE
[09:09:14.681]            // while "1"  (timeout="50000")
[09:09:14.681]            // while-condition  =>  TRUE
[09:09:14.681]            // while "1"  (timeout="50000")
[09:09:14.682]            // while-condition  =>  TRUE
[09:09:14.682]            // while "1"  (timeout="50000")
[09:09:14.682]            // while-condition  =>  TRUE
[09:09:14.682]            // while "1"  (timeout="50000")
[09:09:14.682]            // while-condition  =>  TRUE
[09:09:14.682]            // while "1"  (timeout="50000")
[09:09:14.682]            // while-condition  =>  TRUE
[09:09:14.682]            // while "1"  (timeout="50000")
[09:09:14.682]            // while-condition  =>  TRUE
[09:09:14.682]            // while "1"  (timeout="50000")
[09:09:14.683]            // while-condition  =>  TRUE
[09:09:14.684]            // while "1"  (timeout="50000")
[09:09:14.684]            // while-condition  =>  TRUE
[09:09:14.684]            // while "1"  (timeout="50000")
[09:09:14.684]            // while-condition  =>  TRUE
[09:09:14.684]            // while "1"  (timeout="50000")
[09:09:14.685]            // while-condition  =>  TRUE
[09:09:14.685]            // while "1"  (timeout="50000")
[09:09:14.685]            // while-condition  =>  TRUE
[09:09:14.685]            // while "1"  (timeout="50000")
[09:09:14.685]            // while-condition  =>  TRUE
[09:09:14.685]            // while "1"  (timeout="50000")
[09:09:14.685]            // while-condition  =>  TRUE
[09:09:14.686]            // while "1"  (timeout="50000")
[09:09:14.686]            // while-condition  =>  TRUE
[09:09:14.686]            // while "1"  (timeout="50000")
[09:09:14.686]            // while-condition  =>  TRUE
[09:09:14.686]            // while "1"  (timeout="50000")
[09:09:14.687]            // while-condition  =>  TRUE
[09:09:14.687]            // while "1"  (timeout="50000")
[09:09:14.687]            // while-condition  =>  TRUE
[09:09:14.687]            // while "1"  (timeout="50000")
[09:09:14.688]            // while-condition  =>  TRUE
[09:09:14.688]            // while "1"  (timeout="50000")
[09:09:14.688]            // while-condition  =>  TRUE
[09:09:14.688]            // while "1"  (timeout="50000")
[09:09:14.688]            // while-condition  =>  TRUE
[09:09:14.688]            // while "1"  (timeout="50000")
[09:09:14.688]            // while-condition  =>  TRUE
[09:09:14.688]            // while "1"  (timeout="50000")
[09:09:14.689]            // while-condition  =>  TRUE
[09:09:14.689]            // while "1"  (timeout="50000")
[09:09:14.689]            // while-condition  =>  TRUE
[09:09:14.689]            // while "1"  (timeout="50000")
[09:09:14.689]            // while-condition  =>  TRUE
[09:09:14.689]            // while "1"  (timeout="50000")
[09:09:14.690]            // while-condition  =>  TRUE
[09:09:14.691]            // while "1"  (timeout="50000")
[09:09:14.691]            // while-condition  =>  TRUE
[09:09:14.691]            // while "1"  (timeout="50000")
[09:09:14.691]            // while-condition  =>  TRUE
[09:09:14.691]            // while "1"  (timeout="50000")
[09:09:14.692]            // while-condition  =>  TRUE
[09:09:14.692]            // while "1"  (timeout="50000")
[09:09:14.692]            // while-condition  =>  TRUE
[09:09:14.692]            // while "1"  (timeout="50000")
[09:09:14.692]            // while-condition  =>  TRUE
[09:09:14.692]            // while "1"  (timeout="50000")
[09:09:14.693]            // while-condition  =>  TRUE
[09:09:14.693]            // while "1"  (timeout="50000")
[09:09:14.693]            // while-condition  =>  TRUE
[09:09:14.693]            // while "1"  (timeout="50000")
[09:09:14.693]            // while-condition  =>  TRUE
[09:09:14.694]            // while "1"  (timeout="50000")
[09:09:14.694]            // while-condition  =>  TRUE
[09:09:14.694]            // while "1"  (timeout="50000")
[09:09:14.694]            // while-condition  =>  TRUE
[09:09:14.694]            // while "1"  (timeout="50000")
[09:09:14.695]            // while-condition  =>  TRUE
[09:09:14.695]            // while "1"  (timeout="50000")
[09:09:14.695]            // while-condition  =>  TRUE
[09:09:14.695]            // while "1"  (timeout="50000")
[09:09:14.695]            // while-condition  =>  TRUE
[09:09:14.695]            // while "1"  (timeout="50000")
[09:09:14.695]            // while-condition  =>  TRUE
[09:09:14.695]            // while "1"  (timeout="50000")
[09:09:14.696]            // while-condition  =>  TRUE
[09:09:14.696]            // while "1"  (timeout="50000")
[09:09:14.696]            // while-condition  =>  TRUE
[09:09:14.696]            // while "1"  (timeout="50000")
[09:09:14.696]            // while-condition  =>  TRUE
[09:09:14.697]            // while "1"  (timeout="50000")
[09:09:14.697]            // while-condition  =>  TRUE
[09:09:14.697]            // while "1"  (timeout="50000")
[09:09:14.698]            // while-condition  =>  TRUE
[09:09:14.698]            // while "1"  (timeout="50000")
[09:09:14.698]            // while-condition  =>  TRUE
[09:09:14.698]            // while "1"  (timeout="50000")
[09:09:14.698]            // while-condition  =>  TRUE
[09:09:14.698]            // while "1"  (timeout="50000")
[09:09:14.699]            // while-condition  =>  TRUE
[09:09:14.699]            // while "1"  (timeout="50000")
[09:09:14.699]            // while-condition  =>  TRUE
[09:09:14.699]            // while "1"  (timeout="50000")
[09:09:14.699]            // while-condition  =>  TRUE
[09:09:14.700]            // while "1"  (timeout="50000")
[09:09:14.700]            // while-condition  =>  TRUE
[09:09:14.700]            // while "1"  (timeout="50000")
[09:09:14.700]            // while-condition  =>  TRUE
[09:09:14.700]            // while "1"  (timeout="50000")
[09:09:14.701]            // while-condition  =>  TRUE
[09:09:14.701]            // while "1"  (timeout="50000")
[09:09:14.701]            // while-condition  =>  TRUE
[09:09:14.701]            // while "1"  (timeout="50000")
[09:09:14.701]            // while-condition  =>  TRUE
[09:09:14.701]            // while "1"  (timeout="50000")
[09:09:14.701]            // while-condition  =>  TRUE
[09:09:14.702]            // while "1"  (timeout="50000")
[09:09:14.702]            // while-condition  =>  TRUE
[09:09:14.702]            // while "1"  (timeout="50000")
[09:09:14.702]            // while-condition  =>  TRUE
[09:09:14.702]            // while "1"  (timeout="50000")
[09:09:14.703]            // while-condition  =>  TRUE
[09:09:14.703]            // while "1"  (timeout="50000")
[09:09:14.703]            // while-condition  =>  TRUE
[09:09:14.703]            // while "1"  (timeout="50000")
[09:09:14.704]            // while-condition  =>  TRUE
[09:09:14.704]            // while "1"  (timeout="50000")
[09:09:14.704]            // while-condition  =>  TRUE
[09:09:14.704]            // while "1"  (timeout="50000")
[09:09:14.704]            // while-condition  =>  TRUE
[09:09:14.705]            // while "1"  (timeout="50000")
[09:09:14.705]            // while-condition  =>  TRUE
[09:09:14.705]            // while "1"  (timeout="50000")
[09:09:14.705]            // while-condition  =>  TRUE
[09:09:14.705]            // while "1"  (timeout="50000")
[09:09:14.705]            // while-condition  =>  TRUE
[09:09:14.705]            // while "1"  (timeout="50000")
[09:09:14.706]            // while-condition  =>  TRUE
[09:09:14.706]            // while "1"  (timeout="50000")
[09:09:14.706]            // while-condition  =>  TRUE
[09:09:14.707]            // while "1"  (timeout="50000")
[09:09:14.707]            // while-condition  =>  TRUE
[09:09:14.707]            // while "1"  (timeout="50000")
[09:09:14.707]            // while-condition  =>  TRUE
[09:09:14.707]            // while "1"  (timeout="50000")
[09:09:14.707]            // while  =>  TIMEOUT
[09:09:14.708]            // end while "1"
[09:09:14.708]          </control>
[09:09:14.708]          <block atomic="false" info="">
[09:09:14.708]            DAP_SWJ_Pins(nReset, nReset, 0);
[09:09:14.710]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:09:14.711]          </block>
[09:09:14.711]          <control if="" while="1" timeout="10000" info="">
[09:09:14.711]            // while "1"  (timeout="10000")
[09:09:14.711]            // while-condition  =>  TRUE
[09:09:14.711]            // while "1"  (timeout="10000")
[09:09:14.712]            // while-condition  =>  TRUE
[09:09:14.712]            // while "1"  (timeout="10000")
[09:09:14.712]            // while-condition  =>  TRUE
[09:09:14.712]            // while "1"  (timeout="10000")
[09:09:14.712]            // while-condition  =>  TRUE
[09:09:14.713]            // while "1"  (timeout="10000")
[09:09:14.713]            // while-condition  =>  TRUE
[09:09:14.713]            // while "1"  (timeout="10000")
[09:09:14.713]            // while-condition  =>  TRUE
[09:09:14.714]            // while "1"  (timeout="10000")
[09:09:14.714]            // while-condition  =>  TRUE
[09:09:14.714]            // while "1"  (timeout="10000")
[09:09:14.714]            // while-condition  =>  TRUE
[09:09:14.714]            // while "1"  (timeout="10000")
[09:09:14.714]            // while-condition  =>  TRUE
[09:09:14.715]            // while "1"  (timeout="10000")
[09:09:14.715]            // while-condition  =>  TRUE
[09:09:14.715]            // while "1"  (timeout="10000")
[09:09:14.715]            // while-condition  =>  TRUE
[09:09:14.716]            // while "1"  (timeout="10000")
[09:09:14.716]            // while-condition  =>  TRUE
[09:09:14.716]            // while "1"  (timeout="10000")
[09:09:14.717]            // while-condition  =>  TRUE
[09:09:14.717]            // while "1"  (timeout="10000")
[09:09:14.717]            // while-condition  =>  TRUE
[09:09:14.718]            // while "1"  (timeout="10000")
[09:09:14.718]            // while-condition  =>  TRUE
[09:09:14.718]            // while "1"  (timeout="10000")
[09:09:14.718]            // while-condition  =>  TRUE
[09:09:14.719]            // while "1"  (timeout="10000")
[09:09:14.719]            // while-condition  =>  TRUE
[09:09:14.719]            // while "1"  (timeout="10000")
[09:09:14.719]            // while-condition  =>  TRUE
[09:09:14.720]            // while "1"  (timeout="10000")
[09:09:14.720]            // while-condition  =>  TRUE
[09:09:14.720]            // while "1"  (timeout="10000")
[09:09:14.720]            // while-condition  =>  TRUE
[09:09:14.721]            // while "1"  (timeout="10000")
[09:09:14.721]            // while-condition  =>  TRUE
[09:09:14.721]            // while "1"  (timeout="10000")
[09:09:14.722]            // while-condition  =>  TRUE
[09:09:14.722]            // while "1"  (timeout="10000")
[09:09:14.722]            // while-condition  =>  TRUE
[09:09:14.722]            // while "1"  (timeout="10000")
[09:09:14.722]            // while-condition  =>  TRUE
[09:09:14.722]            // while "1"  (timeout="10000")
[09:09:14.723]            // while-condition  =>  TRUE
[09:09:14.723]            // while "1"  (timeout="10000")
[09:09:14.723]            // while  =>  TIMEOUT
[09:09:14.723]            // end while "1"
[09:09:14.723]          </control>
[09:09:14.724]          <block atomic="true" info="">
[09:09:14.727]  
[09:09:14.727]  ! W001 : No atomic sequence support in debug unit
[09:09:14.727]  
[09:09:14.729]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:09:14.732]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:09:14.732]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:09:14.735]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:09:14.735]          </block>
[09:09:14.736]          <block atomic="false" info="">
[09:09:14.736]            __errorcontrol = 0x00000001;
[09:09:14.737]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:09:14.738]            ReadDP(0x0);
[09:09:14.740]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:09:14.740]            __errorcontrol = 0x00000000;
[09:09:14.742]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:09:14.742]          </block>
[09:09:14.743]        </sequence>
[09:09:14.743]      Sequence("DebugPortSetup");
[09:09:14.743]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:09:14.744]        </sequence>
[09:09:14.744]      Sequence("DebugPortStart");
[09:09:14.745]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:09:14.745]          <block atomic="false" info="">
[09:09:14.746]            __var SW_DP_ABORT  = 0x0;
[09:09:14.746]              // -> [SW_DP_ABORT <= 0x00000000]
[09:09:14.746]            __var DP_CTRL_STAT = 0x4;
[09:09:14.746]              // -> [DP_CTRL_STAT <= 0x00000004]
[09:09:14.747]            __var DP_SELECT    = 0x8;
[09:09:14.747]              // -> [DP_SELECT <= 0x00000008]
[09:09:14.747]            __var powered_down = 0;
[09:09:14.748]              // -> [powered_down <= 0x00000000]
[09:09:14.748]            WriteDP(DP_SELECT, 0x00000000);
[09:09:14.750]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:09:14.750]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:09:14.752]              // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:09:14.752]              // -> [powered_down <= 0x00000000]
[09:09:14.753]          </block>
[09:09:14.753]          <control if="powered_down" while="" timeout="0" info="">
[09:09:14.753]            // if-block "powered_down"
[09:09:14.754]              // =>  FALSE
[09:09:14.754]            // skip if-block "powered_down"
[09:09:14.755]          </control>
[09:09:14.755]        </sequence>
[09:09:14.755]      Sequence("DebugCoreStart");
[09:09:14.756]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:09:14.756]          <block atomic="true" info="">
[09:09:14.760]  
[09:09:14.760]  ! W001 : No atomic sequence support in debug unit
[09:09:14.760]  
[09:09:14.762]            __var DP_R_IDCODE    = 0x0;
[09:09:14.762]              // -> [DP_R_IDCODE <= 0x00000000]
[09:09:14.763]            __var DP_W_ABORT    = 0x0;
[09:09:14.763]              // -> [DP_W_ABORT <= 0x00000000]
[09:09:14.764]            __var DP_CTRLSTAT = 0x4;
[09:09:14.764]              // -> [DP_CTRLSTAT <= 0x00000004]
[09:09:14.764]            __var DP_W_SELECT    = 0x8;
[09:09:14.764]              // -> [DP_W_SELECT <= 0x00000008]
[09:09:14.765]            __var AP_TAR		= 0x4;
[09:09:14.765]              // -> [AP_TAR <= 0x00000004]
[09:09:14.765]            __var AP_BD0		= 0x0;
[09:09:14.765]              // -> [AP_BD0 <= 0x00000000]
[09:09:14.766]            __var AP_BD1		= 0x4;
[09:09:14.766]              // -> [AP_BD1 <= 0x00000004]
[09:09:14.766]            __var AP_BD2		= 0x8;
[09:09:14.767]              // -> [AP_BD2 <= 0x00000008]
[09:09:14.767]            __var PCWithinFlash = 0;
[09:09:14.768]              // -> [PCWithinFlash <= 0x00000000]
[09:09:14.768]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:09:14.774]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.774]          </block>
[09:09:14.785]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:09:14.786]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:09:14.792]              // -> [Read32(0xE000EDF0) => 0x00030003]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.793]            // while-condition  =>  FALSE
[09:09:14.793]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:09:14.794]          </control>
[09:09:14.795]          <block atomic="true" info="">
[09:09:14.807]  
[09:09:14.807]  ! W001 : No atomic sequence support in debug unit
[09:09:14.807]  
[09:09:14.824]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:09:14.827]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:09:14.828]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:09:14.830]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.831]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:09:14.833]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:09:14.834]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:09:14.838]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.838]          </block>
[09:09:14.840]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:09:14.840]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.842]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.842]            // while-condition  =>  TRUE
[09:09:14.843]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.846]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.847]            // while-condition  =>  TRUE
[09:09:14.847]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.850]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.851]            // while-condition  =>  TRUE
[09:09:14.852]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.854]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.855]            // while-condition  =>  TRUE
[09:09:14.855]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.858]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.858]            // while-condition  =>  TRUE
[09:09:14.859]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.861]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.861]            // while-condition  =>  TRUE
[09:09:14.862]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.864]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.865]            // while-condition  =>  TRUE
[09:09:14.865]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.867]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.868]            // while-condition  =>  TRUE
[09:09:14.868]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.870]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.870]            // while-condition  =>  TRUE
[09:09:14.870]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.873]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.874]            // while-condition  =>  TRUE
[09:09:14.874]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.876]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.877]            // while-condition  =>  TRUE
[09:09:14.877]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.879]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.879]            // while-condition  =>  TRUE
[09:09:14.880]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.882]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.883]            // while-condition  =>  TRUE
[09:09:14.884]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.885]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.886]            // while-condition  =>  TRUE
[09:09:14.886]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.888]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.889]            // while-condition  =>  TRUE
[09:09:14.890]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.892]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.893]            // while-condition  =>  TRUE
[09:09:14.893]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.896]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.897]            // while-condition  =>  TRUE
[09:09:14.897]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.899]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.900]            // while-condition  =>  TRUE
[09:09:14.900]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.902]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.902]            // while-condition  =>  TRUE
[09:09:14.902]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.905]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.905]            // while-condition  =>  TRUE
[09:09:14.906]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.908]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.909]            // while-condition  =>  TRUE
[09:09:14.909]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.911]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.912]            // while-condition  =>  TRUE
[09:09:14.912]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.914]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.915]            // while-condition  =>  TRUE
[09:09:14.915]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.917]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.917]            // while-condition  =>  TRUE
[09:09:14.918]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.920]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.920]            // while-condition  =>  TRUE
[09:09:14.921]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.923]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.924]            // while-condition  =>  TRUE
[09:09:14.925]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.927]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.927]            // while-condition  =>  TRUE
[09:09:14.928]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.930]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.930]            // while-condition  =>  TRUE
[09:09:14.931]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.933]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.934]            // while-condition  =>  TRUE
[09:09:14.935]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.937]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.937]            // while-condition  =>  TRUE
[09:09:14.938]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.940]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.941]            // while-condition  =>  TRUE
[09:09:14.942]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:09:14.942]            // while  =>  TIMEOUT
[09:09:14.943]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:09:14.943]          </control>
[09:09:14.944]          <block atomic="false" info="">
[09:09:14.944]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:09:14.946]              // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:09:14.946]              // -> [PCWithinFlash <= 0x00000000]
[09:09:14.947]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:09:14.949]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:09:14.950]          </block>
[09:09:14.950]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:09:14.951]            // if-block "PCWithinFlash == 0"
[09:09:14.951]              // =>  TRUE
[09:09:14.952]            // end if-block "PCWithinFlash == 0"
[09:09:14.952]          </control>
[09:09:14.953]        </sequence>
[09:09:14.953]    </block>
[09:09:14.953]  </sequence>
[09:09:14.954]  
[09:09:25.785]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[09:09:25.785]  
[09:09:25.786]  <debugvars>
[09:09:25.787]    // Pre-defined
[09:09:25.788]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:09:25.789]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:09:25.789]    __dp=0x00000000
[09:09:25.789]    __ap=0x00000000
[09:09:25.790]    __traceout=0x00000000      (Trace Disabled)
[09:09:25.791]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:09:25.791]    __FlashAddr=0x00000000
[09:09:25.792]    __FlashLen=0x00000000
[09:09:25.792]    __FlashArg=0x00000000
[09:09:25.793]    __FlashOp=0x00000000
[09:09:25.793]    __Result=0x00000000
[09:09:25.793]  </debugvars>
[09:09:25.794]  
[09:09:25.795]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[09:09:25.795]    <block atomic="false" info="">
[09:09:25.795]      __var nReset      = 0x80;
[09:09:25.796]        // -> [nReset <= 0x00000080]
[09:09:25.796]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:09:25.798]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:09:25.798]    </block>
[09:09:25.798]    <control if="" while="1" timeout="50000" info="">
[09:09:25.799]      // while "1"  (timeout="50000")
[09:09:25.799]      // while-condition  =>  TRUE
[09:09:25.799]      // while "1"  (timeout="50000")
[09:09:25.800]      // while-condition  =>  TRUE
[09:09:25.800]      // while "1"  (timeout="50000")
[09:09:25.800]      // while-condition  =>  TRUE
[09:09:25.801]      // while "1"  (timeout="50000")
[09:09:25.801]      // while-condition  =>  TRUE
[09:09:25.801]      // while "1"  (timeout="50000")
[09:09:25.801]      // while-condition  =>  TRUE
[09:09:25.802]      // while "1"  (timeout="50000")
[09:09:25.802]      // while-condition  =>  TRUE
[09:09:25.802]      // while "1"  (timeout="50000")
[09:09:25.803]      // while-condition  =>  TRUE
[09:09:25.803]      // while "1"  (timeout="50000")
[09:09:25.803]      // while-condition  =>  TRUE
[09:09:25.803]      // while "1"  (timeout="50000")
[09:09:25.804]      // while-condition  =>  TRUE
[09:09:25.804]      // while "1"  (timeout="50000")
[09:09:25.804]      // while-condition  =>  TRUE
[09:09:25.804]      // while "1"  (timeout="50000")
[09:09:25.805]      // while-condition  =>  TRUE
[09:09:25.805]      // while "1"  (timeout="50000")
[09:09:25.805]      // while-condition  =>  TRUE
[09:09:25.805]      // while "1"  (timeout="50000")
[09:09:25.806]      // while-condition  =>  TRUE
[09:09:25.806]      // while "1"  (timeout="50000")
[09:09:25.806]      // while-condition  =>  TRUE
[09:09:25.806]      // while "1"  (timeout="50000")
[09:09:25.806]      // while-condition  =>  TRUE
[09:09:25.807]      // while "1"  (timeout="50000")
[09:09:25.807]      // while-condition  =>  TRUE
[09:09:25.807]      // while "1"  (timeout="50000")
[09:09:25.807]      // while-condition  =>  TRUE
[09:09:25.807]      // while "1"  (timeout="50000")
[09:09:25.807]      // while-condition  =>  TRUE
[09:09:25.807]      // while "1"  (timeout="50000")
[09:09:25.808]      // while-condition  =>  TRUE
[09:09:25.808]      // while "1"  (timeout="50000")
[09:09:25.808]      // while-condition  =>  TRUE
[09:09:25.808]      // while "1"  (timeout="50000")
[09:09:25.808]      // while-condition  =>  TRUE
[09:09:25.809]      // while "1"  (timeout="50000")
[09:09:25.809]      // while-condition  =>  TRUE
[09:09:25.809]      // while "1"  (timeout="50000")
[09:09:25.809]      // while-condition  =>  TRUE
[09:09:25.809]      // while "1"  (timeout="50000")
[09:09:25.810]      // while-condition  =>  TRUE
[09:09:25.810]      // while "1"  (timeout="50000")
[09:09:25.810]      // while-condition  =>  TRUE
[09:09:25.810]      // while "1"  (timeout="50000")
[09:09:25.810]      // while-condition  =>  TRUE
[09:09:25.810]      // while "1"  (timeout="50000")
[09:09:25.811]      // while-condition  =>  TRUE
[09:09:25.811]      // while "1"  (timeout="50000")
[09:09:25.812]      // while-condition  =>  TRUE
[09:09:25.812]      // while "1"  (timeout="50000")
[09:09:25.812]      // while-condition  =>  TRUE
[09:09:25.812]      // while "1"  (timeout="50000")
[09:09:25.812]      // while-condition  =>  TRUE
[09:09:25.812]      // while "1"  (timeout="50000")
[09:09:25.813]      // while-condition  =>  TRUE
[09:09:25.813]      // while "1"  (timeout="50000")
[09:09:25.813]      // while-condition  =>  TRUE
[09:09:25.813]      // while "1"  (timeout="50000")
[09:09:25.813]      // while-condition  =>  TRUE
[09:09:25.814]      // while "1"  (timeout="50000")
[09:09:25.814]      // while-condition  =>  TRUE
[09:09:25.814]      // while "1"  (timeout="50000")
[09:09:25.814]      // while-condition  =>  TRUE
[09:09:25.814]      // while "1"  (timeout="50000")
[09:09:25.815]      // while-condition  =>  TRUE
[09:09:25.815]      // while "1"  (timeout="50000")
[09:09:25.815]      // while-condition  =>  TRUE
[09:09:25.815]      // while "1"  (timeout="50000")
[09:09:25.815]      // while-condition  =>  TRUE
[09:09:25.815]      // while "1"  (timeout="50000")
[09:09:25.816]      // while-condition  =>  TRUE
[09:09:25.816]      // while "1"  (timeout="50000")
[09:09:25.816]      // while-condition  =>  TRUE
[09:09:25.816]      // while "1"  (timeout="50000")
[09:09:25.816]      // while-condition  =>  TRUE
[09:09:25.817]      // while "1"  (timeout="50000")
[09:09:25.817]      // while-condition  =>  TRUE
[09:09:25.817]      // while "1"  (timeout="50000")
[09:09:25.817]      // while-condition  =>  TRUE
[09:09:25.817]      // while "1"  (timeout="50000")
[09:09:25.818]      // while-condition  =>  TRUE
[09:09:25.818]      // while "1"  (timeout="50000")
[09:09:25.818]      // while-condition  =>  TRUE
[09:09:25.818]      // while "1"  (timeout="50000")
[09:09:25.818]      // while-condition  =>  TRUE
[09:09:25.818]      // while "1"  (timeout="50000")
[09:09:25.818]      // while-condition  =>  TRUE
[09:09:25.819]      // while "1"  (timeout="50000")
[09:09:25.819]      // while-condition  =>  TRUE
[09:09:25.819]      // while "1"  (timeout="50000")
[09:09:25.819]      // while-condition  =>  TRUE
[09:09:25.819]      // while "1"  (timeout="50000")
[09:09:25.819]      // while-condition  =>  TRUE
[09:09:25.820]      // while "1"  (timeout="50000")
[09:09:25.820]      // while-condition  =>  TRUE
[09:09:25.820]      // while "1"  (timeout="50000")
[09:09:25.820]      // while-condition  =>  TRUE
[09:09:25.820]      // while "1"  (timeout="50000")
[09:09:25.821]      // while-condition  =>  TRUE
[09:09:25.821]      // while "1"  (timeout="50000")
[09:09:25.821]      // while-condition  =>  TRUE
[09:09:25.822]      // while "1"  (timeout="50000")
[09:09:25.822]      // while-condition  =>  TRUE
[09:09:25.822]      // while "1"  (timeout="50000")
[09:09:25.822]      // while-condition  =>  TRUE
[09:09:25.822]      // while "1"  (timeout="50000")
[09:09:25.823]      // while-condition  =>  TRUE
[09:09:25.823]      // while "1"  (timeout="50000")
[09:09:25.823]      // while-condition  =>  TRUE
[09:09:25.823]      // while "1"  (timeout="50000")
[09:09:25.823]      // while-condition  =>  TRUE
[09:09:25.823]      // while "1"  (timeout="50000")
[09:09:25.824]      // while-condition  =>  TRUE
[09:09:25.824]      // while "1"  (timeout="50000")
[09:09:25.824]      // while-condition  =>  TRUE
[09:09:25.824]      // while "1"  (timeout="50000")
[09:09:25.824]      // while-condition  =>  TRUE
[09:09:25.825]      // while "1"  (timeout="50000")
[09:09:25.825]      // while-condition  =>  TRUE
[09:09:25.825]      // while "1"  (timeout="50000")
[09:09:25.825]      // while-condition  =>  TRUE
[09:09:25.825]      // while "1"  (timeout="50000")
[09:09:25.825]      // while-condition  =>  TRUE
[09:09:25.825]      // while "1"  (timeout="50000")
[09:09:25.825]      // while-condition  =>  TRUE
[09:09:25.826]      // while "1"  (timeout="50000")
[09:09:25.826]      // while-condition  =>  TRUE
[09:09:25.826]      // while "1"  (timeout="50000")
[09:09:25.826]      // while-condition  =>  TRUE
[09:09:25.826]      // while "1"  (timeout="50000")
[09:09:25.827]      // while-condition  =>  TRUE
[09:09:25.827]      // while "1"  (timeout="50000")
[09:09:25.828]      // while-condition  =>  TRUE
[09:09:25.828]      // while "1"  (timeout="50000")
[09:09:25.828]      // while-condition  =>  TRUE
[09:09:25.828]      // while "1"  (timeout="50000")
[09:09:25.828]      // while-condition  =>  TRUE
[09:09:25.829]      // while "1"  (timeout="50000")
[09:09:25.829]      // while-condition  =>  TRUE
[09:09:25.829]      // while "1"  (timeout="50000")
[09:09:25.829]      // while-condition  =>  TRUE
[09:09:25.829]      // while "1"  (timeout="50000")
[09:09:25.829]      // while-condition  =>  TRUE
[09:09:25.829]      // while "1"  (timeout="50000")
[09:09:25.830]      // while-condition  =>  TRUE
[09:09:25.830]      // while "1"  (timeout="50000")
[09:09:25.830]      // while-condition  =>  TRUE
[09:09:25.831]      // while "1"  (timeout="50000")
[09:09:25.831]      // while-condition  =>  TRUE
[09:09:25.831]      // while "1"  (timeout="50000")
[09:09:25.831]      // while-condition  =>  TRUE
[09:09:25.831]      // while "1"  (timeout="50000")
[09:09:25.831]      // while-condition  =>  TRUE
[09:09:25.832]      // while "1"  (timeout="50000")
[09:09:25.832]      // while-condition  =>  TRUE
[09:09:25.832]      // while "1"  (timeout="50000")
[09:09:25.832]      // while-condition  =>  TRUE
[09:09:25.832]      // while "1"  (timeout="50000")
[09:09:25.833]      // while-condition  =>  TRUE
[09:09:25.833]      // while "1"  (timeout="50000")
[09:09:25.833]      // while-condition  =>  TRUE
[09:09:25.833]      // while "1"  (timeout="50000")
[09:09:25.833]      // while-condition  =>  TRUE
[09:09:25.834]      // while "1"  (timeout="50000")
[09:09:25.834]      // while-condition  =>  TRUE
[09:09:25.834]      // while "1"  (timeout="50000")
[09:09:25.834]      // while-condition  =>  TRUE
[09:09:25.834]      // while "1"  (timeout="50000")
[09:09:25.835]      // while-condition  =>  TRUE
[09:09:25.835]      // while "1"  (timeout="50000")
[09:09:25.835]      // while-condition  =>  TRUE
[09:09:25.835]      // while "1"  (timeout="50000")
[09:09:25.835]      // while-condition  =>  TRUE
[09:09:25.836]      // while "1"  (timeout="50000")
[09:09:25.836]      // while-condition  =>  TRUE
[09:09:25.836]      // while "1"  (timeout="50000")
[09:09:25.836]      // while-condition  =>  TRUE
[09:09:25.836]      // while "1"  (timeout="50000")
[09:09:25.837]      // while-condition  =>  TRUE
[09:09:25.837]      // while "1"  (timeout="50000")
[09:09:25.837]      // while-condition  =>  TRUE
[09:09:25.837]      // while "1"  (timeout="50000")
[09:09:25.837]      // while-condition  =>  TRUE
[09:09:25.838]      // while "1"  (timeout="50000")
[09:09:25.838]      // while-condition  =>  TRUE
[09:09:25.838]      // while "1"  (timeout="50000")
[09:09:25.838]      // while-condition  =>  TRUE
[09:09:25.838]      // while "1"  (timeout="50000")
[09:09:25.838]      // while-condition  =>  TRUE
[09:09:25.839]      // while "1"  (timeout="50000")
[09:09:25.839]      // while-condition  =>  TRUE
[09:09:25.839]      // while "1"  (timeout="50000")
[09:09:25.839]      // while-condition  =>  TRUE
[09:09:25.839]      // while "1"  (timeout="50000")
[09:09:25.839]      // while-condition  =>  TRUE
[09:09:25.839]      // while "1"  (timeout="50000")
[09:09:25.840]      // while-condition  =>  TRUE
[09:09:25.840]      // while "1"  (timeout="50000")
[09:09:25.840]      // while-condition  =>  TRUE
[09:09:25.840]      // while "1"  (timeout="50000")
[09:09:25.840]      // while-condition  =>  TRUE
[09:09:25.841]      // while "1"  (timeout="50000")
[09:09:25.841]      // while-condition  =>  TRUE
[09:09:25.841]      // while "1"  (timeout="50000")
[09:09:25.841]      // while-condition  =>  TRUE
[09:09:25.841]      // while "1"  (timeout="50000")
[09:09:25.841]      // while-condition  =>  TRUE
[09:09:25.841]      // while "1"  (timeout="50000")
[09:09:25.842]      // while-condition  =>  TRUE
[09:09:25.842]      // while "1"  (timeout="50000")
[09:09:25.842]      // while-condition  =>  TRUE
[09:09:25.842]      // while "1"  (timeout="50000")
[09:09:25.842]      // while-condition  =>  TRUE
[09:09:25.843]      // while "1"  (timeout="50000")
[09:09:25.843]      // while-condition  =>  TRUE
[09:09:25.844]      // while "1"  (timeout="50000")
[09:09:25.844]      // while-condition  =>  TRUE
[09:09:25.844]      // while "1"  (timeout="50000")
[09:09:25.844]      // while-condition  =>  TRUE
[09:09:25.844]      // while "1"  (timeout="50000")
[09:09:25.845]      // while-condition  =>  TRUE
[09:09:25.845]      // while "1"  (timeout="50000")
[09:09:25.845]      // while-condition  =>  TRUE
[09:09:25.845]      // while "1"  (timeout="50000")
[09:09:25.845]      // while-condition  =>  TRUE
[09:09:25.845]      // while "1"  (timeout="50000")
[09:09:25.846]      // while-condition  =>  TRUE
[09:09:25.846]      // while "1"  (timeout="50000")
[09:09:25.846]      // while-condition  =>  TRUE
[09:09:25.846]      // while "1"  (timeout="50000")
[09:09:25.847]      // while-condition  =>  TRUE
[09:09:25.847]      // while "1"  (timeout="50000")
[09:09:25.847]      // while-condition  =>  TRUE
[09:09:25.847]      // while "1"  (timeout="50000")
[09:09:25.847]      // while-condition  =>  TRUE
[09:09:25.848]      // while "1"  (timeout="50000")
[09:09:25.848]      // while  =>  TIMEOUT
[09:09:25.848]      // end while "1"
[09:09:25.848]    </control>
[09:09:25.848]    <block atomic="false" info="">
[09:09:25.849]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:09:25.850]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:09:25.850]    </block>
[09:09:25.850]  </sequence>
[09:09:25.850]  
[09:10:34.679]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:10:34.679]  
[09:10:34.680]  <debugvars>
[09:10:34.680]    // Pre-defined
[09:10:34.681]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:10:34.681]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:10:34.681]    __dp=0x00000000
[09:10:34.682]    __ap=0x00000000
[09:10:34.682]    __traceout=0x00000000      (Trace Disabled)
[09:10:34.683]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:10:34.683]    __FlashAddr=0x00000000
[09:10:34.683]    __FlashLen=0x00000000
[09:10:34.684]    __FlashArg=0x00000000
[09:10:34.684]    __FlashOp=0x00000000
[09:10:34.684]    __Result=0x00000000
[09:10:34.685]  </debugvars>
[09:10:34.685]  
[09:10:34.685]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:10:34.686]    <block atomic="false" info="">
[09:10:34.686]      __var nReset      = 0x80;
[09:10:34.686]        // -> [nReset <= 0x00000080]
[09:10:34.686]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:10:34.688]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:10:34.688]    </block>
[09:10:34.689]    <control if="" while="1" timeout="50000" info="">
[09:10:34.689]      // while "1"  (timeout="50000")
[09:10:34.689]      // while-condition  =>  TRUE
[09:10:34.690]      // while "1"  (timeout="50000")
[09:10:34.690]      // while-condition  =>  TRUE
[09:10:34.690]      // while "1"  (timeout="50000")
[09:10:34.691]      // while-condition  =>  TRUE
[09:10:34.691]      // while "1"  (timeout="50000")
[09:10:34.691]      // while-condition  =>  TRUE
[09:10:34.691]      // while "1"  (timeout="50000")
[09:10:34.692]      // while-condition  =>  TRUE
[09:10:34.692]      // while "1"  (timeout="50000")
[09:10:34.692]      // while-condition  =>  TRUE
[09:10:34.693]      // while "1"  (timeout="50000")
[09:10:34.693]      // while-condition  =>  TRUE
[09:10:34.693]      // while "1"  (timeout="50000")
[09:10:34.693]      // while-condition  =>  TRUE
[09:10:34.694]      // while "1"  (timeout="50000")
[09:10:34.694]      // while-condition  =>  TRUE
[09:10:34.694]      // while "1"  (timeout="50000")
[09:10:34.695]      // while-condition  =>  TRUE
[09:10:34.695]      // while "1"  (timeout="50000")
[09:10:34.695]      // while-condition  =>  TRUE
[09:10:34.696]      // while "1"  (timeout="50000")
[09:10:34.696]      // while-condition  =>  TRUE
[09:10:34.696]      // while "1"  (timeout="50000")
[09:10:34.696]      // while-condition  =>  TRUE
[09:10:34.696]      // while "1"  (timeout="50000")
[09:10:34.697]      // while-condition  =>  TRUE
[09:10:34.697]      // while "1"  (timeout="50000")
[09:10:34.697]      // while-condition  =>  TRUE
[09:10:34.697]      // while "1"  (timeout="50000")
[09:10:34.698]      // while-condition  =>  TRUE
[09:10:34.698]      // while "1"  (timeout="50000")
[09:10:34.698]      // while-condition  =>  TRUE
[09:10:34.698]      // while "1"  (timeout="50000")
[09:10:34.698]      // while-condition  =>  TRUE
[09:10:34.699]      // while "1"  (timeout="50000")
[09:10:34.699]      // while-condition  =>  TRUE
[09:10:34.699]      // while "1"  (timeout="50000")
[09:10:34.699]      // while-condition  =>  TRUE
[09:10:34.699]      // while "1"  (timeout="50000")
[09:10:34.700]      // while-condition  =>  TRUE
[09:10:34.700]      // while "1"  (timeout="50000")
[09:10:34.700]      // while-condition  =>  TRUE
[09:10:34.700]      // while "1"  (timeout="50000")
[09:10:34.700]      // while-condition  =>  TRUE
[09:10:34.701]      // while "1"  (timeout="50000")
[09:10:34.701]      // while-condition  =>  TRUE
[09:10:34.701]      // while "1"  (timeout="50000")
[09:10:34.701]      // while-condition  =>  TRUE
[09:10:34.701]      // while "1"  (timeout="50000")
[09:10:34.702]      // while-condition  =>  TRUE
[09:10:34.702]      // while "1"  (timeout="50000")
[09:10:34.702]      // while-condition  =>  TRUE
[09:10:34.702]      // while "1"  (timeout="50000")
[09:10:34.702]      // while-condition  =>  TRUE
[09:10:34.703]      // while "1"  (timeout="50000")
[09:10:34.703]      // while-condition  =>  TRUE
[09:10:34.703]      // while "1"  (timeout="50000")
[09:10:34.703]      // while-condition  =>  TRUE
[09:10:34.703]      // while "1"  (timeout="50000")
[09:10:34.704]      // while-condition  =>  TRUE
[09:10:34.704]      // while "1"  (timeout="50000")
[09:10:34.704]      // while-condition  =>  TRUE
[09:10:34.704]      // while "1"  (timeout="50000")
[09:10:34.704]      // while-condition  =>  TRUE
[09:10:34.705]      // while "1"  (timeout="50000")
[09:10:34.705]      // while-condition  =>  TRUE
[09:10:34.705]      // while "1"  (timeout="50000")
[09:10:34.705]      // while-condition  =>  TRUE
[09:10:34.705]      // while "1"  (timeout="50000")
[09:10:34.706]      // while-condition  =>  TRUE
[09:10:34.706]      // while "1"  (timeout="50000")
[09:10:34.706]      // while-condition  =>  TRUE
[09:10:34.706]      // while "1"  (timeout="50000")
[09:10:34.706]      // while-condition  =>  TRUE
[09:10:34.707]      // while "1"  (timeout="50000")
[09:10:34.707]      // while-condition  =>  TRUE
[09:10:34.707]      // while "1"  (timeout="50000")
[09:10:34.707]      // while-condition  =>  TRUE
[09:10:34.707]      // while "1"  (timeout="50000")
[09:10:34.708]      // while-condition  =>  TRUE
[09:10:34.708]      // while "1"  (timeout="50000")
[09:10:34.708]      // while-condition  =>  TRUE
[09:10:34.708]      // while "1"  (timeout="50000")
[09:10:34.709]      // while-condition  =>  TRUE
[09:10:34.710]      // while "1"  (timeout="50000")
[09:10:34.710]      // while-condition  =>  TRUE
[09:10:34.710]      // while "1"  (timeout="50000")
[09:10:34.711]      // while-condition  =>  TRUE
[09:10:34.711]      // while "1"  (timeout="50000")
[09:10:34.711]      // while-condition  =>  TRUE
[09:10:34.712]      // while "1"  (timeout="50000")
[09:10:34.712]      // while-condition  =>  TRUE
[09:10:34.712]      // while "1"  (timeout="50000")
[09:10:34.712]      // while-condition  =>  TRUE
[09:10:34.713]      // while "1"  (timeout="50000")
[09:10:34.713]      // while-condition  =>  TRUE
[09:10:34.713]      // while "1"  (timeout="50000")
[09:10:34.713]      // while-condition  =>  TRUE
[09:10:34.714]      // while "1"  (timeout="50000")
[09:10:34.714]      // while-condition  =>  TRUE
[09:10:34.714]      // while "1"  (timeout="50000")
[09:10:34.714]      // while-condition  =>  TRUE
[09:10:34.715]      // while "1"  (timeout="50000")
[09:10:34.715]      // while-condition  =>  TRUE
[09:10:34.715]      // while "1"  (timeout="50000")
[09:10:34.715]      // while-condition  =>  TRUE
[09:10:34.716]      // while "1"  (timeout="50000")
[09:10:34.716]      // while-condition  =>  TRUE
[09:10:34.716]      // while "1"  (timeout="50000")
[09:10:34.716]      // while-condition  =>  TRUE
[09:10:34.716]      // while "1"  (timeout="50000")
[09:10:34.717]      // while-condition  =>  TRUE
[09:10:34.717]      // while "1"  (timeout="50000")
[09:10:34.717]      // while-condition  =>  TRUE
[09:10:34.717]      // while "1"  (timeout="50000")
[09:10:34.718]      // while-condition  =>  TRUE
[09:10:34.718]      // while "1"  (timeout="50000")
[09:10:34.718]      // while-condition  =>  TRUE
[09:10:34.718]      // while "1"  (timeout="50000")
[09:10:34.718]      // while-condition  =>  TRUE
[09:10:34.719]      // while "1"  (timeout="50000")
[09:10:34.719]      // while-condition  =>  TRUE
[09:10:34.719]      // while "1"  (timeout="50000")
[09:10:34.719]      // while-condition  =>  TRUE
[09:10:34.719]      // while "1"  (timeout="50000")
[09:10:34.720]      // while-condition  =>  TRUE
[09:10:34.720]      // while "1"  (timeout="50000")
[09:10:34.720]      // while-condition  =>  TRUE
[09:10:34.720]      // while "1"  (timeout="50000")
[09:10:34.720]      // while-condition  =>  TRUE
[09:10:34.721]      // while "1"  (timeout="50000")
[09:10:34.721]      // while-condition  =>  TRUE
[09:10:34.721]      // while "1"  (timeout="50000")
[09:10:34.721]      // while-condition  =>  TRUE
[09:10:34.721]      // while "1"  (timeout="50000")
[09:10:34.722]      // while-condition  =>  TRUE
[09:10:34.722]      // while "1"  (timeout="50000")
[09:10:34.722]      // while-condition  =>  TRUE
[09:10:34.722]      // while "1"  (timeout="50000")
[09:10:34.722]      // while-condition  =>  TRUE
[09:10:34.723]      // while "1"  (timeout="50000")
[09:10:34.723]      // while-condition  =>  TRUE
[09:10:34.723]      // while "1"  (timeout="50000")
[09:10:34.723]      // while-condition  =>  TRUE
[09:10:34.723]      // while "1"  (timeout="50000")
[09:10:34.724]      // while-condition  =>  TRUE
[09:10:34.724]      // while "1"  (timeout="50000")
[09:10:34.724]      // while-condition  =>  TRUE
[09:10:34.724]      // while "1"  (timeout="50000")
[09:10:34.724]      // while-condition  =>  TRUE
[09:10:34.725]      // while "1"  (timeout="50000")
[09:10:34.725]      // while-condition  =>  TRUE
[09:10:34.725]      // while "1"  (timeout="50000")
[09:10:34.725]      // while-condition  =>  TRUE
[09:10:34.726]      // while "1"  (timeout="50000")
[09:10:34.726]      // while-condition  =>  TRUE
[09:10:34.726]      // while "1"  (timeout="50000")
[09:10:34.726]      // while-condition  =>  TRUE
[09:10:34.726]      // while "1"  (timeout="50000")
[09:10:34.727]      // while-condition  =>  TRUE
[09:10:34.727]      // while "1"  (timeout="50000")
[09:10:34.727]      // while-condition  =>  TRUE
[09:10:34.727]      // while "1"  (timeout="50000")
[09:10:34.727]      // while-condition  =>  TRUE
[09:10:34.728]      // while "1"  (timeout="50000")
[09:10:34.728]      // while-condition  =>  TRUE
[09:10:34.728]      // while "1"  (timeout="50000")
[09:10:34.728]      // while-condition  =>  TRUE
[09:10:34.728]      // while "1"  (timeout="50000")
[09:10:34.729]      // while-condition  =>  TRUE
[09:10:34.729]      // while "1"  (timeout="50000")
[09:10:34.729]      // while-condition  =>  TRUE
[09:10:34.729]      // while "1"  (timeout="50000")
[09:10:34.730]      // while-condition  =>  TRUE
[09:10:34.730]      // while "1"  (timeout="50000")
[09:10:34.730]      // while-condition  =>  TRUE
[09:10:34.730]      // while "1"  (timeout="50000")
[09:10:34.731]      // while-condition  =>  TRUE
[09:10:34.731]      // while "1"  (timeout="50000")
[09:10:34.731]      // while-condition  =>  TRUE
[09:10:34.732]      // while "1"  (timeout="50000")
[09:10:34.732]      // while-condition  =>  TRUE
[09:10:34.732]      // while "1"  (timeout="50000")
[09:10:34.732]      // while-condition  =>  TRUE
[09:10:34.732]      // while "1"  (timeout="50000")
[09:10:34.733]      // while-condition  =>  TRUE
[09:10:34.733]      // while "1"  (timeout="50000")
[09:10:34.733]      // while-condition  =>  TRUE
[09:10:34.733]      // while "1"  (timeout="50000")
[09:10:34.734]      // while-condition  =>  TRUE
[09:10:34.734]      // while "1"  (timeout="50000")
[09:10:34.734]      // while-condition  =>  TRUE
[09:10:34.734]      // while "1"  (timeout="50000")
[09:10:34.735]      // while-condition  =>  TRUE
[09:10:34.735]      // while "1"  (timeout="50000")
[09:10:34.735]      // while-condition  =>  TRUE
[09:10:34.735]      // while "1"  (timeout="50000")
[09:10:34.736]      // while-condition  =>  TRUE
[09:10:34.736]      // while "1"  (timeout="50000")
[09:10:34.736]      // while-condition  =>  TRUE
[09:10:34.736]      // while "1"  (timeout="50000")
[09:10:34.737]      // while-condition  =>  TRUE
[09:10:34.737]      // while "1"  (timeout="50000")
[09:10:34.737]      // while-condition  =>  TRUE
[09:10:34.737]      // while "1"  (timeout="50000")
[09:10:34.737]      // while-condition  =>  TRUE
[09:10:34.738]      // while "1"  (timeout="50000")
[09:10:34.738]      // while  =>  TIMEOUT
[09:10:34.738]      // end while "1"
[09:10:34.738]    </control>
[09:10:34.739]    <block atomic="false" info="">
[09:10:34.739]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:10:34.741]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:10:34.742]    </block>
[09:10:34.742]    <control if="" while="1" timeout="10000" info="">
[09:10:34.742]      // while "1"  (timeout="10000")
[09:10:34.742]      // while-condition  =>  TRUE
[09:10:34.742]      // while "1"  (timeout="10000")
[09:10:34.743]      // while-condition  =>  TRUE
[09:10:34.743]      // while "1"  (timeout="10000")
[09:10:34.743]      // while-condition  =>  TRUE
[09:10:34.744]      // while "1"  (timeout="10000")
[09:10:34.744]      // while-condition  =>  TRUE
[09:10:34.745]      // while "1"  (timeout="10000")
[09:10:34.745]      // while-condition  =>  TRUE
[09:10:34.745]      // while "1"  (timeout="10000")
[09:10:34.746]      // while-condition  =>  TRUE
[09:10:34.746]      // while "1"  (timeout="10000")
[09:10:34.747]      // while-condition  =>  TRUE
[09:10:34.747]      // while "1"  (timeout="10000")
[09:10:34.748]      // while-condition  =>  TRUE
[09:10:34.748]      // while "1"  (timeout="10000")
[09:10:34.748]      // while-condition  =>  TRUE
[09:10:34.749]      // while "1"  (timeout="10000")
[09:10:34.749]      // while-condition  =>  TRUE
[09:10:34.749]      // while "1"  (timeout="10000")
[09:10:34.750]      // while-condition  =>  TRUE
[09:10:34.750]      // while "1"  (timeout="10000")
[09:10:34.750]      // while-condition  =>  TRUE
[09:10:34.751]      // while "1"  (timeout="10000")
[09:10:34.751]      // while-condition  =>  TRUE
[09:10:34.751]      // while "1"  (timeout="10000")
[09:10:34.751]      // while-condition  =>  TRUE
[09:10:34.752]      // while "1"  (timeout="10000")
[09:10:34.752]      // while-condition  =>  TRUE
[09:10:34.752]      // while "1"  (timeout="10000")
[09:10:34.753]      // while-condition  =>  TRUE
[09:10:34.753]      // while "1"  (timeout="10000")
[09:10:34.753]      // while-condition  =>  TRUE
[09:10:34.754]      // while "1"  (timeout="10000")
[09:10:34.754]      // while  =>  TIMEOUT
[09:10:34.754]      // end while "1"
[09:10:34.755]    </control>
[09:10:34.755]    <block atomic="true" info="">
[09:10:34.758]  
[09:10:34.758]  ! W001 : No atomic sequence support in debug unit
[09:10:34.758]  
[09:10:34.760]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:10:34.762]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:10:34.763]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:10:34.764]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:10:34.765]    </block>
[09:10:34.765]    <block atomic="false" info="">
[09:10:34.765]      __errorcontrol = 0x00000001;
[09:10:34.766]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:10:34.766]      ReadDP(0x0);
[09:10:34.774]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:10:34.791]      __errorcontrol = 0x00000000;
[09:10:34.791]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:10:34.791]    </block>
[09:10:34.792]  </sequence>
[09:10:34.792]  
[09:10:34.793]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:10:34.793]  
[09:10:34.793]  <debugvars>
[09:10:34.794]    // Pre-defined
[09:10:34.794]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:10:34.795]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:10:34.795]    __dp=0x00000000
[09:10:34.796]    __ap=0x00000000
[09:10:34.796]    __traceout=0x00000000      (Trace Disabled)
[09:10:34.796]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:10:34.797]    __FlashAddr=0x00000000
[09:10:34.797]    __FlashLen=0x00000000
[09:10:34.797]    __FlashArg=0x00000000
[09:10:34.798]    __FlashOp=0x00000000
[09:10:34.798]    __Result=0x00000000
[09:10:34.798]  </debugvars>
[09:10:34.799]  
[09:10:34.799]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:10:34.799]  </sequence>
[09:10:34.799]  
[09:11:26.478]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:11:26.478]  
[09:11:26.478]  <debugvars>
[09:11:26.479]    // Pre-defined
[09:11:26.479]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:11:26.479]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:11:26.480]    __dp=0x00000000
[09:11:26.480]    __ap=0x00000000
[09:11:26.481]    __traceout=0x00000000      (Trace Disabled)
[09:11:26.481]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:11:26.481]    __FlashAddr=0x00000000
[09:11:26.482]    __FlashLen=0x00000000
[09:11:26.482]    __FlashArg=0x00000000
[09:11:26.482]    __FlashOp=0x00000000
[09:11:26.483]    __Result=0x00000000
[09:11:26.483]  </debugvars>
[09:11:26.483]  
[09:11:26.484]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:11:26.484]    <block atomic="false" info="">
[09:11:26.484]      __var nReset      = 0x80;
[09:11:26.485]        // -> [nReset <= 0x00000080]
[09:11:26.485]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:11:26.487]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:11:26.487]    </block>
[09:11:26.488]    <control if="" while="1" timeout="50000" info="">
[09:11:26.488]      // while "1"  (timeout="50000")
[09:11:26.488]      // while-condition  =>  TRUE
[09:11:26.489]      // while "1"  (timeout="50000")
[09:11:26.489]      // while-condition  =>  TRUE
[09:11:26.489]      // while "1"  (timeout="50000")
[09:11:26.490]      // while-condition  =>  TRUE
[09:11:26.490]      // while "1"  (timeout="50000")
[09:11:26.490]      // while-condition  =>  TRUE
[09:11:26.491]      // while "1"  (timeout="50000")
[09:11:26.491]      // while-condition  =>  TRUE
[09:11:26.491]      // while "1"  (timeout="50000")
[09:11:26.491]      // while-condition  =>  TRUE
[09:11:26.492]      // while "1"  (timeout="50000")
[09:11:26.492]      // while-condition  =>  TRUE
[09:11:26.492]      // while "1"  (timeout="50000")
[09:11:26.492]      // while-condition  =>  TRUE
[09:11:26.493]      // while "1"  (timeout="50000")
[09:11:26.493]      // while-condition  =>  TRUE
[09:11:26.493]      // while "1"  (timeout="50000")
[09:11:26.493]      // while-condition  =>  TRUE
[09:11:26.494]      // while "1"  (timeout="50000")
[09:11:26.494]      // while-condition  =>  TRUE
[09:11:26.494]      // while "1"  (timeout="50000")
[09:11:26.495]      // while-condition  =>  TRUE
[09:11:26.495]      // while "1"  (timeout="50000")
[09:11:26.495]      // while-condition  =>  TRUE
[09:11:26.495]      // while "1"  (timeout="50000")
[09:11:26.496]      // while-condition  =>  TRUE
[09:11:26.496]      // while "1"  (timeout="50000")
[09:11:26.496]      // while-condition  =>  TRUE
[09:11:26.496]      // while "1"  (timeout="50000")
[09:11:26.497]      // while-condition  =>  TRUE
[09:11:26.497]      // while "1"  (timeout="50000")
[09:11:26.497]      // while-condition  =>  TRUE
[09:11:26.497]      // while "1"  (timeout="50000")
[09:11:26.497]      // while-condition  =>  TRUE
[09:11:26.498]      // while "1"  (timeout="50000")
[09:11:26.498]      // while-condition  =>  TRUE
[09:11:26.498]      // while "1"  (timeout="50000")
[09:11:26.498]      // while-condition  =>  TRUE
[09:11:26.498]      // while "1"  (timeout="50000")
[09:11:26.499]      // while-condition  =>  TRUE
[09:11:26.499]      // while "1"  (timeout="50000")
[09:11:26.499]      // while-condition  =>  TRUE
[09:11:26.499]      // while "1"  (timeout="50000")
[09:11:26.499]      // while-condition  =>  TRUE
[09:11:26.500]      // while "1"  (timeout="50000")
[09:11:26.500]      // while-condition  =>  TRUE
[09:11:26.500]      // while "1"  (timeout="50000")
[09:11:26.500]      // while-condition  =>  TRUE
[09:11:26.500]      // while "1"  (timeout="50000")
[09:11:26.501]      // while-condition  =>  TRUE
[09:11:26.501]      // while "1"  (timeout="50000")
[09:11:26.501]      // while-condition  =>  TRUE
[09:11:26.501]      // while "1"  (timeout="50000")
[09:11:26.501]      // while-condition  =>  TRUE
[09:11:26.502]      // while "1"  (timeout="50000")
[09:11:26.502]      // while-condition  =>  TRUE
[09:11:26.502]      // while "1"  (timeout="50000")
[09:11:26.502]      // while-condition  =>  TRUE
[09:11:26.502]      // while "1"  (timeout="50000")
[09:11:26.503]      // while-condition  =>  TRUE
[09:11:26.503]      // while "1"  (timeout="50000")
[09:11:26.503]      // while-condition  =>  TRUE
[09:11:26.503]      // while "1"  (timeout="50000")
[09:11:26.503]      // while-condition  =>  TRUE
[09:11:26.504]      // while "1"  (timeout="50000")
[09:11:26.504]      // while-condition  =>  TRUE
[09:11:26.504]      // while "1"  (timeout="50000")
[09:11:26.504]      // while-condition  =>  TRUE
[09:11:26.504]      // while "1"  (timeout="50000")
[09:11:26.505]      // while-condition  =>  TRUE
[09:11:26.505]      // while "1"  (timeout="50000")
[09:11:26.505]      // while-condition  =>  TRUE
[09:11:26.505]      // while "1"  (timeout="50000")
[09:11:26.505]      // while-condition  =>  TRUE
[09:11:26.506]      // while "1"  (timeout="50000")
[09:11:26.506]      // while-condition  =>  TRUE
[09:11:26.506]      // while "1"  (timeout="50000")
[09:11:26.506]      // while-condition  =>  TRUE
[09:11:26.506]      // while "1"  (timeout="50000")
[09:11:26.507]      // while-condition  =>  TRUE
[09:11:26.507]      // while "1"  (timeout="50000")
[09:11:26.507]      // while-condition  =>  TRUE
[09:11:26.507]      // while "1"  (timeout="50000")
[09:11:26.507]      // while-condition  =>  TRUE
[09:11:26.508]      // while "1"  (timeout="50000")
[09:11:26.508]      // while-condition  =>  TRUE
[09:11:26.508]      // while "1"  (timeout="50000")
[09:11:26.508]      // while-condition  =>  TRUE
[09:11:26.509]      // while "1"  (timeout="50000")
[09:11:26.509]      // while-condition  =>  TRUE
[09:11:26.509]      // while "1"  (timeout="50000")
[09:11:26.509]      // while-condition  =>  TRUE
[09:11:26.509]      // while "1"  (timeout="50000")
[09:11:26.510]      // while-condition  =>  TRUE
[09:11:26.510]      // while "1"  (timeout="50000")
[09:11:26.510]      // while-condition  =>  TRUE
[09:11:26.510]      // while "1"  (timeout="50000")
[09:11:26.511]      // while-condition  =>  TRUE
[09:11:26.511]      // while "1"  (timeout="50000")
[09:11:26.511]      // while-condition  =>  TRUE
[09:11:26.511]      // while "1"  (timeout="50000")
[09:11:26.512]      // while-condition  =>  TRUE
[09:11:26.512]      // while "1"  (timeout="50000")
[09:11:26.512]      // while-condition  =>  TRUE
[09:11:26.512]      // while "1"  (timeout="50000")
[09:11:26.513]      // while-condition  =>  TRUE
[09:11:26.513]      // while "1"  (timeout="50000")
[09:11:26.513]      // while-condition  =>  TRUE
[09:11:26.513]      // while "1"  (timeout="50000")
[09:11:26.513]      // while-condition  =>  TRUE
[09:11:26.514]      // while "1"  (timeout="50000")
[09:11:26.514]      // while-condition  =>  TRUE
[09:11:26.514]      // while "1"  (timeout="50000")
[09:11:26.514]      // while-condition  =>  TRUE
[09:11:26.515]      // while "1"  (timeout="50000")
[09:11:26.515]      // while-condition  =>  TRUE
[09:11:26.515]      // while "1"  (timeout="50000")
[09:11:26.515]      // while-condition  =>  TRUE
[09:11:26.516]      // while "1"  (timeout="50000")
[09:11:26.516]      // while-condition  =>  TRUE
[09:11:26.516]      // while "1"  (timeout="50000")
[09:11:26.516]      // while-condition  =>  TRUE
[09:11:26.517]      // while "1"  (timeout="50000")
[09:11:26.517]      // while-condition  =>  TRUE
[09:11:26.517]      // while "1"  (timeout="50000")
[09:11:26.517]      // while-condition  =>  TRUE
[09:11:26.518]      // while "1"  (timeout="50000")
[09:11:26.518]      // while-condition  =>  TRUE
[09:11:26.518]      // while "1"  (timeout="50000")
[09:11:26.518]      // while-condition  =>  TRUE
[09:11:26.518]      // while "1"  (timeout="50000")
[09:11:26.519]      // while-condition  =>  TRUE
[09:11:26.519]      // while "1"  (timeout="50000")
[09:11:26.519]      // while-condition  =>  TRUE
[09:11:26.519]      // while "1"  (timeout="50000")
[09:11:26.520]      // while-condition  =>  TRUE
[09:11:26.520]      // while "1"  (timeout="50000")
[09:11:26.520]      // while-condition  =>  TRUE
[09:11:26.520]      // while "1"  (timeout="50000")
[09:11:26.521]      // while-condition  =>  TRUE
[09:11:26.521]      // while "1"  (timeout="50000")
[09:11:26.521]      // while-condition  =>  TRUE
[09:11:26.521]      // while "1"  (timeout="50000")
[09:11:26.522]      // while-condition  =>  TRUE
[09:11:26.522]      // while "1"  (timeout="50000")
[09:11:26.522]      // while-condition  =>  TRUE
[09:11:26.522]      // while "1"  (timeout="50000")
[09:11:26.522]      // while-condition  =>  TRUE
[09:11:26.523]      // while "1"  (timeout="50000")
[09:11:26.523]      // while-condition  =>  TRUE
[09:11:26.523]      // while "1"  (timeout="50000")
[09:11:26.523]      // while-condition  =>  TRUE
[09:11:26.524]      // while "1"  (timeout="50000")
[09:11:26.524]      // while-condition  =>  TRUE
[09:11:26.524]      // while "1"  (timeout="50000")
[09:11:26.524]      // while-condition  =>  TRUE
[09:11:26.525]      // while "1"  (timeout="50000")
[09:11:26.525]      // while-condition  =>  TRUE
[09:11:26.525]      // while "1"  (timeout="50000")
[09:11:26.525]      // while-condition  =>  TRUE
[09:11:26.526]      // while "1"  (timeout="50000")
[09:11:26.526]      // while-condition  =>  TRUE
[09:11:26.526]      // while "1"  (timeout="50000")
[09:11:26.526]      // while-condition  =>  TRUE
[09:11:26.526]      // while "1"  (timeout="50000")
[09:11:26.527]      // while-condition  =>  TRUE
[09:11:26.527]      // while "1"  (timeout="50000")
[09:11:26.527]      // while-condition  =>  TRUE
[09:11:26.527]      // while "1"  (timeout="50000")
[09:11:26.528]      // while-condition  =>  TRUE
[09:11:26.528]      // while "1"  (timeout="50000")
[09:11:26.528]      // while-condition  =>  TRUE
[09:11:26.528]      // while "1"  (timeout="50000")
[09:11:26.529]      // while-condition  =>  TRUE
[09:11:26.529]      // while "1"  (timeout="50000")
[09:11:26.529]      // while-condition  =>  TRUE
[09:11:26.529]      // while "1"  (timeout="50000")
[09:11:26.530]      // while-condition  =>  TRUE
[09:11:26.530]      // while "1"  (timeout="50000")
[09:11:26.530]      // while-condition  =>  TRUE
[09:11:26.530]      // while "1"  (timeout="50000")
[09:11:26.531]      // while-condition  =>  TRUE
[09:11:26.531]      // while "1"  (timeout="50000")
[09:11:26.531]      // while-condition  =>  TRUE
[09:11:26.531]      // while "1"  (timeout="50000")
[09:11:26.532]      // while-condition  =>  TRUE
[09:11:26.532]      // while "1"  (timeout="50000")
[09:11:26.532]      // while-condition  =>  TRUE
[09:11:26.532]      // while "1"  (timeout="50000")
[09:11:26.533]      // while-condition  =>  TRUE
[09:11:26.533]      // while "1"  (timeout="50000")
[09:11:26.533]      // while-condition  =>  TRUE
[09:11:26.534]      // while "1"  (timeout="50000")
[09:11:26.534]      // while-condition  =>  TRUE
[09:11:26.534]      // while "1"  (timeout="50000")
[09:11:26.535]      // while-condition  =>  TRUE
[09:11:26.535]      // while "1"  (timeout="50000")
[09:11:26.535]      // while-condition  =>  TRUE
[09:11:26.535]      // while "1"  (timeout="50000")
[09:11:26.535]      // while-condition  =>  TRUE
[09:11:26.536]      // while "1"  (timeout="50000")
[09:11:26.536]      // while-condition  =>  TRUE
[09:11:26.536]      // while "1"  (timeout="50000")
[09:11:26.536]      // while-condition  =>  TRUE
[09:11:26.537]      // while "1"  (timeout="50000")
[09:11:26.537]      // while-condition  =>  TRUE
[09:11:26.537]      // while "1"  (timeout="50000")
[09:11:26.537]      // while-condition  =>  TRUE
[09:11:26.537]      // while "1"  (timeout="50000")
[09:11:26.538]      // while-condition  =>  TRUE
[09:11:26.538]      // while "1"  (timeout="50000")
[09:11:26.538]      // while-condition  =>  TRUE
[09:11:26.538]      // while "1"  (timeout="50000")
[09:11:26.539]      // while-condition  =>  TRUE
[09:11:26.539]      // while "1"  (timeout="50000")
[09:11:26.539]      // while-condition  =>  TRUE
[09:11:26.539]      // while "1"  (timeout="50000")
[09:11:26.539]      // while-condition  =>  TRUE
[09:11:26.540]      // while "1"  (timeout="50000")
[09:11:26.540]      // while-condition  =>  TRUE
[09:11:26.540]      // while "1"  (timeout="50000")
[09:11:26.540]      // while-condition  =>  TRUE
[09:11:26.541]      // while "1"  (timeout="50000")
[09:11:26.541]      // while-condition  =>  TRUE
[09:11:26.541]      // while "1"  (timeout="50000")
[09:11:26.541]      // while-condition  =>  TRUE
[09:11:26.541]      // while "1"  (timeout="50000")
[09:11:26.542]      // while-condition  =>  TRUE
[09:11:26.542]      // while "1"  (timeout="50000")
[09:11:26.542]      // while-condition  =>  TRUE
[09:11:26.542]      // while "1"  (timeout="50000")
[09:11:26.542]      // while-condition  =>  TRUE
[09:11:26.543]      // while "1"  (timeout="50000")
[09:11:26.543]      // while-condition  =>  TRUE
[09:11:26.543]      // while "1"  (timeout="50000")
[09:11:26.544]      // while-condition  =>  TRUE
[09:11:26.544]      // while "1"  (timeout="50000")
[09:11:26.544]      // while-condition  =>  TRUE
[09:11:26.544]      // while "1"  (timeout="50000")
[09:11:26.544]      // while-condition  =>  TRUE
[09:11:26.545]      // while "1"  (timeout="50000")
[09:11:26.545]      // while-condition  =>  TRUE
[09:11:26.545]      // while "1"  (timeout="50000")
[09:11:26.545]      // while-condition  =>  TRUE
[09:11:26.546]      // while "1"  (timeout="50000")
[09:11:26.546]      // while-condition  =>  TRUE
[09:11:26.546]      // while "1"  (timeout="50000")
[09:11:26.546]      // while-condition  =>  TRUE
[09:11:26.546]      // while "1"  (timeout="50000")
[09:11:26.547]      // while-condition  =>  TRUE
[09:11:26.547]      // while "1"  (timeout="50000")
[09:11:26.547]      // while-condition  =>  TRUE
[09:11:26.547]      // while "1"  (timeout="50000")
[09:11:26.547]      // while-condition  =>  TRUE
[09:11:26.548]      // while "1"  (timeout="50000")
[09:11:26.548]      // while-condition  =>  TRUE
[09:11:26.548]      // while "1"  (timeout="50000")
[09:11:26.548]      // while-condition  =>  TRUE
[09:11:26.549]      // while "1"  (timeout="50000")
[09:11:26.549]      // while-condition  =>  TRUE
[09:11:26.549]      // while "1"  (timeout="50000")
[09:11:26.549]      // while-condition  =>  TRUE
[09:11:26.549]      // while "1"  (timeout="50000")
[09:11:26.550]      // while-condition  =>  TRUE
[09:11:26.550]      // while "1"  (timeout="50000")
[09:11:26.550]      // while  =>  TIMEOUT
[09:11:26.550]      // end while "1"
[09:11:26.551]    </control>
[09:11:26.551]    <block atomic="false" info="">
[09:11:26.551]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:11:26.553]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:11:26.553]    </block>
[09:11:26.554]    <control if="" while="1" timeout="10000" info="">
[09:11:26.554]      // while "1"  (timeout="10000")
[09:11:26.554]      // while-condition  =>  TRUE
[09:11:26.554]      // while "1"  (timeout="10000")
[09:11:26.555]      // while-condition  =>  TRUE
[09:11:26.555]      // while "1"  (timeout="10000")
[09:11:26.555]      // while-condition  =>  TRUE
[09:11:26.556]      // while "1"  (timeout="10000")
[09:11:26.556]      // while-condition  =>  TRUE
[09:11:26.556]      // while "1"  (timeout="10000")
[09:11:26.556]      // while-condition  =>  TRUE
[09:11:26.557]      // while "1"  (timeout="10000")
[09:11:26.557]      // while-condition  =>  TRUE
[09:11:26.557]      // while "1"  (timeout="10000")
[09:11:26.558]      // while-condition  =>  TRUE
[09:11:26.558]      // while "1"  (timeout="10000")
[09:11:26.558]      // while-condition  =>  TRUE
[09:11:26.558]      // while "1"  (timeout="10000")
[09:11:26.558]      // while-condition  =>  TRUE
[09:11:26.559]      // while "1"  (timeout="10000")
[09:11:26.559]      // while-condition  =>  TRUE
[09:11:26.559]      // while "1"  (timeout="10000")
[09:11:26.559]      // while-condition  =>  TRUE
[09:11:26.560]      // while "1"  (timeout="10000")
[09:11:26.560]      // while-condition  =>  TRUE
[09:11:26.560]      // while "1"  (timeout="10000")
[09:11:26.585]      // while-condition  =>  TRUE
[09:11:26.585]      // while "1"  (timeout="10000")
[09:11:26.585]      // while  =>  TIMEOUT
[09:11:26.586]      // end while "1"
[09:11:26.586]    </control>
[09:11:26.586]    <block atomic="true" info="">
[09:11:26.590]  
[09:11:26.590]  ! W001 : No atomic sequence support in debug unit
[09:11:26.590]  
[09:11:26.592]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:11:26.594]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:11:26.594]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:11:26.596]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:11:26.596]    </block>
[09:11:26.597]    <block atomic="false" info="">
[09:11:26.597]      __errorcontrol = 0x00000001;
[09:11:26.597]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:11:26.598]      ReadDP(0x0);
[09:11:26.600]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:11:26.600]      __errorcontrol = 0x00000000;
[09:11:26.601]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:11:26.601]    </block>
[09:11:26.601]  </sequence>
[09:11:26.602]  
[09:11:26.602]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:11:26.602]  
[09:11:26.602]  <debugvars>
[09:11:26.603]    // Pre-defined
[09:11:26.603]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:11:26.603]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:11:26.604]    __dp=0x00000000
[09:11:26.604]    __ap=0x00000000
[09:11:26.604]    __traceout=0x00000000      (Trace Disabled)
[09:11:26.605]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:11:26.605]    __FlashAddr=0x00000000
[09:11:26.605]    __FlashLen=0x00000000
[09:11:26.606]    __FlashArg=0x00000000
[09:11:26.606]    __FlashOp=0x00000000
[09:11:26.606]    __Result=0x00000000
[09:11:26.607]  </debugvars>
[09:11:26.607]  
[09:11:26.607]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:11:26.608]  </sequence>
[09:11:26.608]  
[09:11:26.612]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[09:11:26.612]  
[09:11:26.612]  <debugvars>
[09:11:26.613]    // Pre-defined
[09:11:26.613]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:11:26.614]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:11:26.614]    __dp=0x00000000
[09:11:26.614]    __ap=0x00000000
[09:11:26.615]    __traceout=0x00000000      (Trace Disabled)
[09:11:26.615]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:11:26.615]    __FlashAddr=0x00000000
[09:11:26.616]    __FlashLen=0x00000000
[09:11:26.616]    __FlashArg=0x00000000
[09:11:26.616]    __FlashOp=0x00000000
[09:11:26.617]    __Result=0x00000000
[09:11:26.617]  </debugvars>
[09:11:26.617]  
[09:11:26.618]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:11:26.618]    <block atomic="false" info="">
[09:11:26.618]      __var SW_DP_ABORT  = 0x0;
[09:11:26.619]        // -> [SW_DP_ABORT <= 0x00000000]
[09:11:26.619]      __var DP_CTRL_STAT = 0x4;
[09:11:26.619]        // -> [DP_CTRL_STAT <= 0x00000004]
[09:11:26.620]      __var DP_SELECT    = 0x8;
[09:11:26.620]        // -> [DP_SELECT <= 0x00000008]
[09:11:26.620]      __var powered_down = 0;
[09:11:26.621]        // -> [powered_down <= 0x00000000]
[09:11:26.621]      WriteDP(DP_SELECT, 0x00000000);
[09:11:26.623]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:11:26.623]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:11:26.625]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[09:11:26.626]        // -> [powered_down <= 0x00000001]
[09:11:26.626]    </block>
[09:11:26.626]    <control if="powered_down" while="" timeout="0" info="">
[09:11:26.627]      // if-block "powered_down"
[09:11:26.627]        // =>  TRUE
[09:11:26.627]      <block atomic="false" info="">
[09:11:26.628]        WriteDP(DP_CTRL_STAT, 0x50000000);
[09:11:26.630]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[09:11:26.631]      </block>
[09:11:26.631]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[09:11:26.631]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[09:11:26.633]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:11:26.634]        // while-condition  =>  FALSE
[09:11:26.634]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[09:11:26.634]      </control>
[09:11:26.635]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[09:11:26.635]        // if-block "(__protocol & 0xFFFF) == 1"
[09:11:26.635]          // =>  FALSE
[09:11:26.636]        // skip if-block "(__protocol & 0xFFFF) == 1"
[09:11:26.636]      </control>
[09:11:26.636]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[09:11:26.636]        // if-block "(__protocol & 0xFFFF) == 2"
[09:11:26.637]          // =>  TRUE
[09:11:26.637]        <block atomic="false" info="">
[09:11:26.637]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[09:11:26.639]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[09:11:26.640]          WriteDP(SW_DP_ABORT, 0x0000001E);
[09:11:26.641]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[09:11:26.642]        </block>
[09:11:26.642]        // end if-block "(__protocol & 0xFFFF) == 2"
[09:11:26.642]      </control>
[09:11:26.643]      // end if-block "powered_down"
[09:11:26.643]    </control>
[09:11:26.643]  </sequence>
[09:11:26.644]  
[09:11:26.749]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:11:26.749]  
[09:11:26.749]  <debugvars>
[09:11:26.749]    // Pre-defined
[09:11:26.750]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:11:26.750]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:11:26.750]    __dp=0x00000000
[09:11:26.750]    __ap=0x00000000
[09:11:26.751]    __traceout=0x00000000      (Trace Disabled)
[09:11:26.751]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:11:26.751]    __FlashAddr=0x00000000
[09:11:26.751]    __FlashLen=0x00000000
[09:11:26.752]    __FlashArg=0x00000000
[09:11:26.752]    __FlashOp=0x00000000
[09:11:26.752]    __Result=0x00000000
[09:11:26.752]  </debugvars>
[09:11:26.752]  
[09:11:26.753]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:11:26.753]    <block atomic="true" info="">
[09:11:26.763]  
[09:11:26.763]  ! W001 : No atomic sequence support in debug unit
[09:11:26.763]  
[09:11:26.783]      __var DP_R_IDCODE    = 0x0;
[09:11:26.784]        // -> [DP_R_IDCODE <= 0x00000000]
[09:11:26.787]      __var DP_W_ABORT    = 0x0;
[09:11:26.787]        // -> [DP_W_ABORT <= 0x00000000]
[09:11:26.787]      __var DP_CTRLSTAT = 0x4;
[09:11:26.788]        // -> [DP_CTRLSTAT <= 0x00000004]
[09:11:26.788]      __var DP_W_SELECT    = 0x8;
[09:11:26.788]        // -> [DP_W_SELECT <= 0x00000008]
[09:11:26.788]      __var AP_TAR		= 0x4;
[09:11:26.789]        // -> [AP_TAR <= 0x00000004]
[09:11:26.789]      __var AP_BD0		= 0x0;
[09:11:26.789]        // -> [AP_BD0 <= 0x00000000]
[09:11:26.789]      __var AP_BD1		= 0x4;
[09:11:26.790]        // -> [AP_BD1 <= 0x00000004]
[09:11:26.790]      __var AP_BD2		= 0x8;
[09:11:26.790]        // -> [AP_BD2 <= 0x00000008]
[09:11:26.790]      __var PCWithinFlash = 0;
[09:11:26.791]        // -> [PCWithinFlash <= 0x00000000]
[09:11:26.791]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:11:26.796]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.803]    </block>
[09:11:26.803]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:11:26.803]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:11:26.810]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.811]      // while-condition  =>  FALSE
[09:11:26.811]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:11:26.812]    </control>
[09:11:26.812]    <block atomic="true" info="">
[09:11:26.820]  
[09:11:26.820]  ! W001 : No atomic sequence support in debug unit
[09:11:26.820]  
[09:11:26.834]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:11:26.840]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:11:26.840]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:11:26.842]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.842]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:11:26.844]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:11:26.844]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:11:26.849]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.849]    </block>
[09:11:26.849]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:11:26.850]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.852]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.852]      // while-condition  =>  TRUE
[09:11:26.852]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.855]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.855]      // while-condition  =>  TRUE
[09:11:26.855]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.858]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.858]      // while-condition  =>  TRUE
[09:11:26.858]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.861]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.861]      // while-condition  =>  TRUE
[09:11:26.862]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.864]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.864]      // while-condition  =>  TRUE
[09:11:26.864]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.867]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.867]      // while-condition  =>  TRUE
[09:11:26.867]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.870]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.870]      // while-condition  =>  TRUE
[09:11:26.870]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.873]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.873]      // while-condition  =>  TRUE
[09:11:26.873]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.876]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.876]      // while-condition  =>  TRUE
[09:11:26.877]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.879]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.879]      // while-condition  =>  TRUE
[09:11:26.879]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.882]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.882]      // while-condition  =>  TRUE
[09:11:26.882]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.884]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.884]      // while-condition  =>  TRUE
[09:11:26.884]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.887]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.887]      // while-condition  =>  TRUE
[09:11:26.887]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.890]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.890]      // while-condition  =>  TRUE
[09:11:26.890]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.893]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.894]      // while-condition  =>  TRUE
[09:11:26.894]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.896]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.896]      // while-condition  =>  TRUE
[09:11:26.896]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.899]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.899]      // while-condition  =>  TRUE
[09:11:26.899]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.902]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.902]      // while-condition  =>  TRUE
[09:11:26.903]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.905]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.905]      // while-condition  =>  TRUE
[09:11:26.905]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.908]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.908]      // while-condition  =>  TRUE
[09:11:26.908]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.911]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.911]      // while-condition  =>  TRUE
[09:11:26.911]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.914]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.914]      // while-condition  =>  TRUE
[09:11:26.914]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.917]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.917]      // while-condition  =>  TRUE
[09:11:26.918]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.920]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.920]      // while-condition  =>  TRUE
[09:11:26.921]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.923]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.923]      // while-condition  =>  TRUE
[09:11:26.924]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.926]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.926]      // while-condition  =>  TRUE
[09:11:26.927]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.929]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.929]      // while-condition  =>  TRUE
[09:11:26.930]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.932]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.932]      // while-condition  =>  TRUE
[09:11:26.933]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.935]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.935]      // while-condition  =>  TRUE
[09:11:26.936]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.938]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.938]      // while-condition  =>  TRUE
[09:11:26.939]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.941]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.941]      // while-condition  =>  TRUE
[09:11:26.942]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.944]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.944]      // while-condition  =>  TRUE
[09:11:26.945]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.947]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.947]      // while-condition  =>  TRUE
[09:11:26.948]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.950]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.950]      // while-condition  =>  TRUE
[09:11:26.951]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.953]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.953]      // while-condition  =>  TRUE
[09:11:26.954]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.956]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.957]      // while-condition  =>  TRUE
[09:11:26.957]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:26.957]      // while  =>  TIMEOUT
[09:11:26.958]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:11:26.958]    </control>
[09:11:26.958]    <block atomic="false" info="">
[09:11:26.958]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:11:26.960]        // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:11:26.960]        // -> [PCWithinFlash <= 0x00000000]
[09:11:26.961]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:11:26.963]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:11:26.963]    </block>
[09:11:26.964]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:11:26.964]      // if-block "PCWithinFlash == 0"
[09:11:26.964]        // =>  TRUE
[09:11:26.964]      // end if-block "PCWithinFlash == 0"
[09:11:26.964]    </control>
[09:11:26.965]  </sequence>
[09:11:26.965]  
[09:11:27.012]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[09:11:27.012]  
[09:11:27.012]  <debugvars>
[09:11:27.012]    // Pre-defined
[09:11:27.012]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:11:27.013]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:11:27.013]    __dp=0x00000000
[09:11:27.013]    __ap=0x00000000
[09:11:27.013]    __traceout=0x00000000      (Trace Disabled)
[09:11:27.014]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:11:27.014]    __FlashAddr=0x00000000
[09:11:27.014]    __FlashLen=0x00000000
[09:11:27.014]    __FlashArg=0x00000000
[09:11:27.015]    __FlashOp=0x00000000
[09:11:27.015]    __Result=0x00000000
[09:11:27.015]  </debugvars>
[09:11:27.015]  
[09:11:27.015]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[09:11:27.016]    <block atomic="false" info="">
[09:11:27.016]    </block>
[09:11:27.016]  </sequence>
[09:11:27.016]  
[09:11:27.018]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[09:11:27.018]  
[09:11:27.018]  <debugvars>
[09:11:27.019]    // Pre-defined
[09:11:27.019]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:11:27.019]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:11:27.019]    __dp=0x00000000
[09:11:27.020]    __ap=0x00000000
[09:11:27.020]    __traceout=0x00000000      (Trace Disabled)
[09:11:27.020]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:11:27.020]    __FlashAddr=0x00000000
[09:11:27.021]    __FlashLen=0x00000000
[09:11:27.021]    __FlashArg=0x00000000
[09:11:27.021]    __FlashOp=0x00000000
[09:11:27.021]    __Result=0x00000000
[09:11:27.022]  </debugvars>
[09:11:27.022]  
[09:11:27.022]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:11:27.022]    <block atomic="false" info="">
[09:11:27.022]      __var nReset      = 0x80;
[09:11:27.023]        // -> [nReset <= 0x00000080]
[09:11:27.023]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:11:27.025]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:11:27.026]    </block>
[09:11:27.026]    <control if="" while="1" timeout="50000" info="">
[09:11:27.026]      // while "1"  (timeout="50000")
[09:11:27.026]      // while-condition  =>  TRUE
[09:11:27.026]      // while "1"  (timeout="50000")
[09:11:27.027]      // while-condition  =>  TRUE
[09:11:27.027]      // while "1"  (timeout="50000")
[09:11:27.027]      // while-condition  =>  TRUE
[09:11:27.027]      // while "1"  (timeout="50000")
[09:11:27.028]      // while-condition  =>  TRUE
[09:11:27.028]      // while "1"  (timeout="50000")
[09:11:27.028]      // while-condition  =>  TRUE
[09:11:27.028]      // while "1"  (timeout="50000")
[09:11:27.029]      // while-condition  =>  TRUE
[09:11:27.029]      // while "1"  (timeout="50000")
[09:11:27.029]      // while-condition  =>  TRUE
[09:11:27.029]      // while "1"  (timeout="50000")
[09:11:27.030]      // while-condition  =>  TRUE
[09:11:27.030]      // while "1"  (timeout="50000")
[09:11:27.030]      // while-condition  =>  TRUE
[09:11:27.030]      // while "1"  (timeout="50000")
[09:11:27.031]      // while-condition  =>  TRUE
[09:11:27.031]      // while "1"  (timeout="50000")
[09:11:27.031]      // while-condition  =>  TRUE
[09:11:27.031]      // while "1"  (timeout="50000")
[09:11:27.031]      // while-condition  =>  TRUE
[09:11:27.032]      // while "1"  (timeout="50000")
[09:11:27.032]      // while-condition  =>  TRUE
[09:11:27.032]      // while "1"  (timeout="50000")
[09:11:27.032]      // while-condition  =>  TRUE
[09:11:27.033]      // while "1"  (timeout="50000")
[09:11:27.033]      // while-condition  =>  TRUE
[09:11:27.033]      // while "1"  (timeout="50000")
[09:11:27.033]      // while-condition  =>  TRUE
[09:11:27.034]      // while "1"  (timeout="50000")
[09:11:27.034]      // while-condition  =>  TRUE
[09:11:27.034]      // while "1"  (timeout="50000")
[09:11:27.034]      // while-condition  =>  TRUE
[09:11:27.035]      // while "1"  (timeout="50000")
[09:11:27.035]      // while-condition  =>  TRUE
[09:11:27.035]      // while "1"  (timeout="50000")
[09:11:27.035]      // while-condition  =>  TRUE
[09:11:27.035]      // while "1"  (timeout="50000")
[09:11:27.036]      // while-condition  =>  TRUE
[09:11:27.036]      // while "1"  (timeout="50000")
[09:11:27.036]      // while-condition  =>  TRUE
[09:11:27.036]      // while "1"  (timeout="50000")
[09:11:27.037]      // while-condition  =>  TRUE
[09:11:27.037]      // while "1"  (timeout="50000")
[09:11:27.037]      // while-condition  =>  TRUE
[09:11:27.037]      // while "1"  (timeout="50000")
[09:11:27.038]      // while-condition  =>  TRUE
[09:11:27.038]      // while "1"  (timeout="50000")
[09:11:27.038]      // while-condition  =>  TRUE
[09:11:27.038]      // while "1"  (timeout="50000")
[09:11:27.038]      // while-condition  =>  TRUE
[09:11:27.039]      // while "1"  (timeout="50000")
[09:11:27.039]      // while-condition  =>  TRUE
[09:11:27.039]      // while "1"  (timeout="50000")
[09:11:27.039]      // while-condition  =>  TRUE
[09:11:27.040]      // while "1"  (timeout="50000")
[09:11:27.040]      // while-condition  =>  TRUE
[09:11:27.040]      // while "1"  (timeout="50000")
[09:11:27.040]      // while-condition  =>  TRUE
[09:11:27.040]      // while "1"  (timeout="50000")
[09:11:27.041]      // while-condition  =>  TRUE
[09:11:27.041]      // while "1"  (timeout="50000")
[09:11:27.041]      // while-condition  =>  TRUE
[09:11:27.041]      // while "1"  (timeout="50000")
[09:11:27.042]      // while-condition  =>  TRUE
[09:11:27.042]      // while "1"  (timeout="50000")
[09:11:27.042]      // while-condition  =>  TRUE
[09:11:27.042]      // while "1"  (timeout="50000")
[09:11:27.043]      // while-condition  =>  TRUE
[09:11:27.043]      // while "1"  (timeout="50000")
[09:11:27.043]      // while-condition  =>  TRUE
[09:11:27.043]      // while "1"  (timeout="50000")
[09:11:27.044]      // while-condition  =>  TRUE
[09:11:27.044]      // while "1"  (timeout="50000")
[09:11:27.044]      // while-condition  =>  TRUE
[09:11:27.044]      // while "1"  (timeout="50000")
[09:11:27.045]      // while-condition  =>  TRUE
[09:11:27.045]      // while "1"  (timeout="50000")
[09:11:27.045]      // while-condition  =>  TRUE
[09:11:27.045]      // while "1"  (timeout="50000")
[09:11:27.045]      // while-condition  =>  TRUE
[09:11:27.046]      // while "1"  (timeout="50000")
[09:11:27.046]      // while-condition  =>  TRUE
[09:11:27.046]      // while "1"  (timeout="50000")
[09:11:27.046]      // while-condition  =>  TRUE
[09:11:27.047]      // while "1"  (timeout="50000")
[09:11:27.047]      // while-condition  =>  TRUE
[09:11:27.047]      // while "1"  (timeout="50000")
[09:11:27.047]      // while-condition  =>  TRUE
[09:11:27.047]      // while "1"  (timeout="50000")
[09:11:27.048]      // while-condition  =>  TRUE
[09:11:27.048]      // while "1"  (timeout="50000")
[09:11:27.048]      // while-condition  =>  TRUE
[09:11:27.048]      // while "1"  (timeout="50000")
[09:11:27.049]      // while-condition  =>  TRUE
[09:11:27.049]      // while "1"  (timeout="50000")
[09:11:27.049]      // while-condition  =>  TRUE
[09:11:27.049]      // while "1"  (timeout="50000")
[09:11:27.050]      // while-condition  =>  TRUE
[09:11:27.050]      // while "1"  (timeout="50000")
[09:11:27.050]      // while-condition  =>  TRUE
[09:11:27.050]      // while "1"  (timeout="50000")
[09:11:27.050]      // while-condition  =>  TRUE
[09:11:27.051]      // while "1"  (timeout="50000")
[09:11:27.051]      // while-condition  =>  TRUE
[09:11:27.051]      // while "1"  (timeout="50000")
[09:11:27.051]      // while-condition  =>  TRUE
[09:11:27.051]      // while "1"  (timeout="50000")
[09:11:27.052]      // while-condition  =>  TRUE
[09:11:27.052]      // while "1"  (timeout="50000")
[09:11:27.052]      // while-condition  =>  TRUE
[09:11:27.052]      // while "1"  (timeout="50000")
[09:11:27.053]      // while-condition  =>  TRUE
[09:11:27.053]      // while "1"  (timeout="50000")
[09:11:27.053]      // while-condition  =>  TRUE
[09:11:27.053]      // while "1"  (timeout="50000")
[09:11:27.054]      // while-condition  =>  TRUE
[09:11:27.054]      // while "1"  (timeout="50000")
[09:11:27.054]      // while-condition  =>  TRUE
[09:11:27.054]      // while "1"  (timeout="50000")
[09:11:27.054]      // while-condition  =>  TRUE
[09:11:27.055]      // while "1"  (timeout="50000")
[09:11:27.055]      // while-condition  =>  TRUE
[09:11:27.055]      // while "1"  (timeout="50000")
[09:11:27.055]      // while-condition  =>  TRUE
[09:11:27.055]      // while "1"  (timeout="50000")
[09:11:27.056]      // while-condition  =>  TRUE
[09:11:27.056]      // while "1"  (timeout="50000")
[09:11:27.056]      // while-condition  =>  TRUE
[09:11:27.056]      // while "1"  (timeout="50000")
[09:11:27.057]      // while-condition  =>  TRUE
[09:11:27.057]      // while "1"  (timeout="50000")
[09:11:27.057]      // while-condition  =>  TRUE
[09:11:27.058]      // while "1"  (timeout="50000")
[09:11:27.058]      // while-condition  =>  TRUE
[09:11:27.058]      // while "1"  (timeout="50000")
[09:11:27.058]      // while-condition  =>  TRUE
[09:11:27.058]      // while "1"  (timeout="50000")
[09:11:27.059]      // while-condition  =>  TRUE
[09:11:27.059]      // while "1"  (timeout="50000")
[09:11:27.059]      // while-condition  =>  TRUE
[09:11:27.059]      // while "1"  (timeout="50000")
[09:11:27.060]      // while-condition  =>  TRUE
[09:11:27.060]      // while "1"  (timeout="50000")
[09:11:27.060]      // while-condition  =>  TRUE
[09:11:27.060]      // while "1"  (timeout="50000")
[09:11:27.060]      // while-condition  =>  TRUE
[09:11:27.061]      // while "1"  (timeout="50000")
[09:11:27.061]      // while-condition  =>  TRUE
[09:11:27.061]      // while "1"  (timeout="50000")
[09:11:27.061]      // while-condition  =>  TRUE
[09:11:27.062]      // while "1"  (timeout="50000")
[09:11:27.062]      // while-condition  =>  TRUE
[09:11:27.062]      // while "1"  (timeout="50000")
[09:11:27.062]      // while-condition  =>  TRUE
[09:11:27.062]      // while "1"  (timeout="50000")
[09:11:27.063]      // while-condition  =>  TRUE
[09:11:27.063]      // while "1"  (timeout="50000")
[09:11:27.063]      // while-condition  =>  TRUE
[09:11:27.063]      // while "1"  (timeout="50000")
[09:11:27.064]      // while-condition  =>  TRUE
[09:11:27.064]      // while "1"  (timeout="50000")
[09:11:27.064]      // while-condition  =>  TRUE
[09:11:27.064]      // while "1"  (timeout="50000")
[09:11:27.064]      // while-condition  =>  TRUE
[09:11:27.065]      // while "1"  (timeout="50000")
[09:11:27.065]      // while-condition  =>  TRUE
[09:11:27.065]      // while "1"  (timeout="50000")
[09:11:27.065]      // while-condition  =>  TRUE
[09:11:27.066]      // while "1"  (timeout="50000")
[09:11:27.066]      // while-condition  =>  TRUE
[09:11:27.066]      // while "1"  (timeout="50000")
[09:11:27.066]      // while-condition  =>  TRUE
[09:11:27.066]      // while "1"  (timeout="50000")
[09:11:27.067]      // while-condition  =>  TRUE
[09:11:27.067]      // while "1"  (timeout="50000")
[09:11:27.067]      // while-condition  =>  TRUE
[09:11:27.067]      // while "1"  (timeout="50000")
[09:11:27.067]      // while-condition  =>  TRUE
[09:11:27.068]      // while "1"  (timeout="50000")
[09:11:27.068]      // while-condition  =>  TRUE
[09:11:27.068]      // while "1"  (timeout="50000")
[09:11:27.068]      // while-condition  =>  TRUE
[09:11:27.069]      // while "1"  (timeout="50000")
[09:11:27.069]      // while-condition  =>  TRUE
[09:11:27.069]      // while "1"  (timeout="50000")
[09:11:27.069]      // while-condition  =>  TRUE
[09:11:27.069]      // while "1"  (timeout="50000")
[09:11:27.070]      // while-condition  =>  TRUE
[09:11:27.070]      // while "1"  (timeout="50000")
[09:11:27.070]      // while-condition  =>  TRUE
[09:11:27.070]      // while "1"  (timeout="50000")
[09:11:27.071]      // while-condition  =>  TRUE
[09:11:27.071]      // while "1"  (timeout="50000")
[09:11:27.071]      // while-condition  =>  TRUE
[09:11:27.071]      // while "1"  (timeout="50000")
[09:11:27.071]      // while-condition  =>  TRUE
[09:11:27.072]      // while "1"  (timeout="50000")
[09:11:27.072]      // while-condition  =>  TRUE
[09:11:27.072]      // while "1"  (timeout="50000")
[09:11:27.072]      // while-condition  =>  TRUE
[09:11:27.072]      // while "1"  (timeout="50000")
[09:11:27.073]      // while-condition  =>  TRUE
[09:11:27.073]      // while "1"  (timeout="50000")
[09:11:27.073]      // while-condition  =>  TRUE
[09:11:27.073]      // while "1"  (timeout="50000")
[09:11:27.074]      // while-condition  =>  TRUE
[09:11:27.074]      // while "1"  (timeout="50000")
[09:11:27.074]      // while-condition  =>  TRUE
[09:11:27.074]      // while "1"  (timeout="50000")
[09:11:27.074]      // while-condition  =>  TRUE
[09:11:27.075]      // while "1"  (timeout="50000")
[09:11:27.075]      // while-condition  =>  TRUE
[09:11:27.075]      // while "1"  (timeout="50000")
[09:11:27.075]      // while-condition  =>  TRUE
[09:11:27.076]      // while "1"  (timeout="50000")
[09:11:27.076]      // while-condition  =>  TRUE
[09:11:27.076]      // while "1"  (timeout="50000")
[09:11:27.076]      // while-condition  =>  TRUE
[09:11:27.076]      // while "1"  (timeout="50000")
[09:11:27.077]      // while-condition  =>  TRUE
[09:11:27.077]      // while "1"  (timeout="50000")
[09:11:27.077]      // while-condition  =>  TRUE
[09:11:27.077]      // while "1"  (timeout="50000")
[09:11:27.078]      // while-condition  =>  TRUE
[09:11:27.078]      // while "1"  (timeout="50000")
[09:11:27.078]      // while-condition  =>  TRUE
[09:11:27.078]      // while "1"  (timeout="50000")
[09:11:27.078]      // while-condition  =>  TRUE
[09:11:27.079]      // while "1"  (timeout="50000")
[09:11:27.079]      // while-condition  =>  TRUE
[09:11:27.079]      // while "1"  (timeout="50000")
[09:11:27.079]      // while-condition  =>  TRUE
[09:11:27.080]      // while "1"  (timeout="50000")
[09:11:27.080]      // while-condition  =>  TRUE
[09:11:27.080]      // while "1"  (timeout="50000")
[09:11:27.080]      // while-condition  =>  TRUE
[09:11:27.080]      // while "1"  (timeout="50000")
[09:11:27.081]      // while-condition  =>  TRUE
[09:11:27.081]      // while "1"  (timeout="50000")
[09:11:27.081]      // while-condition  =>  TRUE
[09:11:27.081]      // while "1"  (timeout="50000")
[09:11:27.082]      // while-condition  =>  TRUE
[09:11:27.082]      // while "1"  (timeout="50000")
[09:11:27.082]      // while  =>  TIMEOUT
[09:11:27.082]      // end while "1"
[09:11:27.082]    </control>
[09:11:27.083]    <block atomic="false" info="">
[09:11:27.083]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:11:27.085]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:11:27.086]    </block>
[09:11:27.086]    <control if="" while="1" timeout="10000" info="">
[09:11:27.086]      // while "1"  (timeout="10000")
[09:11:27.086]      // while-condition  =>  TRUE
[09:11:27.086]      // while "1"  (timeout="10000")
[09:11:27.087]      // while-condition  =>  TRUE
[09:11:27.087]      // while "1"  (timeout="10000")
[09:11:27.087]      // while-condition  =>  TRUE
[09:11:27.087]      // while "1"  (timeout="10000")
[09:11:27.088]      // while-condition  =>  TRUE
[09:11:27.088]      // while "1"  (timeout="10000")
[09:11:27.088]      // while-condition  =>  TRUE
[09:11:27.088]      // while "1"  (timeout="10000")
[09:11:27.088]      // while-condition  =>  TRUE
[09:11:27.089]      // while "1"  (timeout="10000")
[09:11:27.089]      // while-condition  =>  TRUE
[09:11:27.089]      // while "1"  (timeout="10000")
[09:11:27.089]      // while-condition  =>  TRUE
[09:11:27.090]      // while "1"  (timeout="10000")
[09:11:27.090]      // while-condition  =>  TRUE
[09:11:27.090]      // while "1"  (timeout="10000")
[09:11:27.090]      // while-condition  =>  TRUE
[09:11:27.090]      // while "1"  (timeout="10000")
[09:11:27.091]      // while-condition  =>  TRUE
[09:11:27.091]      // while "1"  (timeout="10000")
[09:11:27.091]      // while-condition  =>  TRUE
[09:11:27.091]      // while "1"  (timeout="10000")
[09:11:27.092]      // while-condition  =>  TRUE
[09:11:27.092]      // while "1"  (timeout="10000")
[09:11:27.092]      // while-condition  =>  TRUE
[09:11:27.092]      // while "1"  (timeout="10000")
[09:11:27.093]      // while-condition  =>  TRUE
[09:11:27.094]      // while "1"  (timeout="10000")
[09:11:27.094]      // while-condition  =>  TRUE
[09:11:27.094]      // while "1"  (timeout="10000")
[09:11:27.094]      // while-condition  =>  TRUE
[09:11:27.094]      // while "1"  (timeout="10000")
[09:11:27.095]      // while-condition  =>  TRUE
[09:11:27.095]      // while "1"  (timeout="10000")
[09:11:27.095]      // while-condition  =>  TRUE
[09:11:27.095]      // while "1"  (timeout="10000")
[09:11:27.096]      // while-condition  =>  TRUE
[09:11:27.096]      // while "1"  (timeout="10000")
[09:11:27.096]      // while-condition  =>  TRUE
[09:11:27.096]      // while "1"  (timeout="10000")
[09:11:27.096]      // while-condition  =>  TRUE
[09:11:27.097]      // while "1"  (timeout="10000")
[09:11:27.097]      // while-condition  =>  TRUE
[09:11:27.097]      // while "1"  (timeout="10000")
[09:11:27.097]      // while-condition  =>  TRUE
[09:11:27.097]      // while "1"  (timeout="10000")
[09:11:27.098]      // while-condition  =>  TRUE
[09:11:27.098]      // while "1"  (timeout="10000")
[09:11:27.098]      // while  =>  TIMEOUT
[09:11:27.098]      // end while "1"
[09:11:27.098]    </control>
[09:11:27.099]    <block atomic="true" info="">
[09:11:27.102]  
[09:11:27.102]  ! W001 : No atomic sequence support in debug unit
[09:11:27.102]  
[09:11:27.103]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:11:27.105]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:11:27.106]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:11:27.107]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:11:27.108]    </block>
[09:11:27.108]    <block atomic="false" info="">
[09:11:27.108]      __errorcontrol = 0x00000001;
[09:11:27.108]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:11:27.108]      ReadDP(0x0);
[09:11:27.110]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:11:27.111]      __errorcontrol = 0x00000000;
[09:11:27.111]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:11:27.111]    </block>
[09:11:27.111]  </sequence>
[09:11:27.112]  
[09:11:27.116]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[09:11:27.116]  
[09:11:27.116]  <debugvars>
[09:11:27.116]    // Pre-defined
[09:11:27.116]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:11:27.117]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:11:27.117]    __dp=0x00000000
[09:11:27.117]    __ap=0x00000000
[09:11:27.118]    __traceout=0x00000000      (Trace Disabled)
[09:11:27.118]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:11:27.118]    __FlashAddr=0x00000000
[09:11:27.119]    __FlashLen=0x00000000
[09:11:27.119]    __FlashArg=0x00000000
[09:11:27.119]    __FlashOp=0x00000000
[09:11:27.119]    __Result=0x00000000
[09:11:27.120]  </debugvars>
[09:11:27.120]  
[09:11:27.120]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[09:11:27.120]    <block atomic="false" info="">
[09:11:27.121]    </block>
[09:11:27.121]  </sequence>
[09:11:27.121]  
[09:11:27.378]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[09:11:27.379]  
[09:11:27.379]  <debugvars>
[09:11:27.380]    // Pre-defined
[09:11:27.380]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:11:27.381]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:11:27.382]    __dp=0x00000000
[09:11:27.382]    __ap=0x00000000
[09:11:27.383]    __traceout=0x00000000      (Trace Disabled)
[09:11:27.384]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:11:27.384]    __FlashAddr=0x00000000
[09:11:27.385]    __FlashLen=0x00000000
[09:11:27.386]    __FlashArg=0x00000000
[09:11:27.386]    __FlashOp=0x00000000
[09:11:27.387]    __Result=0x00000000
[09:11:27.387]  </debugvars>
[09:11:27.388]  
[09:11:27.388]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[09:11:27.389]    <block atomic="false" info="">
[09:11:27.389]      Sequence("ResetHardware");
[09:11:27.390]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:11:27.390]          <block atomic="false" info="">
[09:11:27.391]            __var nReset      = 0x80;
[09:11:27.391]              // -> [nReset <= 0x00000080]
[09:11:27.391]            DAP_SWJ_Pins(0x00, nReset, 0);
[09:11:27.394]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:11:27.395]          </block>
[09:11:27.396]          <control if="" while="1" timeout="50000" info="">
[09:11:27.396]            // while "1"  (timeout="50000")
[09:11:27.398]            // while-condition  =>  TRUE
[09:11:27.398]            // while "1"  (timeout="50000")
[09:11:27.399]            // while-condition  =>  TRUE
[09:11:27.399]            // while "1"  (timeout="50000")
[09:11:27.400]            // while-condition  =>  TRUE
[09:11:27.400]            // while "1"  (timeout="50000")
[09:11:27.401]            // while-condition  =>  TRUE
[09:11:27.401]            // while "1"  (timeout="50000")
[09:11:27.402]            // while-condition  =>  TRUE
[09:11:27.402]            // while "1"  (timeout="50000")
[09:11:27.403]            // while-condition  =>  TRUE
[09:11:27.404]            // while "1"  (timeout="50000")
[09:11:27.404]            // while-condition  =>  TRUE
[09:11:27.404]            // while "1"  (timeout="50000")
[09:11:27.404]            // while-condition  =>  TRUE
[09:11:27.405]            // while "1"  (timeout="50000")
[09:11:27.405]            // while-condition  =>  TRUE
[09:11:27.405]            // while "1"  (timeout="50000")
[09:11:27.406]            // while-condition  =>  TRUE
[09:11:27.406]            // while "1"  (timeout="50000")
[09:11:27.406]            // while-condition  =>  TRUE
[09:11:27.407]            // while "1"  (timeout="50000")
[09:11:27.407]            // while-condition  =>  TRUE
[09:11:27.408]            // while "1"  (timeout="50000")
[09:11:27.408]            // while-condition  =>  TRUE
[09:11:27.408]            // while "1"  (timeout="50000")
[09:11:27.409]            // while-condition  =>  TRUE
[09:11:27.409]            // while "1"  (timeout="50000")
[09:11:27.409]            // while-condition  =>  TRUE
[09:11:27.409]            // while "1"  (timeout="50000")
[09:11:27.410]            // while-condition  =>  TRUE
[09:11:27.410]            // while "1"  (timeout="50000")
[09:11:27.410]            // while-condition  =>  TRUE
[09:11:27.411]            // while "1"  (timeout="50000")
[09:11:27.411]            // while-condition  =>  TRUE
[09:11:27.412]            // while "1"  (timeout="50000")
[09:11:27.412]            // while-condition  =>  TRUE
[09:11:27.412]            // while "1"  (timeout="50000")
[09:11:27.412]            // while-condition  =>  TRUE
[09:11:27.413]            // while "1"  (timeout="50000")
[09:11:27.413]            // while-condition  =>  TRUE
[09:11:27.414]            // while "1"  (timeout="50000")
[09:11:27.414]            // while-condition  =>  TRUE
[09:11:27.414]            // while "1"  (timeout="50000")
[09:11:27.414]            // while-condition  =>  TRUE
[09:11:27.415]            // while "1"  (timeout="50000")
[09:11:27.415]            // while-condition  =>  TRUE
[09:11:27.415]            // while "1"  (timeout="50000")
[09:11:27.415]            // while-condition  =>  TRUE
[09:11:27.415]            // while "1"  (timeout="50000")
[09:11:27.415]            // while-condition  =>  TRUE
[09:11:27.416]            // while "1"  (timeout="50000")
[09:11:27.416]            // while-condition  =>  TRUE
[09:11:27.416]            // while "1"  (timeout="50000")
[09:11:27.416]            // while-condition  =>  TRUE
[09:11:27.417]            // while "1"  (timeout="50000")
[09:11:27.417]            // while-condition  =>  TRUE
[09:11:27.417]            // while "1"  (timeout="50000")
[09:11:27.417]            // while-condition  =>  TRUE
[09:11:27.418]            // while "1"  (timeout="50000")
[09:11:27.418]            // while-condition  =>  TRUE
[09:11:27.419]            // while "1"  (timeout="50000")
[09:11:27.419]            // while-condition  =>  TRUE
[09:11:27.419]            // while "1"  (timeout="50000")
[09:11:27.419]            // while-condition  =>  TRUE
[09:11:27.419]            // while "1"  (timeout="50000")
[09:11:27.420]            // while-condition  =>  TRUE
[09:11:27.420]            // while "1"  (timeout="50000")
[09:11:27.420]            // while-condition  =>  TRUE
[09:11:27.420]            // while "1"  (timeout="50000")
[09:11:27.420]            // while-condition  =>  TRUE
[09:11:27.420]            // while "1"  (timeout="50000")
[09:11:27.420]            // while-condition  =>  TRUE
[09:11:27.420]            // while "1"  (timeout="50000")
[09:11:27.421]            // while-condition  =>  TRUE
[09:11:27.421]            // while "1"  (timeout="50000")
[09:11:27.422]            // while-condition  =>  TRUE
[09:11:27.422]            // while "1"  (timeout="50000")
[09:11:27.422]            // while-condition  =>  TRUE
[09:11:27.422]            // while "1"  (timeout="50000")
[09:11:27.422]            // while-condition  =>  TRUE
[09:11:27.422]            // while "1"  (timeout="50000")
[09:11:27.422]            // while-condition  =>  TRUE
[09:11:27.422]            // while "1"  (timeout="50000")
[09:11:27.423]            // while-condition  =>  TRUE
[09:11:27.423]            // while "1"  (timeout="50000")
[09:11:27.423]            // while-condition  =>  TRUE
[09:11:27.423]            // while "1"  (timeout="50000")
[09:11:27.423]            // while-condition  =>  TRUE
[09:11:27.424]            // while "1"  (timeout="50000")
[09:11:27.424]            // while-condition  =>  TRUE
[09:11:27.424]            // while "1"  (timeout="50000")
[09:11:27.425]            // while-condition  =>  TRUE
[09:11:27.425]            // while "1"  (timeout="50000")
[09:11:27.425]            // while-condition  =>  TRUE
[09:11:27.425]            // while "1"  (timeout="50000")
[09:11:27.425]            // while-condition  =>  TRUE
[09:11:27.425]            // while "1"  (timeout="50000")
[09:11:27.425]            // while-condition  =>  TRUE
[09:11:27.425]            // while "1"  (timeout="50000")
[09:11:27.426]            // while-condition  =>  TRUE
[09:11:27.426]            // while "1"  (timeout="50000")
[09:11:27.426]            // while-condition  =>  TRUE
[09:11:27.426]            // while "1"  (timeout="50000")
[09:11:27.426]            // while-condition  =>  TRUE
[09:11:27.427]            // while "1"  (timeout="50000")
[09:11:27.427]            // while-condition  =>  TRUE
[09:11:27.428]            // while "1"  (timeout="50000")
[09:11:27.428]            // while-condition  =>  TRUE
[09:11:27.428]            // while "1"  (timeout="50000")
[09:11:27.428]            // while-condition  =>  TRUE
[09:11:27.428]            // while "1"  (timeout="50000")
[09:11:27.429]            // while-condition  =>  TRUE
[09:11:27.429]            // while "1"  (timeout="50000")
[09:11:27.429]            // while-condition  =>  TRUE
[09:11:27.429]            // while "1"  (timeout="50000")
[09:11:27.429]            // while-condition  =>  TRUE
[09:11:27.429]            // while "1"  (timeout="50000")
[09:11:27.430]            // while-condition  =>  TRUE
[09:11:27.430]            // while "1"  (timeout="50000")
[09:11:27.430]            // while-condition  =>  TRUE
[09:11:27.430]            // while "1"  (timeout="50000")
[09:11:27.430]            // while-condition  =>  TRUE
[09:11:27.430]            // while "1"  (timeout="50000")
[09:11:27.430]            // while-condition  =>  TRUE
[09:11:27.431]            // while "1"  (timeout="50000")
[09:11:27.431]            // while-condition  =>  TRUE
[09:11:27.431]            // while "1"  (timeout="50000")
[09:11:27.432]            // while-condition  =>  TRUE
[09:11:27.432]            // while "1"  (timeout="50000")
[09:11:27.432]            // while-condition  =>  TRUE
[09:11:27.432]            // while "1"  (timeout="50000")
[09:11:27.433]            // while-condition  =>  TRUE
[09:11:27.433]            // while "1"  (timeout="50000")
[09:11:27.433]            // while-condition  =>  TRUE
[09:11:27.433]            // while "1"  (timeout="50000")
[09:11:27.433]            // while-condition  =>  TRUE
[09:11:27.433]            // while "1"  (timeout="50000")
[09:11:27.433]            // while-condition  =>  TRUE
[09:11:27.433]            // while "1"  (timeout="50000")
[09:11:27.434]            // while-condition  =>  TRUE
[09:11:27.434]            // while "1"  (timeout="50000")
[09:11:27.434]            // while-condition  =>  TRUE
[09:11:27.435]            // while "1"  (timeout="50000")
[09:11:27.435]            // while-condition  =>  TRUE
[09:11:27.435]            // while "1"  (timeout="50000")
[09:11:27.435]            // while-condition  =>  TRUE
[09:11:27.435]            // while "1"  (timeout="50000")
[09:11:27.435]            // while-condition  =>  TRUE
[09:11:27.435]            // while "1"  (timeout="50000")
[09:11:27.436]            // while-condition  =>  TRUE
[09:11:27.436]            // while "1"  (timeout="50000")
[09:11:27.436]            // while-condition  =>  TRUE
[09:11:27.436]            // while "1"  (timeout="50000")
[09:11:27.436]            // while-condition  =>  TRUE
[09:11:27.437]            // while "1"  (timeout="50000")
[09:11:27.437]            // while-condition  =>  TRUE
[09:11:27.437]            // while "1"  (timeout="50000")
[09:11:27.438]            // while-condition  =>  TRUE
[09:11:27.438]            // while "1"  (timeout="50000")
[09:11:27.438]            // while-condition  =>  TRUE
[09:11:27.438]            // while "1"  (timeout="50000")
[09:11:27.438]            // while-condition  =>  TRUE
[09:11:27.439]            // while "1"  (timeout="50000")
[09:11:27.439]            // while-condition  =>  TRUE
[09:11:27.439]            // while "1"  (timeout="50000")
[09:11:27.439]            // while-condition  =>  TRUE
[09:11:27.439]            // while "1"  (timeout="50000")
[09:11:27.440]            // while-condition  =>  TRUE
[09:11:27.440]            // while "1"  (timeout="50000")
[09:11:27.440]            // while-condition  =>  TRUE
[09:11:27.440]            // while "1"  (timeout="50000")
[09:11:27.440]            // while-condition  =>  TRUE
[09:11:27.440]            // while "1"  (timeout="50000")
[09:11:27.441]            // while-condition  =>  TRUE
[09:11:27.441]            // while "1"  (timeout="50000")
[09:11:27.441]            // while-condition  =>  TRUE
[09:11:27.441]            // while "1"  (timeout="50000")
[09:11:27.441]            // while-condition  =>  TRUE
[09:11:27.442]            // while "1"  (timeout="50000")
[09:11:27.442]            // while-condition  =>  TRUE
[09:11:27.442]            // while "1"  (timeout="50000")
[09:11:27.442]            // while-condition  =>  TRUE
[09:11:27.442]            // while "1"  (timeout="50000")
[09:11:27.442]            // while-condition  =>  TRUE
[09:11:27.442]            // while "1"  (timeout="50000")
[09:11:27.443]            // while-condition  =>  TRUE
[09:11:27.443]            // while "1"  (timeout="50000")
[09:11:27.443]            // while-condition  =>  TRUE
[09:11:27.443]            // while "1"  (timeout="50000")
[09:11:27.443]            // while-condition  =>  TRUE
[09:11:27.443]            // while "1"  (timeout="50000")
[09:11:27.444]            // while-condition  =>  TRUE
[09:11:27.444]            // while "1"  (timeout="50000")
[09:11:27.444]            // while-condition  =>  TRUE
[09:11:27.444]            // while "1"  (timeout="50000")
[09:11:27.444]            // while-condition  =>  TRUE
[09:11:27.445]            // while "1"  (timeout="50000")
[09:11:27.445]            // while-condition  =>  TRUE
[09:11:27.446]            // while "1"  (timeout="50000")
[09:11:27.446]            // while-condition  =>  TRUE
[09:11:27.446]            // while "1"  (timeout="50000")
[09:11:27.446]            // while-condition  =>  TRUE
[09:11:27.446]            // while "1"  (timeout="50000")
[09:11:27.446]            // while-condition  =>  TRUE
[09:11:27.446]            // while "1"  (timeout="50000")
[09:11:27.446]            // while-condition  =>  TRUE
[09:11:27.447]            // while "1"  (timeout="50000")
[09:11:27.447]            // while-condition  =>  TRUE
[09:11:27.447]            // while "1"  (timeout="50000")
[09:11:27.447]            // while-condition  =>  TRUE
[09:11:27.447]            // while "1"  (timeout="50000")
[09:11:27.448]            // while-condition  =>  TRUE
[09:11:27.448]            // while "1"  (timeout="50000")
[09:11:27.448]            // while-condition  =>  TRUE
[09:11:27.449]            // while "1"  (timeout="50000")
[09:11:27.449]            // while-condition  =>  TRUE
[09:11:27.449]            // while "1"  (timeout="50000")
[09:11:27.449]            // while-condition  =>  TRUE
[09:11:27.449]            // while "1"  (timeout="50000")
[09:11:27.450]            // while-condition  =>  TRUE
[09:11:27.450]            // while "1"  (timeout="50000")
[09:11:27.450]            // while-condition  =>  TRUE
[09:11:27.450]            // while "1"  (timeout="50000")
[09:11:27.450]            // while-condition  =>  TRUE
[09:11:27.451]            // while "1"  (timeout="50000")
[09:11:27.451]            // while-condition  =>  TRUE
[09:11:27.451]            // while "1"  (timeout="50000")
[09:11:27.451]            // while-condition  =>  TRUE
[09:11:27.451]            // while "1"  (timeout="50000")
[09:11:27.451]            // while-condition  =>  TRUE
[09:11:27.451]            // while "1"  (timeout="50000")
[09:11:27.451]            // while-condition  =>  TRUE
[09:11:27.452]            // while "1"  (timeout="50000")
[09:11:27.453]            // while-condition  =>  TRUE
[09:11:27.453]            // while "1"  (timeout="50000")
[09:11:27.453]            // while-condition  =>  TRUE
[09:11:27.453]            // while "1"  (timeout="50000")
[09:11:27.453]            // while-condition  =>  TRUE
[09:11:27.454]            // while "1"  (timeout="50000")
[09:11:27.454]            // while-condition  =>  TRUE
[09:11:27.454]            // while "1"  (timeout="50000")
[09:11:27.454]            // while-condition  =>  TRUE
[09:11:27.454]            // while "1"  (timeout="50000")
[09:11:27.454]            // while-condition  =>  TRUE
[09:11:27.454]            // while "1"  (timeout="50000")
[09:11:27.455]            // while-condition  =>  TRUE
[09:11:27.455]            // while "1"  (timeout="50000")
[09:11:27.455]            // while-condition  =>  TRUE
[09:11:27.456]            // while "1"  (timeout="50000")
[09:11:27.456]            // while-condition  =>  TRUE
[09:11:27.456]            // while "1"  (timeout="50000")
[09:11:27.456]            // while-condition  =>  TRUE
[09:11:27.456]            // while "1"  (timeout="50000")
[09:11:27.456]            // while-condition  =>  TRUE
[09:11:27.456]            // while "1"  (timeout="50000")
[09:11:27.457]            // while-condition  =>  TRUE
[09:11:27.457]            // while "1"  (timeout="50000")
[09:11:27.457]            // while  =>  TIMEOUT
[09:11:27.457]            // end while "1"
[09:11:27.457]          </control>
[09:11:27.458]          <block atomic="false" info="">
[09:11:27.458]            DAP_SWJ_Pins(nReset, nReset, 0);
[09:11:27.461]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:11:27.461]          </block>
[09:11:27.461]          <control if="" while="1" timeout="10000" info="">
[09:11:27.461]            // while "1"  (timeout="10000")
[09:11:27.462]            // while-condition  =>  TRUE
[09:11:27.462]            // while "1"  (timeout="10000")
[09:11:27.462]            // while-condition  =>  TRUE
[09:11:27.462]            // while "1"  (timeout="10000")
[09:11:27.462]            // while-condition  =>  TRUE
[09:11:27.463]            // while "1"  (timeout="10000")
[09:11:27.463]            // while-condition  =>  TRUE
[09:11:27.463]            // while "1"  (timeout="10000")
[09:11:27.463]            // while-condition  =>  TRUE
[09:11:27.464]            // while "1"  (timeout="10000")
[09:11:27.464]            // while-condition  =>  TRUE
[09:11:27.464]            // while "1"  (timeout="10000")
[09:11:27.464]            // while-condition  =>  TRUE
[09:11:27.464]            // while "1"  (timeout="10000")
[09:11:27.464]            // while-condition  =>  TRUE
[09:11:27.465]            // while "1"  (timeout="10000")
[09:11:27.465]            // while-condition  =>  TRUE
[09:11:27.465]            // while "1"  (timeout="10000")
[09:11:27.465]            // while-condition  =>  TRUE
[09:11:27.466]            // while "1"  (timeout="10000")
[09:11:27.466]            // while-condition  =>  TRUE
[09:11:27.466]            // while "1"  (timeout="10000")
[09:11:27.466]            // while-condition  =>  TRUE
[09:11:27.466]            // while "1"  (timeout="10000")
[09:11:27.467]            // while-condition  =>  TRUE
[09:11:27.467]            // while "1"  (timeout="10000")
[09:11:27.467]            // while-condition  =>  TRUE
[09:11:27.467]            // while "1"  (timeout="10000")
[09:11:27.468]            // while-condition  =>  TRUE
[09:11:27.468]            // while "1"  (timeout="10000")
[09:11:27.468]            // while-condition  =>  TRUE
[09:11:27.468]            // while "1"  (timeout="10000")
[09:11:27.469]            // while-condition  =>  TRUE
[09:11:27.469]            // while "1"  (timeout="10000")
[09:11:27.469]            // while-condition  =>  TRUE
[09:11:27.469]            // while "1"  (timeout="10000")
[09:11:27.469]            // while-condition  =>  TRUE
[09:11:27.470]            // while "1"  (timeout="10000")
[09:11:27.470]            // while-condition  =>  TRUE
[09:11:27.470]            // while "1"  (timeout="10000")
[09:11:27.470]            // while-condition  =>  TRUE
[09:11:27.470]            // while "1"  (timeout="10000")
[09:11:27.471]            // while-condition  =>  TRUE
[09:11:27.471]            // while "1"  (timeout="10000")
[09:11:27.471]            // while-condition  =>  TRUE
[09:11:27.472]            // while "1"  (timeout="10000")
[09:11:27.472]            // while-condition  =>  TRUE
[09:11:27.472]            // while "1"  (timeout="10000")
[09:11:27.472]            // while  =>  TIMEOUT
[09:11:27.473]            // end while "1"
[09:11:27.473]          </control>
[09:11:27.473]          <block atomic="true" info="">
[09:11:27.476]  
[09:11:27.476]  ! W001 : No atomic sequence support in debug unit
[09:11:27.476]  
[09:11:27.478]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:11:27.481]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:11:27.481]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:11:27.484]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:11:27.484]          </block>
[09:11:27.484]          <block atomic="false" info="">
[09:11:27.485]            __errorcontrol = 0x00000001;
[09:11:27.485]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:11:27.486]            ReadDP(0x0);
[09:11:27.488]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:11:27.488]            __errorcontrol = 0x00000000;
[09:11:27.489]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:11:27.489]          </block>
[09:11:27.489]        </sequence>
[09:11:27.490]      Sequence("DebugPortSetup");
[09:11:27.490]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:11:27.491]        </sequence>
[09:11:27.491]      Sequence("DebugPortStart");
[09:11:27.491]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:11:27.492]          <block atomic="false" info="">
[09:11:27.492]            __var SW_DP_ABORT  = 0x0;
[09:11:27.492]              // -> [SW_DP_ABORT <= 0x00000000]
[09:11:27.492]            __var DP_CTRL_STAT = 0x4;
[09:11:27.492]              // -> [DP_CTRL_STAT <= 0x00000004]
[09:11:27.493]            __var DP_SELECT    = 0x8;
[09:11:27.493]              // -> [DP_SELECT <= 0x00000008]
[09:11:27.493]            __var powered_down = 0;
[09:11:27.494]              // -> [powered_down <= 0x00000000]
[09:11:27.495]            WriteDP(DP_SELECT, 0x00000000);
[09:11:27.497]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:11:27.497]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:11:27.498]              // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:11:27.498]              // -> [powered_down <= 0x00000000]
[09:11:27.499]          </block>
[09:11:27.500]          <control if="powered_down" while="" timeout="0" info="">
[09:11:27.500]            // if-block "powered_down"
[09:11:27.500]              // =>  FALSE
[09:11:27.500]            // skip if-block "powered_down"
[09:11:27.501]          </control>
[09:11:27.501]        </sequence>
[09:11:27.501]      Sequence("DebugCoreStart");
[09:11:27.502]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:11:27.502]          <block atomic="true" info="">
[09:11:27.504]  
[09:11:27.504]  ! W001 : No atomic sequence support in debug unit
[09:11:27.504]  
[09:11:27.507]            __var DP_R_IDCODE    = 0x0;
[09:11:27.507]              // -> [DP_R_IDCODE <= 0x00000000]
[09:11:27.508]            __var DP_W_ABORT    = 0x0;
[09:11:27.508]              // -> [DP_W_ABORT <= 0x00000000]
[09:11:27.509]            __var DP_CTRLSTAT = 0x4;
[09:11:27.509]              // -> [DP_CTRLSTAT <= 0x00000004]
[09:11:27.510]            __var DP_W_SELECT    = 0x8;
[09:11:27.510]              // -> [DP_W_SELECT <= 0x00000008]
[09:11:27.510]            __var AP_TAR		= 0x4;
[09:11:27.511]              // -> [AP_TAR <= 0x00000004]
[09:11:27.511]            __var AP_BD0		= 0x0;
[09:11:27.511]              // -> [AP_BD0 <= 0x00000000]
[09:11:27.512]            __var AP_BD1		= 0x4;
[09:11:27.512]              // -> [AP_BD1 <= 0x00000004]
[09:11:27.512]            __var AP_BD2		= 0x8;
[09:11:27.513]              // -> [AP_BD2 <= 0x00000008]
[09:11:27.513]            __var PCWithinFlash = 0;
[09:11:27.513]              // -> [PCWithinFlash <= 0x00000000]
[09:11:27.513]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:11:27.520]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.534]          </block>
[09:11:27.535]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:11:27.536]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:11:27.543]              // -> [Read32(0xE000EDF0) => 0x00030003]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.543]            // while-condition  =>  FALSE
[09:11:27.544]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:11:27.545]          </control>
[09:11:27.545]          <block atomic="true" info="">
[09:11:27.559]  
[09:11:27.559]  ! W001 : No atomic sequence support in debug unit
[09:11:27.559]  
[09:11:27.565]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:11:27.568]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:11:27.568]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:11:27.572]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.573]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:11:27.576]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:11:27.576]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:11:27.581]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.581]          </block>
[09:11:27.582]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:11:27.582]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.585]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.585]            // while-condition  =>  TRUE
[09:11:27.586]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.589]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.589]            // while-condition  =>  TRUE
[09:11:27.590]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.592]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.593]            // while-condition  =>  TRUE
[09:11:27.594]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.597]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.597]            // while-condition  =>  TRUE
[09:11:27.598]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.601]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.601]            // while-condition  =>  TRUE
[09:11:27.602]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.605]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.606]            // while-condition  =>  TRUE
[09:11:27.606]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.608]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.609]            // while-condition  =>  TRUE
[09:11:27.609]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.611]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.612]            // while-condition  =>  TRUE
[09:11:27.612]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.614]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.615]            // while-condition  =>  TRUE
[09:11:27.615]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.618]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.618]            // while-condition  =>  TRUE
[09:11:27.618]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.621]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.621]            // while-condition  =>  TRUE
[09:11:27.622]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.623]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.624]            // while-condition  =>  TRUE
[09:11:27.625]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.628]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.628]            // while-condition  =>  TRUE
[09:11:27.629]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.632]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.632]            // while-condition  =>  TRUE
[09:11:27.633]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.636]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.636]            // while-condition  =>  TRUE
[09:11:27.636]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.640]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.640]            // while-condition  =>  TRUE
[09:11:27.641]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.643]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.643]            // while-condition  =>  TRUE
[09:11:27.644]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.646]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.647]            // while-condition  =>  TRUE
[09:11:27.648]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.650]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.650]            // while-condition  =>  TRUE
[09:11:27.650]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.653]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.653]            // while-condition  =>  TRUE
[09:11:27.653]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.655]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.655]            // while-condition  =>  TRUE
[09:11:27.656]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.658]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.658]            // while-condition  =>  TRUE
[09:11:27.659]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.661]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.661]            // while-condition  =>  TRUE
[09:11:27.662]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.664]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.664]            // while-condition  =>  TRUE
[09:11:27.665]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.668]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.668]            // while-condition  =>  TRUE
[09:11:27.668]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.672]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.672]            // while-condition  =>  TRUE
[09:11:27.672]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.676]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.676]            // while-condition  =>  TRUE
[09:11:27.676]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.679]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.679]            // while-condition  =>  TRUE
[09:11:27.680]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.682]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.682]            // while-condition  =>  TRUE
[09:11:27.683]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.685]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.685]            // while-condition  =>  TRUE
[09:11:27.686]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.689]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.689]            // while-condition  =>  TRUE
[09:11:27.690]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.693]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.693]            // while-condition  =>  TRUE
[09:11:27.694]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:11:27.694]            // while  =>  TIMEOUT
[09:11:27.695]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:11:27.696]          </control>
[09:11:27.696]          <block atomic="false" info="">
[09:11:27.696]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:11:27.698]              // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:11:27.699]              // -> [PCWithinFlash <= 0x00000000]
[09:11:27.699]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:11:27.702]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:11:27.702]          </block>
[09:11:27.703]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:11:27.703]            // if-block "PCWithinFlash == 0"
[09:11:27.704]              // =>  TRUE
[09:11:27.705]            // end if-block "PCWithinFlash == 0"
[09:11:27.705]          </control>
[09:11:27.706]        </sequence>
[09:11:27.706]    </block>
[09:11:27.706]  </sequence>
[09:11:27.707]  
[09:11:38.815]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[09:11:38.815]  
[09:11:38.815]  <debugvars>
[09:11:38.815]    // Pre-defined
[09:11:38.816]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:11:38.816]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:11:38.818]    __dp=0x00000000
[09:11:38.818]    __ap=0x00000000
[09:11:38.819]    __traceout=0x00000000      (Trace Disabled)
[09:11:38.820]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:11:38.820]    __FlashAddr=0x00000000
[09:11:38.821]    __FlashLen=0x00000000
[09:11:38.821]    __FlashArg=0x00000000
[09:11:38.822]    __FlashOp=0x00000000
[09:11:38.822]    __Result=0x00000000
[09:11:38.823]  </debugvars>
[09:11:38.824]  
[09:11:38.824]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[09:11:38.824]    <block atomic="false" info="">
[09:11:38.825]      __var nReset      = 0x80;
[09:11:38.825]        // -> [nReset <= 0x00000080]
[09:11:38.826]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:11:38.829]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:11:38.829]    </block>
[09:11:38.830]    <control if="" while="1" timeout="50000" info="">
[09:11:38.830]      // while "1"  (timeout="50000")
[09:11:38.831]      // while-condition  =>  TRUE
[09:11:38.831]      // while "1"  (timeout="50000")
[09:11:38.831]      // while-condition  =>  TRUE
[09:11:38.832]      // while "1"  (timeout="50000")
[09:11:38.832]      // while-condition  =>  TRUE
[09:11:38.832]      // while "1"  (timeout="50000")
[09:11:38.834]      // while-condition  =>  TRUE
[09:11:38.834]      // while "1"  (timeout="50000")
[09:11:38.834]      // while-condition  =>  TRUE
[09:11:38.834]      // while "1"  (timeout="50000")
[09:11:38.835]      // while-condition  =>  TRUE
[09:11:38.835]      // while "1"  (timeout="50000")
[09:11:38.835]      // while-condition  =>  TRUE
[09:11:38.836]      // while "1"  (timeout="50000")
[09:11:38.836]      // while-condition  =>  TRUE
[09:11:38.837]      // while "1"  (timeout="50000")
[09:11:38.837]      // while-condition  =>  TRUE
[09:11:38.837]      // while "1"  (timeout="50000")
[09:11:38.837]      // while-condition  =>  TRUE
[09:11:38.838]      // while "1"  (timeout="50000")
[09:11:38.838]      // while-condition  =>  TRUE
[09:11:38.838]      // while "1"  (timeout="50000")
[09:11:38.838]      // while-condition  =>  TRUE
[09:11:38.839]      // while "1"  (timeout="50000")
[09:11:38.839]      // while-condition  =>  TRUE
[09:11:38.839]      // while "1"  (timeout="50000")
[09:11:38.840]      // while-condition  =>  TRUE
[09:11:38.840]      // while "1"  (timeout="50000")
[09:11:38.840]      // while-condition  =>  TRUE
[09:11:38.840]      // while "1"  (timeout="50000")
[09:11:38.841]      // while-condition  =>  TRUE
[09:11:38.841]      // while "1"  (timeout="50000")
[09:11:38.841]      // while-condition  =>  TRUE
[09:11:38.841]      // while "1"  (timeout="50000")
[09:11:38.842]      // while-condition  =>  TRUE
[09:11:38.842]      // while "1"  (timeout="50000")
[09:11:38.842]      // while-condition  =>  TRUE
[09:11:38.842]      // while "1"  (timeout="50000")
[09:11:38.842]      // while-condition  =>  TRUE
[09:11:38.843]      // while "1"  (timeout="50000")
[09:11:38.843]      // while-condition  =>  TRUE
[09:11:38.843]      // while "1"  (timeout="50000")
[09:11:38.843]      // while-condition  =>  TRUE
[09:11:38.844]      // while "1"  (timeout="50000")
[09:11:38.844]      // while-condition  =>  TRUE
[09:11:38.844]      // while "1"  (timeout="50000")
[09:11:38.844]      // while-condition  =>  TRUE
[09:11:38.844]      // while "1"  (timeout="50000")
[09:11:38.845]      // while-condition  =>  TRUE
[09:11:38.845]      // while "1"  (timeout="50000")
[09:11:38.845]      // while-condition  =>  TRUE
[09:11:38.845]      // while "1"  (timeout="50000")
[09:11:38.845]      // while-condition  =>  TRUE
[09:11:38.846]      // while "1"  (timeout="50000")
[09:11:38.846]      // while-condition  =>  TRUE
[09:11:38.846]      // while "1"  (timeout="50000")
[09:11:38.846]      // while-condition  =>  TRUE
[09:11:38.846]      // while "1"  (timeout="50000")
[09:11:38.847]      // while-condition  =>  TRUE
[09:11:38.847]      // while "1"  (timeout="50000")
[09:11:38.847]      // while-condition  =>  TRUE
[09:11:38.847]      // while "1"  (timeout="50000")
[09:11:38.847]      // while-condition  =>  TRUE
[09:11:38.847]      // while "1"  (timeout="50000")
[09:11:38.848]      // while-condition  =>  TRUE
[09:11:38.848]      // while "1"  (timeout="50000")
[09:11:38.848]      // while-condition  =>  TRUE
[09:11:38.848]      // while "1"  (timeout="50000")
[09:11:38.848]      // while-condition  =>  TRUE
[09:11:38.848]      // while "1"  (timeout="50000")
[09:11:38.848]      // while-condition  =>  TRUE
[09:11:38.848]      // while "1"  (timeout="50000")
[09:11:38.848]      // while-condition  =>  TRUE
[09:11:38.848]      // while "1"  (timeout="50000")
[09:11:38.849]      // while-condition  =>  TRUE
[09:11:38.849]      // while "1"  (timeout="50000")
[09:11:38.849]      // while-condition  =>  TRUE
[09:11:38.849]      // while "1"  (timeout="50000")
[09:11:38.849]      // while-condition  =>  TRUE
[09:11:38.850]      // while "1"  (timeout="50000")
[09:11:38.850]      // while-condition  =>  TRUE
[09:11:38.850]      // while "1"  (timeout="50000")
[09:11:38.850]      // while-condition  =>  TRUE
[09:11:38.851]      // while "1"  (timeout="50000")
[09:11:38.851]      // while-condition  =>  TRUE
[09:11:38.851]      // while "1"  (timeout="50000")
[09:11:38.851]      // while-condition  =>  TRUE
[09:11:38.852]      // while "1"  (timeout="50000")
[09:11:38.853]      // while-condition  =>  TRUE
[09:11:38.853]      // while "1"  (timeout="50000")
[09:11:38.853]      // while-condition  =>  TRUE
[09:11:38.853]      // while "1"  (timeout="50000")
[09:11:38.853]      // while-condition  =>  TRUE
[09:11:38.854]      // while "1"  (timeout="50000")
[09:11:38.854]      // while-condition  =>  TRUE
[09:11:38.854]      // while "1"  (timeout="50000")
[09:11:38.854]      // while-condition  =>  TRUE
[09:11:38.855]      // while "1"  (timeout="50000")
[09:11:38.855]      // while-condition  =>  TRUE
[09:11:38.855]      // while "1"  (timeout="50000")
[09:11:38.855]      // while-condition  =>  TRUE
[09:11:38.856]      // while "1"  (timeout="50000")
[09:11:38.856]      // while-condition  =>  TRUE
[09:11:38.856]      // while "1"  (timeout="50000")
[09:11:38.856]      // while-condition  =>  TRUE
[09:11:38.856]      // while "1"  (timeout="50000")
[09:11:38.857]      // while-condition  =>  TRUE
[09:11:38.857]      // while "1"  (timeout="50000")
[09:11:38.857]      // while-condition  =>  TRUE
[09:11:38.857]      // while "1"  (timeout="50000")
[09:11:38.857]      // while-condition  =>  TRUE
[09:11:38.857]      // while "1"  (timeout="50000")
[09:11:38.857]      // while-condition  =>  TRUE
[09:11:38.857]      // while "1"  (timeout="50000")
[09:11:38.857]      // while-condition  =>  TRUE
[09:11:38.857]      // while "1"  (timeout="50000")
[09:11:38.857]      // while-condition  =>  TRUE
[09:11:38.858]      // while "1"  (timeout="50000")
[09:11:38.858]      // while-condition  =>  TRUE
[09:11:38.858]      // while "1"  (timeout="50000")
[09:11:38.858]      // while-condition  =>  TRUE
[09:11:38.858]      // while "1"  (timeout="50000")
[09:11:38.860]      // while-condition  =>  TRUE
[09:11:38.860]      // while "1"  (timeout="50000")
[09:11:38.860]      // while-condition  =>  TRUE
[09:11:38.860]      // while "1"  (timeout="50000")
[09:11:38.860]      // while-condition  =>  TRUE
[09:11:38.860]      // while "1"  (timeout="50000")
[09:11:38.860]      // while-condition  =>  TRUE
[09:11:38.861]      // while "1"  (timeout="50000")
[09:11:38.861]      // while-condition  =>  TRUE
[09:11:38.861]      // while "1"  (timeout="50000")
[09:11:38.861]      // while-condition  =>  TRUE
[09:11:38.862]      // while "1"  (timeout="50000")
[09:11:38.862]      // while-condition  =>  TRUE
[09:11:38.862]      // while "1"  (timeout="50000")
[09:11:38.862]      // while-condition  =>  TRUE
[09:11:38.862]      // while "1"  (timeout="50000")
[09:11:38.863]      // while-condition  =>  TRUE
[09:11:38.863]      // while "1"  (timeout="50000")
[09:11:38.863]      // while-condition  =>  TRUE
[09:11:38.863]      // while "1"  (timeout="50000")
[09:11:38.863]      // while-condition  =>  TRUE
[09:11:38.863]      // while "1"  (timeout="50000")
[09:11:38.864]      // while-condition  =>  TRUE
[09:11:38.864]      // while "1"  (timeout="50000")
[09:11:38.864]      // while-condition  =>  TRUE
[09:11:38.864]      // while "1"  (timeout="50000")
[09:11:38.864]      // while-condition  =>  TRUE
[09:11:38.865]      // while "1"  (timeout="50000")
[09:11:38.865]      // while-condition  =>  TRUE
[09:11:38.865]      // while "1"  (timeout="50000")
[09:11:38.865]      // while-condition  =>  TRUE
[09:11:38.865]      // while "1"  (timeout="50000")
[09:11:38.866]      // while-condition  =>  TRUE
[09:11:38.866]      // while "1"  (timeout="50000")
[09:11:38.866]      // while-condition  =>  TRUE
[09:11:38.866]      // while "1"  (timeout="50000")
[09:11:38.866]      // while-condition  =>  TRUE
[09:11:38.867]      // while "1"  (timeout="50000")
[09:11:38.867]      // while-condition  =>  TRUE
[09:11:38.867]      // while "1"  (timeout="50000")
[09:11:38.867]      // while-condition  =>  TRUE
[09:11:38.867]      // while "1"  (timeout="50000")
[09:11:38.868]      // while-condition  =>  TRUE
[09:11:38.868]      // while "1"  (timeout="50000")
[09:11:38.868]      // while-condition  =>  TRUE
[09:11:38.868]      // while "1"  (timeout="50000")
[09:11:38.868]      // while-condition  =>  TRUE
[09:11:38.868]      // while "1"  (timeout="50000")
[09:11:38.868]      // while-condition  =>  TRUE
[09:11:38.868]      // while "1"  (timeout="50000")
[09:11:38.868]      // while-condition  =>  TRUE
[09:11:38.870]      // while "1"  (timeout="50000")
[09:11:38.870]      // while-condition  =>  TRUE
[09:11:38.870]      // while "1"  (timeout="50000")
[09:11:38.871]      // while-condition  =>  TRUE
[09:11:38.871]      // while "1"  (timeout="50000")
[09:11:38.871]      // while-condition  =>  TRUE
[09:11:38.871]      // while "1"  (timeout="50000")
[09:11:38.871]      // while-condition  =>  TRUE
[09:11:38.872]      // while "1"  (timeout="50000")
[09:11:38.872]      // while-condition  =>  TRUE
[09:11:38.872]      // while "1"  (timeout="50000")
[09:11:38.872]      // while-condition  =>  TRUE
[09:11:38.872]      // while "1"  (timeout="50000")
[09:11:38.873]      // while-condition  =>  TRUE
[09:11:38.873]      // while "1"  (timeout="50000")
[09:11:38.873]      // while-condition  =>  TRUE
[09:11:38.873]      // while "1"  (timeout="50000")
[09:11:38.873]      // while-condition  =>  TRUE
[09:11:38.874]      // while "1"  (timeout="50000")
[09:11:38.874]      // while-condition  =>  TRUE
[09:11:38.874]      // while "1"  (timeout="50000")
[09:11:38.874]      // while-condition  =>  TRUE
[09:11:38.874]      // while "1"  (timeout="50000")
[09:11:38.875]      // while-condition  =>  TRUE
[09:11:38.875]      // while "1"  (timeout="50000")
[09:11:38.875]      // while-condition  =>  TRUE
[09:11:38.875]      // while "1"  (timeout="50000")
[09:11:38.875]      // while-condition  =>  TRUE
[09:11:38.876]      // while "1"  (timeout="50000")
[09:11:38.876]      // while-condition  =>  TRUE
[09:11:38.876]      // while "1"  (timeout="50000")
[09:11:38.876]      // while-condition  =>  TRUE
[09:11:38.876]      // while "1"  (timeout="50000")
[09:11:38.876]      // while-condition  =>  TRUE
[09:11:38.877]      // while "1"  (timeout="50000")
[09:11:38.877]      // while-condition  =>  TRUE
[09:11:38.877]      // while "1"  (timeout="50000")
[09:11:38.877]      // while-condition  =>  TRUE
[09:11:38.877]      // while "1"  (timeout="50000")
[09:11:38.878]      // while-condition  =>  TRUE
[09:11:38.878]      // while "1"  (timeout="50000")
[09:11:38.878]      // while-condition  =>  TRUE
[09:11:38.878]      // while "1"  (timeout="50000")
[09:11:38.878]      // while  =>  TIMEOUT
[09:11:38.879]      // end while "1"
[09:11:38.879]    </control>
[09:11:38.879]    <block atomic="false" info="">
[09:11:38.879]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:11:38.881]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:11:38.881]    </block>
[09:11:38.881]  </sequence>
[09:11:38.881]  
[09:12:20.210]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:12:20.210]  
[09:12:20.211]  <debugvars>
[09:12:20.211]    // Pre-defined
[09:12:20.211]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:12:20.212]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:12:20.212]    __dp=0x00000000
[09:12:20.213]    __ap=0x00000000
[09:12:20.213]    __traceout=0x00000000      (Trace Disabled)
[09:12:20.214]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:12:20.214]    __FlashAddr=0x00000000
[09:12:20.214]    __FlashLen=0x00000000
[09:12:20.215]    __FlashArg=0x00000000
[09:12:20.215]    __FlashOp=0x00000000
[09:12:20.215]    __Result=0x00000000
[09:12:20.216]  </debugvars>
[09:12:20.216]  
[09:12:20.216]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:12:20.216]    <block atomic="false" info="">
[09:12:20.217]      __var nReset      = 0x80;
[09:12:20.217]        // -> [nReset <= 0x00000080]
[09:12:20.217]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:12:20.219]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:12:20.219]    </block>
[09:12:20.220]    <control if="" while="1" timeout="50000" info="">
[09:12:20.220]      // while "1"  (timeout="50000")
[09:12:20.220]      // while-condition  =>  TRUE
[09:12:20.221]      // while "1"  (timeout="50000")
[09:12:20.221]      // while-condition  =>  TRUE
[09:12:20.221]      // while "1"  (timeout="50000")
[09:12:20.221]      // while-condition  =>  TRUE
[09:12:20.222]      // while "1"  (timeout="50000")
[09:12:20.222]      // while-condition  =>  TRUE
[09:12:20.222]      // while "1"  (timeout="50000")
[09:12:20.223]      // while-condition  =>  TRUE
[09:12:20.223]      // while "1"  (timeout="50000")
[09:12:20.223]      // while-condition  =>  TRUE
[09:12:20.224]      // while "1"  (timeout="50000")
[09:12:20.224]      // while-condition  =>  TRUE
[09:12:20.224]      // while "1"  (timeout="50000")
[09:12:20.224]      // while-condition  =>  TRUE
[09:12:20.225]      // while "1"  (timeout="50000")
[09:12:20.225]      // while-condition  =>  TRUE
[09:12:20.225]      // while "1"  (timeout="50000")
[09:12:20.226]      // while-condition  =>  TRUE
[09:12:20.226]      // while "1"  (timeout="50000")
[09:12:20.226]      // while-condition  =>  TRUE
[09:12:20.226]      // while "1"  (timeout="50000")
[09:12:20.227]      // while-condition  =>  TRUE
[09:12:20.227]      // while "1"  (timeout="50000")
[09:12:20.227]      // while-condition  =>  TRUE
[09:12:20.227]      // while "1"  (timeout="50000")
[09:12:20.228]      // while-condition  =>  TRUE
[09:12:20.228]      // while "1"  (timeout="50000")
[09:12:20.228]      // while-condition  =>  TRUE
[09:12:20.228]      // while "1"  (timeout="50000")
[09:12:20.229]      // while-condition  =>  TRUE
[09:12:20.229]      // while "1"  (timeout="50000")
[09:12:20.229]      // while-condition  =>  TRUE
[09:12:20.229]      // while "1"  (timeout="50000")
[09:12:20.230]      // while-condition  =>  TRUE
[09:12:20.230]      // while "1"  (timeout="50000")
[09:12:20.230]      // while-condition  =>  TRUE
[09:12:20.230]      // while "1"  (timeout="50000")
[09:12:20.230]      // while-condition  =>  TRUE
[09:12:20.231]      // while "1"  (timeout="50000")
[09:12:20.231]      // while-condition  =>  TRUE
[09:12:20.231]      // while "1"  (timeout="50000")
[09:12:20.231]      // while-condition  =>  TRUE
[09:12:20.231]      // while "1"  (timeout="50000")
[09:12:20.232]      // while-condition  =>  TRUE
[09:12:20.232]      // while "1"  (timeout="50000")
[09:12:20.232]      // while-condition  =>  TRUE
[09:12:20.232]      // while "1"  (timeout="50000")
[09:12:20.232]      // while-condition  =>  TRUE
[09:12:20.233]      // while "1"  (timeout="50000")
[09:12:20.233]      // while-condition  =>  TRUE
[09:12:20.233]      // while "1"  (timeout="50000")
[09:12:20.233]      // while-condition  =>  TRUE
[09:12:20.233]      // while "1"  (timeout="50000")
[09:12:20.234]      // while-condition  =>  TRUE
[09:12:20.234]      // while "1"  (timeout="50000")
[09:12:20.234]      // while-condition  =>  TRUE
[09:12:20.234]      // while "1"  (timeout="50000")
[09:12:20.234]      // while-condition  =>  TRUE
[09:12:20.235]      // while "1"  (timeout="50000")
[09:12:20.235]      // while-condition  =>  TRUE
[09:12:20.235]      // while "1"  (timeout="50000")
[09:12:20.235]      // while-condition  =>  TRUE
[09:12:20.235]      // while "1"  (timeout="50000")
[09:12:20.236]      // while-condition  =>  TRUE
[09:12:20.236]      // while "1"  (timeout="50000")
[09:12:20.236]      // while-condition  =>  TRUE
[09:12:20.236]      // while "1"  (timeout="50000")
[09:12:20.236]      // while-condition  =>  TRUE
[09:12:20.237]      // while "1"  (timeout="50000")
[09:12:20.237]      // while-condition  =>  TRUE
[09:12:20.237]      // while "1"  (timeout="50000")
[09:12:20.237]      // while-condition  =>  TRUE
[09:12:20.237]      // while "1"  (timeout="50000")
[09:12:20.237]      // while-condition  =>  TRUE
[09:12:20.238]      // while "1"  (timeout="50000")
[09:12:20.238]      // while-condition  =>  TRUE
[09:12:20.238]      // while "1"  (timeout="50000")
[09:12:20.238]      // while-condition  =>  TRUE
[09:12:20.239]      // while "1"  (timeout="50000")
[09:12:20.239]      // while-condition  =>  TRUE
[09:12:20.239]      // while "1"  (timeout="50000")
[09:12:20.239]      // while-condition  =>  TRUE
[09:12:20.239]      // while "1"  (timeout="50000")
[09:12:20.240]      // while-condition  =>  TRUE
[09:12:20.240]      // while "1"  (timeout="50000")
[09:12:20.240]      // while-condition  =>  TRUE
[09:12:20.240]      // while "1"  (timeout="50000")
[09:12:20.241]      // while-condition  =>  TRUE
[09:12:20.241]      // while "1"  (timeout="50000")
[09:12:20.241]      // while-condition  =>  TRUE
[09:12:20.241]      // while "1"  (timeout="50000")
[09:12:20.241]      // while-condition  =>  TRUE
[09:12:20.242]      // while "1"  (timeout="50000")
[09:12:20.242]      // while-condition  =>  TRUE
[09:12:20.242]      // while "1"  (timeout="50000")
[09:12:20.242]      // while-condition  =>  TRUE
[09:12:20.243]      // while "1"  (timeout="50000")
[09:12:20.243]      // while-condition  =>  TRUE
[09:12:20.243]      // while "1"  (timeout="50000")
[09:12:20.243]      // while-condition  =>  TRUE
[09:12:20.243]      // while "1"  (timeout="50000")
[09:12:20.244]      // while-condition  =>  TRUE
[09:12:20.244]      // while "1"  (timeout="50000")
[09:12:20.244]      // while-condition  =>  TRUE
[09:12:20.244]      // while "1"  (timeout="50000")
[09:12:20.245]      // while-condition  =>  TRUE
[09:12:20.245]      // while "1"  (timeout="50000")
[09:12:20.245]      // while-condition  =>  TRUE
[09:12:20.245]      // while "1"  (timeout="50000")
[09:12:20.245]      // while-condition  =>  TRUE
[09:12:20.246]      // while "1"  (timeout="50000")
[09:12:20.246]      // while-condition  =>  TRUE
[09:12:20.246]      // while "1"  (timeout="50000")
[09:12:20.246]      // while-condition  =>  TRUE
[09:12:20.247]      // while "1"  (timeout="50000")
[09:12:20.247]      // while-condition  =>  TRUE
[09:12:20.247]      // while "1"  (timeout="50000")
[09:12:20.247]      // while-condition  =>  TRUE
[09:12:20.247]      // while "1"  (timeout="50000")
[09:12:20.248]      // while-condition  =>  TRUE
[09:12:20.248]      // while "1"  (timeout="50000")
[09:12:20.248]      // while-condition  =>  TRUE
[09:12:20.248]      // while "1"  (timeout="50000")
[09:12:20.249]      // while-condition  =>  TRUE
[09:12:20.249]      // while "1"  (timeout="50000")
[09:12:20.249]      // while-condition  =>  TRUE
[09:12:20.250]      // while "1"  (timeout="50000")
[09:12:20.250]      // while-condition  =>  TRUE
[09:12:20.250]      // while "1"  (timeout="50000")
[09:12:20.250]      // while-condition  =>  TRUE
[09:12:20.251]      // while "1"  (timeout="50000")
[09:12:20.251]      // while-condition  =>  TRUE
[09:12:20.251]      // while "1"  (timeout="50000")
[09:12:20.251]      // while-condition  =>  TRUE
[09:12:20.252]      // while "1"  (timeout="50000")
[09:12:20.252]      // while-condition  =>  TRUE
[09:12:20.252]      // while "1"  (timeout="50000")
[09:12:20.253]      // while-condition  =>  TRUE
[09:12:20.253]      // while "1"  (timeout="50000")
[09:12:20.253]      // while-condition  =>  TRUE
[09:12:20.253]      // while "1"  (timeout="50000")
[09:12:20.254]      // while-condition  =>  TRUE
[09:12:20.254]      // while "1"  (timeout="50000")
[09:12:20.254]      // while-condition  =>  TRUE
[09:12:20.255]      // while "1"  (timeout="50000")
[09:12:20.255]      // while-condition  =>  TRUE
[09:12:20.255]      // while "1"  (timeout="50000")
[09:12:20.255]      // while-condition  =>  TRUE
[09:12:20.256]      // while "1"  (timeout="50000")
[09:12:20.256]      // while-condition  =>  TRUE
[09:12:20.256]      // while "1"  (timeout="50000")
[09:12:20.257]      // while-condition  =>  TRUE
[09:12:20.257]      // while "1"  (timeout="50000")
[09:12:20.257]      // while-condition  =>  TRUE
[09:12:20.257]      // while "1"  (timeout="50000")
[09:12:20.258]      // while-condition  =>  TRUE
[09:12:20.258]      // while "1"  (timeout="50000")
[09:12:20.258]      // while-condition  =>  TRUE
[09:12:20.258]      // while "1"  (timeout="50000")
[09:12:20.259]      // while-condition  =>  TRUE
[09:12:20.259]      // while "1"  (timeout="50000")
[09:12:20.259]      // while-condition  =>  TRUE
[09:12:20.259]      // while "1"  (timeout="50000")
[09:12:20.259]      // while-condition  =>  TRUE
[09:12:20.260]      // while "1"  (timeout="50000")
[09:12:20.260]      // while-condition  =>  TRUE
[09:12:20.260]      // while "1"  (timeout="50000")
[09:12:20.260]      // while-condition  =>  TRUE
[09:12:20.261]      // while "1"  (timeout="50000")
[09:12:20.261]      // while-condition  =>  TRUE
[09:12:20.261]      // while "1"  (timeout="50000")
[09:12:20.261]      // while-condition  =>  TRUE
[09:12:20.261]      // while "1"  (timeout="50000")
[09:12:20.262]      // while-condition  =>  TRUE
[09:12:20.262]      // while "1"  (timeout="50000")
[09:12:20.262]      // while-condition  =>  TRUE
[09:12:20.262]      // while "1"  (timeout="50000")
[09:12:20.262]      // while-condition  =>  TRUE
[09:12:20.263]      // while "1"  (timeout="50000")
[09:12:20.263]      // while-condition  =>  TRUE
[09:12:20.263]      // while "1"  (timeout="50000")
[09:12:20.263]      // while-condition  =>  TRUE
[09:12:20.263]      // while "1"  (timeout="50000")
[09:12:20.264]      // while-condition  =>  TRUE
[09:12:20.264]      // while "1"  (timeout="50000")
[09:12:20.264]      // while-condition  =>  TRUE
[09:12:20.264]      // while "1"  (timeout="50000")
[09:12:20.264]      // while-condition  =>  TRUE
[09:12:20.265]      // while "1"  (timeout="50000")
[09:12:20.265]      // while-condition  =>  TRUE
[09:12:20.265]      // while "1"  (timeout="50000")
[09:12:20.265]      // while-condition  =>  TRUE
[09:12:20.265]      // while "1"  (timeout="50000")
[09:12:20.266]      // while-condition  =>  TRUE
[09:12:20.266]      // while "1"  (timeout="50000")
[09:12:20.266]      // while-condition  =>  TRUE
[09:12:20.266]      // while "1"  (timeout="50000")
[09:12:20.266]      // while-condition  =>  TRUE
[09:12:20.267]      // while "1"  (timeout="50000")
[09:12:20.267]      // while-condition  =>  TRUE
[09:12:20.267]      // while "1"  (timeout="50000")
[09:12:20.267]      // while-condition  =>  TRUE
[09:12:20.267]      // while "1"  (timeout="50000")
[09:12:20.268]      // while-condition  =>  TRUE
[09:12:20.268]      // while "1"  (timeout="50000")
[09:12:20.268]      // while-condition  =>  TRUE
[09:12:20.268]      // while "1"  (timeout="50000")
[09:12:20.269]      // while-condition  =>  TRUE
[09:12:20.269]      // while "1"  (timeout="50000")
[09:12:20.269]      // while  =>  TIMEOUT
[09:12:20.269]      // end while "1"
[09:12:20.269]    </control>
[09:12:20.270]    <block atomic="false" info="">
[09:12:20.270]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:12:20.272]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:12:20.272]    </block>
[09:12:20.273]    <control if="" while="1" timeout="10000" info="">
[09:12:20.273]      // while "1"  (timeout="10000")
[09:12:20.273]      // while-condition  =>  TRUE
[09:12:20.273]      // while "1"  (timeout="10000")
[09:12:20.274]      // while-condition  =>  TRUE
[09:12:20.274]      // while "1"  (timeout="10000")
[09:12:20.274]      // while-condition  =>  TRUE
[09:12:20.275]      // while "1"  (timeout="10000")
[09:12:20.275]      // while-condition  =>  TRUE
[09:12:20.275]      // while "1"  (timeout="10000")
[09:12:20.276]      // while-condition  =>  TRUE
[09:12:20.276]      // while "1"  (timeout="10000")
[09:12:20.276]      // while-condition  =>  TRUE
[09:12:20.277]      // while "1"  (timeout="10000")
[09:12:20.277]      // while-condition  =>  TRUE
[09:12:20.277]      // while "1"  (timeout="10000")
[09:12:20.278]      // while-condition  =>  TRUE
[09:12:20.278]      // while "1"  (timeout="10000")
[09:12:20.279]      // while-condition  =>  TRUE
[09:12:20.279]      // while "1"  (timeout="10000")
[09:12:20.279]      // while-condition  =>  TRUE
[09:12:20.280]      // while "1"  (timeout="10000")
[09:12:20.280]      // while-condition  =>  TRUE
[09:12:20.280]      // while "1"  (timeout="10000")
[09:12:20.281]      // while-condition  =>  TRUE
[09:12:20.281]      // while "1"  (timeout="10000")
[09:12:20.281]      // while-condition  =>  TRUE
[09:12:20.282]      // while "1"  (timeout="10000")
[09:12:20.282]      // while-condition  =>  TRUE
[09:12:20.282]      // while "1"  (timeout="10000")
[09:12:20.282]      // while-condition  =>  TRUE
[09:12:20.283]      // while "1"  (timeout="10000")
[09:12:20.283]      // while-condition  =>  TRUE
[09:12:20.283]      // while "1"  (timeout="10000")
[09:12:20.284]      // while-condition  =>  TRUE
[09:12:20.284]      // while "1"  (timeout="10000")
[09:12:20.284]      // while-condition  =>  TRUE
[09:12:20.284]      // while "1"  (timeout="10000")
[09:12:20.285]      // while-condition  =>  TRUE
[09:12:20.285]      // while "1"  (timeout="10000")
[09:12:20.285]      // while  =>  TIMEOUT
[09:12:20.285]      // end while "1"
[09:12:20.285]    </control>
[09:12:20.286]    <block atomic="true" info="">
[09:12:20.289]  
[09:12:20.289]  ! W001 : No atomic sequence support in debug unit
[09:12:20.289]  
[09:12:20.290]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:12:20.294]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:12:20.294]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:12:20.296]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:12:20.296]    </block>
[09:12:20.296]    <block atomic="false" info="">
[09:12:20.296]      __errorcontrol = 0x00000001;
[09:12:20.297]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:12:20.298]      ReadDP(0x0);
[09:12:20.301]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:12:20.301]      __errorcontrol = 0x00000000;
[09:12:20.301]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:12:20.301]    </block>
[09:12:20.302]  </sequence>
[09:12:20.302]  
[09:12:20.302]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:12:20.302]  
[09:12:20.303]  <debugvars>
[09:12:20.303]    // Pre-defined
[09:12:20.304]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:12:20.304]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:12:20.304]    __dp=0x00000000
[09:12:20.305]    __ap=0x00000000
[09:12:20.305]    __traceout=0x00000000      (Trace Disabled)
[09:12:20.305]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:12:20.306]    __FlashAddr=0x00000000
[09:12:20.306]    __FlashLen=0x00000000
[09:12:20.306]    __FlashArg=0x00000000
[09:12:20.307]    __FlashOp=0x00000000
[09:12:20.307]    __Result=0x00000000
[09:12:20.308]  </debugvars>
[09:12:20.308]  
[09:12:20.308]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:12:20.309]  </sequence>
[09:12:20.309]  
[09:12:20.313]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[09:12:20.313]  
[09:12:20.314]  <debugvars>
[09:12:20.314]    // Pre-defined
[09:12:20.314]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:12:20.315]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:12:20.315]    __dp=0x00000000
[09:12:20.316]    __ap=0x00000000
[09:12:20.316]    __traceout=0x00000000      (Trace Disabled)
[09:12:20.316]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:12:20.317]    __FlashAddr=0x00000000
[09:12:20.317]    __FlashLen=0x00000000
[09:12:20.317]    __FlashArg=0x00000000
[09:12:20.318]    __FlashOp=0x00000000
[09:12:20.318]    __Result=0x00000000
[09:12:20.318]  </debugvars>
[09:12:20.319]  
[09:12:20.319]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:12:20.319]    <block atomic="false" info="">
[09:12:20.320]      __var SW_DP_ABORT  = 0x0;
[09:12:20.320]        // -> [SW_DP_ABORT <= 0x00000000]
[09:12:20.320]      __var DP_CTRL_STAT = 0x4;
[09:12:20.321]        // -> [DP_CTRL_STAT <= 0x00000004]
[09:12:20.321]      __var DP_SELECT    = 0x8;
[09:12:20.321]        // -> [DP_SELECT <= 0x00000008]
[09:12:20.322]      __var powered_down = 0;
[09:12:20.322]        // -> [powered_down <= 0x00000000]
[09:12:20.322]      WriteDP(DP_SELECT, 0x00000000);
[09:12:20.324]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:12:20.325]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:12:20.327]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[09:12:20.328]        // -> [powered_down <= 0x00000001]
[09:12:20.328]    </block>
[09:12:20.328]    <control if="powered_down" while="" timeout="0" info="">
[09:12:20.329]      // if-block "powered_down"
[09:12:20.329]        // =>  TRUE
[09:12:20.329]      <block atomic="false" info="">
[09:12:20.330]        WriteDP(DP_CTRL_STAT, 0x50000000);
[09:12:20.332]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[09:12:20.333]      </block>
[09:12:20.333]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[09:12:20.334]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[09:12:20.335]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:12:20.336]        // while-condition  =>  FALSE
[09:12:20.336]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[09:12:20.337]      </control>
[09:12:20.337]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[09:12:20.337]        // if-block "(__protocol & 0xFFFF) == 1"
[09:12:20.338]          // =>  FALSE
[09:12:20.338]        // skip if-block "(__protocol & 0xFFFF) == 1"
[09:12:20.338]      </control>
[09:12:20.339]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[09:12:20.339]        // if-block "(__protocol & 0xFFFF) == 2"
[09:12:20.339]          // =>  TRUE
[09:12:20.339]        <block atomic="false" info="">
[09:12:20.340]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[09:12:20.341]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[09:12:20.342]          WriteDP(SW_DP_ABORT, 0x0000001E);
[09:12:20.343]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[09:12:20.344]        </block>
[09:12:20.344]        // end if-block "(__protocol & 0xFFFF) == 2"
[09:12:20.344]      </control>
[09:12:20.345]      // end if-block "powered_down"
[09:12:20.345]    </control>
[09:12:20.345]  </sequence>
[09:12:20.346]  
[09:12:20.450]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:12:20.450]  
[09:12:20.451]  <debugvars>
[09:12:20.451]    // Pre-defined
[09:12:20.451]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:12:20.452]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:12:20.452]    __dp=0x00000000
[09:12:20.453]    __ap=0x00000000
[09:12:20.453]    __traceout=0x00000000      (Trace Disabled)
[09:12:20.454]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:12:20.454]    __FlashAddr=0x00000000
[09:12:20.454]    __FlashLen=0x00000000
[09:12:20.455]    __FlashArg=0x00000000
[09:12:20.455]    __FlashOp=0x00000000
[09:12:20.456]    __Result=0x00000000
[09:12:20.456]  </debugvars>
[09:12:20.456]  
[09:12:20.456]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:12:20.457]    <block atomic="true" info="">
[09:12:20.470]  
[09:12:20.470]  ! W001 : No atomic sequence support in debug unit
[09:12:20.470]  
[09:12:20.474]      __var DP_R_IDCODE    = 0x0;
[09:12:20.476]        // -> [DP_R_IDCODE <= 0x00000000]
[09:12:20.476]      __var DP_W_ABORT    = 0x0;
[09:12:20.477]        // -> [DP_W_ABORT <= 0x00000000]
[09:12:20.477]      __var DP_CTRLSTAT = 0x4;
[09:12:20.477]        // -> [DP_CTRLSTAT <= 0x00000004]
[09:12:20.477]      __var DP_W_SELECT    = 0x8;
[09:12:20.477]        // -> [DP_W_SELECT <= 0x00000008]
[09:12:20.478]      __var AP_TAR		= 0x4;
[09:12:20.478]        // -> [AP_TAR <= 0x00000004]
[09:12:20.478]      __var AP_BD0		= 0x0;
[09:12:20.478]        // -> [AP_BD0 <= 0x00000000]
[09:12:20.478]      __var AP_BD1		= 0x4;
[09:12:20.478]        // -> [AP_BD1 <= 0x00000004]
[09:12:20.478]      __var AP_BD2		= 0x8;
[09:12:20.478]        // -> [AP_BD2 <= 0x00000008]
[09:12:20.478]      __var PCWithinFlash = 0;
[09:12:20.479]        // -> [PCWithinFlash <= 0x00000000]
[09:12:20.479]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:12:20.485]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.492]    </block>
[09:12:20.492]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:12:20.492]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:12:20.498]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.499]      // while-condition  =>  FALSE
[09:12:20.499]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:12:20.499]    </control>
[09:12:20.499]    <block atomic="true" info="">
[09:12:20.505]  
[09:12:20.505]  ! W001 : No atomic sequence support in debug unit
[09:12:20.505]  
[09:12:20.508]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:12:20.510]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:12:20.511]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:12:20.512]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.513]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:12:20.514]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:12:20.515]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:12:20.518]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.519]    </block>
[09:12:20.519]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:12:20.519]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.521]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.522]      // while-condition  =>  TRUE
[09:12:20.522]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.524]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.525]      // while-condition  =>  TRUE
[09:12:20.525]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.527]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.528]      // while-condition  =>  TRUE
[09:12:20.528]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.530]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.531]      // while-condition  =>  TRUE
[09:12:20.531]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.534]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.535]      // while-condition  =>  TRUE
[09:12:20.536]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.537]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.538]      // while-condition  =>  TRUE
[09:12:20.538]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.542]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.542]      // while-condition  =>  TRUE
[09:12:20.542]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.545]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.545]      // while-condition  =>  TRUE
[09:12:20.545]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.548]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.548]      // while-condition  =>  TRUE
[09:12:20.548]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.551]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.551]      // while-condition  =>  TRUE
[09:12:20.551]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.554]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.554]      // while-condition  =>  TRUE
[09:12:20.554]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.557]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.557]      // while-condition  =>  TRUE
[09:12:20.557]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.560]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.560]      // while-condition  =>  TRUE
[09:12:20.560]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.563]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.563]      // while-condition  =>  TRUE
[09:12:20.563]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.566]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.566]      // while-condition  =>  TRUE
[09:12:20.566]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.569]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.569]      // while-condition  =>  TRUE
[09:12:20.569]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.572]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.572]      // while-condition  =>  TRUE
[09:12:20.572]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.575]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.575]      // while-condition  =>  TRUE
[09:12:20.575]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.578]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.578]      // while-condition  =>  TRUE
[09:12:20.578]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.581]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.581]      // while-condition  =>  TRUE
[09:12:20.581]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.584]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.584]      // while-condition  =>  TRUE
[09:12:20.584]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.587]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.587]      // while-condition  =>  TRUE
[09:12:20.588]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.590]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.590]      // while-condition  =>  TRUE
[09:12:20.590]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.593]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.593]      // while-condition  =>  TRUE
[09:12:20.593]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.596]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.596]      // while-condition  =>  TRUE
[09:12:20.596]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.599]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.599]      // while-condition  =>  TRUE
[09:12:20.599]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.602]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.602]      // while-condition  =>  TRUE
[09:12:20.602]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.605]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.605]      // while-condition  =>  TRUE
[09:12:20.605]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.608]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.608]      // while-condition  =>  TRUE
[09:12:20.608]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.611]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.611]      // while-condition  =>  TRUE
[09:12:20.611]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.614]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.614]      // while-condition  =>  TRUE
[09:12:20.614]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.617]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.617]      // while-condition  =>  TRUE
[09:12:20.617]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.620]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.620]      // while-condition  =>  TRUE
[09:12:20.620]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.623]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.623]      // while-condition  =>  TRUE
[09:12:20.623]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.626]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.626]      // while-condition  =>  TRUE
[09:12:20.627]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.629]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.629]      // while-condition  =>  TRUE
[09:12:20.629]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:20.629]      // while  =>  TIMEOUT
[09:12:20.630]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:12:20.630]    </control>
[09:12:20.630]    <block atomic="false" info="">
[09:12:20.630]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:12:20.633]        // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:12:20.633]        // -> [PCWithinFlash <= 0x00000000]
[09:12:20.633]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:12:20.636]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:12:20.636]    </block>
[09:12:20.636]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:12:20.636]      // if-block "PCWithinFlash == 0"
[09:12:20.637]        // =>  TRUE
[09:12:20.637]      // end if-block "PCWithinFlash == 0"
[09:12:20.637]    </control>
[09:12:20.637]  </sequence>
[09:12:20.638]  
[09:12:20.684]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[09:12:20.684]  
[09:12:20.685]  <debugvars>
[09:12:20.685]    // Pre-defined
[09:12:20.685]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:12:20.685]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:12:20.686]    __dp=0x00000000
[09:12:20.686]    __ap=0x00000000
[09:12:20.686]    __traceout=0x00000000      (Trace Disabled)
[09:12:20.686]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:12:20.687]    __FlashAddr=0x00000000
[09:12:20.687]    __FlashLen=0x00000000
[09:12:20.687]    __FlashArg=0x00000000
[09:12:20.687]    __FlashOp=0x00000000
[09:12:20.688]    __Result=0x00000000
[09:12:20.688]  </debugvars>
[09:12:20.688]  
[09:12:20.688]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[09:12:20.689]    <block atomic="false" info="">
[09:12:20.689]    </block>
[09:12:20.689]  </sequence>
[09:12:20.689]  
[09:12:20.692]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[09:12:20.692]  
[09:12:20.692]  <debugvars>
[09:12:20.693]    // Pre-defined
[09:12:20.693]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:12:20.693]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:12:20.693]    __dp=0x00000000
[09:12:20.694]    __ap=0x00000000
[09:12:20.694]    __traceout=0x00000000      (Trace Disabled)
[09:12:20.694]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:12:20.694]    __FlashAddr=0x00000000
[09:12:20.694]    __FlashLen=0x00000000
[09:12:20.695]    __FlashArg=0x00000000
[09:12:20.695]    __FlashOp=0x00000000
[09:12:20.695]    __Result=0x00000000
[09:12:20.695]  </debugvars>
[09:12:20.696]  
[09:12:20.696]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:12:20.696]    <block atomic="false" info="">
[09:12:20.696]      __var nReset      = 0x80;
[09:12:20.697]        // -> [nReset <= 0x00000080]
[09:12:20.697]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:12:20.699]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:12:20.699]    </block>
[09:12:20.699]    <control if="" while="1" timeout="50000" info="">
[09:12:20.700]      // while "1"  (timeout="50000")
[09:12:20.700]      // while-condition  =>  TRUE
[09:12:20.700]      // while "1"  (timeout="50000")
[09:12:20.700]      // while-condition  =>  TRUE
[09:12:20.701]      // while "1"  (timeout="50000")
[09:12:20.701]      // while-condition  =>  TRUE
[09:12:20.701]      // while "1"  (timeout="50000")
[09:12:20.701]      // while-condition  =>  TRUE
[09:12:20.702]      // while "1"  (timeout="50000")
[09:12:20.702]      // while-condition  =>  TRUE
[09:12:20.702]      // while "1"  (timeout="50000")
[09:12:20.702]      // while-condition  =>  TRUE
[09:12:20.702]      // while "1"  (timeout="50000")
[09:12:20.703]      // while-condition  =>  TRUE
[09:12:20.703]      // while "1"  (timeout="50000")
[09:12:20.703]      // while-condition  =>  TRUE
[09:12:20.703]      // while "1"  (timeout="50000")
[09:12:20.704]      // while-condition  =>  TRUE
[09:12:20.704]      // while "1"  (timeout="50000")
[09:12:20.704]      // while-condition  =>  TRUE
[09:12:20.704]      // while "1"  (timeout="50000")
[09:12:20.705]      // while-condition  =>  TRUE
[09:12:20.705]      // while "1"  (timeout="50000")
[09:12:20.705]      // while-condition  =>  TRUE
[09:12:20.705]      // while "1"  (timeout="50000")
[09:12:20.706]      // while-condition  =>  TRUE
[09:12:20.706]      // while "1"  (timeout="50000")
[09:12:20.706]      // while-condition  =>  TRUE
[09:12:20.706]      // while "1"  (timeout="50000")
[09:12:20.707]      // while-condition  =>  TRUE
[09:12:20.707]      // while "1"  (timeout="50000")
[09:12:20.707]      // while-condition  =>  TRUE
[09:12:20.707]      // while "1"  (timeout="50000")
[09:12:20.708]      // while-condition  =>  TRUE
[09:12:20.708]      // while "1"  (timeout="50000")
[09:12:20.708]      // while-condition  =>  TRUE
[09:12:20.708]      // while "1"  (timeout="50000")
[09:12:20.708]      // while-condition  =>  TRUE
[09:12:20.709]      // while "1"  (timeout="50000")
[09:12:20.709]      // while-condition  =>  TRUE
[09:12:20.709]      // while "1"  (timeout="50000")
[09:12:20.709]      // while-condition  =>  TRUE
[09:12:20.710]      // while "1"  (timeout="50000")
[09:12:20.710]      // while-condition  =>  TRUE
[09:12:20.710]      // while "1"  (timeout="50000")
[09:12:20.710]      // while-condition  =>  TRUE
[09:12:20.711]      // while "1"  (timeout="50000")
[09:12:20.711]      // while-condition  =>  TRUE
[09:12:20.711]      // while "1"  (timeout="50000")
[09:12:20.711]      // while-condition  =>  TRUE
[09:12:20.712]      // while "1"  (timeout="50000")
[09:12:20.712]      // while-condition  =>  TRUE
[09:12:20.712]      // while "1"  (timeout="50000")
[09:12:20.712]      // while-condition  =>  TRUE
[09:12:20.712]      // while "1"  (timeout="50000")
[09:12:20.713]      // while-condition  =>  TRUE
[09:12:20.713]      // while "1"  (timeout="50000")
[09:12:20.713]      // while-condition  =>  TRUE
[09:12:20.713]      // while "1"  (timeout="50000")
[09:12:20.714]      // while-condition  =>  TRUE
[09:12:20.714]      // while "1"  (timeout="50000")
[09:12:20.714]      // while-condition  =>  TRUE
[09:12:20.714]      // while "1"  (timeout="50000")
[09:12:20.714]      // while-condition  =>  TRUE
[09:12:20.715]      // while "1"  (timeout="50000")
[09:12:20.715]      // while-condition  =>  TRUE
[09:12:20.715]      // while "1"  (timeout="50000")
[09:12:20.715]      // while-condition  =>  TRUE
[09:12:20.716]      // while "1"  (timeout="50000")
[09:12:20.716]      // while-condition  =>  TRUE
[09:12:20.716]      // while "1"  (timeout="50000")
[09:12:20.716]      // while-condition  =>  TRUE
[09:12:20.717]      // while "1"  (timeout="50000")
[09:12:20.717]      // while-condition  =>  TRUE
[09:12:20.717]      // while "1"  (timeout="50000")
[09:12:20.717]      // while-condition  =>  TRUE
[09:12:20.717]      // while "1"  (timeout="50000")
[09:12:20.718]      // while-condition  =>  TRUE
[09:12:20.718]      // while "1"  (timeout="50000")
[09:12:20.718]      // while-condition  =>  TRUE
[09:12:20.718]      // while "1"  (timeout="50000")
[09:12:20.719]      // while-condition  =>  TRUE
[09:12:20.719]      // while "1"  (timeout="50000")
[09:12:20.719]      // while-condition  =>  TRUE
[09:12:20.719]      // while "1"  (timeout="50000")
[09:12:20.720]      // while-condition  =>  TRUE
[09:12:20.720]      // while "1"  (timeout="50000")
[09:12:20.720]      // while-condition  =>  TRUE
[09:12:20.720]      // while "1"  (timeout="50000")
[09:12:20.721]      // while-condition  =>  TRUE
[09:12:20.721]      // while "1"  (timeout="50000")
[09:12:20.721]      // while-condition  =>  TRUE
[09:12:20.721]      // while "1"  (timeout="50000")
[09:12:20.721]      // while-condition  =>  TRUE
[09:12:20.722]      // while "1"  (timeout="50000")
[09:12:20.722]      // while-condition  =>  TRUE
[09:12:20.722]      // while "1"  (timeout="50000")
[09:12:20.722]      // while-condition  =>  TRUE
[09:12:20.723]      // while "1"  (timeout="50000")
[09:12:20.723]      // while-condition  =>  TRUE
[09:12:20.723]      // while "1"  (timeout="50000")
[09:12:20.723]      // while-condition  =>  TRUE
[09:12:20.723]      // while "1"  (timeout="50000")
[09:12:20.724]      // while-condition  =>  TRUE
[09:12:20.724]      // while "1"  (timeout="50000")
[09:12:20.724]      // while-condition  =>  TRUE
[09:12:20.724]      // while "1"  (timeout="50000")
[09:12:20.725]      // while-condition  =>  TRUE
[09:12:20.725]      // while "1"  (timeout="50000")
[09:12:20.725]      // while-condition  =>  TRUE
[09:12:20.725]      // while "1"  (timeout="50000")
[09:12:20.726]      // while-condition  =>  TRUE
[09:12:20.726]      // while "1"  (timeout="50000")
[09:12:20.726]      // while-condition  =>  TRUE
[09:12:20.726]      // while "1"  (timeout="50000")
[09:12:20.727]      // while-condition  =>  TRUE
[09:12:20.727]      // while "1"  (timeout="50000")
[09:12:20.727]      // while-condition  =>  TRUE
[09:12:20.727]      // while "1"  (timeout="50000")
[09:12:20.728]      // while-condition  =>  TRUE
[09:12:20.728]      // while "1"  (timeout="50000")
[09:12:20.728]      // while-condition  =>  TRUE
[09:12:20.728]      // while "1"  (timeout="50000")
[09:12:20.728]      // while-condition  =>  TRUE
[09:12:20.729]      // while "1"  (timeout="50000")
[09:12:20.729]      // while-condition  =>  TRUE
[09:12:20.729]      // while "1"  (timeout="50000")
[09:12:20.729]      // while-condition  =>  TRUE
[09:12:20.730]      // while "1"  (timeout="50000")
[09:12:20.730]      // while-condition  =>  TRUE
[09:12:20.730]      // while "1"  (timeout="50000")
[09:12:20.730]      // while-condition  =>  TRUE
[09:12:20.730]      // while "1"  (timeout="50000")
[09:12:20.731]      // while-condition  =>  TRUE
[09:12:20.731]      // while "1"  (timeout="50000")
[09:12:20.731]      // while-condition  =>  TRUE
[09:12:20.731]      // while "1"  (timeout="50000")
[09:12:20.732]      // while-condition  =>  TRUE
[09:12:20.732]      // while "1"  (timeout="50000")
[09:12:20.732]      // while-condition  =>  TRUE
[09:12:20.732]      // while "1"  (timeout="50000")
[09:12:20.733]      // while-condition  =>  TRUE
[09:12:20.733]      // while "1"  (timeout="50000")
[09:12:20.733]      // while-condition  =>  TRUE
[09:12:20.733]      // while "1"  (timeout="50000")
[09:12:20.733]      // while-condition  =>  TRUE
[09:12:20.734]      // while "1"  (timeout="50000")
[09:12:20.734]      // while-condition  =>  TRUE
[09:12:20.734]      // while "1"  (timeout="50000")
[09:12:20.734]      // while-condition  =>  TRUE
[09:12:20.735]      // while "1"  (timeout="50000")
[09:12:20.735]      // while-condition  =>  TRUE
[09:12:20.735]      // while "1"  (timeout="50000")
[09:12:20.735]      // while-condition  =>  TRUE
[09:12:20.736]      // while "1"  (timeout="50000")
[09:12:20.736]      // while-condition  =>  TRUE
[09:12:20.736]      // while "1"  (timeout="50000")
[09:12:20.736]      // while-condition  =>  TRUE
[09:12:20.737]      // while "1"  (timeout="50000")
[09:12:20.737]      // while-condition  =>  TRUE
[09:12:20.737]      // while "1"  (timeout="50000")
[09:12:20.737]      // while-condition  =>  TRUE
[09:12:20.737]      // while "1"  (timeout="50000")
[09:12:20.738]      // while-condition  =>  TRUE
[09:12:20.738]      // while "1"  (timeout="50000")
[09:12:20.738]      // while-condition  =>  TRUE
[09:12:20.738]      // while "1"  (timeout="50000")
[09:12:20.739]      // while-condition  =>  TRUE
[09:12:20.739]      // while "1"  (timeout="50000")
[09:12:20.739]      // while-condition  =>  TRUE
[09:12:20.739]      // while "1"  (timeout="50000")
[09:12:20.739]      // while-condition  =>  TRUE
[09:12:20.740]      // while "1"  (timeout="50000")
[09:12:20.740]      // while-condition  =>  TRUE
[09:12:20.740]      // while "1"  (timeout="50000")
[09:12:20.740]      // while-condition  =>  TRUE
[09:12:20.741]      // while "1"  (timeout="50000")
[09:12:20.741]      // while-condition  =>  TRUE
[09:12:20.741]      // while "1"  (timeout="50000")
[09:12:20.741]      // while-condition  =>  TRUE
[09:12:20.742]      // while "1"  (timeout="50000")
[09:12:20.742]      // while-condition  =>  TRUE
[09:12:20.742]      // while "1"  (timeout="50000")
[09:12:20.742]      // while-condition  =>  TRUE
[09:12:20.742]      // while "1"  (timeout="50000")
[09:12:20.743]      // while-condition  =>  TRUE
[09:12:20.743]      // while "1"  (timeout="50000")
[09:12:20.743]      // while-condition  =>  TRUE
[09:12:20.743]      // while "1"  (timeout="50000")
[09:12:20.744]      // while-condition  =>  TRUE
[09:12:20.744]      // while "1"  (timeout="50000")
[09:12:20.744]      // while-condition  =>  TRUE
[09:12:20.744]      // while "1"  (timeout="50000")
[09:12:20.745]      // while-condition  =>  TRUE
[09:12:20.745]      // while "1"  (timeout="50000")
[09:12:20.745]      // while-condition  =>  TRUE
[09:12:20.745]      // while "1"  (timeout="50000")
[09:12:20.746]      // while-condition  =>  TRUE
[09:12:20.746]      // while "1"  (timeout="50000")
[09:12:20.746]      // while-condition  =>  TRUE
[09:12:20.746]      // while "1"  (timeout="50000")
[09:12:20.746]      // while-condition  =>  TRUE
[09:12:20.747]      // while "1"  (timeout="50000")
[09:12:20.747]      // while-condition  =>  TRUE
[09:12:20.747]      // while "1"  (timeout="50000")
[09:12:20.747]      // while-condition  =>  TRUE
[09:12:20.748]      // while "1"  (timeout="50000")
[09:12:20.748]      // while-condition  =>  TRUE
[09:12:20.748]      // while "1"  (timeout="50000")
[09:12:20.748]      // while-condition  =>  TRUE
[09:12:20.748]      // while "1"  (timeout="50000")
[09:12:20.749]      // while-condition  =>  TRUE
[09:12:20.749]      // while "1"  (timeout="50000")
[09:12:20.749]      // while-condition  =>  TRUE
[09:12:20.749]      // while "1"  (timeout="50000")
[09:12:20.750]      // while-condition  =>  TRUE
[09:12:20.750]      // while "1"  (timeout="50000")
[09:12:20.750]      // while-condition  =>  TRUE
[09:12:20.750]      // while "1"  (timeout="50000")
[09:12:20.751]      // while-condition  =>  TRUE
[09:12:20.751]      // while "1"  (timeout="50000")
[09:12:20.751]      // while-condition  =>  TRUE
[09:12:20.751]      // while "1"  (timeout="50000")
[09:12:20.751]      // while-condition  =>  TRUE
[09:12:20.752]      // while "1"  (timeout="50000")
[09:12:20.752]      // while-condition  =>  TRUE
[09:12:20.752]      // while "1"  (timeout="50000")
[09:12:20.752]      // while-condition  =>  TRUE
[09:12:20.753]      // while "1"  (timeout="50000")
[09:12:20.753]      // while  =>  TIMEOUT
[09:12:20.753]      // end while "1"
[09:12:20.754]    </control>
[09:12:20.754]    <block atomic="false" info="">
[09:12:20.754]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:12:20.756]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:12:20.757]    </block>
[09:12:20.757]    <control if="" while="1" timeout="10000" info="">
[09:12:20.757]      // while "1"  (timeout="10000")
[09:12:20.757]      // while-condition  =>  TRUE
[09:12:20.758]      // while "1"  (timeout="10000")
[09:12:20.758]      // while-condition  =>  TRUE
[09:12:20.758]      // while "1"  (timeout="10000")
[09:12:20.758]      // while-condition  =>  TRUE
[09:12:20.759]      // while "1"  (timeout="10000")
[09:12:20.759]      // while-condition  =>  TRUE
[09:12:20.759]      // while "1"  (timeout="10000")
[09:12:20.759]      // while-condition  =>  TRUE
[09:12:20.760]      // while "1"  (timeout="10000")
[09:12:20.760]      // while-condition  =>  TRUE
[09:12:20.760]      // while "1"  (timeout="10000")
[09:12:20.760]      // while-condition  =>  TRUE
[09:12:20.760]      // while "1"  (timeout="10000")
[09:12:20.761]      // while-condition  =>  TRUE
[09:12:20.761]      // while "1"  (timeout="10000")
[09:12:20.761]      // while-condition  =>  TRUE
[09:12:20.761]      // while "1"  (timeout="10000")
[09:12:20.762]      // while-condition  =>  TRUE
[09:12:20.762]      // while "1"  (timeout="10000")
[09:12:20.762]      // while-condition  =>  TRUE
[09:12:20.762]      // while "1"  (timeout="10000")
[09:12:20.763]      // while-condition  =>  TRUE
[09:12:20.763]      // while "1"  (timeout="10000")
[09:12:20.763]      // while-condition  =>  TRUE
[09:12:20.763]      // while "1"  (timeout="10000")
[09:12:20.763]      // while-condition  =>  TRUE
[09:12:20.764]      // while "1"  (timeout="10000")
[09:12:20.764]      // while-condition  =>  TRUE
[09:12:20.764]      // while "1"  (timeout="10000")
[09:12:20.764]      // while-condition  =>  TRUE
[09:12:20.765]      // while "1"  (timeout="10000")
[09:12:20.765]      // while-condition  =>  TRUE
[09:12:20.765]      // while "1"  (timeout="10000")
[09:12:20.765]      // while-condition  =>  TRUE
[09:12:20.766]      // while "1"  (timeout="10000")
[09:12:20.766]      // while-condition  =>  TRUE
[09:12:20.766]      // while "1"  (timeout="10000")
[09:12:20.766]      // while-condition  =>  TRUE
[09:12:20.766]      // while "1"  (timeout="10000")
[09:12:20.767]      // while-condition  =>  TRUE
[09:12:20.767]      // while "1"  (timeout="10000")
[09:12:20.767]      // while-condition  =>  TRUE
[09:12:20.767]      // while "1"  (timeout="10000")
[09:12:20.768]      // while-condition  =>  TRUE
[09:12:20.768]      // while "1"  (timeout="10000")
[09:12:20.768]      // while-condition  =>  TRUE
[09:12:20.768]      // while "1"  (timeout="10000")
[09:12:20.769]      // while-condition  =>  TRUE
[09:12:20.769]      // while "1"  (timeout="10000")
[09:12:20.769]      // while  =>  TIMEOUT
[09:12:20.769]      // end while "1"
[09:12:20.770]    </control>
[09:12:20.770]    <block atomic="true" info="">
[09:12:20.774]  
[09:12:20.774]  ! W001 : No atomic sequence support in debug unit
[09:12:20.774]  
[09:12:20.776]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:12:20.778]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:12:20.778]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:12:20.780]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:12:20.780]    </block>
[09:12:20.781]    <block atomic="false" info="">
[09:12:20.781]      __errorcontrol = 0x00000001;
[09:12:20.781]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:12:20.781]      ReadDP(0x0);
[09:12:20.783]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:12:20.783]      __errorcontrol = 0x00000000;
[09:12:20.784]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:12:20.784]    </block>
[09:12:20.784]  </sequence>
[09:12:20.784]  
[09:12:20.790]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[09:12:20.790]  
[09:12:20.791]  <debugvars>
[09:12:20.791]    // Pre-defined
[09:12:20.791]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:12:20.791]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:12:20.792]    __dp=0x00000000
[09:12:20.792]    __ap=0x00000000
[09:12:20.792]    __traceout=0x00000000      (Trace Disabled)
[09:12:20.792]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:12:20.793]    __FlashAddr=0x00000000
[09:12:20.793]    __FlashLen=0x00000000
[09:12:20.793]    __FlashArg=0x00000000
[09:12:20.793]    __FlashOp=0x00000000
[09:12:20.794]    __Result=0x00000000
[09:12:20.794]  </debugvars>
[09:12:20.794]  
[09:12:20.794]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[09:12:20.795]    <block atomic="false" info="">
[09:12:20.795]    </block>
[09:12:20.795]  </sequence>
[09:12:20.795]  
[09:12:21.028]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[09:12:21.028]  
[09:12:21.029]  <debugvars>
[09:12:21.029]    // Pre-defined
[09:12:21.031]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:12:21.031]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:12:21.032]    __dp=0x00000000
[09:12:21.033]    __ap=0x00000000
[09:12:21.033]    __traceout=0x00000000      (Trace Disabled)
[09:12:21.034]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:12:21.034]    __FlashAddr=0x00000000
[09:12:21.035]    __FlashLen=0x00000000
[09:12:21.036]    __FlashArg=0x00000000
[09:12:21.036]    __FlashOp=0x00000000
[09:12:21.037]    __Result=0x00000000
[09:12:21.037]  </debugvars>
[09:12:21.038]  
[09:12:21.039]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[09:12:21.039]    <block atomic="false" info="">
[09:12:21.040]      Sequence("ResetHardware");
[09:12:21.041]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:12:21.041]          <block atomic="false" info="">
[09:12:21.042]            __var nReset      = 0x80;
[09:12:21.042]              // -> [nReset <= 0x00000080]
[09:12:21.042]            DAP_SWJ_Pins(0x00, nReset, 0);
[09:12:21.045]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:12:21.046]          </block>
[09:12:21.046]          <control if="" while="1" timeout="50000" info="">
[09:12:21.046]            // while "1"  (timeout="50000")
[09:12:21.047]            // while-condition  =>  TRUE
[09:12:21.047]            // while "1"  (timeout="50000")
[09:12:21.047]            // while-condition  =>  TRUE
[09:12:21.048]            // while "1"  (timeout="50000")
[09:12:21.048]            // while-condition  =>  TRUE
[09:12:21.049]            // while "1"  (timeout="50000")
[09:12:21.049]            // while-condition  =>  TRUE
[09:12:21.049]            // while "1"  (timeout="50000")
[09:12:21.050]            // while-condition  =>  TRUE
[09:12:21.050]            // while "1"  (timeout="50000")
[09:12:21.050]            // while-condition  =>  TRUE
[09:12:21.051]            // while "1"  (timeout="50000")
[09:12:21.052]            // while-condition  =>  TRUE
[09:12:21.052]            // while "1"  (timeout="50000")
[09:12:21.053]            // while-condition  =>  TRUE
[09:12:21.053]            // while "1"  (timeout="50000")
[09:12:21.054]            // while-condition  =>  TRUE
[09:12:21.054]            // while "1"  (timeout="50000")
[09:12:21.054]            // while-condition  =>  TRUE
[09:12:21.055]            // while "1"  (timeout="50000")
[09:12:21.055]            // while-condition  =>  TRUE
[09:12:21.055]            // while "1"  (timeout="50000")
[09:12:21.057]            // while-condition  =>  TRUE
[09:12:21.057]            // while "1"  (timeout="50000")
[09:12:21.057]            // while-condition  =>  TRUE
[09:12:21.058]            // while "1"  (timeout="50000")
[09:12:21.058]            // while-condition  =>  TRUE
[09:12:21.058]            // while "1"  (timeout="50000")
[09:12:21.058]            // while-condition  =>  TRUE
[09:12:21.058]            // while "1"  (timeout="50000")
[09:12:21.058]            // while-condition  =>  TRUE
[09:12:21.058]            // while "1"  (timeout="50000")
[09:12:21.059]            // while-condition  =>  TRUE
[09:12:21.059]            // while "1"  (timeout="50000")
[09:12:21.059]            // while-condition  =>  TRUE
[09:12:21.059]            // while "1"  (timeout="50000")
[09:12:21.060]            // while-condition  =>  TRUE
[09:12:21.060]            // while "1"  (timeout="50000")
[09:12:21.060]            // while-condition  =>  TRUE
[09:12:21.060]            // while "1"  (timeout="50000")
[09:12:21.062]            // while-condition  =>  TRUE
[09:12:21.062]            // while "1"  (timeout="50000")
[09:12:21.062]            // while-condition  =>  TRUE
[09:12:21.062]            // while "1"  (timeout="50000")
[09:12:21.063]            // while-condition  =>  TRUE
[09:12:21.063]            // while "1"  (timeout="50000")
[09:12:21.063]            // while-condition  =>  TRUE
[09:12:21.063]            // while "1"  (timeout="50000")
[09:12:21.063]            // while-condition  =>  TRUE
[09:12:21.064]            // while "1"  (timeout="50000")
[09:12:21.064]            // while-condition  =>  TRUE
[09:12:21.064]            // while "1"  (timeout="50000")
[09:12:21.064]            // while-condition  =>  TRUE
[09:12:21.064]            // while "1"  (timeout="50000")
[09:12:21.064]            // while-condition  =>  TRUE
[09:12:21.064]            // while "1"  (timeout="50000")
[09:12:21.064]            // while-condition  =>  TRUE
[09:12:21.064]            // while "1"  (timeout="50000")
[09:12:21.064]            // while-condition  =>  TRUE
[09:12:21.065]            // while "1"  (timeout="50000")
[09:12:21.065]            // while-condition  =>  TRUE
[09:12:21.065]            // while "1"  (timeout="50000")
[09:12:21.065]            // while-condition  =>  TRUE
[09:12:21.065]            // while "1"  (timeout="50000")
[09:12:21.067]            // while-condition  =>  TRUE
[09:12:21.067]            // while "1"  (timeout="50000")
[09:12:21.067]            // while-condition  =>  TRUE
[09:12:21.067]            // while "1"  (timeout="50000")
[09:12:21.067]            // while-condition  =>  TRUE
[09:12:21.067]            // while "1"  (timeout="50000")
[09:12:21.068]            // while-condition  =>  TRUE
[09:12:21.068]            // while "1"  (timeout="50000")
[09:12:21.068]            // while-condition  =>  TRUE
[09:12:21.068]            // while "1"  (timeout="50000")
[09:12:21.068]            // while-condition  =>  TRUE
[09:12:21.068]            // while "1"  (timeout="50000")
[09:12:21.068]            // while-condition  =>  TRUE
[09:12:21.068]            // while "1"  (timeout="50000")
[09:12:21.068]            // while-condition  =>  TRUE
[09:12:21.068]            // while "1"  (timeout="50000")
[09:12:21.069]            // while-condition  =>  TRUE
[09:12:21.069]            // while "1"  (timeout="50000")
[09:12:21.069]            // while-condition  =>  TRUE
[09:12:21.069]            // while "1"  (timeout="50000")
[09:12:21.069]            // while-condition  =>  TRUE
[09:12:21.071]            // while "1"  (timeout="50000")
[09:12:21.071]            // while-condition  =>  TRUE
[09:12:21.071]            // while "1"  (timeout="50000")
[09:12:21.071]            // while-condition  =>  TRUE
[09:12:21.071]            // while "1"  (timeout="50000")
[09:12:21.071]            // while-condition  =>  TRUE
[09:12:21.072]            // while "1"  (timeout="50000")
[09:12:21.072]            // while-condition  =>  TRUE
[09:12:21.072]            // while "1"  (timeout="50000")
[09:12:21.072]            // while-condition  =>  TRUE
[09:12:21.072]            // while "1"  (timeout="50000")
[09:12:21.073]            // while-condition  =>  TRUE
[09:12:21.073]            // while "1"  (timeout="50000")
[09:12:21.073]            // while-condition  =>  TRUE
[09:12:21.073]            // while "1"  (timeout="50000")
[09:12:21.073]            // while-condition  =>  TRUE
[09:12:21.074]            // while "1"  (timeout="50000")
[09:12:21.074]            // while-condition  =>  TRUE
[09:12:21.074]            // while "1"  (timeout="50000")
[09:12:21.074]            // while-condition  =>  TRUE
[09:12:21.074]            // while "1"  (timeout="50000")
[09:12:21.075]            // while-condition  =>  TRUE
[09:12:21.075]            // while "1"  (timeout="50000")
[09:12:21.075]            // while-condition  =>  TRUE
[09:12:21.075]            // while "1"  (timeout="50000")
[09:12:21.075]            // while-condition  =>  TRUE
[09:12:21.076]            // while "1"  (timeout="50000")
[09:12:21.076]            // while-condition  =>  TRUE
[09:12:21.076]            // while "1"  (timeout="50000")
[09:12:21.076]            // while-condition  =>  TRUE
[09:12:21.076]            // while "1"  (timeout="50000")
[09:12:21.076]            // while-condition  =>  TRUE
[09:12:21.077]            // while "1"  (timeout="50000")
[09:12:21.077]            // while-condition  =>  TRUE
[09:12:21.077]            // while "1"  (timeout="50000")
[09:12:21.077]            // while-condition  =>  TRUE
[09:12:21.078]            // while "1"  (timeout="50000")
[09:12:21.078]            // while-condition  =>  TRUE
[09:12:21.078]            // while "1"  (timeout="50000")
[09:12:21.078]            // while-condition  =>  TRUE
[09:12:21.078]            // while "1"  (timeout="50000")
[09:12:21.079]            // while-condition  =>  TRUE
[09:12:21.079]            // while "1"  (timeout="50000")
[09:12:21.079]            // while-condition  =>  TRUE
[09:12:21.079]            // while "1"  (timeout="50000")
[09:12:21.079]            // while-condition  =>  TRUE
[09:12:21.079]            // while "1"  (timeout="50000")
[09:12:21.080]            // while-condition  =>  TRUE
[09:12:21.080]            // while "1"  (timeout="50000")
[09:12:21.080]            // while-condition  =>  TRUE
[09:12:21.080]            // while "1"  (timeout="50000")
[09:12:21.080]            // while-condition  =>  TRUE
[09:12:21.081]            // while "1"  (timeout="50000")
[09:12:21.081]            // while-condition  =>  TRUE
[09:12:21.081]            // while "1"  (timeout="50000")
[09:12:21.081]            // while-condition  =>  TRUE
[09:12:21.081]            // while "1"  (timeout="50000")
[09:12:21.082]            // while-condition  =>  TRUE
[09:12:21.082]            // while "1"  (timeout="50000")
[09:12:21.082]            // while-condition  =>  TRUE
[09:12:21.082]            // while "1"  (timeout="50000")
[09:12:21.082]            // while-condition  =>  TRUE
[09:12:21.083]            // while "1"  (timeout="50000")
[09:12:21.083]            // while-condition  =>  TRUE
[09:12:21.083]            // while "1"  (timeout="50000")
[09:12:21.083]            // while-condition  =>  TRUE
[09:12:21.083]            // while "1"  (timeout="50000")
[09:12:21.084]            // while-condition  =>  TRUE
[09:12:21.084]            // while "1"  (timeout="50000")
[09:12:21.084]            // while-condition  =>  TRUE
[09:12:21.084]            // while "1"  (timeout="50000")
[09:12:21.084]            // while-condition  =>  TRUE
[09:12:21.085]            // while "1"  (timeout="50000")
[09:12:21.085]            // while-condition  =>  TRUE
[09:12:21.085]            // while "1"  (timeout="50000")
[09:12:21.085]            // while-condition  =>  TRUE
[09:12:21.086]            // while "1"  (timeout="50000")
[09:12:21.086]            // while-condition  =>  TRUE
[09:12:21.086]            // while "1"  (timeout="50000")
[09:12:21.086]            // while-condition  =>  TRUE
[09:12:21.086]            // while "1"  (timeout="50000")
[09:12:21.087]            // while-condition  =>  TRUE
[09:12:21.087]            // while "1"  (timeout="50000")
[09:12:21.087]            // while-condition  =>  TRUE
[09:12:21.087]            // while "1"  (timeout="50000")
[09:12:21.087]            // while-condition  =>  TRUE
[09:12:21.088]            // while "1"  (timeout="50000")
[09:12:21.088]            // while-condition  =>  TRUE
[09:12:21.088]            // while "1"  (timeout="50000")
[09:12:21.088]            // while-condition  =>  TRUE
[09:12:21.088]            // while "1"  (timeout="50000")
[09:12:21.088]            // while-condition  =>  TRUE
[09:12:21.088]            // while "1"  (timeout="50000")
[09:12:21.088]            // while-condition  =>  TRUE
[09:12:21.088]            // while "1"  (timeout="50000")
[09:12:21.088]            // while-condition  =>  TRUE
[09:12:21.090]            // while "1"  (timeout="50000")
[09:12:21.090]            // while-condition  =>  TRUE
[09:12:21.090]            // while "1"  (timeout="50000")
[09:12:21.090]            // while-condition  =>  TRUE
[09:12:21.090]            // while "1"  (timeout="50000")
[09:12:21.091]            // while-condition  =>  TRUE
[09:12:21.091]            // while "1"  (timeout="50000")
[09:12:21.091]            // while-condition  =>  TRUE
[09:12:21.091]            // while "1"  (timeout="50000")
[09:12:21.091]            // while-condition  =>  TRUE
[09:12:21.091]            // while "1"  (timeout="50000")
[09:12:21.092]            // while-condition  =>  TRUE
[09:12:21.092]            // while "1"  (timeout="50000")
[09:12:21.092]            // while-condition  =>  TRUE
[09:12:21.092]            // while "1"  (timeout="50000")
[09:12:21.092]            // while-condition  =>  TRUE
[09:12:21.093]            // while "1"  (timeout="50000")
[09:12:21.093]            // while-condition  =>  TRUE
[09:12:21.093]            // while "1"  (timeout="50000")
[09:12:21.093]            // while-condition  =>  TRUE
[09:12:21.094]            // while "1"  (timeout="50000")
[09:12:21.094]            // while-condition  =>  TRUE
[09:12:21.094]            // while "1"  (timeout="50000")
[09:12:21.094]            // while-condition  =>  TRUE
[09:12:21.094]            // while "1"  (timeout="50000")
[09:12:21.095]            // while-condition  =>  TRUE
[09:12:21.095]            // while "1"  (timeout="50000")
[09:12:21.095]            // while-condition  =>  TRUE
[09:12:21.095]            // while "1"  (timeout="50000")
[09:12:21.095]            // while-condition  =>  TRUE
[09:12:21.096]            // while "1"  (timeout="50000")
[09:12:21.096]            // while-condition  =>  TRUE
[09:12:21.096]            // while "1"  (timeout="50000")
[09:12:21.096]            // while-condition  =>  TRUE
[09:12:21.096]            // while "1"  (timeout="50000")
[09:12:21.097]            // while-condition  =>  TRUE
[09:12:21.097]            // while "1"  (timeout="50000")
[09:12:21.097]            // while  =>  TIMEOUT
[09:12:21.097]            // end while "1"
[09:12:21.097]          </control>
[09:12:21.098]          <block atomic="false" info="">
[09:12:21.098]            DAP_SWJ_Pins(nReset, nReset, 0);
[09:12:21.099]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:12:21.100]          </block>
[09:12:21.100]          <control if="" while="1" timeout="10000" info="">
[09:12:21.100]            // while "1"  (timeout="10000")
[09:12:21.100]            // while-condition  =>  TRUE
[09:12:21.100]            // while "1"  (timeout="10000")
[09:12:21.101]            // while-condition  =>  TRUE
[09:12:21.101]            // while "1"  (timeout="10000")
[09:12:21.101]            // while-condition  =>  TRUE
[09:12:21.101]            // while "1"  (timeout="10000")
[09:12:21.101]            // while-condition  =>  TRUE
[09:12:21.101]            // while "1"  (timeout="10000")
[09:12:21.102]            // while-condition  =>  TRUE
[09:12:21.102]            // while "1"  (timeout="10000")
[09:12:21.102]            // while-condition  =>  TRUE
[09:12:21.102]            // while "1"  (timeout="10000")
[09:12:21.102]            // while-condition  =>  TRUE
[09:12:21.103]            // while "1"  (timeout="10000")
[09:12:21.103]            // while-condition  =>  TRUE
[09:12:21.103]            // while "1"  (timeout="10000")
[09:12:21.103]            // while-condition  =>  TRUE
[09:12:21.103]            // while "1"  (timeout="10000")
[09:12:21.104]            // while-condition  =>  TRUE
[09:12:21.104]            // while "1"  (timeout="10000")
[09:12:21.104]            // while-condition  =>  TRUE
[09:12:21.104]            // while "1"  (timeout="10000")
[09:12:21.104]            // while-condition  =>  TRUE
[09:12:21.105]            // while "1"  (timeout="10000")
[09:12:21.105]            // while-condition  =>  TRUE
[09:12:21.105]            // while "1"  (timeout="10000")
[09:12:21.105]            // while-condition  =>  TRUE
[09:12:21.105]            // while "1"  (timeout="10000")
[09:12:21.105]            // while-condition  =>  TRUE
[09:12:21.105]            // while "1"  (timeout="10000")
[09:12:21.105]            // while-condition  =>  TRUE
[09:12:21.105]            // while "1"  (timeout="10000")
[09:12:21.105]            // while-condition  =>  TRUE
[09:12:21.106]            // while "1"  (timeout="10000")
[09:12:21.106]            // while-condition  =>  TRUE
[09:12:21.106]            // while "1"  (timeout="10000")
[09:12:21.106]            // while-condition  =>  TRUE
[09:12:21.106]            // while "1"  (timeout="10000")
[09:12:21.107]            // while-condition  =>  TRUE
[09:12:21.107]            // while "1"  (timeout="10000")
[09:12:21.107]            // while-condition  =>  TRUE
[09:12:21.107]            // while "1"  (timeout="10000")
[09:12:21.107]            // while-condition  =>  TRUE
[09:12:21.108]            // while "1"  (timeout="10000")
[09:12:21.108]            // while-condition  =>  TRUE
[09:12:21.108]            // while "1"  (timeout="10000")
[09:12:21.108]            // while-condition  =>  TRUE
[09:12:21.108]            // while "1"  (timeout="10000")
[09:12:21.109]            // while-condition  =>  TRUE
[09:12:21.109]            // while "1"  (timeout="10000")
[09:12:21.109]            // while-condition  =>  TRUE
[09:12:21.109]            // while "1"  (timeout="10000")
[09:12:21.109]            // while-condition  =>  TRUE
[09:12:21.111]            // while "1"  (timeout="10000")
[09:12:21.111]            // while-condition  =>  TRUE
[09:12:21.111]            // while "1"  (timeout="10000")
[09:12:21.111]            // while-condition  =>  TRUE
[09:12:21.111]            // while "1"  (timeout="10000")
[09:12:21.112]            // while-condition  =>  TRUE
[09:12:21.112]            // while "1"  (timeout="10000")
[09:12:21.112]            // while-condition  =>  TRUE
[09:12:21.112]            // while "1"  (timeout="10000")
[09:12:21.112]            // while  =>  TIMEOUT
[09:12:21.113]            // end while "1"
[09:12:21.113]          </control>
[09:12:21.113]          <block atomic="true" info="">
[09:12:21.116]  
[09:12:21.116]  ! W001 : No atomic sequence support in debug unit
[09:12:21.116]  
[09:12:21.117]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:12:21.120]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:12:21.121]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:12:21.124]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:12:21.124]          </block>
[09:12:21.125]          <block atomic="false" info="">
[09:12:21.125]            __errorcontrol = 0x00000001;
[09:12:21.125]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:12:21.125]            ReadDP(0x0);
[09:12:21.127]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:12:21.128]            __errorcontrol = 0x00000000;
[09:12:21.129]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:12:21.130]          </block>
[09:12:21.131]        </sequence>
[09:12:21.131]      Sequence("DebugPortSetup");
[09:12:21.131]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:12:21.132]        </sequence>
[09:12:21.132]      Sequence("DebugPortStart");
[09:12:21.133]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:12:21.133]          <block atomic="false" info="">
[09:12:21.134]            __var SW_DP_ABORT  = 0x0;
[09:12:21.134]              // -> [SW_DP_ABORT <= 0x00000000]
[09:12:21.135]            __var DP_CTRL_STAT = 0x4;
[09:12:21.135]              // -> [DP_CTRL_STAT <= 0x00000004]
[09:12:21.135]            __var DP_SELECT    = 0x8;
[09:12:21.136]              // -> [DP_SELECT <= 0x00000008]
[09:12:21.136]            __var powered_down = 0;
[09:12:21.136]              // -> [powered_down <= 0x00000000]
[09:12:21.137]            WriteDP(DP_SELECT, 0x00000000);
[09:12:21.138]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:12:21.138]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:12:21.141]              // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:12:21.142]              // -> [powered_down <= 0x00000000]
[09:12:21.142]          </block>
[09:12:21.142]          <control if="powered_down" while="" timeout="0" info="">
[09:12:21.143]            // if-block "powered_down"
[09:12:21.144]              // =>  FALSE
[09:12:21.144]            // skip if-block "powered_down"
[09:12:21.145]          </control>
[09:12:21.146]        </sequence>
[09:12:21.146]      Sequence("DebugCoreStart");
[09:12:21.147]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:12:21.147]          <block atomic="true" info="">
[09:12:21.151]  
[09:12:21.151]  ! W001 : No atomic sequence support in debug unit
[09:12:21.151]  
[09:12:21.152]            __var DP_R_IDCODE    = 0x0;
[09:12:21.159]              // -> [DP_R_IDCODE <= 0x00000000]
[09:12:21.159]            __var DP_W_ABORT    = 0x0;
[09:12:21.160]              // -> [DP_W_ABORT <= 0x00000000]
[09:12:21.160]            __var DP_CTRLSTAT = 0x4;
[09:12:21.161]              // -> [DP_CTRLSTAT <= 0x00000004]
[09:12:21.162]            __var DP_W_SELECT    = 0x8;
[09:12:21.162]              // -> [DP_W_SELECT <= 0x00000008]
[09:12:21.163]            __var AP_TAR		= 0x4;
[09:12:21.163]              // -> [AP_TAR <= 0x00000004]
[09:12:21.164]            __var AP_BD0		= 0x0;
[09:12:21.164]              // -> [AP_BD0 <= 0x00000000]
[09:12:21.165]            __var AP_BD1		= 0x4;
[09:12:21.165]              // -> [AP_BD1 <= 0x00000004]
[09:12:21.166]            __var AP_BD2		= 0x8;
[09:12:21.166]              // -> [AP_BD2 <= 0x00000008]
[09:12:21.167]            __var PCWithinFlash = 0;
[09:12:21.167]              // -> [PCWithinFlash <= 0x00000000]
[09:12:21.167]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:12:21.173]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.176]          </block>
[09:12:21.177]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:12:21.177]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:12:21.184]              // -> [Read32(0xE000EDF0) => 0x00030003]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.185]            // while-condition  =>  FALSE
[09:12:21.193]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:12:21.193]          </control>
[09:12:21.194]          <block atomic="true" info="">
[09:12:21.198]  
[09:12:21.198]  ! W001 : No atomic sequence support in debug unit
[09:12:21.198]  
[09:12:21.201]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:12:21.211]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:12:21.211]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:12:21.214]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.214]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:12:21.217]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:12:21.218]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:12:21.223]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.223]          </block>
[09:12:21.225]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:12:21.227]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.229]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.229]            // while-condition  =>  TRUE
[09:12:21.230]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.233]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.234]            // while-condition  =>  TRUE
[09:12:21.235]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.237]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.238]            // while-condition  =>  TRUE
[09:12:21.239]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.241]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.242]            // while-condition  =>  TRUE
[09:12:21.243]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.245]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.246]            // while-condition  =>  TRUE
[09:12:21.247]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.249]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.249]            // while-condition  =>  TRUE
[09:12:21.250]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.252]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.253]            // while-condition  =>  TRUE
[09:12:21.253]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.255]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.257]            // while-condition  =>  TRUE
[09:12:21.257]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.259]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.259]            // while-condition  =>  TRUE
[09:12:21.259]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.262]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.263]            // while-condition  =>  TRUE
[09:12:21.263]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.265]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.265]            // while-condition  =>  TRUE
[09:12:21.265]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.268]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.269]            // while-condition  =>  TRUE
[09:12:21.269]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.271]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.272]            // while-condition  =>  TRUE
[09:12:21.272]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.274]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.275]            // while-condition  =>  TRUE
[09:12:21.275]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.277]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.278]            // while-condition  =>  TRUE
[09:12:21.278]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.280]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.281]            // while-condition  =>  TRUE
[09:12:21.281]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.284]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.285]            // while-condition  =>  TRUE
[09:12:21.286]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.288]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.289]            // while-condition  =>  TRUE
[09:12:21.289]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.291]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.292]            // while-condition  =>  TRUE
[09:12:21.293]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.295]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.296]            // while-condition  =>  TRUE
[09:12:21.296]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.299]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.300]            // while-condition  =>  TRUE
[09:12:21.301]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.303]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.304]            // while-condition  =>  TRUE
[09:12:21.304]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.306]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.307]            // while-condition  =>  TRUE
[09:12:21.307]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.309]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.311]            // while-condition  =>  TRUE
[09:12:21.311]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.314]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.315]            // while-condition  =>  TRUE
[09:12:21.316]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.318]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.319]            // while-condition  =>  TRUE
[09:12:21.319]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.321]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.322]            // while-condition  =>  TRUE
[09:12:21.322]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.325]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.325]            // while-condition  =>  TRUE
[09:12:21.325]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.327]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.328]            // while-condition  =>  TRUE
[09:12:21.328]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.331]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.331]            // while-condition  =>  TRUE
[09:12:21.332]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:21.333]            // while  =>  TIMEOUT
[09:12:21.333]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:12:21.334]          </control>
[09:12:21.334]          <block atomic="false" info="">
[09:12:21.334]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:12:21.337]              // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:12:21.338]              // -> [PCWithinFlash <= 0x00000000]
[09:12:21.339]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:12:21.341]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:12:21.342]          </block>
[09:12:21.342]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:12:21.343]            // if-block "PCWithinFlash == 0"
[09:12:21.343]              // =>  TRUE
[09:12:21.344]            // end if-block "PCWithinFlash == 0"
[09:12:21.345]          </control>
[09:12:21.345]        </sequence>
[09:12:21.345]    </block>
[09:12:21.345]  </sequence>
[09:12:21.345]  
[09:12:24.323]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[09:12:24.323]  
[09:12:24.324]  <debugvars>
[09:12:24.324]    // Pre-defined
[09:12:24.325]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:12:24.325]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:12:24.325]    __dp=0x00000000
[09:12:24.326]    __ap=0x00000000
[09:12:24.326]    __traceout=0x00000000      (Trace Disabled)
[09:12:24.327]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:12:24.328]    __FlashAddr=0x00000000
[09:12:24.328]    __FlashLen=0x00000000
[09:12:24.328]    __FlashArg=0x00000000
[09:12:24.329]    __FlashOp=0x00000000
[09:12:24.329]    __Result=0x00000000
[09:12:24.331]  </debugvars>
[09:12:24.331]  
[09:12:24.331]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[09:12:24.331]    <block atomic="false" info="">
[09:12:24.332]      __var nReset      = 0x80;
[09:12:24.332]        // -> [nReset <= 0x00000080]
[09:12:24.333]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:12:24.336]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:12:24.337]    </block>
[09:12:24.337]    <control if="" while="1" timeout="50000" info="">
[09:12:24.338]      // while "1"  (timeout="50000")
[09:12:24.338]      // while-condition  =>  TRUE
[09:12:24.338]      // while "1"  (timeout="50000")
[09:12:24.338]      // while-condition  =>  TRUE
[09:12:24.339]      // while "1"  (timeout="50000")
[09:12:24.339]      // while-condition  =>  TRUE
[09:12:24.339]      // while "1"  (timeout="50000")
[09:12:24.339]      // while-condition  =>  TRUE
[09:12:24.340]      // while "1"  (timeout="50000")
[09:12:24.340]      // while-condition  =>  TRUE
[09:12:24.340]      // while "1"  (timeout="50000")
[09:12:24.340]      // while-condition  =>  TRUE
[09:12:24.341]      // while "1"  (timeout="50000")
[09:12:24.341]      // while-condition  =>  TRUE
[09:12:24.341]      // while "1"  (timeout="50000")
[09:12:24.341]      // while-condition  =>  TRUE
[09:12:24.342]      // while "1"  (timeout="50000")
[09:12:24.342]      // while-condition  =>  TRUE
[09:12:24.342]      // while "1"  (timeout="50000")
[09:12:24.342]      // while-condition  =>  TRUE
[09:12:24.343]      // while "1"  (timeout="50000")
[09:12:24.343]      // while-condition  =>  TRUE
[09:12:24.343]      // while "1"  (timeout="50000")
[09:12:24.343]      // while-condition  =>  TRUE
[09:12:24.344]      // while "1"  (timeout="50000")
[09:12:24.344]      // while-condition  =>  TRUE
[09:12:24.344]      // while "1"  (timeout="50000")
[09:12:24.345]      // while-condition  =>  TRUE
[09:12:24.345]      // while "1"  (timeout="50000")
[09:12:24.346]      // while-condition  =>  TRUE
[09:12:24.346]      // while "1"  (timeout="50000")
[09:12:24.346]      // while-condition  =>  TRUE
[09:12:24.346]      // while "1"  (timeout="50000")
[09:12:24.346]      // while-condition  =>  TRUE
[09:12:24.347]      // while "1"  (timeout="50000")
[09:12:24.347]      // while-condition  =>  TRUE
[09:12:24.347]      // while "1"  (timeout="50000")
[09:12:24.347]      // while-condition  =>  TRUE
[09:12:24.348]      // while "1"  (timeout="50000")
[09:12:24.348]      // while-condition  =>  TRUE
[09:12:24.348]      // while "1"  (timeout="50000")
[09:12:24.348]      // while-condition  =>  TRUE
[09:12:24.348]      // while "1"  (timeout="50000")
[09:12:24.349]      // while-condition  =>  TRUE
[09:12:24.349]      // while "1"  (timeout="50000")
[09:12:24.349]      // while-condition  =>  TRUE
[09:12:24.349]      // while "1"  (timeout="50000")
[09:12:24.349]      // while-condition  =>  TRUE
[09:12:24.349]      // while "1"  (timeout="50000")
[09:12:24.349]      // while-condition  =>  TRUE
[09:12:24.350]      // while "1"  (timeout="50000")
[09:12:24.350]      // while-condition  =>  TRUE
[09:12:24.350]      // while "1"  (timeout="50000")
[09:12:24.350]      // while-condition  =>  TRUE
[09:12:24.350]      // while "1"  (timeout="50000")
[09:12:24.351]      // while-condition  =>  TRUE
[09:12:24.351]      // while "1"  (timeout="50000")
[09:12:24.352]      // while-condition  =>  TRUE
[09:12:24.353]      // while "1"  (timeout="50000")
[09:12:24.353]      // while-condition  =>  TRUE
[09:12:24.353]      // while "1"  (timeout="50000")
[09:12:24.353]      // while-condition  =>  TRUE
[09:12:24.353]      // while "1"  (timeout="50000")
[09:12:24.354]      // while-condition  =>  TRUE
[09:12:24.354]      // while "1"  (timeout="50000")
[09:12:24.354]      // while-condition  =>  TRUE
[09:12:24.354]      // while "1"  (timeout="50000")
[09:12:24.354]      // while-condition  =>  TRUE
[09:12:24.354]      // while "1"  (timeout="50000")
[09:12:24.354]      // while-condition  =>  TRUE
[09:12:24.355]      // while "1"  (timeout="50000")
[09:12:24.355]      // while-condition  =>  TRUE
[09:12:24.355]      // while "1"  (timeout="50000")
[09:12:24.356]      // while-condition  =>  TRUE
[09:12:24.356]      // while "1"  (timeout="50000")
[09:12:24.356]      // while-condition  =>  TRUE
[09:12:24.356]      // while "1"  (timeout="50000")
[09:12:24.356]      // while-condition  =>  TRUE
[09:12:24.357]      // while "1"  (timeout="50000")
[09:12:24.357]      // while-condition  =>  TRUE
[09:12:24.357]      // while "1"  (timeout="50000")
[09:12:24.357]      // while-condition  =>  TRUE
[09:12:24.357]      // while "1"  (timeout="50000")
[09:12:24.357]      // while-condition  =>  TRUE
[09:12:24.358]      // while "1"  (timeout="50000")
[09:12:24.358]      // while-condition  =>  TRUE
[09:12:24.358]      // while "1"  (timeout="50000")
[09:12:24.358]      // while-condition  =>  TRUE
[09:12:24.358]      // while "1"  (timeout="50000")
[09:12:24.358]      // while-condition  =>  TRUE
[09:12:24.358]      // while "1"  (timeout="50000")
[09:12:24.359]      // while-condition  =>  TRUE
[09:12:24.359]      // while "1"  (timeout="50000")
[09:12:24.359]      // while-condition  =>  TRUE
[09:12:24.359]      // while "1"  (timeout="50000")
[09:12:24.360]      // while-condition  =>  TRUE
[09:12:24.360]      // while "1"  (timeout="50000")
[09:12:24.360]      // while-condition  =>  TRUE
[09:12:24.360]      // while "1"  (timeout="50000")
[09:12:24.361]      // while-condition  =>  TRUE
[09:12:24.361]      // while "1"  (timeout="50000")
[09:12:24.361]      // while-condition  =>  TRUE
[09:12:24.362]      // while "1"  (timeout="50000")
[09:12:24.362]      // while-condition  =>  TRUE
[09:12:24.362]      // while "1"  (timeout="50000")
[09:12:24.363]      // while-condition  =>  TRUE
[09:12:24.363]      // while "1"  (timeout="50000")
[09:12:24.363]      // while-condition  =>  TRUE
[09:12:24.363]      // while "1"  (timeout="50000")
[09:12:24.364]      // while-condition  =>  TRUE
[09:12:24.364]      // while "1"  (timeout="50000")
[09:12:24.364]      // while-condition  =>  TRUE
[09:12:24.364]      // while "1"  (timeout="50000")
[09:12:24.364]      // while-condition  =>  TRUE
[09:12:24.365]      // while "1"  (timeout="50000")
[09:12:24.365]      // while-condition  =>  TRUE
[09:12:24.365]      // while "1"  (timeout="50000")
[09:12:24.365]      // while-condition  =>  TRUE
[09:12:24.365]      // while "1"  (timeout="50000")
[09:12:24.366]      // while-condition  =>  TRUE
[09:12:24.366]      // while "1"  (timeout="50000")
[09:12:24.366]      // while-condition  =>  TRUE
[09:12:24.366]      // while "1"  (timeout="50000")
[09:12:24.366]      // while-condition  =>  TRUE
[09:12:24.367]      // while "1"  (timeout="50000")
[09:12:24.367]      // while-condition  =>  TRUE
[09:12:24.367]      // while "1"  (timeout="50000")
[09:12:24.367]      // while-condition  =>  TRUE
[09:12:24.368]      // while "1"  (timeout="50000")
[09:12:24.368]      // while-condition  =>  TRUE
[09:12:24.368]      // while "1"  (timeout="50000")
[09:12:24.368]      // while-condition  =>  TRUE
[09:12:24.368]      // while "1"  (timeout="50000")
[09:12:24.369]      // while-condition  =>  TRUE
[09:12:24.369]      // while "1"  (timeout="50000")
[09:12:24.369]      // while-condition  =>  TRUE
[09:12:24.369]      // while "1"  (timeout="50000")
[09:12:24.369]      // while-condition  =>  TRUE
[09:12:24.370]      // while "1"  (timeout="50000")
[09:12:24.370]      // while-condition  =>  TRUE
[09:12:24.370]      // while "1"  (timeout="50000")
[09:12:24.370]      // while-condition  =>  TRUE
[09:12:24.370]      // while "1"  (timeout="50000")
[09:12:24.371]      // while-condition  =>  TRUE
[09:12:24.371]      // while "1"  (timeout="50000")
[09:12:24.371]      // while-condition  =>  TRUE
[09:12:24.372]      // while "1"  (timeout="50000")
[09:12:24.372]      // while-condition  =>  TRUE
[09:12:24.372]      // while "1"  (timeout="50000")
[09:12:24.372]      // while-condition  =>  TRUE
[09:12:24.372]      // while "1"  (timeout="50000")
[09:12:24.373]      // while-condition  =>  TRUE
[09:12:24.373]      // while "1"  (timeout="50000")
[09:12:24.373]      // while-condition  =>  TRUE
[09:12:24.373]      // while "1"  (timeout="50000")
[09:12:24.373]      // while-condition  =>  TRUE
[09:12:24.374]      // while "1"  (timeout="50000")
[09:12:24.374]      // while-condition  =>  TRUE
[09:12:24.374]      // while "1"  (timeout="50000")
[09:12:24.374]      // while-condition  =>  TRUE
[09:12:24.374]      // while "1"  (timeout="50000")
[09:12:24.374]      // while-condition  =>  TRUE
[09:12:24.375]      // while "1"  (timeout="50000")
[09:12:24.375]      // while-condition  =>  TRUE
[09:12:24.375]      // while "1"  (timeout="50000")
[09:12:24.375]      // while-condition  =>  TRUE
[09:12:24.375]      // while "1"  (timeout="50000")
[09:12:24.376]      // while-condition  =>  TRUE
[09:12:24.376]      // while "1"  (timeout="50000")
[09:12:24.376]      // while-condition  =>  TRUE
[09:12:24.376]      // while "1"  (timeout="50000")
[09:12:24.376]      // while-condition  =>  TRUE
[09:12:24.377]      // while "1"  (timeout="50000")
[09:12:24.377]      // while-condition  =>  TRUE
[09:12:24.377]      // while "1"  (timeout="50000")
[09:12:24.377]      // while-condition  =>  TRUE
[09:12:24.378]      // while "1"  (timeout="50000")
[09:12:24.379]      // while-condition  =>  TRUE
[09:12:24.379]      // while "1"  (timeout="50000")
[09:12:24.379]      // while-condition  =>  TRUE
[09:12:24.379]      // while "1"  (timeout="50000")
[09:12:24.379]      // while-condition  =>  TRUE
[09:12:24.379]      // while "1"  (timeout="50000")
[09:12:24.380]      // while-condition  =>  TRUE
[09:12:24.380]      // while "1"  (timeout="50000")
[09:12:24.380]      // while-condition  =>  TRUE
[09:12:24.380]      // while "1"  (timeout="50000")
[09:12:24.380]      // while-condition  =>  TRUE
[09:12:24.381]      // while "1"  (timeout="50000")
[09:12:24.381]      // while-condition  =>  TRUE
[09:12:24.381]      // while "1"  (timeout="50000")
[09:12:24.381]      // while-condition  =>  TRUE
[09:12:24.382]      // while "1"  (timeout="50000")
[09:12:24.382]      // while-condition  =>  TRUE
[09:12:24.383]      // while "1"  (timeout="50000")
[09:12:24.383]      // while-condition  =>  TRUE
[09:12:24.384]      // while "1"  (timeout="50000")
[09:12:24.384]      // while-condition  =>  TRUE
[09:12:24.384]      // while "1"  (timeout="50000")
[09:12:24.384]      // while-condition  =>  TRUE
[09:12:24.384]      // while "1"  (timeout="50000")
[09:12:24.384]      // while-condition  =>  TRUE
[09:12:24.385]      // while "1"  (timeout="50000")
[09:12:24.385]      // while-condition  =>  TRUE
[09:12:24.385]      // while "1"  (timeout="50000")
[09:12:24.385]      // while-condition  =>  TRUE
[09:12:24.385]      // while "1"  (timeout="50000")
[09:12:24.385]      // while-condition  =>  TRUE
[09:12:24.386]      // while "1"  (timeout="50000")
[09:12:24.386]      // while-condition  =>  TRUE
[09:12:24.386]      // while "1"  (timeout="50000")
[09:12:24.387]      // while-condition  =>  TRUE
[09:12:24.387]      // while "1"  (timeout="50000")
[09:12:24.387]      // while-condition  =>  TRUE
[09:12:24.387]      // while "1"  (timeout="50000")
[09:12:24.388]      // while-condition  =>  TRUE
[09:12:24.388]      // while "1"  (timeout="50000")
[09:12:24.388]      // while-condition  =>  TRUE
[09:12:24.388]      // while "1"  (timeout="50000")
[09:12:24.388]      // while-condition  =>  TRUE
[09:12:24.389]      // while "1"  (timeout="50000")
[09:12:24.389]      // while-condition  =>  TRUE
[09:12:24.389]      // while "1"  (timeout="50000")
[09:12:24.389]      // while-condition  =>  TRUE
[09:12:24.389]      // while "1"  (timeout="50000")
[09:12:24.389]      // while-condition  =>  TRUE
[09:12:24.389]      // while "1"  (timeout="50000")
[09:12:24.389]      // while-condition  =>  TRUE
[09:12:24.390]      // while "1"  (timeout="50000")
[09:12:24.390]      // while-condition  =>  TRUE
[09:12:24.390]      // while "1"  (timeout="50000")
[09:12:24.390]      // while-condition  =>  TRUE
[09:12:24.390]      // while "1"  (timeout="50000")
[09:12:24.391]      // while-condition  =>  TRUE
[09:12:24.391]      // while "1"  (timeout="50000")
[09:12:24.391]      // while-condition  =>  TRUE
[09:12:24.391]      // while "1"  (timeout="50000")
[09:12:24.391]      // while-condition  =>  TRUE
[09:12:24.392]      // while "1"  (timeout="50000")
[09:12:24.392]      // while-condition  =>  TRUE
[09:12:24.392]      // while "1"  (timeout="50000")
[09:12:24.392]      // while-condition  =>  TRUE
[09:12:24.393]      // while "1"  (timeout="50000")
[09:12:24.393]      // while-condition  =>  TRUE
[09:12:24.393]      // while "1"  (timeout="50000")
[09:12:24.394]      // while-condition  =>  TRUE
[09:12:24.395]      // while "1"  (timeout="50000")
[09:12:24.395]      // while  =>  TIMEOUT
[09:12:24.395]      // end while "1"
[09:12:24.395]    </control>
[09:12:24.395]    <block atomic="false" info="">
[09:12:24.395]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:12:24.398]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:12:24.399]    </block>
[09:12:24.399]  </sequence>
[09:12:24.399]  
[09:12:28.064]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:12:28.064]  
[09:12:28.118]  <debugvars>
[09:12:28.119]    // Pre-defined
[09:12:28.119]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:12:28.119]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:12:28.120]    __dp=0x00000000
[09:12:28.120]    __ap=0x00000000
[09:12:28.120]    __traceout=0x00000000      (Trace Disabled)
[09:12:28.120]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:12:28.121]    __FlashAddr=0x00000000
[09:12:28.121]    __FlashLen=0x00000000
[09:12:28.121]    __FlashArg=0x00000000
[09:12:28.122]    __FlashOp=0x00000000
[09:12:28.122]    __Result=0x00000000
[09:12:28.123]  </debugvars>
[09:12:28.123]  
[09:12:28.123]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:12:28.124]    <block atomic="false" info="">
[09:12:28.124]      __var nReset      = 0x80;
[09:12:28.125]        // -> [nReset <= 0x00000080]
[09:12:28.125]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:12:28.127]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:12:28.128]    </block>
[09:12:28.128]    <control if="" while="1" timeout="50000" info="">
[09:12:28.129]      // while "1"  (timeout="50000")
[09:12:28.129]      // while-condition  =>  TRUE
[09:12:28.129]      // while "1"  (timeout="50000")
[09:12:28.130]      // while-condition  =>  TRUE
[09:12:28.130]      // while "1"  (timeout="50000")
[09:12:28.130]      // while-condition  =>  TRUE
[09:12:28.131]      // while "1"  (timeout="50000")
[09:12:28.131]      // while-condition  =>  TRUE
[09:12:28.131]      // while "1"  (timeout="50000")
[09:12:28.132]      // while-condition  =>  TRUE
[09:12:28.132]      // while "1"  (timeout="50000")
[09:12:28.132]      // while-condition  =>  TRUE
[09:12:28.133]      // while "1"  (timeout="50000")
[09:12:28.133]      // while-condition  =>  TRUE
[09:12:28.133]      // while "1"  (timeout="50000")
[09:12:28.134]      // while-condition  =>  TRUE
[09:12:28.134]      // while "1"  (timeout="50000")
[09:12:28.134]      // while-condition  =>  TRUE
[09:12:28.135]      // while "1"  (timeout="50000")
[09:12:28.135]      // while-condition  =>  TRUE
[09:12:28.135]      // while "1"  (timeout="50000")
[09:12:28.136]      // while-condition  =>  TRUE
[09:12:28.136]      // while "1"  (timeout="50000")
[09:12:28.136]      // while-condition  =>  TRUE
[09:12:28.136]      // while "1"  (timeout="50000")
[09:12:28.137]      // while-condition  =>  TRUE
[09:12:28.137]      // while "1"  (timeout="50000")
[09:12:28.137]      // while-condition  =>  TRUE
[09:12:28.139]      // while "1"  (timeout="50000")
[09:12:28.139]      // while-condition  =>  TRUE
[09:12:28.139]      // while "1"  (timeout="50000")
[09:12:28.139]      // while-condition  =>  TRUE
[09:12:28.140]      // while "1"  (timeout="50000")
[09:12:28.140]      // while-condition  =>  TRUE
[09:12:28.140]      // while "1"  (timeout="50000")
[09:12:28.141]      // while-condition  =>  TRUE
[09:12:28.141]      // while "1"  (timeout="50000")
[09:12:28.141]      // while-condition  =>  TRUE
[09:12:28.141]      // while "1"  (timeout="50000")
[09:12:28.142]      // while-condition  =>  TRUE
[09:12:28.142]      // while "1"  (timeout="50000")
[09:12:28.142]      // while-condition  =>  TRUE
[09:12:28.143]      // while "1"  (timeout="50000")
[09:12:28.143]      // while-condition  =>  TRUE
[09:12:28.143]      // while "1"  (timeout="50000")
[09:12:28.143]      // while-condition  =>  TRUE
[09:12:28.144]      // while "1"  (timeout="50000")
[09:12:28.144]      // while-condition  =>  TRUE
[09:12:28.144]      // while "1"  (timeout="50000")
[09:12:28.144]      // while-condition  =>  TRUE
[09:12:28.144]      // while "1"  (timeout="50000")
[09:12:28.145]      // while-condition  =>  TRUE
[09:12:28.145]      // while "1"  (timeout="50000")
[09:12:28.145]      // while-condition  =>  TRUE
[09:12:28.145]      // while "1"  (timeout="50000")
[09:12:28.146]      // while-condition  =>  TRUE
[09:12:28.146]      // while "1"  (timeout="50000")
[09:12:28.146]      // while-condition  =>  TRUE
[09:12:28.146]      // while "1"  (timeout="50000")
[09:12:28.147]      // while-condition  =>  TRUE
[09:12:28.147]      // while "1"  (timeout="50000")
[09:12:28.147]      // while-condition  =>  TRUE
[09:12:28.147]      // while "1"  (timeout="50000")
[09:12:28.147]      // while-condition  =>  TRUE
[09:12:28.148]      // while "1"  (timeout="50000")
[09:12:28.148]      // while-condition  =>  TRUE
[09:12:28.148]      // while "1"  (timeout="50000")
[09:12:28.148]      // while-condition  =>  TRUE
[09:12:28.148]      // while "1"  (timeout="50000")
[09:12:28.149]      // while-condition  =>  TRUE
[09:12:28.149]      // while "1"  (timeout="50000")
[09:12:28.149]      // while-condition  =>  TRUE
[09:12:28.149]      // while "1"  (timeout="50000")
[09:12:28.149]      // while-condition  =>  TRUE
[09:12:28.150]      // while "1"  (timeout="50000")
[09:12:28.150]      // while-condition  =>  TRUE
[09:12:28.150]      // while "1"  (timeout="50000")
[09:12:28.150]      // while-condition  =>  TRUE
[09:12:28.150]      // while "1"  (timeout="50000")
[09:12:28.151]      // while-condition  =>  TRUE
[09:12:28.151]      // while "1"  (timeout="50000")
[09:12:28.151]      // while-condition  =>  TRUE
[09:12:28.151]      // while "1"  (timeout="50000")
[09:12:28.151]      // while-condition  =>  TRUE
[09:12:28.152]      // while "1"  (timeout="50000")
[09:12:28.152]      // while-condition  =>  TRUE
[09:12:28.152]      // while "1"  (timeout="50000")
[09:12:28.152]      // while-condition  =>  TRUE
[09:12:28.152]      // while "1"  (timeout="50000")
[09:12:28.153]      // while-condition  =>  TRUE
[09:12:28.153]      // while "1"  (timeout="50000")
[09:12:28.153]      // while-condition  =>  TRUE
[09:12:28.153]      // while "1"  (timeout="50000")
[09:12:28.153]      // while-condition  =>  TRUE
[09:12:28.154]      // while "1"  (timeout="50000")
[09:12:28.154]      // while-condition  =>  TRUE
[09:12:28.154]      // while "1"  (timeout="50000")
[09:12:28.154]      // while-condition  =>  TRUE
[09:12:28.154]      // while "1"  (timeout="50000")
[09:12:28.155]      // while-condition  =>  TRUE
[09:12:28.155]      // while "1"  (timeout="50000")
[09:12:28.155]      // while-condition  =>  TRUE
[09:12:28.155]      // while "1"  (timeout="50000")
[09:12:28.155]      // while-condition  =>  TRUE
[09:12:28.155]      // while "1"  (timeout="50000")
[09:12:28.156]      // while-condition  =>  TRUE
[09:12:28.156]      // while "1"  (timeout="50000")
[09:12:28.156]      // while-condition  =>  TRUE
[09:12:28.156]      // while "1"  (timeout="50000")
[09:12:28.157]      // while-condition  =>  TRUE
[09:12:28.157]      // while "1"  (timeout="50000")
[09:12:28.157]      // while-condition  =>  TRUE
[09:12:28.157]      // while "1"  (timeout="50000")
[09:12:28.157]      // while-condition  =>  TRUE
[09:12:28.158]      // while "1"  (timeout="50000")
[09:12:28.158]      // while-condition  =>  TRUE
[09:12:28.158]      // while "1"  (timeout="50000")
[09:12:28.158]      // while-condition  =>  TRUE
[09:12:28.158]      // while "1"  (timeout="50000")
[09:12:28.159]      // while-condition  =>  TRUE
[09:12:28.159]      // while "1"  (timeout="50000")
[09:12:28.159]      // while-condition  =>  TRUE
[09:12:28.159]      // while "1"  (timeout="50000")
[09:12:28.160]      // while-condition  =>  TRUE
[09:12:28.160]      // while "1"  (timeout="50000")
[09:12:28.160]      // while-condition  =>  TRUE
[09:12:28.160]      // while "1"  (timeout="50000")
[09:12:28.161]      // while-condition  =>  TRUE
[09:12:28.161]      // while "1"  (timeout="50000")
[09:12:28.161]      // while-condition  =>  TRUE
[09:12:28.161]      // while "1"  (timeout="50000")
[09:12:28.161]      // while-condition  =>  TRUE
[09:12:28.162]      // while "1"  (timeout="50000")
[09:12:28.162]      // while-condition  =>  TRUE
[09:12:28.162]      // while "1"  (timeout="50000")
[09:12:28.162]      // while-condition  =>  TRUE
[09:12:28.163]      // while "1"  (timeout="50000")
[09:12:28.163]      // while-condition  =>  TRUE
[09:12:28.163]      // while "1"  (timeout="50000")
[09:12:28.163]      // while-condition  =>  TRUE
[09:12:28.164]      // while "1"  (timeout="50000")
[09:12:28.164]      // while-condition  =>  TRUE
[09:12:28.164]      // while "1"  (timeout="50000")
[09:12:28.164]      // while-condition  =>  TRUE
[09:12:28.164]      // while "1"  (timeout="50000")
[09:12:28.165]      // while-condition  =>  TRUE
[09:12:28.165]      // while "1"  (timeout="50000")
[09:12:28.165]      // while-condition  =>  TRUE
[09:12:28.165]      // while "1"  (timeout="50000")
[09:12:28.166]      // while-condition  =>  TRUE
[09:12:28.166]      // while "1"  (timeout="50000")
[09:12:28.166]      // while-condition  =>  TRUE
[09:12:28.166]      // while "1"  (timeout="50000")
[09:12:28.166]      // while-condition  =>  TRUE
[09:12:28.167]      // while "1"  (timeout="50000")
[09:12:28.167]      // while-condition  =>  TRUE
[09:12:28.167]      // while "1"  (timeout="50000")
[09:12:28.167]      // while-condition  =>  TRUE
[09:12:28.168]      // while "1"  (timeout="50000")
[09:12:28.168]      // while-condition  =>  TRUE
[09:12:28.169]      // while "1"  (timeout="50000")
[09:12:28.169]      // while-condition  =>  TRUE
[09:12:28.169]      // while "1"  (timeout="50000")
[09:12:28.169]      // while-condition  =>  TRUE
[09:12:28.169]      // while "1"  (timeout="50000")
[09:12:28.170]      // while-condition  =>  TRUE
[09:12:28.170]      // while "1"  (timeout="50000")
[09:12:28.170]      // while-condition  =>  TRUE
[09:12:28.170]      // while "1"  (timeout="50000")
[09:12:28.171]      // while-condition  =>  TRUE
[09:12:28.171]      // while "1"  (timeout="50000")
[09:12:28.171]      // while-condition  =>  TRUE
[09:12:28.171]      // while "1"  (timeout="50000")
[09:12:28.172]      // while-condition  =>  TRUE
[09:12:28.172]      // while "1"  (timeout="50000")
[09:12:28.172]      // while-condition  =>  TRUE
[09:12:28.172]      // while "1"  (timeout="50000")
[09:12:28.173]      // while-condition  =>  TRUE
[09:12:28.173]      // while "1"  (timeout="50000")
[09:12:28.173]      // while-condition  =>  TRUE
[09:12:28.173]      // while "1"  (timeout="50000")
[09:12:28.173]      // while-condition  =>  TRUE
[09:12:28.174]      // while "1"  (timeout="50000")
[09:12:28.174]      // while-condition  =>  TRUE
[09:12:28.174]      // while "1"  (timeout="50000")
[09:12:28.174]      // while-condition  =>  TRUE
[09:12:28.175]      // while "1"  (timeout="50000")
[09:12:28.175]      // while-condition  =>  TRUE
[09:12:28.175]      // while "1"  (timeout="50000")
[09:12:28.175]      // while-condition  =>  TRUE
[09:12:28.176]      // while "1"  (timeout="50000")
[09:12:28.176]      // while-condition  =>  TRUE
[09:12:28.176]      // while "1"  (timeout="50000")
[09:12:28.176]      // while-condition  =>  TRUE
[09:12:28.176]      // while "1"  (timeout="50000")
[09:12:28.177]      // while-condition  =>  TRUE
[09:12:28.177]      // while "1"  (timeout="50000")
[09:12:28.177]      // while-condition  =>  TRUE
[09:12:28.177]      // while "1"  (timeout="50000")
[09:12:28.178]      // while-condition  =>  TRUE
[09:12:28.178]      // while "1"  (timeout="50000")
[09:12:28.178]      // while-condition  =>  TRUE
[09:12:28.179]      // while "1"  (timeout="50000")
[09:12:28.179]      // while-condition  =>  TRUE
[09:12:28.179]      // while "1"  (timeout="50000")
[09:12:28.180]      // while-condition  =>  TRUE
[09:12:28.180]      // while "1"  (timeout="50000")
[09:12:28.180]      // while-condition  =>  TRUE
[09:12:28.181]      // while "1"  (timeout="50000")
[09:12:28.181]      // while-condition  =>  TRUE
[09:12:28.182]      // while "1"  (timeout="50000")
[09:12:28.182]      // while-condition  =>  TRUE
[09:12:28.182]      // while "1"  (timeout="50000")
[09:12:28.183]      // while-condition  =>  TRUE
[09:12:28.183]      // while "1"  (timeout="50000")
[09:12:28.183]      // while-condition  =>  TRUE
[09:12:28.184]      // while "1"  (timeout="50000")
[09:12:28.184]      // while-condition  =>  TRUE
[09:12:28.184]      // while "1"  (timeout="50000")
[09:12:28.185]      // while-condition  =>  TRUE
[09:12:28.185]      // while "1"  (timeout="50000")
[09:12:28.185]      // while-condition  =>  TRUE
[09:12:28.185]      // while "1"  (timeout="50000")
[09:12:28.186]      // while-condition  =>  TRUE
[09:12:28.186]      // while "1"  (timeout="50000")
[09:12:28.186]      // while-condition  =>  TRUE
[09:12:28.186]      // while "1"  (timeout="50000")
[09:12:28.187]      // while-condition  =>  TRUE
[09:12:28.187]      // while "1"  (timeout="50000")
[09:12:28.187]      // while-condition  =>  TRUE
[09:12:28.187]      // while "1"  (timeout="50000")
[09:12:28.188]      // while-condition  =>  TRUE
[09:12:28.188]      // while "1"  (timeout="50000")
[09:12:28.188]      // while-condition  =>  TRUE
[09:12:28.188]      // while "1"  (timeout="50000")
[09:12:28.189]      // while-condition  =>  TRUE
[09:12:28.189]      // while "1"  (timeout="50000")
[09:12:28.189]      // while-condition  =>  TRUE
[09:12:28.189]      // while "1"  (timeout="50000")
[09:12:28.190]      // while-condition  =>  TRUE
[09:12:28.190]      // while "1"  (timeout="50000")
[09:12:28.190]      // while-condition  =>  TRUE
[09:12:28.190]      // while "1"  (timeout="50000")
[09:12:28.190]      // while-condition  =>  TRUE
[09:12:28.191]      // while "1"  (timeout="50000")
[09:12:28.191]      // while  =>  TIMEOUT
[09:12:28.191]      // end while "1"
[09:12:28.191]    </control>
[09:12:28.191]    <block atomic="false" info="">
[09:12:28.192]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:12:28.194]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:12:28.194]    </block>
[09:12:28.194]    <control if="" while="1" timeout="10000" info="">
[09:12:28.194]      // while "1"  (timeout="10000")
[09:12:28.194]      // while-condition  =>  TRUE
[09:12:28.195]      // while "1"  (timeout="10000")
[09:12:28.195]      // while-condition  =>  TRUE
[09:12:28.195]      // while "1"  (timeout="10000")
[09:12:28.195]      // while-condition  =>  TRUE
[09:12:28.196]      // while "1"  (timeout="10000")
[09:12:28.196]      // while-condition  =>  TRUE
[09:12:28.196]      // while "1"  (timeout="10000")
[09:12:28.196]      // while-condition  =>  TRUE
[09:12:28.196]      // while "1"  (timeout="10000")
[09:12:28.197]      // while-condition  =>  TRUE
[09:12:28.197]      // while "1"  (timeout="10000")
[09:12:28.197]      // while-condition  =>  TRUE
[09:12:28.197]      // while "1"  (timeout="10000")
[09:12:28.197]      // while-condition  =>  TRUE
[09:12:28.198]      // while "1"  (timeout="10000")
[09:12:28.198]      // while-condition  =>  TRUE
[09:12:28.198]      // while "1"  (timeout="10000")
[09:12:28.198]      // while-condition  =>  TRUE
[09:12:28.198]      // while "1"  (timeout="10000")
[09:12:28.198]      // while-condition  =>  TRUE
[09:12:28.199]      // while "1"  (timeout="10000")
[09:12:28.199]      // while-condition  =>  TRUE
[09:12:28.199]      // while "1"  (timeout="10000")
[09:12:28.199]      // while-condition  =>  TRUE
[09:12:28.199]      // while "1"  (timeout="10000")
[09:12:28.200]      // while-condition  =>  TRUE
[09:12:28.200]      // while "1"  (timeout="10000")
[09:12:28.200]      // while-condition  =>  TRUE
[09:12:28.200]      // while "1"  (timeout="10000")
[09:12:28.201]      // while-condition  =>  TRUE
[09:12:28.201]      // while "1"  (timeout="10000")
[09:12:28.201]      // while-condition  =>  TRUE
[09:12:28.201]      // while "1"  (timeout="10000")
[09:12:28.201]      // while-condition  =>  TRUE
[09:12:28.202]      // while "1"  (timeout="10000")
[09:12:28.202]      // while-condition  =>  TRUE
[09:12:28.202]      // while "1"  (timeout="10000")
[09:12:28.202]      // while-condition  =>  TRUE
[09:12:28.202]      // while "1"  (timeout="10000")
[09:12:28.203]      // while-condition  =>  TRUE
[09:12:28.203]      // while "1"  (timeout="10000")
[09:12:28.203]      // while-condition  =>  TRUE
[09:12:28.203]      // while "1"  (timeout="10000")
[09:12:28.203]      // while-condition  =>  TRUE
[09:12:28.204]      // while "1"  (timeout="10000")
[09:12:28.204]      // while-condition  =>  TRUE
[09:12:28.204]      // while "1"  (timeout="10000")
[09:12:28.204]      // while-condition  =>  TRUE
[09:12:28.204]      // while "1"  (timeout="10000")
[09:12:28.205]      // while-condition  =>  TRUE
[09:12:28.205]      // while "1"  (timeout="10000")
[09:12:28.205]      // while-condition  =>  TRUE
[09:12:28.205]      // while "1"  (timeout="10000")
[09:12:28.205]      // while-condition  =>  TRUE
[09:12:28.206]      // while "1"  (timeout="10000")
[09:12:28.206]      // while  =>  TIMEOUT
[09:12:28.206]      // end while "1"
[09:12:28.206]    </control>
[09:12:28.206]    <block atomic="true" info="">
[09:12:28.210]  
[09:12:28.210]  ! W001 : No atomic sequence support in debug unit
[09:12:28.210]  
[09:12:28.212]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:12:28.214]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:12:28.214]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:12:28.216]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:12:28.216]    </block>
[09:12:28.216]    <block atomic="false" info="">
[09:12:28.217]      __errorcontrol = 0x00000001;
[09:12:28.217]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:12:28.218]      ReadDP(0x0);
[09:12:28.220]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:12:28.220]      __errorcontrol = 0x00000000;
[09:12:28.222]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:12:28.222]    </block>
[09:12:28.222]  </sequence>
[09:12:28.223]  
[09:12:28.223]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:12:28.223]  
[09:12:28.223]  <debugvars>
[09:12:28.223]    // Pre-defined
[09:12:28.223]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:12:28.224]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:12:28.224]    __dp=0x00000000
[09:12:28.224]    __ap=0x00000000
[09:12:28.225]    __traceout=0x00000000      (Trace Disabled)
[09:12:28.225]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:12:28.225]    __FlashAddr=0x00000000
[09:12:28.226]    __FlashLen=0x00000000
[09:12:28.226]    __FlashArg=0x00000000
[09:12:28.226]    __FlashOp=0x00000000
[09:12:28.226]    __Result=0x00000000
[09:12:28.227]  </debugvars>
[09:12:28.227]  
[09:12:28.227]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:12:28.228]  </sequence>
[09:12:28.228]  
[09:12:28.232]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[09:12:28.232]  
[09:12:28.233]  <debugvars>
[09:12:28.233]    // Pre-defined
[09:12:28.233]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:12:28.233]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:12:28.234]    __dp=0x00000000
[09:12:28.234]    __ap=0x00000000
[09:12:28.234]    __traceout=0x00000000      (Trace Disabled)
[09:12:28.235]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:12:28.235]    __FlashAddr=0x00000000
[09:12:28.235]    __FlashLen=0x00000000
[09:12:28.235]    __FlashArg=0x00000000
[09:12:28.236]    __FlashOp=0x00000000
[09:12:28.236]    __Result=0x00000000
[09:12:28.236]  </debugvars>
[09:12:28.237]  
[09:12:28.237]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:12:28.237]    <block atomic="false" info="">
[09:12:28.238]      __var SW_DP_ABORT  = 0x0;
[09:12:28.238]        // -> [SW_DP_ABORT <= 0x00000000]
[09:12:28.238]      __var DP_CTRL_STAT = 0x4;
[09:12:28.238]        // -> [DP_CTRL_STAT <= 0x00000004]
[09:12:28.238]      __var DP_SELECT    = 0x8;
[09:12:28.239]        // -> [DP_SELECT <= 0x00000008]
[09:12:28.239]      __var powered_down = 0;
[09:12:28.239]        // -> [powered_down <= 0x00000000]
[09:12:28.239]      WriteDP(DP_SELECT, 0x00000000);
[09:12:28.241]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:12:28.242]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:12:28.244]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[09:12:28.245]        // -> [powered_down <= 0x00000001]
[09:12:28.245]    </block>
[09:12:28.245]    <control if="powered_down" while="" timeout="0" info="">
[09:12:28.246]      // if-block "powered_down"
[09:12:28.246]        // =>  TRUE
[09:12:28.246]      <block atomic="false" info="">
[09:12:28.246]        WriteDP(DP_CTRL_STAT, 0x50000000);
[09:12:28.248]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[09:12:28.249]      </block>
[09:12:28.249]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[09:12:28.249]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[09:12:28.251]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:12:28.252]        // while-condition  =>  FALSE
[09:12:28.252]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[09:12:28.252]      </control>
[09:12:28.253]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[09:12:28.253]        // if-block "(__protocol & 0xFFFF) == 1"
[09:12:28.253]          // =>  FALSE
[09:12:28.253]        // skip if-block "(__protocol & 0xFFFF) == 1"
[09:12:28.254]      </control>
[09:12:28.254]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[09:12:28.254]        // if-block "(__protocol & 0xFFFF) == 2"
[09:12:28.255]          // =>  TRUE
[09:12:28.255]        <block atomic="false" info="">
[09:12:28.255]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[09:12:28.257]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[09:12:28.258]          WriteDP(SW_DP_ABORT, 0x0000001E);
[09:12:28.259]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[09:12:28.260]        </block>
[09:12:28.260]        // end if-block "(__protocol & 0xFFFF) == 2"
[09:12:28.260]      </control>
[09:12:28.261]      // end if-block "powered_down"
[09:12:28.261]    </control>
[09:12:28.261]  </sequence>
[09:12:28.261]  
[09:12:28.366]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:12:28.366]  
[09:12:28.366]  <debugvars>
[09:12:28.367]    // Pre-defined
[09:12:28.367]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:12:28.368]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:12:28.368]    __dp=0x00000000
[09:12:28.368]    __ap=0x00000000
[09:12:28.369]    __traceout=0x00000000      (Trace Disabled)
[09:12:28.369]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:12:28.370]    __FlashAddr=0x00000000
[09:12:28.370]    __FlashLen=0x00000000
[09:12:28.370]    __FlashArg=0x00000000
[09:12:28.371]    __FlashOp=0x00000000
[09:12:28.371]    __Result=0x00000000
[09:12:28.371]  </debugvars>
[09:12:28.371]  
[09:12:28.372]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:12:28.372]    <block atomic="true" info="">
[09:12:28.376]  
[09:12:28.376]  ! W001 : No atomic sequence support in debug unit
[09:12:28.376]  
[09:12:28.378]      __var DP_R_IDCODE    = 0x0;
[09:12:28.378]        // -> [DP_R_IDCODE <= 0x00000000]
[09:12:28.378]      __var DP_W_ABORT    = 0x0;
[09:12:28.379]        // -> [DP_W_ABORT <= 0x00000000]
[09:12:28.379]      __var DP_CTRLSTAT = 0x4;
[09:12:28.380]        // -> [DP_CTRLSTAT <= 0x00000004]
[09:12:28.380]      __var DP_W_SELECT    = 0x8;
[09:12:28.380]        // -> [DP_W_SELECT <= 0x00000008]
[09:12:28.381]      __var AP_TAR		= 0x4;
[09:12:28.381]        // -> [AP_TAR <= 0x00000004]
[09:12:28.381]      __var AP_BD0		= 0x0;
[09:12:28.382]        // -> [AP_BD0 <= 0x00000000]
[09:12:28.382]      __var AP_BD1		= 0x4;
[09:12:28.382]        // -> [AP_BD1 <= 0x00000004]
[09:12:28.383]      __var AP_BD2		= 0x8;
[09:12:28.383]        // -> [AP_BD2 <= 0x00000008]
[09:12:28.383]      __var PCWithinFlash = 0;
[09:12:28.384]        // -> [PCWithinFlash <= 0x00000000]
[09:12:28.384]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:12:28.390]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.390]    </block>
[09:12:28.391]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:12:28.391]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:12:28.398]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.398]      // while-condition  =>  FALSE
[09:12:28.399]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:12:28.399]    </control>
[09:12:28.399]    <block atomic="true" info="">
[09:12:28.403]  
[09:12:28.403]  ! W001 : No atomic sequence support in debug unit
[09:12:28.403]  
[09:12:28.405]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:12:28.411]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:12:28.411]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:12:28.414]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.414]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:12:28.416]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:12:28.416]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:12:28.420]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.420]    </block>
[09:12:28.421]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:12:28.421]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.423]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.423]      // while-condition  =>  TRUE
[09:12:28.423]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.426]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.426]      // while-condition  =>  TRUE
[09:12:28.427]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.429]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.429]      // while-condition  =>  TRUE
[09:12:28.429]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.432]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.433]      // while-condition  =>  TRUE
[09:12:28.433]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.435]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.435]      // while-condition  =>  TRUE
[09:12:28.435]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.438]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.438]      // while-condition  =>  TRUE
[09:12:28.438]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.441]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.441]      // while-condition  =>  TRUE
[09:12:28.441]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.444]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.444]      // while-condition  =>  TRUE
[09:12:28.444]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.447]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.447]      // while-condition  =>  TRUE
[09:12:28.447]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.449]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.449]      // while-condition  =>  TRUE
[09:12:28.449]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.452]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.452]      // while-condition  =>  TRUE
[09:12:28.452]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.455]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.455]      // while-condition  =>  TRUE
[09:12:28.456]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.458]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.458]      // while-condition  =>  TRUE
[09:12:28.458]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.461]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.461]      // while-condition  =>  TRUE
[09:12:28.461]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.464]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.464]      // while-condition  =>  TRUE
[09:12:28.464]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.467]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.467]      // while-condition  =>  TRUE
[09:12:28.467]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.470]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.470]      // while-condition  =>  TRUE
[09:12:28.470]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.473]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.473]      // while-condition  =>  TRUE
[09:12:28.474]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.476]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.476]      // while-condition  =>  TRUE
[09:12:28.477]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.479]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.479]      // while-condition  =>  TRUE
[09:12:28.479]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.482]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.482]      // while-condition  =>  TRUE
[09:12:28.483]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.485]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.485]      // while-condition  =>  TRUE
[09:12:28.486]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.488]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.488]      // while-condition  =>  TRUE
[09:12:28.489]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.491]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.493]      // while-condition  =>  TRUE
[09:12:28.493]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.495]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.497]      // while-condition  =>  TRUE
[09:12:28.497]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.499]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.499]      // while-condition  =>  TRUE
[09:12:28.500]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.502]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.502]      // while-condition  =>  TRUE
[09:12:28.503]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.505]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.505]      // while-condition  =>  TRUE
[09:12:28.506]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.508]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.508]      // while-condition  =>  TRUE
[09:12:28.509]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.511]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.511]      // while-condition  =>  TRUE
[09:12:28.512]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.514]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.515]      // while-condition  =>  TRUE
[09:12:28.515]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.517]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.518]      // while-condition  =>  TRUE
[09:12:28.518]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.520]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.520]      // while-condition  =>  TRUE
[09:12:28.521]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:28.521]      // while  =>  TIMEOUT
[09:12:28.521]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:12:28.521]    </control>
[09:12:28.522]    <block atomic="false" info="">
[09:12:28.522]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:12:28.524]        // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:12:28.524]        // -> [PCWithinFlash <= 0x00000000]
[09:12:28.525]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:12:28.527]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:12:28.528]    </block>
[09:12:28.528]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:12:28.529]      // if-block "PCWithinFlash == 0"
[09:12:28.529]        // =>  TRUE
[09:12:28.529]      // end if-block "PCWithinFlash == 0"
[09:12:28.529]    </control>
[09:12:28.530]  </sequence>
[09:12:28.530]  
[09:12:28.578]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[09:12:28.578]  
[09:12:28.584]  <debugvars>
[09:12:28.584]    // Pre-defined
[09:12:28.584]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:12:28.585]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:12:28.585]    __dp=0x00000000
[09:12:28.585]    __ap=0x00000000
[09:12:28.585]    __traceout=0x00000000      (Trace Disabled)
[09:12:28.585]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:12:28.586]    __FlashAddr=0x00000000
[09:12:28.586]    __FlashLen=0x00000000
[09:12:28.586]    __FlashArg=0x00000000
[09:12:28.586]    __FlashOp=0x00000000
[09:12:28.587]    __Result=0x00000000
[09:12:28.587]  </debugvars>
[09:12:28.587]  
[09:12:28.587]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[09:12:28.588]    <block atomic="false" info="">
[09:12:28.588]    </block>
[09:12:28.588]  </sequence>
[09:12:28.588]  
[09:12:28.590]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[09:12:28.590]  
[09:12:28.591]  <debugvars>
[09:12:28.591]    // Pre-defined
[09:12:28.591]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:12:28.591]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:12:28.591]    __dp=0x00000000
[09:12:28.592]    __ap=0x00000000
[09:12:28.592]    __traceout=0x00000000      (Trace Disabled)
[09:12:28.592]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:12:28.592]    __FlashAddr=0x00000000
[09:12:28.593]    __FlashLen=0x00000000
[09:12:28.593]    __FlashArg=0x00000000
[09:12:28.593]    __FlashOp=0x00000000
[09:12:28.593]    __Result=0x00000000
[09:12:28.593]  </debugvars>
[09:12:28.593]  
[09:12:28.593]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:12:28.593]    <block atomic="false" info="">
[09:12:28.594]      __var nReset      = 0x80;
[09:12:28.594]        // -> [nReset <= 0x00000080]
[09:12:28.594]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:12:28.596]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:12:28.597]    </block>
[09:12:28.597]    <control if="" while="1" timeout="50000" info="">
[09:12:28.597]      // while "1"  (timeout="50000")
[09:12:28.597]      // while-condition  =>  TRUE
[09:12:28.597]      // while "1"  (timeout="50000")
[09:12:28.598]      // while-condition  =>  TRUE
[09:12:28.598]      // while "1"  (timeout="50000")
[09:12:28.598]      // while-condition  =>  TRUE
[09:12:28.598]      // while "1"  (timeout="50000")
[09:12:28.599]      // while-condition  =>  TRUE
[09:12:28.599]      // while "1"  (timeout="50000")
[09:12:28.599]      // while-condition  =>  TRUE
[09:12:28.599]      // while "1"  (timeout="50000")
[09:12:28.600]      // while-condition  =>  TRUE
[09:12:28.600]      // while "1"  (timeout="50000")
[09:12:28.600]      // while-condition  =>  TRUE
[09:12:28.600]      // while "1"  (timeout="50000")
[09:12:28.601]      // while-condition  =>  TRUE
[09:12:28.601]      // while "1"  (timeout="50000")
[09:12:28.601]      // while-condition  =>  TRUE
[09:12:28.601]      // while "1"  (timeout="50000")
[09:12:28.602]      // while-condition  =>  TRUE
[09:12:28.602]      // while "1"  (timeout="50000")
[09:12:28.602]      // while-condition  =>  TRUE
[09:12:28.602]      // while "1"  (timeout="50000")
[09:12:28.603]      // while-condition  =>  TRUE
[09:12:28.603]      // while "1"  (timeout="50000")
[09:12:28.603]      // while-condition  =>  TRUE
[09:12:28.603]      // while "1"  (timeout="50000")
[09:12:28.604]      // while-condition  =>  TRUE
[09:12:28.604]      // while "1"  (timeout="50000")
[09:12:28.604]      // while-condition  =>  TRUE
[09:12:28.604]      // while "1"  (timeout="50000")
[09:12:28.604]      // while-condition  =>  TRUE
[09:12:28.605]      // while "1"  (timeout="50000")
[09:12:28.605]      // while-condition  =>  TRUE
[09:12:28.605]      // while "1"  (timeout="50000")
[09:12:28.605]      // while-condition  =>  TRUE
[09:12:28.606]      // while "1"  (timeout="50000")
[09:12:28.606]      // while-condition  =>  TRUE
[09:12:28.606]      // while "1"  (timeout="50000")
[09:12:28.606]      // while-condition  =>  TRUE
[09:12:28.607]      // while "1"  (timeout="50000")
[09:12:28.607]      // while-condition  =>  TRUE
[09:12:28.607]      // while "1"  (timeout="50000")
[09:12:28.607]      // while-condition  =>  TRUE
[09:12:28.607]      // while "1"  (timeout="50000")
[09:12:28.608]      // while-condition  =>  TRUE
[09:12:28.608]      // while "1"  (timeout="50000")
[09:12:28.608]      // while-condition  =>  TRUE
[09:12:28.608]      // while "1"  (timeout="50000")
[09:12:28.609]      // while-condition  =>  TRUE
[09:12:28.609]      // while "1"  (timeout="50000")
[09:12:28.609]      // while-condition  =>  TRUE
[09:12:28.609]      // while "1"  (timeout="50000")
[09:12:28.610]      // while-condition  =>  TRUE
[09:12:28.610]      // while "1"  (timeout="50000")
[09:12:28.610]      // while-condition  =>  TRUE
[09:12:28.610]      // while "1"  (timeout="50000")
[09:12:28.611]      // while-condition  =>  TRUE
[09:12:28.611]      // while "1"  (timeout="50000")
[09:12:28.611]      // while-condition  =>  TRUE
[09:12:28.611]      // while "1"  (timeout="50000")
[09:12:28.611]      // while-condition  =>  TRUE
[09:12:28.612]      // while "1"  (timeout="50000")
[09:12:28.612]      // while-condition  =>  TRUE
[09:12:28.612]      // while "1"  (timeout="50000")
[09:12:28.612]      // while-condition  =>  TRUE
[09:12:28.613]      // while "1"  (timeout="50000")
[09:12:28.613]      // while-condition  =>  TRUE
[09:12:28.613]      // while "1"  (timeout="50000")
[09:12:28.613]      // while-condition  =>  TRUE
[09:12:28.614]      // while "1"  (timeout="50000")
[09:12:28.614]      // while-condition  =>  TRUE
[09:12:28.614]      // while "1"  (timeout="50000")
[09:12:28.614]      // while-condition  =>  TRUE
[09:12:28.614]      // while "1"  (timeout="50000")
[09:12:28.615]      // while-condition  =>  TRUE
[09:12:28.615]      // while "1"  (timeout="50000")
[09:12:28.615]      // while-condition  =>  TRUE
[09:12:28.615]      // while "1"  (timeout="50000")
[09:12:28.616]      // while-condition  =>  TRUE
[09:12:28.616]      // while "1"  (timeout="50000")
[09:12:28.616]      // while-condition  =>  TRUE
[09:12:28.616]      // while "1"  (timeout="50000")
[09:12:28.617]      // while-condition  =>  TRUE
[09:12:28.617]      // while "1"  (timeout="50000")
[09:12:28.617]      // while-condition  =>  TRUE
[09:12:28.617]      // while "1"  (timeout="50000")
[09:12:28.617]      // while-condition  =>  TRUE
[09:12:28.618]      // while "1"  (timeout="50000")
[09:12:28.618]      // while-condition  =>  TRUE
[09:12:28.618]      // while "1"  (timeout="50000")
[09:12:28.618]      // while-condition  =>  TRUE
[09:12:28.619]      // while "1"  (timeout="50000")
[09:12:28.619]      // while-condition  =>  TRUE
[09:12:28.619]      // while "1"  (timeout="50000")
[09:12:28.619]      // while-condition  =>  TRUE
[09:12:28.620]      // while "1"  (timeout="50000")
[09:12:28.620]      // while-condition  =>  TRUE
[09:12:28.620]      // while "1"  (timeout="50000")
[09:12:28.620]      // while-condition  =>  TRUE
[09:12:28.621]      // while "1"  (timeout="50000")
[09:12:28.621]      // while-condition  =>  TRUE
[09:12:28.621]      // while "1"  (timeout="50000")
[09:12:28.621]      // while-condition  =>  TRUE
[09:12:28.622]      // while "1"  (timeout="50000")
[09:12:28.622]      // while-condition  =>  TRUE
[09:12:28.622]      // while "1"  (timeout="50000")
[09:12:28.622]      // while-condition  =>  TRUE
[09:12:28.622]      // while "1"  (timeout="50000")
[09:12:28.623]      // while-condition  =>  TRUE
[09:12:28.623]      // while "1"  (timeout="50000")
[09:12:28.623]      // while-condition  =>  TRUE
[09:12:28.623]      // while "1"  (timeout="50000")
[09:12:28.624]      // while-condition  =>  TRUE
[09:12:28.624]      // while "1"  (timeout="50000")
[09:12:28.624]      // while-condition  =>  TRUE
[09:12:28.624]      // while "1"  (timeout="50000")
[09:12:28.625]      // while-condition  =>  TRUE
[09:12:28.625]      // while "1"  (timeout="50000")
[09:12:28.625]      // while-condition  =>  TRUE
[09:12:28.625]      // while "1"  (timeout="50000")
[09:12:28.626]      // while-condition  =>  TRUE
[09:12:28.626]      // while "1"  (timeout="50000")
[09:12:28.626]      // while-condition  =>  TRUE
[09:12:28.626]      // while "1"  (timeout="50000")
[09:12:28.626]      // while-condition  =>  TRUE
[09:12:28.627]      // while "1"  (timeout="50000")
[09:12:28.627]      // while-condition  =>  TRUE
[09:12:28.627]      // while "1"  (timeout="50000")
[09:12:28.627]      // while-condition  =>  TRUE
[09:12:28.628]      // while "1"  (timeout="50000")
[09:12:28.628]      // while-condition  =>  TRUE
[09:12:28.628]      // while "1"  (timeout="50000")
[09:12:28.628]      // while-condition  =>  TRUE
[09:12:28.629]      // while "1"  (timeout="50000")
[09:12:28.629]      // while-condition  =>  TRUE
[09:12:28.629]      // while "1"  (timeout="50000")
[09:12:28.629]      // while-condition  =>  TRUE
[09:12:28.630]      // while "1"  (timeout="50000")
[09:12:28.630]      // while-condition  =>  TRUE
[09:12:28.630]      // while "1"  (timeout="50000")
[09:12:28.630]      // while-condition  =>  TRUE
[09:12:28.630]      // while "1"  (timeout="50000")
[09:12:28.631]      // while-condition  =>  TRUE
[09:12:28.631]      // while "1"  (timeout="50000")
[09:12:28.631]      // while-condition  =>  TRUE
[09:12:28.631]      // while "1"  (timeout="50000")
[09:12:28.632]      // while-condition  =>  TRUE
[09:12:28.632]      // while "1"  (timeout="50000")
[09:12:28.632]      // while-condition  =>  TRUE
[09:12:28.632]      // while "1"  (timeout="50000")
[09:12:28.633]      // while-condition  =>  TRUE
[09:12:28.633]      // while "1"  (timeout="50000")
[09:12:28.633]      // while-condition  =>  TRUE
[09:12:28.633]      // while "1"  (timeout="50000")
[09:12:28.633]      // while-condition  =>  TRUE
[09:12:28.634]      // while "1"  (timeout="50000")
[09:12:28.634]      // while-condition  =>  TRUE
[09:12:28.634]      // while "1"  (timeout="50000")
[09:12:28.634]      // while-condition  =>  TRUE
[09:12:28.635]      // while "1"  (timeout="50000")
[09:12:28.635]      // while-condition  =>  TRUE
[09:12:28.635]      // while "1"  (timeout="50000")
[09:12:28.635]      // while-condition  =>  TRUE
[09:12:28.636]      // while "1"  (timeout="50000")
[09:12:28.636]      // while-condition  =>  TRUE
[09:12:28.636]      // while "1"  (timeout="50000")
[09:12:28.636]      // while-condition  =>  TRUE
[09:12:28.636]      // while "1"  (timeout="50000")
[09:12:28.637]      // while-condition  =>  TRUE
[09:12:28.637]      // while "1"  (timeout="50000")
[09:12:28.637]      // while-condition  =>  TRUE
[09:12:28.637]      // while "1"  (timeout="50000")
[09:12:28.638]      // while-condition  =>  TRUE
[09:12:28.638]      // while "1"  (timeout="50000")
[09:12:28.638]      // while-condition  =>  TRUE
[09:12:28.638]      // while "1"  (timeout="50000")
[09:12:28.638]      // while-condition  =>  TRUE
[09:12:28.639]      // while "1"  (timeout="50000")
[09:12:28.639]      // while-condition  =>  TRUE
[09:12:28.639]      // while "1"  (timeout="50000")
[09:12:28.640]      // while-condition  =>  TRUE
[09:12:28.640]      // while "1"  (timeout="50000")
[09:12:28.640]      // while-condition  =>  TRUE
[09:12:28.640]      // while "1"  (timeout="50000")
[09:12:28.641]      // while-condition  =>  TRUE
[09:12:28.641]      // while "1"  (timeout="50000")
[09:12:28.641]      // while-condition  =>  TRUE
[09:12:28.641]      // while "1"  (timeout="50000")
[09:12:28.641]      // while-condition  =>  TRUE
[09:12:28.642]      // while "1"  (timeout="50000")
[09:12:28.642]      // while-condition  =>  TRUE
[09:12:28.642]      // while "1"  (timeout="50000")
[09:12:28.642]      // while-condition  =>  TRUE
[09:12:28.643]      // while "1"  (timeout="50000")
[09:12:28.643]      // while-condition  =>  TRUE
[09:12:28.643]      // while "1"  (timeout="50000")
[09:12:28.643]      // while-condition  =>  TRUE
[09:12:28.644]      // while "1"  (timeout="50000")
[09:12:28.644]      // while-condition  =>  TRUE
[09:12:28.644]      // while "1"  (timeout="50000")
[09:12:28.644]      // while-condition  =>  TRUE
[09:12:28.645]      // while "1"  (timeout="50000")
[09:12:28.645]      // while-condition  =>  TRUE
[09:12:28.645]      // while "1"  (timeout="50000")
[09:12:28.645]      // while-condition  =>  TRUE
[09:12:28.645]      // while "1"  (timeout="50000")
[09:12:28.646]      // while-condition  =>  TRUE
[09:12:28.646]      // while "1"  (timeout="50000")
[09:12:28.646]      // while-condition  =>  TRUE
[09:12:28.647]      // while "1"  (timeout="50000")
[09:12:28.647]      // while-condition  =>  TRUE
[09:12:28.647]      // while "1"  (timeout="50000")
[09:12:28.647]      // while-condition  =>  TRUE
[09:12:28.648]      // while "1"  (timeout="50000")
[09:12:28.648]      // while-condition  =>  TRUE
[09:12:28.648]      // while "1"  (timeout="50000")
[09:12:28.648]      // while-condition  =>  TRUE
[09:12:28.649]      // while "1"  (timeout="50000")
[09:12:28.649]      // while-condition  =>  TRUE
[09:12:28.649]      // while "1"  (timeout="50000")
[09:12:28.649]      // while-condition  =>  TRUE
[09:12:28.650]      // while "1"  (timeout="50000")
[09:12:28.650]      // while-condition  =>  TRUE
[09:12:28.650]      // while "1"  (timeout="50000")
[09:12:28.650]      // while-condition  =>  TRUE
[09:12:28.650]      // while "1"  (timeout="50000")
[09:12:28.651]      // while-condition  =>  TRUE
[09:12:28.651]      // while "1"  (timeout="50000")
[09:12:28.651]      // while-condition  =>  TRUE
[09:12:28.651]      // while "1"  (timeout="50000")
[09:12:28.652]      // while-condition  =>  TRUE
[09:12:28.652]      // while "1"  (timeout="50000")
[09:12:28.652]      // while-condition  =>  TRUE
[09:12:28.652]      // while "1"  (timeout="50000")
[09:12:28.653]      // while-condition  =>  TRUE
[09:12:28.653]      // while "1"  (timeout="50000")
[09:12:28.653]      // while-condition  =>  TRUE
[09:12:28.653]      // while "1"  (timeout="50000")
[09:12:28.654]      // while-condition  =>  TRUE
[09:12:28.654]      // while "1"  (timeout="50000")
[09:12:28.654]      // while-condition  =>  TRUE
[09:12:28.654]      // while "1"  (timeout="50000")
[09:12:28.654]      // while-condition  =>  TRUE
[09:12:28.655]      // while "1"  (timeout="50000")
[09:12:28.655]      // while-condition  =>  TRUE
[09:12:28.655]      // while "1"  (timeout="50000")
[09:12:28.655]      // while-condition  =>  TRUE
[09:12:28.656]      // while "1"  (timeout="50000")
[09:12:28.656]      // while-condition  =>  TRUE
[09:12:28.656]      // while "1"  (timeout="50000")
[09:12:28.656]      // while-condition  =>  TRUE
[09:12:28.657]      // while "1"  (timeout="50000")
[09:12:28.657]      // while-condition  =>  TRUE
[09:12:28.657]      // while "1"  (timeout="50000")
[09:12:28.657]      // while-condition  =>  TRUE
[09:12:28.658]      // while "1"  (timeout="50000")
[09:12:28.658]      // while-condition  =>  TRUE
[09:12:28.658]      // while "1"  (timeout="50000")
[09:12:28.658]      // while-condition  =>  TRUE
[09:12:28.659]      // while "1"  (timeout="50000")
[09:12:28.659]      // while  =>  TIMEOUT
[09:12:28.659]      // end while "1"
[09:12:28.659]    </control>
[09:12:28.660]    <block atomic="false" info="">
[09:12:28.660]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:12:28.661]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:12:28.662]    </block>
[09:12:28.662]    <control if="" while="1" timeout="10000" info="">
[09:12:28.662]      // while "1"  (timeout="10000")
[09:12:28.662]      // while-condition  =>  TRUE
[09:12:28.663]      // while "1"  (timeout="10000")
[09:12:28.663]      // while-condition  =>  TRUE
[09:12:28.664]      // while "1"  (timeout="10000")
[09:12:28.664]      // while-condition  =>  TRUE
[09:12:28.664]      // while "1"  (timeout="10000")
[09:12:28.664]      // while-condition  =>  TRUE
[09:12:28.665]      // while "1"  (timeout="10000")
[09:12:28.665]      // while-condition  =>  TRUE
[09:12:28.665]      // while "1"  (timeout="10000")
[09:12:28.665]      // while-condition  =>  TRUE
[09:12:28.666]      // while "1"  (timeout="10000")
[09:12:28.666]      // while-condition  =>  TRUE
[09:12:28.666]      // while "1"  (timeout="10000")
[09:12:28.666]      // while-condition  =>  TRUE
[09:12:28.666]      // while "1"  (timeout="10000")
[09:12:28.667]      // while-condition  =>  TRUE
[09:12:28.667]      // while "1"  (timeout="10000")
[09:12:28.667]      // while-condition  =>  TRUE
[09:12:28.667]      // while "1"  (timeout="10000")
[09:12:28.668]      // while-condition  =>  TRUE
[09:12:28.668]      // while "1"  (timeout="10000")
[09:12:28.668]      // while-condition  =>  TRUE
[09:12:28.668]      // while "1"  (timeout="10000")
[09:12:28.668]      // while-condition  =>  TRUE
[09:12:28.669]      // while "1"  (timeout="10000")
[09:12:28.669]      // while-condition  =>  TRUE
[09:12:28.669]      // while "1"  (timeout="10000")
[09:12:28.669]      // while-condition  =>  TRUE
[09:12:28.670]      // while "1"  (timeout="10000")
[09:12:28.670]      // while-condition  =>  TRUE
[09:12:28.670]      // while "1"  (timeout="10000")
[09:12:28.670]      // while-condition  =>  TRUE
[09:12:28.670]      // while "1"  (timeout="10000")
[09:12:28.671]      // while-condition  =>  TRUE
[09:12:28.671]      // while "1"  (timeout="10000")
[09:12:28.671]      // while-condition  =>  TRUE
[09:12:28.671]      // while "1"  (timeout="10000")
[09:12:28.672]      // while-condition  =>  TRUE
[09:12:28.672]      // while "1"  (timeout="10000")
[09:12:28.672]      // while-condition  =>  TRUE
[09:12:28.672]      // while "1"  (timeout="10000")
[09:12:28.673]      // while-condition  =>  TRUE
[09:12:28.673]      // while "1"  (timeout="10000")
[09:12:28.673]      // while-condition  =>  TRUE
[09:12:28.673]      // while "1"  (timeout="10000")
[09:12:28.674]      // while-condition  =>  TRUE
[09:12:28.674]      // while "1"  (timeout="10000")
[09:12:28.674]      // while-condition  =>  TRUE
[09:12:28.674]      // while "1"  (timeout="10000")
[09:12:28.674]      // while-condition  =>  TRUE
[09:12:28.675]      // while "1"  (timeout="10000")
[09:12:28.675]      // while  =>  TIMEOUT
[09:12:28.675]      // end while "1"
[09:12:28.675]    </control>
[09:12:28.676]    <block atomic="true" info="">
[09:12:28.679]  
[09:12:28.679]  ! W001 : No atomic sequence support in debug unit
[09:12:28.679]  
[09:12:28.681]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:12:28.684]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:12:28.684]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:12:28.686]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:12:28.686]    </block>
[09:12:28.686]    <block atomic="false" info="">
[09:12:28.686]      __errorcontrol = 0x00000001;
[09:12:28.687]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:12:28.687]      ReadDP(0x0);
[09:12:28.688]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:12:28.689]      __errorcontrol = 0x00000000;
[09:12:28.689]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:12:28.689]    </block>
[09:12:28.689]  </sequence>
[09:12:28.690]  
[09:12:28.697]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[09:12:28.697]  
[09:12:28.697]  <debugvars>
[09:12:28.697]    // Pre-defined
[09:12:28.697]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:12:28.698]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:12:28.698]    __dp=0x00000000
[09:12:28.698]    __ap=0x00000000
[09:12:28.698]    __traceout=0x00000000      (Trace Disabled)
[09:12:28.699]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:12:28.699]    __FlashAddr=0x00000000
[09:12:28.699]    __FlashLen=0x00000000
[09:12:28.699]    __FlashArg=0x00000000
[09:12:28.700]    __FlashOp=0x00000000
[09:12:28.700]    __Result=0x00000000
[09:12:28.700]  </debugvars>
[09:12:28.700]  
[09:12:28.701]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[09:12:28.701]    <block atomic="false" info="">
[09:12:28.701]    </block>
[09:12:28.701]  </sequence>
[09:12:28.701]  
[09:12:28.938]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[09:12:28.938]  
[09:12:28.939]  <debugvars>
[09:12:28.939]    // Pre-defined
[09:12:28.941]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:12:28.941]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:12:28.942]    __dp=0x00000000
[09:12:28.942]    __ap=0x00000000
[09:12:28.942]    __traceout=0x00000000      (Trace Disabled)
[09:12:28.943]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:12:28.943]    __FlashAddr=0x00000000
[09:12:28.944]    __FlashLen=0x00000000
[09:12:28.945]    __FlashArg=0x00000000
[09:12:28.946]    __FlashOp=0x00000000
[09:12:28.946]    __Result=0x00000000
[09:12:28.947]  </debugvars>
[09:12:28.947]  
[09:12:28.948]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[09:12:28.948]    <block atomic="false" info="">
[09:12:28.948]      Sequence("ResetHardware");
[09:12:28.949]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:12:28.949]          <block atomic="false" info="">
[09:12:28.950]            __var nReset      = 0x80;
[09:12:28.950]              // -> [nReset <= 0x00000080]
[09:12:28.951]            DAP_SWJ_Pins(0x00, nReset, 0);
[09:12:28.953]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:12:28.953]          </block>
[09:12:28.954]          <control if="" while="1" timeout="50000" info="">
[09:12:28.955]            // while "1"  (timeout="50000")
[09:12:28.955]            // while-condition  =>  TRUE
[09:12:28.955]            // while "1"  (timeout="50000")
[09:12:28.956]            // while-condition  =>  TRUE
[09:12:28.956]            // while "1"  (timeout="50000")
[09:12:28.957]            // while-condition  =>  TRUE
[09:12:28.957]            // while "1"  (timeout="50000")
[09:12:28.957]            // while-condition  =>  TRUE
[09:12:28.958]            // while "1"  (timeout="50000")
[09:12:28.958]            // while-condition  =>  TRUE
[09:12:28.958]            // while "1"  (timeout="50000")
[09:12:28.958]            // while-condition  =>  TRUE
[09:12:28.959]            // while "1"  (timeout="50000")
[09:12:28.959]            // while-condition  =>  TRUE
[09:12:28.960]            // while "1"  (timeout="50000")
[09:12:28.960]            // while-condition  =>  TRUE
[09:12:28.960]            // while "1"  (timeout="50000")
[09:12:28.961]            // while-condition  =>  TRUE
[09:12:28.962]            // while "1"  (timeout="50000")
[09:12:28.962]            // while-condition  =>  TRUE
[09:12:28.962]            // while "1"  (timeout="50000")
[09:12:28.963]            // while-condition  =>  TRUE
[09:12:28.963]            // while "1"  (timeout="50000")
[09:12:28.963]            // while-condition  =>  TRUE
[09:12:28.963]            // while "1"  (timeout="50000")
[09:12:28.963]            // while-condition  =>  TRUE
[09:12:28.963]            // while "1"  (timeout="50000")
[09:12:28.964]            // while-condition  =>  TRUE
[09:12:28.964]            // while "1"  (timeout="50000")
[09:12:28.964]            // while-condition  =>  TRUE
[09:12:28.964]            // while "1"  (timeout="50000")
[09:12:28.965]            // while-condition  =>  TRUE
[09:12:28.966]            // while "1"  (timeout="50000")
[09:12:28.966]            // while-condition  =>  TRUE
[09:12:28.966]            // while "1"  (timeout="50000")
[09:12:28.967]            // while-condition  =>  TRUE
[09:12:28.967]            // while "1"  (timeout="50000")
[09:12:28.967]            // while-condition  =>  TRUE
[09:12:28.967]            // while "1"  (timeout="50000")
[09:12:28.968]            // while-condition  =>  TRUE
[09:12:28.968]            // while "1"  (timeout="50000")
[09:12:28.968]            // while-condition  =>  TRUE
[09:12:28.968]            // while "1"  (timeout="50000")
[09:12:28.968]            // while-condition  =>  TRUE
[09:12:28.968]            // while "1"  (timeout="50000")
[09:12:28.969]            // while-condition  =>  TRUE
[09:12:28.969]            // while "1"  (timeout="50000")
[09:12:28.969]            // while-condition  =>  TRUE
[09:12:28.969]            // while "1"  (timeout="50000")
[09:12:28.969]            // while-condition  =>  TRUE
[09:12:28.969]            // while "1"  (timeout="50000")
[09:12:28.970]            // while-condition  =>  TRUE
[09:12:28.970]            // while "1"  (timeout="50000")
[09:12:28.970]            // while-condition  =>  TRUE
[09:12:28.970]            // while "1"  (timeout="50000")
[09:12:28.970]            // while-condition  =>  TRUE
[09:12:28.971]            // while "1"  (timeout="50000")
[09:12:28.972]            // while-condition  =>  TRUE
[09:12:28.972]            // while "1"  (timeout="50000")
[09:12:28.972]            // while-condition  =>  TRUE
[09:12:28.972]            // while "1"  (timeout="50000")
[09:12:28.972]            // while-condition  =>  TRUE
[09:12:28.973]            // while "1"  (timeout="50000")
[09:12:28.973]            // while-condition  =>  TRUE
[09:12:28.973]            // while "1"  (timeout="50000")
[09:12:28.973]            // while-condition  =>  TRUE
[09:12:28.973]            // while "1"  (timeout="50000")
[09:12:28.974]            // while-condition  =>  TRUE
[09:12:28.974]            // while "1"  (timeout="50000")
[09:12:28.974]            // while-condition  =>  TRUE
[09:12:28.974]            // while "1"  (timeout="50000")
[09:12:28.974]            // while-condition  =>  TRUE
[09:12:28.974]            // while "1"  (timeout="50000")
[09:12:28.974]            // while-condition  =>  TRUE
[09:12:28.974]            // while "1"  (timeout="50000")
[09:12:28.974]            // while-condition  =>  TRUE
[09:12:28.974]            // while "1"  (timeout="50000")
[09:12:28.975]            // while-condition  =>  TRUE
[09:12:28.975]            // while "1"  (timeout="50000")
[09:12:28.975]            // while-condition  =>  TRUE
[09:12:28.975]            // while "1"  (timeout="50000")
[09:12:28.976]            // while-condition  =>  TRUE
[09:12:28.977]            // while "1"  (timeout="50000")
[09:12:28.977]            // while-condition  =>  TRUE
[09:12:28.977]            // while "1"  (timeout="50000")
[09:12:28.977]            // while-condition  =>  TRUE
[09:12:28.977]            // while "1"  (timeout="50000")
[09:12:28.978]            // while-condition  =>  TRUE
[09:12:28.978]            // while "1"  (timeout="50000")
[09:12:28.978]            // while-condition  =>  TRUE
[09:12:28.978]            // while "1"  (timeout="50000")
[09:12:28.978]            // while-condition  =>  TRUE
[09:12:28.978]            // while "1"  (timeout="50000")
[09:12:28.978]            // while-condition  =>  TRUE
[09:12:28.978]            // while "1"  (timeout="50000")
[09:12:28.979]            // while-condition  =>  TRUE
[09:12:28.979]            // while "1"  (timeout="50000")
[09:12:28.979]            // while-condition  =>  TRUE
[09:12:28.980]            // while "1"  (timeout="50000")
[09:12:28.980]            // while-condition  =>  TRUE
[09:12:28.980]            // while "1"  (timeout="50000")
[09:12:28.980]            // while-condition  =>  TRUE
[09:12:28.980]            // while "1"  (timeout="50000")
[09:12:28.980]            // while-condition  =>  TRUE
[09:12:28.980]            // while "1"  (timeout="50000")
[09:12:28.980]            // while-condition  =>  TRUE
[09:12:28.980]            // while "1"  (timeout="50000")
[09:12:28.982]            // while-condition  =>  TRUE
[09:12:28.982]            // while "1"  (timeout="50000")
[09:12:28.982]            // while-condition  =>  TRUE
[09:12:28.982]            // while "1"  (timeout="50000")
[09:12:28.982]            // while-condition  =>  TRUE
[09:12:28.982]            // while "1"  (timeout="50000")
[09:12:28.983]            // while-condition  =>  TRUE
[09:12:28.983]            // while "1"  (timeout="50000")
[09:12:28.983]            // while-condition  =>  TRUE
[09:12:28.983]            // while "1"  (timeout="50000")
[09:12:28.983]            // while-condition  =>  TRUE
[09:12:28.984]            // while "1"  (timeout="50000")
[09:12:28.984]            // while-condition  =>  TRUE
[09:12:28.984]            // while "1"  (timeout="50000")
[09:12:28.984]            // while-condition  =>  TRUE
[09:12:28.984]            // while "1"  (timeout="50000")
[09:12:28.984]            // while-condition  =>  TRUE
[09:12:28.985]            // while "1"  (timeout="50000")
[09:12:28.985]            // while-condition  =>  TRUE
[09:12:28.985]            // while "1"  (timeout="50000")
[09:12:28.985]            // while-condition  =>  TRUE
[09:12:28.985]            // while "1"  (timeout="50000")
[09:12:28.986]            // while-condition  =>  TRUE
[09:12:28.986]            // while "1"  (timeout="50000")
[09:12:28.986]            // while-condition  =>  TRUE
[09:12:28.986]            // while "1"  (timeout="50000")
[09:12:28.986]            // while-condition  =>  TRUE
[09:12:28.987]            // while "1"  (timeout="50000")
[09:12:28.987]            // while-condition  =>  TRUE
[09:12:28.987]            // while "1"  (timeout="50000")
[09:12:28.987]            // while-condition  =>  TRUE
[09:12:28.987]            // while "1"  (timeout="50000")
[09:12:28.988]            // while-condition  =>  TRUE
[09:12:28.988]            // while "1"  (timeout="50000")
[09:12:28.988]            // while-condition  =>  TRUE
[09:12:28.988]            // while "1"  (timeout="50000")
[09:12:28.988]            // while-condition  =>  TRUE
[09:12:28.989]            // while "1"  (timeout="50000")
[09:12:28.989]            // while-condition  =>  TRUE
[09:12:28.989]            // while "1"  (timeout="50000")
[09:12:28.989]            // while-condition  =>  TRUE
[09:12:28.990]            // while "1"  (timeout="50000")
[09:12:28.990]            // while-condition  =>  TRUE
[09:12:28.990]            // while "1"  (timeout="50000")
[09:12:28.990]            // while-condition  =>  TRUE
[09:12:28.991]            // while "1"  (timeout="50000")
[09:12:28.991]            // while-condition  =>  TRUE
[09:12:28.992]            // while "1"  (timeout="50000")
[09:12:28.992]            // while-condition  =>  TRUE
[09:12:28.993]            // while "1"  (timeout="50000")
[09:12:28.993]            // while-condition  =>  TRUE
[09:12:28.993]            // while "1"  (timeout="50000")
[09:12:28.993]            // while-condition  =>  TRUE
[09:12:28.993]            // while "1"  (timeout="50000")
[09:12:28.993]            // while-condition  =>  TRUE
[09:12:28.993]            // while "1"  (timeout="50000")
[09:12:28.993]            // while-condition  =>  TRUE
[09:12:28.993]            // while "1"  (timeout="50000")
[09:12:28.994]            // while-condition  =>  TRUE
[09:12:28.994]            // while "1"  (timeout="50000")
[09:12:28.994]            // while-condition  =>  TRUE
[09:12:28.994]            // while "1"  (timeout="50000")
[09:12:28.994]            // while-condition  =>  TRUE
[09:12:28.995]            // while "1"  (timeout="50000")
[09:12:28.995]            // while-condition  =>  TRUE
[09:12:28.995]            // while "1"  (timeout="50000")
[09:12:28.995]            // while-condition  =>  TRUE
[09:12:28.995]            // while "1"  (timeout="50000")
[09:12:28.996]            // while-condition  =>  TRUE
[09:12:28.996]            // while "1"  (timeout="50000")
[09:12:28.997]            // while-condition  =>  TRUE
[09:12:28.997]            // while "1"  (timeout="50000")
[09:12:28.997]            // while-condition  =>  TRUE
[09:12:28.997]            // while "1"  (timeout="50000")
[09:12:28.997]            // while-condition  =>  TRUE
[09:12:28.998]            // while "1"  (timeout="50000")
[09:12:28.998]            // while-condition  =>  TRUE
[09:12:28.998]            // while "1"  (timeout="50000")
[09:12:28.998]            // while-condition  =>  TRUE
[09:12:28.998]            // while "1"  (timeout="50000")
[09:12:28.998]            // while-condition  =>  TRUE
[09:12:28.998]            // while "1"  (timeout="50000")
[09:12:28.998]            // while-condition  =>  TRUE
[09:12:28.999]            // while "1"  (timeout="50000")
[09:12:28.999]            // while-condition  =>  TRUE
[09:12:29.000]            // while "1"  (timeout="50000")
[09:12:29.000]            // while-condition  =>  TRUE
[09:12:29.000]            // while "1"  (timeout="50000")
[09:12:29.000]            // while-condition  =>  TRUE
[09:12:29.000]            // while "1"  (timeout="50000")
[09:12:29.000]            // while-condition  =>  TRUE
[09:12:29.000]            // while "1"  (timeout="50000")
[09:12:29.000]            // while-condition  =>  TRUE
[09:12:29.000]            // while "1"  (timeout="50000")
[09:12:29.001]            // while-condition  =>  TRUE
[09:12:29.001]            // while "1"  (timeout="50000")
[09:12:29.001]            // while-condition  =>  TRUE
[09:12:29.001]            // while "1"  (timeout="50000")
[09:12:29.001]            // while-condition  =>  TRUE
[09:12:29.002]            // while "1"  (timeout="50000")
[09:12:29.002]            // while-condition  =>  TRUE
[09:12:29.003]            // while "1"  (timeout="50000")
[09:12:29.003]            // while  =>  TIMEOUT
[09:12:29.003]            // end while "1"
[09:12:29.003]          </control>
[09:12:29.003]          <block atomic="false" info="">
[09:12:29.004]            DAP_SWJ_Pins(nReset, nReset, 0);
[09:12:29.005]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:12:29.005]          </block>
[09:12:29.005]          <control if="" while="1" timeout="10000" info="">
[09:12:29.005]            // while "1"  (timeout="10000")
[09:12:29.005]            // while-condition  =>  TRUE
[09:12:29.005]            // while "1"  (timeout="10000")
[09:12:29.006]            // while-condition  =>  TRUE
[09:12:29.007]            // while "1"  (timeout="10000")
[09:12:29.007]            // while-condition  =>  TRUE
[09:12:29.007]            // while "1"  (timeout="10000")
[09:12:29.007]            // while-condition  =>  TRUE
[09:12:29.007]            // while "1"  (timeout="10000")
[09:12:29.008]            // while-condition  =>  TRUE
[09:12:29.008]            // while "1"  (timeout="10000")
[09:12:29.008]            // while-condition  =>  TRUE
[09:12:29.008]            // while "1"  (timeout="10000")
[09:12:29.008]            // while-condition  =>  TRUE
[09:12:29.008]            // while "1"  (timeout="10000")
[09:12:29.008]            // while-condition  =>  TRUE
[09:12:29.008]            // while "1"  (timeout="10000")
[09:12:29.009]            // while-condition  =>  TRUE
[09:12:29.009]            // while "1"  (timeout="10000")
[09:12:29.009]            // while-condition  =>  TRUE
[09:12:29.009]            // while "1"  (timeout="10000")
[09:12:29.009]            // while-condition  =>  TRUE
[09:12:29.010]            // while "1"  (timeout="10000")
[09:12:29.010]            // while-condition  =>  TRUE
[09:12:29.011]            // while "1"  (timeout="10000")
[09:12:29.011]            // while-condition  =>  TRUE
[09:12:29.011]            // while "1"  (timeout="10000")
[09:12:29.011]            // while-condition  =>  TRUE
[09:12:29.011]            // while "1"  (timeout="10000")
[09:12:29.011]            // while-condition  =>  TRUE
[09:12:29.011]            // while "1"  (timeout="10000")
[09:12:29.011]            // while-condition  =>  TRUE
[09:12:29.011]            // while "1"  (timeout="10000")
[09:12:29.012]            // while-condition  =>  TRUE
[09:12:29.012]            // while "1"  (timeout="10000")
[09:12:29.012]            // while-condition  =>  TRUE
[09:12:29.012]            // while "1"  (timeout="10000")
[09:12:29.012]            // while-condition  =>  TRUE
[09:12:29.013]            // while "1"  (timeout="10000")
[09:12:29.013]            // while-condition  =>  TRUE
[09:12:29.014]            // while "1"  (timeout="10000")
[09:12:29.014]            // while-condition  =>  TRUE
[09:12:29.014]            // while "1"  (timeout="10000")
[09:12:29.014]            // while-condition  =>  TRUE
[09:12:29.014]            // while "1"  (timeout="10000")
[09:12:29.015]            // while-condition  =>  TRUE
[09:12:29.015]            // while "1"  (timeout="10000")
[09:12:29.015]            // while-condition  =>  TRUE
[09:12:29.015]            // while "1"  (timeout="10000")
[09:12:29.015]            // while-condition  =>  TRUE
[09:12:29.015]            // while "1"  (timeout="10000")
[09:12:29.015]            // while-condition  =>  TRUE
[09:12:29.015]            // while "1"  (timeout="10000")
[09:12:29.015]            // while-condition  =>  TRUE
[09:12:29.016]            // while "1"  (timeout="10000")
[09:12:29.016]            // while-condition  =>  TRUE
[09:12:29.016]            // while "1"  (timeout="10000")
[09:12:29.016]            // while-condition  =>  TRUE
[09:12:29.016]            // while "1"  (timeout="10000")
[09:12:29.016]            // while-condition  =>  TRUE
[09:12:29.018]            // while "1"  (timeout="10000")
[09:12:29.018]            // while-condition  =>  TRUE
[09:12:29.018]            // while "1"  (timeout="10000")
[09:12:29.018]            // while-condition  =>  TRUE
[09:12:29.018]            // while "1"  (timeout="10000")
[09:12:29.018]            // while-condition  =>  TRUE
[09:12:29.018]            // while "1"  (timeout="10000")
[09:12:29.018]            // while-condition  =>  TRUE
[09:12:29.019]            // while "1"  (timeout="10000")
[09:12:29.019]            // while  =>  TIMEOUT
[09:12:29.019]            // end while "1"
[09:12:29.019]          </control>
[09:12:29.019]          <block atomic="true" info="">
[09:12:29.023]  
[09:12:29.023]  ! W001 : No atomic sequence support in debug unit
[09:12:29.023]  
[09:12:29.025]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:12:29.028]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:12:29.029]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:12:29.031]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:12:29.031]          </block>
[09:12:29.032]          <block atomic="false" info="">
[09:12:29.032]            __errorcontrol = 0x00000001;
[09:12:29.033]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:12:29.033]            ReadDP(0x0);
[09:12:29.035]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:12:29.036]            __errorcontrol = 0x00000000;
[09:12:29.036]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:12:29.037]          </block>
[09:12:29.037]        </sequence>
[09:12:29.037]      Sequence("DebugPortSetup");
[09:12:29.038]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:12:29.038]        </sequence>
[09:12:29.038]      Sequence("DebugPortStart");
[09:12:29.039]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:12:29.039]          <block atomic="false" info="">
[09:12:29.039]            __var SW_DP_ABORT  = 0x0;
[09:12:29.040]              // -> [SW_DP_ABORT <= 0x00000000]
[09:12:29.040]            __var DP_CTRL_STAT = 0x4;
[09:12:29.040]              // -> [DP_CTRL_STAT <= 0x00000004]
[09:12:29.041]            __var DP_SELECT    = 0x8;
[09:12:29.041]              // -> [DP_SELECT <= 0x00000008]
[09:12:29.042]            __var powered_down = 0;
[09:12:29.042]              // -> [powered_down <= 0x00000000]
[09:12:29.042]            WriteDP(DP_SELECT, 0x00000000);
[09:12:29.045]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:12:29.045]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:12:29.048]              // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:12:29.048]              // -> [powered_down <= 0x00000000]
[09:12:29.049]          </block>
[09:12:29.050]          <control if="powered_down" while="" timeout="0" info="">
[09:12:29.051]            // if-block "powered_down"
[09:12:29.051]              // =>  FALSE
[09:12:29.051]            // skip if-block "powered_down"
[09:12:29.052]          </control>
[09:12:29.052]        </sequence>
[09:12:29.052]      Sequence("DebugCoreStart");
[09:12:29.053]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:12:29.053]          <block atomic="true" info="">
[09:12:29.055]  
[09:12:29.055]  ! W001 : No atomic sequence support in debug unit
[09:12:29.055]  
[09:12:29.057]            __var DP_R_IDCODE    = 0x0;
[09:12:29.058]              // -> [DP_R_IDCODE <= 0x00000000]
[09:12:29.058]            __var DP_W_ABORT    = 0x0;
[09:12:29.058]              // -> [DP_W_ABORT <= 0x00000000]
[09:12:29.060]            __var DP_CTRLSTAT = 0x4;
[09:12:29.060]              // -> [DP_CTRLSTAT <= 0x00000004]
[09:12:29.061]            __var DP_W_SELECT    = 0x8;
[09:12:29.061]              // -> [DP_W_SELECT <= 0x00000008]
[09:12:29.062]            __var AP_TAR		= 0x4;
[09:12:29.062]              // -> [AP_TAR <= 0x00000004]
[09:12:29.063]            __var AP_BD0		= 0x0;
[09:12:29.063]              // -> [AP_BD0 <= 0x00000000]
[09:12:29.063]            __var AP_BD1		= 0x4;
[09:12:29.063]              // -> [AP_BD1 <= 0x00000004]
[09:12:29.064]            __var AP_BD2		= 0x8;
[09:12:29.064]              // -> [AP_BD2 <= 0x00000008]
[09:12:29.064]            __var PCWithinFlash = 0;
[09:12:29.065]              // -> [PCWithinFlash <= 0x00000000]
[09:12:29.065]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:12:29.072]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.085]          </block>
[09:12:29.086]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:12:29.087]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:12:29.093]              // -> [Read32(0xE000EDF0) => 0x00030003]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.094]            // while-condition  =>  FALSE
[09:12:29.101]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:12:29.101]          </control>
[09:12:29.102]          <block atomic="true" info="">
[09:12:29.107]  
[09:12:29.107]  ! W001 : No atomic sequence support in debug unit
[09:12:29.107]  
[09:12:29.110]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:12:29.119]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:12:29.119]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:12:29.122]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.123]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:12:29.126]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:12:29.126]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:12:29.131]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.132]          </block>
[09:12:29.132]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:12:29.133]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.135]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.136]            // while-condition  =>  TRUE
[09:12:29.136]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.139]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.140]            // while-condition  =>  TRUE
[09:12:29.140]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.143]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.144]            // while-condition  =>  TRUE
[09:12:29.145]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.147]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.147]            // while-condition  =>  TRUE
[09:12:29.148]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.151]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.152]            // while-condition  =>  TRUE
[09:12:29.152]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.155]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.156]            // while-condition  =>  TRUE
[09:12:29.157]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.159]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.160]            // while-condition  =>  TRUE
[09:12:29.161]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.163]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.164]            // while-condition  =>  TRUE
[09:12:29.164]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.167]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.168]            // while-condition  =>  TRUE
[09:12:29.168]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.171]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.172]            // while-condition  =>  TRUE
[09:12:29.172]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.175]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.175]            // while-condition  =>  TRUE
[09:12:29.175]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.178]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.178]            // while-condition  =>  TRUE
[09:12:29.179]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.181]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.181]            // while-condition  =>  TRUE
[09:12:29.181]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.184]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.185]            // while-condition  =>  TRUE
[09:12:29.185]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.187]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.187]            // while-condition  =>  TRUE
[09:12:29.187]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.190]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.191]            // while-condition  =>  TRUE
[09:12:29.191]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.193]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.194]            // while-condition  =>  TRUE
[09:12:29.194]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.196]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.197]            // while-condition  =>  TRUE
[09:12:29.197]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.198]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.200]            // while-condition  =>  TRUE
[09:12:29.200]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.202]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.202]            // while-condition  =>  TRUE
[09:12:29.202]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.205]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.206]            // while-condition  =>  TRUE
[09:12:29.206]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.208]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.208]            // while-condition  =>  TRUE
[09:12:29.208]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.211]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.212]            // while-condition  =>  TRUE
[09:12:29.212]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.214]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.215]            // while-condition  =>  TRUE
[09:12:29.215]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.218]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.219]            // while-condition  =>  TRUE
[09:12:29.219]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.222]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.222]            // while-condition  =>  TRUE
[09:12:29.224]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.226]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.227]            // while-condition  =>  TRUE
[09:12:29.228]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.230]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.230]            // while-condition  =>  TRUE
[09:12:29.232]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.234]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.234]            // while-condition  =>  TRUE
[09:12:29.235]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.238]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.238]            // while-condition  =>  TRUE
[09:12:29.239]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:29.240]            // while  =>  TIMEOUT
[09:12:29.241]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:12:29.241]          </control>
[09:12:29.242]          <block atomic="false" info="">
[09:12:29.242]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:12:29.245]              // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:12:29.246]              // -> [PCWithinFlash <= 0x00000000]
[09:12:29.247]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:12:29.249]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:12:29.249]          </block>
[09:12:29.250]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:12:29.250]            // if-block "PCWithinFlash == 0"
[09:12:29.251]              // =>  TRUE
[09:12:29.252]            // end if-block "PCWithinFlash == 0"
[09:12:29.253]          </control>
[09:12:29.253]        </sequence>
[09:12:29.253]    </block>
[09:12:29.253]  </sequence>
[09:12:29.255]  
[09:12:38.562]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[09:12:38.562]  
[09:12:38.563]  <debugvars>
[09:12:38.563]    // Pre-defined
[09:12:38.564]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:12:38.565]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:12:38.566]    __dp=0x00000000
[09:12:38.567]    __ap=0x00000000
[09:12:38.567]    __traceout=0x00000000      (Trace Disabled)
[09:12:38.568]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:12:38.568]    __FlashAddr=0x00000000
[09:12:38.569]    __FlashLen=0x00000000
[09:12:38.570]    __FlashArg=0x00000000
[09:12:38.571]    __FlashOp=0x00000000
[09:12:38.571]    __Result=0x00000000
[09:12:38.572]  </debugvars>
[09:12:38.572]  
[09:12:38.573]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[09:12:38.574]    <block atomic="false" info="">
[09:12:38.575]      __var nReset      = 0x80;
[09:12:38.575]        // -> [nReset <= 0x00000080]
[09:12:38.576]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:12:39.588]  
[09:12:39.588]  !!! E320 : DAP access error
[09:12:39.588]  
[09:12:39.590]    </block>
[09:12:39.591]  </sequence>
[09:12:39.591]  
[09:12:49.111]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:12:49.111]  
[09:12:49.112]  <debugvars>
[09:12:49.112]    // Pre-defined
[09:12:49.112]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:12:49.113]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:12:49.113]    __dp=0x00000000
[09:12:49.113]    __ap=0x00000000
[09:12:49.114]    __traceout=0x00000000      (Trace Disabled)
[09:12:49.114]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:12:49.115]    __FlashAddr=0x00000000
[09:12:49.115]    __FlashLen=0x00000000
[09:12:49.115]    __FlashArg=0x00000000
[09:12:49.116]    __FlashOp=0x00000000
[09:12:49.116]    __Result=0x00000000
[09:12:49.116]  </debugvars>
[09:12:49.116]  
[09:12:49.117]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:12:49.117]    <block atomic="false" info="">
[09:12:49.117]      __var nReset      = 0x80;
[09:12:49.118]        // -> [nReset <= 0x00000080]
[09:12:49.118]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:12:49.120]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:12:49.120]    </block>
[09:12:49.121]    <control if="" while="1" timeout="50000" info="">
[09:12:49.121]      // while "1"  (timeout="50000")
[09:12:49.121]      // while-condition  =>  TRUE
[09:12:49.121]      // while "1"  (timeout="50000")
[09:12:49.122]      // while-condition  =>  TRUE
[09:12:49.122]      // while "1"  (timeout="50000")
[09:12:49.122]      // while-condition  =>  TRUE
[09:12:49.123]      // while "1"  (timeout="50000")
[09:12:49.123]      // while-condition  =>  TRUE
[09:12:49.123]      // while "1"  (timeout="50000")
[09:12:49.124]      // while-condition  =>  TRUE
[09:12:49.124]      // while "1"  (timeout="50000")
[09:12:49.124]      // while-condition  =>  TRUE
[09:12:49.124]      // while "1"  (timeout="50000")
[09:12:49.125]      // while-condition  =>  TRUE
[09:12:49.125]      // while "1"  (timeout="50000")
[09:12:49.125]      // while-condition  =>  TRUE
[09:12:49.126]      // while "1"  (timeout="50000")
[09:12:49.126]      // while-condition  =>  TRUE
[09:12:49.126]      // while "1"  (timeout="50000")
[09:12:49.126]      // while-condition  =>  TRUE
[09:12:49.127]      // while "1"  (timeout="50000")
[09:12:49.127]      // while-condition  =>  TRUE
[09:12:49.127]      // while "1"  (timeout="50000")
[09:12:49.128]      // while-condition  =>  TRUE
[09:12:49.128]      // while "1"  (timeout="50000")
[09:12:49.128]      // while-condition  =>  TRUE
[09:12:49.128]      // while "1"  (timeout="50000")
[09:12:49.129]      // while-condition  =>  TRUE
[09:12:49.129]      // while "1"  (timeout="50000")
[09:12:49.129]      // while-condition  =>  TRUE
[09:12:49.129]      // while "1"  (timeout="50000")
[09:12:49.129]      // while-condition  =>  TRUE
[09:12:49.130]      // while "1"  (timeout="50000")
[09:12:49.130]      // while-condition  =>  TRUE
[09:12:49.130]      // while "1"  (timeout="50000")
[09:12:49.130]      // while-condition  =>  TRUE
[09:12:49.130]      // while "1"  (timeout="50000")
[09:12:49.131]      // while-condition  =>  TRUE
[09:12:49.131]      // while "1"  (timeout="50000")
[09:12:49.131]      // while-condition  =>  TRUE
[09:12:49.131]      // while "1"  (timeout="50000")
[09:12:49.131]      // while-condition  =>  TRUE
[09:12:49.132]      // while "1"  (timeout="50000")
[09:12:49.132]      // while-condition  =>  TRUE
[09:12:49.132]      // while "1"  (timeout="50000")
[09:12:49.132]      // while-condition  =>  TRUE
[09:12:49.132]      // while "1"  (timeout="50000")
[09:12:49.133]      // while-condition  =>  TRUE
[09:12:49.133]      // while "1"  (timeout="50000")
[09:12:49.133]      // while-condition  =>  TRUE
[09:12:49.133]      // while "1"  (timeout="50000")
[09:12:49.133]      // while-condition  =>  TRUE
[09:12:49.134]      // while "1"  (timeout="50000")
[09:12:49.134]      // while-condition  =>  TRUE
[09:12:49.134]      // while "1"  (timeout="50000")
[09:12:49.134]      // while-condition  =>  TRUE
[09:12:49.134]      // while "1"  (timeout="50000")
[09:12:49.135]      // while-condition  =>  TRUE
[09:12:49.135]      // while "1"  (timeout="50000")
[09:12:49.135]      // while-condition  =>  TRUE
[09:12:49.135]      // while "1"  (timeout="50000")
[09:12:49.135]      // while-condition  =>  TRUE
[09:12:49.136]      // while "1"  (timeout="50000")
[09:12:49.136]      // while-condition  =>  TRUE
[09:12:49.136]      // while "1"  (timeout="50000")
[09:12:49.136]      // while-condition  =>  TRUE
[09:12:49.136]      // while "1"  (timeout="50000")
[09:12:49.137]      // while-condition  =>  TRUE
[09:12:49.137]      // while "1"  (timeout="50000")
[09:12:49.137]      // while-condition  =>  TRUE
[09:12:49.137]      // while "1"  (timeout="50000")
[09:12:49.137]      // while-condition  =>  TRUE
[09:12:49.138]      // while "1"  (timeout="50000")
[09:12:49.138]      // while-condition  =>  TRUE
[09:12:49.138]      // while "1"  (timeout="50000")
[09:12:49.138]      // while-condition  =>  TRUE
[09:12:49.138]      // while "1"  (timeout="50000")
[09:12:49.139]      // while-condition  =>  TRUE
[09:12:49.139]      // while "1"  (timeout="50000")
[09:12:49.139]      // while-condition  =>  TRUE
[09:12:49.139]      // while "1"  (timeout="50000")
[09:12:49.140]      // while-condition  =>  TRUE
[09:12:49.140]      // while "1"  (timeout="50000")
[09:12:49.140]      // while-condition  =>  TRUE
[09:12:49.140]      // while "1"  (timeout="50000")
[09:12:49.140]      // while-condition  =>  TRUE
[09:12:49.141]      // while "1"  (timeout="50000")
[09:12:49.141]      // while-condition  =>  TRUE
[09:12:49.141]      // while "1"  (timeout="50000")
[09:12:49.141]      // while-condition  =>  TRUE
[09:12:49.141]      // while "1"  (timeout="50000")
[09:12:49.142]      // while-condition  =>  TRUE
[09:12:49.142]      // while "1"  (timeout="50000")
[09:12:49.142]      // while-condition  =>  TRUE
[09:12:49.142]      // while "1"  (timeout="50000")
[09:12:49.143]      // while-condition  =>  TRUE
[09:12:49.143]      // while "1"  (timeout="50000")
[09:12:49.143]      // while-condition  =>  TRUE
[09:12:49.143]      // while "1"  (timeout="50000")
[09:12:49.144]      // while-condition  =>  TRUE
[09:12:49.144]      // while "1"  (timeout="50000")
[09:12:49.144]      // while-condition  =>  TRUE
[09:12:49.144]      // while "1"  (timeout="50000")
[09:12:49.144]      // while-condition  =>  TRUE
[09:12:49.145]      // while "1"  (timeout="50000")
[09:12:49.145]      // while-condition  =>  TRUE
[09:12:49.145]      // while "1"  (timeout="50000")
[09:12:49.145]      // while-condition  =>  TRUE
[09:12:49.146]      // while "1"  (timeout="50000")
[09:12:49.146]      // while-condition  =>  TRUE
[09:12:49.146]      // while "1"  (timeout="50000")
[09:12:49.146]      // while-condition  =>  TRUE
[09:12:49.146]      // while "1"  (timeout="50000")
[09:12:49.147]      // while-condition  =>  TRUE
[09:12:49.147]      // while "1"  (timeout="50000")
[09:12:49.147]      // while-condition  =>  TRUE
[09:12:49.147]      // while "1"  (timeout="50000")
[09:12:49.148]      // while-condition  =>  TRUE
[09:12:49.148]      // while "1"  (timeout="50000")
[09:12:49.148]      // while-condition  =>  TRUE
[09:12:49.149]      // while "1"  (timeout="50000")
[09:12:49.149]      // while-condition  =>  TRUE
[09:12:49.149]      // while "1"  (timeout="50000")
[09:12:49.149]      // while-condition  =>  TRUE
[09:12:49.150]      // while "1"  (timeout="50000")
[09:12:49.150]      // while-condition  =>  TRUE
[09:12:49.150]      // while "1"  (timeout="50000")
[09:12:49.150]      // while-condition  =>  TRUE
[09:12:49.151]      // while "1"  (timeout="50000")
[09:12:49.151]      // while-condition  =>  TRUE
[09:12:49.151]      // while "1"  (timeout="50000")
[09:12:49.152]      // while-condition  =>  TRUE
[09:12:49.152]      // while "1"  (timeout="50000")
[09:12:49.152]      // while-condition  =>  TRUE
[09:12:49.152]      // while "1"  (timeout="50000")
[09:12:49.153]      // while-condition  =>  TRUE
[09:12:49.153]      // while "1"  (timeout="50000")
[09:12:49.153]      // while-condition  =>  TRUE
[09:12:49.153]      // while "1"  (timeout="50000")
[09:12:49.154]      // while-condition  =>  TRUE
[09:12:49.154]      // while "1"  (timeout="50000")
[09:12:49.154]      // while-condition  =>  TRUE
[09:12:49.154]      // while "1"  (timeout="50000")
[09:12:49.155]      // while-condition  =>  TRUE
[09:12:49.155]      // while "1"  (timeout="50000")
[09:12:49.155]      // while-condition  =>  TRUE
[09:12:49.155]      // while "1"  (timeout="50000")
[09:12:49.156]      // while-condition  =>  TRUE
[09:12:49.156]      // while "1"  (timeout="50000")
[09:12:49.156]      // while-condition  =>  TRUE
[09:12:49.156]      // while "1"  (timeout="50000")
[09:12:49.157]      // while-condition  =>  TRUE
[09:12:49.157]      // while "1"  (timeout="50000")
[09:12:49.157]      // while-condition  =>  TRUE
[09:12:49.157]      // while "1"  (timeout="50000")
[09:12:49.158]      // while-condition  =>  TRUE
[09:12:49.158]      // while "1"  (timeout="50000")
[09:12:49.158]      // while-condition  =>  TRUE
[09:12:49.158]      // while "1"  (timeout="50000")
[09:12:49.159]      // while-condition  =>  TRUE
[09:12:49.159]      // while "1"  (timeout="50000")
[09:12:49.159]      // while-condition  =>  TRUE
[09:12:49.159]      // while "1"  (timeout="50000")
[09:12:49.159]      // while-condition  =>  TRUE
[09:12:49.160]      // while "1"  (timeout="50000")
[09:12:49.160]      // while-condition  =>  TRUE
[09:12:49.160]      // while "1"  (timeout="50000")
[09:12:49.160]      // while-condition  =>  TRUE
[09:12:49.160]      // while "1"  (timeout="50000")
[09:12:49.161]      // while-condition  =>  TRUE
[09:12:49.161]      // while "1"  (timeout="50000")
[09:12:49.161]      // while-condition  =>  TRUE
[09:12:49.161]      // while "1"  (timeout="50000")
[09:12:49.161]      // while-condition  =>  TRUE
[09:12:49.162]      // while "1"  (timeout="50000")
[09:12:49.162]      // while-condition  =>  TRUE
[09:12:49.162]      // while "1"  (timeout="50000")
[09:12:49.162]      // while-condition  =>  TRUE
[09:12:49.162]      // while "1"  (timeout="50000")
[09:12:49.163]      // while-condition  =>  TRUE
[09:12:49.163]      // while "1"  (timeout="50000")
[09:12:49.163]      // while-condition  =>  TRUE
[09:12:49.163]      // while "1"  (timeout="50000")
[09:12:49.163]      // while-condition  =>  TRUE
[09:12:49.164]      // while "1"  (timeout="50000")
[09:12:49.164]      // while-condition  =>  TRUE
[09:12:49.164]      // while "1"  (timeout="50000")
[09:12:49.164]      // while-condition  =>  TRUE
[09:12:49.164]      // while "1"  (timeout="50000")
[09:12:49.165]      // while-condition  =>  TRUE
[09:12:49.165]      // while "1"  (timeout="50000")
[09:12:49.165]      // while-condition  =>  TRUE
[09:12:49.165]      // while "1"  (timeout="50000")
[09:12:49.165]      // while-condition  =>  TRUE
[09:12:49.166]      // while "1"  (timeout="50000")
[09:12:49.166]      // while-condition  =>  TRUE
[09:12:49.166]      // while "1"  (timeout="50000")
[09:12:49.166]      // while-condition  =>  TRUE
[09:12:49.166]      // while "1"  (timeout="50000")
[09:12:49.167]      // while-condition  =>  TRUE
[09:12:49.167]      // while "1"  (timeout="50000")
[09:12:49.167]      // while-condition  =>  TRUE
[09:12:49.167]      // while "1"  (timeout="50000")
[09:12:49.167]      // while-condition  =>  TRUE
[09:12:49.168]      // while "1"  (timeout="50000")
[09:12:49.168]      // while-condition  =>  TRUE
[09:12:49.168]      // while "1"  (timeout="50000")
[09:12:49.168]      // while-condition  =>  TRUE
[09:12:49.169]      // while "1"  (timeout="50000")
[09:12:49.169]      // while-condition  =>  TRUE
[09:12:49.169]      // while "1"  (timeout="50000")
[09:12:49.169]      // while-condition  =>  TRUE
[09:12:49.169]      // while "1"  (timeout="50000")
[09:12:49.170]      // while-condition  =>  TRUE
[09:12:49.170]      // while "1"  (timeout="50000")
[09:12:49.170]      // while-condition  =>  TRUE
[09:12:49.170]      // while "1"  (timeout="50000")
[09:12:49.171]      // while-condition  =>  TRUE
[09:12:49.171]      // while "1"  (timeout="50000")
[09:12:49.171]      // while-condition  =>  TRUE
[09:12:49.171]      // while "1"  (timeout="50000")
[09:12:49.172]      // while-condition  =>  TRUE
[09:12:49.172]      // while "1"  (timeout="50000")
[09:12:49.172]      // while-condition  =>  TRUE
[09:12:49.172]      // while "1"  (timeout="50000")
[09:12:49.173]      // while-condition  =>  TRUE
[09:12:49.173]      // while "1"  (timeout="50000")
[09:12:49.173]      // while-condition  =>  TRUE
[09:12:49.173]      // while "1"  (timeout="50000")
[09:12:49.173]      // while-condition  =>  TRUE
[09:12:49.174]      // while "1"  (timeout="50000")
[09:12:49.174]      // while-condition  =>  TRUE
[09:12:49.174]      // while "1"  (timeout="50000")
[09:12:49.174]      // while-condition  =>  TRUE
[09:12:49.175]      // while "1"  (timeout="50000")
[09:12:49.175]      // while  =>  TIMEOUT
[09:12:49.175]      // end while "1"
[09:12:49.175]    </control>
[09:12:49.176]    <block atomic="false" info="">
[09:12:49.176]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:12:49.178]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:12:49.178]    </block>
[09:12:49.179]    <control if="" while="1" timeout="10000" info="">
[09:12:49.179]      // while "1"  (timeout="10000")
[09:12:49.179]      // while-condition  =>  TRUE
[09:12:49.179]      // while "1"  (timeout="10000")
[09:12:49.180]      // while-condition  =>  TRUE
[09:12:49.180]      // while "1"  (timeout="10000")
[09:12:49.180]      // while-condition  =>  TRUE
[09:12:49.181]      // while "1"  (timeout="10000")
[09:12:49.181]      // while-condition  =>  TRUE
[09:12:49.181]      // while "1"  (timeout="10000")
[09:12:49.182]      // while-condition  =>  TRUE
[09:12:49.182]      // while "1"  (timeout="10000")
[09:12:49.182]      // while-condition  =>  TRUE
[09:12:49.183]      // while "1"  (timeout="10000")
[09:12:49.184]      // while-condition  =>  TRUE
[09:12:49.184]      // while "1"  (timeout="10000")
[09:12:49.184]      // while-condition  =>  TRUE
[09:12:49.185]      // while "1"  (timeout="10000")
[09:12:49.185]      // while-condition  =>  TRUE
[09:12:49.185]      // while "1"  (timeout="10000")
[09:12:49.186]      // while-condition  =>  TRUE
[09:12:49.186]      // while "1"  (timeout="10000")
[09:12:49.186]      // while-condition  =>  TRUE
[09:12:49.187]      // while "1"  (timeout="10000")
[09:12:49.187]      // while-condition  =>  TRUE
[09:12:49.187]      // while "1"  (timeout="10000")
[09:12:49.188]      // while-condition  =>  TRUE
[09:12:49.188]      // while "1"  (timeout="10000")
[09:12:49.188]      // while-condition  =>  TRUE
[09:12:49.188]      // while "1"  (timeout="10000")
[09:12:49.189]      // while-condition  =>  TRUE
[09:12:49.189]      // while "1"  (timeout="10000")
[09:12:49.189]      // while-condition  =>  TRUE
[09:12:49.190]      // while "1"  (timeout="10000")
[09:12:49.190]      // while-condition  =>  TRUE
[09:12:49.190]      // while "1"  (timeout="10000")
[09:12:49.191]      // while-condition  =>  TRUE
[09:12:49.191]      // while "1"  (timeout="10000")
[09:12:49.191]      // while  =>  TIMEOUT
[09:12:49.191]      // end while "1"
[09:12:49.192]    </control>
[09:12:49.192]    <block atomic="true" info="">
[09:12:49.195]  
[09:12:49.195]  ! W001 : No atomic sequence support in debug unit
[09:12:49.195]  
[09:12:49.197]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:12:49.199]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:12:49.199]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:12:49.201]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:12:49.201]    </block>
[09:12:49.201]    <block atomic="false" info="">
[09:12:49.201]      __errorcontrol = 0x00000001;
[09:12:49.202]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:12:49.202]      ReadDP(0x0);
[09:12:49.204]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:12:49.204]      __errorcontrol = 0x00000000;
[09:12:49.204]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:12:49.205]    </block>
[09:12:49.205]  </sequence>
[09:12:49.205]  
[09:12:49.206]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:12:49.206]  
[09:12:49.206]  <debugvars>
[09:12:49.206]    // Pre-defined
[09:12:49.206]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:12:49.207]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:12:49.207]    __dp=0x00000000
[09:12:49.207]    __ap=0x00000000
[09:12:49.208]    __traceout=0x00000000      (Trace Disabled)
[09:12:49.208]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:12:49.208]    __FlashAddr=0x00000000
[09:12:49.209]    __FlashLen=0x00000000
[09:12:49.209]    __FlashArg=0x00000000
[09:12:49.209]    __FlashOp=0x00000000
[09:12:49.209]    __Result=0x00000000
[09:12:49.210]  </debugvars>
[09:12:49.210]  
[09:12:49.210]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:12:49.211]  </sequence>
[09:12:49.211]  
[09:12:49.216]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[09:12:49.216]  
[09:12:49.216]  <debugvars>
[09:12:49.216]    // Pre-defined
[09:12:49.217]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:12:49.217]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:12:49.217]    __dp=0x00000000
[09:12:49.218]    __ap=0x00000000
[09:12:49.218]    __traceout=0x00000000      (Trace Disabled)
[09:12:49.219]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:12:49.219]    __FlashAddr=0x00000000
[09:12:49.219]    __FlashLen=0x00000000
[09:12:49.220]    __FlashArg=0x00000000
[09:12:49.220]    __FlashOp=0x00000000
[09:12:49.220]    __Result=0x00000000
[09:12:49.221]  </debugvars>
[09:12:49.221]  
[09:12:49.221]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:12:49.222]    <block atomic="false" info="">
[09:12:49.222]      __var SW_DP_ABORT  = 0x0;
[09:12:49.222]        // -> [SW_DP_ABORT <= 0x00000000]
[09:12:49.223]      __var DP_CTRL_STAT = 0x4;
[09:12:49.223]        // -> [DP_CTRL_STAT <= 0x00000004]
[09:12:49.223]      __var DP_SELECT    = 0x8;
[09:12:49.224]        // -> [DP_SELECT <= 0x00000008]
[09:12:49.224]      __var powered_down = 0;
[09:12:49.224]        // -> [powered_down <= 0x00000000]
[09:12:49.225]      WriteDP(DP_SELECT, 0x00000000);
[09:12:49.227]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:12:49.227]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:12:49.229]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[09:12:49.229]        // -> [powered_down <= 0x00000001]
[09:12:49.229]    </block>
[09:12:49.230]    <control if="powered_down" while="" timeout="0" info="">
[09:12:49.230]      // if-block "powered_down"
[09:12:49.230]        // =>  TRUE
[09:12:49.231]      <block atomic="false" info="">
[09:12:49.231]        WriteDP(DP_CTRL_STAT, 0x50000000);
[09:12:49.234]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[09:12:49.234]      </block>
[09:12:49.235]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[09:12:49.235]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[09:12:49.237]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:12:49.237]        // while-condition  =>  FALSE
[09:12:49.238]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[09:12:49.238]      </control>
[09:12:49.238]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[09:12:49.239]        // if-block "(__protocol & 0xFFFF) == 1"
[09:12:49.239]          // =>  FALSE
[09:12:49.239]        // skip if-block "(__protocol & 0xFFFF) == 1"
[09:12:49.239]      </control>
[09:12:49.240]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[09:12:49.240]        // if-block "(__protocol & 0xFFFF) == 2"
[09:12:49.240]          // =>  TRUE
[09:12:49.241]        <block atomic="false" info="">
[09:12:49.241]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[09:12:49.243]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[09:12:49.243]          WriteDP(SW_DP_ABORT, 0x0000001E);
[09:12:49.246]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[09:12:49.246]        </block>
[09:12:49.246]        // end if-block "(__protocol & 0xFFFF) == 2"
[09:12:49.247]      </control>
[09:12:49.247]      // end if-block "powered_down"
[09:12:49.247]    </control>
[09:12:49.247]  </sequence>
[09:12:49.248]  
[09:12:49.352]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:12:49.352]  
[09:12:49.353]  <debugvars>
[09:12:49.353]    // Pre-defined
[09:12:49.353]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:12:49.353]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:12:49.354]    __dp=0x00000000
[09:12:49.354]    __ap=0x00000000
[09:12:49.354]    __traceout=0x00000000      (Trace Disabled)
[09:12:49.354]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:12:49.355]    __FlashAddr=0x00000000
[09:12:49.355]    __FlashLen=0x00000000
[09:12:49.355]    __FlashArg=0x00000000
[09:12:49.356]    __FlashOp=0x00000000
[09:12:49.356]    __Result=0x00000000
[09:12:49.356]  </debugvars>
[09:12:49.356]  
[09:12:49.357]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:12:49.357]    <block atomic="true" info="">
[09:12:49.365]  
[09:12:49.365]  ! W001 : No atomic sequence support in debug unit
[09:12:49.365]  
[09:12:49.369]      __var DP_R_IDCODE    = 0x0;
[09:12:49.369]        // -> [DP_R_IDCODE <= 0x00000000]
[09:12:49.369]      __var DP_W_ABORT    = 0x0;
[09:12:49.369]        // -> [DP_W_ABORT <= 0x00000000]
[09:12:49.369]      __var DP_CTRLSTAT = 0x4;
[09:12:49.370]        // -> [DP_CTRLSTAT <= 0x00000004]
[09:12:49.370]      __var DP_W_SELECT    = 0x8;
[09:12:49.370]        // -> [DP_W_SELECT <= 0x00000008]
[09:12:49.370]      __var AP_TAR		= 0x4;
[09:12:49.371]        // -> [AP_TAR <= 0x00000004]
[09:12:49.371]      __var AP_BD0		= 0x0;
[09:12:49.371]        // -> [AP_BD0 <= 0x00000000]
[09:12:49.371]      __var AP_BD1		= 0x4;
[09:12:49.372]        // -> [AP_BD1 <= 0x00000004]
[09:12:49.372]      __var AP_BD2		= 0x8;
[09:12:49.372]        // -> [AP_BD2 <= 0x00000008]
[09:12:49.372]      __var PCWithinFlash = 0;
[09:12:49.372]        // -> [PCWithinFlash <= 0x00000000]
[09:12:49.373]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:12:49.379]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.380]    </block>
[09:12:49.380]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:12:49.380]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:12:49.386]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.386]      // while-condition  =>  FALSE
[09:12:49.387]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:12:49.387]    </control>
[09:12:49.387]    <block atomic="true" info="">
[09:12:49.393]  
[09:12:49.393]  ! W001 : No atomic sequence support in debug unit
[09:12:49.393]  
[09:12:49.396]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:12:49.400]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:12:49.401]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:12:49.403]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.404]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:12:49.405]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:12:49.405]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:12:49.409]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.410]    </block>
[09:12:49.411]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:12:49.411]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.413]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.414]      // while-condition  =>  TRUE
[09:12:49.414]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.416]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.417]      // while-condition  =>  TRUE
[09:12:49.417]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.419]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.420]      // while-condition  =>  TRUE
[09:12:49.420]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.422]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.423]      // while-condition  =>  TRUE
[09:12:49.423]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.425]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.426]      // while-condition  =>  TRUE
[09:12:49.426]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.428]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.429]      // while-condition  =>  TRUE
[09:12:49.429]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.431]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.432]      // while-condition  =>  TRUE
[09:12:49.432]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.434]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.435]      // while-condition  =>  TRUE
[09:12:49.435]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.437]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.438]      // while-condition  =>  TRUE
[09:12:49.438]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.440]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.441]      // while-condition  =>  TRUE
[09:12:49.441]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.443]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.444]      // while-condition  =>  TRUE
[09:12:49.444]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.446]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.447]      // while-condition  =>  TRUE
[09:12:49.447]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.449]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.450]      // while-condition  =>  TRUE
[09:12:49.450]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.452]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.453]      // while-condition  =>  TRUE
[09:12:49.453]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.455]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.456]      // while-condition  =>  TRUE
[09:12:49.456]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.458]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.459]      // while-condition  =>  TRUE
[09:12:49.459]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.461]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.462]      // while-condition  =>  TRUE
[09:12:49.462]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.464]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.465]      // while-condition  =>  TRUE
[09:12:49.465]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.467]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.468]      // while-condition  =>  TRUE
[09:12:49.468]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.470]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.471]      // while-condition  =>  TRUE
[09:12:49.471]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.473]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.474]      // while-condition  =>  TRUE
[09:12:49.474]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.476]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.477]      // while-condition  =>  TRUE
[09:12:49.477]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.479]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.480]      // while-condition  =>  TRUE
[09:12:49.480]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.482]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.483]      // while-condition  =>  TRUE
[09:12:49.483]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.485]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.486]      // while-condition  =>  TRUE
[09:12:49.486]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.488]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.489]      // while-condition  =>  TRUE
[09:12:49.489]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.491]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.492]      // while-condition  =>  TRUE
[09:12:49.492]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.494]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.495]      // while-condition  =>  TRUE
[09:12:49.495]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.497]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.498]      // while-condition  =>  TRUE
[09:12:49.498]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.500]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.501]      // while-condition  =>  TRUE
[09:12:49.501]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.503]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.504]      // while-condition  =>  TRUE
[09:12:49.504]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.506]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.507]      // while-condition  =>  TRUE
[09:12:49.507]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.509]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.510]      // while-condition  =>  TRUE
[09:12:49.510]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.512]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.513]      // while-condition  =>  TRUE
[09:12:49.513]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.515]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.516]      // while-condition  =>  TRUE
[09:12:49.516]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.518]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.519]      // while-condition  =>  TRUE
[09:12:49.519]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:49.519]      // while  =>  TIMEOUT
[09:12:49.520]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:12:49.520]    </control>
[09:12:49.520]    <block atomic="false" info="">
[09:12:49.520]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:12:49.523]        // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:12:49.523]        // -> [PCWithinFlash <= 0x00000000]
[09:12:49.523]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:12:49.525]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:12:49.526]    </block>
[09:12:49.526]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:12:49.526]      // if-block "PCWithinFlash == 0"
[09:12:49.527]        // =>  TRUE
[09:12:49.527]      // end if-block "PCWithinFlash == 0"
[09:12:49.527]    </control>
[09:12:49.527]  </sequence>
[09:12:49.527]  
[09:12:49.574]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[09:12:49.574]  
[09:12:49.574]  <debugvars>
[09:12:49.575]    // Pre-defined
[09:12:49.575]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:12:49.575]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:12:49.576]    __dp=0x00000000
[09:12:49.576]    __ap=0x00000000
[09:12:49.576]    __traceout=0x00000000      (Trace Disabled)
[09:12:49.576]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:12:49.577]    __FlashAddr=0x00000000
[09:12:49.577]    __FlashLen=0x00000000
[09:12:49.577]    __FlashArg=0x00000000
[09:12:49.577]    __FlashOp=0x00000000
[09:12:49.577]    __Result=0x00000000
[09:12:49.578]  </debugvars>
[09:12:49.578]  
[09:12:49.578]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[09:12:49.578]    <block atomic="false" info="">
[09:12:49.579]    </block>
[09:12:49.579]  </sequence>
[09:12:49.579]  
[09:12:49.582]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[09:12:49.582]  
[09:12:49.582]  <debugvars>
[09:12:49.582]    // Pre-defined
[09:12:49.582]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:12:49.583]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:12:49.583]    __dp=0x00000000
[09:12:49.583]    __ap=0x00000000
[09:12:49.583]    __traceout=0x00000000      (Trace Disabled)
[09:12:49.584]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:12:49.584]    __FlashAddr=0x00000000
[09:12:49.584]    __FlashLen=0x00000000
[09:12:49.584]    __FlashArg=0x00000000
[09:12:49.585]    __FlashOp=0x00000000
[09:12:49.585]    __Result=0x00000000
[09:12:49.585]  </debugvars>
[09:12:49.585]  
[09:12:49.586]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:12:49.586]    <block atomic="false" info="">
[09:12:49.586]      __var nReset      = 0x80;
[09:12:49.586]        // -> [nReset <= 0x00000080]
[09:12:49.587]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:12:49.589]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:12:49.589]    </block>
[09:12:49.589]    <control if="" while="1" timeout="50000" info="">
[09:12:49.589]      // while "1"  (timeout="50000")
[09:12:49.590]      // while-condition  =>  TRUE
[09:12:49.590]      // while "1"  (timeout="50000")
[09:12:49.590]      // while-condition  =>  TRUE
[09:12:49.590]      // while "1"  (timeout="50000")
[09:12:49.591]      // while-condition  =>  TRUE
[09:12:49.591]      // while "1"  (timeout="50000")
[09:12:49.591]      // while-condition  =>  TRUE
[09:12:49.591]      // while "1"  (timeout="50000")
[09:12:49.592]      // while-condition  =>  TRUE
[09:12:49.592]      // while "1"  (timeout="50000")
[09:12:49.592]      // while-condition  =>  TRUE
[09:12:49.592]      // while "1"  (timeout="50000")
[09:12:49.593]      // while-condition  =>  TRUE
[09:12:49.593]      // while "1"  (timeout="50000")
[09:12:49.593]      // while-condition  =>  TRUE
[09:12:49.593]      // while "1"  (timeout="50000")
[09:12:49.594]      // while-condition  =>  TRUE
[09:12:49.594]      // while "1"  (timeout="50000")
[09:12:49.594]      // while-condition  =>  TRUE
[09:12:49.594]      // while "1"  (timeout="50000")
[09:12:49.595]      // while-condition  =>  TRUE
[09:12:49.595]      // while "1"  (timeout="50000")
[09:12:49.595]      // while-condition  =>  TRUE
[09:12:49.595]      // while "1"  (timeout="50000")
[09:12:49.595]      // while-condition  =>  TRUE
[09:12:49.596]      // while "1"  (timeout="50000")
[09:12:49.596]      // while-condition  =>  TRUE
[09:12:49.596]      // while "1"  (timeout="50000")
[09:12:49.596]      // while-condition  =>  TRUE
[09:12:49.597]      // while "1"  (timeout="50000")
[09:12:49.597]      // while-condition  =>  TRUE
[09:12:49.597]      // while "1"  (timeout="50000")
[09:12:49.597]      // while-condition  =>  TRUE
[09:12:49.597]      // while "1"  (timeout="50000")
[09:12:49.598]      // while-condition  =>  TRUE
[09:12:49.598]      // while "1"  (timeout="50000")
[09:12:49.598]      // while-condition  =>  TRUE
[09:12:49.598]      // while "1"  (timeout="50000")
[09:12:49.598]      // while-condition  =>  TRUE
[09:12:49.599]      // while "1"  (timeout="50000")
[09:12:49.599]      // while-condition  =>  TRUE
[09:12:49.599]      // while "1"  (timeout="50000")
[09:12:49.599]      // while-condition  =>  TRUE
[09:12:49.599]      // while "1"  (timeout="50000")
[09:12:49.600]      // while-condition  =>  TRUE
[09:12:49.600]      // while "1"  (timeout="50000")
[09:12:49.600]      // while-condition  =>  TRUE
[09:12:49.600]      // while "1"  (timeout="50000")
[09:12:49.600]      // while-condition  =>  TRUE
[09:12:49.601]      // while "1"  (timeout="50000")
[09:12:49.601]      // while-condition  =>  TRUE
[09:12:49.601]      // while "1"  (timeout="50000")
[09:12:49.601]      // while-condition  =>  TRUE
[09:12:49.601]      // while "1"  (timeout="50000")
[09:12:49.602]      // while-condition  =>  TRUE
[09:12:49.602]      // while "1"  (timeout="50000")
[09:12:49.602]      // while-condition  =>  TRUE
[09:12:49.602]      // while "1"  (timeout="50000")
[09:12:49.602]      // while-condition  =>  TRUE
[09:12:49.603]      // while "1"  (timeout="50000")
[09:12:49.603]      // while-condition  =>  TRUE
[09:12:49.603]      // while "1"  (timeout="50000")
[09:12:49.603]      // while-condition  =>  TRUE
[09:12:49.604]      // while "1"  (timeout="50000")
[09:12:49.604]      // while-condition  =>  TRUE
[09:12:49.604]      // while "1"  (timeout="50000")
[09:12:49.604]      // while-condition  =>  TRUE
[09:12:49.604]      // while "1"  (timeout="50000")
[09:12:49.605]      // while-condition  =>  TRUE
[09:12:49.605]      // while "1"  (timeout="50000")
[09:12:49.605]      // while-condition  =>  TRUE
[09:12:49.605]      // while "1"  (timeout="50000")
[09:12:49.605]      // while-condition  =>  TRUE
[09:12:49.606]      // while "1"  (timeout="50000")
[09:12:49.606]      // while-condition  =>  TRUE
[09:12:49.606]      // while "1"  (timeout="50000")
[09:12:49.606]      // while-condition  =>  TRUE
[09:12:49.606]      // while "1"  (timeout="50000")
[09:12:49.607]      // while-condition  =>  TRUE
[09:12:49.607]      // while "1"  (timeout="50000")
[09:12:49.607]      // while-condition  =>  TRUE
[09:12:49.607]      // while "1"  (timeout="50000")
[09:12:49.607]      // while-condition  =>  TRUE
[09:12:49.608]      // while "1"  (timeout="50000")
[09:12:49.608]      // while-condition  =>  TRUE
[09:12:49.608]      // while "1"  (timeout="50000")
[09:12:49.608]      // while-condition  =>  TRUE
[09:12:49.609]      // while "1"  (timeout="50000")
[09:12:49.609]      // while-condition  =>  TRUE
[09:12:49.609]      // while "1"  (timeout="50000")
[09:12:49.609]      // while-condition  =>  TRUE
[09:12:49.609]      // while "1"  (timeout="50000")
[09:12:49.610]      // while-condition  =>  TRUE
[09:12:49.610]      // while "1"  (timeout="50000")
[09:12:49.610]      // while-condition  =>  TRUE
[09:12:49.611]      // while "1"  (timeout="50000")
[09:12:49.611]      // while-condition  =>  TRUE
[09:12:49.611]      // while "1"  (timeout="50000")
[09:12:49.611]      // while-condition  =>  TRUE
[09:12:49.612]      // while "1"  (timeout="50000")
[09:12:49.612]      // while-condition  =>  TRUE
[09:12:49.612]      // while "1"  (timeout="50000")
[09:12:49.612]      // while-condition  =>  TRUE
[09:12:49.612]      // while "1"  (timeout="50000")
[09:12:49.613]      // while-condition  =>  TRUE
[09:12:49.613]      // while "1"  (timeout="50000")
[09:12:49.613]      // while-condition  =>  TRUE
[09:12:49.613]      // while "1"  (timeout="50000")
[09:12:49.614]      // while-condition  =>  TRUE
[09:12:49.614]      // while "1"  (timeout="50000")
[09:12:49.614]      // while-condition  =>  TRUE
[09:12:49.614]      // while "1"  (timeout="50000")
[09:12:49.615]      // while-condition  =>  TRUE
[09:12:49.615]      // while "1"  (timeout="50000")
[09:12:49.615]      // while-condition  =>  TRUE
[09:12:49.615]      // while "1"  (timeout="50000")
[09:12:49.616]      // while-condition  =>  TRUE
[09:12:49.616]      // while "1"  (timeout="50000")
[09:12:49.616]      // while-condition  =>  TRUE
[09:12:49.616]      // while "1"  (timeout="50000")
[09:12:49.616]      // while-condition  =>  TRUE
[09:12:49.617]      // while "1"  (timeout="50000")
[09:12:49.617]      // while-condition  =>  TRUE
[09:12:49.617]      // while "1"  (timeout="50000")
[09:12:49.617]      // while-condition  =>  TRUE
[09:12:49.618]      // while "1"  (timeout="50000")
[09:12:49.618]      // while-condition  =>  TRUE
[09:12:49.618]      // while "1"  (timeout="50000")
[09:12:49.618]      // while-condition  =>  TRUE
[09:12:49.618]      // while "1"  (timeout="50000")
[09:12:49.619]      // while-condition  =>  TRUE
[09:12:49.619]      // while "1"  (timeout="50000")
[09:12:49.619]      // while-condition  =>  TRUE
[09:12:49.619]      // while "1"  (timeout="50000")
[09:12:49.619]      // while-condition  =>  TRUE
[09:12:49.620]      // while "1"  (timeout="50000")
[09:12:49.620]      // while-condition  =>  TRUE
[09:12:49.620]      // while "1"  (timeout="50000")
[09:12:49.620]      // while-condition  =>  TRUE
[09:12:49.620]      // while "1"  (timeout="50000")
[09:12:49.621]      // while-condition  =>  TRUE
[09:12:49.621]      // while "1"  (timeout="50000")
[09:12:49.621]      // while-condition  =>  TRUE
[09:12:49.621]      // while "1"  (timeout="50000")
[09:12:49.622]      // while-condition  =>  TRUE
[09:12:49.622]      // while "1"  (timeout="50000")
[09:12:49.622]      // while-condition  =>  TRUE
[09:12:49.622]      // while "1"  (timeout="50000")
[09:12:49.622]      // while-condition  =>  TRUE
[09:12:49.623]      // while "1"  (timeout="50000")
[09:12:49.623]      // while-condition  =>  TRUE
[09:12:49.623]      // while "1"  (timeout="50000")
[09:12:49.623]      // while-condition  =>  TRUE
[09:12:49.623]      // while "1"  (timeout="50000")
[09:12:49.624]      // while-condition  =>  TRUE
[09:12:49.624]      // while "1"  (timeout="50000")
[09:12:49.624]      // while-condition  =>  TRUE
[09:12:49.624]      // while "1"  (timeout="50000")
[09:12:49.624]      // while-condition  =>  TRUE
[09:12:49.625]      // while "1"  (timeout="50000")
[09:12:49.625]      // while-condition  =>  TRUE
[09:12:49.625]      // while "1"  (timeout="50000")
[09:12:49.625]      // while-condition  =>  TRUE
[09:12:49.625]      // while "1"  (timeout="50000")
[09:12:49.626]      // while-condition  =>  TRUE
[09:12:49.626]      // while "1"  (timeout="50000")
[09:12:49.626]      // while-condition  =>  TRUE
[09:12:49.627]      // while "1"  (timeout="50000")
[09:12:49.627]      // while-condition  =>  TRUE
[09:12:49.627]      // while "1"  (timeout="50000")
[09:12:49.627]      // while-condition  =>  TRUE
[09:12:49.628]      // while "1"  (timeout="50000")
[09:12:49.628]      // while-condition  =>  TRUE
[09:12:49.628]      // while "1"  (timeout="50000")
[09:12:49.628]      // while-condition  =>  TRUE
[09:12:49.629]      // while "1"  (timeout="50000")
[09:12:49.629]      // while-condition  =>  TRUE
[09:12:49.629]      // while "1"  (timeout="50000")
[09:12:49.629]      // while-condition  =>  TRUE
[09:12:49.629]      // while "1"  (timeout="50000")
[09:12:49.630]      // while-condition  =>  TRUE
[09:12:49.631]      // while "1"  (timeout="50000")
[09:12:49.631]      // while-condition  =>  TRUE
[09:12:49.631]      // while "1"  (timeout="50000")
[09:12:49.631]      // while-condition  =>  TRUE
[09:12:49.632]      // while "1"  (timeout="50000")
[09:12:49.632]      // while-condition  =>  TRUE
[09:12:49.632]      // while "1"  (timeout="50000")
[09:12:49.632]      // while-condition  =>  TRUE
[09:12:49.633]      // while "1"  (timeout="50000")
[09:12:49.633]      // while-condition  =>  TRUE
[09:12:49.633]      // while "1"  (timeout="50000")
[09:12:49.633]      // while-condition  =>  TRUE
[09:12:49.634]      // while "1"  (timeout="50000")
[09:12:49.634]      // while-condition  =>  TRUE
[09:12:49.634]      // while "1"  (timeout="50000")
[09:12:49.634]      // while-condition  =>  TRUE
[09:12:49.634]      // while "1"  (timeout="50000")
[09:12:49.635]      // while-condition  =>  TRUE
[09:12:49.635]      // while "1"  (timeout="50000")
[09:12:49.635]      // while-condition  =>  TRUE
[09:12:49.635]      // while "1"  (timeout="50000")
[09:12:49.636]      // while-condition  =>  TRUE
[09:12:49.636]      // while "1"  (timeout="50000")
[09:12:49.636]      // while-condition  =>  TRUE
[09:12:49.636]      // while "1"  (timeout="50000")
[09:12:49.637]      // while-condition  =>  TRUE
[09:12:49.637]      // while "1"  (timeout="50000")
[09:12:49.637]      // while-condition  =>  TRUE
[09:12:49.637]      // while "1"  (timeout="50000")
[09:12:49.637]      // while-condition  =>  TRUE
[09:12:49.638]      // while "1"  (timeout="50000")
[09:12:49.638]      // while-condition  =>  TRUE
[09:12:49.638]      // while "1"  (timeout="50000")
[09:12:49.638]      // while-condition  =>  TRUE
[09:12:49.639]      // while "1"  (timeout="50000")
[09:12:49.639]      // while-condition  =>  TRUE
[09:12:49.639]      // while "1"  (timeout="50000")
[09:12:49.639]      // while-condition  =>  TRUE
[09:12:49.639]      // while "1"  (timeout="50000")
[09:12:49.640]      // while-condition  =>  TRUE
[09:12:49.640]      // while "1"  (timeout="50000")
[09:12:49.640]      // while-condition  =>  TRUE
[09:12:49.640]      // while "1"  (timeout="50000")
[09:12:49.641]      // while-condition  =>  TRUE
[09:12:49.641]      // while "1"  (timeout="50000")
[09:12:49.641]      // while-condition  =>  TRUE
[09:12:49.641]      // while "1"  (timeout="50000")
[09:12:49.642]      // while-condition  =>  TRUE
[09:12:49.642]      // while "1"  (timeout="50000")
[09:12:49.642]      // while-condition  =>  TRUE
[09:12:49.642]      // while "1"  (timeout="50000")
[09:12:49.642]      // while-condition  =>  TRUE
[09:12:49.643]      // while "1"  (timeout="50000")
[09:12:49.643]      // while-condition  =>  TRUE
[09:12:49.643]      // while "1"  (timeout="50000")
[09:12:49.643]      // while-condition  =>  TRUE
[09:12:49.643]      // while "1"  (timeout="50000")
[09:12:49.644]      // while-condition  =>  TRUE
[09:12:49.644]      // while "1"  (timeout="50000")
[09:12:49.644]      // while  =>  TIMEOUT
[09:12:49.644]      // end while "1"
[09:12:49.645]    </control>
[09:12:49.645]    <block atomic="false" info="">
[09:12:49.645]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:12:49.647]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:12:49.647]    </block>
[09:12:49.647]    <control if="" while="1" timeout="10000" info="">
[09:12:49.648]      // while "1"  (timeout="10000")
[09:12:49.648]      // while-condition  =>  TRUE
[09:12:49.648]      // while "1"  (timeout="10000")
[09:12:49.648]      // while-condition  =>  TRUE
[09:12:49.648]      // while "1"  (timeout="10000")
[09:12:49.649]      // while-condition  =>  TRUE
[09:12:49.649]      // while "1"  (timeout="10000")
[09:12:49.649]      // while-condition  =>  TRUE
[09:12:49.649]      // while "1"  (timeout="10000")
[09:12:49.650]      // while-condition  =>  TRUE
[09:12:49.650]      // while "1"  (timeout="10000")
[09:12:49.650]      // while-condition  =>  TRUE
[09:12:49.650]      // while "1"  (timeout="10000")
[09:12:49.651]      // while-condition  =>  TRUE
[09:12:49.651]      // while "1"  (timeout="10000")
[09:12:49.651]      // while-condition  =>  TRUE
[09:12:49.651]      // while "1"  (timeout="10000")
[09:12:49.652]      // while-condition  =>  TRUE
[09:12:49.652]      // while "1"  (timeout="10000")
[09:12:49.652]      // while-condition  =>  TRUE
[09:12:49.652]      // while "1"  (timeout="10000")
[09:12:49.653]      // while-condition  =>  TRUE
[09:12:49.653]      // while "1"  (timeout="10000")
[09:12:49.653]      // while-condition  =>  TRUE
[09:12:49.653]      // while "1"  (timeout="10000")
[09:12:49.654]      // while-condition  =>  TRUE
[09:12:49.654]      // while "1"  (timeout="10000")
[09:12:49.654]      // while-condition  =>  TRUE
[09:12:49.654]      // while "1"  (timeout="10000")
[09:12:49.654]      // while-condition  =>  TRUE
[09:12:49.655]      // while "1"  (timeout="10000")
[09:12:49.655]      // while-condition  =>  TRUE
[09:12:49.655]      // while "1"  (timeout="10000")
[09:12:49.655]      // while-condition  =>  TRUE
[09:12:49.656]      // while "1"  (timeout="10000")
[09:12:49.656]      // while-condition  =>  TRUE
[09:12:49.656]      // while "1"  (timeout="10000")
[09:12:49.656]      // while-condition  =>  TRUE
[09:12:49.657]      // while "1"  (timeout="10000")
[09:12:49.657]      // while-condition  =>  TRUE
[09:12:49.657]      // while "1"  (timeout="10000")
[09:12:49.657]      // while-condition  =>  TRUE
[09:12:49.657]      // while "1"  (timeout="10000")
[09:12:49.658]      // while-condition  =>  TRUE
[09:12:49.658]      // while "1"  (timeout="10000")
[09:12:49.658]      // while-condition  =>  TRUE
[09:12:49.658]      // while "1"  (timeout="10000")
[09:12:49.659]      // while-condition  =>  TRUE
[09:12:49.659]      // while "1"  (timeout="10000")
[09:12:49.659]      // while-condition  =>  TRUE
[09:12:49.659]      // while "1"  (timeout="10000")
[09:12:49.660]      // while-condition  =>  TRUE
[09:12:49.660]      // while "1"  (timeout="10000")
[09:12:49.660]      // while  =>  TIMEOUT
[09:12:49.660]      // end while "1"
[09:12:49.661]    </control>
[09:12:49.661]    <block atomic="true" info="">
[09:12:49.664]  
[09:12:49.664]  ! W001 : No atomic sequence support in debug unit
[09:12:49.664]  
[09:12:49.666]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:12:49.668]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:12:49.668]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:12:49.670]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:12:49.670]    </block>
[09:12:49.671]    <block atomic="false" info="">
[09:12:49.671]      __errorcontrol = 0x00000001;
[09:12:49.672]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:12:49.672]      ReadDP(0x0);
[09:12:49.674]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:12:49.674]      __errorcontrol = 0x00000000;
[09:12:49.675]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:12:49.675]    </block>
[09:12:49.676]  </sequence>
[09:12:49.677]  
[09:12:49.681]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[09:12:49.681]  
[09:12:49.682]  <debugvars>
[09:12:49.682]    // Pre-defined
[09:12:49.682]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:12:49.683]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:12:49.683]    __dp=0x00000000
[09:12:49.684]    __ap=0x00000000
[09:12:49.684]    __traceout=0x00000000      (Trace Disabled)
[09:12:49.684]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:12:49.685]    __FlashAddr=0x00000000
[09:12:49.685]    __FlashLen=0x00000000
[09:12:49.686]    __FlashArg=0x00000000
[09:12:49.686]    __FlashOp=0x00000000
[09:12:49.686]    __Result=0x00000000
[09:12:49.687]  </debugvars>
[09:12:49.687]  
[09:12:49.687]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[09:12:49.688]    <block atomic="false" info="">
[09:12:49.688]    </block>
[09:12:49.688]  </sequence>
[09:12:49.688]  
[09:12:49.919]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[09:12:49.919]  
[09:12:49.919]  <debugvars>
[09:12:49.920]    // Pre-defined
[09:12:49.920]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:12:49.922]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:12:49.922]    __dp=0x00000000
[09:12:49.923]    __ap=0x00000000
[09:12:49.923]    __traceout=0x00000000      (Trace Disabled)
[09:12:49.924]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:12:49.925]    __FlashAddr=0x00000000
[09:12:49.925]    __FlashLen=0x00000000
[09:12:49.925]    __FlashArg=0x00000000
[09:12:49.926]    __FlashOp=0x00000000
[09:12:49.926]    __Result=0x00000000
[09:12:49.927]  </debugvars>
[09:12:49.927]  
[09:12:49.928]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[09:12:49.928]    <block atomic="false" info="">
[09:12:49.928]      Sequence("ResetHardware");
[09:12:49.929]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:12:49.929]          <block atomic="false" info="">
[09:12:49.929]            __var nReset      = 0x80;
[09:12:49.931]              // -> [nReset <= 0x00000080]
[09:12:49.931]            DAP_SWJ_Pins(0x00, nReset, 0);
[09:12:49.933]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:12:49.934]          </block>
[09:12:49.934]          <control if="" while="1" timeout="50000" info="">
[09:12:49.935]            // while "1"  (timeout="50000")
[09:12:49.935]            // while-condition  =>  TRUE
[09:12:49.935]            // while "1"  (timeout="50000")
[09:12:49.935]            // while-condition  =>  TRUE
[09:12:49.935]            // while "1"  (timeout="50000")
[09:12:49.935]            // while-condition  =>  TRUE
[09:12:49.936]            // while "1"  (timeout="50000")
[09:12:49.936]            // while-condition  =>  TRUE
[09:12:49.936]            // while "1"  (timeout="50000")
[09:12:49.936]            // while-condition  =>  TRUE
[09:12:49.937]            // while "1"  (timeout="50000")
[09:12:49.937]            // while-condition  =>  TRUE
[09:12:49.938]            // while "1"  (timeout="50000")
[09:12:49.938]            // while-condition  =>  TRUE
[09:12:49.938]            // while "1"  (timeout="50000")
[09:12:49.938]            // while-condition  =>  TRUE
[09:12:49.939]            // while "1"  (timeout="50000")
[09:12:49.939]            // while-condition  =>  TRUE
[09:12:49.939]            // while "1"  (timeout="50000")
[09:12:49.939]            // while-condition  =>  TRUE
[09:12:49.939]            // while "1"  (timeout="50000")
[09:12:49.940]            // while-condition  =>  TRUE
[09:12:49.940]            // while "1"  (timeout="50000")
[09:12:49.940]            // while-condition  =>  TRUE
[09:12:49.940]            // while "1"  (timeout="50000")
[09:12:49.941]            // while-condition  =>  TRUE
[09:12:49.941]            // while "1"  (timeout="50000")
[09:12:49.942]            // while-condition  =>  TRUE
[09:12:49.942]            // while "1"  (timeout="50000")
[09:12:49.942]            // while-condition  =>  TRUE
[09:12:49.942]            // while "1"  (timeout="50000")
[09:12:49.943]            // while-condition  =>  TRUE
[09:12:49.943]            // while "1"  (timeout="50000")
[09:12:49.943]            // while-condition  =>  TRUE
[09:12:49.943]            // while "1"  (timeout="50000")
[09:12:49.943]            // while-condition  =>  TRUE
[09:12:49.943]            // while "1"  (timeout="50000")
[09:12:49.943]            // while-condition  =>  TRUE
[09:12:49.944]            // while "1"  (timeout="50000")
[09:12:49.944]            // while-condition  =>  TRUE
[09:12:49.944]            // while "1"  (timeout="50000")
[09:12:49.944]            // while-condition  =>  TRUE
[09:12:49.945]            // while "1"  (timeout="50000")
[09:12:49.945]            // while-condition  =>  TRUE
[09:12:49.945]            // while "1"  (timeout="50000")
[09:12:49.945]            // while-condition  =>  TRUE
[09:12:49.945]            // while "1"  (timeout="50000")
[09:12:49.946]            // while-condition  =>  TRUE
[09:12:49.946]            // while "1"  (timeout="50000")
[09:12:49.946]            // while-condition  =>  TRUE
[09:12:49.947]            // while "1"  (timeout="50000")
[09:12:49.947]            // while-condition  =>  TRUE
[09:12:49.947]            // while "1"  (timeout="50000")
[09:12:49.947]            // while-condition  =>  TRUE
[09:12:49.947]            // while "1"  (timeout="50000")
[09:12:49.947]            // while-condition  =>  TRUE
[09:12:49.948]            // while "1"  (timeout="50000")
[09:12:49.948]            // while-condition  =>  TRUE
[09:12:49.948]            // while "1"  (timeout="50000")
[09:12:49.948]            // while-condition  =>  TRUE
[09:12:49.948]            // while "1"  (timeout="50000")
[09:12:49.949]            // while-condition  =>  TRUE
[09:12:49.949]            // while "1"  (timeout="50000")
[09:12:49.949]            // while-condition  =>  TRUE
[09:12:49.949]            // while "1"  (timeout="50000")
[09:12:49.949]            // while-condition  =>  TRUE
[09:12:49.949]            // while "1"  (timeout="50000")
[09:12:49.949]            // while-condition  =>  TRUE
[09:12:49.950]            // while "1"  (timeout="50000")
[09:12:49.950]            // while-condition  =>  TRUE
[09:12:49.950]            // while "1"  (timeout="50000")
[09:12:49.950]            // while-condition  =>  TRUE
[09:12:49.950]            // while "1"  (timeout="50000")
[09:12:49.951]            // while-condition  =>  TRUE
[09:12:49.951]            // while "1"  (timeout="50000")
[09:12:49.951]            // while-condition  =>  TRUE
[09:12:49.952]            // while "1"  (timeout="50000")
[09:12:49.952]            // while-condition  =>  TRUE
[09:12:49.952]            // while "1"  (timeout="50000")
[09:12:49.952]            // while-condition  =>  TRUE
[09:12:49.952]            // while "1"  (timeout="50000")
[09:12:49.953]            // while-condition  =>  TRUE
[09:12:49.953]            // while "1"  (timeout="50000")
[09:12:49.953]            // while-condition  =>  TRUE
[09:12:49.953]            // while "1"  (timeout="50000")
[09:12:49.953]            // while-condition  =>  TRUE
[09:12:49.954]            // while "1"  (timeout="50000")
[09:12:49.954]            // while-condition  =>  TRUE
[09:12:49.954]            // while "1"  (timeout="50000")
[09:12:49.954]            // while-condition  =>  TRUE
[09:12:49.954]            // while "1"  (timeout="50000")
[09:12:49.955]            // while-condition  =>  TRUE
[09:12:49.955]            // while "1"  (timeout="50000")
[09:12:49.955]            // while-condition  =>  TRUE
[09:12:49.955]            // while "1"  (timeout="50000")
[09:12:49.955]            // while-condition  =>  TRUE
[09:12:49.956]            // while "1"  (timeout="50000")
[09:12:49.956]            // while-condition  =>  TRUE
[09:12:49.956]            // while "1"  (timeout="50000")
[09:12:49.956]            // while-condition  =>  TRUE
[09:12:49.956]            // while "1"  (timeout="50000")
[09:12:49.957]            // while-condition  =>  TRUE
[09:12:49.957]            // while "1"  (timeout="50000")
[09:12:49.957]            // while-condition  =>  TRUE
[09:12:49.957]            // while "1"  (timeout="50000")
[09:12:49.957]            // while-condition  =>  TRUE
[09:12:49.957]            // while "1"  (timeout="50000")
[09:12:49.958]            // while-condition  =>  TRUE
[09:12:49.958]            // while "1"  (timeout="50000")
[09:12:49.958]            // while-condition  =>  TRUE
[09:12:49.958]            // while "1"  (timeout="50000")
[09:12:49.958]            // while-condition  =>  TRUE
[09:12:49.959]            // while "1"  (timeout="50000")
[09:12:49.959]            // while-condition  =>  TRUE
[09:12:49.959]            // while "1"  (timeout="50000")
[09:12:49.959]            // while-condition  =>  TRUE
[09:12:49.959]            // while "1"  (timeout="50000")
[09:12:49.959]            // while-condition  =>  TRUE
[09:12:49.959]            // while "1"  (timeout="50000")
[09:12:49.959]            // while-condition  =>  TRUE
[09:12:49.960]            // while "1"  (timeout="50000")
[09:12:49.960]            // while-condition  =>  TRUE
[09:12:49.960]            // while "1"  (timeout="50000")
[09:12:49.960]            // while-condition  =>  TRUE
[09:12:49.960]            // while "1"  (timeout="50000")
[09:12:49.961]            // while-condition  =>  TRUE
[09:12:49.961]            // while "1"  (timeout="50000")
[09:12:49.962]            // while-condition  =>  TRUE
[09:12:49.962]            // while "1"  (timeout="50000")
[09:12:49.962]            // while-condition  =>  TRUE
[09:12:49.962]            // while "1"  (timeout="50000")
[09:12:49.962]            // while-condition  =>  TRUE
[09:12:49.963]            // while "1"  (timeout="50000")
[09:12:49.963]            // while-condition  =>  TRUE
[09:12:49.963]            // while "1"  (timeout="50000")
[09:12:49.963]            // while-condition  =>  TRUE
[09:12:49.963]            // while "1"  (timeout="50000")
[09:12:49.964]            // while-condition  =>  TRUE
[09:12:49.964]            // while "1"  (timeout="50000")
[09:12:49.964]            // while-condition  =>  TRUE
[09:12:49.964]            // while "1"  (timeout="50000")
[09:12:49.964]            // while-condition  =>  TRUE
[09:12:49.964]            // while "1"  (timeout="50000")
[09:12:49.964]            // while-condition  =>  TRUE
[09:12:49.965]            // while "1"  (timeout="50000")
[09:12:49.965]            // while-condition  =>  TRUE
[09:12:49.965]            // while "1"  (timeout="50000")
[09:12:49.965]            // while-condition  =>  TRUE
[09:12:49.965]            // while "1"  (timeout="50000")
[09:12:49.966]            // while-condition  =>  TRUE
[09:12:49.966]            // while "1"  (timeout="50000")
[09:12:49.966]            // while-condition  =>  TRUE
[09:12:49.966]            // while "1"  (timeout="50000")
[09:12:49.966]            // while-condition  =>  TRUE
[09:12:49.966]            // while "1"  (timeout="50000")
[09:12:49.966]            // while-condition  =>  TRUE
[09:12:49.967]            // while "1"  (timeout="50000")
[09:12:49.967]            // while-condition  =>  TRUE
[09:12:49.967]            // while "1"  (timeout="50000")
[09:12:49.967]            // while-condition  =>  TRUE
[09:12:49.968]            // while "1"  (timeout="50000")
[09:12:49.968]            // while-condition  =>  TRUE
[09:12:49.968]            // while "1"  (timeout="50000")
[09:12:49.968]            // while-condition  =>  TRUE
[09:12:49.968]            // while "1"  (timeout="50000")
[09:12:49.969]            // while-condition  =>  TRUE
[09:12:49.969]            // while "1"  (timeout="50000")
[09:12:49.969]            // while-condition  =>  TRUE
[09:12:49.969]            // while "1"  (timeout="50000")
[09:12:49.970]            // while-condition  =>  TRUE
[09:12:49.971]            // while "1"  (timeout="50000")
[09:12:49.972]            // while-condition  =>  TRUE
[09:12:49.972]            // while "1"  (timeout="50000")
[09:12:49.972]            // while-condition  =>  TRUE
[09:12:49.972]            // while "1"  (timeout="50000")
[09:12:49.973]            // while-condition  =>  TRUE
[09:12:49.973]            // while "1"  (timeout="50000")
[09:12:49.973]            // while-condition  =>  TRUE
[09:12:49.973]            // while "1"  (timeout="50000")
[09:12:49.973]            // while-condition  =>  TRUE
[09:12:49.974]            // while "1"  (timeout="50000")
[09:12:49.974]            // while-condition  =>  TRUE
[09:12:49.974]            // while "1"  (timeout="50000")
[09:12:49.975]            // while-condition  =>  TRUE
[09:12:49.975]            // while "1"  (timeout="50000")
[09:12:49.975]            // while-condition  =>  TRUE
[09:12:49.975]            // while "1"  (timeout="50000")
[09:12:49.975]            // while-condition  =>  TRUE
[09:12:49.976]            // while "1"  (timeout="50000")
[09:12:49.976]            // while-condition  =>  TRUE
[09:12:49.976]            // while "1"  (timeout="50000")
[09:12:49.976]            // while-condition  =>  TRUE
[09:12:49.976]            // while "1"  (timeout="50000")
[09:12:49.977]            // while-condition  =>  TRUE
[09:12:49.977]            // while "1"  (timeout="50000")
[09:12:49.977]            // while-condition  =>  TRUE
[09:12:49.977]            // while "1"  (timeout="50000")
[09:12:49.977]            // while-condition  =>  TRUE
[09:12:49.978]            // while "1"  (timeout="50000")
[09:12:49.978]            // while-condition  =>  TRUE
[09:12:49.978]            // while "1"  (timeout="50000")
[09:12:49.978]            // while-condition  =>  TRUE
[09:12:49.978]            // while "1"  (timeout="50000")
[09:12:49.979]            // while-condition  =>  TRUE
[09:12:49.979]            // while "1"  (timeout="50000")
[09:12:49.979]            // while-condition  =>  TRUE
[09:12:49.979]            // while "1"  (timeout="50000")
[09:12:49.979]            // while-condition  =>  TRUE
[09:12:49.979]            // while "1"  (timeout="50000")
[09:12:49.979]            // while-condition  =>  TRUE
[09:12:49.979]            // while "1"  (timeout="50000")
[09:12:49.980]            // while-condition  =>  TRUE
[09:12:49.980]            // while "1"  (timeout="50000")
[09:12:49.980]            // while-condition  =>  TRUE
[09:12:49.980]            // while "1"  (timeout="50000")
[09:12:49.980]            // while-condition  =>  TRUE
[09:12:49.980]            // while "1"  (timeout="50000")
[09:12:49.981]            // while-condition  =>  TRUE
[09:12:49.981]            // while "1"  (timeout="50000")
[09:12:49.981]            // while-condition  =>  TRUE
[09:12:49.981]            // while "1"  (timeout="50000")
[09:12:49.981]            // while-condition  =>  TRUE
[09:12:49.982]            // while "1"  (timeout="50000")
[09:12:49.982]            // while-condition  =>  TRUE
[09:12:49.982]            // while "1"  (timeout="50000")
[09:12:49.982]            // while-condition  =>  TRUE
[09:12:49.982]            // while "1"  (timeout="50000")
[09:12:49.983]            // while-condition  =>  TRUE
[09:12:49.983]            // while "1"  (timeout="50000")
[09:12:49.983]            // while-condition  =>  TRUE
[09:12:49.983]            // while "1"  (timeout="50000")
[09:12:49.983]            // while-condition  =>  TRUE
[09:12:49.984]            // while "1"  (timeout="50000")
[09:12:49.984]            // while-condition  =>  TRUE
[09:12:49.984]            // while "1"  (timeout="50000")
[09:12:49.984]            // while-condition  =>  TRUE
[09:12:49.984]            // while "1"  (timeout="50000")
[09:12:49.985]            // while-condition  =>  TRUE
[09:12:49.985]            // while "1"  (timeout="50000")
[09:12:49.985]            // while-condition  =>  TRUE
[09:12:49.985]            // while "1"  (timeout="50000")
[09:12:49.985]            // while-condition  =>  TRUE
[09:12:49.986]            // while "1"  (timeout="50000")
[09:12:49.986]            // while-condition  =>  TRUE
[09:12:49.986]            // while "1"  (timeout="50000")
[09:12:49.986]            // while-condition  =>  TRUE
[09:12:49.987]            // while "1"  (timeout="50000")
[09:12:49.987]            // while  =>  TIMEOUT
[09:12:49.987]            // end while "1"
[09:12:49.987]          </control>
[09:12:49.988]          <block atomic="false" info="">
[09:12:49.988]            DAP_SWJ_Pins(nReset, nReset, 0);
[09:12:49.991]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:12:49.991]          </block>
[09:12:49.992]          <control if="" while="1" timeout="10000" info="">
[09:12:49.992]            // while "1"  (timeout="10000")
[09:12:49.993]            // while-condition  =>  TRUE
[09:12:49.993]            // while "1"  (timeout="10000")
[09:12:49.994]            // while-condition  =>  TRUE
[09:12:49.994]            // while "1"  (timeout="10000")
[09:12:49.994]            // while-condition  =>  TRUE
[09:12:49.995]            // while "1"  (timeout="10000")
[09:12:49.995]            // while-condition  =>  TRUE
[09:12:49.995]            // while "1"  (timeout="10000")
[09:12:49.995]            // while-condition  =>  TRUE
[09:12:49.995]            // while "1"  (timeout="10000")
[09:12:49.996]            // while-condition  =>  TRUE
[09:12:49.996]            // while "1"  (timeout="10000")
[09:12:49.997]            // while-condition  =>  TRUE
[09:12:49.997]            // while "1"  (timeout="10000")
[09:12:49.997]            // while-condition  =>  TRUE
[09:12:49.997]            // while "1"  (timeout="10000")
[09:12:49.997]            // while-condition  =>  TRUE
[09:12:49.998]            // while "1"  (timeout="10000")
[09:12:49.998]            // while-condition  =>  TRUE
[09:12:49.998]            // while "1"  (timeout="10000")
[09:12:49.998]            // while-condition  =>  TRUE
[09:12:49.999]            // while "1"  (timeout="10000")
[09:12:49.999]            // while-condition  =>  TRUE
[09:12:49.999]            // while "1"  (timeout="10000")
[09:12:50.000]            // while-condition  =>  TRUE
[09:12:50.001]            // while "1"  (timeout="10000")
[09:12:50.001]            // while-condition  =>  TRUE
[09:12:50.001]            // while "1"  (timeout="10000")
[09:12:50.001]            // while-condition  =>  TRUE
[09:12:50.002]            // while "1"  (timeout="10000")
[09:12:50.002]            // while-condition  =>  TRUE
[09:12:50.002]            // while "1"  (timeout="10000")
[09:12:50.002]            // while-condition  =>  TRUE
[09:12:50.002]            // while "1"  (timeout="10000")
[09:12:50.003]            // while-condition  =>  TRUE
[09:12:50.003]            // while "1"  (timeout="10000")
[09:12:50.004]            // while  =>  TIMEOUT
[09:12:50.004]            // end while "1"
[09:12:50.004]          </control>
[09:12:50.004]          <block atomic="true" info="">
[09:12:50.007]  
[09:12:50.007]  ! W001 : No atomic sequence support in debug unit
[09:12:50.007]  
[09:12:50.009]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:12:50.012]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:12:50.012]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:12:50.015]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:12:50.016]          </block>
[09:12:50.016]          <block atomic="false" info="">
[09:12:50.016]            __errorcontrol = 0x00000001;
[09:12:50.017]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:12:50.017]            ReadDP(0x0);
[09:12:50.019]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:12:50.019]            __errorcontrol = 0x00000000;
[09:12:50.020]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:12:50.021]          </block>
[09:12:50.021]        </sequence>
[09:12:50.022]      Sequence("DebugPortSetup");
[09:12:50.022]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:12:50.022]        </sequence>
[09:12:50.023]      Sequence("DebugPortStart");
[09:12:50.023]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:12:50.023]          <block atomic="false" info="">
[09:12:50.024]            __var SW_DP_ABORT  = 0x0;
[09:12:50.024]              // -> [SW_DP_ABORT <= 0x00000000]
[09:12:50.025]            __var DP_CTRL_STAT = 0x4;
[09:12:50.025]              // -> [DP_CTRL_STAT <= 0x00000004]
[09:12:50.025]            __var DP_SELECT    = 0x8;
[09:12:50.025]              // -> [DP_SELECT <= 0x00000008]
[09:12:50.025]            __var powered_down = 0;
[09:12:50.026]              // -> [powered_down <= 0x00000000]
[09:12:50.026]            WriteDP(DP_SELECT, 0x00000000);
[09:12:50.028]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:12:50.029]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:12:50.030]              // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:12:50.031]              // -> [powered_down <= 0x00000000]
[09:12:50.031]          </block>
[09:12:50.032]          <control if="powered_down" while="" timeout="0" info="">
[09:12:50.032]            // if-block "powered_down"
[09:12:50.032]              // =>  FALSE
[09:12:50.033]            // skip if-block "powered_down"
[09:12:50.033]          </control>
[09:12:50.033]        </sequence>
[09:12:50.033]      Sequence("DebugCoreStart");
[09:12:50.034]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:12:50.034]          <block atomic="true" info="">
[09:12:50.037]  
[09:12:50.037]  ! W001 : No atomic sequence support in debug unit
[09:12:50.037]  
[09:12:50.039]            __var DP_R_IDCODE    = 0x0;
[09:12:50.039]              // -> [DP_R_IDCODE <= 0x00000000]
[09:12:50.039]            __var DP_W_ABORT    = 0x0;
[09:12:50.039]              // -> [DP_W_ABORT <= 0x00000000]
[09:12:50.039]            __var DP_CTRLSTAT = 0x4;
[09:12:50.040]              // -> [DP_CTRLSTAT <= 0x00000004]
[09:12:50.040]            __var DP_W_SELECT    = 0x8;
[09:12:50.040]              // -> [DP_W_SELECT <= 0x00000008]
[09:12:50.040]            __var AP_TAR		= 0x4;
[09:12:50.041]              // -> [AP_TAR <= 0x00000004]
[09:12:50.042]            __var AP_BD0		= 0x0;
[09:12:50.042]              // -> [AP_BD0 <= 0x00000000]
[09:12:50.042]            __var AP_BD1		= 0x4;
[09:12:50.042]              // -> [AP_BD1 <= 0x00000004]
[09:12:50.043]            __var AP_BD2		= 0x8;
[09:12:50.043]              // -> [AP_BD2 <= 0x00000008]
[09:12:50.043]            __var PCWithinFlash = 0;
[09:12:50.044]              // -> [PCWithinFlash <= 0x00000000]
[09:12:50.044]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:12:50.050]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.051]          </block>
[09:12:50.051]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:12:50.052]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:12:50.058]              // -> [Read32(0xE000EDF0) => 0x00030003]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.076]            // while-condition  =>  FALSE
[09:12:50.077]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:12:50.078]          </control>
[09:12:50.078]          <block atomic="true" info="">
[09:12:50.085]  
[09:12:50.085]  ! W001 : No atomic sequence support in debug unit
[09:12:50.085]  
[09:12:50.088]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:12:50.091]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:12:50.099]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:12:50.102]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.103]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:12:50.105]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:12:50.106]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:12:50.110]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.111]          </block>
[09:12:50.111]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:12:50.112]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.115]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.116]            // while-condition  =>  TRUE
[09:12:50.116]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.119]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.119]            // while-condition  =>  TRUE
[09:12:50.121]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.123]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.123]            // while-condition  =>  TRUE
[09:12:50.124]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.127]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.127]            // while-condition  =>  TRUE
[09:12:50.128]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.131]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.132]            // while-condition  =>  TRUE
[09:12:50.133]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.135]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.136]            // while-condition  =>  TRUE
[09:12:50.137]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.139]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.139]            // while-condition  =>  TRUE
[09:12:50.140]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.143]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.143]            // while-condition  =>  TRUE
[09:12:50.144]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.147]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.147]            // while-condition  =>  TRUE
[09:12:50.148]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.151]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.152]            // while-condition  =>  TRUE
[09:12:50.152]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.155]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.156]            // while-condition  =>  TRUE
[09:12:50.156]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.159]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.160]            // while-condition  =>  TRUE
[09:12:50.160]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.163]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.164]            // while-condition  =>  TRUE
[09:12:50.164]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.167]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.168]            // while-condition  =>  TRUE
[09:12:50.168]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.171]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.171]            // while-condition  =>  TRUE
[09:12:50.172]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.175]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.176]            // while-condition  =>  TRUE
[09:12:50.176]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.179]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.179]            // while-condition  =>  TRUE
[09:12:50.180]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.182]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.183]            // while-condition  =>  TRUE
[09:12:50.183]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.186]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.186]            // while-condition  =>  TRUE
[09:12:50.187]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.189]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.189]            // while-condition  =>  TRUE
[09:12:50.189]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.192]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.192]            // while-condition  =>  TRUE
[09:12:50.193]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.195]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.195]            // while-condition  =>  TRUE
[09:12:50.196]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.198]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.199]            // while-condition  =>  TRUE
[09:12:50.199]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.202]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.203]            // while-condition  =>  TRUE
[09:12:50.203]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.206]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.207]            // while-condition  =>  TRUE
[09:12:50.208]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.210]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.211]            // while-condition  =>  TRUE
[09:12:50.211]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.214]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.215]            // while-condition  =>  TRUE
[09:12:50.215]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.217]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.218]            // while-condition  =>  TRUE
[09:12:50.218]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.220]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.222]            // while-condition  =>  TRUE
[09:12:50.222]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:12:50.223]            // while  =>  TIMEOUT
[09:12:50.223]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:12:50.224]          </control>
[09:12:50.225]          <block atomic="false" info="">
[09:12:50.225]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:12:50.227]              // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:12:50.228]              // -> [PCWithinFlash <= 0x00000000]
[09:12:50.228]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:12:50.230]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:12:50.230]          </block>
[09:12:50.230]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:12:50.232]            // if-block "PCWithinFlash == 0"
[09:12:50.232]              // =>  TRUE
[09:12:50.233]            // end if-block "PCWithinFlash == 0"
[09:12:50.234]          </control>
[09:12:50.234]        </sequence>
[09:12:50.235]    </block>
[09:12:50.235]  </sequence>
[09:12:50.236]  
[09:13:01.333]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[09:13:01.333]  
[09:13:01.333]  <debugvars>
[09:13:01.334]    // Pre-defined
[09:13:01.334]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:13:01.335]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:13:01.335]    __dp=0x00000000
[09:13:01.336]    __ap=0x00000000
[09:13:01.336]    __traceout=0x00000000      (Trace Disabled)
[09:13:01.337]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:13:01.337]    __FlashAddr=0x00000000
[09:13:01.337]    __FlashLen=0x00000000
[09:13:01.338]    __FlashArg=0x00000000
[09:13:01.338]    __FlashOp=0x00000000
[09:13:01.339]    __Result=0x00000000
[09:13:01.339]  </debugvars>
[09:13:01.339]  
[09:13:01.339]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[09:13:01.340]    <block atomic="false" info="">
[09:13:01.340]      __var nReset      = 0x80;
[09:13:01.340]        // -> [nReset <= 0x00000080]
[09:13:01.341]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:13:01.342]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:13:01.343]    </block>
[09:13:01.343]    <control if="" while="1" timeout="50000" info="">
[09:13:01.343]      // while "1"  (timeout="50000")
[09:13:01.344]      // while-condition  =>  TRUE
[09:13:01.344]      // while "1"  (timeout="50000")
[09:13:01.345]      // while-condition  =>  TRUE
[09:13:01.345]      // while "1"  (timeout="50000")
[09:13:01.346]      // while-condition  =>  TRUE
[09:13:01.346]      // while "1"  (timeout="50000")
[09:13:01.347]      // while-condition  =>  TRUE
[09:13:01.348]      // while "1"  (timeout="50000")
[09:13:01.348]      // while-condition  =>  TRUE
[09:13:01.349]      // while "1"  (timeout="50000")
[09:13:01.349]      // while-condition  =>  TRUE
[09:13:01.349]      // while "1"  (timeout="50000")
[09:13:01.350]      // while-condition  =>  TRUE
[09:13:01.350]      // while "1"  (timeout="50000")
[09:13:01.350]      // while-condition  =>  TRUE
[09:13:01.350]      // while "1"  (timeout="50000")
[09:13:01.351]      // while-condition  =>  TRUE
[09:13:01.351]      // while "1"  (timeout="50000")
[09:13:01.351]      // while-condition  =>  TRUE
[09:13:01.352]      // while "1"  (timeout="50000")
[09:13:01.352]      // while-condition  =>  TRUE
[09:13:01.352]      // while "1"  (timeout="50000")
[09:13:01.352]      // while-condition  =>  TRUE
[09:13:01.353]      // while "1"  (timeout="50000")
[09:13:01.353]      // while-condition  =>  TRUE
[09:13:01.353]      // while "1"  (timeout="50000")
[09:13:01.353]      // while-condition  =>  TRUE
[09:13:01.354]      // while "1"  (timeout="50000")
[09:13:01.354]      // while-condition  =>  TRUE
[09:13:01.354]      // while "1"  (timeout="50000")
[09:13:01.354]      // while-condition  =>  TRUE
[09:13:01.354]      // while "1"  (timeout="50000")
[09:13:01.354]      // while-condition  =>  TRUE
[09:13:01.354]      // while "1"  (timeout="50000")
[09:13:01.355]      // while-condition  =>  TRUE
[09:13:01.355]      // while "1"  (timeout="50000")
[09:13:01.355]      // while-condition  =>  TRUE
[09:13:01.355]      // while "1"  (timeout="50000")
[09:13:01.356]      // while-condition  =>  TRUE
[09:13:01.357]      // while "1"  (timeout="50000")
[09:13:01.357]      // while-condition  =>  TRUE
[09:13:01.357]      // while "1"  (timeout="50000")
[09:13:01.357]      // while-condition  =>  TRUE
[09:13:01.358]      // while "1"  (timeout="50000")
[09:13:01.358]      // while-condition  =>  TRUE
[09:13:01.358]      // while "1"  (timeout="50000")
[09:13:01.358]      // while-condition  =>  TRUE
[09:13:01.359]      // while "1"  (timeout="50000")
[09:13:01.359]      // while-condition  =>  TRUE
[09:13:01.359]      // while "1"  (timeout="50000")
[09:13:01.359]      // while-condition  =>  TRUE
[09:13:01.360]      // while "1"  (timeout="50000")
[09:13:01.360]      // while-condition  =>  TRUE
[09:13:01.360]      // while "1"  (timeout="50000")
[09:13:01.360]      // while-condition  =>  TRUE
[09:13:01.360]      // while "1"  (timeout="50000")
[09:13:01.360]      // while-condition  =>  TRUE
[09:13:01.360]      // while "1"  (timeout="50000")
[09:13:01.360]      // while-condition  =>  TRUE
[09:13:01.361]      // while "1"  (timeout="50000")
[09:13:01.361]      // while-condition  =>  TRUE
[09:13:01.361]      // while "1"  (timeout="50000")
[09:13:01.361]      // while-condition  =>  TRUE
[09:13:01.361]      // while "1"  (timeout="50000")
[09:13:01.362]      // while-condition  =>  TRUE
[09:13:01.362]      // while "1"  (timeout="50000")
[09:13:01.362]      // while-condition  =>  TRUE
[09:13:01.362]      // while "1"  (timeout="50000")
[09:13:01.362]      // while-condition  =>  TRUE
[09:13:01.362]      // while "1"  (timeout="50000")
[09:13:01.363]      // while-condition  =>  TRUE
[09:13:01.363]      // while "1"  (timeout="50000")
[09:13:01.363]      // while-condition  =>  TRUE
[09:13:01.363]      // while "1"  (timeout="50000")
[09:13:01.363]      // while-condition  =>  TRUE
[09:13:01.364]      // while "1"  (timeout="50000")
[09:13:01.364]      // while-condition  =>  TRUE
[09:13:01.364]      // while "1"  (timeout="50000")
[09:13:01.364]      // while-condition  =>  TRUE
[09:13:01.365]      // while "1"  (timeout="50000")
[09:13:01.365]      // while-condition  =>  TRUE
[09:13:01.365]      // while "1"  (timeout="50000")
[09:13:01.365]      // while-condition  =>  TRUE
[09:13:01.365]      // while "1"  (timeout="50000")
[09:13:01.366]      // while-condition  =>  TRUE
[09:13:01.366]      // while "1"  (timeout="50000")
[09:13:01.367]      // while-condition  =>  TRUE
[09:13:01.367]      // while "1"  (timeout="50000")
[09:13:01.367]      // while-condition  =>  TRUE
[09:13:01.367]      // while "1"  (timeout="50000")
[09:13:01.368]      // while-condition  =>  TRUE
[09:13:01.368]      // while "1"  (timeout="50000")
[09:13:01.368]      // while-condition  =>  TRUE
[09:13:01.368]      // while "1"  (timeout="50000")
[09:13:01.368]      // while-condition  =>  TRUE
[09:13:01.368]      // while "1"  (timeout="50000")
[09:13:01.369]      // while-condition  =>  TRUE
[09:13:01.369]      // while "1"  (timeout="50000")
[09:13:01.369]      // while-condition  =>  TRUE
[09:13:01.369]      // while "1"  (timeout="50000")
[09:13:01.369]      // while-condition  =>  TRUE
[09:13:01.370]      // while "1"  (timeout="50000")
[09:13:01.370]      // while-condition  =>  TRUE
[09:13:01.370]      // while "1"  (timeout="50000")
[09:13:01.370]      // while-condition  =>  TRUE
[09:13:01.370]      // while "1"  (timeout="50000")
[09:13:01.371]      // while-condition  =>  TRUE
[09:13:01.371]      // while "1"  (timeout="50000")
[09:13:01.371]      // while-condition  =>  TRUE
[09:13:01.371]      // while "1"  (timeout="50000")
[09:13:01.371]      // while-condition  =>  TRUE
[09:13:01.372]      // while "1"  (timeout="50000")
[09:13:01.372]      // while-condition  =>  TRUE
[09:13:01.372]      // while "1"  (timeout="50000")
[09:13:01.372]      // while-condition  =>  TRUE
[09:13:01.372]      // while "1"  (timeout="50000")
[09:13:01.373]      // while-condition  =>  TRUE
[09:13:01.373]      // while "1"  (timeout="50000")
[09:13:01.373]      // while-condition  =>  TRUE
[09:13:01.373]      // while "1"  (timeout="50000")
[09:13:01.373]      // while-condition  =>  TRUE
[09:13:01.373]      // while "1"  (timeout="50000")
[09:13:01.374]      // while-condition  =>  TRUE
[09:13:01.374]      // while "1"  (timeout="50000")
[09:13:01.374]      // while-condition  =>  TRUE
[09:13:01.374]      // while "1"  (timeout="50000")
[09:13:01.374]      // while-condition  =>  TRUE
[09:13:01.374]      // while "1"  (timeout="50000")
[09:13:01.374]      // while-condition  =>  TRUE
[09:13:01.374]      // while "1"  (timeout="50000")
[09:13:01.374]      // while-condition  =>  TRUE
[09:13:01.375]      // while "1"  (timeout="50000")
[09:13:01.375]      // while-condition  =>  TRUE
[09:13:01.375]      // while "1"  (timeout="50000")
[09:13:01.375]      // while-condition  =>  TRUE
[09:13:01.375]      // while "1"  (timeout="50000")
[09:13:01.376]      // while-condition  =>  TRUE
[09:13:01.376]      // while "1"  (timeout="50000")
[09:13:01.377]      // while-condition  =>  TRUE
[09:13:01.377]      // while "1"  (timeout="50000")
[09:13:01.377]      // while-condition  =>  TRUE
[09:13:01.377]      // while "1"  (timeout="50000")
[09:13:01.377]      // while-condition  =>  TRUE
[09:13:01.377]      // while "1"  (timeout="50000")
[09:13:01.377]      // while-condition  =>  TRUE
[09:13:01.377]      // while "1"  (timeout="50000")
[09:13:01.377]      // while-condition  =>  TRUE
[09:13:01.377]      // while "1"  (timeout="50000")
[09:13:01.379]      // while-condition  =>  TRUE
[09:13:01.379]      // while "1"  (timeout="50000")
[09:13:01.379]      // while-condition  =>  TRUE
[09:13:01.379]      // while "1"  (timeout="50000")
[09:13:01.379]      // while-condition  =>  TRUE
[09:13:01.379]      // while "1"  (timeout="50000")
[09:13:01.379]      // while-condition  =>  TRUE
[09:13:01.379]      // while "1"  (timeout="50000")
[09:13:01.379]      // while-condition  =>  TRUE
[09:13:01.380]      // while "1"  (timeout="50000")
[09:13:01.380]      // while-condition  =>  TRUE
[09:13:01.380]      // while "1"  (timeout="50000")
[09:13:01.380]      // while-condition  =>  TRUE
[09:13:01.380]      // while "1"  (timeout="50000")
[09:13:01.382]      // while-condition  =>  TRUE
[09:13:01.382]      // while "1"  (timeout="50000")
[09:13:01.383]      // while-condition  =>  TRUE
[09:13:01.383]      // while "1"  (timeout="50000")
[09:13:01.383]      // while-condition  =>  TRUE
[09:13:01.383]      // while "1"  (timeout="50000")
[09:13:01.383]      // while-condition  =>  TRUE
[09:13:01.384]      // while "1"  (timeout="50000")
[09:13:01.384]      // while-condition  =>  TRUE
[09:13:01.384]      // while "1"  (timeout="50000")
[09:13:01.384]      // while-condition  =>  TRUE
[09:13:01.384]      // while "1"  (timeout="50000")
[09:13:01.384]      // while-condition  =>  TRUE
[09:13:01.384]      // while "1"  (timeout="50000")
[09:13:01.384]      // while-condition  =>  TRUE
[09:13:01.384]      // while "1"  (timeout="50000")
[09:13:01.385]      // while-condition  =>  TRUE
[09:13:01.385]      // while "1"  (timeout="50000")
[09:13:01.385]      // while-condition  =>  TRUE
[09:13:01.385]      // while "1"  (timeout="50000")
[09:13:01.385]      // while-condition  =>  TRUE
[09:13:01.385]      // while "1"  (timeout="50000")
[09:13:01.386]      // while-condition  =>  TRUE
[09:13:01.387]      // while "1"  (timeout="50000")
[09:13:01.387]      // while-condition  =>  TRUE
[09:13:01.387]      // while "1"  (timeout="50000")
[09:13:01.387]      // while-condition  =>  TRUE
[09:13:01.387]      // while "1"  (timeout="50000")
[09:13:01.388]      // while-condition  =>  TRUE
[09:13:01.388]      // while "1"  (timeout="50000")
[09:13:01.388]      // while-condition  =>  TRUE
[09:13:01.388]      // while "1"  (timeout="50000")
[09:13:01.388]      // while-condition  =>  TRUE
[09:13:01.389]      // while "1"  (timeout="50000")
[09:13:01.389]      // while-condition  =>  TRUE
[09:13:01.389]      // while "1"  (timeout="50000")
[09:13:01.389]      // while-condition  =>  TRUE
[09:13:01.389]      // while "1"  (timeout="50000")
[09:13:01.390]      // while-condition  =>  TRUE
[09:13:01.390]      // while "1"  (timeout="50000")
[09:13:01.390]      // while-condition  =>  TRUE
[09:13:01.390]      // while "1"  (timeout="50000")
[09:13:01.390]      // while-condition  =>  TRUE
[09:13:01.391]      // while "1"  (timeout="50000")
[09:13:01.391]      // while-condition  =>  TRUE
[09:13:01.391]      // while "1"  (timeout="50000")
[09:13:01.391]      // while-condition  =>  TRUE
[09:13:01.391]      // while "1"  (timeout="50000")
[09:13:01.392]      // while-condition  =>  TRUE
[09:13:01.392]      // while "1"  (timeout="50000")
[09:13:01.392]      // while-condition  =>  TRUE
[09:13:01.392]      // while "1"  (timeout="50000")
[09:13:01.392]      // while-condition  =>  TRUE
[09:13:01.393]      // while "1"  (timeout="50000")
[09:13:01.393]      // while-condition  =>  TRUE
[09:13:01.393]      // while "1"  (timeout="50000")
[09:13:01.393]      // while-condition  =>  TRUE
[09:13:01.393]      // while "1"  (timeout="50000")
[09:13:01.393]      // while-condition  =>  TRUE
[09:13:01.394]      // while "1"  (timeout="50000")
[09:13:01.394]      // while  =>  TIMEOUT
[09:13:01.394]      // end while "1"
[09:13:01.394]    </control>
[09:13:01.394]    <block atomic="false" info="">
[09:13:01.395]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:13:01.397]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:13:01.397]    </block>
[09:13:01.398]  </sequence>
[09:13:01.398]  
[09:13:47.457]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:13:47.457]  
[09:13:47.457]  <debugvars>
[09:13:47.458]    // Pre-defined
[09:13:47.458]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:13:47.459]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:13:47.459]    __dp=0x00000000
[09:13:47.460]    __ap=0x00000000
[09:13:47.460]    __traceout=0x00000000      (Trace Disabled)
[09:13:47.460]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:13:47.461]    __FlashAddr=0x00000000
[09:13:47.461]    __FlashLen=0x00000000
[09:13:47.461]    __FlashArg=0x00000000
[09:13:47.462]    __FlashOp=0x00000000
[09:13:47.462]    __Result=0x00000000
[09:13:47.462]  </debugvars>
[09:13:47.463]  
[09:13:47.463]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:13:47.463]    <block atomic="false" info="">
[09:13:47.464]      __var nReset      = 0x80;
[09:13:47.464]        // -> [nReset <= 0x00000080]
[09:13:47.464]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:13:47.466]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:13:47.466]    </block>
[09:13:47.466]    <control if="" while="1" timeout="50000" info="">
[09:13:47.467]      // while "1"  (timeout="50000")
[09:13:47.467]      // while-condition  =>  TRUE
[09:13:47.467]      // while "1"  (timeout="50000")
[09:13:47.468]      // while-condition  =>  TRUE
[09:13:47.468]      // while "1"  (timeout="50000")
[09:13:47.468]      // while-condition  =>  TRUE
[09:13:47.469]      // while "1"  (timeout="50000")
[09:13:47.469]      // while-condition  =>  TRUE
[09:13:47.469]      // while "1"  (timeout="50000")
[09:13:47.469]      // while-condition  =>  TRUE
[09:13:47.470]      // while "1"  (timeout="50000")
[09:13:47.470]      // while-condition  =>  TRUE
[09:13:47.470]      // while "1"  (timeout="50000")
[09:13:47.471]      // while-condition  =>  TRUE
[09:13:47.471]      // while "1"  (timeout="50000")
[09:13:47.471]      // while-condition  =>  TRUE
[09:13:47.471]      // while "1"  (timeout="50000")
[09:13:47.472]      // while-condition  =>  TRUE
[09:13:47.472]      // while "1"  (timeout="50000")
[09:13:47.472]      // while-condition  =>  TRUE
[09:13:47.473]      // while "1"  (timeout="50000")
[09:13:47.473]      // while-condition  =>  TRUE
[09:13:47.473]      // while "1"  (timeout="50000")
[09:13:47.473]      // while-condition  =>  TRUE
[09:13:47.474]      // while "1"  (timeout="50000")
[09:13:47.474]      // while-condition  =>  TRUE
[09:13:47.474]      // while "1"  (timeout="50000")
[09:13:47.475]      // while-condition  =>  TRUE
[09:13:47.475]      // while "1"  (timeout="50000")
[09:13:47.475]      // while-condition  =>  TRUE
[09:13:47.475]      // while "1"  (timeout="50000")
[09:13:47.476]      // while-condition  =>  TRUE
[09:13:47.476]      // while "1"  (timeout="50000")
[09:13:47.476]      // while-condition  =>  TRUE
[09:13:47.476]      // while "1"  (timeout="50000")
[09:13:47.476]      // while-condition  =>  TRUE
[09:13:47.477]      // while "1"  (timeout="50000")
[09:13:47.477]      // while-condition  =>  TRUE
[09:13:47.477]      // while "1"  (timeout="50000")
[09:13:47.477]      // while-condition  =>  TRUE
[09:13:47.477]      // while "1"  (timeout="50000")
[09:13:47.478]      // while-condition  =>  TRUE
[09:13:47.478]      // while "1"  (timeout="50000")
[09:13:47.478]      // while-condition  =>  TRUE
[09:13:47.478]      // while "1"  (timeout="50000")
[09:13:47.478]      // while-condition  =>  TRUE
[09:13:47.479]      // while "1"  (timeout="50000")
[09:13:47.479]      // while-condition  =>  TRUE
[09:13:47.479]      // while "1"  (timeout="50000")
[09:13:47.479]      // while-condition  =>  TRUE
[09:13:47.479]      // while "1"  (timeout="50000")
[09:13:47.480]      // while-condition  =>  TRUE
[09:13:47.480]      // while "1"  (timeout="50000")
[09:13:47.480]      // while-condition  =>  TRUE
[09:13:47.480]      // while "1"  (timeout="50000")
[09:13:47.480]      // while-condition  =>  TRUE
[09:13:47.481]      // while "1"  (timeout="50000")
[09:13:47.481]      // while-condition  =>  TRUE
[09:13:47.481]      // while "1"  (timeout="50000")
[09:13:47.481]      // while-condition  =>  TRUE
[09:13:47.481]      // while "1"  (timeout="50000")
[09:13:47.482]      // while-condition  =>  TRUE
[09:13:47.482]      // while "1"  (timeout="50000")
[09:13:47.482]      // while-condition  =>  TRUE
[09:13:47.482]      // while "1"  (timeout="50000")
[09:13:47.482]      // while-condition  =>  TRUE
[09:13:47.483]      // while "1"  (timeout="50000")
[09:13:47.483]      // while-condition  =>  TRUE
[09:13:47.483]      // while "1"  (timeout="50000")
[09:13:47.483]      // while-condition  =>  TRUE
[09:13:47.483]      // while "1"  (timeout="50000")
[09:13:47.484]      // while-condition  =>  TRUE
[09:13:47.484]      // while "1"  (timeout="50000")
[09:13:47.484]      // while-condition  =>  TRUE
[09:13:47.484]      // while "1"  (timeout="50000")
[09:13:47.484]      // while-condition  =>  TRUE
[09:13:47.484]      // while "1"  (timeout="50000")
[09:13:47.485]      // while-condition  =>  TRUE
[09:13:47.485]      // while "1"  (timeout="50000")
[09:13:47.485]      // while-condition  =>  TRUE
[09:13:47.485]      // while "1"  (timeout="50000")
[09:13:47.486]      // while-condition  =>  TRUE
[09:13:47.486]      // while "1"  (timeout="50000")
[09:13:47.486]      // while-condition  =>  TRUE
[09:13:47.486]      // while "1"  (timeout="50000")
[09:13:47.486]      // while-condition  =>  TRUE
[09:13:47.487]      // while "1"  (timeout="50000")
[09:13:47.487]      // while-condition  =>  TRUE
[09:13:47.487]      // while "1"  (timeout="50000")
[09:13:47.487]      // while-condition  =>  TRUE
[09:13:47.487]      // while "1"  (timeout="50000")
[09:13:47.488]      // while-condition  =>  TRUE
[09:13:47.488]      // while "1"  (timeout="50000")
[09:13:47.488]      // while-condition  =>  TRUE
[09:13:47.488]      // while "1"  (timeout="50000")
[09:13:47.489]      // while-condition  =>  TRUE
[09:13:47.489]      // while "1"  (timeout="50000")
[09:13:47.489]      // while-condition  =>  TRUE
[09:13:47.489]      // while "1"  (timeout="50000")
[09:13:47.489]      // while-condition  =>  TRUE
[09:13:47.490]      // while "1"  (timeout="50000")
[09:13:47.490]      // while-condition  =>  TRUE
[09:13:47.490]      // while "1"  (timeout="50000")
[09:13:47.490]      // while-condition  =>  TRUE
[09:13:47.491]      // while "1"  (timeout="50000")
[09:13:47.491]      // while-condition  =>  TRUE
[09:13:47.491]      // while "1"  (timeout="50000")
[09:13:47.491]      // while-condition  =>  TRUE
[09:13:47.491]      // while "1"  (timeout="50000")
[09:13:47.492]      // while-condition  =>  TRUE
[09:13:47.492]      // while "1"  (timeout="50000")
[09:13:47.492]      // while-condition  =>  TRUE
[09:13:47.492]      // while "1"  (timeout="50000")
[09:13:47.493]      // while-condition  =>  TRUE
[09:13:47.493]      // while "1"  (timeout="50000")
[09:13:47.493]      // while-condition  =>  TRUE
[09:13:47.494]      // while "1"  (timeout="50000")
[09:13:47.494]      // while-condition  =>  TRUE
[09:13:47.494]      // while "1"  (timeout="50000")
[09:13:47.494]      // while-condition  =>  TRUE
[09:13:47.495]      // while "1"  (timeout="50000")
[09:13:47.495]      // while-condition  =>  TRUE
[09:13:47.495]      // while "1"  (timeout="50000")
[09:13:47.495]      // while-condition  =>  TRUE
[09:13:47.496]      // while "1"  (timeout="50000")
[09:13:47.496]      // while-condition  =>  TRUE
[09:13:47.496]      // while "1"  (timeout="50000")
[09:13:47.497]      // while-condition  =>  TRUE
[09:13:47.497]      // while "1"  (timeout="50000")
[09:13:47.497]      // while-condition  =>  TRUE
[09:13:47.497]      // while "1"  (timeout="50000")
[09:13:47.498]      // while-condition  =>  TRUE
[09:13:47.498]      // while "1"  (timeout="50000")
[09:13:47.498]      // while-condition  =>  TRUE
[09:13:47.498]      // while "1"  (timeout="50000")
[09:13:47.498]      // while-condition  =>  TRUE
[09:13:47.499]      // while "1"  (timeout="50000")
[09:13:47.499]      // while-condition  =>  TRUE
[09:13:47.499]      // while "1"  (timeout="50000")
[09:13:47.499]      // while-condition  =>  TRUE
[09:13:47.499]      // while "1"  (timeout="50000")
[09:13:47.500]      // while-condition  =>  TRUE
[09:13:47.500]      // while "1"  (timeout="50000")
[09:13:47.500]      // while-condition  =>  TRUE
[09:13:47.500]      // while "1"  (timeout="50000")
[09:13:47.500]      // while-condition  =>  TRUE
[09:13:47.501]      // while "1"  (timeout="50000")
[09:13:47.501]      // while-condition  =>  TRUE
[09:13:47.501]      // while "1"  (timeout="50000")
[09:13:47.501]      // while-condition  =>  TRUE
[09:13:47.502]      // while "1"  (timeout="50000")
[09:13:47.502]      // while-condition  =>  TRUE
[09:13:47.502]      // while "1"  (timeout="50000")
[09:13:47.502]      // while-condition  =>  TRUE
[09:13:47.503]      // while "1"  (timeout="50000")
[09:13:47.503]      // while-condition  =>  TRUE
[09:13:47.503]      // while "1"  (timeout="50000")
[09:13:47.503]      // while-condition  =>  TRUE
[09:13:47.504]      // while "1"  (timeout="50000")
[09:13:47.504]      // while-condition  =>  TRUE
[09:13:47.504]      // while "1"  (timeout="50000")
[09:13:47.504]      // while-condition  =>  TRUE
[09:13:47.504]      // while "1"  (timeout="50000")
[09:13:47.505]      // while-condition  =>  TRUE
[09:13:47.505]      // while "1"  (timeout="50000")
[09:13:47.505]      // while-condition  =>  TRUE
[09:13:47.505]      // while "1"  (timeout="50000")
[09:13:47.505]      // while-condition  =>  TRUE
[09:13:47.506]      // while "1"  (timeout="50000")
[09:13:47.506]      // while-condition  =>  TRUE
[09:13:47.506]      // while "1"  (timeout="50000")
[09:13:47.506]      // while-condition  =>  TRUE
[09:13:47.506]      // while "1"  (timeout="50000")
[09:13:47.507]      // while-condition  =>  TRUE
[09:13:47.507]      // while "1"  (timeout="50000")
[09:13:47.507]      // while-condition  =>  TRUE
[09:13:47.507]      // while "1"  (timeout="50000")
[09:13:47.508]      // while-condition  =>  TRUE
[09:13:47.508]      // while "1"  (timeout="50000")
[09:13:47.508]      // while-condition  =>  TRUE
[09:13:47.508]      // while "1"  (timeout="50000")
[09:13:47.509]      // while-condition  =>  TRUE
[09:13:47.509]      // while "1"  (timeout="50000")
[09:13:47.509]      // while-condition  =>  TRUE
[09:13:47.509]      // while "1"  (timeout="50000")
[09:13:47.509]      // while-condition  =>  TRUE
[09:13:47.510]      // while "1"  (timeout="50000")
[09:13:47.510]      // while-condition  =>  TRUE
[09:13:47.510]      // while "1"  (timeout="50000")
[09:13:47.510]      // while-condition  =>  TRUE
[09:13:47.511]      // while "1"  (timeout="50000")
[09:13:47.511]      // while-condition  =>  TRUE
[09:13:47.511]      // while "1"  (timeout="50000")
[09:13:47.511]      // while-condition  =>  TRUE
[09:13:47.512]      // while "1"  (timeout="50000")
[09:13:47.512]      // while-condition  =>  TRUE
[09:13:47.512]      // while "1"  (timeout="50000")
[09:13:47.512]      // while-condition  =>  TRUE
[09:13:47.513]      // while "1"  (timeout="50000")
[09:13:47.513]      // while-condition  =>  TRUE
[09:13:47.513]      // while "1"  (timeout="50000")
[09:13:47.513]      // while-condition  =>  TRUE
[09:13:47.514]      // while "1"  (timeout="50000")
[09:13:47.514]      // while-condition  =>  TRUE
[09:13:47.514]      // while "1"  (timeout="50000")
[09:13:47.514]      // while-condition  =>  TRUE
[09:13:47.515]      // while "1"  (timeout="50000")
[09:13:47.515]      // while-condition  =>  TRUE
[09:13:47.515]      // while "1"  (timeout="50000")
[09:13:47.515]      // while-condition  =>  TRUE
[09:13:47.515]      // while "1"  (timeout="50000")
[09:13:47.516]      // while-condition  =>  TRUE
[09:13:47.516]      // while "1"  (timeout="50000")
[09:13:47.516]      // while-condition  =>  TRUE
[09:13:47.516]      // while "1"  (timeout="50000")
[09:13:47.517]      // while-condition  =>  TRUE
[09:13:47.517]      // while "1"  (timeout="50000")
[09:13:47.517]      // while-condition  =>  TRUE
[09:13:47.517]      // while "1"  (timeout="50000")
[09:13:47.518]      // while-condition  =>  TRUE
[09:13:47.518]      // while "1"  (timeout="50000")
[09:13:47.518]      // while  =>  TIMEOUT
[09:13:47.518]      // end while "1"
[09:13:47.519]    </control>
[09:13:47.519]    <block atomic="false" info="">
[09:13:47.519]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:13:47.521]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:13:47.521]    </block>
[09:13:47.522]    <control if="" while="1" timeout="10000" info="">
[09:13:47.522]      // while "1"  (timeout="10000")
[09:13:47.522]      // while-condition  =>  TRUE
[09:13:47.522]      // while "1"  (timeout="10000")
[09:13:47.522]      // while-condition  =>  TRUE
[09:13:47.523]      // while "1"  (timeout="10000")
[09:13:47.523]      // while-condition  =>  TRUE
[09:13:47.523]      // while "1"  (timeout="10000")
[09:13:47.523]      // while-condition  =>  TRUE
[09:13:47.524]      // while "1"  (timeout="10000")
[09:13:47.524]      // while-condition  =>  TRUE
[09:13:47.524]      // while "1"  (timeout="10000")
[09:13:47.524]      // while-condition  =>  TRUE
[09:13:47.524]      // while "1"  (timeout="10000")
[09:13:47.525]      // while-condition  =>  TRUE
[09:13:47.525]      // while "1"  (timeout="10000")
[09:13:47.525]      // while-condition  =>  TRUE
[09:13:47.525]      // while "1"  (timeout="10000")
[09:13:47.526]      // while-condition  =>  TRUE
[09:13:47.526]      // while "1"  (timeout="10000")
[09:13:47.526]      // while-condition  =>  TRUE
[09:13:47.526]      // while "1"  (timeout="10000")
[09:13:47.526]      // while-condition  =>  TRUE
[09:13:47.527]      // while "1"  (timeout="10000")
[09:13:47.527]      // while-condition  =>  TRUE
[09:13:47.527]      // while "1"  (timeout="10000")
[09:13:47.527]      // while-condition  =>  TRUE
[09:13:47.528]      // while "1"  (timeout="10000")
[09:13:47.528]      // while-condition  =>  TRUE
[09:13:47.528]      // while "1"  (timeout="10000")
[09:13:47.528]      // while-condition  =>  TRUE
[09:13:47.528]      // while "1"  (timeout="10000")
[09:13:47.529]      // while-condition  =>  TRUE
[09:13:47.529]      // while "1"  (timeout="10000")
[09:13:47.529]      // while-condition  =>  TRUE
[09:13:47.529]      // while "1"  (timeout="10000")
[09:13:47.530]      // while-condition  =>  TRUE
[09:13:47.530]      // while "1"  (timeout="10000")
[09:13:47.530]      // while-condition  =>  TRUE
[09:13:47.530]      // while "1"  (timeout="10000")
[09:13:47.530]      // while-condition  =>  TRUE
[09:13:47.531]      // while "1"  (timeout="10000")
[09:13:47.531]      // while-condition  =>  TRUE
[09:13:47.531]      // while "1"  (timeout="10000")
[09:13:47.531]      // while-condition  =>  TRUE
[09:13:47.532]      // while "1"  (timeout="10000")
[09:13:47.532]      // while-condition  =>  TRUE
[09:13:47.532]      // while "1"  (timeout="10000")
[09:13:47.532]      // while-condition  =>  TRUE
[09:13:47.532]      // while "1"  (timeout="10000")
[09:13:47.533]      // while-condition  =>  TRUE
[09:13:47.533]      // while "1"  (timeout="10000")
[09:13:47.533]      // while-condition  =>  TRUE
[09:13:47.533]      // while "1"  (timeout="10000")
[09:13:47.534]      // while-condition  =>  TRUE
[09:13:47.534]      // while "1"  (timeout="10000")
[09:13:47.534]      // while  =>  TIMEOUT
[09:13:47.534]      // end while "1"
[09:13:47.534]    </control>
[09:13:47.535]    <block atomic="true" info="">
[09:13:47.538]  
[09:13:47.538]  ! W001 : No atomic sequence support in debug unit
[09:13:47.538]  
[09:13:47.540]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:13:47.542]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:13:47.542]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:13:47.544]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:13:47.545]    </block>
[09:13:47.545]    <block atomic="false" info="">
[09:13:47.545]      __errorcontrol = 0x00000001;
[09:13:47.546]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:13:47.547]      ReadDP(0x0);
[09:13:47.549]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:13:47.550]      __errorcontrol = 0x00000000;
[09:13:47.550]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:13:47.550]    </block>
[09:13:47.551]  </sequence>
[09:13:47.551]  
[09:13:47.552]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:13:47.552]  
[09:13:47.552]  <debugvars>
[09:13:47.552]    // Pre-defined
[09:13:47.553]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:13:47.553]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:13:47.554]    __dp=0x00000000
[09:13:47.554]    __ap=0x00000000
[09:13:47.554]    __traceout=0x00000000      (Trace Disabled)
[09:13:47.555]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:13:47.555]    __FlashAddr=0x00000000
[09:13:47.556]    __FlashLen=0x00000000
[09:13:47.556]    __FlashArg=0x00000000
[09:13:47.556]    __FlashOp=0x00000000
[09:13:47.557]    __Result=0x00000000
[09:13:47.557]  </debugvars>
[09:13:47.557]  
[09:13:47.558]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:13:47.558]  </sequence>
[09:13:47.558]  
[09:13:47.562]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[09:13:47.562]  
[09:13:47.563]  <debugvars>
[09:13:47.563]    // Pre-defined
[09:13:47.563]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:13:47.563]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:13:47.564]    __dp=0x00000000
[09:13:47.564]    __ap=0x00000000
[09:13:47.564]    __traceout=0x00000000      (Trace Disabled)
[09:13:47.565]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:13:47.565]    __FlashAddr=0x00000000
[09:13:47.565]    __FlashLen=0x00000000
[09:13:47.566]    __FlashArg=0x00000000
[09:13:47.566]    __FlashOp=0x00000000
[09:13:47.566]    __Result=0x00000000
[09:13:47.566]  </debugvars>
[09:13:47.566]  
[09:13:47.567]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:13:47.567]    <block atomic="false" info="">
[09:13:47.567]      __var SW_DP_ABORT  = 0x0;
[09:13:47.567]        // -> [SW_DP_ABORT <= 0x00000000]
[09:13:47.568]      __var DP_CTRL_STAT = 0x4;
[09:13:47.568]        // -> [DP_CTRL_STAT <= 0x00000004]
[09:13:47.568]      __var DP_SELECT    = 0x8;
[09:13:47.568]        // -> [DP_SELECT <= 0x00000008]
[09:13:47.569]      __var powered_down = 0;
[09:13:47.569]        // -> [powered_down <= 0x00000000]
[09:13:47.569]      WriteDP(DP_SELECT, 0x00000000);
[09:13:47.571]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:13:47.572]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:13:47.573]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[09:13:47.574]        // -> [powered_down <= 0x00000001]
[09:13:47.574]    </block>
[09:13:47.574]    <control if="powered_down" while="" timeout="0" info="">
[09:13:47.575]      // if-block "powered_down"
[09:13:47.575]        // =>  TRUE
[09:13:47.575]      <block atomic="false" info="">
[09:13:47.576]        WriteDP(DP_CTRL_STAT, 0x50000000);
[09:13:47.577]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[09:13:47.578]      </block>
[09:13:47.578]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[09:13:47.578]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[09:13:47.580]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:13:47.580]        // while-condition  =>  FALSE
[09:13:47.581]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[09:13:47.581]      </control>
[09:13:47.581]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[09:13:47.582]        // if-block "(__protocol & 0xFFFF) == 1"
[09:13:47.582]          // =>  FALSE
[09:13:47.582]        // skip if-block "(__protocol & 0xFFFF) == 1"
[09:13:47.583]      </control>
[09:13:47.583]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[09:13:47.583]        // if-block "(__protocol & 0xFFFF) == 2"
[09:13:47.583]          // =>  TRUE
[09:13:47.584]        <block atomic="false" info="">
[09:13:47.584]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[09:13:47.586]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[09:13:47.586]          WriteDP(SW_DP_ABORT, 0x0000001E);
[09:13:47.588]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[09:13:47.588]        </block>
[09:13:47.589]        // end if-block "(__protocol & 0xFFFF) == 2"
[09:13:47.589]      </control>
[09:13:47.589]      // end if-block "powered_down"
[09:13:47.590]    </control>
[09:13:47.590]  </sequence>
[09:13:47.590]  
[09:13:47.695]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:13:47.695]  
[09:13:47.695]  <debugvars>
[09:13:47.695]    // Pre-defined
[09:13:47.695]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:13:47.696]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:13:47.696]    __dp=0x00000000
[09:13:47.696]    __ap=0x00000000
[09:13:47.696]    __traceout=0x00000000      (Trace Disabled)
[09:13:47.697]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:13:47.697]    __FlashAddr=0x00000000
[09:13:47.697]    __FlashLen=0x00000000
[09:13:47.697]    __FlashArg=0x00000000
[09:13:47.697]    __FlashOp=0x00000000
[09:13:47.698]    __Result=0x00000000
[09:13:47.698]  </debugvars>
[09:13:47.698]  
[09:13:47.698]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:13:47.699]    <block atomic="true" info="">
[09:13:47.706]  
[09:13:47.706]  ! W001 : No atomic sequence support in debug unit
[09:13:47.706]  
[09:13:47.724]      __var DP_R_IDCODE    = 0x0;
[09:13:47.725]        // -> [DP_R_IDCODE <= 0x00000000]
[09:13:47.725]      __var DP_W_ABORT    = 0x0;
[09:13:47.725]        // -> [DP_W_ABORT <= 0x00000000]
[09:13:47.725]      __var DP_CTRLSTAT = 0x4;
[09:13:47.726]        // -> [DP_CTRLSTAT <= 0x00000004]
[09:13:47.726]      __var DP_W_SELECT    = 0x8;
[09:13:47.726]        // -> [DP_W_SELECT <= 0x00000008]
[09:13:47.727]      __var AP_TAR		= 0x4;
[09:13:47.727]        // -> [AP_TAR <= 0x00000004]
[09:13:47.727]      __var AP_BD0		= 0x0;
[09:13:47.727]        // -> [AP_BD0 <= 0x00000000]
[09:13:47.727]      __var AP_BD1		= 0x4;
[09:13:47.728]        // -> [AP_BD1 <= 0x00000004]
[09:13:47.728]      __var AP_BD2		= 0x8;
[09:13:47.728]        // -> [AP_BD2 <= 0x00000008]
[09:13:47.728]      __var PCWithinFlash = 0;
[09:13:47.729]        // -> [PCWithinFlash <= 0x00000000]
[09:13:47.729]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:13:47.735]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.735]    </block>
[09:13:47.735]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:13:47.735]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:13:47.742]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.747]      // while-condition  =>  FALSE
[09:13:47.747]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:13:47.747]    </control>
[09:13:47.747]    <block atomic="true" info="">
[09:13:47.752]  
[09:13:47.752]  ! W001 : No atomic sequence support in debug unit
[09:13:47.752]  
[09:13:47.755]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:13:47.758]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:13:47.758]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:13:47.760]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.760]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:13:47.762]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:13:47.762]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:13:47.766]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.766]    </block>
[09:13:47.766]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:13:47.767]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.769]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.769]      // while-condition  =>  TRUE
[09:13:47.769]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.772]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.772]      // while-condition  =>  TRUE
[09:13:47.772]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.775]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.776]      // while-condition  =>  TRUE
[09:13:47.777]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.780]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.780]      // while-condition  =>  TRUE
[09:13:47.781]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.784]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.784]      // while-condition  =>  TRUE
[09:13:47.784]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.787]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.787]      // while-condition  =>  TRUE
[09:13:47.787]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.790]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.790]      // while-condition  =>  TRUE
[09:13:47.790]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.793]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.793]      // while-condition  =>  TRUE
[09:13:47.793]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.796]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.797]      // while-condition  =>  TRUE
[09:13:47.797]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.800]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.801]      // while-condition  =>  TRUE
[09:13:47.801]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.804]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.804]      // while-condition  =>  TRUE
[09:13:47.804]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.807]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.807]      // while-condition  =>  TRUE
[09:13:47.807]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.809]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.809]      // while-condition  =>  TRUE
[09:13:47.810]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.812]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.812]      // while-condition  =>  TRUE
[09:13:47.812]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.815]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.815]      // while-condition  =>  TRUE
[09:13:47.815]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.818]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.818]      // while-condition  =>  TRUE
[09:13:47.818]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.821]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.821]      // while-condition  =>  TRUE
[09:13:47.821]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.824]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.824]      // while-condition  =>  TRUE
[09:13:47.824]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.827]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.827]      // while-condition  =>  TRUE
[09:13:47.828]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.830]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.830]      // while-condition  =>  TRUE
[09:13:47.830]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.833]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.833]      // while-condition  =>  TRUE
[09:13:47.834]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.836]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.836]      // while-condition  =>  TRUE
[09:13:47.836]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.839]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.839]      // while-condition  =>  TRUE
[09:13:47.840]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.842]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.843]      // while-condition  =>  TRUE
[09:13:47.843]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.846]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.846]      // while-condition  =>  TRUE
[09:13:47.846]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.849]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.849]      // while-condition  =>  TRUE
[09:13:47.849]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.852]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.852]      // while-condition  =>  TRUE
[09:13:47.853]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.855]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.855]      // while-condition  =>  TRUE
[09:13:47.855]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.858]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.858]      // while-condition  =>  TRUE
[09:13:47.859]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.861]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.861]      // while-condition  =>  TRUE
[09:13:47.861]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.864]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.864]      // while-condition  =>  TRUE
[09:13:47.865]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:47.865]      // while  =>  TIMEOUT
[09:13:47.865]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:13:47.865]    </control>
[09:13:47.865]    <block atomic="false" info="">
[09:13:47.866]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:13:47.868]        // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:13:47.868]        // -> [PCWithinFlash <= 0x00000000]
[09:13:47.869]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:13:47.871]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:13:47.871]    </block>
[09:13:47.872]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:13:47.872]      // if-block "PCWithinFlash == 0"
[09:13:47.872]        // =>  TRUE
[09:13:47.872]      // end if-block "PCWithinFlash == 0"
[09:13:47.873]    </control>
[09:13:47.873]  </sequence>
[09:13:47.873]  
[09:13:47.919]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[09:13:47.919]  
[09:13:47.924]  <debugvars>
[09:13:47.924]    // Pre-defined
[09:13:47.924]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:13:47.924]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:13:47.925]    __dp=0x00000000
[09:13:47.925]    __ap=0x00000000
[09:13:47.925]    __traceout=0x00000000      (Trace Disabled)
[09:13:47.925]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:13:47.926]    __FlashAddr=0x00000000
[09:13:47.926]    __FlashLen=0x00000000
[09:13:47.926]    __FlashArg=0x00000000
[09:13:47.927]    __FlashOp=0x00000000
[09:13:47.927]    __Result=0x00000000
[09:13:47.927]  </debugvars>
[09:13:47.927]  
[09:13:47.927]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[09:13:47.928]    <block atomic="false" info="">
[09:13:47.928]    </block>
[09:13:47.928]  </sequence>
[09:13:47.928]  
[09:13:47.930]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[09:13:47.930]  
[09:13:47.930]  <debugvars>
[09:13:47.931]    // Pre-defined
[09:13:47.931]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:13:47.931]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:13:47.931]    __dp=0x00000000
[09:13:47.932]    __ap=0x00000000
[09:13:47.932]    __traceout=0x00000000      (Trace Disabled)
[09:13:47.932]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:13:47.932]    __FlashAddr=0x00000000
[09:13:47.933]    __FlashLen=0x00000000
[09:13:47.933]    __FlashArg=0x00000000
[09:13:47.933]    __FlashOp=0x00000000
[09:13:47.933]    __Result=0x00000000
[09:13:47.934]  </debugvars>
[09:13:47.934]  
[09:13:47.934]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:13:47.934]    <block atomic="false" info="">
[09:13:47.935]      __var nReset      = 0x80;
[09:13:47.935]        // -> [nReset <= 0x00000080]
[09:13:47.935]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:13:47.937]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:13:47.937]    </block>
[09:13:47.938]    <control if="" while="1" timeout="50000" info="">
[09:13:47.938]      // while "1"  (timeout="50000")
[09:13:47.938]      // while-condition  =>  TRUE
[09:13:47.938]      // while "1"  (timeout="50000")
[09:13:47.939]      // while-condition  =>  TRUE
[09:13:47.939]      // while "1"  (timeout="50000")
[09:13:47.939]      // while-condition  =>  TRUE
[09:13:47.939]      // while "1"  (timeout="50000")
[09:13:47.940]      // while-condition  =>  TRUE
[09:13:47.940]      // while "1"  (timeout="50000")
[09:13:47.940]      // while-condition  =>  TRUE
[09:13:47.940]      // while "1"  (timeout="50000")
[09:13:47.940]      // while-condition  =>  TRUE
[09:13:47.941]      // while "1"  (timeout="50000")
[09:13:47.941]      // while-condition  =>  TRUE
[09:13:47.941]      // while "1"  (timeout="50000")
[09:13:47.942]      // while-condition  =>  TRUE
[09:13:47.942]      // while "1"  (timeout="50000")
[09:13:47.942]      // while-condition  =>  TRUE
[09:13:47.942]      // while "1"  (timeout="50000")
[09:13:47.943]      // while-condition  =>  TRUE
[09:13:47.943]      // while "1"  (timeout="50000")
[09:13:47.943]      // while-condition  =>  TRUE
[09:13:47.943]      // while "1"  (timeout="50000")
[09:13:47.943]      // while-condition  =>  TRUE
[09:13:47.944]      // while "1"  (timeout="50000")
[09:13:47.944]      // while-condition  =>  TRUE
[09:13:47.944]      // while "1"  (timeout="50000")
[09:13:47.944]      // while-condition  =>  TRUE
[09:13:47.945]      // while "1"  (timeout="50000")
[09:13:47.945]      // while-condition  =>  TRUE
[09:13:47.945]      // while "1"  (timeout="50000")
[09:13:47.945]      // while-condition  =>  TRUE
[09:13:47.946]      // while "1"  (timeout="50000")
[09:13:47.946]      // while-condition  =>  TRUE
[09:13:47.946]      // while "1"  (timeout="50000")
[09:13:47.946]      // while-condition  =>  TRUE
[09:13:47.947]      // while "1"  (timeout="50000")
[09:13:47.947]      // while-condition  =>  TRUE
[09:13:47.947]      // while "1"  (timeout="50000")
[09:13:47.947]      // while-condition  =>  TRUE
[09:13:47.948]      // while "1"  (timeout="50000")
[09:13:47.948]      // while-condition  =>  TRUE
[09:13:47.948]      // while "1"  (timeout="50000")
[09:13:47.948]      // while-condition  =>  TRUE
[09:13:47.949]      // while "1"  (timeout="50000")
[09:13:47.949]      // while-condition  =>  TRUE
[09:13:47.949]      // while "1"  (timeout="50000")
[09:13:47.949]      // while-condition  =>  TRUE
[09:13:47.949]      // while "1"  (timeout="50000")
[09:13:47.950]      // while-condition  =>  TRUE
[09:13:47.950]      // while "1"  (timeout="50000")
[09:13:47.950]      // while-condition  =>  TRUE
[09:13:47.950]      // while "1"  (timeout="50000")
[09:13:47.951]      // while-condition  =>  TRUE
[09:13:47.951]      // while "1"  (timeout="50000")
[09:13:47.951]      // while-condition  =>  TRUE
[09:13:47.951]      // while "1"  (timeout="50000")
[09:13:47.952]      // while-condition  =>  TRUE
[09:13:47.952]      // while "1"  (timeout="50000")
[09:13:47.952]      // while-condition  =>  TRUE
[09:13:47.952]      // while "1"  (timeout="50000")
[09:13:47.952]      // while-condition  =>  TRUE
[09:13:47.953]      // while "1"  (timeout="50000")
[09:13:47.953]      // while-condition  =>  TRUE
[09:13:47.953]      // while "1"  (timeout="50000")
[09:13:47.953]      // while-condition  =>  TRUE
[09:13:47.954]      // while "1"  (timeout="50000")
[09:13:47.963]      // while-condition  =>  TRUE
[09:13:47.963]      // while "1"  (timeout="50000")
[09:13:47.964]      // while-condition  =>  TRUE
[09:13:47.964]      // while "1"  (timeout="50000")
[09:13:47.964]      // while-condition  =>  TRUE
[09:13:47.964]      // while "1"  (timeout="50000")
[09:13:47.965]      // while-condition  =>  TRUE
[09:13:47.965]      // while "1"  (timeout="50000")
[09:13:47.965]      // while-condition  =>  TRUE
[09:13:47.965]      // while "1"  (timeout="50000")
[09:13:47.966]      // while-condition  =>  TRUE
[09:13:47.966]      // while "1"  (timeout="50000")
[09:13:47.966]      // while-condition  =>  TRUE
[09:13:47.967]      // while "1"  (timeout="50000")
[09:13:47.967]      // while-condition  =>  TRUE
[09:13:47.967]      // while "1"  (timeout="50000")
[09:13:47.967]      // while-condition  =>  TRUE
[09:13:47.968]      // while "1"  (timeout="50000")
[09:13:47.968]      // while-condition  =>  TRUE
[09:13:47.968]      // while "1"  (timeout="50000")
[09:13:47.968]      // while-condition  =>  TRUE
[09:13:47.969]      // while "1"  (timeout="50000")
[09:13:47.969]      // while-condition  =>  TRUE
[09:13:47.969]      // while "1"  (timeout="50000")
[09:13:47.969]      // while-condition  =>  TRUE
[09:13:47.970]      // while "1"  (timeout="50000")
[09:13:47.970]      // while-condition  =>  TRUE
[09:13:47.970]      // while "1"  (timeout="50000")
[09:13:47.971]      // while-condition  =>  TRUE
[09:13:47.971]      // while "1"  (timeout="50000")
[09:13:47.971]      // while-condition  =>  TRUE
[09:13:47.971]      // while "1"  (timeout="50000")
[09:13:47.971]      // while-condition  =>  TRUE
[09:13:47.972]      // while "1"  (timeout="50000")
[09:13:47.972]      // while-condition  =>  TRUE
[09:13:47.972]      // while "1"  (timeout="50000")
[09:13:47.972]      // while-condition  =>  TRUE
[09:13:47.973]      // while "1"  (timeout="50000")
[09:13:47.973]      // while-condition  =>  TRUE
[09:13:47.973]      // while "1"  (timeout="50000")
[09:13:47.973]      // while-condition  =>  TRUE
[09:13:47.974]      // while "1"  (timeout="50000")
[09:13:47.974]      // while-condition  =>  TRUE
[09:13:47.974]      // while "1"  (timeout="50000")
[09:13:47.974]      // while-condition  =>  TRUE
[09:13:47.975]      // while "1"  (timeout="50000")
[09:13:47.975]      // while-condition  =>  TRUE
[09:13:47.975]      // while "1"  (timeout="50000")
[09:13:47.975]      // while-condition  =>  TRUE
[09:13:47.976]      // while "1"  (timeout="50000")
[09:13:47.976]      // while-condition  =>  TRUE
[09:13:47.976]      // while "1"  (timeout="50000")
[09:13:47.976]      // while-condition  =>  TRUE
[09:13:47.977]      // while "1"  (timeout="50000")
[09:13:47.977]      // while-condition  =>  TRUE
[09:13:47.977]      // while "1"  (timeout="50000")
[09:13:47.977]      // while-condition  =>  TRUE
[09:13:47.978]      // while "1"  (timeout="50000")
[09:13:47.978]      // while-condition  =>  TRUE
[09:13:47.978]      // while "1"  (timeout="50000")
[09:13:47.978]      // while-condition  =>  TRUE
[09:13:47.979]      // while "1"  (timeout="50000")
[09:13:47.979]      // while-condition  =>  TRUE
[09:13:47.979]      // while "1"  (timeout="50000")
[09:13:47.979]      // while-condition  =>  TRUE
[09:13:47.979]      // while "1"  (timeout="50000")
[09:13:47.980]      // while-condition  =>  TRUE
[09:13:47.980]      // while "1"  (timeout="50000")
[09:13:47.980]      // while-condition  =>  TRUE
[09:13:47.980]      // while "1"  (timeout="50000")
[09:13:47.981]      // while-condition  =>  TRUE
[09:13:47.981]      // while "1"  (timeout="50000")
[09:13:47.981]      // while-condition  =>  TRUE
[09:13:47.981]      // while "1"  (timeout="50000")
[09:13:47.982]      // while-condition  =>  TRUE
[09:13:47.982]      // while "1"  (timeout="50000")
[09:13:47.982]      // while-condition  =>  TRUE
[09:13:47.982]      // while "1"  (timeout="50000")
[09:13:47.983]      // while-condition  =>  TRUE
[09:13:47.983]      // while "1"  (timeout="50000")
[09:13:47.983]      // while-condition  =>  TRUE
[09:13:47.983]      // while "1"  (timeout="50000")
[09:13:47.983]      // while-condition  =>  TRUE
[09:13:47.984]      // while "1"  (timeout="50000")
[09:13:47.984]      // while-condition  =>  TRUE
[09:13:47.984]      // while "1"  (timeout="50000")
[09:13:47.984]      // while-condition  =>  TRUE
[09:13:47.985]      // while "1"  (timeout="50000")
[09:13:47.985]      // while-condition  =>  TRUE
[09:13:47.985]      // while "1"  (timeout="50000")
[09:13:47.985]      // while-condition  =>  TRUE
[09:13:47.986]      // while "1"  (timeout="50000")
[09:13:47.986]      // while-condition  =>  TRUE
[09:13:47.986]      // while "1"  (timeout="50000")
[09:13:47.986]      // while-condition  =>  TRUE
[09:13:47.987]      // while "1"  (timeout="50000")
[09:13:47.987]      // while  =>  TIMEOUT
[09:13:47.987]      // end while "1"
[09:13:47.987]    </control>
[09:13:47.988]    <block atomic="false" info="">
[09:13:47.988]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:13:47.990]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:13:47.991]    </block>
[09:13:47.991]    <control if="" while="1" timeout="10000" info="">
[09:13:47.991]      // while "1"  (timeout="10000")
[09:13:47.991]      // while-condition  =>  TRUE
[09:13:47.992]      // while "1"  (timeout="10000")
[09:13:47.992]      // while-condition  =>  TRUE
[09:13:47.992]      // while "1"  (timeout="10000")
[09:13:47.992]      // while-condition  =>  TRUE
[09:13:47.992]      // while "1"  (timeout="10000")
[09:13:47.993]      // while-condition  =>  TRUE
[09:13:47.993]      // while "1"  (timeout="10000")
[09:13:47.993]      // while-condition  =>  TRUE
[09:13:47.993]      // while "1"  (timeout="10000")
[09:13:47.994]      // while-condition  =>  TRUE
[09:13:47.994]      // while "1"  (timeout="10000")
[09:13:47.994]      // while-condition  =>  TRUE
[09:13:47.994]      // while "1"  (timeout="10000")
[09:13:47.995]      // while-condition  =>  TRUE
[09:13:47.995]      // while "1"  (timeout="10000")
[09:13:47.995]      // while-condition  =>  TRUE
[09:13:47.995]      // while "1"  (timeout="10000")
[09:13:47.996]      // while-condition  =>  TRUE
[09:13:47.996]      // while "1"  (timeout="10000")
[09:13:47.996]      // while-condition  =>  TRUE
[09:13:47.996]      // while "1"  (timeout="10000")
[09:13:47.996]      // while-condition  =>  TRUE
[09:13:47.997]      // while "1"  (timeout="10000")
[09:13:47.998]      // while-condition  =>  TRUE
[09:13:47.998]      // while "1"  (timeout="10000")
[09:13:47.998]      // while-condition  =>  TRUE
[09:13:47.998]      // while "1"  (timeout="10000")
[09:13:47.999]      // while-condition  =>  TRUE
[09:13:47.999]      // while "1"  (timeout="10000")
[09:13:47.999]      // while-condition  =>  TRUE
[09:13:47.999]      // while "1"  (timeout="10000")
[09:13:48.000]      // while-condition  =>  TRUE
[09:13:48.000]      // while "1"  (timeout="10000")
[09:13:48.000]      // while-condition  =>  TRUE
[09:13:48.000]      // while "1"  (timeout="10000")
[09:13:48.001]      // while-condition  =>  TRUE
[09:13:48.001]      // while "1"  (timeout="10000")
[09:13:48.001]      // while-condition  =>  TRUE
[09:13:48.001]      // while "1"  (timeout="10000")
[09:13:48.002]      // while-condition  =>  TRUE
[09:13:48.002]      // while "1"  (timeout="10000")
[09:13:48.002]      // while-condition  =>  TRUE
[09:13:48.002]      // while "1"  (timeout="10000")
[09:13:48.002]      // while-condition  =>  TRUE
[09:13:48.003]      // while "1"  (timeout="10000")
[09:13:48.003]      // while  =>  TIMEOUT
[09:13:48.003]      // end while "1"
[09:13:48.003]    </control>
[09:13:48.004]    <block atomic="true" info="">
[09:13:48.008]  
[09:13:48.008]  ! W001 : No atomic sequence support in debug unit
[09:13:48.008]  
[09:13:48.010]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:13:48.012]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:13:48.013]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:13:48.014]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:13:48.015]    </block>
[09:13:48.015]    <block atomic="false" info="">
[09:13:48.015]      __errorcontrol = 0x00000001;
[09:13:48.015]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:13:48.016]      ReadDP(0x0);
[09:13:48.017]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:13:48.018]      __errorcontrol = 0x00000000;
[09:13:48.018]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:13:48.018]    </block>
[09:13:48.018]  </sequence>
[09:13:48.019]  
[09:13:48.022]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[09:13:48.022]  
[09:13:48.023]  <debugvars>
[09:13:48.023]    // Pre-defined
[09:13:48.023]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:13:48.023]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:13:48.024]    __dp=0x00000000
[09:13:48.024]    __ap=0x00000000
[09:13:48.024]    __traceout=0x00000000      (Trace Disabled)
[09:13:48.024]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:13:48.025]    __FlashAddr=0x00000000
[09:13:48.025]    __FlashLen=0x00000000
[09:13:48.025]    __FlashArg=0x00000000
[09:13:48.026]    __FlashOp=0x00000000
[09:13:48.026]    __Result=0x00000000
[09:13:48.026]  </debugvars>
[09:13:48.026]  
[09:13:48.027]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[09:13:48.027]    <block atomic="false" info="">
[09:13:48.027]    </block>
[09:13:48.027]  </sequence>
[09:13:48.028]  
[09:13:48.266]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[09:13:48.266]  
[09:13:48.267]  <debugvars>
[09:13:48.268]    // Pre-defined
[09:13:48.269]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:13:48.269]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:13:48.270]    __dp=0x00000000
[09:13:48.271]    __ap=0x00000000
[09:13:48.271]    __traceout=0x00000000      (Trace Disabled)
[09:13:48.272]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:13:48.273]    __FlashAddr=0x00000000
[09:13:48.273]    __FlashLen=0x00000000
[09:13:48.274]    __FlashArg=0x00000000
[09:13:48.274]    __FlashOp=0x00000000
[09:13:48.275]    __Result=0x00000000
[09:13:48.276]  </debugvars>
[09:13:48.276]  
[09:13:48.277]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[09:13:48.277]    <block atomic="false" info="">
[09:13:48.278]      Sequence("ResetHardware");
[09:13:48.278]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:13:48.279]          <block atomic="false" info="">
[09:13:48.279]            __var nReset      = 0x80;
[09:13:48.280]              // -> [nReset <= 0x00000080]
[09:13:48.280]            DAP_SWJ_Pins(0x00, nReset, 0);
[09:13:48.283]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:13:48.283]          </block>
[09:13:48.284]          <control if="" while="1" timeout="50000" info="">
[09:13:48.284]            // while "1"  (timeout="50000")
[09:13:48.284]            // while-condition  =>  TRUE
[09:13:48.285]            // while "1"  (timeout="50000")
[09:13:48.285]            // while-condition  =>  TRUE
[09:13:48.285]            // while "1"  (timeout="50000")
[09:13:48.286]            // while-condition  =>  TRUE
[09:13:48.286]            // while "1"  (timeout="50000")
[09:13:48.286]            // while-condition  =>  TRUE
[09:13:48.287]            // while "1"  (timeout="50000")
[09:13:48.287]            // while-condition  =>  TRUE
[09:13:48.287]            // while "1"  (timeout="50000")
[09:13:48.288]            // while-condition  =>  TRUE
[09:13:48.288]            // while "1"  (timeout="50000")
[09:13:48.289]            // while-condition  =>  TRUE
[09:13:48.289]            // while "1"  (timeout="50000")
[09:13:48.290]            // while-condition  =>  TRUE
[09:13:48.290]            // while "1"  (timeout="50000")
[09:13:48.291]            // while-condition  =>  TRUE
[09:13:48.291]            // while "1"  (timeout="50000")
[09:13:48.292]            // while-condition  =>  TRUE
[09:13:48.292]            // while "1"  (timeout="50000")
[09:13:48.293]            // while-condition  =>  TRUE
[09:13:48.293]            // while "1"  (timeout="50000")
[09:13:48.293]            // while-condition  =>  TRUE
[09:13:48.293]            // while "1"  (timeout="50000")
[09:13:48.294]            // while-condition  =>  TRUE
[09:13:48.294]            // while "1"  (timeout="50000")
[09:13:48.294]            // while-condition  =>  TRUE
[09:13:48.294]            // while "1"  (timeout="50000")
[09:13:48.295]            // while-condition  =>  TRUE
[09:13:48.295]            // while "1"  (timeout="50000")
[09:13:48.295]            // while-condition  =>  TRUE
[09:13:48.296]            // while "1"  (timeout="50000")
[09:13:48.296]            // while-condition  =>  TRUE
[09:13:48.296]            // while "1"  (timeout="50000")
[09:13:48.297]            // while-condition  =>  TRUE
[09:13:48.297]            // while "1"  (timeout="50000")
[09:13:48.297]            // while-condition  =>  TRUE
[09:13:48.297]            // while "1"  (timeout="50000")
[09:13:48.298]            // while-condition  =>  TRUE
[09:13:48.298]            // while "1"  (timeout="50000")
[09:13:48.298]            // while-condition  =>  TRUE
[09:13:48.298]            // while "1"  (timeout="50000")
[09:13:48.298]            // while-condition  =>  TRUE
[09:13:48.299]            // while "1"  (timeout="50000")
[09:13:48.299]            // while-condition  =>  TRUE
[09:13:48.299]            // while "1"  (timeout="50000")
[09:13:48.299]            // while-condition  =>  TRUE
[09:13:48.300]            // while "1"  (timeout="50000")
[09:13:48.300]            // while-condition  =>  TRUE
[09:13:48.300]            // while "1"  (timeout="50000")
[09:13:48.301]            // while-condition  =>  TRUE
[09:13:48.301]            // while "1"  (timeout="50000")
[09:13:48.301]            // while-condition  =>  TRUE
[09:13:48.301]            // while "1"  (timeout="50000")
[09:13:48.302]            // while-condition  =>  TRUE
[09:13:48.302]            // while "1"  (timeout="50000")
[09:13:48.302]            // while-condition  =>  TRUE
[09:13:48.302]            // while "1"  (timeout="50000")
[09:13:48.302]            // while-condition  =>  TRUE
[09:13:48.303]            // while "1"  (timeout="50000")
[09:13:48.303]            // while-condition  =>  TRUE
[09:13:48.303]            // while "1"  (timeout="50000")
[09:13:48.304]            // while-condition  =>  TRUE
[09:13:48.304]            // while "1"  (timeout="50000")
[09:13:48.304]            // while-condition  =>  TRUE
[09:13:48.305]            // while "1"  (timeout="50000")
[09:13:48.305]            // while-condition  =>  TRUE
[09:13:48.305]            // while "1"  (timeout="50000")
[09:13:48.306]            // while-condition  =>  TRUE
[09:13:48.306]            // while "1"  (timeout="50000")
[09:13:48.306]            // while-condition  =>  TRUE
[09:13:48.306]            // while "1"  (timeout="50000")
[09:13:48.306]            // while-condition  =>  TRUE
[09:13:48.306]            // while "1"  (timeout="50000")
[09:13:48.306]            // while-condition  =>  TRUE
[09:13:48.307]            // while "1"  (timeout="50000")
[09:13:48.307]            // while-condition  =>  TRUE
[09:13:48.307]            // while "1"  (timeout="50000")
[09:13:48.307]            // while-condition  =>  TRUE
[09:13:48.307]            // while "1"  (timeout="50000")
[09:13:48.308]            // while-condition  =>  TRUE
[09:13:48.308]            // while "1"  (timeout="50000")
[09:13:48.308]            // while-condition  =>  TRUE
[09:13:48.309]            // while "1"  (timeout="50000")
[09:13:48.309]            // while-condition  =>  TRUE
[09:13:48.309]            // while "1"  (timeout="50000")
[09:13:48.309]            // while-condition  =>  TRUE
[09:13:48.309]            // while "1"  (timeout="50000")
[09:13:48.310]            // while-condition  =>  TRUE
[09:13:48.310]            // while "1"  (timeout="50000")
[09:13:48.310]            // while-condition  =>  TRUE
[09:13:48.310]            // while "1"  (timeout="50000")
[09:13:48.310]            // while-condition  =>  TRUE
[09:13:48.310]            // while "1"  (timeout="50000")
[09:13:48.311]            // while-condition  =>  TRUE
[09:13:48.311]            // while "1"  (timeout="50000")
[09:13:48.311]            // while-condition  =>  TRUE
[09:13:48.311]            // while "1"  (timeout="50000")
[09:13:48.311]            // while-condition  =>  TRUE
[09:13:48.311]            // while "1"  (timeout="50000")
[09:13:48.311]            // while-condition  =>  TRUE
[09:13:48.312]            // while "1"  (timeout="50000")
[09:13:48.312]            // while-condition  =>  TRUE
[09:13:48.312]            // while "1"  (timeout="50000")
[09:13:48.313]            // while-condition  =>  TRUE
[09:13:48.313]            // while "1"  (timeout="50000")
[09:13:48.313]            // while-condition  =>  TRUE
[09:13:48.313]            // while "1"  (timeout="50000")
[09:13:48.313]            // while-condition  =>  TRUE
[09:13:48.313]            // while "1"  (timeout="50000")
[09:13:48.314]            // while-condition  =>  TRUE
[09:13:48.314]            // while "1"  (timeout="50000")
[09:13:48.314]            // while-condition  =>  TRUE
[09:13:48.314]            // while "1"  (timeout="50000")
[09:13:48.314]            // while-condition  =>  TRUE
[09:13:48.314]            // while "1"  (timeout="50000")
[09:13:48.315]            // while-condition  =>  TRUE
[09:13:48.315]            // while "1"  (timeout="50000")
[09:13:48.315]            // while-condition  =>  TRUE
[09:13:48.315]            // while "1"  (timeout="50000")
[09:13:48.315]            // while-condition  =>  TRUE
[09:13:48.316]            // while "1"  (timeout="50000")
[09:13:48.316]            // while-condition  =>  TRUE
[09:13:48.316]            // while "1"  (timeout="50000")
[09:13:48.316]            // while-condition  =>  TRUE
[09:13:48.316]            // while "1"  (timeout="50000")
[09:13:48.317]            // while-condition  =>  TRUE
[09:13:48.317]            // while "1"  (timeout="50000")
[09:13:48.317]            // while-condition  =>  TRUE
[09:13:48.317]            // while "1"  (timeout="50000")
[09:13:48.317]            // while-condition  =>  TRUE
[09:13:48.318]            // while "1"  (timeout="50000")
[09:13:48.318]            // while-condition  =>  TRUE
[09:13:48.318]            // while "1"  (timeout="50000")
[09:13:48.318]            // while-condition  =>  TRUE
[09:13:48.318]            // while "1"  (timeout="50000")
[09:13:48.319]            // while-condition  =>  TRUE
[09:13:48.320]            // while "1"  (timeout="50000")
[09:13:48.320]            // while-condition  =>  TRUE
[09:13:48.320]            // while "1"  (timeout="50000")
[09:13:48.320]            // while-condition  =>  TRUE
[09:13:48.320]            // while "1"  (timeout="50000")
[09:13:48.321]            // while-condition  =>  TRUE
[09:13:48.321]            // while "1"  (timeout="50000")
[09:13:48.321]            // while-condition  =>  TRUE
[09:13:48.321]            // while "1"  (timeout="50000")
[09:13:48.321]            // while-condition  =>  TRUE
[09:13:48.321]            // while "1"  (timeout="50000")
[09:13:48.321]            // while-condition  =>  TRUE
[09:13:48.322]            // while "1"  (timeout="50000")
[09:13:48.322]            // while-condition  =>  TRUE
[09:13:48.322]            // while "1"  (timeout="50000")
[09:13:48.323]            // while-condition  =>  TRUE
[09:13:48.323]            // while "1"  (timeout="50000")
[09:13:48.323]            // while-condition  =>  TRUE
[09:13:48.323]            // while "1"  (timeout="50000")
[09:13:48.323]            // while-condition  =>  TRUE
[09:13:48.324]            // while "1"  (timeout="50000")
[09:13:48.324]            // while-condition  =>  TRUE
[09:13:48.324]            // while "1"  (timeout="50000")
[09:13:48.324]            // while-condition  =>  TRUE
[09:13:48.324]            // while "1"  (timeout="50000")
[09:13:48.324]            // while-condition  =>  TRUE
[09:13:48.325]            // while "1"  (timeout="50000")
[09:13:48.325]            // while-condition  =>  TRUE
[09:13:48.325]            // while "1"  (timeout="50000")
[09:13:48.325]            // while-condition  =>  TRUE
[09:13:48.325]            // while "1"  (timeout="50000")
[09:13:48.326]            // while-condition  =>  TRUE
[09:13:48.326]            // while "1"  (timeout="50000")
[09:13:48.326]            // while-condition  =>  TRUE
[09:13:48.326]            // while "1"  (timeout="50000")
[09:13:48.326]            // while-condition  =>  TRUE
[09:13:48.327]            // while "1"  (timeout="50000")
[09:13:48.327]            // while-condition  =>  TRUE
[09:13:48.327]            // while "1"  (timeout="50000")
[09:13:48.327]            // while-condition  =>  TRUE
[09:13:48.327]            // while "1"  (timeout="50000")
[09:13:48.328]            // while-condition  =>  TRUE
[09:13:48.328]            // while "1"  (timeout="50000")
[09:13:48.328]            // while-condition  =>  TRUE
[09:13:48.328]            // while "1"  (timeout="50000")
[09:13:48.328]            // while-condition  =>  TRUE
[09:13:48.329]            // while "1"  (timeout="50000")
[09:13:48.329]            // while-condition  =>  TRUE
[09:13:48.329]            // while "1"  (timeout="50000")
[09:13:48.329]            // while-condition  =>  TRUE
[09:13:48.329]            // while "1"  (timeout="50000")
[09:13:48.329]            // while-condition  =>  TRUE
[09:13:48.329]            // while "1"  (timeout="50000")
[09:13:48.329]            // while-condition  =>  TRUE
[09:13:48.329]            // while "1"  (timeout="50000")
[09:13:48.329]            // while-condition  =>  TRUE
[09:13:48.330]            // while "1"  (timeout="50000")
[09:13:48.331]            // while-condition  =>  TRUE
[09:13:48.331]            // while "1"  (timeout="50000")
[09:13:48.331]            // while-condition  =>  TRUE
[09:13:48.331]            // while "1"  (timeout="50000")
[09:13:48.331]            // while-condition  =>  TRUE
[09:13:48.331]            // while "1"  (timeout="50000")
[09:13:48.332]            // while-condition  =>  TRUE
[09:13:48.332]            // while "1"  (timeout="50000")
[09:13:48.332]            // while-condition  =>  TRUE
[09:13:48.332]            // while "1"  (timeout="50000")
[09:13:48.332]            // while-condition  =>  TRUE
[09:13:48.333]            // while "1"  (timeout="50000")
[09:13:48.333]            // while-condition  =>  TRUE
[09:13:48.333]            // while "1"  (timeout="50000")
[09:13:48.333]            // while-condition  =>  TRUE
[09:13:48.334]            // while "1"  (timeout="50000")
[09:13:48.334]            // while-condition  =>  TRUE
[09:13:48.334]            // while "1"  (timeout="50000")
[09:13:48.334]            // while-condition  =>  TRUE
[09:13:48.334]            // while "1"  (timeout="50000")
[09:13:48.334]            // while-condition  =>  TRUE
[09:13:48.335]            // while "1"  (timeout="50000")
[09:13:48.335]            // while-condition  =>  TRUE
[09:13:48.335]            // while "1"  (timeout="50000")
[09:13:48.335]            // while-condition  =>  TRUE
[09:13:48.336]            // while "1"  (timeout="50000")
[09:13:48.336]            // while-condition  =>  TRUE
[09:13:48.336]            // while "1"  (timeout="50000")
[09:13:48.336]            // while-condition  =>  TRUE
[09:13:48.336]            // while "1"  (timeout="50000")
[09:13:48.337]            // while-condition  =>  TRUE
[09:13:48.337]            // while "1"  (timeout="50000")
[09:13:48.337]            // while-condition  =>  TRUE
[09:13:48.337]            // while "1"  (timeout="50000")
[09:13:48.337]            // while-condition  =>  TRUE
[09:13:48.337]            // while "1"  (timeout="50000")
[09:13:48.338]            // while-condition  =>  TRUE
[09:13:48.338]            // while "1"  (timeout="50000")
[09:13:48.338]            // while-condition  =>  TRUE
[09:13:48.338]            // while "1"  (timeout="50000")
[09:13:48.338]            // while-condition  =>  TRUE
[09:13:48.339]            // while "1"  (timeout="50000")
[09:13:48.339]            // while-condition  =>  TRUE
[09:13:48.339]            // while "1"  (timeout="50000")
[09:13:48.339]            // while-condition  =>  TRUE
[09:13:48.339]            // while "1"  (timeout="50000")
[09:13:48.340]            // while-condition  =>  TRUE
[09:13:48.340]            // while "1"  (timeout="50000")
[09:13:48.340]            // while-condition  =>  TRUE
[09:13:48.340]            // while "1"  (timeout="50000")
[09:13:48.340]            // while-condition  =>  TRUE
[09:13:48.341]            // while "1"  (timeout="50000")
[09:13:48.341]            // while-condition  =>  TRUE
[09:13:48.341]            // while "1"  (timeout="50000")
[09:13:48.341]            // while-condition  =>  TRUE
[09:13:48.341]            // while "1"  (timeout="50000")
[09:13:48.342]            // while-condition  =>  TRUE
[09:13:48.342]            // while "1"  (timeout="50000")
[09:13:48.342]            // while-condition  =>  TRUE
[09:13:48.342]            // while "1"  (timeout="50000")
[09:13:48.342]            // while-condition  =>  TRUE
[09:13:48.342]            // while "1"  (timeout="50000")
[09:13:48.342]            // while-condition  =>  TRUE
[09:13:48.343]            // while "1"  (timeout="50000")
[09:13:48.343]            // while-condition  =>  TRUE
[09:13:48.343]            // while "1"  (timeout="50000")
[09:13:48.343]            // while-condition  =>  TRUE
[09:13:48.343]            // while "1"  (timeout="50000")
[09:13:48.344]            // while-condition  =>  TRUE
[09:13:48.344]            // while "1"  (timeout="50000")
[09:13:48.344]            // while-condition  =>  TRUE
[09:13:48.344]            // while "1"  (timeout="50000")
[09:13:48.344]            // while-condition  =>  TRUE
[09:13:48.345]            // while "1"  (timeout="50000")
[09:13:48.345]            // while-condition  =>  TRUE
[09:13:48.345]            // while "1"  (timeout="50000")
[09:13:48.345]            // while-condition  =>  TRUE
[09:13:48.345]            // while "1"  (timeout="50000")
[09:13:48.345]            // while-condition  =>  TRUE
[09:13:48.346]            // while "1"  (timeout="50000")
[09:13:48.346]            // while  =>  TIMEOUT
[09:13:48.346]            // end while "1"
[09:13:48.347]          </control>
[09:13:48.347]          <block atomic="false" info="">
[09:13:48.347]            DAP_SWJ_Pins(nReset, nReset, 0);
[09:13:48.349]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:13:48.349]          </block>
[09:13:48.349]          <control if="" while="1" timeout="10000" info="">
[09:13:48.349]            // while "1"  (timeout="10000")
[09:13:48.350]            // while-condition  =>  TRUE
[09:13:48.350]            // while "1"  (timeout="10000")
[09:13:48.350]            // while-condition  =>  TRUE
[09:13:48.350]            // while "1"  (timeout="10000")
[09:13:48.350]            // while-condition  =>  TRUE
[09:13:48.351]            // while "1"  (timeout="10000")
[09:13:48.351]            // while-condition  =>  TRUE
[09:13:48.351]            // while "1"  (timeout="10000")
[09:13:48.351]            // while-condition  =>  TRUE
[09:13:48.351]            // while "1"  (timeout="10000")
[09:13:48.351]            // while-condition  =>  TRUE
[09:13:48.351]            // while "1"  (timeout="10000")
[09:13:48.351]            // while-condition  =>  TRUE
[09:13:48.352]            // while "1"  (timeout="10000")
[09:13:48.352]            // while-condition  =>  TRUE
[09:13:48.352]            // while "1"  (timeout="10000")
[09:13:48.352]            // while-condition  =>  TRUE
[09:13:48.352]            // while "1"  (timeout="10000")
[09:13:48.353]            // while-condition  =>  TRUE
[09:13:48.353]            // while "1"  (timeout="10000")
[09:13:48.353]            // while-condition  =>  TRUE
[09:13:48.353]            // while "1"  (timeout="10000")
[09:13:48.353]            // while-condition  =>  TRUE
[09:13:48.354]            // while "1"  (timeout="10000")
[09:13:48.354]            // while-condition  =>  TRUE
[09:13:48.354]            // while "1"  (timeout="10000")
[09:13:48.354]            // while-condition  =>  TRUE
[09:13:48.354]            // while "1"  (timeout="10000")
[09:13:48.355]            // while-condition  =>  TRUE
[09:13:48.355]            // while "1"  (timeout="10000")
[09:13:48.355]            // while-condition  =>  TRUE
[09:13:48.356]            // while "1"  (timeout="10000")
[09:13:48.356]            // while-condition  =>  TRUE
[09:13:48.356]            // while "1"  (timeout="10000")
[09:13:48.356]            // while-condition  =>  TRUE
[09:13:48.356]            // while "1"  (timeout="10000")
[09:13:48.357]            // while-condition  =>  TRUE
[09:13:48.357]            // while "1"  (timeout="10000")
[09:13:48.357]            // while-condition  =>  TRUE
[09:13:48.357]            // while "1"  (timeout="10000")
[09:13:48.357]            // while-condition  =>  TRUE
[09:13:48.357]            // while "1"  (timeout="10000")
[09:13:48.357]            // while-condition  =>  TRUE
[09:13:48.358]            // while "1"  (timeout="10000")
[09:13:48.358]            // while-condition  =>  TRUE
[09:13:48.358]            // while "1"  (timeout="10000")
[09:13:48.358]            // while-condition  =>  TRUE
[09:13:48.358]            // while "1"  (timeout="10000")
[09:13:48.358]            // while-condition  =>  TRUE
[09:13:48.359]            // while "1"  (timeout="10000")
[09:13:48.359]            // while-condition  =>  TRUE
[09:13:48.359]            // while "1"  (timeout="10000")
[09:13:48.359]            // while-condition  =>  TRUE
[09:13:48.360]            // while "1"  (timeout="10000")
[09:13:48.360]            // while-condition  =>  TRUE
[09:13:48.360]            // while "1"  (timeout="10000")
[09:13:48.360]            // while-condition  =>  TRUE
[09:13:48.360]            // while "1"  (timeout="10000")
[09:13:48.360]            // while-condition  =>  TRUE
[09:13:48.360]            // while "1"  (timeout="10000")
[09:13:48.361]            // while-condition  =>  TRUE
[09:13:48.361]            // while "1"  (timeout="10000")
[09:13:48.362]            // while-condition  =>  TRUE
[09:13:48.362]            // while "1"  (timeout="10000")
[09:13:48.362]            // while  =>  TIMEOUT
[09:13:48.362]            // end while "1"
[09:13:48.363]          </control>
[09:13:48.363]          <block atomic="true" info="">
[09:13:48.366]  
[09:13:48.366]  ! W001 : No atomic sequence support in debug unit
[09:13:48.366]  
[09:13:48.367]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:13:48.370]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:13:48.370]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:13:48.373]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:13:48.373]          </block>
[09:13:48.374]          <block atomic="false" info="">
[09:13:48.374]            __errorcontrol = 0x00000001;
[09:13:48.375]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:13:48.375]            ReadDP(0x0);
[09:13:48.378]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:13:48.378]            __errorcontrol = 0x00000000;
[09:13:48.378]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:13:48.379]          </block>
[09:13:48.379]        </sequence>
[09:13:48.379]      Sequence("DebugPortSetup");
[09:13:48.380]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:13:48.380]        </sequence>
[09:13:48.380]      Sequence("DebugPortStart");
[09:13:48.381]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:13:48.381]          <block atomic="false" info="">
[09:13:48.382]            __var SW_DP_ABORT  = 0x0;
[09:13:48.382]              // -> [SW_DP_ABORT <= 0x00000000]
[09:13:48.382]            __var DP_CTRL_STAT = 0x4;
[09:13:48.382]              // -> [DP_CTRL_STAT <= 0x00000004]
[09:13:48.383]            __var DP_SELECT    = 0x8;
[09:13:48.383]              // -> [DP_SELECT <= 0x00000008]
[09:13:48.383]            __var powered_down = 0;
[09:13:48.384]              // -> [powered_down <= 0x00000000]
[09:13:48.384]            WriteDP(DP_SELECT, 0x00000000);
[09:13:48.386]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:13:48.386]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:13:48.388]              // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:13:48.388]              // -> [powered_down <= 0x00000000]
[09:13:48.388]          </block>
[09:13:48.389]          <control if="powered_down" while="" timeout="0" info="">
[09:13:48.389]            // if-block "powered_down"
[09:13:48.389]              // =>  FALSE
[09:13:48.390]            // skip if-block "powered_down"
[09:13:48.390]          </control>
[09:13:48.390]        </sequence>
[09:13:48.391]      Sequence("DebugCoreStart");
[09:13:48.391]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:13:48.391]          <block atomic="true" info="">
[09:13:48.394]  
[09:13:48.394]  ! W001 : No atomic sequence support in debug unit
[09:13:48.394]  
[09:13:48.396]            __var DP_R_IDCODE    = 0x0;
[09:13:48.396]              // -> [DP_R_IDCODE <= 0x00000000]
[09:13:48.397]            __var DP_W_ABORT    = 0x0;
[09:13:48.397]              // -> [DP_W_ABORT <= 0x00000000]
[09:13:48.399]            __var DP_CTRLSTAT = 0x4;
[09:13:48.399]              // -> [DP_CTRLSTAT <= 0x00000004]
[09:13:48.399]            __var DP_W_SELECT    = 0x8;
[09:13:48.400]              // -> [DP_W_SELECT <= 0x00000008]
[09:13:48.400]            __var AP_TAR		= 0x4;
[09:13:48.400]              // -> [AP_TAR <= 0x00000004]
[09:13:48.401]            __var AP_BD0		= 0x0;
[09:13:48.401]              // -> [AP_BD0 <= 0x00000000]
[09:13:48.401]            __var AP_BD1		= 0x4;
[09:13:48.402]              // -> [AP_BD1 <= 0x00000004]
[09:13:48.402]            __var AP_BD2		= 0x8;
[09:13:48.402]              // -> [AP_BD2 <= 0x00000008]
[09:13:48.403]            __var PCWithinFlash = 0;
[09:13:48.404]              // -> [PCWithinFlash <= 0x00000000]
[09:13:48.404]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:13:48.410]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.410]          </block>
[09:13:48.410]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:13:48.411]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:13:48.417]              // -> [Read32(0xE000EDF0) => 0x00030003]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.417]            // while-condition  =>  FALSE
[09:13:48.422]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:13:48.422]          </control>
[09:13:48.422]          <block atomic="true" info="">
[09:13:48.427]  
[09:13:48.427]  ! W001 : No atomic sequence support in debug unit
[09:13:48.427]  
[09:13:48.430]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:13:48.433]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:13:48.434]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:13:48.436]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.436]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:13:48.438]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:13:48.439]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:13:48.444]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.444]          </block>
[09:13:48.444]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:13:48.444]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.447]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.447]            // while-condition  =>  TRUE
[09:13:48.447]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.450]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.450]            // while-condition  =>  TRUE
[09:13:48.450]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.453]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.453]            // while-condition  =>  TRUE
[09:13:48.453]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.456]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.456]            // while-condition  =>  TRUE
[09:13:48.457]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.459]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.460]            // while-condition  =>  TRUE
[09:13:48.460]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.464]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.464]            // while-condition  =>  TRUE
[09:13:48.465]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.468]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.468]            // while-condition  =>  TRUE
[09:13:48.469]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.472]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.472]            // while-condition  =>  TRUE
[09:13:48.473]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.475]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.475]            // while-condition  =>  TRUE
[09:13:48.476]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.478]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.478]            // while-condition  =>  TRUE
[09:13:48.479]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.482]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.482]            // while-condition  =>  TRUE
[09:13:48.483]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.486]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.486]            // while-condition  =>  TRUE
[09:13:48.487]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.490]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.490]            // while-condition  =>  TRUE
[09:13:48.491]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.494]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.494]            // while-condition  =>  TRUE
[09:13:48.495]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.497]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.497]            // while-condition  =>  TRUE
[09:13:48.498]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.501]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.501]            // while-condition  =>  TRUE
[09:13:48.502]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.504]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.504]            // while-condition  =>  TRUE
[09:13:48.504]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.507]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.507]            // while-condition  =>  TRUE
[09:13:48.508]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.511]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.511]            // while-condition  =>  TRUE
[09:13:48.512]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.515]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.515]            // while-condition  =>  TRUE
[09:13:48.516]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.519]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.519]            // while-condition  =>  TRUE
[09:13:48.520]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.523]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.523]            // while-condition  =>  TRUE
[09:13:48.524]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.527]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.527]            // while-condition  =>  TRUE
[09:13:48.528]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.531]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.531]            // while-condition  =>  TRUE
[09:13:48.532]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.534]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.534]            // while-condition  =>  TRUE
[09:13:48.534]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.537]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.537]            // while-condition  =>  TRUE
[09:13:48.538]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.541]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.542]            // while-condition  =>  TRUE
[09:13:48.542]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.545]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.545]            // while-condition  =>  TRUE
[09:13:48.546]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.549]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.550]            // while-condition  =>  TRUE
[09:13:48.550]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:13:48.551]            // while  =>  TIMEOUT
[09:13:48.552]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:13:48.552]          </control>
[09:13:48.553]          <block atomic="false" info="">
[09:13:48.553]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:13:48.556]              // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:13:48.556]              // -> [PCWithinFlash <= 0x00000000]
[09:13:48.557]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:13:48.560]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:13:48.560]          </block>
[09:13:48.561]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:13:48.561]            // if-block "PCWithinFlash == 0"
[09:13:48.562]              // =>  TRUE
[09:13:48.562]            // end if-block "PCWithinFlash == 0"
[09:13:48.563]          </control>
[09:13:48.563]        </sequence>
[09:13:48.563]    </block>
[09:13:48.564]  </sequence>
[09:13:48.564]  
[09:13:59.787]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[09:13:59.787]  
[09:13:59.788]  <debugvars>
[09:13:59.788]    // Pre-defined
[09:13:59.789]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:13:59.789]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:13:59.789]    __dp=0x00000000
[09:13:59.790]    __ap=0x00000000
[09:13:59.790]    __traceout=0x00000000      (Trace Disabled)
[09:13:59.790]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:13:59.791]    __FlashAddr=0x00000000
[09:13:59.791]    __FlashLen=0x00000000
[09:13:59.791]    __FlashArg=0x00000000
[09:13:59.791]    __FlashOp=0x00000000
[09:13:59.792]    __Result=0x00000000
[09:13:59.792]  </debugvars>
[09:13:59.792]  
[09:13:59.793]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[09:13:59.793]    <block atomic="false" info="">
[09:13:59.793]      __var nReset      = 0x80;
[09:13:59.793]        // -> [nReset <= 0x00000080]
[09:13:59.794]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:13:59.796]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:13:59.796]    </block>
[09:13:59.796]    <control if="" while="1" timeout="50000" info="">
[09:13:59.797]      // while "1"  (timeout="50000")
[09:13:59.797]      // while-condition  =>  TRUE
[09:13:59.797]      // while "1"  (timeout="50000")
[09:13:59.797]      // while-condition  =>  TRUE
[09:13:59.797]      // while "1"  (timeout="50000")
[09:13:59.798]      // while-condition  =>  TRUE
[09:13:59.798]      // while "1"  (timeout="50000")
[09:13:59.798]      // while-condition  =>  TRUE
[09:13:59.799]      // while "1"  (timeout="50000")
[09:13:59.799]      // while-condition  =>  TRUE
[09:13:59.799]      // while "1"  (timeout="50000")
[09:13:59.799]      // while-condition  =>  TRUE
[09:13:59.800]      // while "1"  (timeout="50000")
[09:13:59.800]      // while-condition  =>  TRUE
[09:13:59.800]      // while "1"  (timeout="50000")
[09:13:59.801]      // while-condition  =>  TRUE
[09:13:59.801]      // while "1"  (timeout="50000")
[09:13:59.801]      // while-condition  =>  TRUE
[09:13:59.801]      // while "1"  (timeout="50000")
[09:13:59.802]      // while-condition  =>  TRUE
[09:13:59.802]      // while "1"  (timeout="50000")
[09:13:59.802]      // while-condition  =>  TRUE
[09:13:59.802]      // while "1"  (timeout="50000")
[09:13:59.803]      // while-condition  =>  TRUE
[09:13:59.803]      // while "1"  (timeout="50000")
[09:13:59.803]      // while-condition  =>  TRUE
[09:13:59.803]      // while "1"  (timeout="50000")
[09:13:59.804]      // while-condition  =>  TRUE
[09:13:59.804]      // while "1"  (timeout="50000")
[09:13:59.804]      // while-condition  =>  TRUE
[09:13:59.804]      // while "1"  (timeout="50000")
[09:13:59.804]      // while-condition  =>  TRUE
[09:13:59.804]      // while "1"  (timeout="50000")
[09:13:59.805]      // while-condition  =>  TRUE
[09:13:59.805]      // while "1"  (timeout="50000")
[09:13:59.805]      // while-condition  =>  TRUE
[09:13:59.805]      // while "1"  (timeout="50000")
[09:13:59.805]      // while-condition  =>  TRUE
[09:13:59.806]      // while "1"  (timeout="50000")
[09:13:59.806]      // while-condition  =>  TRUE
[09:13:59.807]      // while "1"  (timeout="50000")
[09:13:59.807]      // while-condition  =>  TRUE
[09:13:59.807]      // while "1"  (timeout="50000")
[09:13:59.807]      // while-condition  =>  TRUE
[09:13:59.807]      // while "1"  (timeout="50000")
[09:13:59.808]      // while-condition  =>  TRUE
[09:13:59.808]      // while "1"  (timeout="50000")
[09:13:59.808]      // while-condition  =>  TRUE
[09:13:59.808]      // while "1"  (timeout="50000")
[09:13:59.808]      // while-condition  =>  TRUE
[09:13:59.808]      // while "1"  (timeout="50000")
[09:13:59.809]      // while-condition  =>  TRUE
[09:13:59.809]      // while "1"  (timeout="50000")
[09:13:59.809]      // while-condition  =>  TRUE
[09:13:59.809]      // while "1"  (timeout="50000")
[09:13:59.809]      // while-condition  =>  TRUE
[09:13:59.809]      // while "1"  (timeout="50000")
[09:13:59.810]      // while-condition  =>  TRUE
[09:13:59.810]      // while "1"  (timeout="50000")
[09:13:59.810]      // while-condition  =>  TRUE
[09:13:59.810]      // while "1"  (timeout="50000")
[09:13:59.810]      // while-condition  =>  TRUE
[09:13:59.811]      // while "1"  (timeout="50000")
[09:13:59.811]      // while-condition  =>  TRUE
[09:13:59.811]      // while "1"  (timeout="50000")
[09:13:59.811]      // while-condition  =>  TRUE
[09:13:59.812]      // while "1"  (timeout="50000")
[09:13:59.812]      // while-condition  =>  TRUE
[09:13:59.812]      // while "1"  (timeout="50000")
[09:13:59.812]      // while-condition  =>  TRUE
[09:13:59.812]      // while "1"  (timeout="50000")
[09:13:59.813]      // while-condition  =>  TRUE
[09:13:59.813]      // while "1"  (timeout="50000")
[09:13:59.813]      // while-condition  =>  TRUE
[09:13:59.813]      // while "1"  (timeout="50000")
[09:13:59.813]      // while-condition  =>  TRUE
[09:13:59.813]      // while "1"  (timeout="50000")
[09:13:59.814]      // while-condition  =>  TRUE
[09:13:59.814]      // while "1"  (timeout="50000")
[09:13:59.814]      // while-condition  =>  TRUE
[09:13:59.814]      // while "1"  (timeout="50000")
[09:13:59.814]      // while-condition  =>  TRUE
[09:13:59.814]      // while "1"  (timeout="50000")
[09:13:59.814]      // while-condition  =>  TRUE
[09:13:59.815]      // while "1"  (timeout="50000")
[09:13:59.815]      // while-condition  =>  TRUE
[09:13:59.815]      // while "1"  (timeout="50000")
[09:13:59.816]      // while-condition  =>  TRUE
[09:13:59.816]      // while "1"  (timeout="50000")
[09:13:59.816]      // while-condition  =>  TRUE
[09:13:59.816]      // while "1"  (timeout="50000")
[09:13:59.816]      // while-condition  =>  TRUE
[09:13:59.816]      // while "1"  (timeout="50000")
[09:13:59.817]      // while-condition  =>  TRUE
[09:13:59.817]      // while "1"  (timeout="50000")
[09:13:59.817]      // while-condition  =>  TRUE
[09:13:59.817]      // while "1"  (timeout="50000")
[09:13:59.817]      // while-condition  =>  TRUE
[09:13:59.818]      // while "1"  (timeout="50000")
[09:13:59.818]      // while-condition  =>  TRUE
[09:13:59.818]      // while "1"  (timeout="50000")
[09:13:59.818]      // while-condition  =>  TRUE
[09:13:59.818]      // while "1"  (timeout="50000")
[09:13:59.819]      // while-condition  =>  TRUE
[09:13:59.819]      // while "1"  (timeout="50000")
[09:13:59.819]      // while-condition  =>  TRUE
[09:13:59.819]      // while "1"  (timeout="50000")
[09:13:59.819]      // while-condition  =>  TRUE
[09:13:59.819]      // while "1"  (timeout="50000")
[09:13:59.819]      // while-condition  =>  TRUE
[09:13:59.820]      // while "1"  (timeout="50000")
[09:13:59.820]      // while-condition  =>  TRUE
[09:13:59.820]      // while "1"  (timeout="50000")
[09:13:59.820]      // while-condition  =>  TRUE
[09:13:59.820]      // while "1"  (timeout="50000")
[09:13:59.821]      // while-condition  =>  TRUE
[09:13:59.821]      // while "1"  (timeout="50000")
[09:13:59.821]      // while-condition  =>  TRUE
[09:13:59.821]      // while "1"  (timeout="50000")
[09:13:59.821]      // while-condition  =>  TRUE
[09:13:59.821]      // while "1"  (timeout="50000")
[09:13:59.822]      // while-condition  =>  TRUE
[09:13:59.822]      // while "1"  (timeout="50000")
[09:13:59.822]      // while-condition  =>  TRUE
[09:13:59.823]      // while "1"  (timeout="50000")
[09:13:59.823]      // while-condition  =>  TRUE
[09:13:59.823]      // while "1"  (timeout="50000")
[09:13:59.823]      // while-condition  =>  TRUE
[09:13:59.823]      // while "1"  (timeout="50000")
[09:13:59.824]      // while-condition  =>  TRUE
[09:13:59.824]      // while "1"  (timeout="50000")
[09:13:59.824]      // while-condition  =>  TRUE
[09:13:59.824]      // while "1"  (timeout="50000")
[09:13:59.824]      // while-condition  =>  TRUE
[09:13:59.824]      // while "1"  (timeout="50000")
[09:13:59.824]      // while-condition  =>  TRUE
[09:13:59.824]      // while "1"  (timeout="50000")
[09:13:59.825]      // while-condition  =>  TRUE
[09:13:59.825]      // while "1"  (timeout="50000")
[09:13:59.825]      // while-condition  =>  TRUE
[09:13:59.826]      // while "1"  (timeout="50000")
[09:13:59.826]      // while-condition  =>  TRUE
[09:13:59.826]      // while "1"  (timeout="50000")
[09:13:59.826]      // while-condition  =>  TRUE
[09:13:59.826]      // while "1"  (timeout="50000")
[09:13:59.827]      // while-condition  =>  TRUE
[09:13:59.827]      // while "1"  (timeout="50000")
[09:13:59.827]      // while-condition  =>  TRUE
[09:13:59.827]      // while "1"  (timeout="50000")
[09:13:59.827]      // while-condition  =>  TRUE
[09:13:59.828]      // while "1"  (timeout="50000")
[09:13:59.828]      // while-condition  =>  TRUE
[09:13:59.828]      // while "1"  (timeout="50000")
[09:13:59.828]      // while-condition  =>  TRUE
[09:13:59.828]      // while "1"  (timeout="50000")
[09:13:59.829]      // while-condition  =>  TRUE
[09:13:59.829]      // while "1"  (timeout="50000")
[09:13:59.829]      // while-condition  =>  TRUE
[09:13:59.829]      // while "1"  (timeout="50000")
[09:13:59.829]      // while-condition  =>  TRUE
[09:13:59.829]      // while "1"  (timeout="50000")
[09:13:59.829]      // while-condition  =>  TRUE
[09:13:59.830]      // while "1"  (timeout="50000")
[09:13:59.830]      // while-condition  =>  TRUE
[09:13:59.830]      // while "1"  (timeout="50000")
[09:13:59.830]      // while-condition  =>  TRUE
[09:13:59.830]      // while "1"  (timeout="50000")
[09:13:59.831]      // while-condition  =>  TRUE
[09:13:59.831]      // while "1"  (timeout="50000")
[09:13:59.831]      // while-condition  =>  TRUE
[09:13:59.831]      // while "1"  (timeout="50000")
[09:13:59.832]      // while-condition  =>  TRUE
[09:13:59.832]      // while "1"  (timeout="50000")
[09:13:59.832]      // while-condition  =>  TRUE
[09:13:59.832]      // while "1"  (timeout="50000")
[09:13:59.832]      // while-condition  =>  TRUE
[09:13:59.833]      // while "1"  (timeout="50000")
[09:13:59.833]      // while-condition  =>  TRUE
[09:13:59.833]      // while "1"  (timeout="50000")
[09:13:59.833]      // while-condition  =>  TRUE
[09:13:59.833]      // while "1"  (timeout="50000")
[09:13:59.834]      // while-condition  =>  TRUE
[09:13:59.834]      // while "1"  (timeout="50000")
[09:13:59.834]      // while-condition  =>  TRUE
[09:13:59.834]      // while "1"  (timeout="50000")
[09:13:59.834]      // while-condition  =>  TRUE
[09:13:59.834]      // while "1"  (timeout="50000")
[09:13:59.834]      // while-condition  =>  TRUE
[09:13:59.834]      // while "1"  (timeout="50000")
[09:13:59.835]      // while-condition  =>  TRUE
[09:13:59.835]      // while "1"  (timeout="50000")
[09:13:59.835]      // while-condition  =>  TRUE
[09:13:59.835]      // while "1"  (timeout="50000")
[09:13:59.835]      // while-condition  =>  TRUE
[09:13:59.836]      // while "1"  (timeout="50000")
[09:13:59.836]      // while-condition  =>  TRUE
[09:13:59.836]      // while "1"  (timeout="50000")
[09:13:59.836]      // while-condition  =>  TRUE
[09:13:59.836]      // while "1"  (timeout="50000")
[09:13:59.837]      // while-condition  =>  TRUE
[09:13:59.837]      // while "1"  (timeout="50000")
[09:13:59.837]      // while-condition  =>  TRUE
[09:13:59.837]      // while "1"  (timeout="50000")
[09:13:59.837]      // while-condition  =>  TRUE
[09:13:59.838]      // while "1"  (timeout="50000")
[09:13:59.838]      // while-condition  =>  TRUE
[09:13:59.838]      // while "1"  (timeout="50000")
[09:13:59.839]      // while-condition  =>  TRUE
[09:13:59.839]      // while "1"  (timeout="50000")
[09:13:59.839]      // while-condition  =>  TRUE
[09:13:59.839]      // while "1"  (timeout="50000")
[09:13:59.839]      // while-condition  =>  TRUE
[09:13:59.839]      // while "1"  (timeout="50000")
[09:13:59.840]      // while-condition  =>  TRUE
[09:13:59.840]      // while "1"  (timeout="50000")
[09:13:59.840]      // while-condition  =>  TRUE
[09:13:59.840]      // while "1"  (timeout="50000")
[09:13:59.840]      // while-condition  =>  TRUE
[09:13:59.840]      // while "1"  (timeout="50000")
[09:13:59.841]      // while-condition  =>  TRUE
[09:13:59.841]      // while "1"  (timeout="50000")
[09:13:59.841]      // while-condition  =>  TRUE
[09:13:59.841]      // while "1"  (timeout="50000")
[09:13:59.841]      // while-condition  =>  TRUE
[09:13:59.842]      // while "1"  (timeout="50000")
[09:13:59.842]      // while-condition  =>  TRUE
[09:13:59.842]      // while "1"  (timeout="50000")
[09:13:59.842]      // while-condition  =>  TRUE
[09:13:59.843]      // while "1"  (timeout="50000")
[09:13:59.843]      // while-condition  =>  TRUE
[09:13:59.843]      // while "1"  (timeout="50000")
[09:13:59.843]      // while-condition  =>  TRUE
[09:13:59.843]      // while "1"  (timeout="50000")
[09:13:59.844]      // while-condition  =>  TRUE
[09:13:59.844]      // while "1"  (timeout="50000")
[09:13:59.844]      // while-condition  =>  TRUE
[09:13:59.844]      // while "1"  (timeout="50000")
[09:13:59.844]      // while-condition  =>  TRUE
[09:13:59.845]      // while "1"  (timeout="50000")
[09:13:59.845]      // while-condition  =>  TRUE
[09:13:59.845]      // while "1"  (timeout="50000")
[09:13:59.845]      // while-condition  =>  TRUE
[09:13:59.845]      // while "1"  (timeout="50000")
[09:13:59.845]      // while-condition  =>  TRUE
[09:13:59.845]      // while "1"  (timeout="50000")
[09:13:59.846]      // while-condition  =>  TRUE
[09:13:59.846]      // while "1"  (timeout="50000")
[09:13:59.846]      // while-condition  =>  TRUE
[09:13:59.846]      // while "1"  (timeout="50000")
[09:13:59.846]      // while-condition  =>  TRUE
[09:13:59.847]      // while "1"  (timeout="50000")
[09:13:59.847]      // while  =>  TIMEOUT
[09:13:59.847]      // end while "1"
[09:13:59.847]    </control>
[09:13:59.848]    <block atomic="false" info="">
[09:13:59.848]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:13:59.850]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:13:59.850]    </block>
[09:13:59.850]  </sequence>
[09:13:59.850]  
[09:14:42.391]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:14:42.391]  
[09:14:42.392]  <debugvars>
[09:14:42.392]    // Pre-defined
[09:14:42.392]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:14:42.393]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:14:42.393]    __dp=0x00000000
[09:14:42.394]    __ap=0x00000000
[09:14:42.394]    __traceout=0x00000000      (Trace Disabled)
[09:14:42.394]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:14:42.395]    __FlashAddr=0x00000000
[09:14:42.395]    __FlashLen=0x00000000
[09:14:42.395]    __FlashArg=0x00000000
[09:14:42.395]    __FlashOp=0x00000000
[09:14:42.396]    __Result=0x00000000
[09:14:42.396]  </debugvars>
[09:14:42.396]  
[09:14:42.396]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:14:42.396]    <block atomic="false" info="">
[09:14:42.397]      __var nReset      = 0x80;
[09:14:42.397]        // -> [nReset <= 0x00000080]
[09:14:42.397]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:14:42.399]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:14:42.400]    </block>
[09:14:42.400]    <control if="" while="1" timeout="50000" info="">
[09:14:42.400]      // while "1"  (timeout="50000")
[09:14:42.400]      // while-condition  =>  TRUE
[09:14:42.400]      // while "1"  (timeout="50000")
[09:14:42.401]      // while-condition  =>  TRUE
[09:14:42.401]      // while "1"  (timeout="50000")
[09:14:42.401]      // while-condition  =>  TRUE
[09:14:42.401]      // while "1"  (timeout="50000")
[09:14:42.402]      // while-condition  =>  TRUE
[09:14:42.402]      // while "1"  (timeout="50000")
[09:14:42.402]      // while-condition  =>  TRUE
[09:14:42.402]      // while "1"  (timeout="50000")
[09:14:42.403]      // while-condition  =>  TRUE
[09:14:42.403]      // while "1"  (timeout="50000")
[09:14:42.403]      // while-condition  =>  TRUE
[09:14:42.403]      // while "1"  (timeout="50000")
[09:14:42.404]      // while-condition  =>  TRUE
[09:14:42.404]      // while "1"  (timeout="50000")
[09:14:42.404]      // while-condition  =>  TRUE
[09:14:42.404]      // while "1"  (timeout="50000")
[09:14:42.405]      // while-condition  =>  TRUE
[09:14:42.405]      // while "1"  (timeout="50000")
[09:14:42.405]      // while-condition  =>  TRUE
[09:14:42.405]      // while "1"  (timeout="50000")
[09:14:42.406]      // while-condition  =>  TRUE
[09:14:42.406]      // while "1"  (timeout="50000")
[09:14:42.406]      // while-condition  =>  TRUE
[09:14:42.407]      // while "1"  (timeout="50000")
[09:14:42.407]      // while-condition  =>  TRUE
[09:14:42.407]      // while "1"  (timeout="50000")
[09:14:42.407]      // while-condition  =>  TRUE
[09:14:42.408]      // while "1"  (timeout="50000")
[09:14:42.408]      // while-condition  =>  TRUE
[09:14:42.408]      // while "1"  (timeout="50000")
[09:14:42.408]      // while-condition  =>  TRUE
[09:14:42.409]      // while "1"  (timeout="50000")
[09:14:42.409]      // while-condition  =>  TRUE
[09:14:42.409]      // while "1"  (timeout="50000")
[09:14:42.409]      // while-condition  =>  TRUE
[09:14:42.409]      // while "1"  (timeout="50000")
[09:14:42.410]      // while-condition  =>  TRUE
[09:14:42.410]      // while "1"  (timeout="50000")
[09:14:42.410]      // while-condition  =>  TRUE
[09:14:42.410]      // while "1"  (timeout="50000")
[09:14:42.410]      // while-condition  =>  TRUE
[09:14:42.411]      // while "1"  (timeout="50000")
[09:14:42.411]      // while-condition  =>  TRUE
[09:14:42.411]      // while "1"  (timeout="50000")
[09:14:42.411]      // while-condition  =>  TRUE
[09:14:42.411]      // while "1"  (timeout="50000")
[09:14:42.412]      // while-condition  =>  TRUE
[09:14:42.412]      // while "1"  (timeout="50000")
[09:14:42.412]      // while-condition  =>  TRUE
[09:14:42.412]      // while "1"  (timeout="50000")
[09:14:42.412]      // while-condition  =>  TRUE
[09:14:42.413]      // while "1"  (timeout="50000")
[09:14:42.413]      // while-condition  =>  TRUE
[09:14:42.413]      // while "1"  (timeout="50000")
[09:14:42.413]      // while-condition  =>  TRUE
[09:14:42.413]      // while "1"  (timeout="50000")
[09:14:42.414]      // while-condition  =>  TRUE
[09:14:42.414]      // while "1"  (timeout="50000")
[09:14:42.414]      // while-condition  =>  TRUE
[09:14:42.414]      // while "1"  (timeout="50000")
[09:14:42.414]      // while-condition  =>  TRUE
[09:14:42.415]      // while "1"  (timeout="50000")
[09:14:42.415]      // while-condition  =>  TRUE
[09:14:42.415]      // while "1"  (timeout="50000")
[09:14:42.415]      // while-condition  =>  TRUE
[09:14:42.415]      // while "1"  (timeout="50000")
[09:14:42.416]      // while-condition  =>  TRUE
[09:14:42.416]      // while "1"  (timeout="50000")
[09:14:42.416]      // while-condition  =>  TRUE
[09:14:42.416]      // while "1"  (timeout="50000")
[09:14:42.416]      // while-condition  =>  TRUE
[09:14:42.417]      // while "1"  (timeout="50000")
[09:14:42.417]      // while-condition  =>  TRUE
[09:14:42.417]      // while "1"  (timeout="50000")
[09:14:42.417]      // while-condition  =>  TRUE
[09:14:42.418]      // while "1"  (timeout="50000")
[09:14:42.418]      // while-condition  =>  TRUE
[09:14:42.418]      // while "1"  (timeout="50000")
[09:14:42.418]      // while-condition  =>  TRUE
[09:14:42.419]      // while "1"  (timeout="50000")
[09:14:42.419]      // while-condition  =>  TRUE
[09:14:42.419]      // while "1"  (timeout="50000")
[09:14:42.419]      // while-condition  =>  TRUE
[09:14:42.420]      // while "1"  (timeout="50000")
[09:14:42.420]      // while-condition  =>  TRUE
[09:14:42.420]      // while "1"  (timeout="50000")
[09:14:42.420]      // while-condition  =>  TRUE
[09:14:42.421]      // while "1"  (timeout="50000")
[09:14:42.421]      // while-condition  =>  TRUE
[09:14:42.421]      // while "1"  (timeout="50000")
[09:14:42.421]      // while-condition  =>  TRUE
[09:14:42.422]      // while "1"  (timeout="50000")
[09:14:42.422]      // while-condition  =>  TRUE
[09:14:42.422]      // while "1"  (timeout="50000")
[09:14:42.422]      // while-condition  =>  TRUE
[09:14:42.422]      // while "1"  (timeout="50000")
[09:14:42.423]      // while-condition  =>  TRUE
[09:14:42.423]      // while "1"  (timeout="50000")
[09:14:42.423]      // while-condition  =>  TRUE
[09:14:42.423]      // while "1"  (timeout="50000")
[09:14:42.423]      // while-condition  =>  TRUE
[09:14:42.424]      // while "1"  (timeout="50000")
[09:14:42.424]      // while-condition  =>  TRUE
[09:14:42.424]      // while "1"  (timeout="50000")
[09:14:42.424]      // while-condition  =>  TRUE
[09:14:42.424]      // while "1"  (timeout="50000")
[09:14:42.425]      // while-condition  =>  TRUE
[09:14:42.425]      // while "1"  (timeout="50000")
[09:14:42.425]      // while-condition  =>  TRUE
[09:14:42.425]      // while "1"  (timeout="50000")
[09:14:42.425]      // while-condition  =>  TRUE
[09:14:42.426]      // while "1"  (timeout="50000")
[09:14:42.426]      // while-condition  =>  TRUE
[09:14:42.426]      // while "1"  (timeout="50000")
[09:14:42.426]      // while-condition  =>  TRUE
[09:14:42.426]      // while "1"  (timeout="50000")
[09:14:42.427]      // while-condition  =>  TRUE
[09:14:42.427]      // while "1"  (timeout="50000")
[09:14:42.427]      // while-condition  =>  TRUE
[09:14:42.427]      // while "1"  (timeout="50000")
[09:14:42.427]      // while-condition  =>  TRUE
[09:14:42.428]      // while "1"  (timeout="50000")
[09:14:42.428]      // while-condition  =>  TRUE
[09:14:42.428]      // while "1"  (timeout="50000")
[09:14:42.428]      // while-condition  =>  TRUE
[09:14:42.428]      // while "1"  (timeout="50000")
[09:14:42.429]      // while-condition  =>  TRUE
[09:14:42.429]      // while "1"  (timeout="50000")
[09:14:42.429]      // while-condition  =>  TRUE
[09:14:42.429]      // while "1"  (timeout="50000")
[09:14:42.429]      // while-condition  =>  TRUE
[09:14:42.430]      // while "1"  (timeout="50000")
[09:14:42.430]      // while-condition  =>  TRUE
[09:14:42.430]      // while "1"  (timeout="50000")
[09:14:42.430]      // while-condition  =>  TRUE
[09:14:42.430]      // while "1"  (timeout="50000")
[09:14:42.431]      // while-condition  =>  TRUE
[09:14:42.431]      // while "1"  (timeout="50000")
[09:14:42.431]      // while-condition  =>  TRUE
[09:14:42.431]      // while "1"  (timeout="50000")
[09:14:42.431]      // while-condition  =>  TRUE
[09:14:42.432]      // while "1"  (timeout="50000")
[09:14:42.432]      // while-condition  =>  TRUE
[09:14:42.432]      // while "1"  (timeout="50000")
[09:14:42.432]      // while-condition  =>  TRUE
[09:14:42.432]      // while "1"  (timeout="50000")
[09:14:42.433]      // while-condition  =>  TRUE
[09:14:42.433]      // while "1"  (timeout="50000")
[09:14:42.433]      // while-condition  =>  TRUE
[09:14:42.433]      // while "1"  (timeout="50000")
[09:14:42.433]      // while-condition  =>  TRUE
[09:14:42.434]      // while "1"  (timeout="50000")
[09:14:42.434]      // while-condition  =>  TRUE
[09:14:42.434]      // while "1"  (timeout="50000")
[09:14:42.434]      // while-condition  =>  TRUE
[09:14:42.434]      // while "1"  (timeout="50000")
[09:14:42.435]      // while-condition  =>  TRUE
[09:14:42.435]      // while "1"  (timeout="50000")
[09:14:42.435]      // while-condition  =>  TRUE
[09:14:42.435]      // while "1"  (timeout="50000")
[09:14:42.435]      // while-condition  =>  TRUE
[09:14:42.436]      // while "1"  (timeout="50000")
[09:14:42.436]      // while-condition  =>  TRUE
[09:14:42.436]      // while "1"  (timeout="50000")
[09:14:42.436]      // while-condition  =>  TRUE
[09:14:42.436]      // while "1"  (timeout="50000")
[09:14:42.437]      // while-condition  =>  TRUE
[09:14:42.437]      // while "1"  (timeout="50000")
[09:14:42.437]      // while-condition  =>  TRUE
[09:14:42.437]      // while "1"  (timeout="50000")
[09:14:42.437]      // while-condition  =>  TRUE
[09:14:42.438]      // while "1"  (timeout="50000")
[09:14:42.438]      // while-condition  =>  TRUE
[09:14:42.438]      // while "1"  (timeout="50000")
[09:14:42.438]      // while-condition  =>  TRUE
[09:14:42.438]      // while "1"  (timeout="50000")
[09:14:42.439]      // while-condition  =>  TRUE
[09:14:42.439]      // while "1"  (timeout="50000")
[09:14:42.439]      // while-condition  =>  TRUE
[09:14:42.439]      // while "1"  (timeout="50000")
[09:14:42.440]      // while-condition  =>  TRUE
[09:14:42.440]      // while "1"  (timeout="50000")
[09:14:42.440]      // while-condition  =>  TRUE
[09:14:42.440]      // while "1"  (timeout="50000")
[09:14:42.440]      // while-condition  =>  TRUE
[09:14:42.441]      // while "1"  (timeout="50000")
[09:14:42.441]      // while-condition  =>  TRUE
[09:14:42.441]      // while "1"  (timeout="50000")
[09:14:42.441]      // while-condition  =>  TRUE
[09:14:42.442]      // while "1"  (timeout="50000")
[09:14:42.442]      // while-condition  =>  TRUE
[09:14:42.442]      // while "1"  (timeout="50000")
[09:14:42.442]      // while-condition  =>  TRUE
[09:14:42.442]      // while "1"  (timeout="50000")
[09:14:42.443]      // while-condition  =>  TRUE
[09:14:42.443]      // while "1"  (timeout="50000")
[09:14:42.443]      // while-condition  =>  TRUE
[09:14:42.443]      // while "1"  (timeout="50000")
[09:14:42.444]      // while-condition  =>  TRUE
[09:14:42.444]      // while "1"  (timeout="50000")
[09:14:42.444]      // while-condition  =>  TRUE
[09:14:42.444]      // while "1"  (timeout="50000")
[09:14:42.444]      // while-condition  =>  TRUE
[09:14:42.445]      // while "1"  (timeout="50000")
[09:14:42.445]      // while-condition  =>  TRUE
[09:14:42.445]      // while "1"  (timeout="50000")
[09:14:42.445]      // while-condition  =>  TRUE
[09:14:42.446]      // while "1"  (timeout="50000")
[09:14:42.446]      // while-condition  =>  TRUE
[09:14:42.446]      // while "1"  (timeout="50000")
[09:14:42.446]      // while-condition  =>  TRUE
[09:14:42.446]      // while "1"  (timeout="50000")
[09:14:42.447]      // while-condition  =>  TRUE
[09:14:42.447]      // while "1"  (timeout="50000")
[09:14:42.447]      // while-condition  =>  TRUE
[09:14:42.447]      // while "1"  (timeout="50000")
[09:14:42.448]      // while-condition  =>  TRUE
[09:14:42.448]      // while "1"  (timeout="50000")
[09:14:42.448]      // while-condition  =>  TRUE
[09:14:42.448]      // while "1"  (timeout="50000")
[09:14:42.448]      // while-condition  =>  TRUE
[09:14:42.449]      // while "1"  (timeout="50000")
[09:14:42.449]      // while-condition  =>  TRUE
[09:14:42.449]      // while "1"  (timeout="50000")
[09:14:42.449]      // while-condition  =>  TRUE
[09:14:42.449]      // while "1"  (timeout="50000")
[09:14:42.450]      // while-condition  =>  TRUE
[09:14:42.450]      // while "1"  (timeout="50000")
[09:14:42.450]      // while-condition  =>  TRUE
[09:14:42.450]      // while "1"  (timeout="50000")
[09:14:42.451]      // while-condition  =>  TRUE
[09:14:42.451]      // while "1"  (timeout="50000")
[09:14:42.451]      // while-condition  =>  TRUE
[09:14:42.451]      // while "1"  (timeout="50000")
[09:14:42.451]      // while-condition  =>  TRUE
[09:14:42.452]      // while "1"  (timeout="50000")
[09:14:42.452]      // while-condition  =>  TRUE
[09:14:42.452]      // while "1"  (timeout="50000")
[09:14:42.452]      // while-condition  =>  TRUE
[09:14:42.453]      // while "1"  (timeout="50000")
[09:14:42.453]      // while-condition  =>  TRUE
[09:14:42.453]      // while "1"  (timeout="50000")
[09:14:42.453]      // while-condition  =>  TRUE
[09:14:42.453]      // while "1"  (timeout="50000")
[09:14:42.454]      // while-condition  =>  TRUE
[09:14:42.454]      // while "1"  (timeout="50000")
[09:14:42.454]      // while-condition  =>  TRUE
[09:14:42.454]      // while "1"  (timeout="50000")
[09:14:42.455]      // while-condition  =>  TRUE
[09:14:42.455]      // while "1"  (timeout="50000")
[09:14:42.455]      // while-condition  =>  TRUE
[09:14:42.455]      // while "1"  (timeout="50000")
[09:14:42.455]      // while-condition  =>  TRUE
[09:14:42.456]      // while "1"  (timeout="50000")
[09:14:42.456]      // while  =>  TIMEOUT
[09:14:42.456]      // end while "1"
[09:14:42.456]    </control>
[09:14:42.457]    <block atomic="false" info="">
[09:14:42.457]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:14:42.458]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:14:42.459]    </block>
[09:14:42.459]    <control if="" while="1" timeout="10000" info="">
[09:14:42.459]      // while "1"  (timeout="10000")
[09:14:42.459]      // while-condition  =>  TRUE
[09:14:42.460]      // while "1"  (timeout="10000")
[09:14:42.460]      // while-condition  =>  TRUE
[09:14:42.460]      // while "1"  (timeout="10000")
[09:14:42.460]      // while-condition  =>  TRUE
[09:14:42.460]      // while "1"  (timeout="10000")
[09:14:42.461]      // while-condition  =>  TRUE
[09:14:42.461]      // while "1"  (timeout="10000")
[09:14:42.462]      // while-condition  =>  TRUE
[09:14:42.462]      // while "1"  (timeout="10000")
[09:14:42.462]      // while-condition  =>  TRUE
[09:14:42.462]      // while "1"  (timeout="10000")
[09:14:42.463]      // while-condition  =>  TRUE
[09:14:42.463]      // while "1"  (timeout="10000")
[09:14:42.463]      // while-condition  =>  TRUE
[09:14:42.463]      // while "1"  (timeout="10000")
[09:14:42.464]      // while-condition  =>  TRUE
[09:14:42.464]      // while "1"  (timeout="10000")
[09:14:42.464]      // while-condition  =>  TRUE
[09:14:42.464]      // while "1"  (timeout="10000")
[09:14:42.464]      // while-condition  =>  TRUE
[09:14:42.465]      // while "1"  (timeout="10000")
[09:14:42.465]      // while-condition  =>  TRUE
[09:14:42.465]      // while "1"  (timeout="10000")
[09:14:42.465]      // while-condition  =>  TRUE
[09:14:42.466]      // while "1"  (timeout="10000")
[09:14:42.466]      // while-condition  =>  TRUE
[09:14:42.466]      // while "1"  (timeout="10000")
[09:14:42.466]      // while-condition  =>  TRUE
[09:14:42.466]      // while "1"  (timeout="10000")
[09:14:42.467]      // while-condition  =>  TRUE
[09:14:42.467]      // while "1"  (timeout="10000")
[09:14:42.467]      // while-condition  =>  TRUE
[09:14:42.467]      // while "1"  (timeout="10000")
[09:14:42.468]      // while-condition  =>  TRUE
[09:14:42.468]      // while "1"  (timeout="10000")
[09:14:42.468]      // while-condition  =>  TRUE
[09:14:42.468]      // while "1"  (timeout="10000")
[09:14:42.469]      // while-condition  =>  TRUE
[09:14:42.469]      // while "1"  (timeout="10000")
[09:14:42.469]      // while-condition  =>  TRUE
[09:14:42.469]      // while "1"  (timeout="10000")
[09:14:42.469]      // while-condition  =>  TRUE
[09:14:42.470]      // while "1"  (timeout="10000")
[09:14:42.470]      // while-condition  =>  TRUE
[09:14:42.470]      // while "1"  (timeout="10000")
[09:14:42.471]      // while-condition  =>  TRUE
[09:14:42.471]      // while "1"  (timeout="10000")
[09:14:42.471]      // while-condition  =>  TRUE
[09:14:42.471]      // while "1"  (timeout="10000")
[09:14:42.472]      // while-condition  =>  TRUE
[09:14:42.472]      // while "1"  (timeout="10000")
[09:14:42.472]      // while  =>  TIMEOUT
[09:14:42.472]      // end while "1"
[09:14:42.472]    </control>
[09:14:42.473]    <block atomic="true" info="">
[09:14:42.477]  
[09:14:42.477]  ! W001 : No atomic sequence support in debug unit
[09:14:42.477]  
[09:14:42.479]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:14:42.482]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:14:42.486]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:14:42.488]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:14:42.488]    </block>
[09:14:42.489]    <block atomic="false" info="">
[09:14:42.489]      __errorcontrol = 0x00000001;
[09:14:42.489]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:14:42.490]      ReadDP(0x0);
[09:14:42.493]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:14:42.493]      __errorcontrol = 0x00000000;
[09:14:42.494]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:14:42.494]    </block>
[09:14:42.495]  </sequence>
[09:14:42.495]  
[09:14:42.496]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:14:42.496]  
[09:14:42.496]  <debugvars>
[09:14:42.497]    // Pre-defined
[09:14:42.497]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:14:42.497]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:14:42.498]    __dp=0x00000000
[09:14:42.498]    __ap=0x00000000
[09:14:42.499]    __traceout=0x00000000      (Trace Disabled)
[09:14:42.499]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:14:42.499]    __FlashAddr=0x00000000
[09:14:42.499]    __FlashLen=0x00000000
[09:14:42.500]    __FlashArg=0x00000000
[09:14:42.500]    __FlashOp=0x00000000
[09:14:42.500]    __Result=0x00000000
[09:14:42.501]  </debugvars>
[09:14:42.501]  
[09:14:42.501]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:14:42.502]  </sequence>
[09:14:42.502]  
[09:14:42.507]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[09:14:42.507]  
[09:14:42.507]  <debugvars>
[09:14:42.507]    // Pre-defined
[09:14:42.508]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:14:42.508]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:14:42.509]    __dp=0x00000000
[09:14:42.509]    __ap=0x00000000
[09:14:42.509]    __traceout=0x00000000      (Trace Disabled)
[09:14:42.510]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:14:42.510]    __FlashAddr=0x00000000
[09:14:42.510]    __FlashLen=0x00000000
[09:14:42.511]    __FlashArg=0x00000000
[09:14:42.511]    __FlashOp=0x00000000
[09:14:42.511]    __Result=0x00000000
[09:14:42.512]  </debugvars>
[09:14:42.512]  
[09:14:42.512]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:14:42.512]    <block atomic="false" info="">
[09:14:42.513]      __var SW_DP_ABORT  = 0x0;
[09:14:42.513]        // -> [SW_DP_ABORT <= 0x00000000]
[09:14:42.513]      __var DP_CTRL_STAT = 0x4;
[09:14:42.514]        // -> [DP_CTRL_STAT <= 0x00000004]
[09:14:42.514]      __var DP_SELECT    = 0x8;
[09:14:42.514]        // -> [DP_SELECT <= 0x00000008]
[09:14:42.514]      __var powered_down = 0;
[09:14:42.515]        // -> [powered_down <= 0x00000000]
[09:14:42.515]      WriteDP(DP_SELECT, 0x00000000);
[09:14:42.517]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:14:42.517]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:14:42.519]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[09:14:42.519]        // -> [powered_down <= 0x00000001]
[09:14:42.519]    </block>
[09:14:42.519]    <control if="powered_down" while="" timeout="0" info="">
[09:14:42.520]      // if-block "powered_down"
[09:14:42.520]        // =>  TRUE
[09:14:42.520]      <block atomic="false" info="">
[09:14:42.521]        WriteDP(DP_CTRL_STAT, 0x50000000);
[09:14:42.523]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[09:14:42.523]      </block>
[09:14:42.523]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[09:14:42.524]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[09:14:42.526]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:14:42.526]        // while-condition  =>  FALSE
[09:14:42.526]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[09:14:42.527]      </control>
[09:14:42.527]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[09:14:42.527]        // if-block "(__protocol & 0xFFFF) == 1"
[09:14:42.527]          // =>  FALSE
[09:14:42.527]        // skip if-block "(__protocol & 0xFFFF) == 1"
[09:14:42.528]      </control>
[09:14:42.528]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[09:14:42.528]        // if-block "(__protocol & 0xFFFF) == 2"
[09:14:42.528]          // =>  TRUE
[09:14:42.528]        <block atomic="false" info="">
[09:14:42.529]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[09:14:42.531]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[09:14:42.531]          WriteDP(SW_DP_ABORT, 0x0000001E);
[09:14:42.533]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[09:14:42.533]        </block>
[09:14:42.533]        // end if-block "(__protocol & 0xFFFF) == 2"
[09:14:42.533]      </control>
[09:14:42.534]      // end if-block "powered_down"
[09:14:42.534]    </control>
[09:14:42.534]  </sequence>
[09:14:42.534]  
[09:14:42.639]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:14:42.639]  
[09:14:42.640]  <debugvars>
[09:14:42.640]    // Pre-defined
[09:14:42.641]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:14:42.641]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:14:42.641]    __dp=0x00000000
[09:14:42.642]    __ap=0x00000000
[09:14:42.642]    __traceout=0x00000000      (Trace Disabled)
[09:14:42.643]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:14:42.643]    __FlashAddr=0x00000000
[09:14:42.643]    __FlashLen=0x00000000
[09:14:42.644]    __FlashArg=0x00000000
[09:14:42.644]    __FlashOp=0x00000000
[09:14:42.644]    __Result=0x00000000
[09:14:42.645]  </debugvars>
[09:14:42.645]  
[09:14:42.646]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:14:42.646]    <block atomic="true" info="">
[09:14:42.650]  
[09:14:42.650]  ! W001 : No atomic sequence support in debug unit
[09:14:42.650]  
[09:14:42.652]      __var DP_R_IDCODE    = 0x0;
[09:14:42.652]        // -> [DP_R_IDCODE <= 0x00000000]
[09:14:42.652]      __var DP_W_ABORT    = 0x0;
[09:14:42.653]        // -> [DP_W_ABORT <= 0x00000000]
[09:14:42.653]      __var DP_CTRLSTAT = 0x4;
[09:14:42.653]        // -> [DP_CTRLSTAT <= 0x00000004]
[09:14:42.654]      __var DP_W_SELECT    = 0x8;
[09:14:42.654]        // -> [DP_W_SELECT <= 0x00000008]
[09:14:42.654]      __var AP_TAR		= 0x4;
[09:14:42.654]        // -> [AP_TAR <= 0x00000004]
[09:14:42.655]      __var AP_BD0		= 0x0;
[09:14:42.655]        // -> [AP_BD0 <= 0x00000000]
[09:14:42.655]      __var AP_BD1		= 0x4;
[09:14:42.656]        // -> [AP_BD1 <= 0x00000004]
[09:14:42.656]      __var AP_BD2		= 0x8;
[09:14:42.656]        // -> [AP_BD2 <= 0x00000008]
[09:14:42.657]      __var PCWithinFlash = 0;
[09:14:42.657]        // -> [PCWithinFlash <= 0x00000000]
[09:14:42.657]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:14:42.663]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.664]    </block>
[09:14:42.664]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:14:42.665]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:14:42.670]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.685]      // while-condition  =>  FALSE
[09:14:42.685]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:14:42.686]    </control>
[09:14:42.686]    <block atomic="true" info="">
[09:14:42.689]  
[09:14:42.689]  ! W001 : No atomic sequence support in debug unit
[09:14:42.689]  
[09:14:42.692]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:14:42.694]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:14:42.694]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:14:42.697]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.697]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:14:42.700]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:14:42.700]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:14:42.705]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.705]    </block>
[09:14:42.706]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:14:42.706]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.709]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.709]      // while-condition  =>  TRUE
[09:14:42.710]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.712]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.712]      // while-condition  =>  TRUE
[09:14:42.712]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.715]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.715]      // while-condition  =>  TRUE
[09:14:42.715]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.717]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.717]      // while-condition  =>  TRUE
[09:14:42.717]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.719]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.719]      // while-condition  =>  TRUE
[09:14:42.719]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.721]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.721]      // while-condition  =>  TRUE
[09:14:42.721]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.724]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.724]      // while-condition  =>  TRUE
[09:14:42.724]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.727]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.727]      // while-condition  =>  TRUE
[09:14:42.727]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.730]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.730]      // while-condition  =>  TRUE
[09:14:42.730]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.733]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.733]      // while-condition  =>  TRUE
[09:14:42.733]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.736]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.736]      // while-condition  =>  TRUE
[09:14:42.736]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.739]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.739]      // while-condition  =>  TRUE
[09:14:42.739]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.741]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.741]      // while-condition  =>  TRUE
[09:14:42.741]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.744]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.744]      // while-condition  =>  TRUE
[09:14:42.744]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.747]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.747]      // while-condition  =>  TRUE
[09:14:42.747]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.750]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.750]      // while-condition  =>  TRUE
[09:14:42.750]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.752]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.752]      // while-condition  =>  TRUE
[09:14:42.753]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.754]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.754]      // while-condition  =>  TRUE
[09:14:42.755]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.756]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.757]      // while-condition  =>  TRUE
[09:14:42.757]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.759]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.760]      // while-condition  =>  TRUE
[09:14:42.760]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.762]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.763]      // while-condition  =>  TRUE
[09:14:42.763]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.765]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.765]      // while-condition  =>  TRUE
[09:14:42.766]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.767]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.767]      // while-condition  =>  TRUE
[09:14:42.768]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.769]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.770]      // while-condition  =>  TRUE
[09:14:42.770]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.772]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.773]      // while-condition  =>  TRUE
[09:14:42.773]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.774]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.775]      // while-condition  =>  TRUE
[09:14:42.775]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.777]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.778]      // while-condition  =>  TRUE
[09:14:42.778]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.780]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.781]      // while-condition  =>  TRUE
[09:14:42.781]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.783]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.784]      // while-condition  =>  TRUE
[09:14:42.784]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.786]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.787]      // while-condition  =>  TRUE
[09:14:42.787]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.789]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.790]      // while-condition  =>  TRUE
[09:14:42.790]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.792]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.793]      // while-condition  =>  TRUE
[09:14:42.793]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.795]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.796]      // while-condition  =>  TRUE
[09:14:42.796]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.798]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.799]      // while-condition  =>  TRUE
[09:14:42.799]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.801]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.802]      // while-condition  =>  TRUE
[09:14:42.802]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.804]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.805]      // while-condition  =>  TRUE
[09:14:42.805]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.808]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.808]      // while-condition  =>  TRUE
[09:14:42.808]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.810]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.811]      // while-condition  =>  TRUE
[09:14:42.811]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.813]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.814]      // while-condition  =>  TRUE
[09:14:42.814]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.816]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.817]      // while-condition  =>  TRUE
[09:14:42.817]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:42.817]      // while  =>  TIMEOUT
[09:14:42.818]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:14:42.818]    </control>
[09:14:42.818]    <block atomic="false" info="">
[09:14:42.818]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:14:42.820]        // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:14:42.821]        // -> [PCWithinFlash <= 0x00000000]
[09:14:42.821]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:14:42.823]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:14:42.824]    </block>
[09:14:42.824]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:14:42.824]      // if-block "PCWithinFlash == 0"
[09:14:42.824]        // =>  TRUE
[09:14:42.825]      // end if-block "PCWithinFlash == 0"
[09:14:42.825]    </control>
[09:14:42.825]  </sequence>
[09:14:42.825]  
[09:14:42.871]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[09:14:42.871]  
[09:14:42.872]  <debugvars>
[09:14:42.872]    // Pre-defined
[09:14:42.873]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:14:42.873]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:14:42.873]    __dp=0x00000000
[09:14:42.873]    __ap=0x00000000
[09:14:42.874]    __traceout=0x00000000      (Trace Disabled)
[09:14:42.874]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:14:42.874]    __FlashAddr=0x00000000
[09:14:42.874]    __FlashLen=0x00000000
[09:14:42.875]    __FlashArg=0x00000000
[09:14:42.875]    __FlashOp=0x00000000
[09:14:42.875]    __Result=0x00000000
[09:14:42.875]  </debugvars>
[09:14:42.875]  
[09:14:42.876]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[09:14:42.876]    <block atomic="false" info="">
[09:14:42.876]    </block>
[09:14:42.876]  </sequence>
[09:14:42.877]  
[09:14:42.879]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[09:14:42.879]  
[09:14:42.879]  <debugvars>
[09:14:42.879]    // Pre-defined
[09:14:42.879]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:14:42.880]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:14:42.880]    __dp=0x00000000
[09:14:42.880]    __ap=0x00000000
[09:14:42.880]    __traceout=0x00000000      (Trace Disabled)
[09:14:42.881]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:14:42.881]    __FlashAddr=0x00000000
[09:14:42.881]    __FlashLen=0x00000000
[09:14:42.881]    __FlashArg=0x00000000
[09:14:42.882]    __FlashOp=0x00000000
[09:14:42.882]    __Result=0x00000000
[09:14:42.882]  </debugvars>
[09:14:42.882]  
[09:14:42.882]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:14:42.883]    <block atomic="false" info="">
[09:14:42.883]      __var nReset      = 0x80;
[09:14:42.883]        // -> [nReset <= 0x00000080]
[09:14:42.883]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:14:42.886]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:14:42.886]    </block>
[09:14:42.886]    <control if="" while="1" timeout="50000" info="">
[09:14:42.886]      // while "1"  (timeout="50000")
[09:14:42.887]      // while-condition  =>  TRUE
[09:14:42.887]      // while "1"  (timeout="50000")
[09:14:42.887]      // while-condition  =>  TRUE
[09:14:42.887]      // while "1"  (timeout="50000")
[09:14:42.887]      // while-condition  =>  TRUE
[09:14:42.888]      // while "1"  (timeout="50000")
[09:14:42.888]      // while-condition  =>  TRUE
[09:14:42.888]      // while "1"  (timeout="50000")
[09:14:42.888]      // while-condition  =>  TRUE
[09:14:42.889]      // while "1"  (timeout="50000")
[09:14:42.889]      // while-condition  =>  TRUE
[09:14:42.889]      // while "1"  (timeout="50000")
[09:14:42.889]      // while-condition  =>  TRUE
[09:14:42.890]      // while "1"  (timeout="50000")
[09:14:42.890]      // while-condition  =>  TRUE
[09:14:42.890]      // while "1"  (timeout="50000")
[09:14:42.890]      // while-condition  =>  TRUE
[09:14:42.891]      // while "1"  (timeout="50000")
[09:14:42.891]      // while-condition  =>  TRUE
[09:14:42.891]      // while "1"  (timeout="50000")
[09:14:42.892]      // while-condition  =>  TRUE
[09:14:42.892]      // while "1"  (timeout="50000")
[09:14:42.892]      // while-condition  =>  TRUE
[09:14:42.893]      // while "1"  (timeout="50000")
[09:14:42.893]      // while-condition  =>  TRUE
[09:14:42.893]      // while "1"  (timeout="50000")
[09:14:42.893]      // while-condition  =>  TRUE
[09:14:42.894]      // while "1"  (timeout="50000")
[09:14:42.894]      // while-condition  =>  TRUE
[09:14:42.894]      // while "1"  (timeout="50000")
[09:14:42.894]      // while-condition  =>  TRUE
[09:14:42.895]      // while "1"  (timeout="50000")
[09:14:42.895]      // while-condition  =>  TRUE
[09:14:42.895]      // while "1"  (timeout="50000")
[09:14:42.895]      // while-condition  =>  TRUE
[09:14:42.896]      // while "1"  (timeout="50000")
[09:14:42.896]      // while-condition  =>  TRUE
[09:14:42.896]      // while "1"  (timeout="50000")
[09:14:42.896]      // while-condition  =>  TRUE
[09:14:42.896]      // while "1"  (timeout="50000")
[09:14:42.897]      // while-condition  =>  TRUE
[09:14:42.897]      // while "1"  (timeout="50000")
[09:14:42.897]      // while-condition  =>  TRUE
[09:14:42.897]      // while "1"  (timeout="50000")
[09:14:42.898]      // while-condition  =>  TRUE
[09:14:42.898]      // while "1"  (timeout="50000")
[09:14:42.898]      // while-condition  =>  TRUE
[09:14:42.898]      // while "1"  (timeout="50000")
[09:14:42.899]      // while-condition  =>  TRUE
[09:14:42.899]      // while "1"  (timeout="50000")
[09:14:42.899]      // while-condition  =>  TRUE
[09:14:42.899]      // while "1"  (timeout="50000")
[09:14:42.900]      // while-condition  =>  TRUE
[09:14:42.900]      // while "1"  (timeout="50000")
[09:14:42.900]      // while-condition  =>  TRUE
[09:14:42.900]      // while "1"  (timeout="50000")
[09:14:42.901]      // while-condition  =>  TRUE
[09:14:42.901]      // while "1"  (timeout="50000")
[09:14:42.901]      // while-condition  =>  TRUE
[09:14:42.901]      // while "1"  (timeout="50000")
[09:14:42.902]      // while-condition  =>  TRUE
[09:14:42.902]      // while "1"  (timeout="50000")
[09:14:42.902]      // while-condition  =>  TRUE
[09:14:42.902]      // while "1"  (timeout="50000")
[09:14:42.902]      // while-condition  =>  TRUE
[09:14:42.903]      // while "1"  (timeout="50000")
[09:14:42.903]      // while-condition  =>  TRUE
[09:14:42.903]      // while "1"  (timeout="50000")
[09:14:42.903]      // while-condition  =>  TRUE
[09:14:42.904]      // while "1"  (timeout="50000")
[09:14:42.904]      // while-condition  =>  TRUE
[09:14:42.904]      // while "1"  (timeout="50000")
[09:14:42.904]      // while-condition  =>  TRUE
[09:14:42.905]      // while "1"  (timeout="50000")
[09:14:42.905]      // while-condition  =>  TRUE
[09:14:42.905]      // while "1"  (timeout="50000")
[09:14:42.905]      // while-condition  =>  TRUE
[09:14:42.906]      // while "1"  (timeout="50000")
[09:14:42.906]      // while-condition  =>  TRUE
[09:14:42.906]      // while "1"  (timeout="50000")
[09:14:42.906]      // while-condition  =>  TRUE
[09:14:42.906]      // while "1"  (timeout="50000")
[09:14:42.907]      // while-condition  =>  TRUE
[09:14:42.907]      // while "1"  (timeout="50000")
[09:14:42.907]      // while-condition  =>  TRUE
[09:14:42.907]      // while "1"  (timeout="50000")
[09:14:42.908]      // while-condition  =>  TRUE
[09:14:42.908]      // while "1"  (timeout="50000")
[09:14:42.908]      // while-condition  =>  TRUE
[09:14:42.909]      // while "1"  (timeout="50000")
[09:14:42.909]      // while-condition  =>  TRUE
[09:14:42.909]      // while "1"  (timeout="50000")
[09:14:42.910]      // while-condition  =>  TRUE
[09:14:42.910]      // while "1"  (timeout="50000")
[09:14:42.910]      // while-condition  =>  TRUE
[09:14:42.910]      // while "1"  (timeout="50000")
[09:14:42.911]      // while-condition  =>  TRUE
[09:14:42.911]      // while "1"  (timeout="50000")
[09:14:42.911]      // while-condition  =>  TRUE
[09:14:42.911]      // while "1"  (timeout="50000")
[09:14:42.912]      // while-condition  =>  TRUE
[09:14:42.912]      // while "1"  (timeout="50000")
[09:14:42.912]      // while-condition  =>  TRUE
[09:14:42.912]      // while "1"  (timeout="50000")
[09:14:42.913]      // while-condition  =>  TRUE
[09:14:42.913]      // while "1"  (timeout="50000")
[09:14:42.913]      // while-condition  =>  TRUE
[09:14:42.913]      // while "1"  (timeout="50000")
[09:14:42.914]      // while-condition  =>  TRUE
[09:14:42.914]      // while "1"  (timeout="50000")
[09:14:42.914]      // while-condition  =>  TRUE
[09:14:42.914]      // while "1"  (timeout="50000")
[09:14:42.914]      // while-condition  =>  TRUE
[09:14:42.915]      // while "1"  (timeout="50000")
[09:14:42.956]      // while-condition  =>  TRUE
[09:14:42.956]      // while "1"  (timeout="50000")
[09:14:42.957]      // while  =>  TIMEOUT
[09:14:42.957]      // end while "1"
[09:14:42.957]    </control>
[09:14:42.957]    <block atomic="false" info="">
[09:14:42.958]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:14:42.960]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:14:42.960]    </block>
[09:14:42.960]    <control if="" while="1" timeout="10000" info="">
[09:14:42.961]      // while "1"  (timeout="10000")
[09:14:42.961]      // while-condition  =>  TRUE
[09:14:42.961]      // while "1"  (timeout="10000")
[09:14:42.961]      // while-condition  =>  TRUE
[09:14:42.961]      // while "1"  (timeout="10000")
[09:14:42.962]      // while-condition  =>  TRUE
[09:14:42.962]      // while "1"  (timeout="10000")
[09:14:42.962]      // while-condition  =>  TRUE
[09:14:42.962]      // while "1"  (timeout="10000")
[09:14:42.963]      // while-condition  =>  TRUE
[09:14:42.963]      // while "1"  (timeout="10000")
[09:14:42.963]      // while-condition  =>  TRUE
[09:14:42.963]      // while "1"  (timeout="10000")
[09:14:42.964]      // while-condition  =>  TRUE
[09:14:42.964]      // while "1"  (timeout="10000")
[09:14:42.964]      // while-condition  =>  TRUE
[09:14:42.964]      // while "1"  (timeout="10000")
[09:14:42.965]      // while-condition  =>  TRUE
[09:14:42.965]      // while "1"  (timeout="10000")
[09:14:42.965]      // while-condition  =>  TRUE
[09:14:42.965]      // while "1"  (timeout="10000")
[09:14:42.965]      // while-condition  =>  TRUE
[09:14:42.966]      // while "1"  (timeout="10000")
[09:14:42.966]      // while-condition  =>  TRUE
[09:14:42.966]      // while "1"  (timeout="10000")
[09:14:42.966]      // while-condition  =>  TRUE
[09:14:42.967]      // while "1"  (timeout="10000")
[09:14:42.967]      // while-condition  =>  TRUE
[09:14:42.967]      // while "1"  (timeout="10000")
[09:14:42.967]      // while-condition  =>  TRUE
[09:14:42.968]      // while "1"  (timeout="10000")
[09:14:42.968]      // while-condition  =>  TRUE
[09:14:42.968]      // while "1"  (timeout="10000")
[09:14:42.968]      // while-condition  =>  TRUE
[09:14:42.969]      // while "1"  (timeout="10000")
[09:14:42.969]      // while-condition  =>  TRUE
[09:14:42.969]      // while "1"  (timeout="10000")
[09:14:42.969]      // while-condition  =>  TRUE
[09:14:42.970]      // while "1"  (timeout="10000")
[09:14:42.970]      // while-condition  =>  TRUE
[09:14:42.970]      // while "1"  (timeout="10000")
[09:14:42.970]      // while-condition  =>  TRUE
[09:14:42.971]      // while "1"  (timeout="10000")
[09:14:42.971]      // while  =>  TIMEOUT
[09:14:42.971]      // end while "1"
[09:14:42.971]    </control>
[09:14:42.972]    <block atomic="true" info="">
[09:14:42.976]  
[09:14:42.976]  ! W001 : No atomic sequence support in debug unit
[09:14:42.976]  
[09:14:42.978]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:14:42.981]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:14:42.981]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:14:42.983]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:14:42.983]    </block>
[09:14:42.983]    <block atomic="false" info="">
[09:14:42.984]      __errorcontrol = 0x00000001;
[09:14:42.984]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:14:42.984]      ReadDP(0x0);
[09:14:42.986]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:14:42.986]      __errorcontrol = 0x00000000;
[09:14:42.986]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:14:42.987]    </block>
[09:14:42.987]  </sequence>
[09:14:42.987]  
[09:14:42.991]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[09:14:42.991]  
[09:14:42.991]  <debugvars>
[09:14:42.992]    // Pre-defined
[09:14:42.992]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:14:42.992]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:14:42.992]    __dp=0x00000000
[09:14:42.993]    __ap=0x00000000
[09:14:42.993]    __traceout=0x00000000      (Trace Disabled)
[09:14:42.993]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:14:42.993]    __FlashAddr=0x00000000
[09:14:42.994]    __FlashLen=0x00000000
[09:14:42.994]    __FlashArg=0x00000000
[09:14:42.994]    __FlashOp=0x00000000
[09:14:42.994]    __Result=0x00000000
[09:14:42.995]  </debugvars>
[09:14:42.995]  
[09:14:42.995]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[09:14:42.996]    <block atomic="false" info="">
[09:14:42.996]    </block>
[09:14:42.996]  </sequence>
[09:14:42.996]  
[09:14:43.219]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[09:14:43.219]  
[09:14:43.220]  <debugvars>
[09:14:43.220]    // Pre-defined
[09:14:43.221]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:14:43.222]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:14:43.222]    __dp=0x00000000
[09:14:43.223]    __ap=0x00000000
[09:14:43.223]    __traceout=0x00000000      (Trace Disabled)
[09:14:43.224]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:14:43.224]    __FlashAddr=0x00000000
[09:14:43.225]    __FlashLen=0x00000000
[09:14:43.225]    __FlashArg=0x00000000
[09:14:43.225]    __FlashOp=0x00000000
[09:14:43.226]    __Result=0x00000000
[09:14:43.226]  </debugvars>
[09:14:43.227]  
[09:14:43.227]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[09:14:43.227]    <block atomic="false" info="">
[09:14:43.228]      Sequence("ResetHardware");
[09:14:43.228]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:14:43.229]          <block atomic="false" info="">
[09:14:43.229]            __var nReset      = 0x80;
[09:14:43.230]              // -> [nReset <= 0x00000080]
[09:14:43.230]            DAP_SWJ_Pins(0x00, nReset, 0);
[09:14:43.232]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:14:43.233]          </block>
[09:14:43.233]          <control if="" while="1" timeout="50000" info="">
[09:14:43.233]            // while "1"  (timeout="50000")
[09:14:43.234]            // while-condition  =>  TRUE
[09:14:43.234]            // while "1"  (timeout="50000")
[09:14:43.234]            // while-condition  =>  TRUE
[09:14:43.234]            // while "1"  (timeout="50000")
[09:14:43.235]            // while-condition  =>  TRUE
[09:14:43.235]            // while "1"  (timeout="50000")
[09:14:43.235]            // while-condition  =>  TRUE
[09:14:43.235]            // while "1"  (timeout="50000")
[09:14:43.236]            // while-condition  =>  TRUE
[09:14:43.236]            // while "1"  (timeout="50000")
[09:14:43.236]            // while-condition  =>  TRUE
[09:14:43.237]            // while "1"  (timeout="50000")
[09:14:43.237]            // while-condition  =>  TRUE
[09:14:43.237]            // while "1"  (timeout="50000")
[09:14:43.238]            // while-condition  =>  TRUE
[09:14:43.238]            // while "1"  (timeout="50000")
[09:14:43.238]            // while-condition  =>  TRUE
[09:14:43.238]            // while "1"  (timeout="50000")
[09:14:43.239]            // while-condition  =>  TRUE
[09:14:43.239]            // while "1"  (timeout="50000")
[09:14:43.239]            // while-condition  =>  TRUE
[09:14:43.239]            // while "1"  (timeout="50000")
[09:14:43.240]            // while-condition  =>  TRUE
[09:14:43.240]            // while "1"  (timeout="50000")
[09:14:43.240]            // while-condition  =>  TRUE
[09:14:43.240]            // while "1"  (timeout="50000")
[09:14:43.241]            // while-condition  =>  TRUE
[09:14:43.241]            // while "1"  (timeout="50000")
[09:14:43.241]            // while-condition  =>  TRUE
[09:14:43.242]            // while "1"  (timeout="50000")
[09:14:43.242]            // while-condition  =>  TRUE
[09:14:43.242]            // while "1"  (timeout="50000")
[09:14:43.242]            // while-condition  =>  TRUE
[09:14:43.243]            // while "1"  (timeout="50000")
[09:14:43.243]            // while-condition  =>  TRUE
[09:14:43.243]            // while "1"  (timeout="50000")
[09:14:43.243]            // while-condition  =>  TRUE
[09:14:43.244]            // while "1"  (timeout="50000")
[09:14:43.244]            // while-condition  =>  TRUE
[09:14:43.244]            // while "1"  (timeout="50000")
[09:14:43.244]            // while-condition  =>  TRUE
[09:14:43.245]            // while "1"  (timeout="50000")
[09:14:43.245]            // while-condition  =>  TRUE
[09:14:43.245]            // while "1"  (timeout="50000")
[09:14:43.245]            // while-condition  =>  TRUE
[09:14:43.246]            // while "1"  (timeout="50000")
[09:14:43.246]            // while-condition  =>  TRUE
[09:14:43.246]            // while "1"  (timeout="50000")
[09:14:43.246]            // while-condition  =>  TRUE
[09:14:43.246]            // while "1"  (timeout="50000")
[09:14:43.247]            // while-condition  =>  TRUE
[09:14:43.247]            // while "1"  (timeout="50000")
[09:14:43.247]            // while-condition  =>  TRUE
[09:14:43.247]            // while "1"  (timeout="50000")
[09:14:43.248]            // while-condition  =>  TRUE
[09:14:43.248]            // while "1"  (timeout="50000")
[09:14:43.248]            // while-condition  =>  TRUE
[09:14:43.249]            // while "1"  (timeout="50000")
[09:14:43.249]            // while-condition  =>  TRUE
[09:14:43.249]            // while "1"  (timeout="50000")
[09:14:43.249]            // while-condition  =>  TRUE
[09:14:43.249]            // while "1"  (timeout="50000")
[09:14:43.250]            // while-condition  =>  TRUE
[09:14:43.250]            // while "1"  (timeout="50000")
[09:14:43.250]            // while-condition  =>  TRUE
[09:14:43.250]            // while "1"  (timeout="50000")
[09:14:43.250]            // while-condition  =>  TRUE
[09:14:43.251]            // while "1"  (timeout="50000")
[09:14:43.251]            // while-condition  =>  TRUE
[09:14:43.251]            // while "1"  (timeout="50000")
[09:14:43.251]            // while-condition  =>  TRUE
[09:14:43.251]            // while "1"  (timeout="50000")
[09:14:43.251]            // while-condition  =>  TRUE
[09:14:43.252]            // while "1"  (timeout="50000")
[09:14:43.252]            // while-condition  =>  TRUE
[09:14:43.253]            // while "1"  (timeout="50000")
[09:14:43.253]            // while-condition  =>  TRUE
[09:14:43.253]            // while "1"  (timeout="50000")
[09:14:43.253]            // while-condition  =>  TRUE
[09:14:43.253]            // while "1"  (timeout="50000")
[09:14:43.254]            // while-condition  =>  TRUE
[09:14:43.254]            // while "1"  (timeout="50000")
[09:14:43.254]            // while-condition  =>  TRUE
[09:14:43.254]            // while "1"  (timeout="50000")
[09:14:43.254]            // while-condition  =>  TRUE
[09:14:43.254]            // while "1"  (timeout="50000")
[09:14:43.255]            // while-condition  =>  TRUE
[09:14:43.255]            // while "1"  (timeout="50000")
[09:14:43.255]            // while-condition  =>  TRUE
[09:14:43.255]            // while "1"  (timeout="50000")
[09:14:43.255]            // while-condition  =>  TRUE
[09:14:43.256]            // while "1"  (timeout="50000")
[09:14:43.256]            // while-condition  =>  TRUE
[09:14:43.256]            // while "1"  (timeout="50000")
[09:14:43.256]            // while-condition  =>  TRUE
[09:14:43.256]            // while "1"  (timeout="50000")
[09:14:43.256]            // while-condition  =>  TRUE
[09:14:43.256]            // while "1"  (timeout="50000")
[09:14:43.257]            // while-condition  =>  TRUE
[09:14:43.257]            // while "1"  (timeout="50000")
[09:14:43.257]            // while-condition  =>  TRUE
[09:14:43.257]            // while "1"  (timeout="50000")
[09:14:43.258]            // while-condition  =>  TRUE
[09:14:43.258]            // while "1"  (timeout="50000")
[09:14:43.258]            // while-condition  =>  TRUE
[09:14:43.258]            // while "1"  (timeout="50000")
[09:14:43.258]            // while-condition  =>  TRUE
[09:14:43.258]            // while "1"  (timeout="50000")
[09:14:43.258]            // while-condition  =>  TRUE
[09:14:43.259]            // while "1"  (timeout="50000")
[09:14:43.259]            // while-condition  =>  TRUE
[09:14:43.259]            // while "1"  (timeout="50000")
[09:14:43.259]            // while-condition  =>  TRUE
[09:14:43.259]            // while "1"  (timeout="50000")
[09:14:43.260]            // while-condition  =>  TRUE
[09:14:43.260]            // while "1"  (timeout="50000")
[09:14:43.260]            // while-condition  =>  TRUE
[09:14:43.260]            // while "1"  (timeout="50000")
[09:14:43.260]            // while-condition  =>  TRUE
[09:14:43.261]            // while "1"  (timeout="50000")
[09:14:43.261]            // while-condition  =>  TRUE
[09:14:43.261]            // while "1"  (timeout="50000")
[09:14:43.261]            // while-condition  =>  TRUE
[09:14:43.261]            // while "1"  (timeout="50000")
[09:14:43.262]            // while-condition  =>  TRUE
[09:14:43.262]            // while "1"  (timeout="50000")
[09:14:43.262]            // while-condition  =>  TRUE
[09:14:43.263]            // while "1"  (timeout="50000")
[09:14:43.263]            // while-condition  =>  TRUE
[09:14:43.263]            // while "1"  (timeout="50000")
[09:14:43.263]            // while-condition  =>  TRUE
[09:14:43.263]            // while "1"  (timeout="50000")
[09:14:43.264]            // while-condition  =>  TRUE
[09:14:43.264]            // while "1"  (timeout="50000")
[09:14:43.264]            // while-condition  =>  TRUE
[09:14:43.264]            // while "1"  (timeout="50000")
[09:14:43.264]            // while-condition  =>  TRUE
[09:14:43.265]            // while "1"  (timeout="50000")
[09:14:43.265]            // while-condition  =>  TRUE
[09:14:43.265]            // while "1"  (timeout="50000")
[09:14:43.265]            // while-condition  =>  TRUE
[09:14:43.265]            // while "1"  (timeout="50000")
[09:14:43.266]            // while-condition  =>  TRUE
[09:14:43.266]            // while "1"  (timeout="50000")
[09:14:43.266]            // while-condition  =>  TRUE
[09:14:43.266]            // while "1"  (timeout="50000")
[09:14:43.266]            // while-condition  =>  TRUE
[09:14:43.266]            // while "1"  (timeout="50000")
[09:14:43.266]            // while-condition  =>  TRUE
[09:14:43.267]            // while "1"  (timeout="50000")
[09:14:43.267]            // while-condition  =>  TRUE
[09:14:43.267]            // while "1"  (timeout="50000")
[09:14:43.267]            // while-condition  =>  TRUE
[09:14:43.267]            // while "1"  (timeout="50000")
[09:14:43.268]            // while-condition  =>  TRUE
[09:14:43.268]            // while "1"  (timeout="50000")
[09:14:43.268]            // while-condition  =>  TRUE
[09:14:43.268]            // while "1"  (timeout="50000")
[09:14:43.269]            // while-condition  =>  TRUE
[09:14:43.269]            // while "1"  (timeout="50000")
[09:14:43.269]            // while-condition  =>  TRUE
[09:14:43.269]            // while "1"  (timeout="50000")
[09:14:43.269]            // while-condition  =>  TRUE
[09:14:43.270]            // while "1"  (timeout="50000")
[09:14:43.270]            // while-condition  =>  TRUE
[09:14:43.270]            // while "1"  (timeout="50000")
[09:14:43.270]            // while-condition  =>  TRUE
[09:14:43.270]            // while "1"  (timeout="50000")
[09:14:43.270]            // while-condition  =>  TRUE
[09:14:43.271]            // while "1"  (timeout="50000")
[09:14:43.271]            // while-condition  =>  TRUE
[09:14:43.271]            // while "1"  (timeout="50000")
[09:14:43.271]            // while-condition  =>  TRUE
[09:14:43.271]            // while "1"  (timeout="50000")
[09:14:43.271]            // while-condition  =>  TRUE
[09:14:43.272]            // while "1"  (timeout="50000")
[09:14:43.272]            // while-condition  =>  TRUE
[09:14:43.272]            // while "1"  (timeout="50000")
[09:14:43.273]            // while-condition  =>  TRUE
[09:14:43.273]            // while "1"  (timeout="50000")
[09:14:43.273]            // while-condition  =>  TRUE
[09:14:43.273]            // while "1"  (timeout="50000")
[09:14:43.273]            // while-condition  =>  TRUE
[09:14:43.274]            // while "1"  (timeout="50000")
[09:14:43.274]            // while-condition  =>  TRUE
[09:14:43.274]            // while "1"  (timeout="50000")
[09:14:43.274]            // while-condition  =>  TRUE
[09:14:43.274]            // while "1"  (timeout="50000")
[09:14:43.274]            // while-condition  =>  TRUE
[09:14:43.274]            // while "1"  (timeout="50000")
[09:14:43.274]            // while-condition  =>  TRUE
[09:14:43.275]            // while "1"  (timeout="50000")
[09:14:43.275]            // while-condition  =>  TRUE
[09:14:43.275]            // while "1"  (timeout="50000")
[09:14:43.275]            // while-condition  =>  TRUE
[09:14:43.275]            // while "1"  (timeout="50000")
[09:14:43.276]            // while-condition  =>  TRUE
[09:14:43.276]            // while "1"  (timeout="50000")
[09:14:43.276]            // while-condition  =>  TRUE
[09:14:43.276]            // while "1"  (timeout="50000")
[09:14:43.276]            // while-condition  =>  TRUE
[09:14:43.277]            // while "1"  (timeout="50000")
[09:14:43.277]            // while-condition  =>  TRUE
[09:14:43.277]            // while "1"  (timeout="50000")
[09:14:43.277]            // while-condition  =>  TRUE
[09:14:43.278]            // while "1"  (timeout="50000")
[09:14:43.278]            // while-condition  =>  TRUE
[09:14:43.278]            // while "1"  (timeout="50000")
[09:14:43.279]            // while-condition  =>  TRUE
[09:14:43.279]            // while "1"  (timeout="50000")
[09:14:43.280]            // while-condition  =>  TRUE
[09:14:43.280]            // while "1"  (timeout="50000")
[09:14:43.280]            // while-condition  =>  TRUE
[09:14:43.280]            // while "1"  (timeout="50000")
[09:14:43.280]            // while-condition  =>  TRUE
[09:14:43.280]            // while "1"  (timeout="50000")
[09:14:43.281]            // while-condition  =>  TRUE
[09:14:43.281]            // while "1"  (timeout="50000")
[09:14:43.281]            // while-condition  =>  TRUE
[09:14:43.281]            // while "1"  (timeout="50000")
[09:14:43.281]            // while-condition  =>  TRUE
[09:14:43.282]            // while "1"  (timeout="50000")
[09:14:43.282]            // while-condition  =>  TRUE
[09:14:43.282]            // while "1"  (timeout="50000")
[09:14:43.282]            // while-condition  =>  TRUE
[09:14:43.282]            // while "1"  (timeout="50000")
[09:14:43.283]            // while-condition  =>  TRUE
[09:14:43.283]            // while "1"  (timeout="50000")
[09:14:43.283]            // while-condition  =>  TRUE
[09:14:43.284]            // while "1"  (timeout="50000")
[09:14:43.284]            // while  =>  TIMEOUT
[09:14:43.284]            // end while "1"
[09:14:43.284]          </control>
[09:14:43.284]          <block atomic="false" info="">
[09:14:43.285]            DAP_SWJ_Pins(nReset, nReset, 0);
[09:14:43.286]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:14:43.287]          </block>
[09:14:43.287]          <control if="" while="1" timeout="10000" info="">
[09:14:43.287]            // while "1"  (timeout="10000")
[09:14:43.287]            // while-condition  =>  TRUE
[09:14:43.287]            // while "1"  (timeout="10000")
[09:14:43.287]            // while-condition  =>  TRUE
[09:14:43.287]            // while "1"  (timeout="10000")
[09:14:43.287]            // while-condition  =>  TRUE
[09:14:43.288]            // while "1"  (timeout="10000")
[09:14:43.289]            // while-condition  =>  TRUE
[09:14:43.289]            // while "1"  (timeout="10000")
[09:14:43.289]            // while-condition  =>  TRUE
[09:14:43.289]            // while "1"  (timeout="10000")
[09:14:43.289]            // while-condition  =>  TRUE
[09:14:43.290]            // while "1"  (timeout="10000")
[09:14:43.290]            // while-condition  =>  TRUE
[09:14:43.290]            // while "1"  (timeout="10000")
[09:14:43.290]            // while-condition  =>  TRUE
[09:14:43.290]            // while "1"  (timeout="10000")
[09:14:43.290]            // while-condition  =>  TRUE
[09:14:43.290]            // while "1"  (timeout="10000")
[09:14:43.291]            // while-condition  =>  TRUE
[09:14:43.291]            // while "1"  (timeout="10000")
[09:14:43.291]            // while-condition  =>  TRUE
[09:14:43.291]            // while "1"  (timeout="10000")
[09:14:43.291]            // while-condition  =>  TRUE
[09:14:43.291]            // while "1"  (timeout="10000")
[09:14:43.292]            // while-condition  =>  TRUE
[09:14:43.292]            // while "1"  (timeout="10000")
[09:14:43.292]            // while-condition  =>  TRUE
[09:14:43.292]            // while "1"  (timeout="10000")
[09:14:43.293]            // while-condition  =>  TRUE
[09:14:43.293]            // while "1"  (timeout="10000")
[09:14:43.293]            // while-condition  =>  TRUE
[09:14:43.293]            // while "1"  (timeout="10000")
[09:14:43.293]            // while-condition  =>  TRUE
[09:14:43.294]            // while "1"  (timeout="10000")
[09:14:43.294]            // while-condition  =>  TRUE
[09:14:43.294]            // while "1"  (timeout="10000")
[09:14:43.295]            // while-condition  =>  TRUE
[09:14:43.295]            // while "1"  (timeout="10000")
[09:14:43.295]            // while-condition  =>  TRUE
[09:14:43.295]            // while "1"  (timeout="10000")
[09:14:43.295]            // while-condition  =>  TRUE
[09:14:43.295]            // while "1"  (timeout="10000")
[09:14:43.296]            // while-condition  =>  TRUE
[09:14:43.296]            // while "1"  (timeout="10000")
[09:14:43.296]            // while-condition  =>  TRUE
[09:14:43.296]            // while "1"  (timeout="10000")
[09:14:43.296]            // while-condition  =>  TRUE
[09:14:43.297]            // while "1"  (timeout="10000")
[09:14:43.297]            // while-condition  =>  TRUE
[09:14:43.297]            // while "1"  (timeout="10000")
[09:14:43.297]            // while-condition  =>  TRUE
[09:14:43.297]            // while "1"  (timeout="10000")
[09:14:43.297]            // while-condition  =>  TRUE
[09:14:43.297]            // while "1"  (timeout="10000")
[09:14:43.297]            // while-condition  =>  TRUE
[09:14:43.298]            // while "1"  (timeout="10000")
[09:14:43.298]            // while-condition  =>  TRUE
[09:14:43.298]            // while "1"  (timeout="10000")
[09:14:43.298]            // while-condition  =>  TRUE
[09:14:43.298]            // while "1"  (timeout="10000")
[09:14:43.299]            // while-condition  =>  TRUE
[09:14:43.299]            // while "1"  (timeout="10000")
[09:14:43.300]            // while  =>  TIMEOUT
[09:14:43.300]            // end while "1"
[09:14:43.300]          </control>
[09:14:43.300]          <block atomic="true" info="">
[09:14:43.303]  
[09:14:43.303]  ! W001 : No atomic sequence support in debug unit
[09:14:43.303]  
[09:14:43.305]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:14:43.308]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:14:43.308]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:14:43.310]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:14:43.311]          </block>
[09:14:43.311]          <block atomic="false" info="">
[09:14:43.311]            __errorcontrol = 0x00000001;
[09:14:43.312]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:14:43.312]            ReadDP(0x0);
[09:14:43.314]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:14:43.315]            __errorcontrol = 0x00000000;
[09:14:43.315]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:14:43.315]          </block>
[09:14:43.316]        </sequence>
[09:14:43.316]      Sequence("DebugPortSetup");
[09:14:43.316]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:14:43.316]        </sequence>
[09:14:43.317]      Sequence("DebugPortStart");
[09:14:43.317]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:14:43.317]          <block atomic="false" info="">
[09:14:43.318]            __var SW_DP_ABORT  = 0x0;
[09:14:43.318]              // -> [SW_DP_ABORT <= 0x00000000]
[09:14:43.318]            __var DP_CTRL_STAT = 0x4;
[09:14:43.318]              // -> [DP_CTRL_STAT <= 0x00000004]
[09:14:43.318]            __var DP_SELECT    = 0x8;
[09:14:43.318]              // -> [DP_SELECT <= 0x00000008]
[09:14:43.319]            __var powered_down = 0;
[09:14:43.319]              // -> [powered_down <= 0x00000000]
[09:14:43.319]            WriteDP(DP_SELECT, 0x00000000);
[09:14:43.321]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:14:43.322]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:14:43.324]              // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:14:43.324]              // -> [powered_down <= 0x00000000]
[09:14:43.325]          </block>
[09:14:43.325]          <control if="powered_down" while="" timeout="0" info="">
[09:14:43.326]            // if-block "powered_down"
[09:14:43.326]              // =>  FALSE
[09:14:43.326]            // skip if-block "powered_down"
[09:14:43.326]          </control>
[09:14:43.326]        </sequence>
[09:14:43.327]      Sequence("DebugCoreStart");
[09:14:43.328]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:14:43.328]          <block atomic="true" info="">
[09:14:43.330]  
[09:14:43.330]  ! W001 : No atomic sequence support in debug unit
[09:14:43.330]  
[09:14:43.332]            __var DP_R_IDCODE    = 0x0;
[09:14:43.336]              // -> [DP_R_IDCODE <= 0x00000000]
[09:14:43.336]            __var DP_W_ABORT    = 0x0;
[09:14:43.337]              // -> [DP_W_ABORT <= 0x00000000]
[09:14:43.338]            __var DP_CTRLSTAT = 0x4;
[09:14:43.339]              // -> [DP_CTRLSTAT <= 0x00000004]
[09:14:43.339]            __var DP_W_SELECT    = 0x8;
[09:14:43.340]              // -> [DP_W_SELECT <= 0x00000008]
[09:14:43.341]            __var AP_TAR		= 0x4;
[09:14:43.341]              // -> [AP_TAR <= 0x00000004]
[09:14:43.342]            __var AP_BD0		= 0x0;
[09:14:43.343]              // -> [AP_BD0 <= 0x00000000]
[09:14:43.344]            __var AP_BD1		= 0x4;
[09:14:43.344]              // -> [AP_BD1 <= 0x00000004]
[09:14:43.345]            __var AP_BD2		= 0x8;
[09:14:43.346]              // -> [AP_BD2 <= 0x00000008]
[09:14:43.347]            __var PCWithinFlash = 0;
[09:14:43.348]              // -> [PCWithinFlash <= 0x00000000]
[09:14:43.348]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:14:43.354]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.355]          </block>
[09:14:43.356]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:14:43.356]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:14:43.363]              // -> [Read32(0xE000EDF0) => 0x00030003]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.364]            // while-condition  =>  FALSE
[09:14:43.365]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:14:43.365]          </control>
[09:14:43.366]          <block atomic="true" info="">
[09:14:43.373]  
[09:14:43.373]  ! W001 : No atomic sequence support in debug unit
[09:14:43.373]  
[09:14:43.393]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:14:43.396]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:14:43.396]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:14:43.399]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.399]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:14:43.402]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:14:43.402]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:14:43.406]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.406]          </block>
[09:14:43.408]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:14:43.408]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.410]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.411]            // while-condition  =>  TRUE
[09:14:43.411]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.413]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.413]            // while-condition  =>  TRUE
[09:14:43.413]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.416]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.416]            // while-condition  =>  TRUE
[09:14:43.416]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.420]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.420]            // while-condition  =>  TRUE
[09:14:43.420]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.422]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.423]            // while-condition  =>  TRUE
[09:14:43.423]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.425]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.425]            // while-condition  =>  TRUE
[09:14:43.425]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.429]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.429]            // while-condition  =>  TRUE
[09:14:43.429]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.431]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.432]            // while-condition  =>  TRUE
[09:14:43.432]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.435]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.435]            // while-condition  =>  TRUE
[09:14:43.436]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.439]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.439]            // while-condition  =>  TRUE
[09:14:43.440]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.442]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.443]            // while-condition  =>  TRUE
[09:14:43.443]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.447]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.447]            // while-condition  =>  TRUE
[09:14:43.448]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.451]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.451]            // while-condition  =>  TRUE
[09:14:43.452]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.455]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.455]            // while-condition  =>  TRUE
[09:14:43.456]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.459]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.459]            // while-condition  =>  TRUE
[09:14:43.459]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.462]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.463]            // while-condition  =>  TRUE
[09:14:43.463]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.465]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.466]            // while-condition  =>  TRUE
[09:14:43.466]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.469]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.469]            // while-condition  =>  TRUE
[09:14:43.469]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.471]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.472]            // while-condition  =>  TRUE
[09:14:43.472]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.475]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.475]            // while-condition  =>  TRUE
[09:14:43.476]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.478]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.479]            // while-condition  =>  TRUE
[09:14:43.479]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.482]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.482]            // while-condition  =>  TRUE
[09:14:43.482]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.485]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.485]            // while-condition  =>  TRUE
[09:14:43.485]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.488]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.488]            // while-condition  =>  TRUE
[09:14:43.488]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.490]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.491]            // while-condition  =>  TRUE
[09:14:43.491]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.493]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.493]            // while-condition  =>  TRUE
[09:14:43.494]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.496]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.497]            // while-condition  =>  TRUE
[09:14:43.497]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.499]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.500]            // while-condition  =>  TRUE
[09:14:43.500]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.502]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.502]            // while-condition  =>  TRUE
[09:14:43.502]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:14:43.503]            // while  =>  TIMEOUT
[09:14:43.504]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:14:43.504]          </control>
[09:14:43.504]          <block atomic="false" info="">
[09:14:43.505]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:14:43.507]              // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:14:43.507]              // -> [PCWithinFlash <= 0x00000000]
[09:14:43.507]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:14:43.509]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:14:43.509]          </block>
[09:14:43.510]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:14:43.510]            // if-block "PCWithinFlash == 0"
[09:14:43.510]              // =>  TRUE
[09:14:43.511]            // end if-block "PCWithinFlash == 0"
[09:14:43.512]          </control>
[09:14:43.512]        </sequence>
[09:14:43.512]    </block>
[09:14:43.512]  </sequence>
[09:14:43.512]  
[09:14:54.636]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[09:14:54.636]  
[09:14:54.636]  <debugvars>
[09:14:54.637]    // Pre-defined
[09:14:54.637]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:14:54.638]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:14:54.638]    __dp=0x00000000
[09:14:54.640]    __ap=0x00000000
[09:14:54.640]    __traceout=0x00000000      (Trace Disabled)
[09:14:54.641]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:14:54.641]    __FlashAddr=0x00000000
[09:14:54.642]    __FlashLen=0x00000000
[09:14:54.642]    __FlashArg=0x00000000
[09:14:54.643]    __FlashOp=0x00000000
[09:14:54.643]    __Result=0x00000000
[09:14:54.644]  </debugvars>
[09:14:54.644]  
[09:14:54.644]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[09:14:54.644]    <block atomic="false" info="">
[09:14:54.645]      __var nReset      = 0x80;
[09:14:54.645]        // -> [nReset <= 0x00000080]
[09:14:54.645]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:14:54.648]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:14:54.648]    </block>
[09:14:54.648]    <control if="" while="1" timeout="50000" info="">
[09:14:54.648]      // while "1"  (timeout="50000")
[09:14:54.649]      // while-condition  =>  TRUE
[09:14:54.649]      // while "1"  (timeout="50000")
[09:14:54.649]      // while-condition  =>  TRUE
[09:14:54.650]      // while "1"  (timeout="50000")
[09:14:54.650]      // while-condition  =>  TRUE
[09:14:54.650]      // while "1"  (timeout="50000")
[09:14:54.650]      // while-condition  =>  TRUE
[09:14:54.651]      // while "1"  (timeout="50000")
[09:14:54.651]      // while-condition  =>  TRUE
[09:14:54.651]      // while "1"  (timeout="50000")
[09:14:54.651]      // while-condition  =>  TRUE
[09:14:54.651]      // while "1"  (timeout="50000")
[09:14:54.651]      // while-condition  =>  TRUE
[09:14:54.651]      // while "1"  (timeout="50000")
[09:14:54.652]      // while-condition  =>  TRUE
[09:14:54.652]      // while "1"  (timeout="50000")
[09:14:54.652]      // while-condition  =>  TRUE
[09:14:54.652]      // while "1"  (timeout="50000")
[09:14:54.653]      // while-condition  =>  TRUE
[09:14:54.653]      // while "1"  (timeout="50000")
[09:14:54.653]      // while-condition  =>  TRUE
[09:14:54.653]      // while "1"  (timeout="50000")
[09:14:54.654]      // while-condition  =>  TRUE
[09:14:54.654]      // while "1"  (timeout="50000")
[09:14:54.654]      // while-condition  =>  TRUE
[09:14:54.655]      // while "1"  (timeout="50000")
[09:14:54.655]      // while-condition  =>  TRUE
[09:14:54.655]      // while "1"  (timeout="50000")
[09:14:54.655]      // while-condition  =>  TRUE
[09:14:54.656]      // while "1"  (timeout="50000")
[09:14:54.657]      // while-condition  =>  TRUE
[09:14:54.657]      // while "1"  (timeout="50000")
[09:14:54.657]      // while-condition  =>  TRUE
[09:14:54.658]      // while "1"  (timeout="50000")
[09:14:54.658]      // while-condition  =>  TRUE
[09:14:54.658]      // while "1"  (timeout="50000")
[09:14:54.659]      // while-condition  =>  TRUE
[09:14:54.659]      // while "1"  (timeout="50000")
[09:14:54.659]      // while-condition  =>  TRUE
[09:14:54.659]      // while "1"  (timeout="50000")
[09:14:54.660]      // while-condition  =>  TRUE
[09:14:54.660]      // while "1"  (timeout="50000")
[09:14:54.660]      // while-condition  =>  TRUE
[09:14:54.660]      // while "1"  (timeout="50000")
[09:14:54.661]      // while-condition  =>  TRUE
[09:14:54.661]      // while "1"  (timeout="50000")
[09:14:54.661]      // while-condition  =>  TRUE
[09:14:54.661]      // while "1"  (timeout="50000")
[09:14:54.661]      // while-condition  =>  TRUE
[09:14:54.661]      // while "1"  (timeout="50000")
[09:14:54.661]      // while-condition  =>  TRUE
[09:14:54.661]      // while "1"  (timeout="50000")
[09:14:54.661]      // while-condition  =>  TRUE
[09:14:54.662]      // while "1"  (timeout="50000")
[09:14:54.662]      // while-condition  =>  TRUE
[09:14:54.662]      // while "1"  (timeout="50000")
[09:14:54.662]      // while-condition  =>  TRUE
[09:14:54.662]      // while "1"  (timeout="50000")
[09:14:54.663]      // while-condition  =>  TRUE
[09:14:54.663]      // while "1"  (timeout="50000")
[09:14:54.663]      // while-condition  =>  TRUE
[09:14:54.663]      // while "1"  (timeout="50000")
[09:14:54.663]      // while-condition  =>  TRUE
[09:14:54.665]      // while "1"  (timeout="50000")
[09:14:54.665]      // while-condition  =>  TRUE
[09:14:54.665]      // while "1"  (timeout="50000")
[09:14:54.665]      // while-condition  =>  TRUE
[09:14:54.665]      // while "1"  (timeout="50000")
[09:14:54.666]      // while-condition  =>  TRUE
[09:14:54.666]      // while "1"  (timeout="50000")
[09:14:54.666]      // while-condition  =>  TRUE
[09:14:54.666]      // while "1"  (timeout="50000")
[09:14:54.666]      // while-condition  =>  TRUE
[09:14:54.667]      // while "1"  (timeout="50000")
[09:14:54.667]      // while-condition  =>  TRUE
[09:14:54.667]      // while "1"  (timeout="50000")
[09:14:54.667]      // while-condition  =>  TRUE
[09:14:54.667]      // while "1"  (timeout="50000")
[09:14:54.667]      // while-condition  =>  TRUE
[09:14:54.668]      // while "1"  (timeout="50000")
[09:14:54.668]      // while-condition  =>  TRUE
[09:14:54.668]      // while "1"  (timeout="50000")
[09:14:54.668]      // while-condition  =>  TRUE
[09:14:54.668]      // while "1"  (timeout="50000")
[09:14:54.668]      // while-condition  =>  TRUE
[09:14:54.669]      // while "1"  (timeout="50000")
[09:14:54.669]      // while-condition  =>  TRUE
[09:14:54.669]      // while "1"  (timeout="50000")
[09:14:54.669]      // while-condition  =>  TRUE
[09:14:54.670]      // while "1"  (timeout="50000")
[09:14:54.670]      // while-condition  =>  TRUE
[09:14:54.670]      // while "1"  (timeout="50000")
[09:14:54.670]      // while-condition  =>  TRUE
[09:14:54.670]      // while "1"  (timeout="50000")
[09:14:54.671]      // while-condition  =>  TRUE
[09:14:54.671]      // while "1"  (timeout="50000")
[09:14:54.671]      // while-condition  =>  TRUE
[09:14:54.671]      // while "1"  (timeout="50000")
[09:14:54.671]      // while-condition  =>  TRUE
[09:14:54.672]      // while "1"  (timeout="50000")
[09:14:54.672]      // while-condition  =>  TRUE
[09:14:54.672]      // while "1"  (timeout="50000")
[09:14:54.672]      // while-condition  =>  TRUE
[09:14:54.672]      // while "1"  (timeout="50000")
[09:14:54.672]      // while-condition  =>  TRUE
[09:14:54.672]      // while "1"  (timeout="50000")
[09:14:54.672]      // while-condition  =>  TRUE
[09:14:54.672]      // while "1"  (timeout="50000")
[09:14:54.672]      // while-condition  =>  TRUE
[09:14:54.673]      // while "1"  (timeout="50000")
[09:14:54.673]      // while-condition  =>  TRUE
[09:14:54.673]      // while "1"  (timeout="50000")
[09:14:54.673]      // while-condition  =>  TRUE
[09:14:54.673]      // while "1"  (timeout="50000")
[09:14:54.674]      // while-condition  =>  TRUE
[09:14:54.674]      // while "1"  (timeout="50000")
[09:14:54.674]      // while-condition  =>  TRUE
[09:14:54.674]      // while "1"  (timeout="50000")
[09:14:54.674]      // while-condition  =>  TRUE
[09:14:54.675]      // while "1"  (timeout="50000")
[09:14:54.676]      // while-condition  =>  TRUE
[09:14:54.676]      // while "1"  (timeout="50000")
[09:14:54.676]      // while-condition  =>  TRUE
[09:14:54.676]      // while "1"  (timeout="50000")
[09:14:54.676]      // while-condition  =>  TRUE
[09:14:54.677]      // while "1"  (timeout="50000")
[09:14:54.677]      // while-condition  =>  TRUE
[09:14:54.677]      // while "1"  (timeout="50000")
[09:14:54.677]      // while-condition  =>  TRUE
[09:14:54.677]      // while "1"  (timeout="50000")
[09:14:54.678]      // while-condition  =>  TRUE
[09:14:54.678]      // while "1"  (timeout="50000")
[09:14:54.678]      // while-condition  =>  TRUE
[09:14:54.678]      // while "1"  (timeout="50000")
[09:14:54.678]      // while-condition  =>  TRUE
[09:14:54.679]      // while "1"  (timeout="50000")
[09:14:54.679]      // while-condition  =>  TRUE
[09:14:54.679]      // while "1"  (timeout="50000")
[09:14:54.679]      // while-condition  =>  TRUE
[09:14:54.679]      // while "1"  (timeout="50000")
[09:14:54.680]      // while-condition  =>  TRUE
[09:14:54.680]      // while "1"  (timeout="50000")
[09:14:54.680]      // while-condition  =>  TRUE
[09:14:54.680]      // while "1"  (timeout="50000")
[09:14:54.680]      // while-condition  =>  TRUE
[09:14:54.681]      // while "1"  (timeout="50000")
[09:14:54.681]      // while-condition  =>  TRUE
[09:14:54.681]      // while "1"  (timeout="50000")
[09:14:54.681]      // while-condition  =>  TRUE
[09:14:54.681]      // while "1"  (timeout="50000")
[09:14:54.682]      // while-condition  =>  TRUE
[09:14:54.682]      // while "1"  (timeout="50000")
[09:14:54.682]      // while-condition  =>  TRUE
[09:14:54.682]      // while "1"  (timeout="50000")
[09:14:54.682]      // while-condition  =>  TRUE
[09:14:54.683]      // while "1"  (timeout="50000")
[09:14:54.683]      // while-condition  =>  TRUE
[09:14:54.683]      // while "1"  (timeout="50000")
[09:14:54.683]      // while-condition  =>  TRUE
[09:14:54.683]      // while "1"  (timeout="50000")
[09:14:54.683]      // while-condition  =>  TRUE
[09:14:54.683]      // while "1"  (timeout="50000")
[09:14:54.684]      // while-condition  =>  TRUE
[09:14:54.684]      // while "1"  (timeout="50000")
[09:14:54.684]      // while-condition  =>  TRUE
[09:14:54.684]      // while "1"  (timeout="50000")
[09:14:54.684]      // while-condition  =>  TRUE
[09:14:54.685]      // while "1"  (timeout="50000")
[09:14:54.685]      // while-condition  =>  TRUE
[09:14:54.685]      // while "1"  (timeout="50000")
[09:14:54.686]      // while-condition  =>  TRUE
[09:14:54.686]      // while "1"  (timeout="50000")
[09:14:54.686]      // while-condition  =>  TRUE
[09:14:54.686]      // while "1"  (timeout="50000")
[09:14:54.686]      // while-condition  =>  TRUE
[09:14:54.686]      // while "1"  (timeout="50000")
[09:14:54.687]      // while-condition  =>  TRUE
[09:14:54.687]      // while "1"  (timeout="50000")
[09:14:54.687]      // while-condition  =>  TRUE
[09:14:54.687]      // while "1"  (timeout="50000")
[09:14:54.688]      // while-condition  =>  TRUE
[09:14:54.688]      // while "1"  (timeout="50000")
[09:14:54.688]      // while-condition  =>  TRUE
[09:14:54.688]      // while "1"  (timeout="50000")
[09:14:54.688]      // while-condition  =>  TRUE
[09:14:54.689]      // while "1"  (timeout="50000")
[09:14:54.689]      // while-condition  =>  TRUE
[09:14:54.689]      // while "1"  (timeout="50000")
[09:14:54.689]      // while-condition  =>  TRUE
[09:14:54.689]      // while "1"  (timeout="50000")
[09:14:54.689]      // while-condition  =>  TRUE
[09:14:54.690]      // while "1"  (timeout="50000")
[09:14:54.690]      // while-condition  =>  TRUE
[09:14:54.690]      // while "1"  (timeout="50000")
[09:14:54.690]      // while-condition  =>  TRUE
[09:14:54.690]      // while "1"  (timeout="50000")
[09:14:54.691]      // while-condition  =>  TRUE
[09:14:54.691]      // while "1"  (timeout="50000")
[09:14:54.691]      // while-condition  =>  TRUE
[09:14:54.691]      // while "1"  (timeout="50000")
[09:14:54.691]      // while-condition  =>  TRUE
[09:14:54.692]      // while "1"  (timeout="50000")
[09:14:54.692]      // while-condition  =>  TRUE
[09:14:54.692]      // while "1"  (timeout="50000")
[09:14:54.692]      // while-condition  =>  TRUE
[09:14:54.692]      // while "1"  (timeout="50000")
[09:14:54.693]      // while-condition  =>  TRUE
[09:14:54.693]      // while "1"  (timeout="50000")
[09:14:54.693]      // while-condition  =>  TRUE
[09:14:54.693]      // while "1"  (timeout="50000")
[09:14:54.693]      // while-condition  =>  TRUE
[09:14:54.694]      // while "1"  (timeout="50000")
[09:14:54.694]      // while-condition  =>  TRUE
[09:14:54.694]      // while "1"  (timeout="50000")
[09:14:54.694]      // while-condition  =>  TRUE
[09:14:54.694]      // while "1"  (timeout="50000")
[09:14:54.694]      // while-condition  =>  TRUE
[09:14:54.695]      // while "1"  (timeout="50000")
[09:14:54.695]      // while-condition  =>  TRUE
[09:14:54.695]      // while "1"  (timeout="50000")
[09:14:54.695]      // while-condition  =>  TRUE
[09:14:54.695]      // while "1"  (timeout="50000")
[09:14:54.695]      // while-condition  =>  TRUE
[09:14:54.695]      // while "1"  (timeout="50000")
[09:14:54.695]      // while-condition  =>  TRUE
[09:14:54.696]      // while "1"  (timeout="50000")
[09:14:54.697]      // while-condition  =>  TRUE
[09:14:54.697]      // while "1"  (timeout="50000")
[09:14:54.697]      // while-condition  =>  TRUE
[09:14:54.697]      // while "1"  (timeout="50000")
[09:14:54.697]      // while-condition  =>  TRUE
[09:14:54.697]      // while "1"  (timeout="50000")
[09:14:54.698]      // while-condition  =>  TRUE
[09:14:54.698]      // while "1"  (timeout="50000")
[09:14:54.698]      // while-condition  =>  TRUE
[09:14:54.698]      // while "1"  (timeout="50000")
[09:14:54.698]      // while-condition  =>  TRUE
[09:14:54.699]      // while "1"  (timeout="50000")
[09:14:54.699]      // while-condition  =>  TRUE
[09:14:54.699]      // while "1"  (timeout="50000")
[09:14:54.699]      // while-condition  =>  TRUE
[09:14:54.699]      // while "1"  (timeout="50000")
[09:14:54.700]      // while-condition  =>  TRUE
[09:14:54.700]      // while "1"  (timeout="50000")
[09:14:54.700]      // while-condition  =>  TRUE
[09:14:54.700]      // while "1"  (timeout="50000")
[09:14:54.700]      // while-condition  =>  TRUE
[09:14:54.701]      // while "1"  (timeout="50000")
[09:14:54.701]      // while-condition  =>  TRUE
[09:14:54.701]      // while "1"  (timeout="50000")
[09:14:54.701]      // while-condition  =>  TRUE
[09:14:54.702]      // while "1"  (timeout="50000")
[09:14:54.702]      // while-condition  =>  TRUE
[09:14:54.702]      // while "1"  (timeout="50000")
[09:14:54.702]      // while-condition  =>  TRUE
[09:14:54.703]      // while "1"  (timeout="50000")
[09:14:54.703]      // while-condition  =>  TRUE
[09:14:54.703]      // while "1"  (timeout="50000")
[09:14:54.703]      // while-condition  =>  TRUE
[09:14:54.704]      // while "1"  (timeout="50000")
[09:14:54.704]      // while-condition  =>  TRUE
[09:14:54.704]      // while "1"  (timeout="50000")
[09:14:54.704]      // while-condition  =>  TRUE
[09:14:54.704]      // while "1"  (timeout="50000")
[09:14:54.704]      // while-condition  =>  TRUE
[09:14:54.704]      // while "1"  (timeout="50000")
[09:14:54.705]      // while-condition  =>  TRUE
[09:14:54.705]      // while "1"  (timeout="50000")
[09:14:54.705]      // while  =>  TIMEOUT
[09:14:54.705]      // end while "1"
[09:14:54.706]    </control>
[09:14:54.706]    <block atomic="false" info="">
[09:14:54.706]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:14:54.708]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:14:54.709]    </block>
[09:14:54.709]  </sequence>
[09:14:54.709]  
[09:15:39.776]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:15:39.776]  
[09:15:39.776]  <debugvars>
[09:15:39.777]    // Pre-defined
[09:15:39.777]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:15:39.778]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:15:39.778]    __dp=0x00000000
[09:15:39.778]    __ap=0x00000000
[09:15:39.779]    __traceout=0x00000000      (Trace Disabled)
[09:15:39.779]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:15:39.780]    __FlashAddr=0x00000000
[09:15:39.780]    __FlashLen=0x00000000
[09:15:39.780]    __FlashArg=0x00000000
[09:15:39.781]    __FlashOp=0x00000000
[09:15:39.781]    __Result=0x00000000
[09:15:39.782]  </debugvars>
[09:15:39.782]  
[09:15:39.782]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:15:39.782]    <block atomic="false" info="">
[09:15:39.783]      __var nReset      = 0x80;
[09:15:39.783]        // -> [nReset <= 0x00000080]
[09:15:39.783]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:15:39.785]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:15:39.785]    </block>
[09:15:39.786]    <control if="" while="1" timeout="50000" info="">
[09:15:39.786]      // while "1"  (timeout="50000")
[09:15:39.786]      // while-condition  =>  TRUE
[09:15:39.786]      // while "1"  (timeout="50000")
[09:15:39.787]      // while-condition  =>  TRUE
[09:15:39.787]      // while "1"  (timeout="50000")
[09:15:39.787]      // while-condition  =>  TRUE
[09:15:39.788]      // while "1"  (timeout="50000")
[09:15:39.788]      // while-condition  =>  TRUE
[09:15:39.788]      // while "1"  (timeout="50000")
[09:15:39.788]      // while-condition  =>  TRUE
[09:15:39.789]      // while "1"  (timeout="50000")
[09:15:39.789]      // while-condition  =>  TRUE
[09:15:39.789]      // while "1"  (timeout="50000")
[09:15:39.790]      // while-condition  =>  TRUE
[09:15:39.790]      // while "1"  (timeout="50000")
[09:15:39.790]      // while-condition  =>  TRUE
[09:15:39.791]      // while "1"  (timeout="50000")
[09:15:39.791]      // while-condition  =>  TRUE
[09:15:39.791]      // while "1"  (timeout="50000")
[09:15:39.791]      // while-condition  =>  TRUE
[09:15:39.792]      // while "1"  (timeout="50000")
[09:15:39.792]      // while-condition  =>  TRUE
[09:15:39.792]      // while "1"  (timeout="50000")
[09:15:39.793]      // while-condition  =>  TRUE
[09:15:39.793]      // while "1"  (timeout="50000")
[09:15:39.793]      // while-condition  =>  TRUE
[09:15:39.793]      // while "1"  (timeout="50000")
[09:15:39.794]      // while-condition  =>  TRUE
[09:15:39.794]      // while "1"  (timeout="50000")
[09:15:39.794]      // while-condition  =>  TRUE
[09:15:39.795]      // while "1"  (timeout="50000")
[09:15:39.795]      // while-condition  =>  TRUE
[09:15:39.795]      // while "1"  (timeout="50000")
[09:15:39.795]      // while-condition  =>  TRUE
[09:15:39.796]      // while "1"  (timeout="50000")
[09:15:39.796]      // while-condition  =>  TRUE
[09:15:39.796]      // while "1"  (timeout="50000")
[09:15:39.796]      // while-condition  =>  TRUE
[09:15:39.797]      // while "1"  (timeout="50000")
[09:15:39.797]      // while-condition  =>  TRUE
[09:15:39.797]      // while "1"  (timeout="50000")
[09:15:39.797]      // while-condition  =>  TRUE
[09:15:39.797]      // while "1"  (timeout="50000")
[09:15:39.798]      // while-condition  =>  TRUE
[09:15:39.798]      // while "1"  (timeout="50000")
[09:15:39.798]      // while-condition  =>  TRUE
[09:15:39.798]      // while "1"  (timeout="50000")
[09:15:39.798]      // while-condition  =>  TRUE
[09:15:39.799]      // while "1"  (timeout="50000")
[09:15:39.799]      // while-condition  =>  TRUE
[09:15:39.799]      // while "1"  (timeout="50000")
[09:15:39.799]      // while-condition  =>  TRUE
[09:15:39.799]      // while "1"  (timeout="50000")
[09:15:39.800]      // while-condition  =>  TRUE
[09:15:39.800]      // while "1"  (timeout="50000")
[09:15:39.800]      // while-condition  =>  TRUE
[09:15:39.800]      // while "1"  (timeout="50000")
[09:15:39.800]      // while-condition  =>  TRUE
[09:15:39.801]      // while "1"  (timeout="50000")
[09:15:39.801]      // while-condition  =>  TRUE
[09:15:39.801]      // while "1"  (timeout="50000")
[09:15:39.801]      // while-condition  =>  TRUE
[09:15:39.801]      // while "1"  (timeout="50000")
[09:15:39.802]      // while-condition  =>  TRUE
[09:15:39.802]      // while "1"  (timeout="50000")
[09:15:39.802]      // while-condition  =>  TRUE
[09:15:39.802]      // while "1"  (timeout="50000")
[09:15:39.802]      // while-condition  =>  TRUE
[09:15:39.803]      // while "1"  (timeout="50000")
[09:15:39.803]      // while-condition  =>  TRUE
[09:15:39.803]      // while "1"  (timeout="50000")
[09:15:39.803]      // while-condition  =>  TRUE
[09:15:39.803]      // while "1"  (timeout="50000")
[09:15:39.804]      // while-condition  =>  TRUE
[09:15:39.804]      // while "1"  (timeout="50000")
[09:15:39.804]      // while-condition  =>  TRUE
[09:15:39.804]      // while "1"  (timeout="50000")
[09:15:39.804]      // while-condition  =>  TRUE
[09:15:39.805]      // while "1"  (timeout="50000")
[09:15:39.805]      // while-condition  =>  TRUE
[09:15:39.805]      // while "1"  (timeout="50000")
[09:15:39.805]      // while-condition  =>  TRUE
[09:15:39.805]      // while "1"  (timeout="50000")
[09:15:39.806]      // while-condition  =>  TRUE
[09:15:39.806]      // while "1"  (timeout="50000")
[09:15:39.806]      // while-condition  =>  TRUE
[09:15:39.806]      // while "1"  (timeout="50000")
[09:15:39.806]      // while-condition  =>  TRUE
[09:15:39.807]      // while "1"  (timeout="50000")
[09:15:39.807]      // while-condition  =>  TRUE
[09:15:39.807]      // while "1"  (timeout="50000")
[09:15:39.807]      // while-condition  =>  TRUE
[09:15:39.807]      // while "1"  (timeout="50000")
[09:15:39.808]      // while-condition  =>  TRUE
[09:15:39.808]      // while "1"  (timeout="50000")
[09:15:39.808]      // while-condition  =>  TRUE
[09:15:39.808]      // while "1"  (timeout="50000")
[09:15:39.808]      // while-condition  =>  TRUE
[09:15:39.808]      // while "1"  (timeout="50000")
[09:15:39.809]      // while-condition  =>  TRUE
[09:15:39.809]      // while "1"  (timeout="50000")
[09:15:39.809]      // while-condition  =>  TRUE
[09:15:39.809]      // while "1"  (timeout="50000")
[09:15:39.809]      // while-condition  =>  TRUE
[09:15:39.810]      // while "1"  (timeout="50000")
[09:15:39.810]      // while-condition  =>  TRUE
[09:15:39.810]      // while "1"  (timeout="50000")
[09:15:39.810]      // while-condition  =>  TRUE
[09:15:39.810]      // while "1"  (timeout="50000")
[09:15:39.811]      // while-condition  =>  TRUE
[09:15:39.811]      // while "1"  (timeout="50000")
[09:15:39.811]      // while-condition  =>  TRUE
[09:15:39.811]      // while "1"  (timeout="50000")
[09:15:39.812]      // while-condition  =>  TRUE
[09:15:39.812]      // while "1"  (timeout="50000")
[09:15:39.812]      // while-condition  =>  TRUE
[09:15:39.812]      // while "1"  (timeout="50000")
[09:15:39.813]      // while-condition  =>  TRUE
[09:15:39.813]      // while "1"  (timeout="50000")
[09:15:39.813]      // while-condition  =>  TRUE
[09:15:39.813]      // while "1"  (timeout="50000")
[09:15:39.813]      // while-condition  =>  TRUE
[09:15:39.814]      // while "1"  (timeout="50000")
[09:15:39.814]      // while-condition  =>  TRUE
[09:15:39.814]      // while "1"  (timeout="50000")
[09:15:39.814]      // while-condition  =>  TRUE
[09:15:39.815]      // while "1"  (timeout="50000")
[09:15:39.815]      // while-condition  =>  TRUE
[09:15:39.815]      // while "1"  (timeout="50000")
[09:15:39.815]      // while-condition  =>  TRUE
[09:15:39.815]      // while "1"  (timeout="50000")
[09:15:39.816]      // while-condition  =>  TRUE
[09:15:39.816]      // while "1"  (timeout="50000")
[09:15:39.816]      // while-condition  =>  TRUE
[09:15:39.816]      // while "1"  (timeout="50000")
[09:15:39.817]      // while-condition  =>  TRUE
[09:15:39.817]      // while "1"  (timeout="50000")
[09:15:39.817]      // while-condition  =>  TRUE
[09:15:39.817]      // while "1"  (timeout="50000")
[09:15:39.818]      // while-condition  =>  TRUE
[09:15:39.818]      // while "1"  (timeout="50000")
[09:15:39.818]      // while-condition  =>  TRUE
[09:15:39.818]      // while "1"  (timeout="50000")
[09:15:39.818]      // while-condition  =>  TRUE
[09:15:39.819]      // while "1"  (timeout="50000")
[09:15:39.819]      // while-condition  =>  TRUE
[09:15:39.819]      // while "1"  (timeout="50000")
[09:15:39.819]      // while-condition  =>  TRUE
[09:15:39.820]      // while "1"  (timeout="50000")
[09:15:39.820]      // while-condition  =>  TRUE
[09:15:39.820]      // while "1"  (timeout="50000")
[09:15:39.820]      // while-condition  =>  TRUE
[09:15:39.820]      // while "1"  (timeout="50000")
[09:15:39.821]      // while-condition  =>  TRUE
[09:15:39.821]      // while "1"  (timeout="50000")
[09:15:39.821]      // while-condition  =>  TRUE
[09:15:39.821]      // while "1"  (timeout="50000")
[09:15:39.822]      // while-condition  =>  TRUE
[09:15:39.822]      // while "1"  (timeout="50000")
[09:15:39.822]      // while-condition  =>  TRUE
[09:15:39.822]      // while "1"  (timeout="50000")
[09:15:39.822]      // while-condition  =>  TRUE
[09:15:39.823]      // while "1"  (timeout="50000")
[09:15:39.823]      // while-condition  =>  TRUE
[09:15:39.823]      // while "1"  (timeout="50000")
[09:15:39.823]      // while-condition  =>  TRUE
[09:15:39.824]      // while "1"  (timeout="50000")
[09:15:39.824]      // while-condition  =>  TRUE
[09:15:39.824]      // while "1"  (timeout="50000")
[09:15:39.824]      // while-condition  =>  TRUE
[09:15:39.825]      // while "1"  (timeout="50000")
[09:15:39.825]      // while-condition  =>  TRUE
[09:15:39.825]      // while "1"  (timeout="50000")
[09:15:39.825]      // while-condition  =>  TRUE
[09:15:39.825]      // while "1"  (timeout="50000")
[09:15:39.826]      // while-condition  =>  TRUE
[09:15:39.826]      // while "1"  (timeout="50000")
[09:15:39.826]      // while-condition  =>  TRUE
[09:15:39.826]      // while "1"  (timeout="50000")
[09:15:39.827]      // while-condition  =>  TRUE
[09:15:39.827]      // while "1"  (timeout="50000")
[09:15:39.827]      // while-condition  =>  TRUE
[09:15:39.827]      // while "1"  (timeout="50000")
[09:15:39.827]      // while-condition  =>  TRUE
[09:15:39.828]      // while "1"  (timeout="50000")
[09:15:39.828]      // while-condition  =>  TRUE
[09:15:39.828]      // while "1"  (timeout="50000")
[09:15:39.828]      // while-condition  =>  TRUE
[09:15:39.829]      // while "1"  (timeout="50000")
[09:15:39.829]      // while-condition  =>  TRUE
[09:15:39.829]      // while "1"  (timeout="50000")
[09:15:39.829]      // while-condition  =>  TRUE
[09:15:39.829]      // while "1"  (timeout="50000")
[09:15:39.830]      // while-condition  =>  TRUE
[09:15:39.830]      // while "1"  (timeout="50000")
[09:15:39.830]      // while-condition  =>  TRUE
[09:15:39.830]      // while "1"  (timeout="50000")
[09:15:39.831]      // while-condition  =>  TRUE
[09:15:39.831]      // while "1"  (timeout="50000")
[09:15:39.831]      // while-condition  =>  TRUE
[09:15:39.831]      // while "1"  (timeout="50000")
[09:15:39.831]      // while-condition  =>  TRUE
[09:15:39.832]      // while "1"  (timeout="50000")
[09:15:39.832]      // while-condition  =>  TRUE
[09:15:39.832]      // while "1"  (timeout="50000")
[09:15:39.832]      // while-condition  =>  TRUE
[09:15:39.833]      // while "1"  (timeout="50000")
[09:15:39.833]      // while-condition  =>  TRUE
[09:15:39.833]      // while "1"  (timeout="50000")
[09:15:39.833]      // while-condition  =>  TRUE
[09:15:39.833]      // while "1"  (timeout="50000")
[09:15:39.834]      // while-condition  =>  TRUE
[09:15:39.834]      // while "1"  (timeout="50000")
[09:15:39.834]      // while-condition  =>  TRUE
[09:15:39.834]      // while "1"  (timeout="50000")
[09:15:39.835]      // while-condition  =>  TRUE
[09:15:39.835]      // while "1"  (timeout="50000")
[09:15:39.835]      // while-condition  =>  TRUE
[09:15:39.835]      // while "1"  (timeout="50000")
[09:15:39.836]      // while-condition  =>  TRUE
[09:15:39.836]      // while "1"  (timeout="50000")
[09:15:39.836]      // while-condition  =>  TRUE
[09:15:39.836]      // while "1"  (timeout="50000")
[09:15:39.836]      // while-condition  =>  TRUE
[09:15:39.837]      // while "1"  (timeout="50000")
[09:15:39.837]      // while-condition  =>  TRUE
[09:15:39.837]      // while "1"  (timeout="50000")
[09:15:39.837]      // while-condition  =>  TRUE
[09:15:39.838]      // while "1"  (timeout="50000")
[09:15:39.838]      // while-condition  =>  TRUE
[09:15:39.838]      // while "1"  (timeout="50000")
[09:15:39.838]      // while-condition  =>  TRUE
[09:15:39.839]      // while "1"  (timeout="50000")
[09:15:39.839]      // while-condition  =>  TRUE
[09:15:39.839]      // while "1"  (timeout="50000")
[09:15:39.839]      // while-condition  =>  TRUE
[09:15:39.839]      // while "1"  (timeout="50000")
[09:15:39.840]      // while-condition  =>  TRUE
[09:15:39.840]      // while "1"  (timeout="50000")
[09:15:39.840]      // while-condition  =>  TRUE
[09:15:39.841]      // while "1"  (timeout="50000")
[09:15:39.841]      // while-condition  =>  TRUE
[09:15:39.841]      // while "1"  (timeout="50000")
[09:15:39.841]      // while-condition  =>  TRUE
[09:15:39.842]      // while "1"  (timeout="50000")
[09:15:39.842]      // while-condition  =>  TRUE
[09:15:39.842]      // while "1"  (timeout="50000")
[09:15:39.842]      // while-condition  =>  TRUE
[09:15:39.843]      // while "1"  (timeout="50000")
[09:15:39.843]      // while-condition  =>  TRUE
[09:15:39.843]      // while "1"  (timeout="50000")
[09:15:39.843]      // while-condition  =>  TRUE
[09:15:39.844]      // while "1"  (timeout="50000")
[09:15:39.844]      // while-condition  =>  TRUE
[09:15:39.844]      // while "1"  (timeout="50000")
[09:15:39.844]      // while-condition  =>  TRUE
[09:15:39.845]      // while "1"  (timeout="50000")
[09:15:39.845]      // while-condition  =>  TRUE
[09:15:39.845]      // while "1"  (timeout="50000")
[09:15:39.846]      // while-condition  =>  TRUE
[09:15:39.846]      // while "1"  (timeout="50000")
[09:15:39.846]      // while  =>  TIMEOUT
[09:15:39.846]      // end while "1"
[09:15:39.847]    </control>
[09:15:39.847]    <block atomic="false" info="">
[09:15:39.847]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:15:39.850]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:15:39.850]    </block>
[09:15:39.850]    <control if="" while="1" timeout="10000" info="">
[09:15:39.850]      // while "1"  (timeout="10000")
[09:15:39.851]      // while-condition  =>  TRUE
[09:15:39.851]      // while "1"  (timeout="10000")
[09:15:39.851]      // while-condition  =>  TRUE
[09:15:39.852]      // while "1"  (timeout="10000")
[09:15:39.852]      // while-condition  =>  TRUE
[09:15:39.852]      // while "1"  (timeout="10000")
[09:15:39.852]      // while-condition  =>  TRUE
[09:15:39.853]      // while "1"  (timeout="10000")
[09:15:39.853]      // while-condition  =>  TRUE
[09:15:39.853]      // while "1"  (timeout="10000")
[09:15:39.853]      // while-condition  =>  TRUE
[09:15:39.854]      // while "1"  (timeout="10000")
[09:15:39.854]      // while-condition  =>  TRUE
[09:15:39.854]      // while "1"  (timeout="10000")
[09:15:39.855]      // while-condition  =>  TRUE
[09:15:39.855]      // while "1"  (timeout="10000")
[09:15:39.855]      // while-condition  =>  TRUE
[09:15:39.855]      // while "1"  (timeout="10000")
[09:15:39.856]      // while-condition  =>  TRUE
[09:15:39.856]      // while "1"  (timeout="10000")
[09:15:39.856]      // while-condition  =>  TRUE
[09:15:39.856]      // while "1"  (timeout="10000")
[09:15:39.857]      // while-condition  =>  TRUE
[09:15:39.857]      // while "1"  (timeout="10000")
[09:15:39.858]      // while-condition  =>  TRUE
[09:15:39.858]      // while "1"  (timeout="10000")
[09:15:39.858]      // while-condition  =>  TRUE
[09:15:39.859]      // while "1"  (timeout="10000")
[09:15:39.859]      // while-condition  =>  TRUE
[09:15:39.859]      // while "1"  (timeout="10000")
[09:15:39.859]      // while-condition  =>  TRUE
[09:15:39.860]      // while "1"  (timeout="10000")
[09:15:39.860]      // while-condition  =>  TRUE
[09:15:39.860]      // while "1"  (timeout="10000")
[09:15:39.860]      // while-condition  =>  TRUE
[09:15:39.860]      // while "1"  (timeout="10000")
[09:15:39.861]      // while-condition  =>  TRUE
[09:15:39.861]      // while "1"  (timeout="10000")
[09:15:39.861]      // while  =>  TIMEOUT
[09:15:39.861]      // end while "1"
[09:15:39.861]    </control>
[09:15:39.862]    <block atomic="true" info="">
[09:15:39.865]  
[09:15:39.865]  ! W001 : No atomic sequence support in debug unit
[09:15:39.865]  
[09:15:39.867]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:15:39.876]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:15:39.876]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:15:39.878]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:15:39.878]    </block>
[09:15:39.878]    <block atomic="false" info="">
[09:15:39.879]      __errorcontrol = 0x00000001;
[09:15:39.879]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:15:39.880]      ReadDP(0x0);
[09:15:39.882]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:15:39.882]      __errorcontrol = 0x00000000;
[09:15:39.882]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:15:39.883]    </block>
[09:15:39.883]  </sequence>
[09:15:39.884]  
[09:15:39.884]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:15:39.884]  
[09:15:39.884]  <debugvars>
[09:15:39.885]    // Pre-defined
[09:15:39.885]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:15:39.885]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:15:39.886]    __dp=0x00000000
[09:15:39.886]    __ap=0x00000000
[09:15:39.886]    __traceout=0x00000000      (Trace Disabled)
[09:15:39.887]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:15:39.887]    __FlashAddr=0x00000000
[09:15:39.887]    __FlashLen=0x00000000
[09:15:39.888]    __FlashArg=0x00000000
[09:15:39.888]    __FlashOp=0x00000000
[09:15:39.888]    __Result=0x00000000
[09:15:39.889]  </debugvars>
[09:15:39.889]  
[09:15:39.889]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:15:39.890]  </sequence>
[09:15:39.890]  
[09:15:39.894]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[09:15:39.894]  
[09:15:39.895]  <debugvars>
[09:15:39.895]    // Pre-defined
[09:15:39.895]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:15:39.896]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:15:39.896]    __dp=0x00000000
[09:15:39.896]    __ap=0x00000000
[09:15:39.897]    __traceout=0x00000000      (Trace Disabled)
[09:15:39.897]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:15:39.897]    __FlashAddr=0x00000000
[09:15:39.898]    __FlashLen=0x00000000
[09:15:39.898]    __FlashArg=0x00000000
[09:15:39.899]    __FlashOp=0x00000000
[09:15:39.899]    __Result=0x00000000
[09:15:39.899]  </debugvars>
[09:15:39.900]  
[09:15:39.900]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:15:39.900]    <block atomic="false" info="">
[09:15:39.901]      __var SW_DP_ABORT  = 0x0;
[09:15:39.901]        // -> [SW_DP_ABORT <= 0x00000000]
[09:15:39.901]      __var DP_CTRL_STAT = 0x4;
[09:15:39.902]        // -> [DP_CTRL_STAT <= 0x00000004]
[09:15:39.902]      __var DP_SELECT    = 0x8;
[09:15:39.902]        // -> [DP_SELECT <= 0x00000008]
[09:15:39.903]      __var powered_down = 0;
[09:15:39.903]        // -> [powered_down <= 0x00000000]
[09:15:39.903]      WriteDP(DP_SELECT, 0x00000000);
[09:15:39.905]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:15:39.905]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:15:39.907]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[09:15:39.907]        // -> [powered_down <= 0x00000001]
[09:15:39.908]    </block>
[09:15:39.908]    <control if="powered_down" while="" timeout="0" info="">
[09:15:39.908]      // if-block "powered_down"
[09:15:39.908]        // =>  TRUE
[09:15:39.908]      <block atomic="false" info="">
[09:15:39.909]        WriteDP(DP_CTRL_STAT, 0x50000000);
[09:15:39.910]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[09:15:39.911]      </block>
[09:15:39.911]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[09:15:39.911]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[09:15:39.913]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:15:39.914]        // while-condition  =>  FALSE
[09:15:39.914]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[09:15:39.914]      </control>
[09:15:39.914]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[09:15:39.915]        // if-block "(__protocol & 0xFFFF) == 1"
[09:15:39.915]          // =>  FALSE
[09:15:39.915]        // skip if-block "(__protocol & 0xFFFF) == 1"
[09:15:39.916]      </control>
[09:15:39.916]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[09:15:39.916]        // if-block "(__protocol & 0xFFFF) == 2"
[09:15:39.916]          // =>  TRUE
[09:15:39.917]        <block atomic="false" info="">
[09:15:39.917]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[09:15:39.919]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[09:15:39.920]          WriteDP(SW_DP_ABORT, 0x0000001E);
[09:15:39.921]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[09:15:39.922]        </block>
[09:15:39.922]        // end if-block "(__protocol & 0xFFFF) == 2"
[09:15:39.922]      </control>
[09:15:39.923]      // end if-block "powered_down"
[09:15:39.923]    </control>
[09:15:39.923]  </sequence>
[09:15:39.924]  
[09:15:40.027]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:15:40.027]  
[09:15:40.028]  <debugvars>
[09:15:40.028]    // Pre-defined
[09:15:40.029]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:15:40.029]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:15:40.029]    __dp=0x00000000
[09:15:40.030]    __ap=0x00000000
[09:15:40.030]    __traceout=0x00000000      (Trace Disabled)
[09:15:40.031]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:15:40.031]    __FlashAddr=0x00000000
[09:15:40.031]    __FlashLen=0x00000000
[09:15:40.031]    __FlashArg=0x00000000
[09:15:40.032]    __FlashOp=0x00000000
[09:15:40.032]    __Result=0x00000000
[09:15:40.032]  </debugvars>
[09:15:40.033]  
[09:15:40.033]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:15:40.033]    <block atomic="true" info="">
[09:15:40.037]  
[09:15:40.037]  ! W001 : No atomic sequence support in debug unit
[09:15:40.037]  
[09:15:40.039]      __var DP_R_IDCODE    = 0x0;
[09:15:40.039]        // -> [DP_R_IDCODE <= 0x00000000]
[09:15:40.040]      __var DP_W_ABORT    = 0x0;
[09:15:40.040]        // -> [DP_W_ABORT <= 0x00000000]
[09:15:40.040]      __var DP_CTRLSTAT = 0x4;
[09:15:40.041]        // -> [DP_CTRLSTAT <= 0x00000004]
[09:15:40.041]      __var DP_W_SELECT    = 0x8;
[09:15:40.042]        // -> [DP_W_SELECT <= 0x00000008]
[09:15:40.042]      __var AP_TAR		= 0x4;
[09:15:40.042]        // -> [AP_TAR <= 0x00000004]
[09:15:40.043]      __var AP_BD0		= 0x0;
[09:15:40.043]        // -> [AP_BD0 <= 0x00000000]
[09:15:40.043]      __var AP_BD1		= 0x4;
[09:15:40.043]        // -> [AP_BD1 <= 0x00000004]
[09:15:40.044]      __var AP_BD2		= 0x8;
[09:15:40.044]        // -> [AP_BD2 <= 0x00000008]
[09:15:40.044]      __var PCWithinFlash = 0;
[09:15:40.045]        // -> [PCWithinFlash <= 0x00000000]
[09:15:40.045]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:15:40.051]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.070]    </block>
[09:15:40.071]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:15:40.071]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:15:40.077]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.078]      // while-condition  =>  FALSE
[09:15:40.078]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:15:40.079]    </control>
[09:15:40.079]    <block atomic="true" info="">
[09:15:40.082]  
[09:15:40.082]  ! W001 : No atomic sequence support in debug unit
[09:15:40.082]  
[09:15:40.084]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:15:40.086]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:15:40.087]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:15:40.088]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.089]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:15:40.090]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:15:40.091]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:15:40.095]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.107]    </block>
[09:15:40.107]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:15:40.108]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.110]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.110]      // while-condition  =>  TRUE
[09:15:40.110]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.113]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.113]      // while-condition  =>  TRUE
[09:15:40.114]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.116]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.116]      // while-condition  =>  TRUE
[09:15:40.116]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.119]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.119]      // while-condition  =>  TRUE
[09:15:40.120]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.122]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.122]      // while-condition  =>  TRUE
[09:15:40.123]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.125]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.125]      // while-condition  =>  TRUE
[09:15:40.126]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.128]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.128]      // while-condition  =>  TRUE
[09:15:40.129]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.131]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.131]      // while-condition  =>  TRUE
[09:15:40.131]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.133]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.133]      // while-condition  =>  TRUE
[09:15:40.134]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.136]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.136]      // while-condition  =>  TRUE
[09:15:40.137]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.139]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.139]      // while-condition  =>  TRUE
[09:15:40.140]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.142]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.142]      // while-condition  =>  TRUE
[09:15:40.143]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.145]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.145]      // while-condition  =>  TRUE
[09:15:40.146]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.148]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.148]      // while-condition  =>  TRUE
[09:15:40.149]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.151]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.151]      // while-condition  =>  TRUE
[09:15:40.152]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.154]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.154]      // while-condition  =>  TRUE
[09:15:40.155]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.157]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.157]      // while-condition  =>  TRUE
[09:15:40.158]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.160]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.161]      // while-condition  =>  TRUE
[09:15:40.161]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.163]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.164]      // while-condition  =>  TRUE
[09:15:40.164]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.166]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.166]      // while-condition  =>  TRUE
[09:15:40.167]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.169]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.170]      // while-condition  =>  TRUE
[09:15:40.171]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.173]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.175]      // while-condition  =>  TRUE
[09:15:40.175]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.177]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.177]      // while-condition  =>  TRUE
[09:15:40.178]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.180]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.180]      // while-condition  =>  TRUE
[09:15:40.181]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.183]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.183]      // while-condition  =>  TRUE
[09:15:40.184]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.185]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.185]      // while-condition  =>  TRUE
[09:15:40.186]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.188]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.188]      // while-condition  =>  TRUE
[09:15:40.189]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.191]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.192]      // while-condition  =>  TRUE
[09:15:40.192]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.194]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.195]      // while-condition  =>  TRUE
[09:15:40.195]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.197]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.198]      // while-condition  =>  TRUE
[09:15:40.198]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.200]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.201]      // while-condition  =>  TRUE
[09:15:40.201]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.203]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.203]      // while-condition  =>  TRUE
[09:15:40.204]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.206]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.207]      // while-condition  =>  TRUE
[09:15:40.207]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.207]      // while  =>  TIMEOUT
[09:15:40.207]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:15:40.207]    </control>
[09:15:40.208]    <block atomic="false" info="">
[09:15:40.208]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:15:40.211]        // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.211]        // -> [PCWithinFlash <= 0x00000000]
[09:15:40.211]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:15:40.214]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:15:40.214]    </block>
[09:15:40.214]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:15:40.215]      // if-block "PCWithinFlash == 0"
[09:15:40.215]        // =>  TRUE
[09:15:40.215]      // end if-block "PCWithinFlash == 0"
[09:15:40.215]    </control>
[09:15:40.215]  </sequence>
[09:15:40.216]  
[09:15:40.262]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[09:15:40.262]  
[09:15:40.263]  <debugvars>
[09:15:40.263]    // Pre-defined
[09:15:40.263]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:15:40.263]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:15:40.264]    __dp=0x00000000
[09:15:40.264]    __ap=0x00000000
[09:15:40.264]    __traceout=0x00000000      (Trace Disabled)
[09:15:40.264]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:15:40.265]    __FlashAddr=0x00000000
[09:15:40.265]    __FlashLen=0x00000000
[09:15:40.265]    __FlashArg=0x00000000
[09:15:40.265]    __FlashOp=0x00000000
[09:15:40.266]    __Result=0x00000000
[09:15:40.266]  </debugvars>
[09:15:40.266]  
[09:15:40.266]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[09:15:40.267]    <block atomic="false" info="">
[09:15:40.267]    </block>
[09:15:40.267]  </sequence>
[09:15:40.267]  
[09:15:40.270]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[09:15:40.270]  
[09:15:40.270]  <debugvars>
[09:15:40.270]    // Pre-defined
[09:15:40.271]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:15:40.271]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:15:40.271]    __dp=0x00000000
[09:15:40.271]    __ap=0x00000000
[09:15:40.272]    __traceout=0x00000000      (Trace Disabled)
[09:15:40.272]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:15:40.272]    __FlashAddr=0x00000000
[09:15:40.272]    __FlashLen=0x00000000
[09:15:40.273]    __FlashArg=0x00000000
[09:15:40.273]    __FlashOp=0x00000000
[09:15:40.273]    __Result=0x00000000
[09:15:40.273]  </debugvars>
[09:15:40.274]  
[09:15:40.274]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:15:40.274]    <block atomic="false" info="">
[09:15:40.274]      __var nReset      = 0x80;
[09:15:40.275]        // -> [nReset <= 0x00000080]
[09:15:40.275]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:15:40.277]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:15:40.277]    </block>
[09:15:40.278]    <control if="" while="1" timeout="50000" info="">
[09:15:40.278]      // while "1"  (timeout="50000")
[09:15:40.278]      // while-condition  =>  TRUE
[09:15:40.279]      // while "1"  (timeout="50000")
[09:15:40.279]      // while-condition  =>  TRUE
[09:15:40.279]      // while "1"  (timeout="50000")
[09:15:40.279]      // while-condition  =>  TRUE
[09:15:40.280]      // while "1"  (timeout="50000")
[09:15:40.280]      // while-condition  =>  TRUE
[09:15:40.280]      // while "1"  (timeout="50000")
[09:15:40.280]      // while-condition  =>  TRUE
[09:15:40.281]      // while "1"  (timeout="50000")
[09:15:40.281]      // while-condition  =>  TRUE
[09:15:40.281]      // while "1"  (timeout="50000")
[09:15:40.281]      // while-condition  =>  TRUE
[09:15:40.282]      // while "1"  (timeout="50000")
[09:15:40.282]      // while-condition  =>  TRUE
[09:15:40.282]      // while "1"  (timeout="50000")
[09:15:40.282]      // while-condition  =>  TRUE
[09:15:40.283]      // while "1"  (timeout="50000")
[09:15:40.283]      // while-condition  =>  TRUE
[09:15:40.283]      // while "1"  (timeout="50000")
[09:15:40.283]      // while-condition  =>  TRUE
[09:15:40.283]      // while "1"  (timeout="50000")
[09:15:40.284]      // while-condition  =>  TRUE
[09:15:40.284]      // while "1"  (timeout="50000")
[09:15:40.284]      // while-condition  =>  TRUE
[09:15:40.284]      // while "1"  (timeout="50000")
[09:15:40.285]      // while-condition  =>  TRUE
[09:15:40.285]      // while "1"  (timeout="50000")
[09:15:40.285]      // while-condition  =>  TRUE
[09:15:40.285]      // while "1"  (timeout="50000")
[09:15:40.286]      // while-condition  =>  TRUE
[09:15:40.286]      // while "1"  (timeout="50000")
[09:15:40.286]      // while-condition  =>  TRUE
[09:15:40.286]      // while "1"  (timeout="50000")
[09:15:40.286]      // while-condition  =>  TRUE
[09:15:40.287]      // while "1"  (timeout="50000")
[09:15:40.287]      // while-condition  =>  TRUE
[09:15:40.287]      // while "1"  (timeout="50000")
[09:15:40.287]      // while-condition  =>  TRUE
[09:15:40.288]      // while "1"  (timeout="50000")
[09:15:40.288]      // while-condition  =>  TRUE
[09:15:40.288]      // while "1"  (timeout="50000")
[09:15:40.288]      // while-condition  =>  TRUE
[09:15:40.289]      // while "1"  (timeout="50000")
[09:15:40.289]      // while-condition  =>  TRUE
[09:15:40.289]      // while "1"  (timeout="50000")
[09:15:40.289]      // while-condition  =>  TRUE
[09:15:40.289]      // while "1"  (timeout="50000")
[09:15:40.290]      // while-condition  =>  TRUE
[09:15:40.290]      // while "1"  (timeout="50000")
[09:15:40.290]      // while-condition  =>  TRUE
[09:15:40.290]      // while "1"  (timeout="50000")
[09:15:40.291]      // while-condition  =>  TRUE
[09:15:40.291]      // while "1"  (timeout="50000")
[09:15:40.291]      // while-condition  =>  TRUE
[09:15:40.291]      // while "1"  (timeout="50000")
[09:15:40.292]      // while-condition  =>  TRUE
[09:15:40.292]      // while "1"  (timeout="50000")
[09:15:40.292]      // while-condition  =>  TRUE
[09:15:40.293]      // while "1"  (timeout="50000")
[09:15:40.293]      // while-condition  =>  TRUE
[09:15:40.293]      // while "1"  (timeout="50000")
[09:15:40.293]      // while-condition  =>  TRUE
[09:15:40.294]      // while "1"  (timeout="50000")
[09:15:40.294]      // while-condition  =>  TRUE
[09:15:40.294]      // while "1"  (timeout="50000")
[09:15:40.294]      // while-condition  =>  TRUE
[09:15:40.295]      // while "1"  (timeout="50000")
[09:15:40.295]      // while-condition  =>  TRUE
[09:15:40.295]      // while "1"  (timeout="50000")
[09:15:40.295]      // while-condition  =>  TRUE
[09:15:40.296]      // while "1"  (timeout="50000")
[09:15:40.296]      // while-condition  =>  TRUE
[09:15:40.296]      // while "1"  (timeout="50000")
[09:15:40.296]      // while-condition  =>  TRUE
[09:15:40.296]      // while "1"  (timeout="50000")
[09:15:40.297]      // while-condition  =>  TRUE
[09:15:40.297]      // while "1"  (timeout="50000")
[09:15:40.297]      // while-condition  =>  TRUE
[09:15:40.297]      // while "1"  (timeout="50000")
[09:15:40.298]      // while-condition  =>  TRUE
[09:15:40.298]      // while "1"  (timeout="50000")
[09:15:40.298]      // while-condition  =>  TRUE
[09:15:40.298]      // while "1"  (timeout="50000")
[09:15:40.299]      // while-condition  =>  TRUE
[09:15:40.299]      // while "1"  (timeout="50000")
[09:15:40.299]      // while-condition  =>  TRUE
[09:15:40.299]      // while "1"  (timeout="50000")
[09:15:40.300]      // while-condition  =>  TRUE
[09:15:40.300]      // while "1"  (timeout="50000")
[09:15:40.300]      // while-condition  =>  TRUE
[09:15:40.300]      // while "1"  (timeout="50000")
[09:15:40.300]      // while-condition  =>  TRUE
[09:15:40.301]      // while "1"  (timeout="50000")
[09:15:40.301]      // while-condition  =>  TRUE
[09:15:40.301]      // while "1"  (timeout="50000")
[09:15:40.301]      // while-condition  =>  TRUE
[09:15:40.302]      // while "1"  (timeout="50000")
[09:15:40.302]      // while-condition  =>  TRUE
[09:15:40.302]      // while "1"  (timeout="50000")
[09:15:40.302]      // while-condition  =>  TRUE
[09:15:40.303]      // while "1"  (timeout="50000")
[09:15:40.303]      // while-condition  =>  TRUE
[09:15:40.303]      // while "1"  (timeout="50000")
[09:15:40.303]      // while-condition  =>  TRUE
[09:15:40.303]      // while "1"  (timeout="50000")
[09:15:40.304]      // while-condition  =>  TRUE
[09:15:40.304]      // while "1"  (timeout="50000")
[09:15:40.304]      // while-condition  =>  TRUE
[09:15:40.304]      // while "1"  (timeout="50000")
[09:15:40.305]      // while-condition  =>  TRUE
[09:15:40.305]      // while "1"  (timeout="50000")
[09:15:40.305]      // while-condition  =>  TRUE
[09:15:40.305]      // while "1"  (timeout="50000")
[09:15:40.305]      // while-condition  =>  TRUE
[09:15:40.306]      // while "1"  (timeout="50000")
[09:15:40.306]      // while-condition  =>  TRUE
[09:15:40.306]      // while "1"  (timeout="50000")
[09:15:40.306]      // while-condition  =>  TRUE
[09:15:40.306]      // while "1"  (timeout="50000")
[09:15:40.307]      // while-condition  =>  TRUE
[09:15:40.307]      // while "1"  (timeout="50000")
[09:15:40.307]      // while-condition  =>  TRUE
[09:15:40.307]      // while "1"  (timeout="50000")
[09:15:40.308]      // while-condition  =>  TRUE
[09:15:40.308]      // while "1"  (timeout="50000")
[09:15:40.308]      // while-condition  =>  TRUE
[09:15:40.308]      // while "1"  (timeout="50000")
[09:15:40.309]      // while-condition  =>  TRUE
[09:15:40.309]      // while "1"  (timeout="50000")
[09:15:40.309]      // while-condition  =>  TRUE
[09:15:40.309]      // while "1"  (timeout="50000")
[09:15:40.310]      // while-condition  =>  TRUE
[09:15:40.310]      // while "1"  (timeout="50000")
[09:15:40.310]      // while-condition  =>  TRUE
[09:15:40.310]      // while "1"  (timeout="50000")
[09:15:40.311]      // while-condition  =>  TRUE
[09:15:40.311]      // while "1"  (timeout="50000")
[09:15:40.311]      // while-condition  =>  TRUE
[09:15:40.311]      // while "1"  (timeout="50000")
[09:15:40.311]      // while-condition  =>  TRUE
[09:15:40.312]      // while "1"  (timeout="50000")
[09:15:40.312]      // while-condition  =>  TRUE
[09:15:40.312]      // while "1"  (timeout="50000")
[09:15:40.312]      // while-condition  =>  TRUE
[09:15:40.313]      // while "1"  (timeout="50000")
[09:15:40.313]      // while-condition  =>  TRUE
[09:15:40.313]      // while "1"  (timeout="50000")
[09:15:40.313]      // while-condition  =>  TRUE
[09:15:40.314]      // while "1"  (timeout="50000")
[09:15:40.314]      // while-condition  =>  TRUE
[09:15:40.314]      // while "1"  (timeout="50000")
[09:15:40.314]      // while-condition  =>  TRUE
[09:15:40.314]      // while "1"  (timeout="50000")
[09:15:40.315]      // while-condition  =>  TRUE
[09:15:40.315]      // while "1"  (timeout="50000")
[09:15:40.315]      // while-condition  =>  TRUE
[09:15:40.315]      // while "1"  (timeout="50000")
[09:15:40.316]      // while-condition  =>  TRUE
[09:15:40.316]      // while "1"  (timeout="50000")
[09:15:40.316]      // while-condition  =>  TRUE
[09:15:40.316]      // while "1"  (timeout="50000")
[09:15:40.317]      // while-condition  =>  TRUE
[09:15:40.317]      // while "1"  (timeout="50000")
[09:15:40.317]      // while-condition  =>  TRUE
[09:15:40.317]      // while "1"  (timeout="50000")
[09:15:40.318]      // while-condition  =>  TRUE
[09:15:40.318]      // while "1"  (timeout="50000")
[09:15:40.318]      // while-condition  =>  TRUE
[09:15:40.318]      // while "1"  (timeout="50000")
[09:15:40.318]      // while-condition  =>  TRUE
[09:15:40.319]      // while "1"  (timeout="50000")
[09:15:40.319]      // while-condition  =>  TRUE
[09:15:40.319]      // while "1"  (timeout="50000")
[09:15:40.319]      // while-condition  =>  TRUE
[09:15:40.320]      // while "1"  (timeout="50000")
[09:15:40.320]      // while-condition  =>  TRUE
[09:15:40.320]      // while "1"  (timeout="50000")
[09:15:40.320]      // while-condition  =>  TRUE
[09:15:40.320]      // while "1"  (timeout="50000")
[09:15:40.321]      // while-condition  =>  TRUE
[09:15:40.321]      // while "1"  (timeout="50000")
[09:15:40.321]      // while-condition  =>  TRUE
[09:15:40.321]      // while "1"  (timeout="50000")
[09:15:40.322]      // while-condition  =>  TRUE
[09:15:40.322]      // while "1"  (timeout="50000")
[09:15:40.322]      // while-condition  =>  TRUE
[09:15:40.322]      // while "1"  (timeout="50000")
[09:15:40.323]      // while-condition  =>  TRUE
[09:15:40.323]      // while "1"  (timeout="50000")
[09:15:40.323]      // while-condition  =>  TRUE
[09:15:40.323]      // while "1"  (timeout="50000")
[09:15:40.324]      // while-condition  =>  TRUE
[09:15:40.324]      // while "1"  (timeout="50000")
[09:15:40.324]      // while-condition  =>  TRUE
[09:15:40.324]      // while "1"  (timeout="50000")
[09:15:40.325]      // while-condition  =>  TRUE
[09:15:40.325]      // while "1"  (timeout="50000")
[09:15:40.325]      // while-condition  =>  TRUE
[09:15:40.325]      // while "1"  (timeout="50000")
[09:15:40.326]      // while-condition  =>  TRUE
[09:15:40.326]      // while "1"  (timeout="50000")
[09:15:40.326]      // while-condition  =>  TRUE
[09:15:40.326]      // while "1"  (timeout="50000")
[09:15:40.326]      // while-condition  =>  TRUE
[09:15:40.327]      // while "1"  (timeout="50000")
[09:15:40.327]      // while-condition  =>  TRUE
[09:15:40.327]      // while "1"  (timeout="50000")
[09:15:40.327]      // while-condition  =>  TRUE
[09:15:40.328]      // while "1"  (timeout="50000")
[09:15:40.328]      // while-condition  =>  TRUE
[09:15:40.328]      // while "1"  (timeout="50000")
[09:15:40.328]      // while-condition  =>  TRUE
[09:15:40.329]      // while "1"  (timeout="50000")
[09:15:40.329]      // while-condition  =>  TRUE
[09:15:40.329]      // while "1"  (timeout="50000")
[09:15:40.329]      // while-condition  =>  TRUE
[09:15:40.329]      // while "1"  (timeout="50000")
[09:15:40.330]      // while-condition  =>  TRUE
[09:15:40.330]      // while "1"  (timeout="50000")
[09:15:40.330]      // while  =>  TIMEOUT
[09:15:40.330]      // end while "1"
[09:15:40.331]    </control>
[09:15:40.331]    <block atomic="false" info="">
[09:15:40.331]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:15:40.333]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:15:40.333]    </block>
[09:15:40.334]    <control if="" while="1" timeout="10000" info="">
[09:15:40.334]      // while "1"  (timeout="10000")
[09:15:40.334]      // while-condition  =>  TRUE
[09:15:40.334]      // while "1"  (timeout="10000")
[09:15:40.335]      // while-condition  =>  TRUE
[09:15:40.335]      // while "1"  (timeout="10000")
[09:15:40.335]      // while-condition  =>  TRUE
[09:15:40.335]      // while "1"  (timeout="10000")
[09:15:40.336]      // while-condition  =>  TRUE
[09:15:40.336]      // while "1"  (timeout="10000")
[09:15:40.336]      // while-condition  =>  TRUE
[09:15:40.336]      // while "1"  (timeout="10000")
[09:15:40.336]      // while-condition  =>  TRUE
[09:15:40.337]      // while "1"  (timeout="10000")
[09:15:40.337]      // while-condition  =>  TRUE
[09:15:40.342]      // while "1"  (timeout="10000")
[09:15:40.342]      // while-condition  =>  TRUE
[09:15:40.342]      // while "1"  (timeout="10000")
[09:15:40.342]      // while-condition  =>  TRUE
[09:15:40.343]      // while "1"  (timeout="10000")
[09:15:40.343]      // while-condition  =>  TRUE
[09:15:40.343]      // while "1"  (timeout="10000")
[09:15:40.343]      // while-condition  =>  TRUE
[09:15:40.344]      // while "1"  (timeout="10000")
[09:15:40.344]      // while-condition  =>  TRUE
[09:15:40.344]      // while "1"  (timeout="10000")
[09:15:40.344]      // while-condition  =>  TRUE
[09:15:40.345]      // while "1"  (timeout="10000")
[09:15:40.345]      // while-condition  =>  TRUE
[09:15:40.345]      // while "1"  (timeout="10000")
[09:15:40.345]      // while-condition  =>  TRUE
[09:15:40.345]      // while "1"  (timeout="10000")
[09:15:40.346]      // while-condition  =>  TRUE
[09:15:40.346]      // while "1"  (timeout="10000")
[09:15:40.346]      // while  =>  TIMEOUT
[09:15:40.346]      // end while "1"
[09:15:40.347]    </control>
[09:15:40.347]    <block atomic="true" info="">
[09:15:40.351]  
[09:15:40.351]  ! W001 : No atomic sequence support in debug unit
[09:15:40.351]  
[09:15:40.354]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:15:40.356]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:15:40.356]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:15:40.358]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:15:40.358]    </block>
[09:15:40.359]    <block atomic="false" info="">
[09:15:40.359]      __errorcontrol = 0x00000001;
[09:15:40.359]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:15:40.359]      ReadDP(0x0);
[09:15:40.361]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:15:40.361]      __errorcontrol = 0x00000000;
[09:15:40.362]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:15:40.362]    </block>
[09:15:40.362]  </sequence>
[09:15:40.362]  
[09:15:40.368]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[09:15:40.368]  
[09:15:40.374]  <debugvars>
[09:15:40.374]    // Pre-defined
[09:15:40.374]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:15:40.375]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:15:40.375]    __dp=0x00000000
[09:15:40.375]    __ap=0x00000000
[09:15:40.376]    __traceout=0x00000000      (Trace Disabled)
[09:15:40.376]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:15:40.376]    __FlashAddr=0x00000000
[09:15:40.376]    __FlashLen=0x00000000
[09:15:40.376]    __FlashArg=0x00000000
[09:15:40.377]    __FlashOp=0x00000000
[09:15:40.377]    __Result=0x00000000
[09:15:40.377]  </debugvars>
[09:15:40.377]  
[09:15:40.378]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[09:15:40.378]    <block atomic="false" info="">
[09:15:40.378]    </block>
[09:15:40.378]  </sequence>
[09:15:40.379]  
[09:15:40.614]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[09:15:40.614]  
[09:15:40.614]  <debugvars>
[09:15:40.615]    // Pre-defined
[09:15:40.615]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:15:40.616]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:15:40.617]    __dp=0x00000000
[09:15:40.617]    __ap=0x00000000
[09:15:40.618]    __traceout=0x00000000      (Trace Disabled)
[09:15:40.619]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:15:40.620]    __FlashAddr=0x00000000
[09:15:40.620]    __FlashLen=0x00000000
[09:15:40.621]    __FlashArg=0x00000000
[09:15:40.622]    __FlashOp=0x00000000
[09:15:40.622]    __Result=0x00000000
[09:15:40.623]  </debugvars>
[09:15:40.623]  
[09:15:40.623]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[09:15:40.624]    <block atomic="false" info="">
[09:15:40.625]      Sequence("ResetHardware");
[09:15:40.625]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:15:40.625]          <block atomic="false" info="">
[09:15:40.625]            __var nReset      = 0x80;
[09:15:40.626]              // -> [nReset <= 0x00000080]
[09:15:40.626]            DAP_SWJ_Pins(0x00, nReset, 0);
[09:15:40.629]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:15:40.630]          </block>
[09:15:40.630]          <control if="" while="1" timeout="50000" info="">
[09:15:40.631]            // while "1"  (timeout="50000")
[09:15:40.631]            // while-condition  =>  TRUE
[09:15:40.632]            // while "1"  (timeout="50000")
[09:15:40.632]            // while-condition  =>  TRUE
[09:15:40.632]            // while "1"  (timeout="50000")
[09:15:40.633]            // while-condition  =>  TRUE
[09:15:40.633]            // while "1"  (timeout="50000")
[09:15:40.634]            // while-condition  =>  TRUE
[09:15:40.635]            // while "1"  (timeout="50000")
[09:15:40.635]            // while-condition  =>  TRUE
[09:15:40.635]            // while "1"  (timeout="50000")
[09:15:40.636]            // while-condition  =>  TRUE
[09:15:40.636]            // while "1"  (timeout="50000")
[09:15:40.637]            // while-condition  =>  TRUE
[09:15:40.637]            // while "1"  (timeout="50000")
[09:15:40.637]            // while-condition  =>  TRUE
[09:15:40.638]            // while "1"  (timeout="50000")
[09:15:40.638]            // while-condition  =>  TRUE
[09:15:40.638]            // while "1"  (timeout="50000")
[09:15:40.638]            // while-condition  =>  TRUE
[09:15:40.639]            // while "1"  (timeout="50000")
[09:15:40.639]            // while-condition  =>  TRUE
[09:15:40.639]            // while "1"  (timeout="50000")
[09:15:40.640]            // while-condition  =>  TRUE
[09:15:40.640]            // while "1"  (timeout="50000")
[09:15:40.640]            // while-condition  =>  TRUE
[09:15:40.641]            // while "1"  (timeout="50000")
[09:15:40.641]            // while-condition  =>  TRUE
[09:15:40.641]            // while "1"  (timeout="50000")
[09:15:40.642]            // while-condition  =>  TRUE
[09:15:40.642]            // while "1"  (timeout="50000")
[09:15:40.642]            // while-condition  =>  TRUE
[09:15:40.643]            // while "1"  (timeout="50000")
[09:15:40.643]            // while-condition  =>  TRUE
[09:15:40.643]            // while "1"  (timeout="50000")
[09:15:40.644]            // while-condition  =>  TRUE
[09:15:40.644]            // while "1"  (timeout="50000")
[09:15:40.644]            // while-condition  =>  TRUE
[09:15:40.644]            // while "1"  (timeout="50000")
[09:15:40.645]            // while-condition  =>  TRUE
[09:15:40.645]            // while "1"  (timeout="50000")
[09:15:40.645]            // while-condition  =>  TRUE
[09:15:40.645]            // while "1"  (timeout="50000")
[09:15:40.646]            // while-condition  =>  TRUE
[09:15:40.646]            // while "1"  (timeout="50000")
[09:15:40.646]            // while-condition  =>  TRUE
[09:15:40.646]            // while "1"  (timeout="50000")
[09:15:40.646]            // while-condition  =>  TRUE
[09:15:40.647]            // while "1"  (timeout="50000")
[09:15:40.647]            // while-condition  =>  TRUE
[09:15:40.647]            // while "1"  (timeout="50000")
[09:15:40.647]            // while-condition  =>  TRUE
[09:15:40.648]            // while "1"  (timeout="50000")
[09:15:40.648]            // while-condition  =>  TRUE
[09:15:40.648]            // while "1"  (timeout="50000")
[09:15:40.648]            // while-condition  =>  TRUE
[09:15:40.648]            // while "1"  (timeout="50000")
[09:15:40.649]            // while-condition  =>  TRUE
[09:15:40.649]            // while "1"  (timeout="50000")
[09:15:40.649]            // while-condition  =>  TRUE
[09:15:40.649]            // while "1"  (timeout="50000")
[09:15:40.649]            // while-condition  =>  TRUE
[09:15:40.650]            // while "1"  (timeout="50000")
[09:15:40.650]            // while-condition  =>  TRUE
[09:15:40.650]            // while "1"  (timeout="50000")
[09:15:40.650]            // while-condition  =>  TRUE
[09:15:40.651]            // while "1"  (timeout="50000")
[09:15:40.651]            // while-condition  =>  TRUE
[09:15:40.651]            // while "1"  (timeout="50000")
[09:15:40.651]            // while-condition  =>  TRUE
[09:15:40.651]            // while "1"  (timeout="50000")
[09:15:40.652]            // while-condition  =>  TRUE
[09:15:40.652]            // while "1"  (timeout="50000")
[09:15:40.652]            // while-condition  =>  TRUE
[09:15:40.652]            // while "1"  (timeout="50000")
[09:15:40.652]            // while-condition  =>  TRUE
[09:15:40.653]            // while "1"  (timeout="50000")
[09:15:40.653]            // while-condition  =>  TRUE
[09:15:40.653]            // while "1"  (timeout="50000")
[09:15:40.653]            // while-condition  =>  TRUE
[09:15:40.653]            // while "1"  (timeout="50000")
[09:15:40.654]            // while-condition  =>  TRUE
[09:15:40.654]            // while "1"  (timeout="50000")
[09:15:40.654]            // while-condition  =>  TRUE
[09:15:40.654]            // while "1"  (timeout="50000")
[09:15:40.654]            // while-condition  =>  TRUE
[09:15:40.655]            // while "1"  (timeout="50000")
[09:15:40.655]            // while-condition  =>  TRUE
[09:15:40.655]            // while "1"  (timeout="50000")
[09:15:40.655]            // while-condition  =>  TRUE
[09:15:40.655]            // while "1"  (timeout="50000")
[09:15:40.655]            // while-condition  =>  TRUE
[09:15:40.656]            // while "1"  (timeout="50000")
[09:15:40.656]            // while-condition  =>  TRUE
[09:15:40.656]            // while "1"  (timeout="50000")
[09:15:40.656]            // while-condition  =>  TRUE
[09:15:40.656]            // while "1"  (timeout="50000")
[09:15:40.657]            // while-condition  =>  TRUE
[09:15:40.657]            // while "1"  (timeout="50000")
[09:15:40.657]            // while-condition  =>  TRUE
[09:15:40.657]            // while "1"  (timeout="50000")
[09:15:40.657]            // while-condition  =>  TRUE
[09:15:40.658]            // while "1"  (timeout="50000")
[09:15:40.658]            // while-condition  =>  TRUE
[09:15:40.658]            // while "1"  (timeout="50000")
[09:15:40.658]            // while-condition  =>  TRUE
[09:15:40.658]            // while "1"  (timeout="50000")
[09:15:40.659]            // while-condition  =>  TRUE
[09:15:40.659]            // while "1"  (timeout="50000")
[09:15:40.659]            // while-condition  =>  TRUE
[09:15:40.659]            // while "1"  (timeout="50000")
[09:15:40.660]            // while-condition  =>  TRUE
[09:15:40.660]            // while "1"  (timeout="50000")
[09:15:40.660]            // while-condition  =>  TRUE
[09:15:40.660]            // while "1"  (timeout="50000")
[09:15:40.660]            // while-condition  =>  TRUE
[09:15:40.661]            // while "1"  (timeout="50000")
[09:15:40.661]            // while-condition  =>  TRUE
[09:15:40.661]            // while "1"  (timeout="50000")
[09:15:40.661]            // while-condition  =>  TRUE
[09:15:40.661]            // while "1"  (timeout="50000")
[09:15:40.662]            // while-condition  =>  TRUE
[09:15:40.662]            // while "1"  (timeout="50000")
[09:15:40.662]            // while-condition  =>  TRUE
[09:15:40.662]            // while "1"  (timeout="50000")
[09:15:40.662]            // while-condition  =>  TRUE
[09:15:40.663]            // while "1"  (timeout="50000")
[09:15:40.663]            // while-condition  =>  TRUE
[09:15:40.663]            // while "1"  (timeout="50000")
[09:15:40.663]            // while-condition  =>  TRUE
[09:15:40.663]            // while "1"  (timeout="50000")
[09:15:40.663]            // while-condition  =>  TRUE
[09:15:40.664]            // while "1"  (timeout="50000")
[09:15:40.664]            // while-condition  =>  TRUE
[09:15:40.664]            // while "1"  (timeout="50000")
[09:15:40.664]            // while-condition  =>  TRUE
[09:15:40.664]            // while "1"  (timeout="50000")
[09:15:40.664]            // while-condition  =>  TRUE
[09:15:40.665]            // while "1"  (timeout="50000")
[09:15:40.665]            // while-condition  =>  TRUE
[09:15:40.665]            // while "1"  (timeout="50000")
[09:15:40.665]            // while-condition  =>  TRUE
[09:15:40.665]            // while "1"  (timeout="50000")
[09:15:40.666]            // while-condition  =>  TRUE
[09:15:40.666]            // while "1"  (timeout="50000")
[09:15:40.666]            // while-condition  =>  TRUE
[09:15:40.666]            // while "1"  (timeout="50000")
[09:15:40.667]            // while-condition  =>  TRUE
[09:15:40.667]            // while "1"  (timeout="50000")
[09:15:40.667]            // while-condition  =>  TRUE
[09:15:40.667]            // while "1"  (timeout="50000")
[09:15:40.667]            // while-condition  =>  TRUE
[09:15:40.668]            // while "1"  (timeout="50000")
[09:15:40.668]            // while-condition  =>  TRUE
[09:15:40.668]            // while "1"  (timeout="50000")
[09:15:40.668]            // while-condition  =>  TRUE
[09:15:40.668]            // while "1"  (timeout="50000")
[09:15:40.669]            // while-condition  =>  TRUE
[09:15:40.669]            // while "1"  (timeout="50000")
[09:15:40.669]            // while-condition  =>  TRUE
[09:15:40.669]            // while "1"  (timeout="50000")
[09:15:40.669]            // while-condition  =>  TRUE
[09:15:40.670]            // while "1"  (timeout="50000")
[09:15:40.670]            // while-condition  =>  TRUE
[09:15:40.670]            // while "1"  (timeout="50000")
[09:15:40.670]            // while-condition  =>  TRUE
[09:15:40.670]            // while "1"  (timeout="50000")
[09:15:40.671]            // while-condition  =>  TRUE
[09:15:40.671]            // while "1"  (timeout="50000")
[09:15:40.671]            // while-condition  =>  TRUE
[09:15:40.671]            // while "1"  (timeout="50000")
[09:15:40.671]            // while-condition  =>  TRUE
[09:15:40.671]            // while "1"  (timeout="50000")
[09:15:40.671]            // while-condition  =>  TRUE
[09:15:40.671]            // while "1"  (timeout="50000")
[09:15:40.671]            // while-condition  =>  TRUE
[09:15:40.671]            // while "1"  (timeout="50000")
[09:15:40.672]            // while-condition  =>  TRUE
[09:15:40.672]            // while "1"  (timeout="50000")
[09:15:40.672]            // while-condition  =>  TRUE
[09:15:40.672]            // while "1"  (timeout="50000")
[09:15:40.672]            // while-condition  =>  TRUE
[09:15:40.673]            // while "1"  (timeout="50000")
[09:15:40.673]            // while-condition  =>  TRUE
[09:15:40.673]            // while "1"  (timeout="50000")
[09:15:40.673]            // while-condition  =>  TRUE
[09:15:40.673]            // while "1"  (timeout="50000")
[09:15:40.675]            // while-condition  =>  TRUE
[09:15:40.675]            // while "1"  (timeout="50000")
[09:15:40.675]            // while-condition  =>  TRUE
[09:15:40.675]            // while "1"  (timeout="50000")
[09:15:40.675]            // while-condition  =>  TRUE
[09:15:40.676]            // while "1"  (timeout="50000")
[09:15:40.676]            // while-condition  =>  TRUE
[09:15:40.676]            // while "1"  (timeout="50000")
[09:15:40.676]            // while-condition  =>  TRUE
[09:15:40.676]            // while "1"  (timeout="50000")
[09:15:40.677]            // while-condition  =>  TRUE
[09:15:40.677]            // while "1"  (timeout="50000")
[09:15:40.677]            // while-condition  =>  TRUE
[09:15:40.677]            // while "1"  (timeout="50000")
[09:15:40.677]            // while-condition  =>  TRUE
[09:15:40.677]            // while "1"  (timeout="50000")
[09:15:40.678]            // while-condition  =>  TRUE
[09:15:40.678]            // while "1"  (timeout="50000")
[09:15:40.678]            // while-condition  =>  TRUE
[09:15:40.678]            // while "1"  (timeout="50000")
[09:15:40.678]            // while-condition  =>  TRUE
[09:15:40.679]            // while "1"  (timeout="50000")
[09:15:40.679]            // while-condition  =>  TRUE
[09:15:40.679]            // while "1"  (timeout="50000")
[09:15:40.679]            // while-condition  =>  TRUE
[09:15:40.679]            // while "1"  (timeout="50000")
[09:15:40.680]            // while-condition  =>  TRUE
[09:15:40.680]            // while "1"  (timeout="50000")
[09:15:40.680]            // while-condition  =>  TRUE
[09:15:40.680]            // while "1"  (timeout="50000")
[09:15:40.680]            // while-condition  =>  TRUE
[09:15:40.680]            // while "1"  (timeout="50000")
[09:15:40.681]            // while-condition  =>  TRUE
[09:15:40.681]            // while "1"  (timeout="50000")
[09:15:40.681]            // while-condition  =>  TRUE
[09:15:40.681]            // while "1"  (timeout="50000")
[09:15:40.681]            // while-condition  =>  TRUE
[09:15:40.682]            // while "1"  (timeout="50000")
[09:15:40.682]            // while-condition  =>  TRUE
[09:15:40.682]            // while "1"  (timeout="50000")
[09:15:40.683]            // while-condition  =>  TRUE
[09:15:40.683]            // while "1"  (timeout="50000")
[09:15:40.683]            // while-condition  =>  TRUE
[09:15:40.683]            // while "1"  (timeout="50000")
[09:15:40.683]            // while-condition  =>  TRUE
[09:15:40.684]            // while "1"  (timeout="50000")
[09:15:40.684]            // while-condition  =>  TRUE
[09:15:40.684]            // while "1"  (timeout="50000")
[09:15:40.684]            // while-condition  =>  TRUE
[09:15:40.684]            // while "1"  (timeout="50000")
[09:15:40.685]            // while-condition  =>  TRUE
[09:15:40.685]            // while "1"  (timeout="50000")
[09:15:40.685]            // while-condition  =>  TRUE
[09:15:40.685]            // while "1"  (timeout="50000")
[09:15:40.685]            // while-condition  =>  TRUE
[09:15:40.686]            // while "1"  (timeout="50000")
[09:15:40.686]            // while-condition  =>  TRUE
[09:15:40.686]            // while "1"  (timeout="50000")
[09:15:40.686]            // while-condition  =>  TRUE
[09:15:40.686]            // while "1"  (timeout="50000")
[09:15:40.686]            // while-condition  =>  TRUE
[09:15:40.686]            // while "1"  (timeout="50000")
[09:15:40.686]            // while-condition  =>  TRUE
[09:15:40.686]            // while "1"  (timeout="50000")
[09:15:40.686]            // while-condition  =>  TRUE
[09:15:40.687]            // while "1"  (timeout="50000")
[09:15:40.687]            // while-condition  =>  TRUE
[09:15:40.687]            // while "1"  (timeout="50000")
[09:15:40.687]            // while-condition  =>  TRUE
[09:15:40.687]            // while "1"  (timeout="50000")
[09:15:40.688]            // while-condition  =>  TRUE
[09:15:40.688]            // while "1"  (timeout="50000")
[09:15:40.688]            // while-condition  =>  TRUE
[09:15:40.688]            // while "1"  (timeout="50000")
[09:15:40.688]            // while-condition  =>  TRUE
[09:15:40.689]            // while "1"  (timeout="50000")
[09:15:40.689]            // while  =>  TIMEOUT
[09:15:40.689]            // end while "1"
[09:15:40.689]          </control>
[09:15:40.690]          <block atomic="false" info="">
[09:15:40.690]            DAP_SWJ_Pins(nReset, nReset, 0);
[09:15:40.693]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:15:40.693]          </block>
[09:15:40.694]          <control if="" while="1" timeout="10000" info="">
[09:15:40.694]            // while "1"  (timeout="10000")
[09:15:40.694]            // while-condition  =>  TRUE
[09:15:40.694]            // while "1"  (timeout="10000")
[09:15:40.695]            // while-condition  =>  TRUE
[09:15:40.695]            // while "1"  (timeout="10000")
[09:15:40.695]            // while-condition  =>  TRUE
[09:15:40.695]            // while "1"  (timeout="10000")
[09:15:40.696]            // while-condition  =>  TRUE
[09:15:40.696]            // while "1"  (timeout="10000")
[09:15:40.696]            // while-condition  =>  TRUE
[09:15:40.696]            // while "1"  (timeout="10000")
[09:15:40.696]            // while-condition  =>  TRUE
[09:15:40.697]            // while "1"  (timeout="10000")
[09:15:40.697]            // while-condition  =>  TRUE
[09:15:40.697]            // while "1"  (timeout="10000")
[09:15:40.697]            // while-condition  =>  TRUE
[09:15:40.698]            // while "1"  (timeout="10000")
[09:15:40.698]            // while-condition  =>  TRUE
[09:15:40.698]            // while "1"  (timeout="10000")
[09:15:40.698]            // while-condition  =>  TRUE
[09:15:40.698]            // while "1"  (timeout="10000")
[09:15:40.698]            // while-condition  =>  TRUE
[09:15:40.700]            // while "1"  (timeout="10000")
[09:15:40.700]            // while-condition  =>  TRUE
[09:15:40.700]            // while "1"  (timeout="10000")
[09:15:40.700]            // while-condition  =>  TRUE
[09:15:40.702]            // while "1"  (timeout="10000")
[09:15:40.702]            // while-condition  =>  TRUE
[09:15:40.702]            // while "1"  (timeout="10000")
[09:15:40.702]            // while-condition  =>  TRUE
[09:15:40.703]            // while "1"  (timeout="10000")
[09:15:40.703]            // while-condition  =>  TRUE
[09:15:40.703]            // while "1"  (timeout="10000")
[09:15:40.703]            // while-condition  =>  TRUE
[09:15:40.704]            // while "1"  (timeout="10000")
[09:15:40.704]            // while-condition  =>  TRUE
[09:15:40.704]            // while "1"  (timeout="10000")
[09:15:40.704]            // while-condition  =>  TRUE
[09:15:40.705]            // while "1"  (timeout="10000")
[09:15:40.705]            // while  =>  TIMEOUT
[09:15:40.705]            // end while "1"
[09:15:40.705]          </control>
[09:15:40.706]          <block atomic="true" info="">
[09:15:40.708]  
[09:15:40.708]  ! W001 : No atomic sequence support in debug unit
[09:15:40.709]  
[09:15:40.710]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:15:40.712]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:15:40.713]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:15:40.715]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:15:40.715]          </block>
[09:15:40.716]          <block atomic="false" info="">
[09:15:40.717]            __errorcontrol = 0x00000001;
[09:15:40.718]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:15:40.719]            ReadDP(0x0);
[09:15:40.722]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:15:40.723]            __errorcontrol = 0x00000000;
[09:15:40.723]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:15:40.723]          </block>
[09:15:40.724]        </sequence>
[09:15:40.724]      Sequence("DebugPortSetup");
[09:15:40.726]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:15:40.726]        </sequence>
[09:15:40.726]      Sequence("DebugPortStart");
[09:15:40.727]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:15:40.727]          <block atomic="false" info="">
[09:15:40.727]            __var SW_DP_ABORT  = 0x0;
[09:15:40.728]              // -> [SW_DP_ABORT <= 0x00000000]
[09:15:40.729]            __var DP_CTRL_STAT = 0x4;
[09:15:40.729]              // -> [DP_CTRL_STAT <= 0x00000004]
[09:15:40.729]            __var DP_SELECT    = 0x8;
[09:15:40.730]              // -> [DP_SELECT <= 0x00000008]
[09:15:40.730]            __var powered_down = 0;
[09:15:40.730]              // -> [powered_down <= 0x00000000]
[09:15:40.731]            WriteDP(DP_SELECT, 0x00000000);
[09:15:40.732]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:15:40.733]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:15:40.735]              // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:15:40.736]              // -> [powered_down <= 0x00000000]
[09:15:40.737]          </block>
[09:15:40.737]          <control if="powered_down" while="" timeout="0" info="">
[09:15:40.738]            // if-block "powered_down"
[09:15:40.738]              // =>  FALSE
[09:15:40.738]            // skip if-block "powered_down"
[09:15:40.739]          </control>
[09:15:40.739]        </sequence>
[09:15:40.739]      Sequence("DebugCoreStart");
[09:15:40.740]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:15:40.740]          <block atomic="true" info="">
[09:15:40.744]  
[09:15:40.744]  ! W001 : No atomic sequence support in debug unit
[09:15:40.744]  
[09:15:40.747]            __var DP_R_IDCODE    = 0x0;
[09:15:40.750]              // -> [DP_R_IDCODE <= 0x00000000]
[09:15:40.750]            __var DP_W_ABORT    = 0x0;
[09:15:40.751]              // -> [DP_W_ABORT <= 0x00000000]
[09:15:40.751]            __var DP_CTRLSTAT = 0x4;
[09:15:40.752]              // -> [DP_CTRLSTAT <= 0x00000004]
[09:15:40.752]            __var DP_W_SELECT    = 0x8;
[09:15:40.752]              // -> [DP_W_SELECT <= 0x00000008]
[09:15:40.752]            __var AP_TAR		= 0x4;
[09:15:40.753]              // -> [AP_TAR <= 0x00000004]
[09:15:40.753]            __var AP_BD0		= 0x0;
[09:15:40.754]              // -> [AP_BD0 <= 0x00000000]
[09:15:40.754]            __var AP_BD1		= 0x4;
[09:15:40.755]              // -> [AP_BD1 <= 0x00000004]
[09:15:40.755]            __var AP_BD2		= 0x8;
[09:15:40.755]              // -> [AP_BD2 <= 0x00000008]
[09:15:40.756]            __var PCWithinFlash = 0;
[09:15:40.756]              // -> [PCWithinFlash <= 0x00000000]
[09:15:40.756]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:15:40.762]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.763]          </block>
[09:15:40.763]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:15:40.763]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:15:40.769]              // -> [Read32(0xE000EDF0) => 0x00030003]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.770]            // while-condition  =>  FALSE
[09:15:40.770]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:15:40.770]          </control>
[09:15:40.771]          <block atomic="true" info="">
[09:15:40.773]  
[09:15:40.773]  ! W001 : No atomic sequence support in debug unit
[09:15:40.773]  
[09:15:40.776]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:15:40.778]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:15:40.779]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:15:40.781]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.782]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:15:40.784]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:15:40.784]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:15:40.788]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.790]          </block>
[09:15:40.790]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:15:40.791]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.794]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.795]            // while-condition  =>  TRUE
[09:15:40.795]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.798]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.798]            // while-condition  =>  TRUE
[09:15:40.799]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.801]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.802]            // while-condition  =>  TRUE
[09:15:40.803]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.805]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.805]            // while-condition  =>  TRUE
[09:15:40.806]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.809]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.810]            // while-condition  =>  TRUE
[09:15:40.810]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.812]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.813]            // while-condition  =>  TRUE
[09:15:40.813]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.816]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.816]            // while-condition  =>  TRUE
[09:15:40.816]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.818]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.820]            // while-condition  =>  TRUE
[09:15:40.820]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.822]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.823]            // while-condition  =>  TRUE
[09:15:40.823]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.826]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.827]            // while-condition  =>  TRUE
[09:15:40.827]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.829]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.830]            // while-condition  =>  TRUE
[09:15:40.830]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.832]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.833]            // while-condition  =>  TRUE
[09:15:40.833]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.835]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.836]            // while-condition  =>  TRUE
[09:15:40.836]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.838]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.839]            // while-condition  =>  TRUE
[09:15:40.839]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.841]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.842]            // while-condition  =>  TRUE
[09:15:40.842]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.844]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.845]            // while-condition  =>  TRUE
[09:15:40.845]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.847]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.848]            // while-condition  =>  TRUE
[09:15:40.849]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.851]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.851]            // while-condition  =>  TRUE
[09:15:40.851]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.853]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.854]            // while-condition  =>  TRUE
[09:15:40.854]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.857]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.858]            // while-condition  =>  TRUE
[09:15:40.858]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.860]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.861]            // while-condition  =>  TRUE
[09:15:40.861]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.864]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.865]            // while-condition  =>  TRUE
[09:15:40.866]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.868]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.868]            // while-condition  =>  TRUE
[09:15:40.869]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.872]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.872]            // while-condition  =>  TRUE
[09:15:40.874]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.876]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.877]            // while-condition  =>  TRUE
[09:15:40.877]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.880]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.881]            // while-condition  =>  TRUE
[09:15:40.881]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.884]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.885]            // while-condition  =>  TRUE
[09:15:40.886]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.888]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.888]            // while-condition  =>  TRUE
[09:15:40.889]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.892]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.893]            // while-condition  =>  TRUE
[09:15:40.894]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:15:40.894]            // while  =>  TIMEOUT
[09:15:40.895]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:15:40.895]          </control>
[09:15:40.896]          <block atomic="false" info="">
[09:15:40.897]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:15:40.899]              // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:15:40.899]              // -> [PCWithinFlash <= 0x00000000]
[09:15:40.900]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:15:40.903]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:15:40.904]          </block>
[09:15:40.904]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:15:40.905]            // if-block "PCWithinFlash == 0"
[09:15:40.905]              // =>  TRUE
[09:15:40.906]            // end if-block "PCWithinFlash == 0"
[09:15:40.907]          </control>
[09:15:40.907]        </sequence>
[09:15:40.908]    </block>
[09:15:40.908]  </sequence>
[09:15:40.909]  
[09:15:51.848]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[09:15:51.848]  
[09:15:51.849]  <debugvars>
[09:15:51.850]    // Pre-defined
[09:15:51.850]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:15:51.850]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:15:51.851]    __dp=0x00000000
[09:15:51.851]    __ap=0x00000000
[09:15:51.853]    __traceout=0x00000000      (Trace Disabled)
[09:15:51.853]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:15:51.854]    __FlashAddr=0x00000000
[09:15:51.854]    __FlashLen=0x00000000
[09:15:51.855]    __FlashArg=0x00000000
[09:15:51.855]    __FlashOp=0x00000000
[09:15:51.856]    __Result=0x00000000
[09:15:51.856]  </debugvars>
[09:15:51.857]  
[09:15:51.857]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[09:15:51.857]    <block atomic="false" info="">
[09:15:51.858]      __var nReset      = 0x80;
[09:15:51.858]        // -> [nReset <= 0x00000080]
[09:15:51.859]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:15:51.861]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:15:51.862]    </block>
[09:15:51.863]    <control if="" while="1" timeout="50000" info="">
[09:15:51.863]      // while "1"  (timeout="50000")
[09:15:51.864]      // while-condition  =>  TRUE
[09:15:51.865]      // while "1"  (timeout="50000")
[09:15:51.865]      // while-condition  =>  TRUE
[09:15:51.866]      // while "1"  (timeout="50000")
[09:15:51.866]      // while-condition  =>  TRUE
[09:15:51.867]      // while "1"  (timeout="50000")
[09:15:51.867]      // while-condition  =>  TRUE
[09:15:51.868]      // while "1"  (timeout="50000")
[09:15:51.868]      // while-condition  =>  TRUE
[09:15:51.869]      // while "1"  (timeout="50000")
[09:15:51.869]      // while-condition  =>  TRUE
[09:15:51.870]      // while "1"  (timeout="50000")
[09:15:51.870]      // while-condition  =>  TRUE
[09:15:51.871]      // while "1"  (timeout="50000")
[09:15:51.871]      // while-condition  =>  TRUE
[09:15:51.871]      // while "1"  (timeout="50000")
[09:15:51.871]      // while-condition  =>  TRUE
[09:15:51.871]      // while "1"  (timeout="50000")
[09:15:51.872]      // while-condition  =>  TRUE
[09:15:51.872]      // while "1"  (timeout="50000")
[09:15:51.872]      // while-condition  =>  TRUE
[09:15:51.873]      // while "1"  (timeout="50000")
[09:15:51.874]      // while-condition  =>  TRUE
[09:15:51.874]      // while "1"  (timeout="50000")
[09:15:51.874]      // while-condition  =>  TRUE
[09:15:51.875]      // while "1"  (timeout="50000")
[09:15:51.875]      // while-condition  =>  TRUE
[09:15:51.875]      // while "1"  (timeout="50000")
[09:15:51.875]      // while-condition  =>  TRUE
[09:15:51.876]      // while "1"  (timeout="50000")
[09:15:51.876]      // while-condition  =>  TRUE
[09:15:51.876]      // while "1"  (timeout="50000")
[09:15:51.876]      // while-condition  =>  TRUE
[09:15:51.876]      // while "1"  (timeout="50000")
[09:15:51.876]      // while-condition  =>  TRUE
[09:15:51.876]      // while "1"  (timeout="50000")
[09:15:51.878]      // while-condition  =>  TRUE
[09:15:51.878]      // while "1"  (timeout="50000")
[09:15:51.878]      // while-condition  =>  TRUE
[09:15:51.878]      // while "1"  (timeout="50000")
[09:15:51.879]      // while-condition  =>  TRUE
[09:15:51.879]      // while "1"  (timeout="50000")
[09:15:51.879]      // while-condition  =>  TRUE
[09:15:51.879]      // while "1"  (timeout="50000")
[09:15:51.880]      // while-condition  =>  TRUE
[09:15:51.880]      // while "1"  (timeout="50000")
[09:15:51.880]      // while-condition  =>  TRUE
[09:15:51.880]      // while "1"  (timeout="50000")
[09:15:51.881]      // while-condition  =>  TRUE
[09:15:51.881]      // while "1"  (timeout="50000")
[09:15:51.881]      // while-condition  =>  TRUE
[09:15:51.881]      // while "1"  (timeout="50000")
[09:15:51.881]      // while-condition  =>  TRUE
[09:15:51.881]      // while "1"  (timeout="50000")
[09:15:51.881]      // while-condition  =>  TRUE
[09:15:51.881]      // while "1"  (timeout="50000")
[09:15:51.882]      // while-condition  =>  TRUE
[09:15:51.883]      // while "1"  (timeout="50000")
[09:15:51.883]      // while-condition  =>  TRUE
[09:15:51.883]      // while "1"  (timeout="50000")
[09:15:51.883]      // while-condition  =>  TRUE
[09:15:51.884]      // while "1"  (timeout="50000")
[09:15:51.884]      // while-condition  =>  TRUE
[09:15:51.884]      // while "1"  (timeout="50000")
[09:15:51.884]      // while-condition  =>  TRUE
[09:15:51.884]      // while "1"  (timeout="50000")
[09:15:51.884]      // while-condition  =>  TRUE
[09:15:51.884]      // while "1"  (timeout="50000")
[09:15:51.884]      // while-condition  =>  TRUE
[09:15:51.884]      // while "1"  (timeout="50000")
[09:15:51.884]      // while-condition  =>  TRUE
[09:15:51.885]      // while "1"  (timeout="50000")
[09:15:51.885]      // while-condition  =>  TRUE
[09:15:51.885]      // while "1"  (timeout="50000")
[09:15:51.885]      // while-condition  =>  TRUE
[09:15:51.885]      // while "1"  (timeout="50000")
[09:15:51.886]      // while-condition  =>  TRUE
[09:15:51.887]      // while "1"  (timeout="50000")
[09:15:51.887]      // while-condition  =>  TRUE
[09:15:51.887]      // while "1"  (timeout="50000")
[09:15:51.887]      // while-condition  =>  TRUE
[09:15:51.887]      // while "1"  (timeout="50000")
[09:15:51.888]      // while-condition  =>  TRUE
[09:15:51.888]      // while "1"  (timeout="50000")
[09:15:51.888]      // while-condition  =>  TRUE
[09:15:51.888]      // while "1"  (timeout="50000")
[09:15:51.888]      // while-condition  =>  TRUE
[09:15:51.889]      // while "1"  (timeout="50000")
[09:15:51.889]      // while-condition  =>  TRUE
[09:15:51.889]      // while "1"  (timeout="50000")
[09:15:51.889]      // while-condition  =>  TRUE
[09:15:51.889]      // while "1"  (timeout="50000")
[09:15:51.890]      // while-condition  =>  TRUE
[09:15:51.890]      // while "1"  (timeout="50000")
[09:15:51.890]      // while-condition  =>  TRUE
[09:15:51.890]      // while "1"  (timeout="50000")
[09:15:51.890]      // while-condition  =>  TRUE
[09:15:51.891]      // while "1"  (timeout="50000")
[09:15:51.891]      // while-condition  =>  TRUE
[09:15:51.891]      // while "1"  (timeout="50000")
[09:15:51.891]      // while-condition  =>  TRUE
[09:15:51.891]      // while "1"  (timeout="50000")
[09:15:51.891]      // while-condition  =>  TRUE
[09:15:51.891]      // while "1"  (timeout="50000")
[09:15:51.891]      // while-condition  =>  TRUE
[09:15:51.891]      // while "1"  (timeout="50000")
[09:15:51.891]      // while-condition  =>  TRUE
[09:15:51.892]      // while "1"  (timeout="50000")
[09:15:51.892]      // while-condition  =>  TRUE
[09:15:51.892]      // while "1"  (timeout="50000")
[09:15:51.892]      // while-condition  =>  TRUE
[09:15:51.892]      // while "1"  (timeout="50000")
[09:15:51.893]      // while-condition  =>  TRUE
[09:15:51.894]      // while "1"  (timeout="50000")
[09:15:51.894]      // while-condition  =>  TRUE
[09:15:51.894]      // while "1"  (timeout="50000")
[09:15:51.894]      // while-condition  =>  TRUE
[09:15:51.894]      // while "1"  (timeout="50000")
[09:15:51.895]      // while-condition  =>  TRUE
[09:15:51.895]      // while "1"  (timeout="50000")
[09:15:51.895]      // while-condition  =>  TRUE
[09:15:51.895]      // while "1"  (timeout="50000")
[09:15:51.895]      // while-condition  =>  TRUE
[09:15:51.896]      // while "1"  (timeout="50000")
[09:15:51.896]      // while-condition  =>  TRUE
[09:15:51.896]      // while "1"  (timeout="50000")
[09:15:51.896]      // while-condition  =>  TRUE
[09:15:51.896]      // while "1"  (timeout="50000")
[09:15:51.897]      // while-condition  =>  TRUE
[09:15:51.897]      // while "1"  (timeout="50000")
[09:15:51.897]      // while-condition  =>  TRUE
[09:15:51.897]      // while "1"  (timeout="50000")
[09:15:51.898]      // while-condition  =>  TRUE
[09:15:51.898]      // while "1"  (timeout="50000")
[09:15:51.898]      // while-condition  =>  TRUE
[09:15:51.899]      // while "1"  (timeout="50000")
[09:15:51.899]      // while-condition  =>  TRUE
[09:15:51.899]      // while "1"  (timeout="50000")
[09:15:51.899]      // while-condition  =>  TRUE
[09:15:51.899]      // while "1"  (timeout="50000")
[09:15:51.900]      // while-condition  =>  TRUE
[09:15:51.900]      // while "1"  (timeout="50000")
[09:15:51.900]      // while-condition  =>  TRUE
[09:15:51.900]      // while "1"  (timeout="50000")
[09:15:51.900]      // while-condition  =>  TRUE
[09:15:51.901]      // while "1"  (timeout="50000")
[09:15:51.901]      // while-condition  =>  TRUE
[09:15:51.901]      // while "1"  (timeout="50000")
[09:15:51.901]      // while-condition  =>  TRUE
[09:15:51.901]      // while "1"  (timeout="50000")
[09:15:51.901]      // while-condition  =>  TRUE
[09:15:51.901]      // while "1"  (timeout="50000")
[09:15:51.901]      // while-condition  =>  TRUE
[09:15:51.901]      // while "1"  (timeout="50000")
[09:15:51.901]      // while-condition  =>  TRUE
[09:15:51.902]      // while "1"  (timeout="50000")
[09:15:51.902]      // while-condition  =>  TRUE
[09:15:51.902]      // while "1"  (timeout="50000")
[09:15:51.902]      // while-condition  =>  TRUE
[09:15:51.902]      // while "1"  (timeout="50000")
[09:15:51.903]      // while-condition  =>  TRUE
[09:15:51.903]      // while "1"  (timeout="50000")
[09:15:51.903]      // while-condition  =>  TRUE
[09:15:51.903]      // while "1"  (timeout="50000")
[09:15:51.903]      // while-condition  =>  TRUE
[09:15:51.904]      // while "1"  (timeout="50000")
[09:15:51.904]      // while-condition  =>  TRUE
[09:15:51.904]      // while "1"  (timeout="50000")
[09:15:51.904]      // while-condition  =>  TRUE
[09:15:51.904]      // while "1"  (timeout="50000")
[09:15:51.904]      // while-condition  =>  TRUE
[09:15:51.905]      // while "1"  (timeout="50000")
[09:15:51.905]      // while-condition  =>  TRUE
[09:15:51.905]      // while "1"  (timeout="50000")
[09:15:51.905]      // while-condition  =>  TRUE
[09:15:51.905]      // while "1"  (timeout="50000")
[09:15:51.906]      // while-condition  =>  TRUE
[09:15:51.907]      // while "1"  (timeout="50000")
[09:15:51.907]      // while-condition  =>  TRUE
[09:15:51.907]      // while "1"  (timeout="50000")
[09:15:51.907]      // while-condition  =>  TRUE
[09:15:51.907]      // while "1"  (timeout="50000")
[09:15:51.908]      // while-condition  =>  TRUE
[09:15:51.908]      // while "1"  (timeout="50000")
[09:15:51.908]      // while-condition  =>  TRUE
[09:15:51.908]      // while "1"  (timeout="50000")
[09:15:51.908]      // while-condition  =>  TRUE
[09:15:51.909]      // while "1"  (timeout="50000")
[09:15:51.909]      // while-condition  =>  TRUE
[09:15:51.909]      // while "1"  (timeout="50000")
[09:15:51.909]      // while-condition  =>  TRUE
[09:15:51.909]      // while "1"  (timeout="50000")
[09:15:51.910]      // while-condition  =>  TRUE
[09:15:51.910]      // while "1"  (timeout="50000")
[09:15:51.910]      // while-condition  =>  TRUE
[09:15:51.910]      // while "1"  (timeout="50000")
[09:15:51.910]      // while-condition  =>  TRUE
[09:15:51.911]      // while "1"  (timeout="50000")
[09:15:51.911]      // while-condition  =>  TRUE
[09:15:51.911]      // while "1"  (timeout="50000")
[09:15:51.911]      // while-condition  =>  TRUE
[09:15:51.911]      // while "1"  (timeout="50000")
[09:15:51.912]      // while-condition  =>  TRUE
[09:15:51.912]      // while "1"  (timeout="50000")
[09:15:51.912]      // while-condition  =>  TRUE
[09:15:51.912]      // while "1"  (timeout="50000")
[09:15:51.912]      // while-condition  =>  TRUE
[09:15:51.912]      // while "1"  (timeout="50000")
[09:15:51.913]      // while-condition  =>  TRUE
[09:15:51.913]      // while "1"  (timeout="50000")
[09:15:51.913]      // while-condition  =>  TRUE
[09:15:51.913]      // while "1"  (timeout="50000")
[09:15:51.913]      // while-condition  =>  TRUE
[09:15:51.913]      // while "1"  (timeout="50000")
[09:15:51.913]      // while-condition  =>  TRUE
[09:15:51.913]      // while "1"  (timeout="50000")
[09:15:51.913]      // while-condition  =>  TRUE
[09:15:51.913]      // while "1"  (timeout="50000")
[09:15:51.915]      // while-condition  =>  TRUE
[09:15:51.915]      // while "1"  (timeout="50000")
[09:15:51.915]      // while-condition  =>  TRUE
[09:15:51.915]      // while "1"  (timeout="50000")
[09:15:51.915]      // while-condition  =>  TRUE
[09:15:51.915]      // while "1"  (timeout="50000")
[09:15:51.916]      // while-condition  =>  TRUE
[09:15:51.916]      // while "1"  (timeout="50000")
[09:15:51.916]      // while-condition  =>  TRUE
[09:15:51.916]      // while "1"  (timeout="50000")
[09:15:51.917]      // while-condition  =>  TRUE
[09:15:51.917]      // while "1"  (timeout="50000")
[09:15:51.917]      // while-condition  =>  TRUE
[09:15:51.917]      // while "1"  (timeout="50000")
[09:15:51.917]      // while-condition  =>  TRUE
[09:15:51.918]      // while "1"  (timeout="50000")
[09:15:51.918]      // while-condition  =>  TRUE
[09:15:51.918]      // while "1"  (timeout="50000")
[09:15:51.918]      // while-condition  =>  TRUE
[09:15:51.918]      // while "1"  (timeout="50000")
[09:15:51.919]      // while-condition  =>  TRUE
[09:15:51.919]      // while "1"  (timeout="50000")
[09:15:51.919]      // while-condition  =>  TRUE
[09:15:51.919]      // while "1"  (timeout="50000")
[09:15:51.919]      // while-condition  =>  TRUE
[09:15:51.920]      // while "1"  (timeout="50000")
[09:15:51.920]      // while-condition  =>  TRUE
[09:15:51.920]      // while "1"  (timeout="50000")
[09:15:51.920]      // while-condition  =>  TRUE
[09:15:51.920]      // while "1"  (timeout="50000")
[09:15:51.921]      // while-condition  =>  TRUE
[09:15:51.921]      // while "1"  (timeout="50000")
[09:15:51.921]      // while-condition  =>  TRUE
[09:15:51.921]      // while "1"  (timeout="50000")
[09:15:51.922]      // while-condition  =>  TRUE
[09:15:51.922]      // while "1"  (timeout="50000")
[09:15:51.922]      // while-condition  =>  TRUE
[09:15:51.922]      // while "1"  (timeout="50000")
[09:15:51.922]      // while-condition  =>  TRUE
[09:15:51.923]      // while "1"  (timeout="50000")
[09:15:51.923]      // while-condition  =>  TRUE
[09:15:51.923]      // while "1"  (timeout="50000")
[09:15:51.923]      // while-condition  =>  TRUE
[09:15:51.924]      // while "1"  (timeout="50000")
[09:15:51.924]      // while  =>  TIMEOUT
[09:15:51.924]      // end while "1"
[09:15:51.924]    </control>
[09:15:51.925]    <block atomic="false" info="">
[09:15:51.925]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:15:51.927]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:15:51.927]    </block>
[09:15:51.927]  </sequence>
[09:15:51.927]  
[09:16:28.936]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:16:28.936]  
[09:16:28.937]  <debugvars>
[09:16:28.937]    // Pre-defined
[09:16:28.937]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:16:28.938]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:16:28.938]    __dp=0x00000000
[09:16:28.938]    __ap=0x00000000
[09:16:28.938]    __traceout=0x00000000      (Trace Disabled)
[09:16:28.939]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:16:28.939]    __FlashAddr=0x00000000
[09:16:28.939]    __FlashLen=0x00000000
[09:16:28.939]    __FlashArg=0x00000000
[09:16:28.940]    __FlashOp=0x00000000
[09:16:28.940]    __Result=0x00000000
[09:16:28.940]  </debugvars>
[09:16:28.940]  
[09:16:28.940]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:16:28.941]    <block atomic="false" info="">
[09:16:28.941]      __var nReset      = 0x80;
[09:16:28.941]        // -> [nReset <= 0x00000080]
[09:16:28.941]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:16:28.943]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:16:28.944]    </block>
[09:16:28.944]    <control if="" while="1" timeout="50000" info="">
[09:16:28.944]      // while "1"  (timeout="50000")
[09:16:28.945]      // while-condition  =>  TRUE
[09:16:28.945]      // while "1"  (timeout="50000")
[09:16:28.945]      // while-condition  =>  TRUE
[09:16:28.946]      // while "1"  (timeout="50000")
[09:16:28.946]      // while-condition  =>  TRUE
[09:16:28.946]      // while "1"  (timeout="50000")
[09:16:28.946]      // while-condition  =>  TRUE
[09:16:28.947]      // while "1"  (timeout="50000")
[09:16:28.947]      // while-condition  =>  TRUE
[09:16:28.947]      // while "1"  (timeout="50000")
[09:16:28.947]      // while-condition  =>  TRUE
[09:16:28.947]      // while "1"  (timeout="50000")
[09:16:28.948]      // while-condition  =>  TRUE
[09:16:28.948]      // while "1"  (timeout="50000")
[09:16:28.948]      // while-condition  =>  TRUE
[09:16:28.948]      // while "1"  (timeout="50000")
[09:16:28.949]      // while-condition  =>  TRUE
[09:16:28.949]      // while "1"  (timeout="50000")
[09:16:28.949]      // while-condition  =>  TRUE
[09:16:28.949]      // while "1"  (timeout="50000")
[09:16:28.950]      // while-condition  =>  TRUE
[09:16:28.950]      // while "1"  (timeout="50000")
[09:16:28.950]      // while-condition  =>  TRUE
[09:16:28.950]      // while "1"  (timeout="50000")
[09:16:28.950]      // while-condition  =>  TRUE
[09:16:28.951]      // while "1"  (timeout="50000")
[09:16:28.951]      // while-condition  =>  TRUE
[09:16:28.951]      // while "1"  (timeout="50000")
[09:16:28.951]      // while-condition  =>  TRUE
[09:16:28.952]      // while "1"  (timeout="50000")
[09:16:28.952]      // while-condition  =>  TRUE
[09:16:28.952]      // while "1"  (timeout="50000")
[09:16:28.952]      // while-condition  =>  TRUE
[09:16:28.953]      // while "1"  (timeout="50000")
[09:16:28.953]      // while-condition  =>  TRUE
[09:16:28.953]      // while "1"  (timeout="50000")
[09:16:28.953]      // while-condition  =>  TRUE
[09:16:28.954]      // while "1"  (timeout="50000")
[09:16:28.954]      // while-condition  =>  TRUE
[09:16:28.954]      // while "1"  (timeout="50000")
[09:16:28.954]      // while-condition  =>  TRUE
[09:16:28.954]      // while "1"  (timeout="50000")
[09:16:28.955]      // while-condition  =>  TRUE
[09:16:28.955]      // while "1"  (timeout="50000")
[09:16:28.955]      // while-condition  =>  TRUE
[09:16:28.955]      // while "1"  (timeout="50000")
[09:16:28.956]      // while-condition  =>  TRUE
[09:16:28.956]      // while "1"  (timeout="50000")
[09:16:28.956]      // while-condition  =>  TRUE
[09:16:28.956]      // while "1"  (timeout="50000")
[09:16:28.956]      // while-condition  =>  TRUE
[09:16:28.957]      // while "1"  (timeout="50000")
[09:16:28.957]      // while-condition  =>  TRUE
[09:16:28.957]      // while "1"  (timeout="50000")
[09:16:28.957]      // while-condition  =>  TRUE
[09:16:28.958]      // while "1"  (timeout="50000")
[09:16:28.958]      // while-condition  =>  TRUE
[09:16:28.958]      // while "1"  (timeout="50000")
[09:16:28.958]      // while-condition  =>  TRUE
[09:16:28.959]      // while "1"  (timeout="50000")
[09:16:28.959]      // while-condition  =>  TRUE
[09:16:28.959]      // while "1"  (timeout="50000")
[09:16:28.959]      // while-condition  =>  TRUE
[09:16:28.960]      // while "1"  (timeout="50000")
[09:16:28.960]      // while-condition  =>  TRUE
[09:16:28.960]      // while "1"  (timeout="50000")
[09:16:28.960]      // while-condition  =>  TRUE
[09:16:28.960]      // while "1"  (timeout="50000")
[09:16:28.961]      // while-condition  =>  TRUE
[09:16:28.961]      // while "1"  (timeout="50000")
[09:16:28.961]      // while-condition  =>  TRUE
[09:16:28.961]      // while "1"  (timeout="50000")
[09:16:28.962]      // while-condition  =>  TRUE
[09:16:28.962]      // while "1"  (timeout="50000")
[09:16:28.962]      // while-condition  =>  TRUE
[09:16:28.962]      // while "1"  (timeout="50000")
[09:16:28.963]      // while-condition  =>  TRUE
[09:16:28.963]      // while "1"  (timeout="50000")
[09:16:28.963]      // while-condition  =>  TRUE
[09:16:28.963]      // while "1"  (timeout="50000")
[09:16:28.964]      // while-condition  =>  TRUE
[09:16:28.964]      // while "1"  (timeout="50000")
[09:16:28.964]      // while-condition  =>  TRUE
[09:16:28.964]      // while "1"  (timeout="50000")
[09:16:28.964]      // while-condition  =>  TRUE
[09:16:28.965]      // while "1"  (timeout="50000")
[09:16:28.965]      // while-condition  =>  TRUE
[09:16:28.965]      // while "1"  (timeout="50000")
[09:16:28.965]      // while-condition  =>  TRUE
[09:16:28.966]      // while "1"  (timeout="50000")
[09:16:28.966]      // while-condition  =>  TRUE
[09:16:28.966]      // while "1"  (timeout="50000")
[09:16:28.966]      // while-condition  =>  TRUE
[09:16:28.966]      // while "1"  (timeout="50000")
[09:16:28.967]      // while-condition  =>  TRUE
[09:16:28.967]      // while "1"  (timeout="50000")
[09:16:28.967]      // while-condition  =>  TRUE
[09:16:28.967]      // while "1"  (timeout="50000")
[09:16:28.968]      // while-condition  =>  TRUE
[09:16:28.968]      // while "1"  (timeout="50000")
[09:16:28.968]      // while-condition  =>  TRUE
[09:16:28.968]      // while "1"  (timeout="50000")
[09:16:28.969]      // while-condition  =>  TRUE
[09:16:28.969]      // while "1"  (timeout="50000")
[09:16:28.969]      // while-condition  =>  TRUE
[09:16:28.969]      // while "1"  (timeout="50000")
[09:16:28.970]      // while-condition  =>  TRUE
[09:16:28.970]      // while "1"  (timeout="50000")
[09:16:28.970]      // while-condition  =>  TRUE
[09:16:28.970]      // while "1"  (timeout="50000")
[09:16:28.971]      // while-condition  =>  TRUE
[09:16:28.971]      // while "1"  (timeout="50000")
[09:16:28.971]      // while-condition  =>  TRUE
[09:16:28.971]      // while "1"  (timeout="50000")
[09:16:28.972]      // while-condition  =>  TRUE
[09:16:28.972]      // while "1"  (timeout="50000")
[09:16:28.972]      // while-condition  =>  TRUE
[09:16:28.972]      // while "1"  (timeout="50000")
[09:16:28.972]      // while-condition  =>  TRUE
[09:16:28.973]      // while "1"  (timeout="50000")
[09:16:28.973]      // while-condition  =>  TRUE
[09:16:28.973]      // while "1"  (timeout="50000")
[09:16:28.973]      // while-condition  =>  TRUE
[09:16:28.974]      // while "1"  (timeout="50000")
[09:16:28.974]      // while-condition  =>  TRUE
[09:16:28.974]      // while "1"  (timeout="50000")
[09:16:28.974]      // while-condition  =>  TRUE
[09:16:28.975]      // while "1"  (timeout="50000")
[09:16:28.975]      // while-condition  =>  TRUE
[09:16:28.975]      // while "1"  (timeout="50000")
[09:16:28.975]      // while-condition  =>  TRUE
[09:16:28.976]      // while "1"  (timeout="50000")
[09:16:28.976]      // while-condition  =>  TRUE
[09:16:28.976]      // while "1"  (timeout="50000")
[09:16:28.976]      // while-condition  =>  TRUE
[09:16:28.976]      // while "1"  (timeout="50000")
[09:16:28.977]      // while-condition  =>  TRUE
[09:16:28.977]      // while "1"  (timeout="50000")
[09:16:28.977]      // while-condition  =>  TRUE
[09:16:28.977]      // while "1"  (timeout="50000")
[09:16:28.978]      // while-condition  =>  TRUE
[09:16:28.978]      // while "1"  (timeout="50000")
[09:16:28.978]      // while-condition  =>  TRUE
[09:16:28.978]      // while "1"  (timeout="50000")
[09:16:28.979]      // while-condition  =>  TRUE
[09:16:28.979]      // while "1"  (timeout="50000")
[09:16:28.979]      // while-condition  =>  TRUE
[09:16:28.979]      // while "1"  (timeout="50000")
[09:16:28.979]      // while-condition  =>  TRUE
[09:16:28.980]      // while "1"  (timeout="50000")
[09:16:28.980]      // while-condition  =>  TRUE
[09:16:28.980]      // while "1"  (timeout="50000")
[09:16:28.980]      // while-condition  =>  TRUE
[09:16:28.981]      // while "1"  (timeout="50000")
[09:16:28.981]      // while-condition  =>  TRUE
[09:16:28.981]      // while "1"  (timeout="50000")
[09:16:28.981]      // while-condition  =>  TRUE
[09:16:28.982]      // while "1"  (timeout="50000")
[09:16:28.982]      // while-condition  =>  TRUE
[09:16:28.982]      // while "1"  (timeout="50000")
[09:16:28.982]      // while-condition  =>  TRUE
[09:16:28.982]      // while "1"  (timeout="50000")
[09:16:28.983]      // while-condition  =>  TRUE
[09:16:28.983]      // while "1"  (timeout="50000")
[09:16:28.984]      // while-condition  =>  TRUE
[09:16:28.984]      // while "1"  (timeout="50000")
[09:16:28.985]      // while-condition  =>  TRUE
[09:16:28.985]      // while "1"  (timeout="50000")
[09:16:28.985]      // while-condition  =>  TRUE
[09:16:28.985]      // while "1"  (timeout="50000")
[09:16:28.985]      // while-condition  =>  TRUE
[09:16:28.986]      // while "1"  (timeout="50000")
[09:16:28.986]      // while-condition  =>  TRUE
[09:16:28.986]      // while "1"  (timeout="50000")
[09:16:28.986]      // while-condition  =>  TRUE
[09:16:28.987]      // while "1"  (timeout="50000")
[09:16:28.987]      // while-condition  =>  TRUE
[09:16:28.987]      // while "1"  (timeout="50000")
[09:16:28.987]      // while-condition  =>  TRUE
[09:16:28.987]      // while "1"  (timeout="50000")
[09:16:28.988]      // while-condition  =>  TRUE
[09:16:28.988]      // while "1"  (timeout="50000")
[09:16:28.988]      // while-condition  =>  TRUE
[09:16:28.988]      // while "1"  (timeout="50000")
[09:16:28.989]      // while-condition  =>  TRUE
[09:16:28.989]      // while "1"  (timeout="50000")
[09:16:28.989]      // while-condition  =>  TRUE
[09:16:28.990]      // while "1"  (timeout="50000")
[09:16:28.990]      // while-condition  =>  TRUE
[09:16:28.990]      // while "1"  (timeout="50000")
[09:16:28.990]      // while-condition  =>  TRUE
[09:16:28.990]      // while "1"  (timeout="50000")
[09:16:28.991]      // while-condition  =>  TRUE
[09:16:28.991]      // while "1"  (timeout="50000")
[09:16:28.991]      // while-condition  =>  TRUE
[09:16:28.991]      // while "1"  (timeout="50000")
[09:16:28.992]      // while-condition  =>  TRUE
[09:16:28.992]      // while "1"  (timeout="50000")
[09:16:28.992]      // while-condition  =>  TRUE
[09:16:28.992]      // while "1"  (timeout="50000")
[09:16:28.993]      // while-condition  =>  TRUE
[09:16:28.993]      // while "1"  (timeout="50000")
[09:16:28.993]      // while-condition  =>  TRUE
[09:16:28.993]      // while "1"  (timeout="50000")
[09:16:28.994]      // while-condition  =>  TRUE
[09:16:28.994]      // while "1"  (timeout="50000")
[09:16:28.994]      // while-condition  =>  TRUE
[09:16:28.994]      // while "1"  (timeout="50000")
[09:16:28.994]      // while-condition  =>  TRUE
[09:16:28.995]      // while "1"  (timeout="50000")
[09:16:28.995]      // while-condition  =>  TRUE
[09:16:28.995]      // while "1"  (timeout="50000")
[09:16:28.995]      // while-condition  =>  TRUE
[09:16:28.996]      // while "1"  (timeout="50000")
[09:16:28.996]      // while-condition  =>  TRUE
[09:16:28.996]      // while "1"  (timeout="50000")
[09:16:28.996]      // while-condition  =>  TRUE
[09:16:28.997]      // while "1"  (timeout="50000")
[09:16:28.997]      // while-condition  =>  TRUE
[09:16:28.997]      // while "1"  (timeout="50000")
[09:16:28.997]      // while-condition  =>  TRUE
[09:16:28.997]      // while "1"  (timeout="50000")
[09:16:28.998]      // while-condition  =>  TRUE
[09:16:28.998]      // while "1"  (timeout="50000")
[09:16:28.998]      // while-condition  =>  TRUE
[09:16:28.998]      // while "1"  (timeout="50000")
[09:16:28.999]      // while-condition  =>  TRUE
[09:16:28.999]      // while "1"  (timeout="50000")
[09:16:28.999]      // while-condition  =>  TRUE
[09:16:28.999]      // while "1"  (timeout="50000")
[09:16:29.000]      // while-condition  =>  TRUE
[09:16:29.000]      // while "1"  (timeout="50000")
[09:16:29.000]      // while-condition  =>  TRUE
[09:16:29.000]      // while "1"  (timeout="50000")
[09:16:29.000]      // while-condition  =>  TRUE
[09:16:29.001]      // while "1"  (timeout="50000")
[09:16:29.001]      // while-condition  =>  TRUE
[09:16:29.001]      // while "1"  (timeout="50000")
[09:16:29.001]      // while-condition  =>  TRUE
[09:16:29.002]      // while "1"  (timeout="50000")
[09:16:29.002]      // while  =>  TIMEOUT
[09:16:29.002]      // end while "1"
[09:16:29.002]    </control>
[09:16:29.003]    <block atomic="false" info="">
[09:16:29.003]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:16:29.005]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:16:29.005]    </block>
[09:16:29.005]    <control if="" while="1" timeout="10000" info="">
[09:16:29.005]      // while "1"  (timeout="10000")
[09:16:29.006]      // while-condition  =>  TRUE
[09:16:29.006]      // while "1"  (timeout="10000")
[09:16:29.006]      // while-condition  =>  TRUE
[09:16:29.006]      // while "1"  (timeout="10000")
[09:16:29.006]      // while-condition  =>  TRUE
[09:16:29.007]      // while "1"  (timeout="10000")
[09:16:29.007]      // while-condition  =>  TRUE
[09:16:29.007]      // while "1"  (timeout="10000")
[09:16:29.007]      // while-condition  =>  TRUE
[09:16:29.008]      // while "1"  (timeout="10000")
[09:16:29.008]      // while-condition  =>  TRUE
[09:16:29.008]      // while "1"  (timeout="10000")
[09:16:29.008]      // while-condition  =>  TRUE
[09:16:29.009]      // while "1"  (timeout="10000")
[09:16:29.009]      // while-condition  =>  TRUE
[09:16:29.009]      // while "1"  (timeout="10000")
[09:16:29.009]      // while-condition  =>  TRUE
[09:16:29.009]      // while "1"  (timeout="10000")
[09:16:29.010]      // while-condition  =>  TRUE
[09:16:29.010]      // while "1"  (timeout="10000")
[09:16:29.010]      // while-condition  =>  TRUE
[09:16:29.010]      // while "1"  (timeout="10000")
[09:16:29.011]      // while-condition  =>  TRUE
[09:16:29.011]      // while "1"  (timeout="10000")
[09:16:29.011]      // while-condition  =>  TRUE
[09:16:29.011]      // while "1"  (timeout="10000")
[09:16:29.011]      // while-condition  =>  TRUE
[09:16:29.012]      // while "1"  (timeout="10000")
[09:16:29.012]      // while-condition  =>  TRUE
[09:16:29.012]      // while "1"  (timeout="10000")
[09:16:29.012]      // while-condition  =>  TRUE
[09:16:29.013]      // while "1"  (timeout="10000")
[09:16:29.013]      // while-condition  =>  TRUE
[09:16:29.013]      // while "1"  (timeout="10000")
[09:16:29.013]      // while-condition  =>  TRUE
[09:16:29.014]      // while "1"  (timeout="10000")
[09:16:29.014]      // while-condition  =>  TRUE
[09:16:29.014]      // while "1"  (timeout="10000")
[09:16:29.014]      // while-condition  =>  TRUE
[09:16:29.014]      // while "1"  (timeout="10000")
[09:16:29.015]      // while-condition  =>  TRUE
[09:16:29.015]      // while "1"  (timeout="10000")
[09:16:29.015]      // while-condition  =>  TRUE
[09:16:29.015]      // while "1"  (timeout="10000")
[09:16:29.016]      // while-condition  =>  TRUE
[09:16:29.016]      // while "1"  (timeout="10000")
[09:16:29.016]      // while-condition  =>  TRUE
[09:16:29.016]      // while "1"  (timeout="10000")
[09:16:29.017]      // while-condition  =>  TRUE
[09:16:29.017]      // while "1"  (timeout="10000")
[09:16:29.017]      // while-condition  =>  TRUE
[09:16:29.017]      // while "1"  (timeout="10000")
[09:16:29.017]      // while-condition  =>  TRUE
[09:16:29.018]      // while "1"  (timeout="10000")
[09:16:29.018]      // while  =>  TIMEOUT
[09:16:29.018]      // end while "1"
[09:16:29.018]    </control>
[09:16:29.019]    <block atomic="true" info="">
[09:16:29.022]  
[09:16:29.022]  ! W001 : No atomic sequence support in debug unit
[09:16:29.022]  
[09:16:29.024]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:16:29.026]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:16:29.026]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:16:29.028]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:16:29.028]    </block>
[09:16:29.028]    <block atomic="false" info="">
[09:16:29.028]      __errorcontrol = 0x00000001;
[09:16:29.029]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:16:29.029]      ReadDP(0x0);
[09:16:29.032]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:16:29.032]      __errorcontrol = 0x00000000;
[09:16:29.032]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:16:29.033]    </block>
[09:16:29.033]  </sequence>
[09:16:29.033]  
[09:16:29.033]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:16:29.033]  
[09:16:29.034]  <debugvars>
[09:16:29.034]    // Pre-defined
[09:16:29.034]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:16:29.034]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:16:29.035]    __dp=0x00000000
[09:16:29.035]    __ap=0x00000000
[09:16:29.035]    __traceout=0x00000000      (Trace Disabled)
[09:16:29.035]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:16:29.035]    __FlashAddr=0x00000000
[09:16:29.036]    __FlashLen=0x00000000
[09:16:29.036]    __FlashArg=0x00000000
[09:16:29.036]    __FlashOp=0x00000000
[09:16:29.036]    __Result=0x00000000
[09:16:29.037]  </debugvars>
[09:16:29.037]  
[09:16:29.037]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:16:29.037]  </sequence>
[09:16:29.037]  
[09:16:29.042]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[09:16:29.042]  
[09:16:29.042]  <debugvars>
[09:16:29.042]    // Pre-defined
[09:16:29.042]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:16:29.043]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:16:29.043]    __dp=0x00000000
[09:16:29.043]    __ap=0x00000000
[09:16:29.044]    __traceout=0x00000000      (Trace Disabled)
[09:16:29.044]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:16:29.044]    __FlashAddr=0x00000000
[09:16:29.044]    __FlashLen=0x00000000
[09:16:29.045]    __FlashArg=0x00000000
[09:16:29.045]    __FlashOp=0x00000000
[09:16:29.045]    __Result=0x00000000
[09:16:29.046]  </debugvars>
[09:16:29.046]  
[09:16:29.046]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:16:29.047]    <block atomic="false" info="">
[09:16:29.047]      __var SW_DP_ABORT  = 0x0;
[09:16:29.047]        // -> [SW_DP_ABORT <= 0x00000000]
[09:16:29.047]      __var DP_CTRL_STAT = 0x4;
[09:16:29.048]        // -> [DP_CTRL_STAT <= 0x00000004]
[09:16:29.048]      __var DP_SELECT    = 0x8;
[09:16:29.048]        // -> [DP_SELECT <= 0x00000008]
[09:16:29.049]      __var powered_down = 0;
[09:16:29.049]        // -> [powered_down <= 0x00000000]
[09:16:29.049]      WriteDP(DP_SELECT, 0x00000000);
[09:16:29.051]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:16:29.051]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:16:29.053]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[09:16:29.053]        // -> [powered_down <= 0x00000001]
[09:16:29.053]    </block>
[09:16:29.053]    <control if="powered_down" while="" timeout="0" info="">
[09:16:29.054]      // if-block "powered_down"
[09:16:29.054]        // =>  TRUE
[09:16:29.054]      <block atomic="false" info="">
[09:16:29.054]        WriteDP(DP_CTRL_STAT, 0x50000000);
[09:16:29.057]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[09:16:29.057]      </block>
[09:16:29.057]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[09:16:29.057]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[09:16:29.060]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:16:29.060]        // while-condition  =>  FALSE
[09:16:29.060]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[09:16:29.060]      </control>
[09:16:29.061]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[09:16:29.061]        // if-block "(__protocol & 0xFFFF) == 1"
[09:16:29.061]          // =>  FALSE
[09:16:29.061]        // skip if-block "(__protocol & 0xFFFF) == 1"
[09:16:29.062]      </control>
[09:16:29.062]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[09:16:29.062]        // if-block "(__protocol & 0xFFFF) == 2"
[09:16:29.062]          // =>  TRUE
[09:16:29.063]        <block atomic="false" info="">
[09:16:29.063]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[09:16:29.065]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[09:16:29.065]          WriteDP(SW_DP_ABORT, 0x0000001E);
[09:16:29.067]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[09:16:29.067]        </block>
[09:16:29.067]        // end if-block "(__protocol & 0xFFFF) == 2"
[09:16:29.068]      </control>
[09:16:29.068]      // end if-block "powered_down"
[09:16:29.068]    </control>
[09:16:29.068]  </sequence>
[09:16:29.069]  
[09:16:29.172]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:16:29.172]  
[09:16:29.173]  <debugvars>
[09:16:29.173]    // Pre-defined
[09:16:29.173]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:16:29.174]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:16:29.174]    __dp=0x00000000
[09:16:29.174]    __ap=0x00000000
[09:16:29.175]    __traceout=0x00000000      (Trace Disabled)
[09:16:29.175]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:16:29.175]    __FlashAddr=0x00000000
[09:16:29.176]    __FlashLen=0x00000000
[09:16:29.176]    __FlashArg=0x00000000
[09:16:29.176]    __FlashOp=0x00000000
[09:16:29.176]    __Result=0x00000000
[09:16:29.177]  </debugvars>
[09:16:29.177]  
[09:16:29.177]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:16:29.178]    <block atomic="true" info="">
[09:16:29.181]  
[09:16:29.181]  ! W001 : No atomic sequence support in debug unit
[09:16:29.181]  
[09:16:29.183]      __var DP_R_IDCODE    = 0x0;
[09:16:29.183]        // -> [DP_R_IDCODE <= 0x00000000]
[09:16:29.183]      __var DP_W_ABORT    = 0x0;
[09:16:29.184]        // -> [DP_W_ABORT <= 0x00000000]
[09:16:29.184]      __var DP_CTRLSTAT = 0x4;
[09:16:29.184]        // -> [DP_CTRLSTAT <= 0x00000004]
[09:16:29.184]      __var DP_W_SELECT    = 0x8;
[09:16:29.185]        // -> [DP_W_SELECT <= 0x00000008]
[09:16:29.185]      __var AP_TAR		= 0x4;
[09:16:29.185]        // -> [AP_TAR <= 0x00000004]
[09:16:29.186]      __var AP_BD0		= 0x0;
[09:16:29.186]        // -> [AP_BD0 <= 0x00000000]
[09:16:29.186]      __var AP_BD1		= 0x4;
[09:16:29.187]        // -> [AP_BD1 <= 0x00000004]
[09:16:29.187]      __var AP_BD2		= 0x8;
[09:16:29.187]        // -> [AP_BD2 <= 0x00000008]
[09:16:29.187]      __var PCWithinFlash = 0;
[09:16:29.188]        // -> [PCWithinFlash <= 0x00000000]
[09:16:29.188]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:16:29.194]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.194]    </block>
[09:16:29.195]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:16:29.195]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:16:29.201]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.201]      // while-condition  =>  FALSE
[09:16:29.202]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:16:29.202]    </control>
[09:16:29.202]    <block atomic="true" info="">
[09:16:29.211]  
[09:16:29.211]  ! W001 : No atomic sequence support in debug unit
[09:16:29.211]  
[09:16:29.226]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:16:29.228]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:16:29.238]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:16:29.240]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.241]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:16:29.243]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:16:29.244]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:16:29.247]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.248]    </block>
[09:16:29.248]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:16:29.248]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.250]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.251]      // while-condition  =>  TRUE
[09:16:29.251]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.252]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.253]      // while-condition  =>  TRUE
[09:16:29.253]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.255]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.256]      // while-condition  =>  TRUE
[09:16:29.256]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.257]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.258]      // while-condition  =>  TRUE
[09:16:29.258]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.260]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.261]      // while-condition  =>  TRUE
[09:16:29.261]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.263]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.264]      // while-condition  =>  TRUE
[09:16:29.264]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.266]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.267]      // while-condition  =>  TRUE
[09:16:29.267]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.269]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.270]      // while-condition  =>  TRUE
[09:16:29.270]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.272]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.273]      // while-condition  =>  TRUE
[09:16:29.273]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.275]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.276]      // while-condition  =>  TRUE
[09:16:29.276]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.278]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.279]      // while-condition  =>  TRUE
[09:16:29.279]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.281]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.282]      // while-condition  =>  TRUE
[09:16:29.282]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.284]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.285]      // while-condition  =>  TRUE
[09:16:29.285]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.287]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.288]      // while-condition  =>  TRUE
[09:16:29.288]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.291]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.292]      // while-condition  =>  TRUE
[09:16:29.292]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.294]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.295]      // while-condition  =>  TRUE
[09:16:29.295]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.297]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.298]      // while-condition  =>  TRUE
[09:16:29.298]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.300]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.301]      // while-condition  =>  TRUE
[09:16:29.301]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.303]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.304]      // while-condition  =>  TRUE
[09:16:29.304]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.306]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.307]      // while-condition  =>  TRUE
[09:16:29.307]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.309]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.310]      // while-condition  =>  TRUE
[09:16:29.310]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.313]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.313]      // while-condition  =>  TRUE
[09:16:29.313]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.316]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.317]      // while-condition  =>  TRUE
[09:16:29.317]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.318]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.319]      // while-condition  =>  TRUE
[09:16:29.319]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.321]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.322]      // while-condition  =>  TRUE
[09:16:29.322]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.324]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.325]      // while-condition  =>  TRUE
[09:16:29.325]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.328]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.328]      // while-condition  =>  TRUE
[09:16:29.328]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.330]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.331]      // while-condition  =>  TRUE
[09:16:29.331]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.333]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.334]      // while-condition  =>  TRUE
[09:16:29.334]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.336]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.337]      // while-condition  =>  TRUE
[09:16:29.337]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.340]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.340]      // while-condition  =>  TRUE
[09:16:29.340]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.343]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.343]      // while-condition  =>  TRUE
[09:16:29.343]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.346]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.346]      // while-condition  =>  TRUE
[09:16:29.346]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.346]      // while  =>  TIMEOUT
[09:16:29.347]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:16:29.347]    </control>
[09:16:29.347]    <block atomic="false" info="">
[09:16:29.347]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:16:29.350]        // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.350]        // -> [PCWithinFlash <= 0x00000000]
[09:16:29.350]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:16:29.353]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:16:29.353]    </block>
[09:16:29.353]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:16:29.353]      // if-block "PCWithinFlash == 0"
[09:16:29.354]        // =>  TRUE
[09:16:29.354]      // end if-block "PCWithinFlash == 0"
[09:16:29.354]    </control>
[09:16:29.354]  </sequence>
[09:16:29.354]  
[09:16:29.401]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[09:16:29.401]  
[09:16:29.401]  <debugvars>
[09:16:29.402]    // Pre-defined
[09:16:29.402]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:16:29.402]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:16:29.402]    __dp=0x00000000
[09:16:29.403]    __ap=0x00000000
[09:16:29.403]    __traceout=0x00000000      (Trace Disabled)
[09:16:29.403]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:16:29.403]    __FlashAddr=0x00000000
[09:16:29.404]    __FlashLen=0x00000000
[09:16:29.404]    __FlashArg=0x00000000
[09:16:29.404]    __FlashOp=0x00000000
[09:16:29.404]    __Result=0x00000000
[09:16:29.405]  </debugvars>
[09:16:29.405]  
[09:16:29.405]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[09:16:29.405]    <block atomic="false" info="">
[09:16:29.405]    </block>
[09:16:29.406]  </sequence>
[09:16:29.406]  
[09:16:29.408]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[09:16:29.408]  
[09:16:29.408]  <debugvars>
[09:16:29.408]    // Pre-defined
[09:16:29.409]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:16:29.409]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:16:29.409]    __dp=0x00000000
[09:16:29.409]    __ap=0x00000000
[09:16:29.410]    __traceout=0x00000000      (Trace Disabled)
[09:16:29.410]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:16:29.410]    __FlashAddr=0x00000000
[09:16:29.410]    __FlashLen=0x00000000
[09:16:29.411]    __FlashArg=0x00000000
[09:16:29.411]    __FlashOp=0x00000000
[09:16:29.411]    __Result=0x00000000
[09:16:29.411]  </debugvars>
[09:16:29.411]  
[09:16:29.412]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:16:29.412]    <block atomic="false" info="">
[09:16:29.412]      __var nReset      = 0x80;
[09:16:29.412]        // -> [nReset <= 0x00000080]
[09:16:29.413]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:16:29.415]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:16:29.415]    </block>
[09:16:29.415]    <control if="" while="1" timeout="50000" info="">
[09:16:29.415]      // while "1"  (timeout="50000")
[09:16:29.416]      // while-condition  =>  TRUE
[09:16:29.416]      // while "1"  (timeout="50000")
[09:16:29.416]      // while-condition  =>  TRUE
[09:16:29.416]      // while "1"  (timeout="50000")
[09:16:29.417]      // while-condition  =>  TRUE
[09:16:29.417]      // while "1"  (timeout="50000")
[09:16:29.417]      // while-condition  =>  TRUE
[09:16:29.417]      // while "1"  (timeout="50000")
[09:16:29.418]      // while-condition  =>  TRUE
[09:16:29.418]      // while "1"  (timeout="50000")
[09:16:29.418]      // while-condition  =>  TRUE
[09:16:29.418]      // while "1"  (timeout="50000")
[09:16:29.418]      // while-condition  =>  TRUE
[09:16:29.419]      // while "1"  (timeout="50000")
[09:16:29.419]      // while-condition  =>  TRUE
[09:16:29.419]      // while "1"  (timeout="50000")
[09:16:29.419]      // while-condition  =>  TRUE
[09:16:29.420]      // while "1"  (timeout="50000")
[09:16:29.420]      // while-condition  =>  TRUE
[09:16:29.420]      // while "1"  (timeout="50000")
[09:16:29.420]      // while-condition  =>  TRUE
[09:16:29.421]      // while "1"  (timeout="50000")
[09:16:29.421]      // while-condition  =>  TRUE
[09:16:29.421]      // while "1"  (timeout="50000")
[09:16:29.421]      // while-condition  =>  TRUE
[09:16:29.421]      // while "1"  (timeout="50000")
[09:16:29.422]      // while-condition  =>  TRUE
[09:16:29.422]      // while "1"  (timeout="50000")
[09:16:29.422]      // while-condition  =>  TRUE
[09:16:29.422]      // while "1"  (timeout="50000")
[09:16:29.423]      // while-condition  =>  TRUE
[09:16:29.423]      // while "1"  (timeout="50000")
[09:16:29.423]      // while-condition  =>  TRUE
[09:16:29.423]      // while "1"  (timeout="50000")
[09:16:29.424]      // while-condition  =>  TRUE
[09:16:29.424]      // while "1"  (timeout="50000")
[09:16:29.424]      // while-condition  =>  TRUE
[09:16:29.424]      // while "1"  (timeout="50000")
[09:16:29.425]      // while-condition  =>  TRUE
[09:16:29.425]      // while "1"  (timeout="50000")
[09:16:29.425]      // while-condition  =>  TRUE
[09:16:29.425]      // while "1"  (timeout="50000")
[09:16:29.426]      // while-condition  =>  TRUE
[09:16:29.426]      // while "1"  (timeout="50000")
[09:16:29.426]      // while-condition  =>  TRUE
[09:16:29.426]      // while "1"  (timeout="50000")
[09:16:29.427]      // while-condition  =>  TRUE
[09:16:29.427]      // while "1"  (timeout="50000")
[09:16:29.427]      // while-condition  =>  TRUE
[09:16:29.427]      // while "1"  (timeout="50000")
[09:16:29.428]      // while-condition  =>  TRUE
[09:16:29.428]      // while "1"  (timeout="50000")
[09:16:29.428]      // while-condition  =>  TRUE
[09:16:29.428]      // while "1"  (timeout="50000")
[09:16:29.429]      // while-condition  =>  TRUE
[09:16:29.429]      // while "1"  (timeout="50000")
[09:16:29.429]      // while-condition  =>  TRUE
[09:16:29.429]      // while "1"  (timeout="50000")
[09:16:29.430]      // while-condition  =>  TRUE
[09:16:29.430]      // while "1"  (timeout="50000")
[09:16:29.430]      // while-condition  =>  TRUE
[09:16:29.430]      // while "1"  (timeout="50000")
[09:16:29.430]      // while-condition  =>  TRUE
[09:16:29.431]      // while "1"  (timeout="50000")
[09:16:29.431]      // while-condition  =>  TRUE
[09:16:29.431]      // while "1"  (timeout="50000")
[09:16:29.431]      // while-condition  =>  TRUE
[09:16:29.432]      // while "1"  (timeout="50000")
[09:16:29.432]      // while-condition  =>  TRUE
[09:16:29.432]      // while "1"  (timeout="50000")
[09:16:29.432]      // while-condition  =>  TRUE
[09:16:29.432]      // while "1"  (timeout="50000")
[09:16:29.433]      // while-condition  =>  TRUE
[09:16:29.433]      // while "1"  (timeout="50000")
[09:16:29.433]      // while-condition  =>  TRUE
[09:16:29.433]      // while "1"  (timeout="50000")
[09:16:29.434]      // while-condition  =>  TRUE
[09:16:29.434]      // while "1"  (timeout="50000")
[09:16:29.434]      // while-condition  =>  TRUE
[09:16:29.434]      // while "1"  (timeout="50000")
[09:16:29.435]      // while-condition  =>  TRUE
[09:16:29.435]      // while "1"  (timeout="50000")
[09:16:29.435]      // while-condition  =>  TRUE
[09:16:29.435]      // while "1"  (timeout="50000")
[09:16:29.436]      // while-condition  =>  TRUE
[09:16:29.436]      // while "1"  (timeout="50000")
[09:16:29.436]      // while-condition  =>  TRUE
[09:16:29.436]      // while "1"  (timeout="50000")
[09:16:29.436]      // while-condition  =>  TRUE
[09:16:29.437]      // while "1"  (timeout="50000")
[09:16:29.437]      // while-condition  =>  TRUE
[09:16:29.437]      // while "1"  (timeout="50000")
[09:16:29.437]      // while-condition  =>  TRUE
[09:16:29.438]      // while "1"  (timeout="50000")
[09:16:29.438]      // while-condition  =>  TRUE
[09:16:29.438]      // while "1"  (timeout="50000")
[09:16:29.438]      // while-condition  =>  TRUE
[09:16:29.438]      // while "1"  (timeout="50000")
[09:16:29.439]      // while-condition  =>  TRUE
[09:16:29.439]      // while "1"  (timeout="50000")
[09:16:29.439]      // while-condition  =>  TRUE
[09:16:29.439]      // while "1"  (timeout="50000")
[09:16:29.440]      // while-condition  =>  TRUE
[09:16:29.440]      // while "1"  (timeout="50000")
[09:16:29.440]      // while-condition  =>  TRUE
[09:16:29.440]      // while "1"  (timeout="50000")
[09:16:29.441]      // while-condition  =>  TRUE
[09:16:29.441]      // while "1"  (timeout="50000")
[09:16:29.441]      // while-condition  =>  TRUE
[09:16:29.441]      // while "1"  (timeout="50000")
[09:16:29.442]      // while-condition  =>  TRUE
[09:16:29.442]      // while "1"  (timeout="50000")
[09:16:29.442]      // while-condition  =>  TRUE
[09:16:29.442]      // while "1"  (timeout="50000")
[09:16:29.442]      // while-condition  =>  TRUE
[09:16:29.443]      // while "1"  (timeout="50000")
[09:16:29.443]      // while-condition  =>  TRUE
[09:16:29.443]      // while "1"  (timeout="50000")
[09:16:29.443]      // while-condition  =>  TRUE
[09:16:29.444]      // while "1"  (timeout="50000")
[09:16:29.444]      // while-condition  =>  TRUE
[09:16:29.444]      // while "1"  (timeout="50000")
[09:16:29.444]      // while-condition  =>  TRUE
[09:16:29.445]      // while "1"  (timeout="50000")
[09:16:29.445]      // while-condition  =>  TRUE
[09:16:29.445]      // while "1"  (timeout="50000")
[09:16:29.445]      // while-condition  =>  TRUE
[09:16:29.446]      // while "1"  (timeout="50000")
[09:16:29.446]      // while-condition  =>  TRUE
[09:16:29.446]      // while "1"  (timeout="50000")
[09:16:29.446]      // while-condition  =>  TRUE
[09:16:29.447]      // while "1"  (timeout="50000")
[09:16:29.447]      // while-condition  =>  TRUE
[09:16:29.447]      // while "1"  (timeout="50000")
[09:16:29.447]      // while-condition  =>  TRUE
[09:16:29.448]      // while "1"  (timeout="50000")
[09:16:29.448]      // while-condition  =>  TRUE
[09:16:29.448]      // while "1"  (timeout="50000")
[09:16:29.448]      // while-condition  =>  TRUE
[09:16:29.449]      // while "1"  (timeout="50000")
[09:16:29.449]      // while-condition  =>  TRUE
[09:16:29.449]      // while "1"  (timeout="50000")
[09:16:29.449]      // while-condition  =>  TRUE
[09:16:29.449]      // while "1"  (timeout="50000")
[09:16:29.450]      // while-condition  =>  TRUE
[09:16:29.450]      // while "1"  (timeout="50000")
[09:16:29.450]      // while-condition  =>  TRUE
[09:16:29.450]      // while "1"  (timeout="50000")
[09:16:29.451]      // while-condition  =>  TRUE
[09:16:29.451]      // while "1"  (timeout="50000")
[09:16:29.451]      // while-condition  =>  TRUE
[09:16:29.451]      // while "1"  (timeout="50000")
[09:16:29.452]      // while-condition  =>  TRUE
[09:16:29.452]      // while "1"  (timeout="50000")
[09:16:29.452]      // while-condition  =>  TRUE
[09:16:29.452]      // while "1"  (timeout="50000")
[09:16:29.452]      // while-condition  =>  TRUE
[09:16:29.453]      // while "1"  (timeout="50000")
[09:16:29.453]      // while-condition  =>  TRUE
[09:16:29.453]      // while "1"  (timeout="50000")
[09:16:29.453]      // while-condition  =>  TRUE
[09:16:29.454]      // while "1"  (timeout="50000")
[09:16:29.454]      // while-condition  =>  TRUE
[09:16:29.454]      // while "1"  (timeout="50000")
[09:16:29.454]      // while-condition  =>  TRUE
[09:16:29.455]      // while "1"  (timeout="50000")
[09:16:29.455]      // while-condition  =>  TRUE
[09:16:29.455]      // while "1"  (timeout="50000")
[09:16:29.455]      // while-condition  =>  TRUE
[09:16:29.456]      // while "1"  (timeout="50000")
[09:16:29.456]      // while-condition  =>  TRUE
[09:16:29.456]      // while "1"  (timeout="50000")
[09:16:29.456]      // while-condition  =>  TRUE
[09:16:29.457]      // while "1"  (timeout="50000")
[09:16:29.457]      // while-condition  =>  TRUE
[09:16:29.457]      // while "1"  (timeout="50000")
[09:16:29.458]      // while-condition  =>  TRUE
[09:16:29.459]      // while "1"  (timeout="50000")
[09:16:29.459]      // while-condition  =>  TRUE
[09:16:29.459]      // while "1"  (timeout="50000")
[09:16:29.459]      // while-condition  =>  TRUE
[09:16:29.460]      // while "1"  (timeout="50000")
[09:16:29.460]      // while-condition  =>  TRUE
[09:16:29.460]      // while "1"  (timeout="50000")
[09:16:29.460]      // while-condition  =>  TRUE
[09:16:29.461]      // while "1"  (timeout="50000")
[09:16:29.461]      // while-condition  =>  TRUE
[09:16:29.461]      // while "1"  (timeout="50000")
[09:16:29.461]      // while-condition  =>  TRUE
[09:16:29.462]      // while "1"  (timeout="50000")
[09:16:29.462]      // while-condition  =>  TRUE
[09:16:29.462]      // while "1"  (timeout="50000")
[09:16:29.462]      // while-condition  =>  TRUE
[09:16:29.463]      // while "1"  (timeout="50000")
[09:16:29.463]      // while-condition  =>  TRUE
[09:16:29.463]      // while "1"  (timeout="50000")
[09:16:29.463]      // while-condition  =>  TRUE
[09:16:29.463]      // while "1"  (timeout="50000")
[09:16:29.464]      // while-condition  =>  TRUE
[09:16:29.464]      // while "1"  (timeout="50000")
[09:16:29.464]      // while-condition  =>  TRUE
[09:16:29.465]      // while "1"  (timeout="50000")
[09:16:29.465]      // while-condition  =>  TRUE
[09:16:29.465]      // while "1"  (timeout="50000")
[09:16:29.465]      // while-condition  =>  TRUE
[09:16:29.465]      // while "1"  (timeout="50000")
[09:16:29.466]      // while-condition  =>  TRUE
[09:16:29.466]      // while "1"  (timeout="50000")
[09:16:29.466]      // while-condition  =>  TRUE
[09:16:29.466]      // while "1"  (timeout="50000")
[09:16:29.467]      // while-condition  =>  TRUE
[09:16:29.467]      // while "1"  (timeout="50000")
[09:16:29.467]      // while-condition  =>  TRUE
[09:16:29.467]      // while "1"  (timeout="50000")
[09:16:29.468]      // while-condition  =>  TRUE
[09:16:29.468]      // while "1"  (timeout="50000")
[09:16:29.468]      // while-condition  =>  TRUE
[09:16:29.468]      // while "1"  (timeout="50000")
[09:16:29.468]      // while-condition  =>  TRUE
[09:16:29.469]      // while "1"  (timeout="50000")
[09:16:29.469]      // while-condition  =>  TRUE
[09:16:29.469]      // while "1"  (timeout="50000")
[09:16:29.469]      // while-condition  =>  TRUE
[09:16:29.470]      // while "1"  (timeout="50000")
[09:16:29.470]      // while-condition  =>  TRUE
[09:16:29.470]      // while "1"  (timeout="50000")
[09:16:29.470]      // while-condition  =>  TRUE
[09:16:29.471]      // while "1"  (timeout="50000")
[09:16:29.471]      // while  =>  TIMEOUT
[09:16:29.471]      // end while "1"
[09:16:29.471]    </control>
[09:16:29.472]    <block atomic="false" info="">
[09:16:29.472]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:16:29.474]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:16:29.475]    </block>
[09:16:29.475]    <control if="" while="1" timeout="10000" info="">
[09:16:29.475]      // while "1"  (timeout="10000")
[09:16:29.475]      // while-condition  =>  TRUE
[09:16:29.476]      // while "1"  (timeout="10000")
[09:16:29.476]      // while-condition  =>  TRUE
[09:16:29.476]      // while "1"  (timeout="10000")
[09:16:29.476]      // while-condition  =>  TRUE
[09:16:29.476]      // while "1"  (timeout="10000")
[09:16:29.477]      // while-condition  =>  TRUE
[09:16:29.477]      // while "1"  (timeout="10000")
[09:16:29.477]      // while-condition  =>  TRUE
[09:16:29.477]      // while "1"  (timeout="10000")
[09:16:29.478]      // while-condition  =>  TRUE
[09:16:29.478]      // while "1"  (timeout="10000")
[09:16:29.478]      // while-condition  =>  TRUE
[09:16:29.478]      // while "1"  (timeout="10000")
[09:16:29.479]      // while-condition  =>  TRUE
[09:16:29.479]      // while "1"  (timeout="10000")
[09:16:29.479]      // while-condition  =>  TRUE
[09:16:29.479]      // while "1"  (timeout="10000")
[09:16:29.480]      // while-condition  =>  TRUE
[09:16:29.480]      // while "1"  (timeout="10000")
[09:16:29.480]      // while-condition  =>  TRUE
[09:16:29.480]      // while "1"  (timeout="10000")
[09:16:29.481]      // while-condition  =>  TRUE
[09:16:29.481]      // while "1"  (timeout="10000")
[09:16:29.481]      // while-condition  =>  TRUE
[09:16:29.481]      // while "1"  (timeout="10000")
[09:16:29.482]      // while-condition  =>  TRUE
[09:16:29.482]      // while "1"  (timeout="10000")
[09:16:29.482]      // while-condition  =>  TRUE
[09:16:29.482]      // while "1"  (timeout="10000")
[09:16:29.483]      // while-condition  =>  TRUE
[09:16:29.483]      // while "1"  (timeout="10000")
[09:16:29.483]      // while-condition  =>  TRUE
[09:16:29.483]      // while "1"  (timeout="10000")
[09:16:29.483]      // while-condition  =>  TRUE
[09:16:29.484]      // while "1"  (timeout="10000")
[09:16:29.484]      // while-condition  =>  TRUE
[09:16:29.484]      // while "1"  (timeout="10000")
[09:16:29.484]      // while-condition  =>  TRUE
[09:16:29.484]      // while "1"  (timeout="10000")
[09:16:29.484]      // while-condition  =>  TRUE
[09:16:29.484]      // while "1"  (timeout="10000")
[09:16:29.484]      // while-condition  =>  TRUE
[09:16:29.485]      // while "1"  (timeout="10000")
[09:16:29.485]      // while-condition  =>  TRUE
[09:16:29.485]      // while "1"  (timeout="10000")
[09:16:29.485]      // while-condition  =>  TRUE
[09:16:29.486]      // while "1"  (timeout="10000")
[09:16:29.486]      // while  =>  TIMEOUT
[09:16:29.486]      // end while "1"
[09:16:29.486]    </control>
[09:16:29.486]    <block atomic="true" info="">
[09:16:29.491]  
[09:16:29.491]  ! W001 : No atomic sequence support in debug unit
[09:16:29.491]  
[09:16:29.493]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:16:29.496]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:16:29.496]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:16:29.498]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:16:29.498]    </block>
[09:16:29.498]    <block atomic="false" info="">
[09:16:29.499]      __errorcontrol = 0x00000001;
[09:16:29.499]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:16:29.499]      ReadDP(0x0);
[09:16:29.501]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:16:29.501]      __errorcontrol = 0x00000000;
[09:16:29.501]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:16:29.502]    </block>
[09:16:29.502]  </sequence>
[09:16:29.502]  
[09:16:29.506]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[09:16:29.506]  
[09:16:29.506]  <debugvars>
[09:16:29.507]    // Pre-defined
[09:16:29.507]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:16:29.507]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:16:29.507]    __dp=0x00000000
[09:16:29.508]    __ap=0x00000000
[09:16:29.508]    __traceout=0x00000000      (Trace Disabled)
[09:16:29.508]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:16:29.509]    __FlashAddr=0x00000000
[09:16:29.509]    __FlashLen=0x00000000
[09:16:29.509]    __FlashArg=0x00000000
[09:16:29.509]    __FlashOp=0x00000000
[09:16:29.510]    __Result=0x00000000
[09:16:29.510]  </debugvars>
[09:16:29.510]  
[09:16:29.510]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[09:16:29.510]    <block atomic="false" info="">
[09:16:29.511]    </block>
[09:16:29.511]  </sequence>
[09:16:29.511]  
[09:16:29.730]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[09:16:29.730]  
[09:16:29.731]  <debugvars>
[09:16:29.731]    // Pre-defined
[09:16:29.731]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:16:29.732]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:16:29.732]    __dp=0x00000000
[09:16:29.732]    __ap=0x00000000
[09:16:29.733]    __traceout=0x00000000      (Trace Disabled)
[09:16:29.733]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:16:29.733]    __FlashAddr=0x00000000
[09:16:29.734]    __FlashLen=0x00000000
[09:16:29.734]    __FlashArg=0x00000000
[09:16:29.734]    __FlashOp=0x00000000
[09:16:29.735]    __Result=0x00000000
[09:16:29.735]  </debugvars>
[09:16:29.735]  
[09:16:29.736]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[09:16:29.736]    <block atomic="false" info="">
[09:16:29.736]      Sequence("ResetHardware");
[09:16:29.736]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:16:29.737]          <block atomic="false" info="">
[09:16:29.737]            __var nReset      = 0x80;
[09:16:29.737]              // -> [nReset <= 0x00000080]
[09:16:29.737]            DAP_SWJ_Pins(0x00, nReset, 0);
[09:16:29.740]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:16:29.740]          </block>
[09:16:29.740]          <control if="" while="1" timeout="50000" info="">
[09:16:29.740]            // while "1"  (timeout="50000")
[09:16:29.741]            // while-condition  =>  TRUE
[09:16:29.741]            // while "1"  (timeout="50000")
[09:16:29.741]            // while-condition  =>  TRUE
[09:16:29.742]            // while "1"  (timeout="50000")
[09:16:29.742]            // while-condition  =>  TRUE
[09:16:29.742]            // while "1"  (timeout="50000")
[09:16:29.742]            // while-condition  =>  TRUE
[09:16:29.743]            // while "1"  (timeout="50000")
[09:16:29.743]            // while-condition  =>  TRUE
[09:16:29.743]            // while "1"  (timeout="50000")
[09:16:29.743]            // while-condition  =>  TRUE
[09:16:29.743]            // while "1"  (timeout="50000")
[09:16:29.744]            // while-condition  =>  TRUE
[09:16:29.744]            // while "1"  (timeout="50000")
[09:16:29.744]            // while-condition  =>  TRUE
[09:16:29.744]            // while "1"  (timeout="50000")
[09:16:29.745]            // while-condition  =>  TRUE
[09:16:29.745]            // while "1"  (timeout="50000")
[09:16:29.745]            // while-condition  =>  TRUE
[09:16:29.745]            // while "1"  (timeout="50000")
[09:16:29.745]            // while-condition  =>  TRUE
[09:16:29.746]            // while "1"  (timeout="50000")
[09:16:29.746]            // while-condition  =>  TRUE
[09:16:29.746]            // while "1"  (timeout="50000")
[09:16:29.746]            // while-condition  =>  TRUE
[09:16:29.746]            // while "1"  (timeout="50000")
[09:16:29.747]            // while-condition  =>  TRUE
[09:16:29.747]            // while "1"  (timeout="50000")
[09:16:29.747]            // while-condition  =>  TRUE
[09:16:29.747]            // while "1"  (timeout="50000")
[09:16:29.747]            // while-condition  =>  TRUE
[09:16:29.748]            // while "1"  (timeout="50000")
[09:16:29.748]            // while-condition  =>  TRUE
[09:16:29.748]            // while "1"  (timeout="50000")
[09:16:29.748]            // while-condition  =>  TRUE
[09:16:29.749]            // while "1"  (timeout="50000")
[09:16:29.749]            // while-condition  =>  TRUE
[09:16:29.749]            // while "1"  (timeout="50000")
[09:16:29.749]            // while-condition  =>  TRUE
[09:16:29.750]            // while "1"  (timeout="50000")
[09:16:29.750]            // while-condition  =>  TRUE
[09:16:29.750]            // while "1"  (timeout="50000")
[09:16:29.750]            // while-condition  =>  TRUE
[09:16:29.751]            // while "1"  (timeout="50000")
[09:16:29.751]            // while-condition  =>  TRUE
[09:16:29.751]            // while "1"  (timeout="50000")
[09:16:29.751]            // while-condition  =>  TRUE
[09:16:29.751]            // while "1"  (timeout="50000")
[09:16:29.752]            // while-condition  =>  TRUE
[09:16:29.752]            // while "1"  (timeout="50000")
[09:16:29.752]            // while-condition  =>  TRUE
[09:16:29.752]            // while "1"  (timeout="50000")
[09:16:29.752]            // while-condition  =>  TRUE
[09:16:29.753]            // while "1"  (timeout="50000")
[09:16:29.753]            // while-condition  =>  TRUE
[09:16:29.753]            // while "1"  (timeout="50000")
[09:16:29.753]            // while-condition  =>  TRUE
[09:16:29.753]            // while "1"  (timeout="50000")
[09:16:29.754]            // while-condition  =>  TRUE
[09:16:29.754]            // while "1"  (timeout="50000")
[09:16:29.754]            // while-condition  =>  TRUE
[09:16:29.754]            // while "1"  (timeout="50000")
[09:16:29.754]            // while-condition  =>  TRUE
[09:16:29.755]            // while "1"  (timeout="50000")
[09:16:29.755]            // while-condition  =>  TRUE
[09:16:29.755]            // while "1"  (timeout="50000")
[09:16:29.755]            // while-condition  =>  TRUE
[09:16:29.755]            // while "1"  (timeout="50000")
[09:16:29.756]            // while-condition  =>  TRUE
[09:16:29.756]            // while "1"  (timeout="50000")
[09:16:29.756]            // while-condition  =>  TRUE
[09:16:29.756]            // while "1"  (timeout="50000")
[09:16:29.756]            // while-condition  =>  TRUE
[09:16:29.757]            // while "1"  (timeout="50000")
[09:16:29.757]            // while-condition  =>  TRUE
[09:16:29.757]            // while "1"  (timeout="50000")
[09:16:29.757]            // while-condition  =>  TRUE
[09:16:29.757]            // while "1"  (timeout="50000")
[09:16:29.758]            // while-condition  =>  TRUE
[09:16:29.758]            // while "1"  (timeout="50000")
[09:16:29.758]            // while-condition  =>  TRUE
[09:16:29.758]            // while "1"  (timeout="50000")
[09:16:29.759]            // while-condition  =>  TRUE
[09:16:29.759]            // while "1"  (timeout="50000")
[09:16:29.759]            // while-condition  =>  TRUE
[09:16:29.759]            // while "1"  (timeout="50000")
[09:16:29.759]            // while-condition  =>  TRUE
[09:16:29.760]            // while "1"  (timeout="50000")
[09:16:29.760]            // while-condition  =>  TRUE
[09:16:29.760]            // while "1"  (timeout="50000")
[09:16:29.760]            // while-condition  =>  TRUE
[09:16:29.761]            // while "1"  (timeout="50000")
[09:16:29.761]            // while-condition  =>  TRUE
[09:16:29.761]            // while "1"  (timeout="50000")
[09:16:29.761]            // while-condition  =>  TRUE
[09:16:29.761]            // while "1"  (timeout="50000")
[09:16:29.762]            // while-condition  =>  TRUE
[09:16:29.762]            // while "1"  (timeout="50000")
[09:16:29.762]            // while-condition  =>  TRUE
[09:16:29.762]            // while "1"  (timeout="50000")
[09:16:29.762]            // while-condition  =>  TRUE
[09:16:29.763]            // while "1"  (timeout="50000")
[09:16:29.763]            // while-condition  =>  TRUE
[09:16:29.763]            // while "1"  (timeout="50000")
[09:16:29.763]            // while-condition  =>  TRUE
[09:16:29.763]            // while "1"  (timeout="50000")
[09:16:29.764]            // while-condition  =>  TRUE
[09:16:29.764]            // while "1"  (timeout="50000")
[09:16:29.764]            // while-condition  =>  TRUE
[09:16:29.764]            // while "1"  (timeout="50000")
[09:16:29.765]            // while-condition  =>  TRUE
[09:16:29.765]            // while "1"  (timeout="50000")
[09:16:29.765]            // while-condition  =>  TRUE
[09:16:29.765]            // while "1"  (timeout="50000")
[09:16:29.765]            // while-condition  =>  TRUE
[09:16:29.766]            // while "1"  (timeout="50000")
[09:16:29.766]            // while-condition  =>  TRUE
[09:16:29.766]            // while "1"  (timeout="50000")
[09:16:29.766]            // while-condition  =>  TRUE
[09:16:29.766]            // while "1"  (timeout="50000")
[09:16:29.767]            // while-condition  =>  TRUE
[09:16:29.767]            // while "1"  (timeout="50000")
[09:16:29.767]            // while-condition  =>  TRUE
[09:16:29.767]            // while "1"  (timeout="50000")
[09:16:29.768]            // while-condition  =>  TRUE
[09:16:29.768]            // while "1"  (timeout="50000")
[09:16:29.768]            // while-condition  =>  TRUE
[09:16:29.768]            // while "1"  (timeout="50000")
[09:16:29.768]            // while-condition  =>  TRUE
[09:16:29.769]            // while "1"  (timeout="50000")
[09:16:29.769]            // while-condition  =>  TRUE
[09:16:29.769]            // while "1"  (timeout="50000")
[09:16:29.769]            // while-condition  =>  TRUE
[09:16:29.770]            // while "1"  (timeout="50000")
[09:16:29.770]            // while-condition  =>  TRUE
[09:16:29.770]            // while "1"  (timeout="50000")
[09:16:29.770]            // while-condition  =>  TRUE
[09:16:29.771]            // while "1"  (timeout="50000")
[09:16:29.771]            // while-condition  =>  TRUE
[09:16:29.771]            // while "1"  (timeout="50000")
[09:16:29.771]            // while-condition  =>  TRUE
[09:16:29.772]            // while "1"  (timeout="50000")
[09:16:29.772]            // while-condition  =>  TRUE
[09:16:29.772]            // while "1"  (timeout="50000")
[09:16:29.772]            // while-condition  =>  TRUE
[09:16:29.773]            // while "1"  (timeout="50000")
[09:16:29.773]            // while-condition  =>  TRUE
[09:16:29.773]            // while "1"  (timeout="50000")
[09:16:29.773]            // while-condition  =>  TRUE
[09:16:29.773]            // while "1"  (timeout="50000")
[09:16:29.774]            // while-condition  =>  TRUE
[09:16:29.774]            // while "1"  (timeout="50000")
[09:16:29.774]            // while-condition  =>  TRUE
[09:16:29.774]            // while "1"  (timeout="50000")
[09:16:29.775]            // while-condition  =>  TRUE
[09:16:29.775]            // while "1"  (timeout="50000")
[09:16:29.775]            // while-condition  =>  TRUE
[09:16:29.775]            // while "1"  (timeout="50000")
[09:16:29.776]            // while-condition  =>  TRUE
[09:16:29.776]            // while "1"  (timeout="50000")
[09:16:29.776]            // while-condition  =>  TRUE
[09:16:29.776]            // while "1"  (timeout="50000")
[09:16:29.776]            // while-condition  =>  TRUE
[09:16:29.777]            // while "1"  (timeout="50000")
[09:16:29.777]            // while-condition  =>  TRUE
[09:16:29.777]            // while "1"  (timeout="50000")
[09:16:29.777]            // while-condition  =>  TRUE
[09:16:29.778]            // while "1"  (timeout="50000")
[09:16:29.778]            // while-condition  =>  TRUE
[09:16:29.778]            // while "1"  (timeout="50000")
[09:16:29.778]            // while-condition  =>  TRUE
[09:16:29.779]            // while "1"  (timeout="50000")
[09:16:29.779]            // while-condition  =>  TRUE
[09:16:29.779]            // while "1"  (timeout="50000")
[09:16:29.779]            // while-condition  =>  TRUE
[09:16:29.779]            // while "1"  (timeout="50000")
[09:16:29.780]            // while-condition  =>  TRUE
[09:16:29.780]            // while "1"  (timeout="50000")
[09:16:29.780]            // while-condition  =>  TRUE
[09:16:29.780]            // while "1"  (timeout="50000")
[09:16:29.781]            // while-condition  =>  TRUE
[09:16:29.781]            // while "1"  (timeout="50000")
[09:16:29.781]            // while-condition  =>  TRUE
[09:16:29.781]            // while "1"  (timeout="50000")
[09:16:29.782]            // while-condition  =>  TRUE
[09:16:29.782]            // while "1"  (timeout="50000")
[09:16:29.782]            // while-condition  =>  TRUE
[09:16:29.782]            // while "1"  (timeout="50000")
[09:16:29.783]            // while-condition  =>  TRUE
[09:16:29.783]            // while "1"  (timeout="50000")
[09:16:29.783]            // while-condition  =>  TRUE
[09:16:29.783]            // while "1"  (timeout="50000")
[09:16:29.783]            // while-condition  =>  TRUE
[09:16:29.784]            // while "1"  (timeout="50000")
[09:16:29.784]            // while-condition  =>  TRUE
[09:16:29.784]            // while "1"  (timeout="50000")
[09:16:29.784]            // while-condition  =>  TRUE
[09:16:29.785]            // while "1"  (timeout="50000")
[09:16:29.785]            // while-condition  =>  TRUE
[09:16:29.785]            // while "1"  (timeout="50000")
[09:16:29.785]            // while-condition  =>  TRUE
[09:16:29.785]            // while "1"  (timeout="50000")
[09:16:29.786]            // while-condition  =>  TRUE
[09:16:29.786]            // while "1"  (timeout="50000")
[09:16:29.786]            // while-condition  =>  TRUE
[09:16:29.787]            // while "1"  (timeout="50000")
[09:16:29.787]            // while-condition  =>  TRUE
[09:16:29.787]            // while "1"  (timeout="50000")
[09:16:29.787]            // while-condition  =>  TRUE
[09:16:29.788]            // while "1"  (timeout="50000")
[09:16:29.788]            // while-condition  =>  TRUE
[09:16:29.788]            // while "1"  (timeout="50000")
[09:16:29.788]            // while-condition  =>  TRUE
[09:16:29.789]            // while "1"  (timeout="50000")
[09:16:29.789]            // while-condition  =>  TRUE
[09:16:29.789]            // while "1"  (timeout="50000")
[09:16:29.789]            // while-condition  =>  TRUE
[09:16:29.789]            // while "1"  (timeout="50000")
[09:16:29.790]            // while-condition  =>  TRUE
[09:16:29.790]            // while "1"  (timeout="50000")
[09:16:29.790]            // while-condition  =>  TRUE
[09:16:29.790]            // while "1"  (timeout="50000")
[09:16:29.791]            // while-condition  =>  TRUE
[09:16:29.791]            // while "1"  (timeout="50000")
[09:16:29.791]            // while-condition  =>  TRUE
[09:16:29.791]            // while "1"  (timeout="50000")
[09:16:29.792]            // while-condition  =>  TRUE
[09:16:29.792]            // while "1"  (timeout="50000")
[09:16:29.792]            // while-condition  =>  TRUE
[09:16:29.792]            // while "1"  (timeout="50000")
[09:16:29.792]            // while-condition  =>  TRUE
[09:16:29.793]            // while "1"  (timeout="50000")
[09:16:29.793]            // while-condition  =>  TRUE
[09:16:29.793]            // while "1"  (timeout="50000")
[09:16:29.793]            // while-condition  =>  TRUE
[09:16:29.794]            // while "1"  (timeout="50000")
[09:16:29.794]            // while-condition  =>  TRUE
[09:16:29.794]            // while "1"  (timeout="50000")
[09:16:29.794]            // while-condition  =>  TRUE
[09:16:29.795]            // while "1"  (timeout="50000")
[09:16:29.795]            // while-condition  =>  TRUE
[09:16:29.795]            // while "1"  (timeout="50000")
[09:16:29.795]            // while-condition  =>  TRUE
[09:16:29.795]            // while "1"  (timeout="50000")
[09:16:29.796]            // while-condition  =>  TRUE
[09:16:29.796]            // while "1"  (timeout="50000")
[09:16:29.796]            // while-condition  =>  TRUE
[09:16:29.796]            // while "1"  (timeout="50000")
[09:16:29.797]            // while-condition  =>  TRUE
[09:16:29.797]            // while "1"  (timeout="50000")
[09:16:29.797]            // while-condition  =>  TRUE
[09:16:29.798]            // while "1"  (timeout="50000")
[09:16:29.798]            // while-condition  =>  TRUE
[09:16:29.798]            // while "1"  (timeout="50000")
[09:16:29.798]            // while-condition  =>  TRUE
[09:16:29.798]            // while "1"  (timeout="50000")
[09:16:29.799]            // while-condition  =>  TRUE
[09:16:29.799]            // while "1"  (timeout="50000")
[09:16:29.799]            // while  =>  TIMEOUT
[09:16:29.799]            // end while "1"
[09:16:29.800]          </control>
[09:16:29.800]          <block atomic="false" info="">
[09:16:29.800]            DAP_SWJ_Pins(nReset, nReset, 0);
[09:16:29.802]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:16:29.802]          </block>
[09:16:29.802]          <control if="" while="1" timeout="10000" info="">
[09:16:29.802]            // while "1"  (timeout="10000")
[09:16:29.803]            // while-condition  =>  TRUE
[09:16:29.803]            // while "1"  (timeout="10000")
[09:16:29.803]            // while-condition  =>  TRUE
[09:16:29.803]            // while "1"  (timeout="10000")
[09:16:29.804]            // while-condition  =>  TRUE
[09:16:29.804]            // while "1"  (timeout="10000")
[09:16:29.804]            // while-condition  =>  TRUE
[09:16:29.804]            // while "1"  (timeout="10000")
[09:16:29.805]            // while-condition  =>  TRUE
[09:16:29.805]            // while "1"  (timeout="10000")
[09:16:29.805]            // while-condition  =>  TRUE
[09:16:29.805]            // while "1"  (timeout="10000")
[09:16:29.805]            // while-condition  =>  TRUE
[09:16:29.806]            // while "1"  (timeout="10000")
[09:16:29.806]            // while-condition  =>  TRUE
[09:16:29.806]            // while "1"  (timeout="10000")
[09:16:29.806]            // while-condition  =>  TRUE
[09:16:29.807]            // while "1"  (timeout="10000")
[09:16:29.807]            // while-condition  =>  TRUE
[09:16:29.807]            // while "1"  (timeout="10000")
[09:16:29.807]            // while-condition  =>  TRUE
[09:16:29.807]            // while "1"  (timeout="10000")
[09:16:29.808]            // while-condition  =>  TRUE
[09:16:29.808]            // while "1"  (timeout="10000")
[09:16:29.808]            // while-condition  =>  TRUE
[09:16:29.808]            // while "1"  (timeout="10000")
[09:16:29.809]            // while-condition  =>  TRUE
[09:16:29.809]            // while "1"  (timeout="10000")
[09:16:29.809]            // while-condition  =>  TRUE
[09:16:29.809]            // while "1"  (timeout="10000")
[09:16:29.810]            // while-condition  =>  TRUE
[09:16:29.810]            // while "1"  (timeout="10000")
[09:16:29.810]            // while-condition  =>  TRUE
[09:16:29.810]            // while "1"  (timeout="10000")
[09:16:29.810]            // while-condition  =>  TRUE
[09:16:29.811]            // while "1"  (timeout="10000")
[09:16:29.811]            // while-condition  =>  TRUE
[09:16:29.811]            // while "1"  (timeout="10000")
[09:16:29.811]            // while-condition  =>  TRUE
[09:16:29.812]            // while "1"  (timeout="10000")
[09:16:29.812]            // while-condition  =>  TRUE
[09:16:29.812]            // while "1"  (timeout="10000")
[09:16:29.812]            // while-condition  =>  TRUE
[09:16:29.812]            // while "1"  (timeout="10000")
[09:16:29.813]            // while-condition  =>  TRUE
[09:16:29.813]            // while "1"  (timeout="10000")
[09:16:29.814]            // while-condition  =>  TRUE
[09:16:29.814]            // while "1"  (timeout="10000")
[09:16:29.814]            // while-condition  =>  TRUE
[09:16:29.815]            // while "1"  (timeout="10000")
[09:16:29.815]            // while  =>  TIMEOUT
[09:16:29.815]            // end while "1"
[09:16:29.815]          </control>
[09:16:29.815]          <block atomic="true" info="">
[09:16:29.819]  
[09:16:29.819]  ! W001 : No atomic sequence support in debug unit
[09:16:29.819]  
[09:16:29.821]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:16:29.823]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:16:29.823]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:16:29.826]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:16:29.826]          </block>
[09:16:29.826]          <block atomic="false" info="">
[09:16:29.827]            __errorcontrol = 0x00000001;
[09:16:29.828]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:16:29.828]            ReadDP(0x0);
[09:16:29.831]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:16:29.831]            __errorcontrol = 0x00000000;
[09:16:29.832]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:16:29.832]          </block>
[09:16:29.832]        </sequence>
[09:16:29.833]      Sequence("DebugPortSetup");
[09:16:29.833]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:16:29.833]        </sequence>
[09:16:29.834]      Sequence("DebugPortStart");
[09:16:29.834]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:16:29.834]          <block atomic="false" info="">
[09:16:29.835]            __var SW_DP_ABORT  = 0x0;
[09:16:29.835]              // -> [SW_DP_ABORT <= 0x00000000]
[09:16:29.835]            __var DP_CTRL_STAT = 0x4;
[09:16:29.836]              // -> [DP_CTRL_STAT <= 0x00000004]
[09:16:29.836]            __var DP_SELECT    = 0x8;
[09:16:29.836]              // -> [DP_SELECT <= 0x00000008]
[09:16:29.837]            __var powered_down = 0;
[09:16:29.837]              // -> [powered_down <= 0x00000000]
[09:16:29.837]            WriteDP(DP_SELECT, 0x00000000);
[09:16:29.839]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:16:29.839]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:16:29.841]              // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:16:29.841]              // -> [powered_down <= 0x00000000]
[09:16:29.842]          </block>
[09:16:29.842]          <control if="powered_down" while="" timeout="0" info="">
[09:16:29.842]            // if-block "powered_down"
[09:16:29.842]              // =>  FALSE
[09:16:29.843]            // skip if-block "powered_down"
[09:16:29.843]          </control>
[09:16:29.843]        </sequence>
[09:16:29.844]      Sequence("DebugCoreStart");
[09:16:29.844]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:16:29.844]          <block atomic="true" info="">
[09:16:29.847]  
[09:16:29.847]  ! W001 : No atomic sequence support in debug unit
[09:16:29.847]  
[09:16:29.849]            __var DP_R_IDCODE    = 0x0;
[09:16:29.849]              // -> [DP_R_IDCODE <= 0x00000000]
[09:16:29.850]            __var DP_W_ABORT    = 0x0;
[09:16:29.850]              // -> [DP_W_ABORT <= 0x00000000]
[09:16:29.850]            __var DP_CTRLSTAT = 0x4;
[09:16:29.851]              // -> [DP_CTRLSTAT <= 0x00000004]
[09:16:29.851]            __var DP_W_SELECT    = 0x8;
[09:16:29.851]              // -> [DP_W_SELECT <= 0x00000008]
[09:16:29.852]            __var AP_TAR		= 0x4;
[09:16:29.852]              // -> [AP_TAR <= 0x00000004]
[09:16:29.852]            __var AP_BD0		= 0x0;
[09:16:29.853]              // -> [AP_BD0 <= 0x00000000]
[09:16:29.853]            __var AP_BD1		= 0x4;
[09:16:29.853]              // -> [AP_BD1 <= 0x00000004]
[09:16:29.853]            __var AP_BD2		= 0x8;
[09:16:29.854]              // -> [AP_BD2 <= 0x00000008]
[09:16:29.854]            __var PCWithinFlash = 0;
[09:16:29.854]              // -> [PCWithinFlash <= 0x00000000]
[09:16:29.854]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:16:29.859]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.859]          </block>
[09:16:29.860]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:16:29.860]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:16:29.867]              // -> [Read32(0xE000EDF0) => 0x00030003]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.881]            // while-condition  =>  FALSE
[09:16:29.881]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:16:29.882]          </control>
[09:16:29.882]          <block atomic="true" info="">
[09:16:29.886]  
[09:16:29.886]  ! W001 : No atomic sequence support in debug unit
[09:16:29.886]  
[09:16:29.888]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:16:29.890]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:16:29.890]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:16:29.893]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.893]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:16:29.896]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:16:29.896]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:16:29.901]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.901]          </block>
[09:16:29.902]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:16:29.902]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.904]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.904]            // while-condition  =>  TRUE
[09:16:29.905]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.907]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.908]            // while-condition  =>  TRUE
[09:16:29.909]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.910]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.910]            // while-condition  =>  TRUE
[09:16:29.911]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.913]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.913]            // while-condition  =>  TRUE
[09:16:29.914]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.916]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.916]            // while-condition  =>  TRUE
[09:16:29.917]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.919]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.919]            // while-condition  =>  TRUE
[09:16:29.920]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.922]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.922]            // while-condition  =>  TRUE
[09:16:29.923]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.925]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.925]            // while-condition  =>  TRUE
[09:16:29.926]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.928]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.928]            // while-condition  =>  TRUE
[09:16:29.929]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.931]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.931]            // while-condition  =>  TRUE
[09:16:29.932]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.934]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.934]            // while-condition  =>  TRUE
[09:16:29.935]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.937]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.937]            // while-condition  =>  TRUE
[09:16:29.937]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.941]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.941]            // while-condition  =>  TRUE
[09:16:29.941]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.944]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.944]            // while-condition  =>  TRUE
[09:16:29.944]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.947]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.947]            // while-condition  =>  TRUE
[09:16:29.947]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.950]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.950]            // while-condition  =>  TRUE
[09:16:29.950]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.953]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.953]            // while-condition  =>  TRUE
[09:16:29.953]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.956]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.956]            // while-condition  =>  TRUE
[09:16:29.956]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.959]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.959]            // while-condition  =>  TRUE
[09:16:29.959]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.962]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.962]            // while-condition  =>  TRUE
[09:16:29.962]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.965]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.965]            // while-condition  =>  TRUE
[09:16:29.965]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.968]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.968]            // while-condition  =>  TRUE
[09:16:29.968]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.971]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.971]            // while-condition  =>  TRUE
[09:16:29.971]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.974]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.974]            // while-condition  =>  TRUE
[09:16:29.974]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.977]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.977]            // while-condition  =>  TRUE
[09:16:29.977]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.980]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.980]            // while-condition  =>  TRUE
[09:16:29.980]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.983]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.983]            // while-condition  =>  TRUE
[09:16:29.983]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.986]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.986]            // while-condition  =>  TRUE
[09:16:29.986]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.989]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.989]            // while-condition  =>  TRUE
[09:16:29.989]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.992]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.992]            // while-condition  =>  TRUE
[09:16:29.992]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.995]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.995]            // while-condition  =>  TRUE
[09:16:29.995]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:29.998]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:29.998]            // while-condition  =>  TRUE
[09:16:29.998]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:30.001]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:30.001]            // while-condition  =>  TRUE
[09:16:30.001]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:30.004]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:16:30.004]            // while-condition  =>  TRUE
[09:16:30.004]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:16:30.005]            // while  =>  TIMEOUT
[09:16:30.005]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:16:30.005]          </control>
[09:16:30.006]          <block atomic="false" info="">
[09:16:30.006]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:16:30.008]              // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:16:30.015]              // -> [PCWithinFlash <= 0x00000000]
[09:16:30.015]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:16:30.018]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:16:30.019]          </block>
[09:16:30.019]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:16:30.019]            // if-block "PCWithinFlash == 0"
[09:16:30.020]              // =>  TRUE
[09:16:30.020]            // end if-block "PCWithinFlash == 0"
[09:16:30.020]          </control>
[09:16:30.021]        </sequence>
[09:16:30.021]    </block>
[09:16:30.022]  </sequence>
[09:16:30.022]  
[09:16:40.996]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[09:16:40.996]  
[09:16:40.997]  <debugvars>
[09:16:40.998]    // Pre-defined
[09:16:40.998]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:16:40.999]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:16:40.999]    __dp=0x00000000
[09:16:41.000]    __ap=0x00000000
[09:16:41.000]    __traceout=0x00000000      (Trace Disabled)
[09:16:41.001]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:16:41.001]    __FlashAddr=0x00000000
[09:16:41.002]    __FlashLen=0x00000000
[09:16:41.002]    __FlashArg=0x00000000
[09:16:41.003]    __FlashOp=0x00000000
[09:16:41.003]    __Result=0x00000000
[09:16:41.004]  </debugvars>
[09:16:41.005]  
[09:16:41.005]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[09:16:41.006]    <block atomic="false" info="">
[09:16:41.006]      __var nReset      = 0x80;
[09:16:41.007]        // -> [nReset <= 0x00000080]
[09:16:41.007]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:16:41.010]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:16:41.010]    </block>
[09:16:41.011]    <control if="" while="1" timeout="50000" info="">
[09:16:41.011]      // while "1"  (timeout="50000")
[09:16:41.011]      // while-condition  =>  TRUE
[09:16:41.012]      // while "1"  (timeout="50000")
[09:16:41.013]      // while-condition  =>  TRUE
[09:16:41.013]      // while "1"  (timeout="50000")
[09:16:41.014]      // while-condition  =>  TRUE
[09:16:41.014]      // while "1"  (timeout="50000")
[09:16:41.015]      // while-condition  =>  TRUE
[09:16:41.015]      // while "1"  (timeout="50000")
[09:16:41.015]      // while-condition  =>  TRUE
[09:16:41.016]      // while "1"  (timeout="50000")
[09:16:41.016]      // while-condition  =>  TRUE
[09:16:41.016]      // while "1"  (timeout="50000")
[09:16:41.017]      // while-condition  =>  TRUE
[09:16:41.017]      // while "1"  (timeout="50000")
[09:16:41.017]      // while-condition  =>  TRUE
[09:16:41.017]      // while "1"  (timeout="50000")
[09:16:41.018]      // while-condition  =>  TRUE
[09:16:41.018]      // while "1"  (timeout="50000")
[09:16:41.018]      // while-condition  =>  TRUE
[09:16:41.019]      // while "1"  (timeout="50000")
[09:16:41.019]      // while-condition  =>  TRUE
[09:16:41.019]      // while "1"  (timeout="50000")
[09:16:41.019]      // while-condition  =>  TRUE
[09:16:41.020]      // while "1"  (timeout="50000")
[09:16:41.020]      // while-condition  =>  TRUE
[09:16:41.020]      // while "1"  (timeout="50000")
[09:16:41.020]      // while-condition  =>  TRUE
[09:16:41.021]      // while "1"  (timeout="50000")
[09:16:41.021]      // while-condition  =>  TRUE
[09:16:41.021]      // while "1"  (timeout="50000")
[09:16:41.021]      // while-condition  =>  TRUE
[09:16:41.022]      // while "1"  (timeout="50000")
[09:16:41.022]      // while-condition  =>  TRUE
[09:16:41.022]      // while "1"  (timeout="50000")
[09:16:41.022]      // while-condition  =>  TRUE
[09:16:41.023]      // while "1"  (timeout="50000")
[09:16:41.023]      // while-condition  =>  TRUE
[09:16:41.023]      // while "1"  (timeout="50000")
[09:16:41.023]      // while-condition  =>  TRUE
[09:16:41.023]      // while "1"  (timeout="50000")
[09:16:41.024]      // while-condition  =>  TRUE
[09:16:41.024]      // while "1"  (timeout="50000")
[09:16:41.024]      // while-condition  =>  TRUE
[09:16:41.025]      // while "1"  (timeout="50000")
[09:16:41.025]      // while-condition  =>  TRUE
[09:16:41.026]      // while "1"  (timeout="50000")
[09:16:41.026]      // while-condition  =>  TRUE
[09:16:41.026]      // while "1"  (timeout="50000")
[09:16:41.026]      // while-condition  =>  TRUE
[09:16:41.026]      // while "1"  (timeout="50000")
[09:16:41.026]      // while-condition  =>  TRUE
[09:16:41.026]      // while "1"  (timeout="50000")
[09:16:41.026]      // while-condition  =>  TRUE
[09:16:41.027]      // while "1"  (timeout="50000")
[09:16:41.027]      // while-condition  =>  TRUE
[09:16:41.027]      // while "1"  (timeout="50000")
[09:16:41.027]      // while-condition  =>  TRUE
[09:16:41.027]      // while "1"  (timeout="50000")
[09:16:41.028]      // while-condition  =>  TRUE
[09:16:41.029]      // while "1"  (timeout="50000")
[09:16:41.029]      // while-condition  =>  TRUE
[09:16:41.029]      // while "1"  (timeout="50000")
[09:16:41.029]      // while-condition  =>  TRUE
[09:16:41.030]      // while "1"  (timeout="50000")
[09:16:41.030]      // while-condition  =>  TRUE
[09:16:41.030]      // while "1"  (timeout="50000")
[09:16:41.030]      // while-condition  =>  TRUE
[09:16:41.030]      // while "1"  (timeout="50000")
[09:16:41.031]      // while-condition  =>  TRUE
[09:16:41.031]      // while "1"  (timeout="50000")
[09:16:41.031]      // while-condition  =>  TRUE
[09:16:41.031]      // while "1"  (timeout="50000")
[09:16:41.031]      // while-condition  =>  TRUE
[09:16:41.032]      // while "1"  (timeout="50000")
[09:16:41.032]      // while-condition  =>  TRUE
[09:16:41.032]      // while "1"  (timeout="50000")
[09:16:41.032]      // while-condition  =>  TRUE
[09:16:41.032]      // while "1"  (timeout="50000")
[09:16:41.033]      // while-condition  =>  TRUE
[09:16:41.033]      // while "1"  (timeout="50000")
[09:16:41.033]      // while-condition  =>  TRUE
[09:16:41.033]      // while "1"  (timeout="50000")
[09:16:41.033]      // while-condition  =>  TRUE
[09:16:41.034]      // while "1"  (timeout="50000")
[09:16:41.034]      // while-condition  =>  TRUE
[09:16:41.034]      // while "1"  (timeout="50000")
[09:16:41.034]      // while-condition  =>  TRUE
[09:16:41.034]      // while "1"  (timeout="50000")
[09:16:41.034]      // while-condition  =>  TRUE
[09:16:41.034]      // while "1"  (timeout="50000")
[09:16:41.035]      // while-condition  =>  TRUE
[09:16:41.035]      // while "1"  (timeout="50000")
[09:16:41.035]      // while-condition  =>  TRUE
[09:16:41.035]      // while "1"  (timeout="50000")
[09:16:41.035]      // while-condition  =>  TRUE
[09:16:41.035]      // while "1"  (timeout="50000")
[09:16:41.035]      // while-condition  =>  TRUE
[09:16:41.036]      // while "1"  (timeout="50000")
[09:16:41.036]      // while-condition  =>  TRUE
[09:16:41.037]      // while "1"  (timeout="50000")
[09:16:41.037]      // while-condition  =>  TRUE
[09:16:41.037]      // while "1"  (timeout="50000")
[09:16:41.037]      // while-condition  =>  TRUE
[09:16:41.037]      // while "1"  (timeout="50000")
[09:16:41.038]      // while-condition  =>  TRUE
[09:16:41.038]      // while "1"  (timeout="50000")
[09:16:41.038]      // while-condition  =>  TRUE
[09:16:41.038]      // while "1"  (timeout="50000")
[09:16:41.038]      // while-condition  =>  TRUE
[09:16:41.039]      // while "1"  (timeout="50000")
[09:16:41.039]      // while-condition  =>  TRUE
[09:16:41.039]      // while "1"  (timeout="50000")
[09:16:41.039]      // while-condition  =>  TRUE
[09:16:41.039]      // while "1"  (timeout="50000")
[09:16:41.040]      // while-condition  =>  TRUE
[09:16:41.040]      // while "1"  (timeout="50000")
[09:16:41.040]      // while-condition  =>  TRUE
[09:16:41.040]      // while "1"  (timeout="50000")
[09:16:41.040]      // while-condition  =>  TRUE
[09:16:41.041]      // while "1"  (timeout="50000")
[09:16:41.041]      // while-condition  =>  TRUE
[09:16:41.041]      // while "1"  (timeout="50000")
[09:16:41.041]      // while-condition  =>  TRUE
[09:16:41.041]      // while "1"  (timeout="50000")
[09:16:41.042]      // while-condition  =>  TRUE
[09:16:41.042]      // while "1"  (timeout="50000")
[09:16:41.042]      // while-condition  =>  TRUE
[09:16:41.042]      // while "1"  (timeout="50000")
[09:16:41.042]      // while-condition  =>  TRUE
[09:16:41.042]      // while "1"  (timeout="50000")
[09:16:41.042]      // while-condition  =>  TRUE
[09:16:41.042]      // while "1"  (timeout="50000")
[09:16:41.042]      // while-condition  =>  TRUE
[09:16:41.042]      // while "1"  (timeout="50000")
[09:16:41.042]      // while-condition  =>  TRUE
[09:16:41.044]      // while "1"  (timeout="50000")
[09:16:41.044]      // while-condition  =>  TRUE
[09:16:41.044]      // while "1"  (timeout="50000")
[09:16:41.044]      // while-condition  =>  TRUE
[09:16:41.044]      // while "1"  (timeout="50000")
[09:16:41.044]      // while-condition  =>  TRUE
[09:16:41.045]      // while "1"  (timeout="50000")
[09:16:41.045]      // while-condition  =>  TRUE
[09:16:41.045]      // while "1"  (timeout="50000")
[09:16:41.045]      // while-condition  =>  TRUE
[09:16:41.046]      // while "1"  (timeout="50000")
[09:16:41.046]      // while-condition  =>  TRUE
[09:16:41.046]      // while "1"  (timeout="50000")
[09:16:41.046]      // while-condition  =>  TRUE
[09:16:41.046]      // while "1"  (timeout="50000")
[09:16:41.047]      // while-condition  =>  TRUE
[09:16:41.047]      // while "1"  (timeout="50000")
[09:16:41.047]      // while-condition  =>  TRUE
[09:16:41.047]      // while "1"  (timeout="50000")
[09:16:41.047]      // while-condition  =>  TRUE
[09:16:41.048]      // while "1"  (timeout="50000")
[09:16:41.048]      // while-condition  =>  TRUE
[09:16:41.048]      // while "1"  (timeout="50000")
[09:16:41.048]      // while-condition  =>  TRUE
[09:16:41.048]      // while "1"  (timeout="50000")
[09:16:41.049]      // while-condition  =>  TRUE
[09:16:41.049]      // while "1"  (timeout="50000")
[09:16:41.049]      // while-condition  =>  TRUE
[09:16:41.049]      // while "1"  (timeout="50000")
[09:16:41.049]      // while-condition  =>  TRUE
[09:16:41.049]      // while "1"  (timeout="50000")
[09:16:41.050]      // while-condition  =>  TRUE
[09:16:41.050]      // while "1"  (timeout="50000")
[09:16:41.050]      // while-condition  =>  TRUE
[09:16:41.050]      // while "1"  (timeout="50000")
[09:16:41.051]      // while-condition  =>  TRUE
[09:16:41.051]      // while "1"  (timeout="50000")
[09:16:41.051]      // while-condition  =>  TRUE
[09:16:41.051]      // while "1"  (timeout="50000")
[09:16:41.051]      // while-condition  =>  TRUE
[09:16:41.052]      // while "1"  (timeout="50000")
[09:16:41.052]      // while-condition  =>  TRUE
[09:16:41.052]      // while "1"  (timeout="50000")
[09:16:41.052]      // while-condition  =>  TRUE
[09:16:41.052]      // while "1"  (timeout="50000")
[09:16:41.053]      // while-condition  =>  TRUE
[09:16:41.053]      // while "1"  (timeout="50000")
[09:16:41.053]      // while-condition  =>  TRUE
[09:16:41.053]      // while "1"  (timeout="50000")
[09:16:41.053]      // while-condition  =>  TRUE
[09:16:41.053]      // while "1"  (timeout="50000")
[09:16:41.053]      // while-condition  =>  TRUE
[09:16:41.054]      // while "1"  (timeout="50000")
[09:16:41.054]      // while-condition  =>  TRUE
[09:16:41.054]      // while "1"  (timeout="50000")
[09:16:41.054]      // while-condition  =>  TRUE
[09:16:41.054]      // while "1"  (timeout="50000")
[09:16:41.054]      // while-condition  =>  TRUE
[09:16:41.055]      // while "1"  (timeout="50000")
[09:16:41.055]      // while-condition  =>  TRUE
[09:16:41.055]      // while "1"  (timeout="50000")
[09:16:41.056]      // while-condition  =>  TRUE
[09:16:41.056]      // while "1"  (timeout="50000")
[09:16:41.056]      // while-condition  =>  TRUE
[09:16:41.056]      // while "1"  (timeout="50000")
[09:16:41.056]      // while-condition  =>  TRUE
[09:16:41.057]      // while "1"  (timeout="50000")
[09:16:41.057]      // while-condition  =>  TRUE
[09:16:41.057]      // while "1"  (timeout="50000")
[09:16:41.057]      // while-condition  =>  TRUE
[09:16:41.057]      // while "1"  (timeout="50000")
[09:16:41.058]      // while-condition  =>  TRUE
[09:16:41.058]      // while "1"  (timeout="50000")
[09:16:41.058]      // while-condition  =>  TRUE
[09:16:41.058]      // while "1"  (timeout="50000")
[09:16:41.058]      // while-condition  =>  TRUE
[09:16:41.058]      // while "1"  (timeout="50000")
[09:16:41.059]      // while-condition  =>  TRUE
[09:16:41.059]      // while "1"  (timeout="50000")
[09:16:41.059]      // while-condition  =>  TRUE
[09:16:41.059]      // while "1"  (timeout="50000")
[09:16:41.059]      // while-condition  =>  TRUE
[09:16:41.060]      // while "1"  (timeout="50000")
[09:16:41.060]      // while-condition  =>  TRUE
[09:16:41.060]      // while "1"  (timeout="50000")
[09:16:41.060]      // while-condition  =>  TRUE
[09:16:41.061]      // while "1"  (timeout="50000")
[09:16:41.061]      // while-condition  =>  TRUE
[09:16:41.061]      // while "1"  (timeout="50000")
[09:16:41.061]      // while-condition  =>  TRUE
[09:16:41.061]      // while "1"  (timeout="50000")
[09:16:41.062]      // while-condition  =>  TRUE
[09:16:41.062]      // while "1"  (timeout="50000")
[09:16:41.062]      // while-condition  =>  TRUE
[09:16:41.062]      // while "1"  (timeout="50000")
[09:16:41.062]      // while-condition  =>  TRUE
[09:16:41.063]      // while "1"  (timeout="50000")
[09:16:41.063]      // while-condition  =>  TRUE
[09:16:41.063]      // while "1"  (timeout="50000")
[09:16:41.063]      // while-condition  =>  TRUE
[09:16:41.063]      // while "1"  (timeout="50000")
[09:16:41.063]      // while-condition  =>  TRUE
[09:16:41.063]      // while "1"  (timeout="50000")
[09:16:41.064]      // while-condition  =>  TRUE
[09:16:41.064]      // while "1"  (timeout="50000")
[09:16:41.064]      // while  =>  TIMEOUT
[09:16:41.064]      // end while "1"
[09:16:41.064]    </control>
[09:16:41.065]    <block atomic="false" info="">
[09:16:41.065]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:16:41.067]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:16:41.067]    </block>
[09:16:41.067]  </sequence>
[09:16:41.068]  
[09:17:18.282]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:17:18.282]  
[09:17:18.282]  <debugvars>
[09:17:18.283]    // Pre-defined
[09:17:18.283]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:17:18.284]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:17:18.284]    __dp=0x00000000
[09:17:18.285]    __ap=0x00000000
[09:17:18.285]    __traceout=0x00000000      (Trace Disabled)
[09:17:18.285]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:17:18.286]    __FlashAddr=0x00000000
[09:17:18.286]    __FlashLen=0x00000000
[09:17:18.286]    __FlashArg=0x00000000
[09:17:18.287]    __FlashOp=0x00000000
[09:17:18.287]    __Result=0x00000000
[09:17:18.287]  </debugvars>
[09:17:18.288]  
[09:17:18.288]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:17:18.288]    <block atomic="false" info="">
[09:17:18.289]      __var nReset      = 0x80;
[09:17:18.289]        // -> [nReset <= 0x00000080]
[09:17:18.289]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:17:18.291]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:17:18.291]    </block>
[09:17:18.292]    <control if="" while="1" timeout="50000" info="">
[09:17:18.292]      // while "1"  (timeout="50000")
[09:17:18.292]      // while-condition  =>  TRUE
[09:17:18.292]      // while "1"  (timeout="50000")
[09:17:18.293]      // while-condition  =>  TRUE
[09:17:18.293]      // while "1"  (timeout="50000")
[09:17:18.293]      // while-condition  =>  TRUE
[09:17:18.293]      // while "1"  (timeout="50000")
[09:17:18.294]      // while-condition  =>  TRUE
[09:17:18.294]      // while "1"  (timeout="50000")
[09:17:18.294]      // while-condition  =>  TRUE
[09:17:18.294]      // while "1"  (timeout="50000")
[09:17:18.295]      // while-condition  =>  TRUE
[09:17:18.295]      // while "1"  (timeout="50000")
[09:17:18.295]      // while-condition  =>  TRUE
[09:17:18.295]      // while "1"  (timeout="50000")
[09:17:18.296]      // while-condition  =>  TRUE
[09:17:18.296]      // while "1"  (timeout="50000")
[09:17:18.296]      // while-condition  =>  TRUE
[09:17:18.297]      // while "1"  (timeout="50000")
[09:17:18.297]      // while-condition  =>  TRUE
[09:17:18.297]      // while "1"  (timeout="50000")
[09:17:18.298]      // while-condition  =>  TRUE
[09:17:18.298]      // while "1"  (timeout="50000")
[09:17:18.298]      // while-condition  =>  TRUE
[09:17:18.298]      // while "1"  (timeout="50000")
[09:17:18.298]      // while-condition  =>  TRUE
[09:17:18.299]      // while "1"  (timeout="50000")
[09:17:18.299]      // while-condition  =>  TRUE
[09:17:18.299]      // while "1"  (timeout="50000")
[09:17:18.299]      // while-condition  =>  TRUE
[09:17:18.300]      // while "1"  (timeout="50000")
[09:17:18.300]      // while-condition  =>  TRUE
[09:17:18.300]      // while "1"  (timeout="50000")
[09:17:18.300]      // while-condition  =>  TRUE
[09:17:18.300]      // while "1"  (timeout="50000")
[09:17:18.301]      // while-condition  =>  TRUE
[09:17:18.301]      // while "1"  (timeout="50000")
[09:17:18.301]      // while-condition  =>  TRUE
[09:17:18.301]      // while "1"  (timeout="50000")
[09:17:18.302]      // while-condition  =>  TRUE
[09:17:18.302]      // while "1"  (timeout="50000")
[09:17:18.302]      // while-condition  =>  TRUE
[09:17:18.302]      // while "1"  (timeout="50000")
[09:17:18.302]      // while-condition  =>  TRUE
[09:17:18.303]      // while "1"  (timeout="50000")
[09:17:18.303]      // while-condition  =>  TRUE
[09:17:18.303]      // while "1"  (timeout="50000")
[09:17:18.303]      // while-condition  =>  TRUE
[09:17:18.304]      // while "1"  (timeout="50000")
[09:17:18.304]      // while-condition  =>  TRUE
[09:17:18.304]      // while "1"  (timeout="50000")
[09:17:18.304]      // while-condition  =>  TRUE
[09:17:18.304]      // while "1"  (timeout="50000")
[09:17:18.305]      // while-condition  =>  TRUE
[09:17:18.305]      // while "1"  (timeout="50000")
[09:17:18.305]      // while-condition  =>  TRUE
[09:17:18.305]      // while "1"  (timeout="50000")
[09:17:18.306]      // while-condition  =>  TRUE
[09:17:18.306]      // while "1"  (timeout="50000")
[09:17:18.306]      // while-condition  =>  TRUE
[09:17:18.306]      // while "1"  (timeout="50000")
[09:17:18.306]      // while-condition  =>  TRUE
[09:17:18.307]      // while "1"  (timeout="50000")
[09:17:18.307]      // while-condition  =>  TRUE
[09:17:18.307]      // while "1"  (timeout="50000")
[09:17:18.307]      // while-condition  =>  TRUE
[09:17:18.308]      // while "1"  (timeout="50000")
[09:17:18.308]      // while-condition  =>  TRUE
[09:17:18.308]      // while "1"  (timeout="50000")
[09:17:18.308]      // while-condition  =>  TRUE
[09:17:18.308]      // while "1"  (timeout="50000")
[09:17:18.309]      // while-condition  =>  TRUE
[09:17:18.309]      // while "1"  (timeout="50000")
[09:17:18.309]      // while-condition  =>  TRUE
[09:17:18.309]      // while "1"  (timeout="50000")
[09:17:18.310]      // while-condition  =>  TRUE
[09:17:18.310]      // while "1"  (timeout="50000")
[09:17:18.310]      // while-condition  =>  TRUE
[09:17:18.310]      // while "1"  (timeout="50000")
[09:17:18.310]      // while-condition  =>  TRUE
[09:17:18.311]      // while "1"  (timeout="50000")
[09:17:18.311]      // while-condition  =>  TRUE
[09:17:18.311]      // while "1"  (timeout="50000")
[09:17:18.311]      // while-condition  =>  TRUE
[09:17:18.311]      // while "1"  (timeout="50000")
[09:17:18.312]      // while-condition  =>  TRUE
[09:17:18.312]      // while "1"  (timeout="50000")
[09:17:18.312]      // while-condition  =>  TRUE
[09:17:18.312]      // while "1"  (timeout="50000")
[09:17:18.312]      // while-condition  =>  TRUE
[09:17:18.313]      // while "1"  (timeout="50000")
[09:17:18.313]      // while-condition  =>  TRUE
[09:17:18.313]      // while "1"  (timeout="50000")
[09:17:18.313]      // while-condition  =>  TRUE
[09:17:18.313]      // while "1"  (timeout="50000")
[09:17:18.314]      // while-condition  =>  TRUE
[09:17:18.314]      // while "1"  (timeout="50000")
[09:17:18.314]      // while-condition  =>  TRUE
[09:17:18.314]      // while "1"  (timeout="50000")
[09:17:18.314]      // while-condition  =>  TRUE
[09:17:18.315]      // while "1"  (timeout="50000")
[09:17:18.315]      // while-condition  =>  TRUE
[09:17:18.315]      // while "1"  (timeout="50000")
[09:17:18.315]      // while-condition  =>  TRUE
[09:17:18.315]      // while "1"  (timeout="50000")
[09:17:18.316]      // while-condition  =>  TRUE
[09:17:18.316]      // while "1"  (timeout="50000")
[09:17:18.316]      // while-condition  =>  TRUE
[09:17:18.316]      // while "1"  (timeout="50000")
[09:17:18.316]      // while-condition  =>  TRUE
[09:17:18.317]      // while "1"  (timeout="50000")
[09:17:18.317]      // while-condition  =>  TRUE
[09:17:18.317]      // while "1"  (timeout="50000")
[09:17:18.317]      // while-condition  =>  TRUE
[09:17:18.317]      // while "1"  (timeout="50000")
[09:17:18.318]      // while-condition  =>  TRUE
[09:17:18.318]      // while "1"  (timeout="50000")
[09:17:18.318]      // while-condition  =>  TRUE
[09:17:18.318]      // while "1"  (timeout="50000")
[09:17:18.319]      // while-condition  =>  TRUE
[09:17:18.319]      // while "1"  (timeout="50000")
[09:17:18.319]      // while-condition  =>  TRUE
[09:17:18.319]      // while "1"  (timeout="50000")
[09:17:18.319]      // while-condition  =>  TRUE
[09:17:18.320]      // while "1"  (timeout="50000")
[09:17:18.320]      // while-condition  =>  TRUE
[09:17:18.320]      // while "1"  (timeout="50000")
[09:17:18.320]      // while-condition  =>  TRUE
[09:17:18.321]      // while "1"  (timeout="50000")
[09:17:18.321]      // while-condition  =>  TRUE
[09:17:18.321]      // while "1"  (timeout="50000")
[09:17:18.321]      // while-condition  =>  TRUE
[09:17:18.321]      // while "1"  (timeout="50000")
[09:17:18.322]      // while-condition  =>  TRUE
[09:17:18.322]      // while "1"  (timeout="50000")
[09:17:18.322]      // while-condition  =>  TRUE
[09:17:18.322]      // while "1"  (timeout="50000")
[09:17:18.322]      // while-condition  =>  TRUE
[09:17:18.323]      // while "1"  (timeout="50000")
[09:17:18.323]      // while-condition  =>  TRUE
[09:17:18.323]      // while "1"  (timeout="50000")
[09:17:18.323]      // while-condition  =>  TRUE
[09:17:18.324]      // while "1"  (timeout="50000")
[09:17:18.324]      // while-condition  =>  TRUE
[09:17:18.324]      // while "1"  (timeout="50000")
[09:17:18.324]      // while-condition  =>  TRUE
[09:17:18.325]      // while "1"  (timeout="50000")
[09:17:18.325]      // while-condition  =>  TRUE
[09:17:18.325]      // while "1"  (timeout="50000")
[09:17:18.325]      // while-condition  =>  TRUE
[09:17:18.326]      // while "1"  (timeout="50000")
[09:17:18.326]      // while-condition  =>  TRUE
[09:17:18.326]      // while "1"  (timeout="50000")
[09:17:18.326]      // while-condition  =>  TRUE
[09:17:18.326]      // while "1"  (timeout="50000")
[09:17:18.327]      // while-condition  =>  TRUE
[09:17:18.327]      // while "1"  (timeout="50000")
[09:17:18.327]      // while-condition  =>  TRUE
[09:17:18.327]      // while "1"  (timeout="50000")
[09:17:18.328]      // while-condition  =>  TRUE
[09:17:18.328]      // while "1"  (timeout="50000")
[09:17:18.328]      // while-condition  =>  TRUE
[09:17:18.328]      // while "1"  (timeout="50000")
[09:17:18.328]      // while-condition  =>  TRUE
[09:17:18.329]      // while "1"  (timeout="50000")
[09:17:18.329]      // while-condition  =>  TRUE
[09:17:18.329]      // while "1"  (timeout="50000")
[09:17:18.329]      // while-condition  =>  TRUE
[09:17:18.329]      // while "1"  (timeout="50000")
[09:17:18.330]      // while-condition  =>  TRUE
[09:17:18.330]      // while "1"  (timeout="50000")
[09:17:18.330]      // while-condition  =>  TRUE
[09:17:18.330]      // while "1"  (timeout="50000")
[09:17:18.331]      // while-condition  =>  TRUE
[09:17:18.331]      // while "1"  (timeout="50000")
[09:17:18.331]      // while-condition  =>  TRUE
[09:17:18.331]      // while "1"  (timeout="50000")
[09:17:18.331]      // while-condition  =>  TRUE
[09:17:18.332]      // while "1"  (timeout="50000")
[09:17:18.332]      // while-condition  =>  TRUE
[09:17:18.332]      // while "1"  (timeout="50000")
[09:17:18.332]      // while-condition  =>  TRUE
[09:17:18.333]      // while "1"  (timeout="50000")
[09:17:18.333]      // while-condition  =>  TRUE
[09:17:18.333]      // while "1"  (timeout="50000")
[09:17:18.333]      // while-condition  =>  TRUE
[09:17:18.333]      // while "1"  (timeout="50000")
[09:17:18.334]      // while-condition  =>  TRUE
[09:17:18.334]      // while "1"  (timeout="50000")
[09:17:18.334]      // while-condition  =>  TRUE
[09:17:18.334]      // while "1"  (timeout="50000")
[09:17:18.335]      // while-condition  =>  TRUE
[09:17:18.335]      // while "1"  (timeout="50000")
[09:17:18.335]      // while-condition  =>  TRUE
[09:17:18.335]      // while "1"  (timeout="50000")
[09:17:18.335]      // while-condition  =>  TRUE
[09:17:18.336]      // while "1"  (timeout="50000")
[09:17:18.336]      // while-condition  =>  TRUE
[09:17:18.336]      // while "1"  (timeout="50000")
[09:17:18.336]      // while-condition  =>  TRUE
[09:17:18.337]      // while "1"  (timeout="50000")
[09:17:18.337]      // while-condition  =>  TRUE
[09:17:18.337]      // while "1"  (timeout="50000")
[09:17:18.337]      // while-condition  =>  TRUE
[09:17:18.338]      // while "1"  (timeout="50000")
[09:17:18.338]      // while-condition  =>  TRUE
[09:17:18.338]      // while "1"  (timeout="50000")
[09:17:18.338]      // while-condition  =>  TRUE
[09:17:18.339]      // while "1"  (timeout="50000")
[09:17:18.339]      // while-condition  =>  TRUE
[09:17:18.339]      // while "1"  (timeout="50000")
[09:17:18.339]      // while-condition  =>  TRUE
[09:17:18.340]      // while "1"  (timeout="50000")
[09:17:18.340]      // while-condition  =>  TRUE
[09:17:18.340]      // while "1"  (timeout="50000")
[09:17:18.341]      // while-condition  =>  TRUE
[09:17:18.341]      // while "1"  (timeout="50000")
[09:17:18.341]      // while-condition  =>  TRUE
[09:17:18.341]      // while "1"  (timeout="50000")
[09:17:18.342]      // while-condition  =>  TRUE
[09:17:18.342]      // while "1"  (timeout="50000")
[09:17:18.342]      // while-condition  =>  TRUE
[09:17:18.343]      // while "1"  (timeout="50000")
[09:17:18.343]      // while-condition  =>  TRUE
[09:17:18.343]      // while "1"  (timeout="50000")
[09:17:18.343]      // while-condition  =>  TRUE
[09:17:18.344]      // while "1"  (timeout="50000")
[09:17:18.344]      // while-condition  =>  TRUE
[09:17:18.344]      // while "1"  (timeout="50000")
[09:17:18.344]      // while-condition  =>  TRUE
[09:17:18.344]      // while "1"  (timeout="50000")
[09:17:18.345]      // while-condition  =>  TRUE
[09:17:18.345]      // while "1"  (timeout="50000")
[09:17:18.345]      // while  =>  TIMEOUT
[09:17:18.346]      // end while "1"
[09:17:18.346]    </control>
[09:17:18.346]    <block atomic="false" info="">
[09:17:18.346]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:17:18.348]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:17:18.349]    </block>
[09:17:18.349]    <control if="" while="1" timeout="10000" info="">
[09:17:18.349]      // while "1"  (timeout="10000")
[09:17:18.349]      // while-condition  =>  TRUE
[09:17:18.350]      // while "1"  (timeout="10000")
[09:17:18.350]      // while-condition  =>  TRUE
[09:17:18.350]      // while "1"  (timeout="10000")
[09:17:18.350]      // while-condition  =>  TRUE
[09:17:18.351]      // while "1"  (timeout="10000")
[09:17:18.351]      // while-condition  =>  TRUE
[09:17:18.351]      // while "1"  (timeout="10000")
[09:17:18.352]      // while-condition  =>  TRUE
[09:17:18.352]      // while "1"  (timeout="10000")
[09:17:18.352]      // while-condition  =>  TRUE
[09:17:18.352]      // while "1"  (timeout="10000")
[09:17:18.353]      // while-condition  =>  TRUE
[09:17:18.353]      // while "1"  (timeout="10000")
[09:17:18.353]      // while-condition  =>  TRUE
[09:17:18.354]      // while "1"  (timeout="10000")
[09:17:18.354]      // while-condition  =>  TRUE
[09:17:18.354]      // while "1"  (timeout="10000")
[09:17:18.355]      // while-condition  =>  TRUE
[09:17:18.355]      // while "1"  (timeout="10000")
[09:17:18.355]      // while-condition  =>  TRUE
[09:17:18.355]      // while "1"  (timeout="10000")
[09:17:18.356]      // while-condition  =>  TRUE
[09:17:18.356]      // while "1"  (timeout="10000")
[09:17:18.356]      // while-condition  =>  TRUE
[09:17:18.357]      // while "1"  (timeout="10000")
[09:17:18.357]      // while-condition  =>  TRUE
[09:17:18.357]      // while "1"  (timeout="10000")
[09:17:18.357]      // while-condition  =>  TRUE
[09:17:18.358]      // while "1"  (timeout="10000")
[09:17:18.358]      // while-condition  =>  TRUE
[09:17:18.358]      // while "1"  (timeout="10000")
[09:17:18.359]      // while-condition  =>  TRUE
[09:17:18.359]      // while "1"  (timeout="10000")
[09:17:18.359]      // while-condition  =>  TRUE
[09:17:18.360]      // while "1"  (timeout="10000")
[09:17:18.360]      // while-condition  =>  TRUE
[09:17:18.361]      // while "1"  (timeout="10000")
[09:17:18.361]      // while  =>  TIMEOUT
[09:17:18.361]      // end while "1"
[09:17:18.362]    </control>
[09:17:18.362]    <block atomic="true" info="">
[09:17:18.365]  
[09:17:18.365]  ! W001 : No atomic sequence support in debug unit
[09:17:18.365]  
[09:17:18.367]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:17:18.369]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:17:18.369]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:17:18.372]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:17:18.372]    </block>
[09:17:18.373]    <block atomic="false" info="">
[09:17:18.373]      __errorcontrol = 0x00000001;
[09:17:18.374]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:17:18.374]      ReadDP(0x0);
[09:17:18.376]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:17:18.376]      __errorcontrol = 0x00000000;
[09:17:18.376]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:17:18.377]    </block>
[09:17:18.377]  </sequence>
[09:17:18.377]  
[09:17:18.378]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:17:18.378]  
[09:17:18.378]  <debugvars>
[09:17:18.378]    // Pre-defined
[09:17:18.379]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:17:18.379]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:17:18.380]    __dp=0x00000000
[09:17:18.380]    __ap=0x00000000
[09:17:18.380]    __traceout=0x00000000      (Trace Disabled)
[09:17:18.381]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:17:18.381]    __FlashAddr=0x00000000
[09:17:18.381]    __FlashLen=0x00000000
[09:17:18.382]    __FlashArg=0x00000000
[09:17:18.382]    __FlashOp=0x00000000
[09:17:18.382]    __Result=0x00000000
[09:17:18.382]  </debugvars>
[09:17:18.383]  
[09:17:18.383]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:17:18.383]  </sequence>
[09:17:18.384]  
[09:17:18.388]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[09:17:18.388]  
[09:17:18.388]  <debugvars>
[09:17:18.389]    // Pre-defined
[09:17:18.389]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:17:18.389]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:17:18.390]    __dp=0x00000000
[09:17:18.390]    __ap=0x00000000
[09:17:18.390]    __traceout=0x00000000      (Trace Disabled)
[09:17:18.391]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:17:18.391]    __FlashAddr=0x00000000
[09:17:18.391]    __FlashLen=0x00000000
[09:17:18.392]    __FlashArg=0x00000000
[09:17:18.392]    __FlashOp=0x00000000
[09:17:18.392]    __Result=0x00000000
[09:17:18.393]  </debugvars>
[09:17:18.393]  
[09:17:18.393]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:17:18.393]    <block atomic="false" info="">
[09:17:18.394]      __var SW_DP_ABORT  = 0x0;
[09:17:18.394]        // -> [SW_DP_ABORT <= 0x00000000]
[09:17:18.394]      __var DP_CTRL_STAT = 0x4;
[09:17:18.395]        // -> [DP_CTRL_STAT <= 0x00000004]
[09:17:18.395]      __var DP_SELECT    = 0x8;
[09:17:18.395]        // -> [DP_SELECT <= 0x00000008]
[09:17:18.395]      __var powered_down = 0;
[09:17:18.396]        // -> [powered_down <= 0x00000000]
[09:17:18.396]      WriteDP(DP_SELECT, 0x00000000);
[09:17:18.398]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:17:18.398]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:17:18.400]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[09:17:18.400]        // -> [powered_down <= 0x00000001]
[09:17:18.400]    </block>
[09:17:18.401]    <control if="powered_down" while="" timeout="0" info="">
[09:17:18.401]      // if-block "powered_down"
[09:17:18.401]        // =>  TRUE
[09:17:18.401]      <block atomic="false" info="">
[09:17:18.402]        WriteDP(DP_CTRL_STAT, 0x50000000);
[09:17:18.404]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[09:17:18.404]      </block>
[09:17:18.404]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[09:17:18.405]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[09:17:18.407]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:17:18.407]        // while-condition  =>  FALSE
[09:17:18.407]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[09:17:18.408]      </control>
[09:17:18.408]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[09:17:18.408]        // if-block "(__protocol & 0xFFFF) == 1"
[09:17:18.409]          // =>  FALSE
[09:17:18.409]        // skip if-block "(__protocol & 0xFFFF) == 1"
[09:17:18.409]      </control>
[09:17:18.409]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[09:17:18.410]        // if-block "(__protocol & 0xFFFF) == 2"
[09:17:18.410]          // =>  TRUE
[09:17:18.410]        <block atomic="false" info="">
[09:17:18.411]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[09:17:18.413]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[09:17:18.413]          WriteDP(SW_DP_ABORT, 0x0000001E);
[09:17:18.415]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[09:17:18.415]        </block>
[09:17:18.415]        // end if-block "(__protocol & 0xFFFF) == 2"
[09:17:18.416]      </control>
[09:17:18.416]      // end if-block "powered_down"
[09:17:18.416]    </control>
[09:17:18.417]  </sequence>
[09:17:18.417]  
[09:17:18.521]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:17:18.521]  
[09:17:18.522]  <debugvars>
[09:17:18.522]    // Pre-defined
[09:17:18.523]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:17:18.523]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:17:18.523]    __dp=0x00000000
[09:17:18.524]    __ap=0x00000000
[09:17:18.524]    __traceout=0x00000000      (Trace Disabled)
[09:17:18.524]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:17:18.525]    __FlashAddr=0x00000000
[09:17:18.525]    __FlashLen=0x00000000
[09:17:18.525]    __FlashArg=0x00000000
[09:17:18.526]    __FlashOp=0x00000000
[09:17:18.526]    __Result=0x00000000
[09:17:18.526]  </debugvars>
[09:17:18.526]  
[09:17:18.527]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:17:18.527]    <block atomic="true" info="">
[09:17:18.531]  
[09:17:18.531]  ! W001 : No atomic sequence support in debug unit
[09:17:18.531]  
[09:17:18.533]      __var DP_R_IDCODE    = 0x0;
[09:17:18.533]        // -> [DP_R_IDCODE <= 0x00000000]
[09:17:18.533]      __var DP_W_ABORT    = 0x0;
[09:17:18.534]        // -> [DP_W_ABORT <= 0x00000000]
[09:17:18.534]      __var DP_CTRLSTAT = 0x4;
[09:17:18.535]        // -> [DP_CTRLSTAT <= 0x00000004]
[09:17:18.535]      __var DP_W_SELECT    = 0x8;
[09:17:18.535]        // -> [DP_W_SELECT <= 0x00000008]
[09:17:18.536]      __var AP_TAR		= 0x4;
[09:17:18.536]        // -> [AP_TAR <= 0x00000004]
[09:17:18.536]      __var AP_BD0		= 0x0;
[09:17:18.537]        // -> [AP_BD0 <= 0x00000000]
[09:17:18.537]      __var AP_BD1		= 0x4;
[09:17:18.537]        // -> [AP_BD1 <= 0x00000004]
[09:17:18.538]      __var AP_BD2		= 0x8;
[09:17:18.538]        // -> [AP_BD2 <= 0x00000008]
[09:17:18.538]      __var PCWithinFlash = 0;
[09:17:18.539]        // -> [PCWithinFlash <= 0x00000000]
[09:17:18.539]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:17:18.545]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.561]    </block>
[09:17:18.562]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:17:18.562]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:17:18.568]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.569]      // while-condition  =>  FALSE
[09:17:18.569]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:17:18.569]    </control>
[09:17:18.569]    <block atomic="true" info="">
[09:17:18.578]  
[09:17:18.578]  ! W001 : No atomic sequence support in debug unit
[09:17:18.578]  
[09:17:18.581]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:17:18.583]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:17:18.584]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:17:18.585]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.586]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:17:18.587]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:17:18.588]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:17:18.591]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.592]    </block>
[09:17:18.592]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:17:18.592]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.594]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.595]      // while-condition  =>  TRUE
[09:17:18.595]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.596]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.597]      // while-condition  =>  TRUE
[09:17:18.597]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.599]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.600]      // while-condition  =>  TRUE
[09:17:18.600]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.601]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.602]      // while-condition  =>  TRUE
[09:17:18.602]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.604]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.605]      // while-condition  =>  TRUE
[09:17:18.605]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.607]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.608]      // while-condition  =>  TRUE
[09:17:18.608]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.610]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.611]      // while-condition  =>  TRUE
[09:17:18.611]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.613]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.614]      // while-condition  =>  TRUE
[09:17:18.614]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.616]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.617]      // while-condition  =>  TRUE
[09:17:18.617]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.619]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.620]      // while-condition  =>  TRUE
[09:17:18.620]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.622]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.623]      // while-condition  =>  TRUE
[09:17:18.623]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.625]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.626]      // while-condition  =>  TRUE
[09:17:18.626]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.629]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.629]      // while-condition  =>  TRUE
[09:17:18.629]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.632]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.633]      // while-condition  =>  TRUE
[09:17:18.634]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.637]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.638]      // while-condition  =>  TRUE
[09:17:18.638]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.641]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.641]      // while-condition  =>  TRUE
[09:17:18.641]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.644]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.644]      // while-condition  =>  TRUE
[09:17:18.644]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.647]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.647]      // while-condition  =>  TRUE
[09:17:18.647]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.650]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.650]      // while-condition  =>  TRUE
[09:17:18.650]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.653]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.653]      // while-condition  =>  TRUE
[09:17:18.653]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.656]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.656]      // while-condition  =>  TRUE
[09:17:18.656]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.659]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.659]      // while-condition  =>  TRUE
[09:17:18.659]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.662]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.662]      // while-condition  =>  TRUE
[09:17:18.662]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.665]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.665]      // while-condition  =>  TRUE
[09:17:18.665]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.668]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.668]      // while-condition  =>  TRUE
[09:17:18.668]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.671]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.671]      // while-condition  =>  TRUE
[09:17:18.671]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.674]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.674]      // while-condition  =>  TRUE
[09:17:18.674]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.677]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.677]      // while-condition  =>  TRUE
[09:17:18.677]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.679]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.679]      // while-condition  =>  TRUE
[09:17:18.679]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.682]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.682]      // while-condition  =>  TRUE
[09:17:18.682]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.685]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.685]      // while-condition  =>  TRUE
[09:17:18.685]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.688]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.688]      // while-condition  =>  TRUE
[09:17:18.688]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:18.688]      // while  =>  TIMEOUT
[09:17:18.689]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:17:18.689]    </control>
[09:17:18.689]    <block atomic="false" info="">
[09:17:18.689]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:17:18.692]        // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:17:18.692]        // -> [PCWithinFlash <= 0x00000000]
[09:17:18.692]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:17:18.695]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:17:18.695]    </block>
[09:17:18.695]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:17:18.695]      // if-block "PCWithinFlash == 0"
[09:17:18.696]        // =>  TRUE
[09:17:18.696]      // end if-block "PCWithinFlash == 0"
[09:17:18.696]    </control>
[09:17:18.696]  </sequence>
[09:17:18.697]  
[09:17:18.743]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[09:17:18.743]  
[09:17:18.744]  <debugvars>
[09:17:18.744]    // Pre-defined
[09:17:18.744]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:17:18.744]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:17:18.745]    __dp=0x00000000
[09:17:18.745]    __ap=0x00000000
[09:17:18.745]    __traceout=0x00000000      (Trace Disabled)
[09:17:18.745]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:17:18.745]    __FlashAddr=0x00000000
[09:17:18.746]    __FlashLen=0x00000000
[09:17:18.746]    __FlashArg=0x00000000
[09:17:18.746]    __FlashOp=0x00000000
[09:17:18.746]    __Result=0x00000000
[09:17:18.747]  </debugvars>
[09:17:18.747]  
[09:17:18.747]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[09:17:18.747]    <block atomic="false" info="">
[09:17:18.748]    </block>
[09:17:18.748]  </sequence>
[09:17:18.748]  
[09:17:18.750]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[09:17:18.750]  
[09:17:18.750]  <debugvars>
[09:17:18.750]    // Pre-defined
[09:17:18.751]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:17:18.751]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:17:18.751]    __dp=0x00000000
[09:17:18.751]    __ap=0x00000000
[09:17:18.752]    __traceout=0x00000000      (Trace Disabled)
[09:17:18.752]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:17:18.752]    __FlashAddr=0x00000000
[09:17:18.752]    __FlashLen=0x00000000
[09:17:18.752]    __FlashArg=0x00000000
[09:17:18.753]    __FlashOp=0x00000000
[09:17:18.753]    __Result=0x00000000
[09:17:18.753]  </debugvars>
[09:17:18.753]  
[09:17:18.754]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:17:18.754]    <block atomic="false" info="">
[09:17:18.754]      __var nReset      = 0x80;
[09:17:18.754]        // -> [nReset <= 0x00000080]
[09:17:18.754]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:17:18.757]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:17:18.757]    </block>
[09:17:18.757]    <control if="" while="1" timeout="50000" info="">
[09:17:18.758]      // while "1"  (timeout="50000")
[09:17:18.758]      // while-condition  =>  TRUE
[09:17:18.758]      // while "1"  (timeout="50000")
[09:17:18.758]      // while-condition  =>  TRUE
[09:17:18.759]      // while "1"  (timeout="50000")
[09:17:18.759]      // while-condition  =>  TRUE
[09:17:18.759]      // while "1"  (timeout="50000")
[09:17:18.759]      // while-condition  =>  TRUE
[09:17:18.759]      // while "1"  (timeout="50000")
[09:17:18.760]      // while-condition  =>  TRUE
[09:17:18.760]      // while "1"  (timeout="50000")
[09:17:18.760]      // while-condition  =>  TRUE
[09:17:18.760]      // while "1"  (timeout="50000")
[09:17:18.761]      // while-condition  =>  TRUE
[09:17:18.761]      // while "1"  (timeout="50000")
[09:17:18.761]      // while-condition  =>  TRUE
[09:17:18.761]      // while "1"  (timeout="50000")
[09:17:18.762]      // while-condition  =>  TRUE
[09:17:18.762]      // while "1"  (timeout="50000")
[09:17:18.762]      // while-condition  =>  TRUE
[09:17:18.762]      // while "1"  (timeout="50000")
[09:17:18.763]      // while-condition  =>  TRUE
[09:17:18.763]      // while "1"  (timeout="50000")
[09:17:18.763]      // while-condition  =>  TRUE
[09:17:18.763]      // while "1"  (timeout="50000")
[09:17:18.763]      // while-condition  =>  TRUE
[09:17:18.764]      // while "1"  (timeout="50000")
[09:17:18.764]      // while-condition  =>  TRUE
[09:17:18.764]      // while "1"  (timeout="50000")
[09:17:18.764]      // while-condition  =>  TRUE
[09:17:18.765]      // while "1"  (timeout="50000")
[09:17:18.765]      // while-condition  =>  TRUE
[09:17:18.765]      // while "1"  (timeout="50000")
[09:17:18.765]      // while-condition  =>  TRUE
[09:17:18.765]      // while "1"  (timeout="50000")
[09:17:18.766]      // while-condition  =>  TRUE
[09:17:18.766]      // while "1"  (timeout="50000")
[09:17:18.766]      // while-condition  =>  TRUE
[09:17:18.766]      // while "1"  (timeout="50000")
[09:17:18.767]      // while-condition  =>  TRUE
[09:17:18.767]      // while "1"  (timeout="50000")
[09:17:18.767]      // while-condition  =>  TRUE
[09:17:18.767]      // while "1"  (timeout="50000")
[09:17:18.768]      // while-condition  =>  TRUE
[09:17:18.768]      // while "1"  (timeout="50000")
[09:17:18.768]      // while-condition  =>  TRUE
[09:17:18.768]      // while "1"  (timeout="50000")
[09:17:18.768]      // while-condition  =>  TRUE
[09:17:18.769]      // while "1"  (timeout="50000")
[09:17:18.769]      // while-condition  =>  TRUE
[09:17:18.769]      // while "1"  (timeout="50000")
[09:17:18.769]      // while-condition  =>  TRUE
[09:17:18.770]      // while "1"  (timeout="50000")
[09:17:18.770]      // while-condition  =>  TRUE
[09:17:18.770]      // while "1"  (timeout="50000")
[09:17:18.770]      // while-condition  =>  TRUE
[09:17:18.771]      // while "1"  (timeout="50000")
[09:17:18.771]      // while-condition  =>  TRUE
[09:17:18.771]      // while "1"  (timeout="50000")
[09:17:18.771]      // while-condition  =>  TRUE
[09:17:18.772]      // while "1"  (timeout="50000")
[09:17:18.772]      // while-condition  =>  TRUE
[09:17:18.772]      // while "1"  (timeout="50000")
[09:17:18.772]      // while-condition  =>  TRUE
[09:17:18.773]      // while "1"  (timeout="50000")
[09:17:18.773]      // while-condition  =>  TRUE
[09:17:18.773]      // while "1"  (timeout="50000")
[09:17:18.773]      // while-condition  =>  TRUE
[09:17:18.774]      // while "1"  (timeout="50000")
[09:17:18.774]      // while-condition  =>  TRUE
[09:17:18.774]      // while "1"  (timeout="50000")
[09:17:18.774]      // while-condition  =>  TRUE
[09:17:18.775]      // while "1"  (timeout="50000")
[09:17:18.775]      // while-condition  =>  TRUE
[09:17:18.775]      // while "1"  (timeout="50000")
[09:17:18.775]      // while-condition  =>  TRUE
[09:17:18.776]      // while "1"  (timeout="50000")
[09:17:18.776]      // while-condition  =>  TRUE
[09:17:18.776]      // while "1"  (timeout="50000")
[09:17:18.776]      // while-condition  =>  TRUE
[09:17:18.776]      // while "1"  (timeout="50000")
[09:17:18.777]      // while-condition  =>  TRUE
[09:17:18.777]      // while "1"  (timeout="50000")
[09:17:18.777]      // while-condition  =>  TRUE
[09:17:18.777]      // while "1"  (timeout="50000")
[09:17:18.778]      // while-condition  =>  TRUE
[09:17:18.778]      // while "1"  (timeout="50000")
[09:17:18.778]      // while-condition  =>  TRUE
[09:17:18.778]      // while "1"  (timeout="50000")
[09:17:18.779]      // while-condition  =>  TRUE
[09:17:18.779]      // while "1"  (timeout="50000")
[09:17:18.779]      // while-condition  =>  TRUE
[09:17:18.779]      // while "1"  (timeout="50000")
[09:17:18.780]      // while-condition  =>  TRUE
[09:17:18.780]      // while "1"  (timeout="50000")
[09:17:18.780]      // while-condition  =>  TRUE
[09:17:18.780]      // while "1"  (timeout="50000")
[09:17:18.781]      // while-condition  =>  TRUE
[09:17:18.781]      // while "1"  (timeout="50000")
[09:17:18.781]      // while-condition  =>  TRUE
[09:17:18.781]      // while "1"  (timeout="50000")
[09:17:18.782]      // while-condition  =>  TRUE
[09:17:18.782]      // while "1"  (timeout="50000")
[09:17:18.782]      // while-condition  =>  TRUE
[09:17:18.782]      // while "1"  (timeout="50000")
[09:17:18.782]      // while-condition  =>  TRUE
[09:17:18.783]      // while "1"  (timeout="50000")
[09:17:18.783]      // while-condition  =>  TRUE
[09:17:18.783]      // while "1"  (timeout="50000")
[09:17:18.784]      // while-condition  =>  TRUE
[09:17:18.784]      // while "1"  (timeout="50000")
[09:17:18.784]      // while-condition  =>  TRUE
[09:17:18.784]      // while "1"  (timeout="50000")
[09:17:18.785]      // while-condition  =>  TRUE
[09:17:18.785]      // while "1"  (timeout="50000")
[09:17:18.785]      // while-condition  =>  TRUE
[09:17:18.785]      // while "1"  (timeout="50000")
[09:17:18.785]      // while-condition  =>  TRUE
[09:17:18.786]      // while "1"  (timeout="50000")
[09:17:18.786]      // while-condition  =>  TRUE
[09:17:18.786]      // while "1"  (timeout="50000")
[09:17:18.786]      // while-condition  =>  TRUE
[09:17:18.787]      // while "1"  (timeout="50000")
[09:17:18.787]      // while-condition  =>  TRUE
[09:17:18.787]      // while "1"  (timeout="50000")
[09:17:18.787]      // while-condition  =>  TRUE
[09:17:18.788]      // while "1"  (timeout="50000")
[09:17:18.788]      // while-condition  =>  TRUE
[09:17:18.788]      // while "1"  (timeout="50000")
[09:17:18.788]      // while-condition  =>  TRUE
[09:17:18.789]      // while "1"  (timeout="50000")
[09:17:18.789]      // while-condition  =>  TRUE
[09:17:18.789]      // while "1"  (timeout="50000")
[09:17:18.789]      // while-condition  =>  TRUE
[09:17:18.789]      // while "1"  (timeout="50000")
[09:17:18.790]      // while-condition  =>  TRUE
[09:17:18.790]      // while "1"  (timeout="50000")
[09:17:18.790]      // while-condition  =>  TRUE
[09:17:18.790]      // while "1"  (timeout="50000")
[09:17:18.791]      // while-condition  =>  TRUE
[09:17:18.791]      // while "1"  (timeout="50000")
[09:17:18.791]      // while-condition  =>  TRUE
[09:17:18.791]      // while "1"  (timeout="50000")
[09:17:18.792]      // while-condition  =>  TRUE
[09:17:18.792]      // while "1"  (timeout="50000")
[09:17:18.792]      // while-condition  =>  TRUE
[09:17:18.792]      // while "1"  (timeout="50000")
[09:17:18.793]      // while-condition  =>  TRUE
[09:17:18.793]      // while "1"  (timeout="50000")
[09:17:18.793]      // while-condition  =>  TRUE
[09:17:18.793]      // while "1"  (timeout="50000")
[09:17:18.794]      // while-condition  =>  TRUE
[09:17:18.794]      // while "1"  (timeout="50000")
[09:17:18.794]      // while-condition  =>  TRUE
[09:17:18.794]      // while "1"  (timeout="50000")
[09:17:18.795]      // while-condition  =>  TRUE
[09:17:18.795]      // while "1"  (timeout="50000")
[09:17:18.795]      // while-condition  =>  TRUE
[09:17:18.795]      // while "1"  (timeout="50000")
[09:17:18.795]      // while-condition  =>  TRUE
[09:17:18.796]      // while "1"  (timeout="50000")
[09:17:18.796]      // while-condition  =>  TRUE
[09:17:18.796]      // while "1"  (timeout="50000")
[09:17:18.796]      // while-condition  =>  TRUE
[09:17:18.797]      // while "1"  (timeout="50000")
[09:17:18.797]      // while-condition  =>  TRUE
[09:17:18.797]      // while "1"  (timeout="50000")
[09:17:18.797]      // while-condition  =>  TRUE
[09:17:18.798]      // while "1"  (timeout="50000")
[09:17:18.798]      // while-condition  =>  TRUE
[09:17:18.798]      // while "1"  (timeout="50000")
[09:17:18.798]      // while-condition  =>  TRUE
[09:17:18.799]      // while "1"  (timeout="50000")
[09:17:18.799]      // while-condition  =>  TRUE
[09:17:18.799]      // while "1"  (timeout="50000")
[09:17:18.799]      // while-condition  =>  TRUE
[09:17:18.799]      // while "1"  (timeout="50000")
[09:17:18.800]      // while-condition  =>  TRUE
[09:17:18.800]      // while "1"  (timeout="50000")
[09:17:18.800]      // while-condition  =>  TRUE
[09:17:18.800]      // while "1"  (timeout="50000")
[09:17:18.801]      // while-condition  =>  TRUE
[09:17:18.801]      // while "1"  (timeout="50000")
[09:17:18.801]      // while-condition  =>  TRUE
[09:17:18.801]      // while "1"  (timeout="50000")
[09:17:18.802]      // while-condition  =>  TRUE
[09:17:18.802]      // while "1"  (timeout="50000")
[09:17:18.802]      // while-condition  =>  TRUE
[09:17:18.802]      // while "1"  (timeout="50000")
[09:17:18.803]      // while-condition  =>  TRUE
[09:17:18.803]      // while "1"  (timeout="50000")
[09:17:18.803]      // while-condition  =>  TRUE
[09:17:18.803]      // while "1"  (timeout="50000")
[09:17:18.804]      // while-condition  =>  TRUE
[09:17:18.804]      // while "1"  (timeout="50000")
[09:17:18.804]      // while-condition  =>  TRUE
[09:17:18.804]      // while "1"  (timeout="50000")
[09:17:18.804]      // while-condition  =>  TRUE
[09:17:18.805]      // while "1"  (timeout="50000")
[09:17:18.805]      // while-condition  =>  TRUE
[09:17:18.805]      // while "1"  (timeout="50000")
[09:17:18.805]      // while-condition  =>  TRUE
[09:17:18.806]      // while "1"  (timeout="50000")
[09:17:18.806]      // while-condition  =>  TRUE
[09:17:18.806]      // while "1"  (timeout="50000")
[09:17:18.806]      // while-condition  =>  TRUE
[09:17:18.807]      // while "1"  (timeout="50000")
[09:17:18.808]      // while-condition  =>  TRUE
[09:17:18.808]      // while "1"  (timeout="50000")
[09:17:18.808]      // while-condition  =>  TRUE
[09:17:18.808]      // while "1"  (timeout="50000")
[09:17:18.809]      // while-condition  =>  TRUE
[09:17:18.809]      // while "1"  (timeout="50000")
[09:17:18.809]      // while-condition  =>  TRUE
[09:17:18.809]      // while "1"  (timeout="50000")
[09:17:18.809]      // while-condition  =>  TRUE
[09:17:18.810]      // while "1"  (timeout="50000")
[09:17:18.810]      // while-condition  =>  TRUE
[09:17:18.810]      // while "1"  (timeout="50000")
[09:17:18.810]      // while-condition  =>  TRUE
[09:17:18.811]      // while "1"  (timeout="50000")
[09:17:18.811]      // while-condition  =>  TRUE
[09:17:18.811]      // while "1"  (timeout="50000")
[09:17:18.811]      // while-condition  =>  TRUE
[09:17:18.812]      // while "1"  (timeout="50000")
[09:17:18.812]      // while-condition  =>  TRUE
[09:17:18.812]      // while "1"  (timeout="50000")
[09:17:18.812]      // while-condition  =>  TRUE
[09:17:18.813]      // while "1"  (timeout="50000")
[09:17:18.813]      // while-condition  =>  TRUE
[09:17:18.813]      // while "1"  (timeout="50000")
[09:17:18.813]      // while-condition  =>  TRUE
[09:17:18.814]      // while "1"  (timeout="50000")
[09:17:18.814]      // while  =>  TIMEOUT
[09:17:18.814]      // end while "1"
[09:17:18.814]    </control>
[09:17:18.814]    <block atomic="false" info="">
[09:17:18.815]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:17:18.817]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:17:18.817]    </block>
[09:17:18.818]    <control if="" while="1" timeout="10000" info="">
[09:17:18.818]      // while "1"  (timeout="10000")
[09:17:18.818]      // while-condition  =>  TRUE
[09:17:18.818]      // while "1"  (timeout="10000")
[09:17:18.818]      // while-condition  =>  TRUE
[09:17:18.819]      // while "1"  (timeout="10000")
[09:17:18.819]      // while-condition  =>  TRUE
[09:17:18.819]      // while "1"  (timeout="10000")
[09:17:18.820]      // while-condition  =>  TRUE
[09:17:18.820]      // while "1"  (timeout="10000")
[09:17:18.820]      // while-condition  =>  TRUE
[09:17:18.820]      // while "1"  (timeout="10000")
[09:17:18.820]      // while-condition  =>  TRUE
[09:17:18.821]      // while "1"  (timeout="10000")
[09:17:18.821]      // while-condition  =>  TRUE
[09:17:18.821]      // while "1"  (timeout="10000")
[09:17:18.821]      // while-condition  =>  TRUE
[09:17:18.822]      // while "1"  (timeout="10000")
[09:17:18.822]      // while-condition  =>  TRUE
[09:17:18.822]      // while "1"  (timeout="10000")
[09:17:18.822]      // while-condition  =>  TRUE
[09:17:18.823]      // while "1"  (timeout="10000")
[09:17:18.823]      // while-condition  =>  TRUE
[09:17:18.823]      // while "1"  (timeout="10000")
[09:17:18.823]      // while-condition  =>  TRUE
[09:17:18.824]      // while "1"  (timeout="10000")
[09:17:18.824]      // while-condition  =>  TRUE
[09:17:18.824]      // while "1"  (timeout="10000")
[09:17:18.824]      // while-condition  =>  TRUE
[09:17:18.825]      // while "1"  (timeout="10000")
[09:17:18.825]      // while-condition  =>  TRUE
[09:17:18.825]      // while "1"  (timeout="10000")
[09:17:18.825]      // while-condition  =>  TRUE
[09:17:18.825]      // while "1"  (timeout="10000")
[09:17:18.826]      // while-condition  =>  TRUE
[09:17:18.826]      // while "1"  (timeout="10000")
[09:17:18.826]      // while-condition  =>  TRUE
[09:17:18.826]      // while "1"  (timeout="10000")
[09:17:18.827]      // while-condition  =>  TRUE
[09:17:18.827]      // while "1"  (timeout="10000")
[09:17:18.827]      // while-condition  =>  TRUE
[09:17:18.827]      // while "1"  (timeout="10000")
[09:17:18.828]      // while-condition  =>  TRUE
[09:17:18.828]      // while "1"  (timeout="10000")
[09:17:18.828]      // while-condition  =>  TRUE
[09:17:18.828]      // while "1"  (timeout="10000")
[09:17:18.828]      // while-condition  =>  TRUE
[09:17:18.829]      // while "1"  (timeout="10000")
[09:17:18.829]      // while  =>  TIMEOUT
[09:17:18.829]      // end while "1"
[09:17:18.829]    </control>
[09:17:18.830]    <block atomic="true" info="">
[09:17:18.833]  
[09:17:18.833]  ! W001 : No atomic sequence support in debug unit
[09:17:18.833]  
[09:17:18.835]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:17:18.837]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:17:18.837]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:17:18.839]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:17:18.839]    </block>
[09:17:18.840]    <block atomic="false" info="">
[09:17:18.840]      __errorcontrol = 0x00000001;
[09:17:18.840]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:17:18.840]      ReadDP(0x0);
[09:17:18.842]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:17:18.842]      __errorcontrol = 0x00000000;
[09:17:18.843]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:17:18.843]    </block>
[09:17:18.843]  </sequence>
[09:17:18.843]  
[09:17:18.851]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[09:17:18.851]  
[09:17:18.851]  <debugvars>
[09:17:18.852]    // Pre-defined
[09:17:18.852]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:17:18.852]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:17:18.852]    __dp=0x00000000
[09:17:18.853]    __ap=0x00000000
[09:17:18.853]    __traceout=0x00000000      (Trace Disabled)
[09:17:18.853]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:17:18.853]    __FlashAddr=0x00000000
[09:17:18.853]    __FlashLen=0x00000000
[09:17:18.854]    __FlashArg=0x00000000
[09:17:18.854]    __FlashOp=0x00000000
[09:17:18.854]    __Result=0x00000000
[09:17:18.854]  </debugvars>
[09:17:18.855]  
[09:17:18.855]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[09:17:18.855]    <block atomic="false" info="">
[09:17:18.855]    </block>
[09:17:18.856]  </sequence>
[09:17:18.856]  
[09:17:19.088]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[09:17:19.088]  
[09:17:19.089]  <debugvars>
[09:17:19.089]    // Pre-defined
[09:17:19.090]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:17:19.091]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:17:19.092]    __dp=0x00000000
[09:17:19.093]    __ap=0x00000000
[09:17:19.093]    __traceout=0x00000000      (Trace Disabled)
[09:17:19.094]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:17:19.094]    __FlashAddr=0x00000000
[09:17:19.095]    __FlashLen=0x00000000
[09:17:19.096]    __FlashArg=0x00000000
[09:17:19.096]    __FlashOp=0x00000000
[09:17:19.097]    __Result=0x00000000
[09:17:19.097]  </debugvars>
[09:17:19.097]  
[09:17:19.098]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[09:17:19.099]    <block atomic="false" info="">
[09:17:19.099]      Sequence("ResetHardware");
[09:17:19.100]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:17:19.100]          <block atomic="false" info="">
[09:17:19.100]            __var nReset      = 0x80;
[09:17:19.101]              // -> [nReset <= 0x00000080]
[09:17:19.101]            DAP_SWJ_Pins(0x00, nReset, 0);
[09:17:19.105]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:17:19.105]          </block>
[09:17:19.106]          <control if="" while="1" timeout="50000" info="">
[09:17:19.106]            // while "1"  (timeout="50000")
[09:17:19.107]            // while-condition  =>  TRUE
[09:17:19.107]            // while "1"  (timeout="50000")
[09:17:19.108]            // while-condition  =>  TRUE
[09:17:19.109]            // while "1"  (timeout="50000")
[09:17:19.109]            // while-condition  =>  TRUE
[09:17:19.110]            // while "1"  (timeout="50000")
[09:17:19.110]            // while-condition  =>  TRUE
[09:17:19.110]            // while "1"  (timeout="50000")
[09:17:19.111]            // while-condition  =>  TRUE
[09:17:19.111]            // while "1"  (timeout="50000")
[09:17:19.111]            // while-condition  =>  TRUE
[09:17:19.112]            // while "1"  (timeout="50000")
[09:17:19.112]            // while-condition  =>  TRUE
[09:17:19.112]            // while "1"  (timeout="50000")
[09:17:19.113]            // while-condition  =>  TRUE
[09:17:19.113]            // while "1"  (timeout="50000")
[09:17:19.114]            // while-condition  =>  TRUE
[09:17:19.114]            // while "1"  (timeout="50000")
[09:17:19.114]            // while-condition  =>  TRUE
[09:17:19.115]            // while "1"  (timeout="50000")
[09:17:19.115]            // while-condition  =>  TRUE
[09:17:19.115]            // while "1"  (timeout="50000")
[09:17:19.115]            // while-condition  =>  TRUE
[09:17:19.116]            // while "1"  (timeout="50000")
[09:17:19.116]            // while-condition  =>  TRUE
[09:17:19.116]            // while "1"  (timeout="50000")
[09:17:19.117]            // while-condition  =>  TRUE
[09:17:19.117]            // while "1"  (timeout="50000")
[09:17:19.117]            // while-condition  =>  TRUE
[09:17:19.117]            // while "1"  (timeout="50000")
[09:17:19.117]            // while-condition  =>  TRUE
[09:17:19.117]            // while "1"  (timeout="50000")
[09:17:19.118]            // while-condition  =>  TRUE
[09:17:19.118]            // while "1"  (timeout="50000")
[09:17:19.118]            // while-condition  =>  TRUE
[09:17:19.118]            // while "1"  (timeout="50000")
[09:17:19.119]            // while-condition  =>  TRUE
[09:17:19.119]            // while "1"  (timeout="50000")
[09:17:19.119]            // while-condition  =>  TRUE
[09:17:19.119]            // while "1"  (timeout="50000")
[09:17:19.120]            // while-condition  =>  TRUE
[09:17:19.120]            // while "1"  (timeout="50000")
[09:17:19.120]            // while-condition  =>  TRUE
[09:17:19.120]            // while "1"  (timeout="50000")
[09:17:19.121]            // while-condition  =>  TRUE
[09:17:19.121]            // while "1"  (timeout="50000")
[09:17:19.121]            // while-condition  =>  TRUE
[09:17:19.121]            // while "1"  (timeout="50000")
[09:17:19.122]            // while-condition  =>  TRUE
[09:17:19.122]            // while "1"  (timeout="50000")
[09:17:19.122]            // while-condition  =>  TRUE
[09:17:19.122]            // while "1"  (timeout="50000")
[09:17:19.122]            // while-condition  =>  TRUE
[09:17:19.123]            // while "1"  (timeout="50000")
[09:17:19.123]            // while-condition  =>  TRUE
[09:17:19.123]            // while "1"  (timeout="50000")
[09:17:19.123]            // while-condition  =>  TRUE
[09:17:19.124]            // while "1"  (timeout="50000")
[09:17:19.124]            // while-condition  =>  TRUE
[09:17:19.125]            // while "1"  (timeout="50000")
[09:17:19.125]            // while-condition  =>  TRUE
[09:17:19.125]            // while "1"  (timeout="50000")
[09:17:19.125]            // while-condition  =>  TRUE
[09:17:19.126]            // while "1"  (timeout="50000")
[09:17:19.126]            // while-condition  =>  TRUE
[09:17:19.126]            // while "1"  (timeout="50000")
[09:17:19.126]            // while-condition  =>  TRUE
[09:17:19.126]            // while "1"  (timeout="50000")
[09:17:19.127]            // while-condition  =>  TRUE
[09:17:19.127]            // while "1"  (timeout="50000")
[09:17:19.127]            // while-condition  =>  TRUE
[09:17:19.127]            // while "1"  (timeout="50000")
[09:17:19.127]            // while-condition  =>  TRUE
[09:17:19.127]            // while "1"  (timeout="50000")
[09:17:19.128]            // while-condition  =>  TRUE
[09:17:19.128]            // while "1"  (timeout="50000")
[09:17:19.128]            // while-condition  =>  TRUE
[09:17:19.128]            // while "1"  (timeout="50000")
[09:17:19.128]            // while-condition  =>  TRUE
[09:17:19.129]            // while "1"  (timeout="50000")
[09:17:19.129]            // while-condition  =>  TRUE
[09:17:19.129]            // while "1"  (timeout="50000")
[09:17:19.129]            // while-condition  =>  TRUE
[09:17:19.130]            // while "1"  (timeout="50000")
[09:17:19.130]            // while-condition  =>  TRUE
[09:17:19.130]            // while "1"  (timeout="50000")
[09:17:19.130]            // while-condition  =>  TRUE
[09:17:19.130]            // while "1"  (timeout="50000")
[09:17:19.130]            // while-condition  =>  TRUE
[09:17:19.130]            // while "1"  (timeout="50000")
[09:17:19.130]            // while-condition  =>  TRUE
[09:17:19.131]            // while "1"  (timeout="50000")
[09:17:19.131]            // while-condition  =>  TRUE
[09:17:19.132]            // while "1"  (timeout="50000")
[09:17:19.132]            // while-condition  =>  TRUE
[09:17:19.132]            // while "1"  (timeout="50000")
[09:17:19.132]            // while-condition  =>  TRUE
[09:17:19.132]            // while "1"  (timeout="50000")
[09:17:19.132]            // while-condition  =>  TRUE
[09:17:19.132]            // while "1"  (timeout="50000")
[09:17:19.132]            // while-condition  =>  TRUE
[09:17:19.132]            // while "1"  (timeout="50000")
[09:17:19.133]            // while-condition  =>  TRUE
[09:17:19.133]            // while "1"  (timeout="50000")
[09:17:19.133]            // while-condition  =>  TRUE
[09:17:19.133]            // while "1"  (timeout="50000")
[09:17:19.133]            // while-condition  =>  TRUE
[09:17:19.134]            // while "1"  (timeout="50000")
[09:17:19.134]            // while-condition  =>  TRUE
[09:17:19.134]            // while "1"  (timeout="50000")
[09:17:19.134]            // while-condition  =>  TRUE
[09:17:19.134]            // while "1"  (timeout="50000")
[09:17:19.135]            // while-condition  =>  TRUE
[09:17:19.136]            // while "1"  (timeout="50000")
[09:17:19.137]            // while-condition  =>  TRUE
[09:17:19.137]            // while "1"  (timeout="50000")
[09:17:19.137]            // while-condition  =>  TRUE
[09:17:19.137]            // while "1"  (timeout="50000")
[09:17:19.137]            // while-condition  =>  TRUE
[09:17:19.138]            // while "1"  (timeout="50000")
[09:17:19.138]            // while-condition  =>  TRUE
[09:17:19.138]            // while "1"  (timeout="50000")
[09:17:19.138]            // while-condition  =>  TRUE
[09:17:19.138]            // while "1"  (timeout="50000")
[09:17:19.139]            // while-condition  =>  TRUE
[09:17:19.139]            // while "1"  (timeout="50000")
[09:17:19.139]            // while-condition  =>  TRUE
[09:17:19.139]            // while "1"  (timeout="50000")
[09:17:19.139]            // while-condition  =>  TRUE
[09:17:19.140]            // while "1"  (timeout="50000")
[09:17:19.140]            // while-condition  =>  TRUE
[09:17:19.140]            // while "1"  (timeout="50000")
[09:17:19.140]            // while-condition  =>  TRUE
[09:17:19.140]            // while "1"  (timeout="50000")
[09:17:19.140]            // while-condition  =>  TRUE
[09:17:19.140]            // while "1"  (timeout="50000")
[09:17:19.140]            // while-condition  =>  TRUE
[09:17:19.141]            // while "1"  (timeout="50000")
[09:17:19.141]            // while-condition  =>  TRUE
[09:17:19.141]            // while "1"  (timeout="50000")
[09:17:19.141]            // while-condition  =>  TRUE
[09:17:19.141]            // while "1"  (timeout="50000")
[09:17:19.142]            // while-condition  =>  TRUE
[09:17:19.142]            // while "1"  (timeout="50000")
[09:17:19.142]            // while-condition  =>  TRUE
[09:17:19.143]            // while "1"  (timeout="50000")
[09:17:19.143]            // while-condition  =>  TRUE
[09:17:19.143]            // while "1"  (timeout="50000")
[09:17:19.143]            // while-condition  =>  TRUE
[09:17:19.143]            // while "1"  (timeout="50000")
[09:17:19.143]            // while-condition  =>  TRUE
[09:17:19.143]            // while "1"  (timeout="50000")
[09:17:19.143]            // while-condition  =>  TRUE
[09:17:19.143]            // while "1"  (timeout="50000")
[09:17:19.144]            // while-condition  =>  TRUE
[09:17:19.145]            // while "1"  (timeout="50000")
[09:17:19.145]            // while-condition  =>  TRUE
[09:17:19.145]            // while "1"  (timeout="50000")
[09:17:19.145]            // while-condition  =>  TRUE
[09:17:19.145]            // while "1"  (timeout="50000")
[09:17:19.146]            // while-condition  =>  TRUE
[09:17:19.146]            // while "1"  (timeout="50000")
[09:17:19.146]            // while-condition  =>  TRUE
[09:17:19.146]            // while "1"  (timeout="50000")
[09:17:19.146]            // while-condition  =>  TRUE
[09:17:19.147]            // while "1"  (timeout="50000")
[09:17:19.147]            // while-condition  =>  TRUE
[09:17:19.147]            // while "1"  (timeout="50000")
[09:17:19.147]            // while-condition  =>  TRUE
[09:17:19.147]            // while "1"  (timeout="50000")
[09:17:19.147]            // while-condition  =>  TRUE
[09:17:19.148]            // while "1"  (timeout="50000")
[09:17:19.148]            // while-condition  =>  TRUE
[09:17:19.148]            // while "1"  (timeout="50000")
[09:17:19.148]            // while-condition  =>  TRUE
[09:17:19.148]            // while "1"  (timeout="50000")
[09:17:19.148]            // while-condition  =>  TRUE
[09:17:19.148]            // while "1"  (timeout="50000")
[09:17:19.148]            // while-condition  =>  TRUE
[09:17:19.148]            // while "1"  (timeout="50000")
[09:17:19.149]            // while-condition  =>  TRUE
[09:17:19.149]            // while "1"  (timeout="50000")
[09:17:19.149]            // while-condition  =>  TRUE
[09:17:19.149]            // while "1"  (timeout="50000")
[09:17:19.149]            // while-condition  =>  TRUE
[09:17:19.150]            // while "1"  (timeout="50000")
[09:17:19.150]            // while-condition  =>  TRUE
[09:17:19.150]            // while "1"  (timeout="50000")
[09:17:19.150]            // while-condition  =>  TRUE
[09:17:19.150]            // while "1"  (timeout="50000")
[09:17:19.151]            // while-condition  =>  TRUE
[09:17:19.152]            // while "1"  (timeout="50000")
[09:17:19.152]            // while-condition  =>  TRUE
[09:17:19.152]            // while "1"  (timeout="50000")
[09:17:19.152]            // while-condition  =>  TRUE
[09:17:19.152]            // while "1"  (timeout="50000")
[09:17:19.152]            // while-condition  =>  TRUE
[09:17:19.153]            // while "1"  (timeout="50000")
[09:17:19.153]            // while-condition  =>  TRUE
[09:17:19.153]            // while "1"  (timeout="50000")
[09:17:19.153]            // while-condition  =>  TRUE
[09:17:19.153]            // while "1"  (timeout="50000")
[09:17:19.153]            // while-condition  =>  TRUE
[09:17:19.153]            // while "1"  (timeout="50000")
[09:17:19.153]            // while-condition  =>  TRUE
[09:17:19.153]            // while "1"  (timeout="50000")
[09:17:19.154]            // while-condition  =>  TRUE
[09:17:19.155]            // while "1"  (timeout="50000")
[09:17:19.155]            // while-condition  =>  TRUE
[09:17:19.155]            // while "1"  (timeout="50000")
[09:17:19.155]            // while-condition  =>  TRUE
[09:17:19.155]            // while "1"  (timeout="50000")
[09:17:19.155]            // while-condition  =>  TRUE
[09:17:19.156]            // while "1"  (timeout="50000")
[09:17:19.156]            // while-condition  =>  TRUE
[09:17:19.156]            // while "1"  (timeout="50000")
[09:17:19.156]            // while-condition  =>  TRUE
[09:17:19.156]            // while "1"  (timeout="50000")
[09:17:19.157]            // while-condition  =>  TRUE
[09:17:19.157]            // while "1"  (timeout="50000")
[09:17:19.157]            // while-condition  =>  TRUE
[09:17:19.157]            // while "1"  (timeout="50000")
[09:17:19.157]            // while  =>  TIMEOUT
[09:17:19.158]            // end while "1"
[09:17:19.158]          </control>
[09:17:19.158]          <block atomic="false" info="">
[09:17:19.158]            DAP_SWJ_Pins(nReset, nReset, 0);
[09:17:19.161]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:17:19.161]          </block>
[09:17:19.161]          <control if="" while="1" timeout="10000" info="">
[09:17:19.162]            // while "1"  (timeout="10000")
[09:17:19.162]            // while-condition  =>  TRUE
[09:17:19.163]            // while "1"  (timeout="10000")
[09:17:19.163]            // while-condition  =>  TRUE
[09:17:19.163]            // while "1"  (timeout="10000")
[09:17:19.163]            // while-condition  =>  TRUE
[09:17:19.163]            // while "1"  (timeout="10000")
[09:17:19.164]            // while-condition  =>  TRUE
[09:17:19.164]            // while "1"  (timeout="10000")
[09:17:19.164]            // while-condition  =>  TRUE
[09:17:19.164]            // while "1"  (timeout="10000")
[09:17:19.166]            // while-condition  =>  TRUE
[09:17:19.166]            // while "1"  (timeout="10000")
[09:17:19.166]            // while-condition  =>  TRUE
[09:17:19.167]            // while "1"  (timeout="10000")
[09:17:19.167]            // while-condition  =>  TRUE
[09:17:19.167]            // while "1"  (timeout="10000")
[09:17:19.168]            // while-condition  =>  TRUE
[09:17:19.168]            // while "1"  (timeout="10000")
[09:17:19.168]            // while-condition  =>  TRUE
[09:17:19.168]            // while "1"  (timeout="10000")
[09:17:19.169]            // while-condition  =>  TRUE
[09:17:19.169]            // while "1"  (timeout="10000")
[09:17:19.169]            // while-condition  =>  TRUE
[09:17:19.170]            // while "1"  (timeout="10000")
[09:17:19.170]            // while-condition  =>  TRUE
[09:17:19.170]            // while "1"  (timeout="10000")
[09:17:19.170]            // while-condition  =>  TRUE
[09:17:19.170]            // while "1"  (timeout="10000")
[09:17:19.171]            // while-condition  =>  TRUE
[09:17:19.171]            // while "1"  (timeout="10000")
[09:17:19.171]            // while-condition  =>  TRUE
[09:17:19.171]            // while "1"  (timeout="10000")
[09:17:19.172]            // while-condition  =>  TRUE
[09:17:19.172]            // while "1"  (timeout="10000")
[09:17:19.173]            // while-condition  =>  TRUE
[09:17:19.173]            // while "1"  (timeout="10000")
[09:17:19.173]            // while  =>  TIMEOUT
[09:17:19.173]            // end while "1"
[09:17:19.173]          </control>
[09:17:19.173]          <block atomic="true" info="">
[09:17:19.177]  
[09:17:19.177]  ! W001 : No atomic sequence support in debug unit
[09:17:19.177]  
[09:17:19.179]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:17:19.182]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:17:19.182]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:17:19.184]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:17:19.184]          </block>
[09:17:19.185]          <block atomic="false" info="">
[09:17:19.185]            __errorcontrol = 0x00000001;
[09:17:19.186]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:17:19.186]            ReadDP(0x0);
[09:17:19.189]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:17:19.189]            __errorcontrol = 0x00000000;
[09:17:19.190]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:17:19.190]          </block>
[09:17:19.191]        </sequence>
[09:17:19.191]      Sequence("DebugPortSetup");
[09:17:19.192]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:17:19.192]        </sequence>
[09:17:19.193]      Sequence("DebugPortStart");
[09:17:19.193]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:17:19.194]          <block atomic="false" info="">
[09:17:19.194]            __var SW_DP_ABORT  = 0x0;
[09:17:19.195]              // -> [SW_DP_ABORT <= 0x00000000]
[09:17:19.195]            __var DP_CTRL_STAT = 0x4;
[09:17:19.195]              // -> [DP_CTRL_STAT <= 0x00000004]
[09:17:19.195]            __var DP_SELECT    = 0x8;
[09:17:19.196]              // -> [DP_SELECT <= 0x00000008]
[09:17:19.196]            __var powered_down = 0;
[09:17:19.197]              // -> [powered_down <= 0x00000000]
[09:17:19.197]            WriteDP(DP_SELECT, 0x00000000);
[09:17:19.199]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:17:19.199]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:17:19.202]              // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:17:19.202]              // -> [powered_down <= 0x00000000]
[09:17:19.202]          </block>
[09:17:19.203]          <control if="powered_down" while="" timeout="0" info="">
[09:17:19.203]            // if-block "powered_down"
[09:17:19.203]              // =>  FALSE
[09:17:19.203]            // skip if-block "powered_down"
[09:17:19.203]          </control>
[09:17:19.203]        </sequence>
[09:17:19.203]      Sequence("DebugCoreStart");
[09:17:19.204]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:17:19.204]          <block atomic="true" info="">
[09:17:19.208]  
[09:17:19.208]  ! W001 : No atomic sequence support in debug unit
[09:17:19.208]  
[09:17:19.210]            __var DP_R_IDCODE    = 0x0;
[09:17:19.211]              // -> [DP_R_IDCODE <= 0x00000000]
[09:17:19.211]            __var DP_W_ABORT    = 0x0;
[09:17:19.211]              // -> [DP_W_ABORT <= 0x00000000]
[09:17:19.212]            __var DP_CTRLSTAT = 0x4;
[09:17:19.213]              // -> [DP_CTRLSTAT <= 0x00000004]
[09:17:19.214]            __var DP_W_SELECT    = 0x8;
[09:17:19.214]              // -> [DP_W_SELECT <= 0x00000008]
[09:17:19.214]            __var AP_TAR		= 0x4;
[09:17:19.214]              // -> [AP_TAR <= 0x00000004]
[09:17:19.214]            __var AP_BD0		= 0x0;
[09:17:19.216]              // -> [AP_BD0 <= 0x00000000]
[09:17:19.216]            __var AP_BD1		= 0x4;
[09:17:19.217]              // -> [AP_BD1 <= 0x00000004]
[09:17:19.217]            __var AP_BD2		= 0x8;
[09:17:19.217]              // -> [AP_BD2 <= 0x00000008]
[09:17:19.217]            __var PCWithinFlash = 0;
[09:17:19.218]              // -> [PCWithinFlash <= 0x00000000]
[09:17:19.218]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:17:19.223]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.223]          </block>
[09:17:19.224]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:17:19.224]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:17:19.232]              // -> [Read32(0xE000EDF0) => 0x00030003]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.232]            // while-condition  =>  FALSE
[09:17:19.233]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:17:19.233]          </control>
[09:17:19.234]          <block atomic="true" info="">
[09:17:19.238]  
[09:17:19.238]  ! W001 : No atomic sequence support in debug unit
[09:17:19.238]  
[09:17:19.239]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:17:19.241]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:17:19.242]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:17:19.245]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.245]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:17:19.248]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:17:19.248]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:17:19.253]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.253]          </block>
[09:17:19.254]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:17:19.255]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.257]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.257]            // while-condition  =>  TRUE
[09:17:19.258]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.261]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.261]            // while-condition  =>  TRUE
[09:17:19.262]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.265]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.265]            // while-condition  =>  TRUE
[09:17:19.266]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.269]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.269]            // while-condition  =>  TRUE
[09:17:19.270]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.273]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.273]            // while-condition  =>  TRUE
[09:17:19.274]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.276]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.276]            // while-condition  =>  TRUE
[09:17:19.276]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.279]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.279]            // while-condition  =>  TRUE
[09:17:19.279]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.282]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.282]            // while-condition  =>  TRUE
[09:17:19.283]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.285]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.285]            // while-condition  =>  TRUE
[09:17:19.286]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.288]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.288]            // while-condition  =>  TRUE
[09:17:19.289]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.290]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.291]            // while-condition  =>  TRUE
[09:17:19.291]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.293]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.294]            // while-condition  =>  TRUE
[09:17:19.295]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.298]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.298]            // while-condition  =>  TRUE
[09:17:19.299]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.301]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.302]            // while-condition  =>  TRUE
[09:17:19.302]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.305]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.305]            // while-condition  =>  TRUE
[09:17:19.306]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.308]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.308]            // while-condition  =>  TRUE
[09:17:19.309]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.311]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.311]            // while-condition  =>  TRUE
[09:17:19.312]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.314]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.314]            // while-condition  =>  TRUE
[09:17:19.315]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.317]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.317]            // while-condition  =>  TRUE
[09:17:19.318]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.320]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.320]            // while-condition  =>  TRUE
[09:17:19.321]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.323]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.323]            // while-condition  =>  TRUE
[09:17:19.324]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.327]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.327]            // while-condition  =>  TRUE
[09:17:19.327]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.330]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.330]            // while-condition  =>  TRUE
[09:17:19.330]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.334]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.334]            // while-condition  =>  TRUE
[09:17:19.335]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.338]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.338]            // while-condition  =>  TRUE
[09:17:19.338]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.340]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.340]            // while-condition  =>  TRUE
[09:17:19.341]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.344]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.344]            // while-condition  =>  TRUE
[09:17:19.344]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.347]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.347]            // while-condition  =>  TRUE
[09:17:19.348]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.350]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.350]            // while-condition  =>  TRUE
[09:17:19.350]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.353]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.353]            // while-condition  =>  TRUE
[09:17:19.354]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.357]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.357]            // while-condition  =>  TRUE
[09:17:19.357]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.361]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.361]            // while-condition  =>  TRUE
[09:17:19.362]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:19.362]            // while  =>  TIMEOUT
[09:17:19.363]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:17:19.364]          </control>
[09:17:19.364]          <block atomic="false" info="">
[09:17:19.365]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:17:19.368]              // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:17:19.368]              // -> [PCWithinFlash <= 0x00000000]
[09:17:19.369]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:17:19.372]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:17:19.372]          </block>
[09:17:19.373]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:17:19.374]            // if-block "PCWithinFlash == 0"
[09:17:19.374]              // =>  TRUE
[09:17:19.375]            // end if-block "PCWithinFlash == 0"
[09:17:19.375]          </control>
[09:17:19.376]        </sequence>
[09:17:19.376]    </block>
[09:17:19.377]  </sequence>
[09:17:19.377]  
[09:17:23.383]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[09:17:23.383]  
[09:17:23.383]  <debugvars>
[09:17:23.384]    // Pre-defined
[09:17:23.384]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:17:23.385]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:17:23.385]    __dp=0x00000000
[09:17:23.386]    __ap=0x00000000
[09:17:23.386]    __traceout=0x00000000      (Trace Disabled)
[09:17:23.386]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:17:23.387]    __FlashAddr=0x00000000
[09:17:23.387]    __FlashLen=0x00000000
[09:17:23.388]    __FlashArg=0x00000000
[09:17:23.388]    __FlashOp=0x00000000
[09:17:23.388]    __Result=0x00000000
[09:17:23.389]  </debugvars>
[09:17:23.389]  
[09:17:23.389]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[09:17:23.390]    <block atomic="false" info="">
[09:17:23.390]      __var nReset      = 0x80;
[09:17:23.390]        // -> [nReset <= 0x00000080]
[09:17:23.390]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:17:23.393]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:17:23.393]    </block>
[09:17:23.393]    <control if="" while="1" timeout="50000" info="">
[09:17:23.394]      // while "1"  (timeout="50000")
[09:17:23.394]      // while-condition  =>  TRUE
[09:17:23.394]      // while "1"  (timeout="50000")
[09:17:23.394]      // while-condition  =>  TRUE
[09:17:23.394]      // while "1"  (timeout="50000")
[09:17:23.395]      // while-condition  =>  TRUE
[09:17:23.395]      // while "1"  (timeout="50000")
[09:17:23.396]      // while-condition  =>  TRUE
[09:17:23.396]      // while "1"  (timeout="50000")
[09:17:23.396]      // while-condition  =>  TRUE
[09:17:23.396]      // while "1"  (timeout="50000")
[09:17:23.396]      // while-condition  =>  TRUE
[09:17:23.397]      // while "1"  (timeout="50000")
[09:17:23.397]      // while-condition  =>  TRUE
[09:17:23.398]      // while "1"  (timeout="50000")
[09:17:23.398]      // while-condition  =>  TRUE
[09:17:23.398]      // while "1"  (timeout="50000")
[09:17:23.398]      // while-condition  =>  TRUE
[09:17:23.398]      // while "1"  (timeout="50000")
[09:17:23.398]      // while-condition  =>  TRUE
[09:17:23.399]      // while "1"  (timeout="50000")
[09:17:23.399]      // while-condition  =>  TRUE
[09:17:23.399]      // while "1"  (timeout="50000")
[09:17:23.399]      // while-condition  =>  TRUE
[09:17:23.399]      // while "1"  (timeout="50000")
[09:17:23.400]      // while-condition  =>  TRUE
[09:17:23.400]      // while "1"  (timeout="50000")
[09:17:23.400]      // while-condition  =>  TRUE
[09:17:23.400]      // while "1"  (timeout="50000")
[09:17:23.400]      // while-condition  =>  TRUE
[09:17:23.400]      // while "1"  (timeout="50000")
[09:17:23.401]      // while-condition  =>  TRUE
[09:17:23.401]      // while "1"  (timeout="50000")
[09:17:23.401]      // while-condition  =>  TRUE
[09:17:23.401]      // while "1"  (timeout="50000")
[09:17:23.401]      // while-condition  =>  TRUE
[09:17:23.402]      // while "1"  (timeout="50000")
[09:17:23.402]      // while-condition  =>  TRUE
[09:17:23.402]      // while "1"  (timeout="50000")
[09:17:23.403]      // while-condition  =>  TRUE
[09:17:23.403]      // while "1"  (timeout="50000")
[09:17:23.403]      // while-condition  =>  TRUE
[09:17:23.403]      // while "1"  (timeout="50000")
[09:17:23.403]      // while-condition  =>  TRUE
[09:17:23.403]      // while "1"  (timeout="50000")
[09:17:23.404]      // while-condition  =>  TRUE
[09:17:23.404]      // while "1"  (timeout="50000")
[09:17:23.404]      // while-condition  =>  TRUE
[09:17:23.404]      // while "1"  (timeout="50000")
[09:17:23.404]      // while-condition  =>  TRUE
[09:17:23.405]      // while "1"  (timeout="50000")
[09:17:23.405]      // while-condition  =>  TRUE
[09:17:23.405]      // while "1"  (timeout="50000")
[09:17:23.405]      // while-condition  =>  TRUE
[09:17:23.405]      // while "1"  (timeout="50000")
[09:17:23.406]      // while-condition  =>  TRUE
[09:17:23.406]      // while "1"  (timeout="50000")
[09:17:23.406]      // while-condition  =>  TRUE
[09:17:23.406]      // while "1"  (timeout="50000")
[09:17:23.406]      // while-condition  =>  TRUE
[09:17:23.406]      // while "1"  (timeout="50000")
[09:17:23.407]      // while-condition  =>  TRUE
[09:17:23.407]      // while "1"  (timeout="50000")
[09:17:23.407]      // while-condition  =>  TRUE
[09:17:23.407]      // while "1"  (timeout="50000")
[09:17:23.407]      // while-condition  =>  TRUE
[09:17:23.408]      // while "1"  (timeout="50000")
[09:17:23.408]      // while-condition  =>  TRUE
[09:17:23.408]      // while "1"  (timeout="50000")
[09:17:23.408]      // while-condition  =>  TRUE
[09:17:23.409]      // while "1"  (timeout="50000")
[09:17:23.409]      // while-condition  =>  TRUE
[09:17:23.409]      // while "1"  (timeout="50000")
[09:17:23.409]      // while-condition  =>  TRUE
[09:17:23.409]      // while "1"  (timeout="50000")
[09:17:23.409]      // while-condition  =>  TRUE
[09:17:23.410]      // while "1"  (timeout="50000")
[09:17:23.410]      // while-condition  =>  TRUE
[09:17:23.410]      // while "1"  (timeout="50000")
[09:17:23.410]      // while-condition  =>  TRUE
[09:17:23.410]      // while "1"  (timeout="50000")
[09:17:23.411]      // while-condition  =>  TRUE
[09:17:23.411]      // while "1"  (timeout="50000")
[09:17:23.411]      // while-condition  =>  TRUE
[09:17:23.411]      // while "1"  (timeout="50000")
[09:17:23.412]      // while-condition  =>  TRUE
[09:17:23.412]      // while "1"  (timeout="50000")
[09:17:23.413]      // while-condition  =>  TRUE
[09:17:23.413]      // while "1"  (timeout="50000")
[09:17:23.413]      // while-condition  =>  TRUE
[09:17:23.413]      // while "1"  (timeout="50000")
[09:17:23.413]      // while-condition  =>  TRUE
[09:17:23.414]      // while "1"  (timeout="50000")
[09:17:23.414]      // while-condition  =>  TRUE
[09:17:23.414]      // while "1"  (timeout="50000")
[09:17:23.414]      // while-condition  =>  TRUE
[09:17:23.414]      // while "1"  (timeout="50000")
[09:17:23.415]      // while-condition  =>  TRUE
[09:17:23.415]      // while "1"  (timeout="50000")
[09:17:23.415]      // while-condition  =>  TRUE
[09:17:23.415]      // while "1"  (timeout="50000")
[09:17:23.415]      // while-condition  =>  TRUE
[09:17:23.415]      // while "1"  (timeout="50000")
[09:17:23.416]      // while-condition  =>  TRUE
[09:17:23.416]      // while "1"  (timeout="50000")
[09:17:23.416]      // while-condition  =>  TRUE
[09:17:23.416]      // while "1"  (timeout="50000")
[09:17:23.416]      // while-condition  =>  TRUE
[09:17:23.417]      // while "1"  (timeout="50000")
[09:17:23.417]      // while-condition  =>  TRUE
[09:17:23.417]      // while "1"  (timeout="50000")
[09:17:23.417]      // while-condition  =>  TRUE
[09:17:23.417]      // while "1"  (timeout="50000")
[09:17:23.418]      // while-condition  =>  TRUE
[09:17:23.418]      // while "1"  (timeout="50000")
[09:17:23.418]      // while-condition  =>  TRUE
[09:17:23.418]      // while "1"  (timeout="50000")
[09:17:23.418]      // while-condition  =>  TRUE
[09:17:23.419]      // while "1"  (timeout="50000")
[09:17:23.419]      // while-condition  =>  TRUE
[09:17:23.419]      // while "1"  (timeout="50000")
[09:17:23.419]      // while-condition  =>  TRUE
[09:17:23.419]      // while "1"  (timeout="50000")
[09:17:23.419]      // while-condition  =>  TRUE
[09:17:23.419]      // while "1"  (timeout="50000")
[09:17:23.420]      // while-condition  =>  TRUE
[09:17:23.420]      // while "1"  (timeout="50000")
[09:17:23.420]      // while-condition  =>  TRUE
[09:17:23.420]      // while "1"  (timeout="50000")
[09:17:23.420]      // while-condition  =>  TRUE
[09:17:23.421]      // while "1"  (timeout="50000")
[09:17:23.421]      // while-condition  =>  TRUE
[09:17:23.421]      // while "1"  (timeout="50000")
[09:17:23.421]      // while-condition  =>  TRUE
[09:17:23.421]      // while "1"  (timeout="50000")
[09:17:23.422]      // while-condition  =>  TRUE
[09:17:23.422]      // while "1"  (timeout="50000")
[09:17:23.422]      // while-condition  =>  TRUE
[09:17:23.422]      // while "1"  (timeout="50000")
[09:17:23.422]      // while-condition  =>  TRUE
[09:17:23.423]      // while "1"  (timeout="50000")
[09:17:23.423]      // while-condition  =>  TRUE
[09:17:23.423]      // while "1"  (timeout="50000")
[09:17:23.423]      // while-condition  =>  TRUE
[09:17:23.423]      // while "1"  (timeout="50000")
[09:17:23.423]      // while-condition  =>  TRUE
[09:17:23.424]      // while "1"  (timeout="50000")
[09:17:23.424]      // while-condition  =>  TRUE
[09:17:23.424]      // while "1"  (timeout="50000")
[09:17:23.424]      // while-condition  =>  TRUE
[09:17:23.424]      // while "1"  (timeout="50000")
[09:17:23.425]      // while-condition  =>  TRUE
[09:17:23.425]      // while "1"  (timeout="50000")
[09:17:23.425]      // while-condition  =>  TRUE
[09:17:23.425]      // while "1"  (timeout="50000")
[09:17:23.426]      // while-condition  =>  TRUE
[09:17:23.427]      // while "1"  (timeout="50000")
[09:17:23.427]      // while-condition  =>  TRUE
[09:17:23.427]      // while "1"  (timeout="50000")
[09:17:23.427]      // while-condition  =>  TRUE
[09:17:23.428]      // while "1"  (timeout="50000")
[09:17:23.428]      // while-condition  =>  TRUE
[09:17:23.428]      // while "1"  (timeout="50000")
[09:17:23.429]      // while-condition  =>  TRUE
[09:17:23.429]      // while "1"  (timeout="50000")
[09:17:23.429]      // while-condition  =>  TRUE
[09:17:23.429]      // while "1"  (timeout="50000")
[09:17:23.429]      // while-condition  =>  TRUE
[09:17:23.430]      // while "1"  (timeout="50000")
[09:17:23.430]      // while-condition  =>  TRUE
[09:17:23.430]      // while "1"  (timeout="50000")
[09:17:23.430]      // while-condition  =>  TRUE
[09:17:23.430]      // while "1"  (timeout="50000")
[09:17:23.430]      // while-condition  =>  TRUE
[09:17:23.431]      // while "1"  (timeout="50000")
[09:17:23.431]      // while-condition  =>  TRUE
[09:17:23.431]      // while "1"  (timeout="50000")
[09:17:23.431]      // while-condition  =>  TRUE
[09:17:23.431]      // while "1"  (timeout="50000")
[09:17:23.432]      // while-condition  =>  TRUE
[09:17:23.432]      // while "1"  (timeout="50000")
[09:17:23.432]      // while-condition  =>  TRUE
[09:17:23.433]      // while "1"  (timeout="50000")
[09:17:23.433]      // while-condition  =>  TRUE
[09:17:23.433]      // while "1"  (timeout="50000")
[09:17:23.433]      // while-condition  =>  TRUE
[09:17:23.434]      // while "1"  (timeout="50000")
[09:17:23.434]      // while-condition  =>  TRUE
[09:17:23.434]      // while "1"  (timeout="50000")
[09:17:23.434]      // while-condition  =>  TRUE
[09:17:23.435]      // while "1"  (timeout="50000")
[09:17:23.435]      // while-condition  =>  TRUE
[09:17:23.435]      // while "1"  (timeout="50000")
[09:17:23.436]      // while-condition  =>  TRUE
[09:17:23.436]      // while "1"  (timeout="50000")
[09:17:23.436]      // while-condition  =>  TRUE
[09:17:23.436]      // while "1"  (timeout="50000")
[09:17:23.436]      // while-condition  =>  TRUE
[09:17:23.436]      // while "1"  (timeout="50000")
[09:17:23.436]      // while-condition  =>  TRUE
[09:17:23.436]      // while "1"  (timeout="50000")
[09:17:23.436]      // while-condition  =>  TRUE
[09:17:23.436]      // while "1"  (timeout="50000")
[09:17:23.437]      // while-condition  =>  TRUE
[09:17:23.438]      // while "1"  (timeout="50000")
[09:17:23.438]      // while-condition  =>  TRUE
[09:17:23.438]      // while "1"  (timeout="50000")
[09:17:23.438]      // while-condition  =>  TRUE
[09:17:23.438]      // while "1"  (timeout="50000")
[09:17:23.439]      // while-condition  =>  TRUE
[09:17:23.439]      // while "1"  (timeout="50000")
[09:17:23.439]      // while-condition  =>  TRUE
[09:17:23.439]      // while "1"  (timeout="50000")
[09:17:23.439]      // while-condition  =>  TRUE
[09:17:23.440]      // while "1"  (timeout="50000")
[09:17:23.440]      // while-condition  =>  TRUE
[09:17:23.440]      // while "1"  (timeout="50000")
[09:17:23.440]      // while-condition  =>  TRUE
[09:17:23.440]      // while "1"  (timeout="50000")
[09:17:23.440]      // while-condition  =>  TRUE
[09:17:23.441]      // while "1"  (timeout="50000")
[09:17:23.441]      // while-condition  =>  TRUE
[09:17:23.441]      // while "1"  (timeout="50000")
[09:17:23.441]      // while-condition  =>  TRUE
[09:17:23.442]      // while "1"  (timeout="50000")
[09:17:23.442]      // while-condition  =>  TRUE
[09:17:23.443]      // while "1"  (timeout="50000")
[09:17:23.443]      // while-condition  =>  TRUE
[09:17:23.443]      // while "1"  (timeout="50000")
[09:17:23.444]      // while-condition  =>  TRUE
[09:17:23.444]      // while "1"  (timeout="50000")
[09:17:23.444]      // while-condition  =>  TRUE
[09:17:23.445]      // while "1"  (timeout="50000")
[09:17:23.445]      // while-condition  =>  TRUE
[09:17:23.445]      // while "1"  (timeout="50000")
[09:17:23.445]      // while-condition  =>  TRUE
[09:17:23.445]      // while "1"  (timeout="50000")
[09:17:23.446]      // while-condition  =>  TRUE
[09:17:23.446]      // while "1"  (timeout="50000")
[09:17:23.446]      // while-condition  =>  TRUE
[09:17:23.446]      // while "1"  (timeout="50000")
[09:17:23.447]      // while-condition  =>  TRUE
[09:17:23.447]      // while "1"  (timeout="50000")
[09:17:23.447]      // while-condition  =>  TRUE
[09:17:23.447]      // while "1"  (timeout="50000")
[09:17:23.448]      // while-condition  =>  TRUE
[09:17:23.448]      // while "1"  (timeout="50000")
[09:17:23.448]      // while-condition  =>  TRUE
[09:17:23.448]      // while "1"  (timeout="50000")
[09:17:23.448]      // while-condition  =>  TRUE
[09:17:23.449]      // while "1"  (timeout="50000")
[09:17:23.449]      // while-condition  =>  TRUE
[09:17:23.449]      // while "1"  (timeout="50000")
[09:17:23.449]      // while-condition  =>  TRUE
[09:17:23.449]      // while "1"  (timeout="50000")
[09:17:23.450]      // while-condition  =>  TRUE
[09:17:23.450]      // while "1"  (timeout="50000")
[09:17:23.450]      // while-condition  =>  TRUE
[09:17:23.450]      // while "1"  (timeout="50000")
[09:17:23.450]      // while-condition  =>  TRUE
[09:17:23.451]      // while "1"  (timeout="50000")
[09:17:23.451]      // while-condition  =>  TRUE
[09:17:23.451]      // while "1"  (timeout="50000")
[09:17:23.451]      // while-condition  =>  TRUE
[09:17:23.451]      // while "1"  (timeout="50000")
[09:17:23.452]      // while-condition  =>  TRUE
[09:17:23.452]      // while "1"  (timeout="50000")
[09:17:23.453]      // while-condition  =>  TRUE
[09:17:23.453]      // while "1"  (timeout="50000")
[09:17:23.453]      // while-condition  =>  TRUE
[09:17:23.453]      // while "1"  (timeout="50000")
[09:17:23.454]      // while-condition  =>  TRUE
[09:17:23.454]      // while "1"  (timeout="50000")
[09:17:23.454]      // while-condition  =>  TRUE
[09:17:23.454]      // while "1"  (timeout="50000")
[09:17:23.454]      // while  =>  TIMEOUT
[09:17:23.455]      // end while "1"
[09:17:23.455]    </control>
[09:17:23.455]    <block atomic="false" info="">
[09:17:23.455]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:17:23.457]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:17:23.458]    </block>
[09:17:23.458]  </sequence>
[09:17:23.458]  
[09:17:29.039]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:17:29.039]  
[09:17:29.039]  <debugvars>
[09:17:29.040]    // Pre-defined
[09:17:29.041]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:17:29.042]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:17:29.042]    __dp=0x00000000
[09:17:29.043]    __ap=0x00000000
[09:17:29.043]    __traceout=0x00000000      (Trace Disabled)
[09:17:29.044]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:17:29.045]    __FlashAddr=0x00000000
[09:17:29.045]    __FlashLen=0x00000000
[09:17:29.046]    __FlashArg=0x00000000
[09:17:29.046]    __FlashOp=0x00000000
[09:17:29.047]    __Result=0x00000000
[09:17:29.048]  </debugvars>
[09:17:29.048]  
[09:17:29.049]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:17:29.049]    <block atomic="false" info="">
[09:17:29.050]      __var nReset      = 0x80;
[09:17:29.051]        // -> [nReset <= 0x00000080]
[09:17:29.052]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:17:29.055]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:17:29.055]    </block>
[09:17:29.056]    <control if="" while="1" timeout="50000" info="">
[09:17:29.057]      // while "1"  (timeout="50000")
[09:17:29.057]      // while-condition  =>  TRUE
[09:17:29.058]      // while "1"  (timeout="50000")
[09:17:29.059]      // while-condition  =>  TRUE
[09:17:29.059]      // while "1"  (timeout="50000")
[09:17:29.060]      // while-condition  =>  TRUE
[09:17:29.060]      // while "1"  (timeout="50000")
[09:17:29.061]      // while-condition  =>  TRUE
[09:17:29.062]      // while "1"  (timeout="50000")
[09:17:29.063]      // while-condition  =>  TRUE
[09:17:29.063]      // while "1"  (timeout="50000")
[09:17:29.064]      // while-condition  =>  TRUE
[09:17:29.064]      // while "1"  (timeout="50000")
[09:17:29.064]      // while-condition  =>  TRUE
[09:17:29.065]      // while "1"  (timeout="50000")
[09:17:29.065]      // while-condition  =>  TRUE
[09:17:29.066]      // while "1"  (timeout="50000")
[09:17:29.066]      // while-condition  =>  TRUE
[09:17:29.067]      // while "1"  (timeout="50000")
[09:17:29.067]      // while-condition  =>  TRUE
[09:17:29.068]      // while "1"  (timeout="50000")
[09:17:29.068]      // while-condition  =>  TRUE
[09:17:29.069]      // while "1"  (timeout="50000")
[09:17:29.069]      // while-condition  =>  TRUE
[09:17:29.070]      // while "1"  (timeout="50000")
[09:17:29.070]      // while-condition  =>  TRUE
[09:17:29.070]      // while "1"  (timeout="50000")
[09:17:29.071]      // while-condition  =>  TRUE
[09:17:29.071]      // while "1"  (timeout="50000")
[09:17:29.072]      // while-condition  =>  TRUE
[09:17:29.072]      // while "1"  (timeout="50000")
[09:17:29.072]      // while-condition  =>  TRUE
[09:17:29.073]      // while "1"  (timeout="50000")
[09:17:29.073]      // while-condition  =>  TRUE
[09:17:29.073]      // while "1"  (timeout="50000")
[09:17:29.074]      // while-condition  =>  TRUE
[09:17:29.074]      // while "1"  (timeout="50000")
[09:17:29.074]      // while-condition  =>  TRUE
[09:17:29.075]      // while "1"  (timeout="50000")
[09:17:29.075]      // while-condition  =>  TRUE
[09:17:29.075]      // while "1"  (timeout="50000")
[09:17:29.075]      // while-condition  =>  TRUE
[09:17:29.076]      // while "1"  (timeout="50000")
[09:17:29.076]      // while-condition  =>  TRUE
[09:17:29.076]      // while "1"  (timeout="50000")
[09:17:29.076]      // while-condition  =>  TRUE
[09:17:29.077]      // while "1"  (timeout="50000")
[09:17:29.077]      // while-condition  =>  TRUE
[09:17:29.077]      // while "1"  (timeout="50000")
[09:17:29.077]      // while-condition  =>  TRUE
[09:17:29.077]      // while "1"  (timeout="50000")
[09:17:29.077]      // while-condition  =>  TRUE
[09:17:29.078]      // while "1"  (timeout="50000")
[09:17:29.078]      // while-condition  =>  TRUE
[09:17:29.078]      // while "1"  (timeout="50000")
[09:17:29.078]      // while-condition  =>  TRUE
[09:17:29.079]      // while "1"  (timeout="50000")
[09:17:29.079]      // while-condition  =>  TRUE
[09:17:29.079]      // while "1"  (timeout="50000")
[09:17:29.079]      // while-condition  =>  TRUE
[09:17:29.080]      // while "1"  (timeout="50000")
[09:17:29.080]      // while-condition  =>  TRUE
[09:17:29.080]      // while "1"  (timeout="50000")
[09:17:29.080]      // while-condition  =>  TRUE
[09:17:29.082]      // while "1"  (timeout="50000")
[09:17:29.082]      // while-condition  =>  TRUE
[09:17:29.082]      // while "1"  (timeout="50000")
[09:17:29.082]      // while-condition  =>  TRUE
[09:17:29.083]      // while "1"  (timeout="50000")
[09:17:29.083]      // while-condition  =>  TRUE
[09:17:29.083]      // while "1"  (timeout="50000")
[09:17:29.083]      // while-condition  =>  TRUE
[09:17:29.084]      // while "1"  (timeout="50000")
[09:17:29.084]      // while-condition  =>  TRUE
[09:17:29.084]      // while "1"  (timeout="50000")
[09:17:29.084]      // while-condition  =>  TRUE
[09:17:29.084]      // while "1"  (timeout="50000")
[09:17:29.085]      // while-condition  =>  TRUE
[09:17:29.085]      // while "1"  (timeout="50000")
[09:17:29.085]      // while-condition  =>  TRUE
[09:17:29.085]      // while "1"  (timeout="50000")
[09:17:29.085]      // while-condition  =>  TRUE
[09:17:29.086]      // while "1"  (timeout="50000")
[09:17:29.086]      // while-condition  =>  TRUE
[09:17:29.086]      // while "1"  (timeout="50000")
[09:17:29.086]      // while-condition  =>  TRUE
[09:17:29.086]      // while "1"  (timeout="50000")
[09:17:29.086]      // while-condition  =>  TRUE
[09:17:29.087]      // while "1"  (timeout="50000")
[09:17:29.087]      // while-condition  =>  TRUE
[09:17:29.087]      // while "1"  (timeout="50000")
[09:17:29.088]      // while-condition  =>  TRUE
[09:17:29.088]      // while "1"  (timeout="50000")
[09:17:29.088]      // while-condition  =>  TRUE
[09:17:29.088]      // while "1"  (timeout="50000")
[09:17:29.088]      // while-condition  =>  TRUE
[09:17:29.089]      // while "1"  (timeout="50000")
[09:17:29.089]      // while-condition  =>  TRUE
[09:17:29.089]      // while "1"  (timeout="50000")
[09:17:29.089]      // while-condition  =>  TRUE
[09:17:29.089]      // while "1"  (timeout="50000")
[09:17:29.089]      // while-condition  =>  TRUE
[09:17:29.089]      // while "1"  (timeout="50000")
[09:17:29.089]      // while-condition  =>  TRUE
[09:17:29.089]      // while "1"  (timeout="50000")
[09:17:29.089]      // while-condition  =>  TRUE
[09:17:29.090]      // while "1"  (timeout="50000")
[09:17:29.090]      // while-condition  =>  TRUE
[09:17:29.090]      // while "1"  (timeout="50000")
[09:17:29.090]      // while-condition  =>  TRUE
[09:17:29.090]      // while "1"  (timeout="50000")
[09:17:29.091]      // while-condition  =>  TRUE
[09:17:29.091]      // while "1"  (timeout="50000")
[09:17:29.091]      // while-condition  =>  TRUE
[09:17:29.091]      // while "1"  (timeout="50000")
[09:17:29.091]      // while-condition  =>  TRUE
[09:17:29.092]      // while "1"  (timeout="50000")
[09:17:29.093]      // while-condition  =>  TRUE
[09:17:29.093]      // while "1"  (timeout="50000")
[09:17:29.093]      // while-condition  =>  TRUE
[09:17:29.093]      // while "1"  (timeout="50000")
[09:17:29.093]      // while-condition  =>  TRUE
[09:17:29.093]      // while "1"  (timeout="50000")
[09:17:29.093]      // while-condition  =>  TRUE
[09:17:29.093]      // while "1"  (timeout="50000")
[09:17:29.093]      // while-condition  =>  TRUE
[09:17:29.094]      // while "1"  (timeout="50000")
[09:17:29.094]      // while-condition  =>  TRUE
[09:17:29.094]      // while "1"  (timeout="50000")
[09:17:29.094]      // while-condition  =>  TRUE
[09:17:29.094]      // while "1"  (timeout="50000")
[09:17:29.095]      // while-condition  =>  TRUE
[09:17:29.095]      // while "1"  (timeout="50000")
[09:17:29.095]      // while-condition  =>  TRUE
[09:17:29.095]      // while "1"  (timeout="50000")
[09:17:29.096]      // while-condition  =>  TRUE
[09:17:29.097]      // while "1"  (timeout="50000")
[09:17:29.097]      // while-condition  =>  TRUE
[09:17:29.097]      // while "1"  (timeout="50000")
[09:17:29.097]      // while-condition  =>  TRUE
[09:17:29.097]      // while "1"  (timeout="50000")
[09:17:29.098]      // while-condition  =>  TRUE
[09:17:29.098]      // while "1"  (timeout="50000")
[09:17:29.098]      // while-condition  =>  TRUE
[09:17:29.098]      // while "1"  (timeout="50000")
[09:17:29.098]      // while-condition  =>  TRUE
[09:17:29.099]      // while "1"  (timeout="50000")
[09:17:29.099]      // while-condition  =>  TRUE
[09:17:29.099]      // while "1"  (timeout="50000")
[09:17:29.099]      // while-condition  =>  TRUE
[09:17:29.099]      // while "1"  (timeout="50000")
[09:17:29.100]      // while-condition  =>  TRUE
[09:17:29.100]      // while "1"  (timeout="50000")
[09:17:29.100]      // while-condition  =>  TRUE
[09:17:29.100]      // while "1"  (timeout="50000")
[09:17:29.100]      // while-condition  =>  TRUE
[09:17:29.100]      // while "1"  (timeout="50000")
[09:17:29.100]      // while-condition  =>  TRUE
[09:17:29.100]      // while "1"  (timeout="50000")
[09:17:29.100]      // while-condition  =>  TRUE
[09:17:29.100]      // while "1"  (timeout="50000")
[09:17:29.101]      // while-condition  =>  TRUE
[09:17:29.101]      // while "1"  (timeout="50000")
[09:17:29.101]      // while-condition  =>  TRUE
[09:17:29.101]      // while "1"  (timeout="50000")
[09:17:29.102]      // while-condition  =>  TRUE
[09:17:29.102]      // while "1"  (timeout="50000")
[09:17:29.102]      // while-condition  =>  TRUE
[09:17:29.102]      // while "1"  (timeout="50000")
[09:17:29.102]      // while-condition  =>  TRUE
[09:17:29.103]      // while "1"  (timeout="50000")
[09:17:29.104]      // while-condition  =>  TRUE
[09:17:29.104]      // while "1"  (timeout="50000")
[09:17:29.104]      // while-condition  =>  TRUE
[09:17:29.104]      // while "1"  (timeout="50000")
[09:17:29.104]      // while-condition  =>  TRUE
[09:17:29.105]      // while "1"  (timeout="50000")
[09:17:29.105]      // while-condition  =>  TRUE
[09:17:29.105]      // while "1"  (timeout="50000")
[09:17:29.105]      // while-condition  =>  TRUE
[09:17:29.105]      // while "1"  (timeout="50000")
[09:17:29.105]      // while-condition  =>  TRUE
[09:17:29.106]      // while "1"  (timeout="50000")
[09:17:29.106]      // while-condition  =>  TRUE
[09:17:29.106]      // while "1"  (timeout="50000")
[09:17:29.106]      // while-condition  =>  TRUE
[09:17:29.107]      // while "1"  (timeout="50000")
[09:17:29.107]      // while-condition  =>  TRUE
[09:17:29.107]      // while "1"  (timeout="50000")
[09:17:29.107]      // while-condition  =>  TRUE
[09:17:29.107]      // while "1"  (timeout="50000")
[09:17:29.108]      // while-condition  =>  TRUE
[09:17:29.108]      // while "1"  (timeout="50000")
[09:17:29.108]      // while-condition  =>  TRUE
[09:17:29.108]      // while "1"  (timeout="50000")
[09:17:29.108]      // while-condition  =>  TRUE
[09:17:29.109]      // while "1"  (timeout="50000")
[09:17:29.109]      // while-condition  =>  TRUE
[09:17:29.109]      // while "1"  (timeout="50000")
[09:17:29.109]      // while-condition  =>  TRUE
[09:17:29.109]      // while "1"  (timeout="50000")
[09:17:29.109]      // while-condition  =>  TRUE
[09:17:29.109]      // while "1"  (timeout="50000")
[09:17:29.109]      // while-condition  =>  TRUE
[09:17:29.110]      // while "1"  (timeout="50000")
[09:17:29.110]      // while-condition  =>  TRUE
[09:17:29.111]      // while "1"  (timeout="50000")
[09:17:29.111]      // while  =>  TIMEOUT
[09:17:29.111]      // end while "1"
[09:17:29.111]    </control>
[09:17:29.111]    <block atomic="false" info="">
[09:17:29.111]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:17:29.113]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:17:29.113]    </block>
[09:17:29.113]    <control if="" while="1" timeout="10000" info="">
[09:17:29.113]      // while "1"  (timeout="10000")
[09:17:29.113]      // while-condition  =>  TRUE
[09:17:29.114]      // while "1"  (timeout="10000")
[09:17:29.115]      // while-condition  =>  TRUE
[09:17:29.115]      // while "1"  (timeout="10000")
[09:17:29.115]      // while-condition  =>  TRUE
[09:17:29.115]      // while "1"  (timeout="10000")
[09:17:29.115]      // while-condition  =>  TRUE
[09:17:29.115]      // while "1"  (timeout="10000")
[09:17:29.116]      // while-condition  =>  TRUE
[09:17:29.116]      // while "1"  (timeout="10000")
[09:17:29.116]      // while-condition  =>  TRUE
[09:17:29.117]      // while "1"  (timeout="10000")
[09:17:29.117]      // while-condition  =>  TRUE
[09:17:29.117]      // while "1"  (timeout="10000")
[09:17:29.117]      // while-condition  =>  TRUE
[09:17:29.118]      // while "1"  (timeout="10000")
[09:17:29.118]      // while-condition  =>  TRUE
[09:17:29.118]      // while "1"  (timeout="10000")
[09:17:29.118]      // while-condition  =>  TRUE
[09:17:29.118]      // while "1"  (timeout="10000")
[09:17:29.118]      // while-condition  =>  TRUE
[09:17:29.118]      // while "1"  (timeout="10000")
[09:17:29.118]      // while-condition  =>  TRUE
[09:17:29.119]      // while "1"  (timeout="10000")
[09:17:29.119]      // while-condition  =>  TRUE
[09:17:29.119]      // while "1"  (timeout="10000")
[09:17:29.119]      // while-condition  =>  TRUE
[09:17:29.120]      // while "1"  (timeout="10000")
[09:17:29.120]      // while-condition  =>  TRUE
[09:17:29.120]      // while "1"  (timeout="10000")
[09:17:29.120]      // while-condition  =>  TRUE
[09:17:29.121]      // while "1"  (timeout="10000")
[09:17:29.121]      // while-condition  =>  TRUE
[09:17:29.121]      // while "1"  (timeout="10000")
[09:17:29.121]      // while-condition  =>  TRUE
[09:17:29.121]      // while "1"  (timeout="10000")
[09:17:29.122]      // while-condition  =>  TRUE
[09:17:29.122]      // while "1"  (timeout="10000")
[09:17:29.122]      // while-condition  =>  TRUE
[09:17:29.122]      // while "1"  (timeout="10000")
[09:17:29.122]      // while-condition  =>  TRUE
[09:17:29.122]      // while "1"  (timeout="10000")
[09:17:29.123]      // while-condition  =>  TRUE
[09:17:29.123]      // while "1"  (timeout="10000")
[09:17:29.123]      // while-condition  =>  TRUE
[09:17:29.123]      // while "1"  (timeout="10000")
[09:17:29.123]      // while-condition  =>  TRUE
[09:17:29.124]      // while "1"  (timeout="10000")
[09:17:29.124]      // while-condition  =>  TRUE
[09:17:29.124]      // while "1"  (timeout="10000")
[09:17:29.124]      // while-condition  =>  TRUE
[09:17:29.124]      // while "1"  (timeout="10000")
[09:17:29.125]      // while-condition  =>  TRUE
[09:17:29.125]      // while "1"  (timeout="10000")
[09:17:29.125]      // while-condition  =>  TRUE
[09:17:29.125]      // while "1"  (timeout="10000")
[09:17:29.125]      // while-condition  =>  TRUE
[09:17:29.126]      // while "1"  (timeout="10000")
[09:17:29.126]      // while  =>  TIMEOUT
[09:17:29.127]      // end while "1"
[09:17:29.127]    </control>
[09:17:29.127]    <block atomic="true" info="">
[09:17:29.130]  
[09:17:29.130]  ! W001 : No atomic sequence support in debug unit
[09:17:29.130]  
[09:17:29.132]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:17:29.134]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:17:29.134]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:17:29.138]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:17:29.138]    </block>
[09:17:29.138]    <block atomic="false" info="">
[09:17:29.139]      __errorcontrol = 0x00000001;
[09:17:29.139]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:17:29.140]      ReadDP(0x0);
[09:17:29.142]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:17:29.143]      __errorcontrol = 0x00000000;
[09:17:29.143]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:17:29.143]    </block>
[09:17:29.144]  </sequence>
[09:17:29.144]  
[09:17:29.144]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:17:29.145]  
[09:17:29.145]  <debugvars>
[09:17:29.145]    // Pre-defined
[09:17:29.146]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:17:29.147]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:17:29.148]    __dp=0x00000000
[09:17:29.148]    __ap=0x00000000
[09:17:29.149]    __traceout=0x00000000      (Trace Disabled)
[09:17:29.150]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:17:29.150]    __FlashAddr=0x00000000
[09:17:29.151]    __FlashLen=0x00000000
[09:17:29.151]    __FlashArg=0x00000000
[09:17:29.152]    __FlashOp=0x00000000
[09:17:29.152]    __Result=0x00000000
[09:17:29.153]  </debugvars>
[09:17:29.153]  
[09:17:29.154]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:17:29.154]  </sequence>
[09:17:29.155]  
[09:17:29.160]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[09:17:29.160]  
[09:17:29.160]  <debugvars>
[09:17:29.160]    // Pre-defined
[09:17:29.161]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:17:29.161]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:17:29.162]    __dp=0x00000000
[09:17:29.162]    __ap=0x00000000
[09:17:29.162]    __traceout=0x00000000      (Trace Disabled)
[09:17:29.163]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:17:29.163]    __FlashAddr=0x00000000
[09:17:29.163]    __FlashLen=0x00000000
[09:17:29.164]    __FlashArg=0x00000000
[09:17:29.164]    __FlashOp=0x00000000
[09:17:29.164]    __Result=0x00000000
[09:17:29.164]  </debugvars>
[09:17:29.164]  
[09:17:29.165]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:17:29.165]    <block atomic="false" info="">
[09:17:29.165]      __var SW_DP_ABORT  = 0x0;
[09:17:29.166]        // -> [SW_DP_ABORT <= 0x00000000]
[09:17:29.166]      __var DP_CTRL_STAT = 0x4;
[09:17:29.166]        // -> [DP_CTRL_STAT <= 0x00000004]
[09:17:29.166]      __var DP_SELECT    = 0x8;
[09:17:29.167]        // -> [DP_SELECT <= 0x00000008]
[09:17:29.167]      __var powered_down = 0;
[09:17:29.168]        // -> [powered_down <= 0x00000000]
[09:17:29.168]      WriteDP(DP_SELECT, 0x00000000);
[09:17:29.170]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:17:29.170]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:17:29.171]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[09:17:29.172]        // -> [powered_down <= 0x00000001]
[09:17:29.172]    </block>
[09:17:29.172]    <control if="powered_down" while="" timeout="0" info="">
[09:17:29.173]      // if-block "powered_down"
[09:17:29.173]        // =>  TRUE
[09:17:29.173]      <block atomic="false" info="">
[09:17:29.174]        WriteDP(DP_CTRL_STAT, 0x50000000);
[09:17:29.175]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[09:17:29.176]      </block>
[09:17:29.176]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[09:17:29.176]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[09:17:29.179]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:17:29.179]        // while-condition  =>  FALSE
[09:17:29.180]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[09:17:29.180]      </control>
[09:17:29.180]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[09:17:29.180]        // if-block "(__protocol & 0xFFFF) == 1"
[09:17:29.180]          // =>  FALSE
[09:17:29.180]        // skip if-block "(__protocol & 0xFFFF) == 1"
[09:17:29.181]      </control>
[09:17:29.182]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[09:17:29.182]        // if-block "(__protocol & 0xFFFF) == 2"
[09:17:29.182]          // =>  TRUE
[09:17:29.183]        <block atomic="false" info="">
[09:17:29.183]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[09:17:29.185]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[09:17:29.185]          WriteDP(SW_DP_ABORT, 0x0000001E);
[09:17:29.186]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[09:17:29.187]        </block>
[09:17:29.187]        // end if-block "(__protocol & 0xFFFF) == 2"
[09:17:29.187]      </control>
[09:17:29.187]      // end if-block "powered_down"
[09:17:29.188]    </control>
[09:17:29.188]  </sequence>
[09:17:29.189]  
[09:17:29.294]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:17:29.294]  
[09:17:29.295]  <debugvars>
[09:17:29.295]    // Pre-defined
[09:17:29.296]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:17:29.297]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:17:29.297]    __dp=0x00000000
[09:17:29.298]    __ap=0x00000000
[09:17:29.298]    __traceout=0x00000000      (Trace Disabled)
[09:17:29.299]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:17:29.319]    __FlashAddr=0x00000000
[09:17:29.351]    __FlashLen=0x00000000
[09:17:29.361]    __FlashArg=0x00000000
[09:17:29.419]    __FlashOp=0x00000000
[09:17:29.445]    __Result=0x00000000
[09:17:29.453]  </debugvars>
[09:17:29.466]  
[09:17:29.466]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:17:29.467]    <block atomic="true" info="">
[09:17:29.476]  
[09:17:29.476]  ! W001 : No atomic sequence support in debug unit
[09:17:29.476]  
[09:17:29.495]      __var DP_R_IDCODE    = 0x0;
[09:17:29.497]        // -> [DP_R_IDCODE <= 0x00000000]
[09:17:29.497]      __var DP_W_ABORT    = 0x0;
[09:17:29.497]        // -> [DP_W_ABORT <= 0x00000000]
[09:17:29.498]      __var DP_CTRLSTAT = 0x4;
[09:17:29.498]        // -> [DP_CTRLSTAT <= 0x00000004]
[09:17:29.499]      __var DP_W_SELECT    = 0x8;
[09:17:29.499]        // -> [DP_W_SELECT <= 0x00000008]
[09:17:29.499]      __var AP_TAR		= 0x4;
[09:17:29.500]        // -> [AP_TAR <= 0x00000004]
[09:17:29.500]      __var AP_BD0		= 0x0;
[09:17:29.500]        // -> [AP_BD0 <= 0x00000000]
[09:17:29.501]      __var AP_BD1		= 0x4;
[09:17:29.501]        // -> [AP_BD1 <= 0x00000004]
[09:17:29.501]      __var AP_BD2		= 0x8;
[09:17:29.502]        // -> [AP_BD2 <= 0x00000008]
[09:17:29.502]      __var PCWithinFlash = 0;
[09:17:29.502]        // -> [PCWithinFlash <= 0x00000000]
[09:17:29.503]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:17:29.509]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.511]    </block>
[09:17:29.512]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:17:29.512]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:17:29.519]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.519]      // while-condition  =>  FALSE
[09:17:29.520]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:17:29.520]    </control>
[09:17:29.521]    <block atomic="true" info="">
[09:17:29.526]  
[09:17:29.526]  ! W001 : No atomic sequence support in debug unit
[09:17:29.526]  
[09:17:29.529]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:17:29.532]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:17:29.532]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:17:29.535]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.535]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:17:29.537]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:17:29.537]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:17:29.540]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.541]    </block>
[09:17:29.541]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:17:29.541]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.545]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.545]      // while-condition  =>  TRUE
[09:17:29.545]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.548]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.548]      // while-condition  =>  TRUE
[09:17:29.548]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.550]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.550]      // while-condition  =>  TRUE
[09:17:29.550]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.554]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.554]      // while-condition  =>  TRUE
[09:17:29.555]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.558]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.558]      // while-condition  =>  TRUE
[09:17:29.559]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.561]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.562]      // while-condition  =>  TRUE
[09:17:29.562]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.566]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.566]      // while-condition  =>  TRUE
[09:17:29.567]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.570]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.570]      // while-condition  =>  TRUE
[09:17:29.571]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.573]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.573]      // while-condition  =>  TRUE
[09:17:29.575]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.577]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.578]      // while-condition  =>  TRUE
[09:17:29.578]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.581]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.582]      // while-condition  =>  TRUE
[09:17:29.582]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.584]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.585]      // while-condition  =>  TRUE
[09:17:29.585]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.587]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.588]      // while-condition  =>  TRUE
[09:17:29.588]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.590]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.591]      // while-condition  =>  TRUE
[09:17:29.591]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.594]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.595]      // while-condition  =>  TRUE
[09:17:29.596]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.599]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.599]      // while-condition  =>  TRUE
[09:17:29.600]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.603]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.603]      // while-condition  =>  TRUE
[09:17:29.604]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.606]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.607]      // while-condition  =>  TRUE
[09:17:29.608]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.610]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.611]      // while-condition  =>  TRUE
[09:17:29.611]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.613]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.614]      // while-condition  =>  TRUE
[09:17:29.614]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.616]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.617]      // while-condition  =>  TRUE
[09:17:29.617]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.620]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.620]      // while-condition  =>  TRUE
[09:17:29.621]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.624]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.624]      // while-condition  =>  TRUE
[09:17:29.624]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.627]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.628]      // while-condition  =>  TRUE
[09:17:29.629]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.632]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.632]      // while-condition  =>  TRUE
[09:17:29.633]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.635]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.636]      // while-condition  =>  TRUE
[09:17:29.637]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.639]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.640]      // while-condition  =>  TRUE
[09:17:29.640]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.643]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.643]      // while-condition  =>  TRUE
[09:17:29.644]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:29.644]      // while  =>  TIMEOUT
[09:17:29.645]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:17:29.645]    </control>
[09:17:29.646]    <block atomic="false" info="">
[09:17:29.646]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:17:29.649]        // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:17:29.649]        // -> [PCWithinFlash <= 0x00000000]
[09:17:29.649]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:17:29.652]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:17:29.652]    </block>
[09:17:29.652]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:17:29.653]      // if-block "PCWithinFlash == 0"
[09:17:29.653]        // =>  TRUE
[09:17:29.653]      // end if-block "PCWithinFlash == 0"
[09:17:29.654]    </control>
[09:17:29.654]  </sequence>
[09:17:29.654]  
[09:17:29.701]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[09:17:29.701]  
[09:17:29.701]  <debugvars>
[09:17:29.702]    // Pre-defined
[09:17:29.703]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:17:29.704]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:17:29.704]    __dp=0x00000000
[09:17:29.705]    __ap=0x00000000
[09:17:29.706]    __traceout=0x00000000      (Trace Disabled)
[09:17:29.706]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:17:29.707]    __FlashAddr=0x00000000
[09:17:29.707]    __FlashLen=0x00000000
[09:17:29.708]    __FlashArg=0x00000000
[09:17:29.708]    __FlashOp=0x00000000
[09:17:29.708]    __Result=0x00000000
[09:17:29.709]  </debugvars>
[09:17:29.709]  
[09:17:29.710]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[09:17:29.710]    <block atomic="false" info="">
[09:17:29.710]    </block>
[09:17:29.712]  </sequence>
[09:17:29.712]  
[09:17:29.715]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[09:17:29.715]  
[09:17:29.715]  <debugvars>
[09:17:29.715]    // Pre-defined
[09:17:29.716]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:17:29.716]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:17:29.716]    __dp=0x00000000
[09:17:29.717]    __ap=0x00000000
[09:17:29.718]    __traceout=0x00000000      (Trace Disabled)
[09:17:29.718]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:17:29.718]    __FlashAddr=0x00000000
[09:17:29.718]    __FlashLen=0x00000000
[09:17:29.718]    __FlashArg=0x00000000
[09:17:29.718]    __FlashOp=0x00000000
[09:17:29.719]    __Result=0x00000000
[09:17:29.720]  </debugvars>
[09:17:29.720]  
[09:17:29.720]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:17:29.720]    <block atomic="false" info="">
[09:17:29.720]      __var nReset      = 0x80;
[09:17:29.720]        // -> [nReset <= 0x00000080]
[09:17:29.720]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:17:29.724]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:17:29.724]    </block>
[09:17:29.724]    <control if="" while="1" timeout="50000" info="">
[09:17:29.724]      // while "1"  (timeout="50000")
[09:17:29.725]      // while-condition  =>  TRUE
[09:17:29.725]      // while "1"  (timeout="50000")
[09:17:29.725]      // while-condition  =>  TRUE
[09:17:29.725]      // while "1"  (timeout="50000")
[09:17:29.725]      // while-condition  =>  TRUE
[09:17:29.725]      // while "1"  (timeout="50000")
[09:17:29.726]      // while-condition  =>  TRUE
[09:17:29.726]      // while "1"  (timeout="50000")
[09:17:29.727]      // while-condition  =>  TRUE
[09:17:29.727]      // while "1"  (timeout="50000")
[09:17:29.727]      // while-condition  =>  TRUE
[09:17:29.727]      // while "1"  (timeout="50000")
[09:17:29.728]      // while-condition  =>  TRUE
[09:17:29.728]      // while "1"  (timeout="50000")
[09:17:29.728]      // while-condition  =>  TRUE
[09:17:29.728]      // while "1"  (timeout="50000")
[09:17:29.728]      // while-condition  =>  TRUE
[09:17:29.728]      // while "1"  (timeout="50000")
[09:17:29.728]      // while-condition  =>  TRUE
[09:17:29.729]      // while "1"  (timeout="50000")
[09:17:29.729]      // while-condition  =>  TRUE
[09:17:29.729]      // while "1"  (timeout="50000")
[09:17:29.729]      // while-condition  =>  TRUE
[09:17:29.730]      // while "1"  (timeout="50000")
[09:17:29.730]      // while-condition  =>  TRUE
[09:17:29.730]      // while "1"  (timeout="50000")
[09:17:29.730]      // while-condition  =>  TRUE
[09:17:29.731]      // while "1"  (timeout="50000")
[09:17:29.731]      // while-condition  =>  TRUE
[09:17:29.731]      // while "1"  (timeout="50000")
[09:17:29.731]      // while-condition  =>  TRUE
[09:17:29.732]      // while "1"  (timeout="50000")
[09:17:29.732]      // while-condition  =>  TRUE
[09:17:29.732]      // while "1"  (timeout="50000")
[09:17:29.733]      // while-condition  =>  TRUE
[09:17:29.733]      // while "1"  (timeout="50000")
[09:17:29.734]      // while-condition  =>  TRUE
[09:17:29.734]      // while "1"  (timeout="50000")
[09:17:29.734]      // while-condition  =>  TRUE
[09:17:29.734]      // while "1"  (timeout="50000")
[09:17:29.734]      // while-condition  =>  TRUE
[09:17:29.734]      // while "1"  (timeout="50000")
[09:17:29.734]      // while-condition  =>  TRUE
[09:17:29.735]      // while "1"  (timeout="50000")
[09:17:29.735]      // while-condition  =>  TRUE
[09:17:29.735]      // while "1"  (timeout="50000")
[09:17:29.735]      // while-condition  =>  TRUE
[09:17:29.735]      // while "1"  (timeout="50000")
[09:17:29.736]      // while-condition  =>  TRUE
[09:17:29.736]      // while "1"  (timeout="50000")
[09:17:29.736]      // while-condition  =>  TRUE
[09:17:29.737]      // while "1"  (timeout="50000")
[09:17:29.737]      // while-condition  =>  TRUE
[09:17:29.737]      // while "1"  (timeout="50000")
[09:17:29.737]      // while-condition  =>  TRUE
[09:17:29.737]      // while "1"  (timeout="50000")
[09:17:29.738]      // while-condition  =>  TRUE
[09:17:29.738]      // while "1"  (timeout="50000")
[09:17:29.738]      // while-condition  =>  TRUE
[09:17:29.738]      // while "1"  (timeout="50000")
[09:17:29.738]      // while-condition  =>  TRUE
[09:17:29.738]      // while "1"  (timeout="50000")
[09:17:29.738]      // while-condition  =>  TRUE
[09:17:29.738]      // while "1"  (timeout="50000")
[09:17:29.738]      // while-condition  =>  TRUE
[09:17:29.739]      // while "1"  (timeout="50000")
[09:17:29.739]      // while-condition  =>  TRUE
[09:17:29.739]      // while "1"  (timeout="50000")
[09:17:29.739]      // while-condition  =>  TRUE
[09:17:29.739]      // while "1"  (timeout="50000")
[09:17:29.740]      // while-condition  =>  TRUE
[09:17:29.740]      // while "1"  (timeout="50000")
[09:17:29.740]      // while-condition  =>  TRUE
[09:17:29.740]      // while "1"  (timeout="50000")
[09:17:29.740]      // while-condition  =>  TRUE
[09:17:29.741]      // while "1"  (timeout="50000")
[09:17:29.741]      // while-condition  =>  TRUE
[09:17:29.741]      // while "1"  (timeout="50000")
[09:17:29.741]      // while-condition  =>  TRUE
[09:17:29.741]      // while "1"  (timeout="50000")
[09:17:29.741]      // while-condition  =>  TRUE
[09:17:29.742]      // while "1"  (timeout="50000")
[09:17:29.742]      // while-condition  =>  TRUE
[09:17:29.742]      // while "1"  (timeout="50000")
[09:17:29.742]      // while-condition  =>  TRUE
[09:17:29.742]      // while "1"  (timeout="50000")
[09:17:29.743]      // while-condition  =>  TRUE
[09:17:29.743]      // while "1"  (timeout="50000")
[09:17:29.744]      // while-condition  =>  TRUE
[09:17:29.744]      // while "1"  (timeout="50000")
[09:17:29.744]      // while-condition  =>  TRUE
[09:17:29.744]      // while "1"  (timeout="50000")
[09:17:29.744]      // while-condition  =>  TRUE
[09:17:29.745]      // while "1"  (timeout="50000")
[09:17:29.745]      // while-condition  =>  TRUE
[09:17:29.745]      // while "1"  (timeout="50000")
[09:17:29.745]      // while-condition  =>  TRUE
[09:17:29.745]      // while "1"  (timeout="50000")
[09:17:29.745]      // while-condition  =>  TRUE
[09:17:29.745]      // while "1"  (timeout="50000")
[09:17:29.746]      // while-condition  =>  TRUE
[09:17:29.746]      // while "1"  (timeout="50000")
[09:17:29.746]      // while-condition  =>  TRUE
[09:17:29.746]      // while "1"  (timeout="50000")
[09:17:29.747]      // while-condition  =>  TRUE
[09:17:29.747]      // while "1"  (timeout="50000")
[09:17:29.747]      // while-condition  =>  TRUE
[09:17:29.747]      // while "1"  (timeout="50000")
[09:17:29.747]      // while-condition  =>  TRUE
[09:17:29.747]      // while "1"  (timeout="50000")
[09:17:29.747]      // while-condition  =>  TRUE
[09:17:29.747]      // while "1"  (timeout="50000")
[09:17:29.748]      // while-condition  =>  TRUE
[09:17:29.748]      // while "1"  (timeout="50000")
[09:17:29.748]      // while-condition  =>  TRUE
[09:17:29.748]      // while "1"  (timeout="50000")
[09:17:29.749]      // while-condition  =>  TRUE
[09:17:29.749]      // while "1"  (timeout="50000")
[09:17:29.749]      // while-condition  =>  TRUE
[09:17:29.749]      // while "1"  (timeout="50000")
[09:17:29.750]      // while-condition  =>  TRUE
[09:17:29.750]      // while "1"  (timeout="50000")
[09:17:29.750]      // while-condition  =>  TRUE
[09:17:29.750]      // while "1"  (timeout="50000")
[09:17:29.750]      // while-condition  =>  TRUE
[09:17:29.751]      // while "1"  (timeout="50000")
[09:17:29.751]      // while-condition  =>  TRUE
[09:17:29.752]      // while "1"  (timeout="50000")
[09:17:29.752]      // while-condition  =>  TRUE
[09:17:29.752]      // while "1"  (timeout="50000")
[09:17:29.752]      // while-condition  =>  TRUE
[09:17:29.752]      // while "1"  (timeout="50000")
[09:17:29.752]      // while-condition  =>  TRUE
[09:17:29.752]      // while "1"  (timeout="50000")
[09:17:29.753]      // while-condition  =>  TRUE
[09:17:29.753]      // while "1"  (timeout="50000")
[09:17:29.754]      // while-condition  =>  TRUE
[09:17:29.754]      // while "1"  (timeout="50000")
[09:17:29.754]      // while-condition  =>  TRUE
[09:17:29.754]      // while "1"  (timeout="50000")
[09:17:29.754]      // while-condition  =>  TRUE
[09:17:29.755]      // while "1"  (timeout="50000")
[09:17:29.755]      // while-condition  =>  TRUE
[09:17:29.755]      // while "1"  (timeout="50000")
[09:17:29.755]      // while-condition  =>  TRUE
[09:17:29.755]      // while "1"  (timeout="50000")
[09:17:29.755]      // while-condition  =>  TRUE
[09:17:29.756]      // while "1"  (timeout="50000")
[09:17:29.756]      // while-condition  =>  TRUE
[09:17:29.756]      // while "1"  (timeout="50000")
[09:17:29.756]      // while-condition  =>  TRUE
[09:17:29.756]      // while "1"  (timeout="50000")
[09:17:29.756]      // while-condition  =>  TRUE
[09:17:29.757]      // while "1"  (timeout="50000")
[09:17:29.757]      // while-condition  =>  TRUE
[09:17:29.757]      // while "1"  (timeout="50000")
[09:17:29.758]      // while-condition  =>  TRUE
[09:17:29.758]      // while "1"  (timeout="50000")
[09:17:29.758]      // while-condition  =>  TRUE
[09:17:29.758]      // while "1"  (timeout="50000")
[09:17:29.758]      // while-condition  =>  TRUE
[09:17:29.759]      // while "1"  (timeout="50000")
[09:17:29.759]      // while-condition  =>  TRUE
[09:17:29.759]      // while "1"  (timeout="50000")
[09:17:29.759]      // while-condition  =>  TRUE
[09:17:29.759]      // while "1"  (timeout="50000")
[09:17:29.759]      // while-condition  =>  TRUE
[09:17:29.759]      // while "1"  (timeout="50000")
[09:17:29.759]      // while-condition  =>  TRUE
[09:17:29.759]      // while "1"  (timeout="50000")
[09:17:29.760]      // while-condition  =>  TRUE
[09:17:29.761]      // while "1"  (timeout="50000")
[09:17:29.761]      // while-condition  =>  TRUE
[09:17:29.761]      // while "1"  (timeout="50000")
[09:17:29.761]      // while-condition  =>  TRUE
[09:17:29.761]      // while "1"  (timeout="50000")
[09:17:29.761]      // while-condition  =>  TRUE
[09:17:29.762]      // while "1"  (timeout="50000")
[09:17:29.762]      // while-condition  =>  TRUE
[09:17:29.762]      // while "1"  (timeout="50000")
[09:17:29.762]      // while-condition  =>  TRUE
[09:17:29.762]      // while "1"  (timeout="50000")
[09:17:29.762]      // while-condition  =>  TRUE
[09:17:29.762]      // while "1"  (timeout="50000")
[09:17:29.762]      // while-condition  =>  TRUE
[09:17:29.763]      // while "1"  (timeout="50000")
[09:17:29.763]      // while-condition  =>  TRUE
[09:17:29.763]      // while "1"  (timeout="50000")
[09:17:29.763]      // while-condition  =>  TRUE
[09:17:29.763]      // while "1"  (timeout="50000")
[09:17:29.763]      // while-condition  =>  TRUE
[09:17:29.764]      // while "1"  (timeout="50000")
[09:17:29.764]      // while-condition  =>  TRUE
[09:17:29.764]      // while "1"  (timeout="50000")
[09:17:29.764]      // while-condition  =>  TRUE
[09:17:29.764]      // while "1"  (timeout="50000")
[09:17:29.765]      // while-condition  =>  TRUE
[09:17:29.786]      // while "1"  (timeout="50000")
[09:17:29.786]      // while  =>  TIMEOUT
[09:17:29.787]      // end while "1"
[09:17:29.787]    </control>
[09:17:29.787]    <block atomic="false" info="">
[09:17:29.788]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:17:29.791]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:17:29.792]    </block>
[09:17:29.792]    <control if="" while="1" timeout="10000" info="">
[09:17:29.792]      // while "1"  (timeout="10000")
[09:17:29.792]      // while-condition  =>  TRUE
[09:17:29.794]      // while "1"  (timeout="10000")
[09:17:29.794]      // while-condition  =>  TRUE
[09:17:29.794]      // while "1"  (timeout="10000")
[09:17:29.794]      // while-condition  =>  TRUE
[09:17:29.794]      // while "1"  (timeout="10000")
[09:17:29.794]      // while-condition  =>  TRUE
[09:17:29.794]      // while "1"  (timeout="10000")
[09:17:29.795]      // while-condition  =>  TRUE
[09:17:29.795]      // while "1"  (timeout="10000")
[09:17:29.795]      // while-condition  =>  TRUE
[09:17:29.795]      // while "1"  (timeout="10000")
[09:17:29.796]      // while-condition  =>  TRUE
[09:17:29.796]      // while "1"  (timeout="10000")
[09:17:29.796]      // while-condition  =>  TRUE
[09:17:29.797]      // while "1"  (timeout="10000")
[09:17:29.797]      // while-condition  =>  TRUE
[09:17:29.797]      // while "1"  (timeout="10000")
[09:17:29.797]      // while-condition  =>  TRUE
[09:17:29.797]      // while "1"  (timeout="10000")
[09:17:29.798]      // while-condition  =>  TRUE
[09:17:29.798]      // while "1"  (timeout="10000")
[09:17:29.798]      // while  =>  TIMEOUT
[09:17:29.798]      // end while "1"
[09:17:29.799]    </control>
[09:17:29.799]    <block atomic="true" info="">
[09:17:29.802]  
[09:17:29.802]  ! W001 : No atomic sequence support in debug unit
[09:17:29.802]  
[09:17:29.804]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:17:29.807]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:17:29.807]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:17:29.810]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:17:29.810]    </block>
[09:17:29.811]    <block atomic="false" info="">
[09:17:29.811]      __errorcontrol = 0x00000001;
[09:17:29.812]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:17:29.812]      ReadDP(0x0);
[09:17:29.815]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:17:29.815]      __errorcontrol = 0x00000000;
[09:17:29.816]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:17:29.816]    </block>
[09:17:29.817]  </sequence>
[09:17:29.817]  
[09:17:29.822]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[09:17:29.822]  
[09:17:29.822]  <debugvars>
[09:17:29.823]    // Pre-defined
[09:17:29.823]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:17:29.823]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:17:29.824]    __dp=0x00000000
[09:17:29.824]    __ap=0x00000000
[09:17:29.824]    __traceout=0x00000000      (Trace Disabled)
[09:17:29.825]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:17:29.825]    __FlashAddr=0x00000000
[09:17:29.825]    __FlashLen=0x00000000
[09:17:29.825]    __FlashArg=0x00000000
[09:17:29.825]    __FlashOp=0x00000000
[09:17:29.826]    __Result=0x00000000
[09:17:29.827]  </debugvars>
[09:17:29.827]  
[09:17:29.827]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[09:17:29.828]    <block atomic="false" info="">
[09:17:29.828]    </block>
[09:17:29.828]  </sequence>
[09:17:29.828]  
[09:17:30.046]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[09:17:30.046]  
[09:17:30.048]  <debugvars>
[09:17:30.048]    // Pre-defined
[09:17:30.049]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:17:30.049]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:17:30.049]    __dp=0x00000000
[09:17:30.050]    __ap=0x00000000
[09:17:30.050]    __traceout=0x00000000      (Trace Disabled)
[09:17:30.051]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:17:30.051]    __FlashAddr=0x00000000
[09:17:30.052]    __FlashLen=0x00000000
[09:17:30.052]    __FlashArg=0x00000000
[09:17:30.053]    __FlashOp=0x00000000
[09:17:30.054]    __Result=0x00000000
[09:17:30.054]  </debugvars>
[09:17:30.055]  
[09:17:30.056]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[09:17:30.056]    <block atomic="false" info="">
[09:17:30.057]      Sequence("ResetHardware");
[09:17:30.057]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:17:30.057]          <block atomic="false" info="">
[09:17:30.058]            __var nReset      = 0x80;
[09:17:30.058]              // -> [nReset <= 0x00000080]
[09:17:30.059]            DAP_SWJ_Pins(0x00, nReset, 0);
[09:17:30.061]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:17:30.061]          </block>
[09:17:30.061]          <control if="" while="1" timeout="50000" info="">
[09:17:30.061]            // while "1"  (timeout="50000")
[09:17:30.062]            // while-condition  =>  TRUE
[09:17:30.062]            // while "1"  (timeout="50000")
[09:17:30.062]            // while-condition  =>  TRUE
[09:17:30.062]            // while "1"  (timeout="50000")
[09:17:30.062]            // while-condition  =>  TRUE
[09:17:30.062]            // while "1"  (timeout="50000")
[09:17:30.063]            // while-condition  =>  TRUE
[09:17:30.064]            // while "1"  (timeout="50000")
[09:17:30.064]            // while-condition  =>  TRUE
[09:17:30.064]            // while "1"  (timeout="50000")
[09:17:30.065]            // while-condition  =>  TRUE
[09:17:30.065]            // while "1"  (timeout="50000")
[09:17:30.065]            // while-condition  =>  TRUE
[09:17:30.065]            // while "1"  (timeout="50000")
[09:17:30.066]            // while-condition  =>  TRUE
[09:17:30.066]            // while "1"  (timeout="50000")
[09:17:30.066]            // while-condition  =>  TRUE
[09:17:30.066]            // while "1"  (timeout="50000")
[09:17:30.067]            // while-condition  =>  TRUE
[09:17:30.067]            // while "1"  (timeout="50000")
[09:17:30.067]            // while-condition  =>  TRUE
[09:17:30.067]            // while "1"  (timeout="50000")
[09:17:30.067]            // while-condition  =>  TRUE
[09:17:30.068]            // while "1"  (timeout="50000")
[09:17:30.068]            // while-condition  =>  TRUE
[09:17:30.068]            // while "1"  (timeout="50000")
[09:17:30.068]            // while-condition  =>  TRUE
[09:17:30.069]            // while "1"  (timeout="50000")
[09:17:30.069]            // while-condition  =>  TRUE
[09:17:30.069]            // while "1"  (timeout="50000")
[09:17:30.069]            // while-condition  =>  TRUE
[09:17:30.069]            // while "1"  (timeout="50000")
[09:17:30.070]            // while-condition  =>  TRUE
[09:17:30.070]            // while "1"  (timeout="50000")
[09:17:30.070]            // while-condition  =>  TRUE
[09:17:30.070]            // while "1"  (timeout="50000")
[09:17:30.070]            // while-condition  =>  TRUE
[09:17:30.071]            // while "1"  (timeout="50000")
[09:17:30.071]            // while-condition  =>  TRUE
[09:17:30.071]            // while "1"  (timeout="50000")
[09:17:30.071]            // while-condition  =>  TRUE
[09:17:30.071]            // while "1"  (timeout="50000")
[09:17:30.071]            // while-condition  =>  TRUE
[09:17:30.072]            // while "1"  (timeout="50000")
[09:17:30.072]            // while-condition  =>  TRUE
[09:17:30.072]            // while "1"  (timeout="50000")
[09:17:30.072]            // while-condition  =>  TRUE
[09:17:30.072]            // while "1"  (timeout="50000")
[09:17:30.072]            // while-condition  =>  TRUE
[09:17:30.072]            // while "1"  (timeout="50000")
[09:17:30.072]            // while-condition  =>  TRUE
[09:17:30.072]            // while "1"  (timeout="50000")
[09:17:30.073]            // while-condition  =>  TRUE
[09:17:30.073]            // while "1"  (timeout="50000")
[09:17:30.073]            // while-condition  =>  TRUE
[09:17:30.073]            // while "1"  (timeout="50000")
[09:17:30.073]            // while-condition  =>  TRUE
[09:17:30.074]            // while "1"  (timeout="50000")
[09:17:30.074]            // while-condition  =>  TRUE
[09:17:30.074]            // while "1"  (timeout="50000")
[09:17:30.074]            // while-condition  =>  TRUE
[09:17:30.074]            // while "1"  (timeout="50000")
[09:17:30.074]            // while-condition  =>  TRUE
[09:17:30.076]            // while "1"  (timeout="50000")
[09:17:30.076]            // while-condition  =>  TRUE
[09:17:30.076]            // while "1"  (timeout="50000")
[09:17:30.076]            // while-condition  =>  TRUE
[09:17:30.076]            // while "1"  (timeout="50000")
[09:17:30.076]            // while-condition  =>  TRUE
[09:17:30.076]            // while "1"  (timeout="50000")
[09:17:30.077]            // while-condition  =>  TRUE
[09:17:30.077]            // while "1"  (timeout="50000")
[09:17:30.077]            // while-condition  =>  TRUE
[09:17:30.077]            // while "1"  (timeout="50000")
[09:17:30.077]            // while-condition  =>  TRUE
[09:17:30.078]            // while "1"  (timeout="50000")
[09:17:30.078]            // while-condition  =>  TRUE
[09:17:30.078]            // while "1"  (timeout="50000")
[09:17:30.078]            // while-condition  =>  TRUE
[09:17:30.079]            // while "1"  (timeout="50000")
[09:17:30.079]            // while-condition  =>  TRUE
[09:17:30.079]            // while "1"  (timeout="50000")
[09:17:30.079]            // while-condition  =>  TRUE
[09:17:30.079]            // while "1"  (timeout="50000")
[09:17:30.080]            // while-condition  =>  TRUE
[09:17:30.080]            // while "1"  (timeout="50000")
[09:17:30.080]            // while-condition  =>  TRUE
[09:17:30.080]            // while "1"  (timeout="50000")
[09:17:30.080]            // while-condition  =>  TRUE
[09:17:30.081]            // while "1"  (timeout="50000")
[09:17:30.081]            // while-condition  =>  TRUE
[09:17:30.081]            // while "1"  (timeout="50000")
[09:17:30.081]            // while-condition  =>  TRUE
[09:17:30.081]            // while "1"  (timeout="50000")
[09:17:30.081]            // while-condition  =>  TRUE
[09:17:30.082]            // while "1"  (timeout="50000")
[09:17:30.082]            // while-condition  =>  TRUE
[09:17:30.082]            // while "1"  (timeout="50000")
[09:17:30.082]            // while-condition  =>  TRUE
[09:17:30.082]            // while "1"  (timeout="50000")
[09:17:30.082]            // while-condition  =>  TRUE
[09:17:30.082]            // while "1"  (timeout="50000")
[09:17:30.083]            // while-condition  =>  TRUE
[09:17:30.083]            // while "1"  (timeout="50000")
[09:17:30.083]            // while-condition  =>  TRUE
[09:17:30.083]            // while "1"  (timeout="50000")
[09:17:30.083]            // while-condition  =>  TRUE
[09:17:30.084]            // while "1"  (timeout="50000")
[09:17:30.084]            // while-condition  =>  TRUE
[09:17:30.084]            // while "1"  (timeout="50000")
[09:17:30.084]            // while-condition  =>  TRUE
[09:17:30.084]            // while "1"  (timeout="50000")
[09:17:30.085]            // while-condition  =>  TRUE
[09:17:30.085]            // while "1"  (timeout="50000")
[09:17:30.085]            // while-condition  =>  TRUE
[09:17:30.085]            // while "1"  (timeout="50000")
[09:17:30.085]            // while-condition  =>  TRUE
[09:17:30.085]            // while "1"  (timeout="50000")
[09:17:30.086]            // while-condition  =>  TRUE
[09:17:30.086]            // while "1"  (timeout="50000")
[09:17:30.086]            // while-condition  =>  TRUE
[09:17:30.086]            // while "1"  (timeout="50000")
[09:17:30.086]            // while-condition  =>  TRUE
[09:17:30.087]            // while "1"  (timeout="50000")
[09:17:30.087]            // while-condition  =>  TRUE
[09:17:30.088]            // while "1"  (timeout="50000")
[09:17:30.088]            // while-condition  =>  TRUE
[09:17:30.088]            // while "1"  (timeout="50000")
[09:17:30.088]            // while-condition  =>  TRUE
[09:17:30.088]            // while "1"  (timeout="50000")
[09:17:30.088]            // while-condition  =>  TRUE
[09:17:30.088]            // while "1"  (timeout="50000")
[09:17:30.088]            // while-condition  =>  TRUE
[09:17:30.088]            // while "1"  (timeout="50000")
[09:17:30.089]            // while-condition  =>  TRUE
[09:17:30.089]            // while "1"  (timeout="50000")
[09:17:30.089]            // while-condition  =>  TRUE
[09:17:30.089]            // while "1"  (timeout="50000")
[09:17:30.089]            // while-condition  =>  TRUE
[09:17:30.090]            // while "1"  (timeout="50000")
[09:17:30.090]            // while-condition  =>  TRUE
[09:17:30.090]            // while "1"  (timeout="50000")
[09:17:30.090]            // while-condition  =>  TRUE
[09:17:30.090]            // while "1"  (timeout="50000")
[09:17:30.091]            // while-condition  =>  TRUE
[09:17:30.091]            // while "1"  (timeout="50000")
[09:17:30.091]            // while-condition  =>  TRUE
[09:17:30.091]            // while "1"  (timeout="50000")
[09:17:30.092]            // while-condition  =>  TRUE
[09:17:30.092]            // while "1"  (timeout="50000")
[09:17:30.092]            // while-condition  =>  TRUE
[09:17:30.092]            // while "1"  (timeout="50000")
[09:17:30.092]            // while-condition  =>  TRUE
[09:17:30.093]            // while "1"  (timeout="50000")
[09:17:30.093]            // while-condition  =>  TRUE
[09:17:30.093]            // while "1"  (timeout="50000")
[09:17:30.093]            // while-condition  =>  TRUE
[09:17:30.094]            // while "1"  (timeout="50000")
[09:17:30.094]            // while-condition  =>  TRUE
[09:17:30.094]            // while "1"  (timeout="50000")
[09:17:30.094]            // while-condition  =>  TRUE
[09:17:30.095]            // while "1"  (timeout="50000")
[09:17:30.095]            // while-condition  =>  TRUE
[09:17:30.096]            // while "1"  (timeout="50000")
[09:17:30.096]            // while-condition  =>  TRUE
[09:17:30.096]            // while "1"  (timeout="50000")
[09:17:30.097]            // while-condition  =>  TRUE
[09:17:30.097]            // while "1"  (timeout="50000")
[09:17:30.097]            // while-condition  =>  TRUE
[09:17:30.097]            // while "1"  (timeout="50000")
[09:17:30.097]            // while-condition  =>  TRUE
[09:17:30.098]            // while "1"  (timeout="50000")
[09:17:30.098]            // while-condition  =>  TRUE
[09:17:30.098]            // while "1"  (timeout="50000")
[09:17:30.098]            // while-condition  =>  TRUE
[09:17:30.098]            // while "1"  (timeout="50000")
[09:17:30.099]            // while-condition  =>  TRUE
[09:17:30.099]            // while "1"  (timeout="50000")
[09:17:30.099]            // while-condition  =>  TRUE
[09:17:30.099]            // while "1"  (timeout="50000")
[09:17:30.100]            // while-condition  =>  TRUE
[09:17:30.100]            // while "1"  (timeout="50000")
[09:17:30.100]            // while-condition  =>  TRUE
[09:17:30.100]            // while "1"  (timeout="50000")
[09:17:30.100]            // while-condition  =>  TRUE
[09:17:30.101]            // while "1"  (timeout="50000")
[09:17:30.101]            // while-condition  =>  TRUE
[09:17:30.101]            // while "1"  (timeout="50000")
[09:17:30.101]            // while-condition  =>  TRUE
[09:17:30.101]            // while "1"  (timeout="50000")
[09:17:30.101]            // while-condition  =>  TRUE
[09:17:30.101]            // while "1"  (timeout="50000")
[09:17:30.101]            // while-condition  =>  TRUE
[09:17:30.102]            // while "1"  (timeout="50000")
[09:17:30.102]            // while-condition  =>  TRUE
[09:17:30.102]            // while "1"  (timeout="50000")
[09:17:30.102]            // while-condition  =>  TRUE
[09:17:30.102]            // while "1"  (timeout="50000")
[09:17:30.103]            // while-condition  =>  TRUE
[09:17:30.103]            // while "1"  (timeout="50000")
[09:17:30.103]            // while-condition  =>  TRUE
[09:17:30.104]            // while "1"  (timeout="50000")
[09:17:30.104]            // while-condition  =>  TRUE
[09:17:30.104]            // while "1"  (timeout="50000")
[09:17:30.104]            // while-condition  =>  TRUE
[09:17:30.104]            // while "1"  (timeout="50000")
[09:17:30.104]            // while-condition  =>  TRUE
[09:17:30.104]            // while "1"  (timeout="50000")
[09:17:30.104]            // while-condition  =>  TRUE
[09:17:30.105]            // while "1"  (timeout="50000")
[09:17:30.105]            // while-condition  =>  TRUE
[09:17:30.105]            // while "1"  (timeout="50000")
[09:17:30.105]            // while-condition  =>  TRUE
[09:17:30.106]            // while "1"  (timeout="50000")
[09:17:30.106]            // while-condition  =>  TRUE
[09:17:30.106]            // while "1"  (timeout="50000")
[09:17:30.106]            // while-condition  =>  TRUE
[09:17:30.106]            // while "1"  (timeout="50000")
[09:17:30.106]            // while-condition  =>  TRUE
[09:17:30.107]            // while "1"  (timeout="50000")
[09:17:30.107]            // while-condition  =>  TRUE
[09:17:30.108]            // while "1"  (timeout="50000")
[09:17:30.108]            // while-condition  =>  TRUE
[09:17:30.108]            // while "1"  (timeout="50000")
[09:17:30.108]            // while-condition  =>  TRUE
[09:17:30.108]            // while "1"  (timeout="50000")
[09:17:30.109]            // while-condition  =>  TRUE
[09:17:30.109]            // while "1"  (timeout="50000")
[09:17:30.109]            // while-condition  =>  TRUE
[09:17:30.109]            // while "1"  (timeout="50000")
[09:17:30.109]            // while-condition  =>  TRUE
[09:17:30.110]            // while "1"  (timeout="50000")
[09:17:30.110]            // while-condition  =>  TRUE
[09:17:30.110]            // while "1"  (timeout="50000")
[09:17:30.110]            // while-condition  =>  TRUE
[09:17:30.110]            // while "1"  (timeout="50000")
[09:17:30.111]            // while  =>  TIMEOUT
[09:17:30.111]            // end while "1"
[09:17:30.111]          </control>
[09:17:30.111]          <block atomic="false" info="">
[09:17:30.111]            DAP_SWJ_Pins(nReset, nReset, 0);
[09:17:30.113]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:17:30.113]          </block>
[09:17:30.114]          <control if="" while="1" timeout="10000" info="">
[09:17:30.114]            // while "1"  (timeout="10000")
[09:17:30.114]            // while-condition  =>  TRUE
[09:17:30.115]            // while "1"  (timeout="10000")
[09:17:30.115]            // while-condition  =>  TRUE
[09:17:30.115]            // while "1"  (timeout="10000")
[09:17:30.115]            // while-condition  =>  TRUE
[09:17:30.115]            // while "1"  (timeout="10000")
[09:17:30.115]            // while-condition  =>  TRUE
[09:17:30.115]            // while "1"  (timeout="10000")
[09:17:30.116]            // while-condition  =>  TRUE
[09:17:30.117]            // while "1"  (timeout="10000")
[09:17:30.117]            // while-condition  =>  TRUE
[09:17:30.118]            // while "1"  (timeout="10000")
[09:17:30.118]            // while-condition  =>  TRUE
[09:17:30.118]            // while "1"  (timeout="10000")
[09:17:30.118]            // while-condition  =>  TRUE
[09:17:30.119]            // while "1"  (timeout="10000")
[09:17:30.119]            // while-condition  =>  TRUE
[09:17:30.119]            // while "1"  (timeout="10000")
[09:17:30.119]            // while-condition  =>  TRUE
[09:17:30.120]            // while "1"  (timeout="10000")
[09:17:30.120]            // while-condition  =>  TRUE
[09:17:30.120]            // while "1"  (timeout="10000")
[09:17:30.120]            // while-condition  =>  TRUE
[09:17:30.120]            // while "1"  (timeout="10000")
[09:17:30.120]            // while-condition  =>  TRUE
[09:17:30.121]            // while "1"  (timeout="10000")
[09:17:30.121]            // while-condition  =>  TRUE
[09:17:30.121]            // while "1"  (timeout="10000")
[09:17:30.121]            // while-condition  =>  TRUE
[09:17:30.121]            // while "1"  (timeout="10000")
[09:17:30.121]            // while-condition  =>  TRUE
[09:17:30.121]            // while "1"  (timeout="10000")
[09:17:30.121]            // while-condition  =>  TRUE
[09:17:30.122]            // while "1"  (timeout="10000")
[09:17:30.122]            // while-condition  =>  TRUE
[09:17:30.122]            // while "1"  (timeout="10000")
[09:17:30.122]            // while-condition  =>  TRUE
[09:17:30.122]            // while "1"  (timeout="10000")
[09:17:30.123]            // while-condition  =>  TRUE
[09:17:30.123]            // while "1"  (timeout="10000")
[09:17:30.123]            // while-condition  =>  TRUE
[09:17:30.123]            // while "1"  (timeout="10000")
[09:17:30.124]            // while-condition  =>  TRUE
[09:17:30.124]            // while "1"  (timeout="10000")
[09:17:30.124]            // while-condition  =>  TRUE
[09:17:30.124]            // while "1"  (timeout="10000")
[09:17:30.125]            // while-condition  =>  TRUE
[09:17:30.125]            // while "1"  (timeout="10000")
[09:17:30.125]            // while-condition  =>  TRUE
[09:17:30.125]            // while "1"  (timeout="10000")
[09:17:30.125]            // while-condition  =>  TRUE
[09:17:30.126]            // while "1"  (timeout="10000")
[09:17:30.126]            // while  =>  TIMEOUT
[09:17:30.126]            // end while "1"
[09:17:30.126]          </control>
[09:17:30.127]          <block atomic="true" info="">
[09:17:30.129]  
[09:17:30.129]  ! W001 : No atomic sequence support in debug unit
[09:17:30.129]  
[09:17:30.132]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:17:30.134]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:17:30.135]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:17:30.137]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:17:30.138]          </block>
[09:17:30.139]          <block atomic="false" info="">
[09:17:30.139]            __errorcontrol = 0x00000001;
[09:17:30.140]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:17:30.140]            ReadDP(0x0);
[09:17:30.143]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:17:30.143]            __errorcontrol = 0x00000000;
[09:17:30.143]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:17:30.143]          </block>
[09:17:30.145]        </sequence>
[09:17:30.145]      Sequence("DebugPortSetup");
[09:17:30.146]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:17:30.146]        </sequence>
[09:17:30.147]      Sequence("DebugPortStart");
[09:17:30.147]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:17:30.148]          <block atomic="false" info="">
[09:17:30.148]            __var SW_DP_ABORT  = 0x0;
[09:17:30.149]              // -> [SW_DP_ABORT <= 0x00000000]
[09:17:30.150]            __var DP_CTRL_STAT = 0x4;
[09:17:30.150]              // -> [DP_CTRL_STAT <= 0x00000004]
[09:17:30.151]            __var DP_SELECT    = 0x8;
[09:17:30.151]              // -> [DP_SELECT <= 0x00000008]
[09:17:30.152]            __var powered_down = 0;
[09:17:30.152]              // -> [powered_down <= 0x00000000]
[09:17:30.152]            WriteDP(DP_SELECT, 0x00000000);
[09:17:30.155]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:17:30.155]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:17:30.158]              // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:17:30.158]              // -> [powered_down <= 0x00000000]
[09:17:30.158]          </block>
[09:17:30.158]          <control if="powered_down" while="" timeout="0" info="">
[09:17:30.159]            // if-block "powered_down"
[09:17:30.160]              // =>  FALSE
[09:17:30.160]            // skip if-block "powered_down"
[09:17:30.160]          </control>
[09:17:30.161]        </sequence>
[09:17:30.161]      Sequence("DebugCoreStart");
[09:17:30.161]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:17:30.161]          <block atomic="true" info="">
[09:17:30.164]  
[09:17:30.164]  ! W001 : No atomic sequence support in debug unit
[09:17:30.164]  
[09:17:30.166]            __var DP_R_IDCODE    = 0x0;
[09:17:30.167]              // -> [DP_R_IDCODE <= 0x00000000]
[09:17:30.167]            __var DP_W_ABORT    = 0x0;
[09:17:30.167]              // -> [DP_W_ABORT <= 0x00000000]
[09:17:30.168]            __var DP_CTRLSTAT = 0x4;
[09:17:30.168]              // -> [DP_CTRLSTAT <= 0x00000004]
[09:17:30.168]            __var DP_W_SELECT    = 0x8;
[09:17:30.169]              // -> [DP_W_SELECT <= 0x00000008]
[09:17:30.169]            __var AP_TAR		= 0x4;
[09:17:30.169]              // -> [AP_TAR <= 0x00000004]
[09:17:30.170]            __var AP_BD0		= 0x0;
[09:17:30.170]              // -> [AP_BD0 <= 0x00000000]
[09:17:30.170]            __var AP_BD1		= 0x4;
[09:17:30.171]              // -> [AP_BD1 <= 0x00000004]
[09:17:30.171]            __var AP_BD2		= 0x8;
[09:17:30.171]              // -> [AP_BD2 <= 0x00000008]
[09:17:30.172]            __var PCWithinFlash = 0;
[09:17:30.173]              // -> [PCWithinFlash <= 0x00000000]
[09:17:30.173]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:17:30.179]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.180]          </block>
[09:17:30.181]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:17:30.181]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:17:30.188]              // -> [Read32(0xE000EDF0) => 0x00030003]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.188]            // while-condition  =>  FALSE
[09:17:30.188]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:17:30.189]          </control>
[09:17:30.189]          <block atomic="true" info="">
[09:17:30.193]  
[09:17:30.193]  ! W001 : No atomic sequence support in debug unit
[09:17:30.193]  
[09:17:30.195]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:17:30.205]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:17:30.205]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:17:30.207]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.208]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:17:30.211]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:17:30.211]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:17:30.215]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.216]          </block>
[09:17:30.216]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:17:30.217]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.220]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.220]            // while-condition  =>  TRUE
[09:17:30.220]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.224]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.224]            // while-condition  =>  TRUE
[09:17:30.225]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.227]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.227]            // while-condition  =>  TRUE
[09:17:30.228]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.230]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.230]            // while-condition  =>  TRUE
[09:17:30.230]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.233]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.233]            // while-condition  =>  TRUE
[09:17:30.234]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.237]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.237]            // while-condition  =>  TRUE
[09:17:30.237]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.240]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.240]            // while-condition  =>  TRUE
[09:17:30.240]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.243]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.243]            // while-condition  =>  TRUE
[09:17:30.244]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.246]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.246]            // while-condition  =>  TRUE
[09:17:30.248]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.250]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.250]            // while-condition  =>  TRUE
[09:17:30.251]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.254]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.254]            // while-condition  =>  TRUE
[09:17:30.255]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.258]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.258]            // while-condition  =>  TRUE
[09:17:30.259]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.261]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.261]            // while-condition  =>  TRUE
[09:17:30.263]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.266]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.266]            // while-condition  =>  TRUE
[09:17:30.267]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.270]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.270]            // while-condition  =>  TRUE
[09:17:30.271]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.274]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.274]            // while-condition  =>  TRUE
[09:17:30.275]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.277]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.277]            // while-condition  =>  TRUE
[09:17:30.278]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.281]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.281]            // while-condition  =>  TRUE
[09:17:30.282]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.285]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.285]            // while-condition  =>  TRUE
[09:17:30.286]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.288]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.288]            // while-condition  =>  TRUE
[09:17:30.289]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.292]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.293]            // while-condition  =>  TRUE
[09:17:30.293]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.296]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.296]            // while-condition  =>  TRUE
[09:17:30.296]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.298]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.298]            // while-condition  =>  TRUE
[09:17:30.298]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.302]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.302]            // while-condition  =>  TRUE
[09:17:30.303]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.306]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.306]            // while-condition  =>  TRUE
[09:17:30.307]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.310]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.310]            // while-condition  =>  TRUE
[09:17:30.311]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.314]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.314]            // while-condition  =>  TRUE
[09:17:30.315]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:17:30.315]            // while  =>  TIMEOUT
[09:17:30.316]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:17:30.316]          </control>
[09:17:30.317]          <block atomic="false" info="">
[09:17:30.317]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:17:30.320]              // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:17:30.320]              // -> [PCWithinFlash <= 0x00000000]
[09:17:30.321]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:17:30.323]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:17:30.323]          </block>
[09:17:30.324]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:17:30.324]            // if-block "PCWithinFlash == 0"
[09:17:30.325]              // =>  TRUE
[09:17:30.325]            // end if-block "PCWithinFlash == 0"
[09:17:30.326]          </control>
[09:17:30.326]        </sequence>
[09:17:30.327]    </block>
[09:17:30.327]  </sequence>
[09:17:30.328]  
[09:17:41.333]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[09:17:41.333]  
[09:17:41.333]  <debugvars>
[09:17:41.334]    // Pre-defined
[09:17:41.335]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:17:41.335]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:17:41.335]    __dp=0x00000000
[09:17:41.336]    __ap=0x00000000
[09:17:41.337]    __traceout=0x00000000      (Trace Disabled)
[09:17:41.337]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:17:41.338]    __FlashAddr=0x00000000
[09:17:41.338]    __FlashLen=0x00000000
[09:17:41.339]    __FlashArg=0x00000000
[09:17:41.339]    __FlashOp=0x00000000
[09:17:41.340]    __Result=0x00000000
[09:17:41.340]  </debugvars>
[09:17:41.341]  
[09:17:41.341]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[09:17:41.342]    <block atomic="false" info="">
[09:17:41.342]      __var nReset      = 0x80;
[09:17:41.343]        // -> [nReset <= 0x00000080]
[09:17:41.343]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:17:41.346]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:17:41.346]    </block>
[09:17:41.347]    <control if="" while="1" timeout="50000" info="">
[09:17:41.347]      // while "1"  (timeout="50000")
[09:17:41.348]      // while-condition  =>  TRUE
[09:17:41.348]      // while "1"  (timeout="50000")
[09:17:41.348]      // while-condition  =>  TRUE
[09:17:41.349]      // while "1"  (timeout="50000")
[09:17:41.349]      // while-condition  =>  TRUE
[09:17:41.350]      // while "1"  (timeout="50000")
[09:17:41.350]      // while-condition  =>  TRUE
[09:17:41.351]      // while "1"  (timeout="50000")
[09:17:41.351]      // while-condition  =>  TRUE
[09:17:41.351]      // while "1"  (timeout="50000")
[09:17:41.351]      // while-condition  =>  TRUE
[09:17:41.351]      // while "1"  (timeout="50000")
[09:17:41.352]      // while-condition  =>  TRUE
[09:17:41.352]      // while "1"  (timeout="50000")
[09:17:41.352]      // while-condition  =>  TRUE
[09:17:41.352]      // while "1"  (timeout="50000")
[09:17:41.352]      // while-condition  =>  TRUE
[09:17:41.353]      // while "1"  (timeout="50000")
[09:17:41.353]      // while-condition  =>  TRUE
[09:17:41.353]      // while "1"  (timeout="50000")
[09:17:41.353]      // while-condition  =>  TRUE
[09:17:41.354]      // while "1"  (timeout="50000")
[09:17:41.354]      // while-condition  =>  TRUE
[09:17:41.355]      // while "1"  (timeout="50000")
[09:17:41.355]      // while-condition  =>  TRUE
[09:17:41.355]      // while "1"  (timeout="50000")
[09:17:41.355]      // while-condition  =>  TRUE
[09:17:41.355]      // while "1"  (timeout="50000")
[09:17:41.355]      // while-condition  =>  TRUE
[09:17:41.355]      // while "1"  (timeout="50000")
[09:17:41.356]      // while-condition  =>  TRUE
[09:17:41.356]      // while "1"  (timeout="50000")
[09:17:41.356]      // while-condition  =>  TRUE
[09:17:41.356]      // while "1"  (timeout="50000")
[09:17:41.356]      // while-condition  =>  TRUE
[09:17:41.357]      // while "1"  (timeout="50000")
[09:17:41.357]      // while-condition  =>  TRUE
[09:17:41.357]      // while "1"  (timeout="50000")
[09:17:41.358]      // while-condition  =>  TRUE
[09:17:41.358]      // while "1"  (timeout="50000")
[09:17:41.358]      // while-condition  =>  TRUE
[09:17:41.358]      // while "1"  (timeout="50000")
[09:17:41.358]      // while-condition  =>  TRUE
[09:17:41.359]      // while "1"  (timeout="50000")
[09:17:41.359]      // while-condition  =>  TRUE
[09:17:41.359]      // while "1"  (timeout="50000")
[09:17:41.359]      // while-condition  =>  TRUE
[09:17:41.359]      // while "1"  (timeout="50000")
[09:17:41.360]      // while-condition  =>  TRUE
[09:17:41.360]      // while "1"  (timeout="50000")
[09:17:41.360]      // while-condition  =>  TRUE
[09:17:41.360]      // while "1"  (timeout="50000")
[09:17:41.360]      // while-condition  =>  TRUE
[09:17:41.361]      // while "1"  (timeout="50000")
[09:17:41.361]      // while-condition  =>  TRUE
[09:17:41.361]      // while "1"  (timeout="50000")
[09:17:41.361]      // while-condition  =>  TRUE
[09:17:41.361]      // while "1"  (timeout="50000")
[09:17:41.361]      // while-condition  =>  TRUE
[09:17:41.362]      // while "1"  (timeout="50000")
[09:17:41.362]      // while-condition  =>  TRUE
[09:17:41.362]      // while "1"  (timeout="50000")
[09:17:41.362]      // while-condition  =>  TRUE
[09:17:41.362]      // while "1"  (timeout="50000")
[09:17:41.363]      // while-condition  =>  TRUE
[09:17:41.363]      // while "1"  (timeout="50000")
[09:17:41.363]      // while-condition  =>  TRUE
[09:17:41.363]      // while "1"  (timeout="50000")
[09:17:41.363]      // while-condition  =>  TRUE
[09:17:41.364]      // while "1"  (timeout="50000")
[09:17:41.364]      // while-condition  =>  TRUE
[09:17:41.364]      // while "1"  (timeout="50000")
[09:17:41.364]      // while-condition  =>  TRUE
[09:17:41.364]      // while "1"  (timeout="50000")
[09:17:41.364]      // while-condition  =>  TRUE
[09:17:41.364]      // while "1"  (timeout="50000")
[09:17:41.364]      // while-condition  =>  TRUE
[09:17:41.365]      // while "1"  (timeout="50000")
[09:17:41.365]      // while-condition  =>  TRUE
[09:17:41.365]      // while "1"  (timeout="50000")
[09:17:41.365]      // while-condition  =>  TRUE
[09:17:41.365]      // while "1"  (timeout="50000")
[09:17:41.366]      // while-condition  =>  TRUE
[09:17:41.366]      // while "1"  (timeout="50000")
[09:17:41.366]      // while-condition  =>  TRUE
[09:17:41.366]      // while "1"  (timeout="50000")
[09:17:41.366]      // while-condition  =>  TRUE
[09:17:41.367]      // while "1"  (timeout="50000")
[09:17:41.367]      // while-condition  =>  TRUE
[09:17:41.367]      // while "1"  (timeout="50000")
[09:17:41.367]      // while-condition  =>  TRUE
[09:17:41.367]      // while "1"  (timeout="50000")
[09:17:41.368]      // while-condition  =>  TRUE
[09:17:41.368]      // while "1"  (timeout="50000")
[09:17:41.368]      // while-condition  =>  TRUE
[09:17:41.369]      // while "1"  (timeout="50000")
[09:17:41.369]      // while-condition  =>  TRUE
[09:17:41.369]      // while "1"  (timeout="50000")
[09:17:41.369]      // while-condition  =>  TRUE
[09:17:41.369]      // while "1"  (timeout="50000")
[09:17:41.370]      // while-condition  =>  TRUE
[09:17:41.370]      // while "1"  (timeout="50000")
[09:17:41.370]      // while-condition  =>  TRUE
[09:17:41.370]      // while "1"  (timeout="50000")
[09:17:41.370]      // while-condition  =>  TRUE
[09:17:41.371]      // while "1"  (timeout="50000")
[09:17:41.371]      // while-condition  =>  TRUE
[09:17:41.371]      // while "1"  (timeout="50000")
[09:17:41.371]      // while-condition  =>  TRUE
[09:17:41.371]      // while "1"  (timeout="50000")
[09:17:41.372]      // while-condition  =>  TRUE
[09:17:41.372]      // while "1"  (timeout="50000")
[09:17:41.372]      // while-condition  =>  TRUE
[09:17:41.372]      // while "1"  (timeout="50000")
[09:17:41.372]      // while-condition  =>  TRUE
[09:17:41.373]      // while "1"  (timeout="50000")
[09:17:41.373]      // while-condition  =>  TRUE
[09:17:41.373]      // while "1"  (timeout="50000")
[09:17:41.373]      // while-condition  =>  TRUE
[09:17:41.373]      // while "1"  (timeout="50000")
[09:17:41.373]      // while-condition  =>  TRUE
[09:17:41.373]      // while "1"  (timeout="50000")
[09:17:41.374]      // while-condition  =>  TRUE
[09:17:41.374]      // while "1"  (timeout="50000")
[09:17:41.374]      // while-condition  =>  TRUE
[09:17:41.374]      // while "1"  (timeout="50000")
[09:17:41.374]      // while-condition  =>  TRUE
[09:17:41.374]      // while "1"  (timeout="50000")
[09:17:41.375]      // while-condition  =>  TRUE
[09:17:41.375]      // while "1"  (timeout="50000")
[09:17:41.375]      // while-condition  =>  TRUE
[09:17:41.376]      // while "1"  (timeout="50000")
[09:17:41.376]      // while-condition  =>  TRUE
[09:17:41.376]      // while "1"  (timeout="50000")
[09:17:41.376]      // while-condition  =>  TRUE
[09:17:41.376]      // while "1"  (timeout="50000")
[09:17:41.377]      // while-condition  =>  TRUE
[09:17:41.377]      // while "1"  (timeout="50000")
[09:17:41.377]      // while-condition  =>  TRUE
[09:17:41.377]      // while "1"  (timeout="50000")
[09:17:41.377]      // while-condition  =>  TRUE
[09:17:41.377]      // while "1"  (timeout="50000")
[09:17:41.377]      // while-condition  =>  TRUE
[09:17:41.378]      // while "1"  (timeout="50000")
[09:17:41.378]      // while-condition  =>  TRUE
[09:17:41.378]      // while "1"  (timeout="50000")
[09:17:41.378]      // while-condition  =>  TRUE
[09:17:41.378]      // while "1"  (timeout="50000")
[09:17:41.379]      // while-condition  =>  TRUE
[09:17:41.379]      // while "1"  (timeout="50000")
[09:17:41.379]      // while-condition  =>  TRUE
[09:17:41.380]      // while "1"  (timeout="50000")
[09:17:41.380]      // while-condition  =>  TRUE
[09:17:41.380]      // while "1"  (timeout="50000")
[09:17:41.380]      // while-condition  =>  TRUE
[09:17:41.380]      // while "1"  (timeout="50000")
[09:17:41.380]      // while-condition  =>  TRUE
[09:17:41.380]      // while "1"  (timeout="50000")
[09:17:41.380]      // while-condition  =>  TRUE
[09:17:41.381]      // while "1"  (timeout="50000")
[09:17:41.381]      // while-condition  =>  TRUE
[09:17:41.381]      // while "1"  (timeout="50000")
[09:17:41.381]      // while-condition  =>  TRUE
[09:17:41.381]      // while "1"  (timeout="50000")
[09:17:41.382]      // while-condition  =>  TRUE
[09:17:41.382]      // while "1"  (timeout="50000")
[09:17:41.382]      // while-condition  =>  TRUE
[09:17:41.382]      // while "1"  (timeout="50000")
[09:17:41.383]      // while-condition  =>  TRUE
[09:17:41.383]      // while "1"  (timeout="50000")
[09:17:41.383]      // while-condition  =>  TRUE
[09:17:41.383]      // while "1"  (timeout="50000")
[09:17:41.384]      // while-condition  =>  TRUE
[09:17:41.384]      // while "1"  (timeout="50000")
[09:17:41.384]      // while-condition  =>  TRUE
[09:17:41.384]      // while "1"  (timeout="50000")
[09:17:41.385]      // while-condition  =>  TRUE
[09:17:41.385]      // while "1"  (timeout="50000")
[09:17:41.386]      // while-condition  =>  TRUE
[09:17:41.386]      // while "1"  (timeout="50000")
[09:17:41.386]      // while-condition  =>  TRUE
[09:17:41.386]      // while "1"  (timeout="50000")
[09:17:41.387]      // while-condition  =>  TRUE
[09:17:41.387]      // while "1"  (timeout="50000")
[09:17:41.387]      // while-condition  =>  TRUE
[09:17:41.387]      // while "1"  (timeout="50000")
[09:17:41.388]      // while-condition  =>  TRUE
[09:17:41.388]      // while "1"  (timeout="50000")
[09:17:41.388]      // while-condition  =>  TRUE
[09:17:41.388]      // while "1"  (timeout="50000")
[09:17:41.388]      // while-condition  =>  TRUE
[09:17:41.388]      // while "1"  (timeout="50000")
[09:17:41.388]      // while-condition  =>  TRUE
[09:17:41.389]      // while "1"  (timeout="50000")
[09:17:41.389]      // while-condition  =>  TRUE
[09:17:41.389]      // while "1"  (timeout="50000")
[09:17:41.389]      // while-condition  =>  TRUE
[09:17:41.389]      // while "1"  (timeout="50000")
[09:17:41.390]      // while-condition  =>  TRUE
[09:17:41.390]      // while "1"  (timeout="50000")
[09:17:41.390]      // while-condition  =>  TRUE
[09:17:41.391]      // while "1"  (timeout="50000")
[09:17:41.391]      // while-condition  =>  TRUE
[09:17:41.391]      // while "1"  (timeout="50000")
[09:17:41.391]      // while-condition  =>  TRUE
[09:17:41.391]      // while "1"  (timeout="50000")
[09:17:41.392]      // while-condition  =>  TRUE
[09:17:41.392]      // while "1"  (timeout="50000")
[09:17:41.392]      // while-condition  =>  TRUE
[09:17:41.392]      // while "1"  (timeout="50000")
[09:17:41.392]      // while-condition  =>  TRUE
[09:17:41.393]      // while "1"  (timeout="50000")
[09:17:41.393]      // while-condition  =>  TRUE
[09:17:41.393]      // while "1"  (timeout="50000")
[09:17:41.393]      // while-condition  =>  TRUE
[09:17:41.393]      // while "1"  (timeout="50000")
[09:17:41.393]      // while-condition  =>  TRUE
[09:17:41.394]      // while "1"  (timeout="50000")
[09:17:41.394]      // while-condition  =>  TRUE
[09:17:41.394]      // while "1"  (timeout="50000")
[09:17:41.394]      // while-condition  =>  TRUE
[09:17:41.394]      // while "1"  (timeout="50000")
[09:17:41.395]      // while-condition  =>  TRUE
[09:17:41.395]      // while "1"  (timeout="50000")
[09:17:41.395]      // while-condition  =>  TRUE
[09:17:41.395]      // while "1"  (timeout="50000")
[09:17:41.395]      // while-condition  =>  TRUE
[09:17:41.395]      // while "1"  (timeout="50000")
[09:17:41.395]      // while-condition  =>  TRUE
[09:17:41.395]      // while "1"  (timeout="50000")
[09:17:41.395]      // while-condition  =>  TRUE
[09:17:41.396]      // while "1"  (timeout="50000")
[09:17:41.396]      // while-condition  =>  TRUE
[09:17:41.396]      // while "1"  (timeout="50000")
[09:17:41.397]      // while-condition  =>  TRUE
[09:17:41.397]      // while "1"  (timeout="50000")
[09:17:41.397]      // while-condition  =>  TRUE
[09:17:41.397]      // while "1"  (timeout="50000")
[09:17:41.397]      // while-condition  =>  TRUE
[09:17:41.398]      // while "1"  (timeout="50000")
[09:17:41.398]      // while-condition  =>  TRUE
[09:17:41.398]      // while "1"  (timeout="50000")
[09:17:41.398]      // while-condition  =>  TRUE
[09:17:41.399]      // while "1"  (timeout="50000")
[09:17:41.399]      // while-condition  =>  TRUE
[09:17:41.399]      // while "1"  (timeout="50000")
[09:17:41.399]      // while-condition  =>  TRUE
[09:17:41.400]      // while "1"  (timeout="50000")
[09:17:41.401]      // while-condition  =>  TRUE
[09:17:41.401]      // while "1"  (timeout="50000")
[09:17:41.401]      // while-condition  =>  TRUE
[09:17:41.401]      // while "1"  (timeout="50000")
[09:17:41.402]      // while-condition  =>  TRUE
[09:17:41.402]      // while "1"  (timeout="50000")
[09:17:41.402]      // while-condition  =>  TRUE
[09:17:41.402]      // while "1"  (timeout="50000")
[09:17:41.402]      // while-condition  =>  TRUE
[09:17:41.403]      // while "1"  (timeout="50000")
[09:17:41.403]      // while-condition  =>  TRUE
[09:17:41.403]      // while "1"  (timeout="50000")
[09:17:41.403]      // while-condition  =>  TRUE
[09:17:41.403]      // while "1"  (timeout="50000")
[09:17:41.403]      // while-condition  =>  TRUE
[09:17:41.403]      // while "1"  (timeout="50000")
[09:17:41.403]      // while-condition  =>  TRUE
[09:17:41.404]      // while "1"  (timeout="50000")
[09:17:41.404]      // while-condition  =>  TRUE
[09:17:41.405]      // while "1"  (timeout="50000")
[09:17:41.405]      // while-condition  =>  TRUE
[09:17:41.405]      // while "1"  (timeout="50000")
[09:17:41.405]      // while-condition  =>  TRUE
[09:17:41.405]      // while "1"  (timeout="50000")
[09:17:41.406]      // while-condition  =>  TRUE
[09:17:41.406]      // while "1"  (timeout="50000")
[09:17:41.406]      // while-condition  =>  TRUE
[09:17:41.406]      // while "1"  (timeout="50000")
[09:17:41.406]      // while-condition  =>  TRUE
[09:17:41.407]      // while "1"  (timeout="50000")
[09:17:41.407]      // while-condition  =>  TRUE
[09:17:41.407]      // while "1"  (timeout="50000")
[09:17:41.407]      // while  =>  TIMEOUT
[09:17:41.407]      // end while "1"
[09:17:41.408]    </control>
[09:17:41.408]    <block atomic="false" info="">
[09:17:41.408]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:17:41.409]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:17:41.409]    </block>
[09:17:41.409]  </sequence>
[09:17:41.409]  
[09:18:27.873]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:18:27.873]  
[09:18:27.873]  <debugvars>
[09:18:27.874]    // Pre-defined
[09:18:27.874]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:18:27.874]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:18:27.875]    __dp=0x00000000
[09:18:27.875]    __ap=0x00000000
[09:18:27.876]    __traceout=0x00000000      (Trace Disabled)
[09:18:27.876]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:18:27.876]    __FlashAddr=0x00000000
[09:18:27.877]    __FlashLen=0x00000000
[09:18:27.877]    __FlashArg=0x00000000
[09:18:27.877]    __FlashOp=0x00000000
[09:18:27.878]    __Result=0x00000000
[09:18:27.878]  </debugvars>
[09:18:27.879]  
[09:18:27.879]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:18:27.879]    <block atomic="false" info="">
[09:18:27.880]      __var nReset      = 0x80;
[09:18:27.880]        // -> [nReset <= 0x00000080]
[09:18:27.880]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:18:27.883]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:18:27.883]    </block>
[09:18:27.884]    <control if="" while="1" timeout="50000" info="">
[09:18:27.884]      // while "1"  (timeout="50000")
[09:18:27.884]      // while-condition  =>  TRUE
[09:18:27.885]      // while "1"  (timeout="50000")
[09:18:27.885]      // while-condition  =>  TRUE
[09:18:27.885]      // while "1"  (timeout="50000")
[09:18:27.886]      // while-condition  =>  TRUE
[09:18:27.886]      // while "1"  (timeout="50000")
[09:18:27.886]      // while-condition  =>  TRUE
[09:18:27.887]      // while "1"  (timeout="50000")
[09:18:27.887]      // while-condition  =>  TRUE
[09:18:27.887]      // while "1"  (timeout="50000")
[09:18:27.888]      // while-condition  =>  TRUE
[09:18:27.888]      // while "1"  (timeout="50000")
[09:18:27.888]      // while-condition  =>  TRUE
[09:18:27.889]      // while "1"  (timeout="50000")
[09:18:27.889]      // while-condition  =>  TRUE
[09:18:27.889]      // while "1"  (timeout="50000")
[09:18:27.890]      // while-condition  =>  TRUE
[09:18:27.890]      // while "1"  (timeout="50000")
[09:18:27.890]      // while-condition  =>  TRUE
[09:18:27.891]      // while "1"  (timeout="50000")
[09:18:27.891]      // while-condition  =>  TRUE
[09:18:27.891]      // while "1"  (timeout="50000")
[09:18:27.892]      // while-condition  =>  TRUE
[09:18:27.892]      // while "1"  (timeout="50000")
[09:18:27.892]      // while-condition  =>  TRUE
[09:18:27.893]      // while "1"  (timeout="50000")
[09:18:27.893]      // while-condition  =>  TRUE
[09:18:27.893]      // while "1"  (timeout="50000")
[09:18:27.894]      // while-condition  =>  TRUE
[09:18:27.894]      // while "1"  (timeout="50000")
[09:18:27.894]      // while-condition  =>  TRUE
[09:18:27.895]      // while "1"  (timeout="50000")
[09:18:27.895]      // while-condition  =>  TRUE
[09:18:27.895]      // while "1"  (timeout="50000")
[09:18:27.896]      // while-condition  =>  TRUE
[09:18:27.896]      // while "1"  (timeout="50000")
[09:18:27.896]      // while-condition  =>  TRUE
[09:18:27.897]      // while "1"  (timeout="50000")
[09:18:27.897]      // while-condition  =>  TRUE
[09:18:27.897]      // while "1"  (timeout="50000")
[09:18:27.898]      // while-condition  =>  TRUE
[09:18:27.898]      // while "1"  (timeout="50000")
[09:18:27.898]      // while-condition  =>  TRUE
[09:18:27.899]      // while "1"  (timeout="50000")
[09:18:27.899]      // while-condition  =>  TRUE
[09:18:27.899]      // while "1"  (timeout="50000")
[09:18:27.900]      // while-condition  =>  TRUE
[09:18:27.900]      // while "1"  (timeout="50000")
[09:18:27.900]      // while-condition  =>  TRUE
[09:18:27.901]      // while "1"  (timeout="50000")
[09:18:27.901]      // while-condition  =>  TRUE
[09:18:27.901]      // while "1"  (timeout="50000")
[09:18:27.902]      // while-condition  =>  TRUE
[09:18:27.902]      // while "1"  (timeout="50000")
[09:18:27.902]      // while-condition  =>  TRUE
[09:18:27.903]      // while "1"  (timeout="50000")
[09:18:27.903]      // while-condition  =>  TRUE
[09:18:27.903]      // while "1"  (timeout="50000")
[09:18:27.903]      // while-condition  =>  TRUE
[09:18:27.904]      // while "1"  (timeout="50000")
[09:18:27.904]      // while-condition  =>  TRUE
[09:18:27.904]      // while "1"  (timeout="50000")
[09:18:27.905]      // while-condition  =>  TRUE
[09:18:27.905]      // while "1"  (timeout="50000")
[09:18:27.905]      // while-condition  =>  TRUE
[09:18:27.905]      // while "1"  (timeout="50000")
[09:18:27.906]      // while-condition  =>  TRUE
[09:18:27.906]      // while "1"  (timeout="50000")
[09:18:27.906]      // while-condition  =>  TRUE
[09:18:27.906]      // while "1"  (timeout="50000")
[09:18:27.906]      // while-condition  =>  TRUE
[09:18:27.907]      // while "1"  (timeout="50000")
[09:18:27.907]      // while-condition  =>  TRUE
[09:18:27.907]      // while "1"  (timeout="50000")
[09:18:27.907]      // while-condition  =>  TRUE
[09:18:27.907]      // while "1"  (timeout="50000")
[09:18:27.908]      // while-condition  =>  TRUE
[09:18:27.908]      // while "1"  (timeout="50000")
[09:18:27.908]      // while-condition  =>  TRUE
[09:18:27.908]      // while "1"  (timeout="50000")
[09:18:27.908]      // while-condition  =>  TRUE
[09:18:27.909]      // while "1"  (timeout="50000")
[09:18:27.909]      // while-condition  =>  TRUE
[09:18:27.909]      // while "1"  (timeout="50000")
[09:18:27.909]      // while-condition  =>  TRUE
[09:18:27.909]      // while "1"  (timeout="50000")
[09:18:27.910]      // while-condition  =>  TRUE
[09:18:27.910]      // while "1"  (timeout="50000")
[09:18:27.910]      // while-condition  =>  TRUE
[09:18:27.910]      // while "1"  (timeout="50000")
[09:18:27.910]      // while-condition  =>  TRUE
[09:18:27.911]      // while "1"  (timeout="50000")
[09:18:27.911]      // while-condition  =>  TRUE
[09:18:27.911]      // while "1"  (timeout="50000")
[09:18:27.911]      // while-condition  =>  TRUE
[09:18:27.911]      // while "1"  (timeout="50000")
[09:18:27.912]      // while-condition  =>  TRUE
[09:18:27.912]      // while "1"  (timeout="50000")
[09:18:27.912]      // while-condition  =>  TRUE
[09:18:27.912]      // while "1"  (timeout="50000")
[09:18:27.912]      // while-condition  =>  TRUE
[09:18:27.913]      // while "1"  (timeout="50000")
[09:18:27.913]      // while-condition  =>  TRUE
[09:18:27.913]      // while "1"  (timeout="50000")
[09:18:27.913]      // while-condition  =>  TRUE
[09:18:27.913]      // while "1"  (timeout="50000")
[09:18:27.914]      // while-condition  =>  TRUE
[09:18:27.914]      // while "1"  (timeout="50000")
[09:18:27.914]      // while-condition  =>  TRUE
[09:18:27.914]      // while "1"  (timeout="50000")
[09:18:27.915]      // while-condition  =>  TRUE
[09:18:27.915]      // while "1"  (timeout="50000")
[09:18:27.915]      // while-condition  =>  TRUE
[09:18:27.915]      // while "1"  (timeout="50000")
[09:18:27.915]      // while-condition  =>  TRUE
[09:18:27.916]      // while "1"  (timeout="50000")
[09:18:27.916]      // while-condition  =>  TRUE
[09:18:27.916]      // while "1"  (timeout="50000")
[09:18:27.916]      // while-condition  =>  TRUE
[09:18:27.916]      // while "1"  (timeout="50000")
[09:18:27.917]      // while-condition  =>  TRUE
[09:18:27.917]      // while "1"  (timeout="50000")
[09:18:27.917]      // while-condition  =>  TRUE
[09:18:27.917]      // while "1"  (timeout="50000")
[09:18:27.918]      // while-condition  =>  TRUE
[09:18:27.918]      // while "1"  (timeout="50000")
[09:18:27.918]      // while-condition  =>  TRUE
[09:18:27.918]      // while "1"  (timeout="50000")
[09:18:27.919]      // while-condition  =>  TRUE
[09:18:27.919]      // while "1"  (timeout="50000")
[09:18:27.919]      // while-condition  =>  TRUE
[09:18:27.919]      // while "1"  (timeout="50000")
[09:18:27.919]      // while-condition  =>  TRUE
[09:18:27.920]      // while "1"  (timeout="50000")
[09:18:27.920]      // while-condition  =>  TRUE
[09:18:27.920]      // while "1"  (timeout="50000")
[09:18:27.920]      // while-condition  =>  TRUE
[09:18:27.920]      // while "1"  (timeout="50000")
[09:18:27.921]      // while-condition  =>  TRUE
[09:18:27.921]      // while "1"  (timeout="50000")
[09:18:27.921]      // while-condition  =>  TRUE
[09:18:27.921]      // while "1"  (timeout="50000")
[09:18:27.922]      // while-condition  =>  TRUE
[09:18:27.922]      // while "1"  (timeout="50000")
[09:18:27.922]      // while-condition  =>  TRUE
[09:18:27.922]      // while "1"  (timeout="50000")
[09:18:27.922]      // while-condition  =>  TRUE
[09:18:27.923]      // while "1"  (timeout="50000")
[09:18:27.923]      // while-condition  =>  TRUE
[09:18:27.923]      // while "1"  (timeout="50000")
[09:18:27.924]      // while-condition  =>  TRUE
[09:18:27.924]      // while "1"  (timeout="50000")
[09:18:27.924]      // while-condition  =>  TRUE
[09:18:27.924]      // while "1"  (timeout="50000")
[09:18:27.925]      // while-condition  =>  TRUE
[09:18:27.925]      // while "1"  (timeout="50000")
[09:18:27.925]      // while-condition  =>  TRUE
[09:18:27.925]      // while "1"  (timeout="50000")
[09:18:27.926]      // while-condition  =>  TRUE
[09:18:27.926]      // while "1"  (timeout="50000")
[09:18:27.926]      // while-condition  =>  TRUE
[09:18:27.927]      // while "1"  (timeout="50000")
[09:18:27.927]      // while-condition  =>  TRUE
[09:18:27.927]      // while "1"  (timeout="50000")
[09:18:27.927]      // while-condition  =>  TRUE
[09:18:27.928]      // while "1"  (timeout="50000")
[09:18:27.928]      // while-condition  =>  TRUE
[09:18:27.928]      // while "1"  (timeout="50000")
[09:18:27.928]      // while-condition  =>  TRUE
[09:18:27.929]      // while "1"  (timeout="50000")
[09:18:27.929]      // while-condition  =>  TRUE
[09:18:27.929]      // while "1"  (timeout="50000")
[09:18:27.929]      // while-condition  =>  TRUE
[09:18:27.930]      // while "1"  (timeout="50000")
[09:18:27.930]      // while-condition  =>  TRUE
[09:18:27.930]      // while "1"  (timeout="50000")
[09:18:27.930]      // while-condition  =>  TRUE
[09:18:27.931]      // while "1"  (timeout="50000")
[09:18:27.931]      // while-condition  =>  TRUE
[09:18:27.931]      // while "1"  (timeout="50000")
[09:18:27.931]      // while-condition  =>  TRUE
[09:18:27.932]      // while "1"  (timeout="50000")
[09:18:27.932]      // while-condition  =>  TRUE
[09:18:27.932]      // while "1"  (timeout="50000")
[09:18:27.932]      // while-condition  =>  TRUE
[09:18:27.933]      // while "1"  (timeout="50000")
[09:18:27.933]      // while-condition  =>  TRUE
[09:18:27.933]      // while "1"  (timeout="50000")
[09:18:27.933]      // while-condition  =>  TRUE
[09:18:27.934]      // while "1"  (timeout="50000")
[09:18:27.934]      // while-condition  =>  TRUE
[09:18:27.934]      // while "1"  (timeout="50000")
[09:18:27.934]      // while-condition  =>  TRUE
[09:18:27.934]      // while "1"  (timeout="50000")
[09:18:27.935]      // while-condition  =>  TRUE
[09:18:27.935]      // while "1"  (timeout="50000")
[09:18:27.935]      // while-condition  =>  TRUE
[09:18:27.935]      // while "1"  (timeout="50000")
[09:18:27.936]      // while-condition  =>  TRUE
[09:18:27.936]      // while "1"  (timeout="50000")
[09:18:27.936]      // while-condition  =>  TRUE
[09:18:27.936]      // while "1"  (timeout="50000")
[09:18:27.937]      // while-condition  =>  TRUE
[09:18:27.937]      // while "1"  (timeout="50000")
[09:18:27.937]      // while-condition  =>  TRUE
[09:18:27.937]      // while "1"  (timeout="50000")
[09:18:27.937]      // while-condition  =>  TRUE
[09:18:27.938]      // while "1"  (timeout="50000")
[09:18:27.938]      // while-condition  =>  TRUE
[09:18:27.938]      // while "1"  (timeout="50000")
[09:18:27.938]      // while-condition  =>  TRUE
[09:18:27.938]      // while "1"  (timeout="50000")
[09:18:27.939]      // while-condition  =>  TRUE
[09:18:27.939]      // while "1"  (timeout="50000")
[09:18:27.939]      // while  =>  TIMEOUT
[09:18:27.939]      // end while "1"
[09:18:27.939]    </control>
[09:18:27.940]    <block atomic="false" info="">
[09:18:27.940]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:18:27.942]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:18:27.942]    </block>
[09:18:27.942]    <control if="" while="1" timeout="10000" info="">
[09:18:27.943]      // while "1"  (timeout="10000")
[09:18:27.943]      // while-condition  =>  TRUE
[09:18:27.943]      // while "1"  (timeout="10000")
[09:18:27.944]      // while-condition  =>  TRUE
[09:18:27.944]      // while "1"  (timeout="10000")
[09:18:27.944]      // while-condition  =>  TRUE
[09:18:27.944]      // while "1"  (timeout="10000")
[09:18:27.944]      // while-condition  =>  TRUE
[09:18:27.945]      // while "1"  (timeout="10000")
[09:18:27.945]      // while-condition  =>  TRUE
[09:18:27.945]      // while "1"  (timeout="10000")
[09:18:27.945]      // while-condition  =>  TRUE
[09:18:27.945]      // while "1"  (timeout="10000")
[09:18:27.946]      // while-condition  =>  TRUE
[09:18:27.946]      // while "1"  (timeout="10000")
[09:18:27.946]      // while-condition  =>  TRUE
[09:18:27.946]      // while "1"  (timeout="10000")
[09:18:27.946]      // while-condition  =>  TRUE
[09:18:27.947]      // while "1"  (timeout="10000")
[09:18:27.947]      // while-condition  =>  TRUE
[09:18:27.947]      // while "1"  (timeout="10000")
[09:18:27.947]      // while-condition  =>  TRUE
[09:18:27.948]      // while "1"  (timeout="10000")
[09:18:27.948]      // while-condition  =>  TRUE
[09:18:27.948]      // while "1"  (timeout="10000")
[09:18:27.948]      // while-condition  =>  TRUE
[09:18:27.948]      // while "1"  (timeout="10000")
[09:18:27.949]      // while-condition  =>  TRUE
[09:18:27.949]      // while "1"  (timeout="10000")
[09:18:27.949]      // while-condition  =>  TRUE
[09:18:27.949]      // while "1"  (timeout="10000")
[09:18:27.950]      // while-condition  =>  TRUE
[09:18:27.950]      // while "1"  (timeout="10000")
[09:18:27.950]      // while-condition  =>  TRUE
[09:18:27.950]      // while "1"  (timeout="10000")
[09:18:27.950]      // while-condition  =>  TRUE
[09:18:27.951]      // while "1"  (timeout="10000")
[09:18:27.951]      // while-condition  =>  TRUE
[09:18:27.951]      // while "1"  (timeout="10000")
[09:18:27.951]      // while-condition  =>  TRUE
[09:18:27.952]      // while "1"  (timeout="10000")
[09:18:27.952]      // while-condition  =>  TRUE
[09:18:27.952]      // while "1"  (timeout="10000")
[09:18:27.952]      // while-condition  =>  TRUE
[09:18:27.953]      // while "1"  (timeout="10000")
[09:18:27.953]      // while-condition  =>  TRUE
[09:18:27.953]      // while "1"  (timeout="10000")
[09:18:27.953]      // while-condition  =>  TRUE
[09:18:27.953]      // while "1"  (timeout="10000")
[09:18:27.954]      // while-condition  =>  TRUE
[09:18:27.954]      // while "1"  (timeout="10000")
[09:18:27.954]      // while  =>  TIMEOUT
[09:18:27.954]      // end while "1"
[09:18:27.955]    </control>
[09:18:27.955]    <block atomic="true" info="">
[09:18:27.958]  
[09:18:27.958]  ! W001 : No atomic sequence support in debug unit
[09:18:27.958]  
[09:18:27.960]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:18:27.962]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:18:27.962]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:18:27.964]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:18:27.964]    </block>
[09:18:27.965]    <block atomic="false" info="">
[09:18:27.965]      __errorcontrol = 0x00000001;
[09:18:27.966]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:18:27.966]      ReadDP(0x0);
[09:18:27.968]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:18:27.969]      __errorcontrol = 0x00000000;
[09:18:27.969]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:18:27.969]    </block>
[09:18:27.970]  </sequence>
[09:18:27.970]  
[09:18:27.971]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:18:27.971]  
[09:18:27.971]  <debugvars>
[09:18:27.971]    // Pre-defined
[09:18:27.972]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:18:27.972]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:18:27.972]    __dp=0x00000000
[09:18:27.973]    __ap=0x00000000
[09:18:27.973]    __traceout=0x00000000      (Trace Disabled)
[09:18:27.973]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:18:27.974]    __FlashAddr=0x00000000
[09:18:27.974]    __FlashLen=0x00000000
[09:18:27.974]    __FlashArg=0x00000000
[09:18:27.975]    __FlashOp=0x00000000
[09:18:27.975]    __Result=0x00000000
[09:18:27.976]  </debugvars>
[09:18:27.976]  
[09:18:27.976]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:18:27.977]  </sequence>
[09:18:27.977]  
[09:18:27.981]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[09:18:27.981]  
[09:18:27.981]  <debugvars>
[09:18:27.982]    // Pre-defined
[09:18:27.982]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:18:27.982]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:18:27.983]    __dp=0x00000000
[09:18:27.983]    __ap=0x00000000
[09:18:27.983]    __traceout=0x00000000      (Trace Disabled)
[09:18:27.984]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:18:27.984]    __FlashAddr=0x00000000
[09:18:27.984]    __FlashLen=0x00000000
[09:18:27.985]    __FlashArg=0x00000000
[09:18:27.985]    __FlashOp=0x00000000
[09:18:27.985]    __Result=0x00000000
[09:18:27.985]  </debugvars>
[09:18:27.986]  
[09:18:27.986]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:18:27.987]    <block atomic="false" info="">
[09:18:27.987]      __var SW_DP_ABORT  = 0x0;
[09:18:27.987]        // -> [SW_DP_ABORT <= 0x00000000]
[09:18:27.988]      __var DP_CTRL_STAT = 0x4;
[09:18:27.988]        // -> [DP_CTRL_STAT <= 0x00000004]
[09:18:27.988]      __var DP_SELECT    = 0x8;
[09:18:27.989]        // -> [DP_SELECT <= 0x00000008]
[09:18:27.989]      __var powered_down = 0;
[09:18:27.989]        // -> [powered_down <= 0x00000000]
[09:18:27.989]      WriteDP(DP_SELECT, 0x00000000);
[09:18:27.991]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:18:27.992]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:18:27.993]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[09:18:27.994]        // -> [powered_down <= 0x00000001]
[09:18:27.994]    </block>
[09:18:27.994]    <control if="powered_down" while="" timeout="0" info="">
[09:18:27.994]      // if-block "powered_down"
[09:18:27.995]        // =>  TRUE
[09:18:27.995]      <block atomic="false" info="">
[09:18:27.995]        WriteDP(DP_CTRL_STAT, 0x50000000);
[09:18:27.996]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[09:18:27.997]      </block>
[09:18:27.997]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[09:18:27.997]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[09:18:27.999]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:18:28.001]        // while-condition  =>  FALSE
[09:18:28.001]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[09:18:28.001]      </control>
[09:18:28.001]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[09:18:28.001]        // if-block "(__protocol & 0xFFFF) == 1"
[09:18:28.001]          // =>  FALSE
[09:18:28.001]        // skip if-block "(__protocol & 0xFFFF) == 1"
[09:18:28.002]      </control>
[09:18:28.002]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[09:18:28.002]        // if-block "(__protocol & 0xFFFF) == 2"
[09:18:28.002]          // =>  TRUE
[09:18:28.003]        <block atomic="false" info="">
[09:18:28.003]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[09:18:28.005]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[09:18:28.006]          WriteDP(SW_DP_ABORT, 0x0000001E);
[09:18:28.007]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[09:18:28.008]        </block>
[09:18:28.008]        // end if-block "(__protocol & 0xFFFF) == 2"
[09:18:28.008]      </control>
[09:18:28.008]      // end if-block "powered_down"
[09:18:28.009]    </control>
[09:18:28.009]  </sequence>
[09:18:28.009]  
[09:18:28.114]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:18:28.114]  
[09:18:28.114]  <debugvars>
[09:18:28.114]    // Pre-defined
[09:18:28.114]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:18:28.115]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:18:28.115]    __dp=0x00000000
[09:18:28.115]    __ap=0x00000000
[09:18:28.115]    __traceout=0x00000000      (Trace Disabled)
[09:18:28.116]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:18:28.116]    __FlashAddr=0x00000000
[09:18:28.116]    __FlashLen=0x00000000
[09:18:28.116]    __FlashArg=0x00000000
[09:18:28.116]    __FlashOp=0x00000000
[09:18:28.117]    __Result=0x00000000
[09:18:28.117]  </debugvars>
[09:18:28.117]  
[09:18:28.117]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:18:28.117]    <block atomic="true" info="">
[09:18:28.122]  
[09:18:28.122]  ! W001 : No atomic sequence support in debug unit
[09:18:28.122]  
[09:18:28.125]      __var DP_R_IDCODE    = 0x0;
[09:18:28.132]        // -> [DP_R_IDCODE <= 0x00000000]
[09:18:28.133]      __var DP_W_ABORT    = 0x0;
[09:18:28.133]        // -> [DP_W_ABORT <= 0x00000000]
[09:18:28.133]      __var DP_CTRLSTAT = 0x4;
[09:18:28.133]        // -> [DP_CTRLSTAT <= 0x00000004]
[09:18:28.134]      __var DP_W_SELECT    = 0x8;
[09:18:28.134]        // -> [DP_W_SELECT <= 0x00000008]
[09:18:28.134]      __var AP_TAR		= 0x4;
[09:18:28.134]        // -> [AP_TAR <= 0x00000004]
[09:18:28.135]      __var AP_BD0		= 0x0;
[09:18:28.135]        // -> [AP_BD0 <= 0x00000000]
[09:18:28.135]      __var AP_BD1		= 0x4;
[09:18:28.135]        // -> [AP_BD1 <= 0x00000004]
[09:18:28.135]      __var AP_BD2		= 0x8;
[09:18:28.136]        // -> [AP_BD2 <= 0x00000008]
[09:18:28.136]      __var PCWithinFlash = 0;
[09:18:28.136]        // -> [PCWithinFlash <= 0x00000000]
[09:18:28.136]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:18:28.143]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.149]    </block>
[09:18:28.150]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:18:28.150]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:18:28.156]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.158]      // while-condition  =>  FALSE
[09:18:28.159]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:18:28.159]    </control>
[09:18:28.160]    <block atomic="true" info="">
[09:18:28.166]  
[09:18:28.166]  ! W001 : No atomic sequence support in debug unit
[09:18:28.166]  
[09:18:28.169]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:18:28.177]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:18:28.177]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:18:28.179]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.179]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:18:28.181]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:18:28.181]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:18:28.185]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.185]    </block>
[09:18:28.185]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:18:28.186]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.188]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.188]      // while-condition  =>  TRUE
[09:18:28.188]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.191]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.191]      // while-condition  =>  TRUE
[09:18:28.191]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.194]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.195]      // while-condition  =>  TRUE
[09:18:28.195]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.198]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.199]      // while-condition  =>  TRUE
[09:18:28.199]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.201]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.201]      // while-condition  =>  TRUE
[09:18:28.201]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.204]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.204]      // while-condition  =>  TRUE
[09:18:28.204]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.207]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.207]      // while-condition  =>  TRUE
[09:18:28.207]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.210]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.210]      // while-condition  =>  TRUE
[09:18:28.210]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.213]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.213]      // while-condition  =>  TRUE
[09:18:28.213]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.216]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.216]      // while-condition  =>  TRUE
[09:18:28.216]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.219]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.219]      // while-condition  =>  TRUE
[09:18:28.219]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.222]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.222]      // while-condition  =>  TRUE
[09:18:28.222]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.225]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.225]      // while-condition  =>  TRUE
[09:18:28.226]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.228]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.228]      // while-condition  =>  TRUE
[09:18:28.228]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.231]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.231]      // while-condition  =>  TRUE
[09:18:28.231]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.234]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.234]      // while-condition  =>  TRUE
[09:18:28.234]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.237]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.237]      // while-condition  =>  TRUE
[09:18:28.237]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.240]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.240]      // while-condition  =>  TRUE
[09:18:28.241]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.243]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.243]      // while-condition  =>  TRUE
[09:18:28.244]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.246]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.246]      // while-condition  =>  TRUE
[09:18:28.246]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.249]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.249]      // while-condition  =>  TRUE
[09:18:28.250]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.252]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.252]      // while-condition  =>  TRUE
[09:18:28.252]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.255]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.255]      // while-condition  =>  TRUE
[09:18:28.256]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.258]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.259]      // while-condition  =>  TRUE
[09:18:28.260]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.262]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.262]      // while-condition  =>  TRUE
[09:18:28.262]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.265]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.265]      // while-condition  =>  TRUE
[09:18:28.265]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.268]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.268]      // while-condition  =>  TRUE
[09:18:28.268]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.271]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.271]      // while-condition  =>  TRUE
[09:18:28.271]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.274]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.274]      // while-condition  =>  TRUE
[09:18:28.275]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.277]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.277]      // while-condition  =>  TRUE
[09:18:28.278]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.280]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.280]      // while-condition  =>  TRUE
[09:18:28.281]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.283]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.283]      // while-condition  =>  TRUE
[09:18:28.284]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.284]      // while  =>  TIMEOUT
[09:18:28.284]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:18:28.284]    </control>
[09:18:28.285]    <block atomic="false" info="">
[09:18:28.285]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:18:28.287]        // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.287]        // -> [PCWithinFlash <= 0x00000000]
[09:18:28.288]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:18:28.290]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:18:28.290]    </block>
[09:18:28.291]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:18:28.291]      // if-block "PCWithinFlash == 0"
[09:18:28.291]        // =>  TRUE
[09:18:28.292]      // end if-block "PCWithinFlash == 0"
[09:18:28.292]    </control>
[09:18:28.292]  </sequence>
[09:18:28.292]  
[09:18:28.340]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[09:18:28.340]  
[09:18:28.340]  <debugvars>
[09:18:28.340]    // Pre-defined
[09:18:28.341]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:18:28.341]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:18:28.341]    __dp=0x00000000
[09:18:28.341]    __ap=0x00000000
[09:18:28.342]    __traceout=0x00000000      (Trace Disabled)
[09:18:28.342]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:18:28.342]    __FlashAddr=0x00000000
[09:18:28.342]    __FlashLen=0x00000000
[09:18:28.342]    __FlashArg=0x00000000
[09:18:28.343]    __FlashOp=0x00000000
[09:18:28.343]    __Result=0x00000000
[09:18:28.343]  </debugvars>
[09:18:28.343]  
[09:18:28.344]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[09:18:28.344]    <block atomic="false" info="">
[09:18:28.344]    </block>
[09:18:28.344]  </sequence>
[09:18:28.344]  
[09:18:28.346]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[09:18:28.346]  
[09:18:28.346]  <debugvars>
[09:18:28.347]    // Pre-defined
[09:18:28.347]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:18:28.347]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:18:28.347]    __dp=0x00000000
[09:18:28.348]    __ap=0x00000000
[09:18:28.348]    __traceout=0x00000000      (Trace Disabled)
[09:18:28.348]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:18:28.348]    __FlashAddr=0x00000000
[09:18:28.348]    __FlashLen=0x00000000
[09:18:28.349]    __FlashArg=0x00000000
[09:18:28.349]    __FlashOp=0x00000000
[09:18:28.349]    __Result=0x00000000
[09:18:28.349]  </debugvars>
[09:18:28.350]  
[09:18:28.350]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:18:28.350]    <block atomic="false" info="">
[09:18:28.350]      __var nReset      = 0x80;
[09:18:28.351]        // -> [nReset <= 0x00000080]
[09:18:28.351]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:18:28.353]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:18:28.353]    </block>
[09:18:28.354]    <control if="" while="1" timeout="50000" info="">
[09:18:28.354]      // while "1"  (timeout="50000")
[09:18:28.354]      // while-condition  =>  TRUE
[09:18:28.354]      // while "1"  (timeout="50000")
[09:18:28.355]      // while-condition  =>  TRUE
[09:18:28.355]      // while "1"  (timeout="50000")
[09:18:28.355]      // while-condition  =>  TRUE
[09:18:28.355]      // while "1"  (timeout="50000")
[09:18:28.356]      // while-condition  =>  TRUE
[09:18:28.356]      // while "1"  (timeout="50000")
[09:18:28.356]      // while-condition  =>  TRUE
[09:18:28.356]      // while "1"  (timeout="50000")
[09:18:28.357]      // while-condition  =>  TRUE
[09:18:28.357]      // while "1"  (timeout="50000")
[09:18:28.357]      // while-condition  =>  TRUE
[09:18:28.357]      // while "1"  (timeout="50000")
[09:18:28.358]      // while-condition  =>  TRUE
[09:18:28.358]      // while "1"  (timeout="50000")
[09:18:28.358]      // while-condition  =>  TRUE
[09:18:28.358]      // while "1"  (timeout="50000")
[09:18:28.358]      // while-condition  =>  TRUE
[09:18:28.359]      // while "1"  (timeout="50000")
[09:18:28.359]      // while-condition  =>  TRUE
[09:18:28.359]      // while "1"  (timeout="50000")
[09:18:28.359]      // while-condition  =>  TRUE
[09:18:28.360]      // while "1"  (timeout="50000")
[09:18:28.360]      // while-condition  =>  TRUE
[09:18:28.360]      // while "1"  (timeout="50000")
[09:18:28.360]      // while-condition  =>  TRUE
[09:18:28.360]      // while "1"  (timeout="50000")
[09:18:28.361]      // while-condition  =>  TRUE
[09:18:28.361]      // while "1"  (timeout="50000")
[09:18:28.361]      // while-condition  =>  TRUE
[09:18:28.361]      // while "1"  (timeout="50000")
[09:18:28.362]      // while-condition  =>  TRUE
[09:18:28.362]      // while "1"  (timeout="50000")
[09:18:28.362]      // while-condition  =>  TRUE
[09:18:28.362]      // while "1"  (timeout="50000")
[09:18:28.363]      // while-condition  =>  TRUE
[09:18:28.363]      // while "1"  (timeout="50000")
[09:18:28.363]      // while-condition  =>  TRUE
[09:18:28.363]      // while "1"  (timeout="50000")
[09:18:28.364]      // while-condition  =>  TRUE
[09:18:28.364]      // while "1"  (timeout="50000")
[09:18:28.364]      // while-condition  =>  TRUE
[09:18:28.364]      // while "1"  (timeout="50000")
[09:18:28.364]      // while-condition  =>  TRUE
[09:18:28.365]      // while "1"  (timeout="50000")
[09:18:28.365]      // while-condition  =>  TRUE
[09:18:28.365]      // while "1"  (timeout="50000")
[09:18:28.365]      // while-condition  =>  TRUE
[09:18:28.366]      // while "1"  (timeout="50000")
[09:18:28.366]      // while-condition  =>  TRUE
[09:18:28.366]      // while "1"  (timeout="50000")
[09:18:28.366]      // while-condition  =>  TRUE
[09:18:28.367]      // while "1"  (timeout="50000")
[09:18:28.367]      // while-condition  =>  TRUE
[09:18:28.367]      // while "1"  (timeout="50000")
[09:18:28.367]      // while-condition  =>  TRUE
[09:18:28.368]      // while "1"  (timeout="50000")
[09:18:28.368]      // while-condition  =>  TRUE
[09:18:28.368]      // while "1"  (timeout="50000")
[09:18:28.368]      // while-condition  =>  TRUE
[09:18:28.369]      // while "1"  (timeout="50000")
[09:18:28.369]      // while-condition  =>  TRUE
[09:18:28.369]      // while "1"  (timeout="50000")
[09:18:28.369]      // while-condition  =>  TRUE
[09:18:28.369]      // while "1"  (timeout="50000")
[09:18:28.370]      // while-condition  =>  TRUE
[09:18:28.370]      // while "1"  (timeout="50000")
[09:18:28.370]      // while-condition  =>  TRUE
[09:18:28.370]      // while "1"  (timeout="50000")
[09:18:28.370]      // while-condition  =>  TRUE
[09:18:28.370]      // while "1"  (timeout="50000")
[09:18:28.370]      // while-condition  =>  TRUE
[09:18:28.371]      // while "1"  (timeout="50000")
[09:18:28.371]      // while-condition  =>  TRUE
[09:18:28.371]      // while "1"  (timeout="50000")
[09:18:28.371]      // while-condition  =>  TRUE
[09:18:28.371]      // while "1"  (timeout="50000")
[09:18:28.372]      // while-condition  =>  TRUE
[09:18:28.372]      // while "1"  (timeout="50000")
[09:18:28.372]      // while-condition  =>  TRUE
[09:18:28.372]      // while "1"  (timeout="50000")
[09:18:28.374]      // while-condition  =>  TRUE
[09:18:28.374]      // while "1"  (timeout="50000")
[09:18:28.374]      // while-condition  =>  TRUE
[09:18:28.374]      // while "1"  (timeout="50000")
[09:18:28.374]      // while-condition  =>  TRUE
[09:18:28.374]      // while "1"  (timeout="50000")
[09:18:28.374]      // while-condition  =>  TRUE
[09:18:28.374]      // while "1"  (timeout="50000")
[09:18:28.375]      // while-condition  =>  TRUE
[09:18:28.375]      // while "1"  (timeout="50000")
[09:18:28.375]      // while-condition  =>  TRUE
[09:18:28.375]      // while "1"  (timeout="50000")
[09:18:28.376]      // while-condition  =>  TRUE
[09:18:28.376]      // while "1"  (timeout="50000")
[09:18:28.376]      // while-condition  =>  TRUE
[09:18:28.376]      // while "1"  (timeout="50000")
[09:18:28.377]      // while-condition  =>  TRUE
[09:18:28.377]      // while "1"  (timeout="50000")
[09:18:28.377]      // while-condition  =>  TRUE
[09:18:28.377]      // while "1"  (timeout="50000")
[09:18:28.378]      // while-condition  =>  TRUE
[09:18:28.378]      // while "1"  (timeout="50000")
[09:18:28.378]      // while-condition  =>  TRUE
[09:18:28.378]      // while "1"  (timeout="50000")
[09:18:28.378]      // while-condition  =>  TRUE
[09:18:28.379]      // while "1"  (timeout="50000")
[09:18:28.379]      // while-condition  =>  TRUE
[09:18:28.379]      // while "1"  (timeout="50000")
[09:18:28.379]      // while-condition  =>  TRUE
[09:18:28.380]      // while "1"  (timeout="50000")
[09:18:28.380]      // while-condition  =>  TRUE
[09:18:28.380]      // while "1"  (timeout="50000")
[09:18:28.380]      // while-condition  =>  TRUE
[09:18:28.381]      // while "1"  (timeout="50000")
[09:18:28.381]      // while-condition  =>  TRUE
[09:18:28.381]      // while "1"  (timeout="50000")
[09:18:28.381]      // while-condition  =>  TRUE
[09:18:28.381]      // while "1"  (timeout="50000")
[09:18:28.382]      // while-condition  =>  TRUE
[09:18:28.382]      // while "1"  (timeout="50000")
[09:18:28.382]      // while-condition  =>  TRUE
[09:18:28.382]      // while "1"  (timeout="50000")
[09:18:28.383]      // while-condition  =>  TRUE
[09:18:28.383]      // while "1"  (timeout="50000")
[09:18:28.383]      // while-condition  =>  TRUE
[09:18:28.383]      // while "1"  (timeout="50000")
[09:18:28.384]      // while-condition  =>  TRUE
[09:18:28.384]      // while "1"  (timeout="50000")
[09:18:28.384]      // while-condition  =>  TRUE
[09:18:28.384]      // while "1"  (timeout="50000")
[09:18:28.384]      // while-condition  =>  TRUE
[09:18:28.385]      // while "1"  (timeout="50000")
[09:18:28.385]      // while-condition  =>  TRUE
[09:18:28.385]      // while "1"  (timeout="50000")
[09:18:28.385]      // while-condition  =>  TRUE
[09:18:28.386]      // while "1"  (timeout="50000")
[09:18:28.386]      // while-condition  =>  TRUE
[09:18:28.386]      // while "1"  (timeout="50000")
[09:18:28.386]      // while-condition  =>  TRUE
[09:18:28.387]      // while "1"  (timeout="50000")
[09:18:28.387]      // while-condition  =>  TRUE
[09:18:28.387]      // while "1"  (timeout="50000")
[09:18:28.387]      // while-condition  =>  TRUE
[09:18:28.388]      // while "1"  (timeout="50000")
[09:18:28.388]      // while-condition  =>  TRUE
[09:18:28.388]      // while "1"  (timeout="50000")
[09:18:28.388]      // while-condition  =>  TRUE
[09:18:28.389]      // while "1"  (timeout="50000")
[09:18:28.389]      // while-condition  =>  TRUE
[09:18:28.389]      // while "1"  (timeout="50000")
[09:18:28.389]      // while-condition  =>  TRUE
[09:18:28.390]      // while "1"  (timeout="50000")
[09:18:28.390]      // while-condition  =>  TRUE
[09:18:28.390]      // while "1"  (timeout="50000")
[09:18:28.390]      // while-condition  =>  TRUE
[09:18:28.391]      // while "1"  (timeout="50000")
[09:18:28.391]      // while-condition  =>  TRUE
[09:18:28.391]      // while "1"  (timeout="50000")
[09:18:28.391]      // while-condition  =>  TRUE
[09:18:28.391]      // while "1"  (timeout="50000")
[09:18:28.392]      // while-condition  =>  TRUE
[09:18:28.392]      // while "1"  (timeout="50000")
[09:18:28.392]      // while-condition  =>  TRUE
[09:18:28.392]      // while "1"  (timeout="50000")
[09:18:28.393]      // while-condition  =>  TRUE
[09:18:28.393]      // while "1"  (timeout="50000")
[09:18:28.393]      // while-condition  =>  TRUE
[09:18:28.394]      // while "1"  (timeout="50000")
[09:18:28.394]      // while-condition  =>  TRUE
[09:18:28.394]      // while "1"  (timeout="50000")
[09:18:28.394]      // while-condition  =>  TRUE
[09:18:28.395]      // while "1"  (timeout="50000")
[09:18:28.395]      // while-condition  =>  TRUE
[09:18:28.395]      // while "1"  (timeout="50000")
[09:18:28.395]      // while-condition  =>  TRUE
[09:18:28.396]      // while "1"  (timeout="50000")
[09:18:28.396]      // while-condition  =>  TRUE
[09:18:28.396]      // while "1"  (timeout="50000")
[09:18:28.396]      // while-condition  =>  TRUE
[09:18:28.397]      // while "1"  (timeout="50000")
[09:18:28.397]      // while-condition  =>  TRUE
[09:18:28.397]      // while "1"  (timeout="50000")
[09:18:28.397]      // while-condition  =>  TRUE
[09:18:28.397]      // while "1"  (timeout="50000")
[09:18:28.398]      // while-condition  =>  TRUE
[09:18:28.398]      // while "1"  (timeout="50000")
[09:18:28.398]      // while-condition  =>  TRUE
[09:18:28.398]      // while "1"  (timeout="50000")
[09:18:28.399]      // while-condition  =>  TRUE
[09:18:28.399]      // while "1"  (timeout="50000")
[09:18:28.399]      // while-condition  =>  TRUE
[09:18:28.399]      // while "1"  (timeout="50000")
[09:18:28.400]      // while-condition  =>  TRUE
[09:18:28.400]      // while "1"  (timeout="50000")
[09:18:28.401]      // while-condition  =>  TRUE
[09:18:28.401]      // while "1"  (timeout="50000")
[09:18:28.401]      // while-condition  =>  TRUE
[09:18:28.401]      // while "1"  (timeout="50000")
[09:18:28.402]      // while-condition  =>  TRUE
[09:18:28.402]      // while "1"  (timeout="50000")
[09:18:28.402]      // while-condition  =>  TRUE
[09:18:28.402]      // while "1"  (timeout="50000")
[09:18:28.402]      // while-condition  =>  TRUE
[09:18:28.403]      // while "1"  (timeout="50000")
[09:18:28.403]      // while-condition  =>  TRUE
[09:18:28.403]      // while "1"  (timeout="50000")
[09:18:28.403]      // while-condition  =>  TRUE
[09:18:28.404]      // while "1"  (timeout="50000")
[09:18:28.404]      // while-condition  =>  TRUE
[09:18:28.404]      // while "1"  (timeout="50000")
[09:18:28.404]      // while-condition  =>  TRUE
[09:18:28.405]      // while "1"  (timeout="50000")
[09:18:28.405]      // while-condition  =>  TRUE
[09:18:28.405]      // while "1"  (timeout="50000")
[09:18:28.405]      // while-condition  =>  TRUE
[09:18:28.406]      // while "1"  (timeout="50000")
[09:18:28.406]      // while-condition  =>  TRUE
[09:18:28.406]      // while "1"  (timeout="50000")
[09:18:28.406]      // while-condition  =>  TRUE
[09:18:28.407]      // while "1"  (timeout="50000")
[09:18:28.407]      // while  =>  TIMEOUT
[09:18:28.407]      // end while "1"
[09:18:28.407]    </control>
[09:18:28.408]    <block atomic="false" info="">
[09:18:28.408]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:18:28.409]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:18:28.410]    </block>
[09:18:28.410]    <control if="" while="1" timeout="10000" info="">
[09:18:28.410]      // while "1"  (timeout="10000")
[09:18:28.410]      // while-condition  =>  TRUE
[09:18:28.411]      // while "1"  (timeout="10000")
[09:18:28.411]      // while-condition  =>  TRUE
[09:18:28.411]      // while "1"  (timeout="10000")
[09:18:28.411]      // while-condition  =>  TRUE
[09:18:28.412]      // while "1"  (timeout="10000")
[09:18:28.412]      // while-condition  =>  TRUE
[09:18:28.412]      // while "1"  (timeout="10000")
[09:18:28.412]      // while-condition  =>  TRUE
[09:18:28.413]      // while "1"  (timeout="10000")
[09:18:28.413]      // while-condition  =>  TRUE
[09:18:28.413]      // while "1"  (timeout="10000")
[09:18:28.413]      // while-condition  =>  TRUE
[09:18:28.414]      // while "1"  (timeout="10000")
[09:18:28.414]      // while-condition  =>  TRUE
[09:18:28.414]      // while "1"  (timeout="10000")
[09:18:28.415]      // while-condition  =>  TRUE
[09:18:28.415]      // while "1"  (timeout="10000")
[09:18:28.415]      // while-condition  =>  TRUE
[09:18:28.415]      // while "1"  (timeout="10000")
[09:18:28.415]      // while-condition  =>  TRUE
[09:18:28.416]      // while "1"  (timeout="10000")
[09:18:28.416]      // while-condition  =>  TRUE
[09:18:28.416]      // while "1"  (timeout="10000")
[09:18:28.416]      // while-condition  =>  TRUE
[09:18:28.417]      // while "1"  (timeout="10000")
[09:18:28.417]      // while-condition  =>  TRUE
[09:18:28.417]      // while "1"  (timeout="10000")
[09:18:28.417]      // while-condition  =>  TRUE
[09:18:28.418]      // while "1"  (timeout="10000")
[09:18:28.418]      // while-condition  =>  TRUE
[09:18:28.418]      // while "1"  (timeout="10000")
[09:18:28.418]      // while-condition  =>  TRUE
[09:18:28.418]      // while "1"  (timeout="10000")
[09:18:28.419]      // while-condition  =>  TRUE
[09:18:28.419]      // while "1"  (timeout="10000")
[09:18:28.419]      // while-condition  =>  TRUE
[09:18:28.420]      // while "1"  (timeout="10000")
[09:18:28.420]      // while-condition  =>  TRUE
[09:18:28.420]      // while "1"  (timeout="10000")
[09:18:28.420]      // while-condition  =>  TRUE
[09:18:28.420]      // while "1"  (timeout="10000")
[09:18:28.421]      // while-condition  =>  TRUE
[09:18:28.421]      // while "1"  (timeout="10000")
[09:18:28.421]      // while-condition  =>  TRUE
[09:18:28.421]      // while "1"  (timeout="10000")
[09:18:28.422]      // while-condition  =>  TRUE
[09:18:28.422]      // while "1"  (timeout="10000")
[09:18:28.422]      // while  =>  TIMEOUT
[09:18:28.422]      // end while "1"
[09:18:28.423]    </control>
[09:18:28.423]    <block atomic="true" info="">
[09:18:28.428]  
[09:18:28.428]  ! W001 : No atomic sequence support in debug unit
[09:18:28.428]  
[09:18:28.430]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:18:28.431]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:18:28.432]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:18:28.433]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:18:28.434]    </block>
[09:18:28.434]    <block atomic="false" info="">
[09:18:28.434]      __errorcontrol = 0x00000001;
[09:18:28.434]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:18:28.434]      ReadDP(0x0);
[09:18:28.436]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:18:28.437]      __errorcontrol = 0x00000000;
[09:18:28.437]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:18:28.437]    </block>
[09:18:28.437]  </sequence>
[09:18:28.437]  
[09:18:28.443]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[09:18:28.443]  
[09:18:28.455]  <debugvars>
[09:18:28.455]    // Pre-defined
[09:18:28.456]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:18:28.456]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:18:28.456]    __dp=0x00000000
[09:18:28.456]    __ap=0x00000000
[09:18:28.457]    __traceout=0x00000000      (Trace Disabled)
[09:18:28.457]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:18:28.457]    __FlashAddr=0x00000000
[09:18:28.457]    __FlashLen=0x00000000
[09:18:28.458]    __FlashArg=0x00000000
[09:18:28.458]    __FlashOp=0x00000000
[09:18:28.458]    __Result=0x00000000
[09:18:28.459]  </debugvars>
[09:18:28.459]  
[09:18:28.459]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[09:18:28.459]    <block atomic="false" info="">
[09:18:28.460]    </block>
[09:18:28.460]  </sequence>
[09:18:28.460]  
[09:18:28.695]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[09:18:28.695]  
[09:18:28.696]  <debugvars>
[09:18:28.696]    // Pre-defined
[09:18:28.697]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:18:28.697]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:18:28.698]    __dp=0x00000000
[09:18:28.698]    __ap=0x00000000
[09:18:28.699]    __traceout=0x00000000      (Trace Disabled)
[09:18:28.700]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:18:28.700]    __FlashAddr=0x00000000
[09:18:28.700]    __FlashLen=0x00000000
[09:18:28.701]    __FlashArg=0x00000000
[09:18:28.702]    __FlashOp=0x00000000
[09:18:28.703]    __Result=0x00000000
[09:18:28.703]  </debugvars>
[09:18:28.704]  
[09:18:28.705]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[09:18:28.705]    <block atomic="false" info="">
[09:18:28.706]      Sequence("ResetHardware");
[09:18:28.706]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:18:28.706]          <block atomic="false" info="">
[09:18:28.707]            __var nReset      = 0x80;
[09:18:28.708]              // -> [nReset <= 0x00000080]
[09:18:28.708]            DAP_SWJ_Pins(0x00, nReset, 0);
[09:18:28.710]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:18:28.710]          </block>
[09:18:28.711]          <control if="" while="1" timeout="50000" info="">
[09:18:28.711]            // while "1"  (timeout="50000")
[09:18:28.712]            // while-condition  =>  TRUE
[09:18:28.713]            // while "1"  (timeout="50000")
[09:18:28.714]            // while-condition  =>  TRUE
[09:18:28.714]            // while "1"  (timeout="50000")
[09:18:28.715]            // while-condition  =>  TRUE
[09:18:28.715]            // while "1"  (timeout="50000")
[09:18:28.716]            // while-condition  =>  TRUE
[09:18:28.716]            // while "1"  (timeout="50000")
[09:18:28.716]            // while-condition  =>  TRUE
[09:18:28.717]            // while "1"  (timeout="50000")
[09:18:28.718]            // while-condition  =>  TRUE
[09:18:28.718]            // while "1"  (timeout="50000")
[09:18:28.718]            // while-condition  =>  TRUE
[09:18:28.718]            // while "1"  (timeout="50000")
[09:18:28.718]            // while-condition  =>  TRUE
[09:18:28.719]            // while "1"  (timeout="50000")
[09:18:28.719]            // while-condition  =>  TRUE
[09:18:28.719]            // while "1"  (timeout="50000")
[09:18:28.719]            // while-condition  =>  TRUE
[09:18:28.719]            // while "1"  (timeout="50000")
[09:18:28.721]            // while-condition  =>  TRUE
[09:18:28.721]            // while "1"  (timeout="50000")
[09:18:28.721]            // while-condition  =>  TRUE
[09:18:28.721]            // while "1"  (timeout="50000")
[09:18:28.721]            // while-condition  =>  TRUE
[09:18:28.721]            // while "1"  (timeout="50000")
[09:18:28.721]            // while-condition  =>  TRUE
[09:18:28.722]            // while "1"  (timeout="50000")
[09:18:28.723]            // while-condition  =>  TRUE
[09:18:28.723]            // while "1"  (timeout="50000")
[09:18:28.723]            // while-condition  =>  TRUE
[09:18:28.723]            // while "1"  (timeout="50000")
[09:18:28.723]            // while-condition  =>  TRUE
[09:18:28.724]            // while "1"  (timeout="50000")
[09:18:28.724]            // while-condition  =>  TRUE
[09:18:28.724]            // while "1"  (timeout="50000")
[09:18:28.724]            // while-condition  =>  TRUE
[09:18:28.725]            // while "1"  (timeout="50000")
[09:18:28.725]            // while-condition  =>  TRUE
[09:18:28.725]            // while "1"  (timeout="50000")
[09:18:28.725]            // while-condition  =>  TRUE
[09:18:28.726]            // while "1"  (timeout="50000")
[09:18:28.726]            // while-condition  =>  TRUE
[09:18:28.726]            // while "1"  (timeout="50000")
[09:18:28.726]            // while-condition  =>  TRUE
[09:18:28.726]            // while "1"  (timeout="50000")
[09:18:28.726]            // while-condition  =>  TRUE
[09:18:28.726]            // while "1"  (timeout="50000")
[09:18:28.727]            // while-condition  =>  TRUE
[09:18:28.727]            // while "1"  (timeout="50000")
[09:18:28.728]            // while-condition  =>  TRUE
[09:18:28.728]            // while "1"  (timeout="50000")
[09:18:28.728]            // while-condition  =>  TRUE
[09:18:28.728]            // while "1"  (timeout="50000")
[09:18:28.728]            // while-condition  =>  TRUE
[09:18:28.729]            // while "1"  (timeout="50000")
[09:18:28.729]            // while-condition  =>  TRUE
[09:18:28.729]            // while "1"  (timeout="50000")
[09:18:28.729]            // while-condition  =>  TRUE
[09:18:28.729]            // while "1"  (timeout="50000")
[09:18:28.729]            // while-condition  =>  TRUE
[09:18:28.729]            // while "1"  (timeout="50000")
[09:18:28.729]            // while-condition  =>  TRUE
[09:18:28.729]            // while "1"  (timeout="50000")
[09:18:28.729]            // while-condition  =>  TRUE
[09:18:28.730]            // while "1"  (timeout="50000")
[09:18:28.730]            // while-condition  =>  TRUE
[09:18:28.730]            // while "1"  (timeout="50000")
[09:18:28.730]            // while-condition  =>  TRUE
[09:18:28.730]            // while "1"  (timeout="50000")
[09:18:28.731]            // while-condition  =>  TRUE
[09:18:28.731]            // while "1"  (timeout="50000")
[09:18:28.731]            // while-condition  =>  TRUE
[09:18:28.731]            // while "1"  (timeout="50000")
[09:18:28.731]            // while-condition  =>  TRUE
[09:18:28.732]            // while "1"  (timeout="50000")
[09:18:28.732]            // while-condition  =>  TRUE
[09:18:28.732]            // while "1"  (timeout="50000")
[09:18:28.732]            // while-condition  =>  TRUE
[09:18:28.732]            // while "1"  (timeout="50000")
[09:18:28.733]            // while-condition  =>  TRUE
[09:18:28.734]            // while "1"  (timeout="50000")
[09:18:28.734]            // while-condition  =>  TRUE
[09:18:28.734]            // while "1"  (timeout="50000")
[09:18:28.734]            // while-condition  =>  TRUE
[09:18:28.734]            // while "1"  (timeout="50000")
[09:18:28.735]            // while-condition  =>  TRUE
[09:18:28.735]            // while "1"  (timeout="50000")
[09:18:28.735]            // while-condition  =>  TRUE
[09:18:28.735]            // while "1"  (timeout="50000")
[09:18:28.735]            // while-condition  =>  TRUE
[09:18:28.735]            // while "1"  (timeout="50000")
[09:18:28.736]            // while-condition  =>  TRUE
[09:18:28.736]            // while "1"  (timeout="50000")
[09:18:28.736]            // while-condition  =>  TRUE
[09:18:28.736]            // while "1"  (timeout="50000")
[09:18:28.736]            // while-condition  =>  TRUE
[09:18:28.736]            // while "1"  (timeout="50000")
[09:18:28.736]            // while-condition  =>  TRUE
[09:18:28.737]            // while "1"  (timeout="50000")
[09:18:28.737]            // while-condition  =>  TRUE
[09:18:28.737]            // while "1"  (timeout="50000")
[09:18:28.738]            // while-condition  =>  TRUE
[09:18:28.738]            // while "1"  (timeout="50000")
[09:18:28.738]            // while-condition  =>  TRUE
[09:18:28.738]            // while "1"  (timeout="50000")
[09:18:28.738]            // while-condition  =>  TRUE
[09:18:28.739]            // while "1"  (timeout="50000")
[09:18:28.739]            // while-condition  =>  TRUE
[09:18:28.739]            // while "1"  (timeout="50000")
[09:18:28.739]            // while-condition  =>  TRUE
[09:18:28.739]            // while "1"  (timeout="50000")
[09:18:28.739]            // while-condition  =>  TRUE
[09:18:28.739]            // while "1"  (timeout="50000")
[09:18:28.739]            // while-condition  =>  TRUE
[09:18:28.739]            // while "1"  (timeout="50000")
[09:18:28.740]            // while-condition  =>  TRUE
[09:18:28.741]            // while "1"  (timeout="50000")
[09:18:28.741]            // while-condition  =>  TRUE
[09:18:28.741]            // while "1"  (timeout="50000")
[09:18:28.741]            // while-condition  =>  TRUE
[09:18:28.741]            // while "1"  (timeout="50000")
[09:18:28.742]            // while-condition  =>  TRUE
[09:18:28.742]            // while "1"  (timeout="50000")
[09:18:28.742]            // while-condition  =>  TRUE
[09:18:28.742]            // while "1"  (timeout="50000")
[09:18:28.742]            // while-condition  =>  TRUE
[09:18:28.742]            // while "1"  (timeout="50000")
[09:18:28.743]            // while-condition  =>  TRUE
[09:18:28.743]            // while "1"  (timeout="50000")
[09:18:28.743]            // while-condition  =>  TRUE
[09:18:28.743]            // while "1"  (timeout="50000")
[09:18:28.743]            // while-condition  =>  TRUE
[09:18:28.744]            // while "1"  (timeout="50000")
[09:18:28.744]            // while-condition  =>  TRUE
[09:18:28.744]            // while "1"  (timeout="50000")
[09:18:28.745]            // while-condition  =>  TRUE
[09:18:28.745]            // while "1"  (timeout="50000")
[09:18:28.745]            // while-condition  =>  TRUE
[09:18:28.745]            // while "1"  (timeout="50000")
[09:18:28.745]            // while-condition  =>  TRUE
[09:18:28.745]            // while "1"  (timeout="50000")
[09:18:28.745]            // while-condition  =>  TRUE
[09:18:28.745]            // while "1"  (timeout="50000")
[09:18:28.745]            // while-condition  =>  TRUE
[09:18:28.745]            // while "1"  (timeout="50000")
[09:18:28.746]            // while-condition  =>  TRUE
[09:18:28.746]            // while "1"  (timeout="50000")
[09:18:28.746]            // while-condition  =>  TRUE
[09:18:28.746]            // while "1"  (timeout="50000")
[09:18:28.746]            // while-condition  =>  TRUE
[09:18:28.748]            // while "1"  (timeout="50000")
[09:18:28.748]            // while-condition  =>  TRUE
[09:18:28.748]            // while "1"  (timeout="50000")
[09:18:28.748]            // while-condition  =>  TRUE
[09:18:28.748]            // while "1"  (timeout="50000")
[09:18:28.749]            // while-condition  =>  TRUE
[09:18:28.749]            // while "1"  (timeout="50000")
[09:18:28.749]            // while-condition  =>  TRUE
[09:18:28.749]            // while "1"  (timeout="50000")
[09:18:28.749]            // while-condition  =>  TRUE
[09:18:28.749]            // while "1"  (timeout="50000")
[09:18:28.749]            // while-condition  =>  TRUE
[09:18:28.749]            // while "1"  (timeout="50000")
[09:18:28.749]            // while-condition  =>  TRUE
[09:18:28.750]            // while "1"  (timeout="50000")
[09:18:28.751]            // while-condition  =>  TRUE
[09:18:28.751]            // while "1"  (timeout="50000")
[09:18:28.751]            // while-condition  =>  TRUE
[09:18:28.751]            // while "1"  (timeout="50000")
[09:18:28.751]            // while-condition  =>  TRUE
[09:18:28.752]            // while "1"  (timeout="50000")
[09:18:28.752]            // while-condition  =>  TRUE
[09:18:28.752]            // while "1"  (timeout="50000")
[09:18:28.752]            // while-condition  =>  TRUE
[09:18:28.752]            // while "1"  (timeout="50000")
[09:18:28.753]            // while-condition  =>  TRUE
[09:18:28.753]            // while "1"  (timeout="50000")
[09:18:28.753]            // while-condition  =>  TRUE
[09:18:28.753]            // while "1"  (timeout="50000")
[09:18:28.753]            // while-condition  =>  TRUE
[09:18:28.753]            // while "1"  (timeout="50000")
[09:18:28.753]            // while-condition  =>  TRUE
[09:18:28.754]            // while "1"  (timeout="50000")
[09:18:28.754]            // while-condition  =>  TRUE
[09:18:28.755]            // while "1"  (timeout="50000")
[09:18:28.755]            // while-condition  =>  TRUE
[09:18:28.755]            // while "1"  (timeout="50000")
[09:18:28.756]            // while-condition  =>  TRUE
[09:18:28.756]            // while "1"  (timeout="50000")
[09:18:28.756]            // while-condition  =>  TRUE
[09:18:28.756]            // while "1"  (timeout="50000")
[09:18:28.756]            // while-condition  =>  TRUE
[09:18:28.756]            // while "1"  (timeout="50000")
[09:18:28.756]            // while-condition  =>  TRUE
[09:18:28.756]            // while "1"  (timeout="50000")
[09:18:28.756]            // while-condition  =>  TRUE
[09:18:28.756]            // while "1"  (timeout="50000")
[09:18:28.757]            // while-condition  =>  TRUE
[09:18:28.757]            // while "1"  (timeout="50000")
[09:18:28.757]            // while-condition  =>  TRUE
[09:18:28.757]            // while "1"  (timeout="50000")
[09:18:28.757]            // while-condition  =>  TRUE
[09:18:28.759]            // while "1"  (timeout="50000")
[09:18:28.759]            // while-condition  =>  TRUE
[09:18:28.759]            // while "1"  (timeout="50000")
[09:18:28.759]            // while-condition  =>  TRUE
[09:18:28.759]            // while "1"  (timeout="50000")
[09:18:28.759]            // while-condition  =>  TRUE
[09:18:28.759]            // while "1"  (timeout="50000")
[09:18:28.759]            // while-condition  =>  TRUE
[09:18:28.759]            // while "1"  (timeout="50000")
[09:18:28.760]            // while-condition  =>  TRUE
[09:18:28.760]            // while "1"  (timeout="50000")
[09:18:28.760]            // while-condition  =>  TRUE
[09:18:28.760]            // while "1"  (timeout="50000")
[09:18:28.760]            // while-condition  =>  TRUE
[09:18:28.761]            // while "1"  (timeout="50000")
[09:18:28.761]            // while-condition  =>  TRUE
[09:18:28.761]            // while "1"  (timeout="50000")
[09:18:28.761]            // while-condition  =>  TRUE
[09:18:28.761]            // while "1"  (timeout="50000")
[09:18:28.761]            // while-condition  =>  TRUE
[09:18:28.762]            // while "1"  (timeout="50000")
[09:18:28.763]            // while-condition  =>  TRUE
[09:18:28.763]            // while "1"  (timeout="50000")
[09:18:28.763]            // while-condition  =>  TRUE
[09:18:28.763]            // while "1"  (timeout="50000")
[09:18:28.763]            // while-condition  =>  TRUE
[09:18:28.764]            // while "1"  (timeout="50000")
[09:18:28.764]            // while-condition  =>  TRUE
[09:18:28.764]            // while "1"  (timeout="50000")
[09:18:28.764]            // while-condition  =>  TRUE
[09:18:28.764]            // while "1"  (timeout="50000")
[09:18:28.764]            // while-condition  =>  TRUE
[09:18:28.765]            // while "1"  (timeout="50000")
[09:18:28.765]            // while-condition  =>  TRUE
[09:18:28.765]            // while "1"  (timeout="50000")
[09:18:28.765]            // while-condition  =>  TRUE
[09:18:28.766]            // while "1"  (timeout="50000")
[09:18:28.766]            // while-condition  =>  TRUE
[09:18:28.766]            // while "1"  (timeout="50000")
[09:18:28.766]            // while-condition  =>  TRUE
[09:18:28.766]            // while "1"  (timeout="50000")
[09:18:28.767]            // while  =>  TIMEOUT
[09:18:28.767]            // end while "1"
[09:18:28.767]          </control>
[09:18:28.767]          <block atomic="false" info="">
[09:18:28.767]            DAP_SWJ_Pins(nReset, nReset, 0);
[09:18:28.769]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:18:28.769]          </block>
[09:18:28.769]          <control if="" while="1" timeout="10000" info="">
[09:18:28.769]            // while "1"  (timeout="10000")
[09:18:28.770]            // while-condition  =>  TRUE
[09:18:28.770]            // while "1"  (timeout="10000")
[09:18:28.770]            // while-condition  =>  TRUE
[09:18:28.770]            // while "1"  (timeout="10000")
[09:18:28.770]            // while-condition  =>  TRUE
[09:18:28.771]            // while "1"  (timeout="10000")
[09:18:28.771]            // while-condition  =>  TRUE
[09:18:28.771]            // while "1"  (timeout="10000")
[09:18:28.771]            // while-condition  =>  TRUE
[09:18:28.772]            // while "1"  (timeout="10000")
[09:18:28.772]            // while-condition  =>  TRUE
[09:18:28.772]            // while "1"  (timeout="10000")
[09:18:28.772]            // while-condition  =>  TRUE
[09:18:28.773]            // while "1"  (timeout="10000")
[09:18:28.773]            // while-condition  =>  TRUE
[09:18:28.773]            // while "1"  (timeout="10000")
[09:18:28.773]            // while-condition  =>  TRUE
[09:18:28.774]            // while "1"  (timeout="10000")
[09:18:28.774]            // while-condition  =>  TRUE
[09:18:28.774]            // while "1"  (timeout="10000")
[09:18:28.774]            // while-condition  =>  TRUE
[09:18:28.774]            // while "1"  (timeout="10000")
[09:18:28.774]            // while-condition  =>  TRUE
[09:18:28.775]            // while "1"  (timeout="10000")
[09:18:28.775]            // while-condition  =>  TRUE
[09:18:28.775]            // while "1"  (timeout="10000")
[09:18:28.775]            // while-condition  =>  TRUE
[09:18:28.775]            // while "1"  (timeout="10000")
[09:18:28.776]            // while-condition  =>  TRUE
[09:18:28.776]            // while "1"  (timeout="10000")
[09:18:28.776]            // while-condition  =>  TRUE
[09:18:28.776]            // while "1"  (timeout="10000")
[09:18:28.776]            // while-condition  =>  TRUE
[09:18:28.776]            // while "1"  (timeout="10000")
[09:18:28.776]            // while-condition  =>  TRUE
[09:18:28.776]            // while "1"  (timeout="10000")
[09:18:28.776]            // while-condition  =>  TRUE
[09:18:28.777]            // while "1"  (timeout="10000")
[09:18:28.778]            // while-condition  =>  TRUE
[09:18:28.778]            // while "1"  (timeout="10000")
[09:18:28.778]            // while-condition  =>  TRUE
[09:18:28.778]            // while "1"  (timeout="10000")
[09:18:28.778]            // while-condition  =>  TRUE
[09:18:28.778]            // while "1"  (timeout="10000")
[09:18:28.779]            // while-condition  =>  TRUE
[09:18:28.779]            // while "1"  (timeout="10000")
[09:18:28.779]            // while-condition  =>  TRUE
[09:18:28.779]            // while "1"  (timeout="10000")
[09:18:28.779]            // while-condition  =>  TRUE
[09:18:28.779]            // while "1"  (timeout="10000")
[09:18:28.779]            // while-condition  =>  TRUE
[09:18:28.779]            // while "1"  (timeout="10000")
[09:18:28.780]            // while-condition  =>  TRUE
[09:18:28.781]            // while "1"  (timeout="10000")
[09:18:28.781]            // while-condition  =>  TRUE
[09:18:28.781]            // while "1"  (timeout="10000")
[09:18:28.781]            // while-condition  =>  TRUE
[09:18:28.781]            // while "1"  (timeout="10000")
[09:18:28.782]            // while-condition  =>  TRUE
[09:18:28.782]            // while "1"  (timeout="10000")
[09:18:28.782]            // while  =>  TIMEOUT
[09:18:28.782]            // end while "1"
[09:18:28.782]          </control>
[09:18:28.783]          <block atomic="true" info="">
[09:18:28.786]  
[09:18:28.786]  ! W001 : No atomic sequence support in debug unit
[09:18:28.786]  
[09:18:28.787]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:18:28.789]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:18:28.789]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:18:28.792]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:18:28.792]          </block>
[09:18:28.793]          <block atomic="false" info="">
[09:18:28.793]            __errorcontrol = 0x00000001;
[09:18:28.793]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:18:28.794]            ReadDP(0x0);
[09:18:28.796]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:18:28.796]            __errorcontrol = 0x00000000;
[09:18:28.796]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:18:28.797]          </block>
[09:18:28.798]        </sequence>
[09:18:28.798]      Sequence("DebugPortSetup");
[09:18:28.798]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:18:28.799]        </sequence>
[09:18:28.799]      Sequence("DebugPortStart");
[09:18:28.800]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:18:28.801]          <block atomic="false" info="">
[09:18:28.801]            __var SW_DP_ABORT  = 0x0;
[09:18:28.801]              // -> [SW_DP_ABORT <= 0x00000000]
[09:18:28.801]            __var DP_CTRL_STAT = 0x4;
[09:18:28.802]              // -> [DP_CTRL_STAT <= 0x00000004]
[09:18:28.802]            __var DP_SELECT    = 0x8;
[09:18:28.803]              // -> [DP_SELECT <= 0x00000008]
[09:18:28.803]            __var powered_down = 0;
[09:18:28.803]              // -> [powered_down <= 0x00000000]
[09:18:28.804]            WriteDP(DP_SELECT, 0x00000000);
[09:18:28.805]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:18:28.805]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:18:28.808]              // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:18:28.809]              // -> [powered_down <= 0x00000000]
[09:18:28.809]          </block>
[09:18:28.809]          <control if="powered_down" while="" timeout="0" info="">
[09:18:28.810]            // if-block "powered_down"
[09:18:28.810]              // =>  FALSE
[09:18:28.810]            // skip if-block "powered_down"
[09:18:28.811]          </control>
[09:18:28.811]        </sequence>
[09:18:28.811]      Sequence("DebugCoreStart");
[09:18:28.811]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:18:28.812]          <block atomic="true" info="">
[09:18:28.814]  
[09:18:28.814]  ! W001 : No atomic sequence support in debug unit
[09:18:28.814]  
[09:18:28.816]            __var DP_R_IDCODE    = 0x0;
[09:18:28.817]              // -> [DP_R_IDCODE <= 0x00000000]
[09:18:28.817]            __var DP_W_ABORT    = 0x0;
[09:18:28.817]              // -> [DP_W_ABORT <= 0x00000000]
[09:18:28.819]            __var DP_CTRLSTAT = 0x4;
[09:18:28.819]              // -> [DP_CTRLSTAT <= 0x00000004]
[09:18:28.820]            __var DP_W_SELECT    = 0x8;
[09:18:28.820]              // -> [DP_W_SELECT <= 0x00000008]
[09:18:28.821]            __var AP_TAR		= 0x4;
[09:18:28.821]              // -> [AP_TAR <= 0x00000004]
[09:18:28.822]            __var AP_BD0		= 0x0;
[09:18:28.822]              // -> [AP_BD0 <= 0x00000000]
[09:18:28.823]            __var AP_BD1		= 0x4;
[09:18:28.823]              // -> [AP_BD1 <= 0x00000004]
[09:18:28.824]            __var AP_BD2		= 0x8;
[09:18:28.824]              // -> [AP_BD2 <= 0x00000008]
[09:18:28.824]            __var PCWithinFlash = 0;
[09:18:28.825]              // -> [PCWithinFlash <= 0x00000000]
[09:18:28.825]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:18:28.831]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.849]          </block>
[09:18:28.849]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:18:28.850]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:18:28.857]              // -> [Read32(0xE000EDF0) => 0x00030003]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.858]            // while-condition  =>  FALSE
[09:18:28.875]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:18:28.875]          </control>
[09:18:28.876]          <block atomic="true" info="">
[09:18:28.885]  
[09:18:28.885]  ! W001 : No atomic sequence support in debug unit
[09:18:28.885]  
[09:18:28.890]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:18:28.893]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:18:28.893]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:18:28.897]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.898]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:18:28.901]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:18:28.902]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:18:28.907]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.908]          </block>
[09:18:28.908]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:18:28.909]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.911]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.911]            // while-condition  =>  TRUE
[09:18:28.912]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.914]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.914]            // while-condition  =>  TRUE
[09:18:28.915]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.918]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.919]            // while-condition  =>  TRUE
[09:18:28.919]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.921]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.922]            // while-condition  =>  TRUE
[09:18:28.922]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.925]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.926]            // while-condition  =>  TRUE
[09:18:28.926]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.929]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.929]            // while-condition  =>  TRUE
[09:18:28.930]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.931]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.932]            // while-condition  =>  TRUE
[09:18:28.933]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.935]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.936]            // while-condition  =>  TRUE
[09:18:28.936]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.938]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.939]            // while-condition  =>  TRUE
[09:18:28.939]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.941]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.941]            // while-condition  =>  TRUE
[09:18:28.941]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.944]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.944]            // while-condition  =>  TRUE
[09:18:28.945]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.947]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.948]            // while-condition  =>  TRUE
[09:18:28.948]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.950]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.950]            // while-condition  =>  TRUE
[09:18:28.951]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.953]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.954]            // while-condition  =>  TRUE
[09:18:28.954]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.956]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.957]            // while-condition  =>  TRUE
[09:18:28.957]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.959]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.959]            // while-condition  =>  TRUE
[09:18:28.959]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.962]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.962]            // while-condition  =>  TRUE
[09:18:28.962]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.965]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.966]            // while-condition  =>  TRUE
[09:18:28.966]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.968]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.969]            // while-condition  =>  TRUE
[09:18:28.969]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.971]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.972]            // while-condition  =>  TRUE
[09:18:28.972]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.974]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.975]            // while-condition  =>  TRUE
[09:18:28.975]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.977]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.978]            // while-condition  =>  TRUE
[09:18:28.978]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.981]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.981]            // while-condition  =>  TRUE
[09:18:28.982]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.985]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.986]            // while-condition  =>  TRUE
[09:18:28.986]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.989]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.989]            // while-condition  =>  TRUE
[09:18:28.990]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.992]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.993]            // while-condition  =>  TRUE
[09:18:28.993]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.995]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.996]            // while-condition  =>  TRUE
[09:18:28.996]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:28.998]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:28.998]            // while-condition  =>  TRUE
[09:18:28.999]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:29.001]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:29.002]            // while-condition  =>  TRUE
[09:18:29.002]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:29.005]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:29.006]            // while-condition  =>  TRUE
[09:18:29.006]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:29.009]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:29.009]            // while-condition  =>  TRUE
[09:18:29.010]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:29.012]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:29.013]            // while-condition  =>  TRUE
[09:18:29.013]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:29.015]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:29.015]            // while-condition  =>  TRUE
[09:18:29.015]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:29.018]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:18:29.019]            // while-condition  =>  TRUE
[09:18:29.019]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:18:29.019]            // while  =>  TIMEOUT
[09:18:29.020]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:18:29.020]          </control>
[09:18:29.021]          <block atomic="false" info="">
[09:18:29.021]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:18:29.024]              // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:18:29.024]              // -> [PCWithinFlash <= 0x00000000]
[09:18:29.025]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:18:29.027]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:18:29.027]          </block>
[09:18:29.028]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:18:29.028]            // if-block "PCWithinFlash == 0"
[09:18:29.028]              // =>  TRUE
[09:18:29.029]            // end if-block "PCWithinFlash == 0"
[09:18:29.029]          </control>
[09:18:29.029]        </sequence>
[09:18:29.030]    </block>
[09:18:29.030]  </sequence>
[09:18:29.030]  
[09:18:40.087]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[09:18:40.087]  
[09:18:40.088]  <debugvars>
[09:18:40.088]    // Pre-defined
[09:18:40.089]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:18:40.089]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:18:40.089]    __dp=0x00000000
[09:18:40.090]    __ap=0x00000000
[09:18:40.091]    __traceout=0x00000000      (Trace Disabled)
[09:18:40.092]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:18:40.093]    __FlashAddr=0x00000000
[09:18:40.093]    __FlashLen=0x00000000
[09:18:40.094]    __FlashArg=0x00000000
[09:18:40.094]    __FlashOp=0x00000000
[09:18:40.095]    __Result=0x00000000
[09:18:40.095]  </debugvars>
[09:18:40.096]  
[09:18:40.096]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[09:18:40.096]    <block atomic="false" info="">
[09:18:40.097]      __var nReset      = 0x80;
[09:18:40.097]        // -> [nReset <= 0x00000080]
[09:18:40.097]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:18:40.101]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:18:40.101]    </block>
[09:18:40.102]    <control if="" while="1" timeout="50000" info="">
[09:18:40.103]      // while "1"  (timeout="50000")
[09:18:40.103]      // while-condition  =>  TRUE
[09:18:40.104]      // while "1"  (timeout="50000")
[09:18:40.104]      // while-condition  =>  TRUE
[09:18:40.105]      // while "1"  (timeout="50000")
[09:18:40.105]      // while-condition  =>  TRUE
[09:18:40.105]      // while "1"  (timeout="50000")
[09:18:40.106]      // while-condition  =>  TRUE
[09:18:40.106]      // while "1"  (timeout="50000")
[09:18:40.106]      // while-condition  =>  TRUE
[09:18:40.107]      // while "1"  (timeout="50000")
[09:18:40.107]      // while-condition  =>  TRUE
[09:18:40.107]      // while "1"  (timeout="50000")
[09:18:40.107]      // while-condition  =>  TRUE
[09:18:40.107]      // while "1"  (timeout="50000")
[09:18:40.107]      // while-condition  =>  TRUE
[09:18:40.107]      // while "1"  (timeout="50000")
[09:18:40.108]      // while-condition  =>  TRUE
[09:18:40.109]      // while "1"  (timeout="50000")
[09:18:40.109]      // while-condition  =>  TRUE
[09:18:40.109]      // while "1"  (timeout="50000")
[09:18:40.109]      // while-condition  =>  TRUE
[09:18:40.110]      // while "1"  (timeout="50000")
[09:18:40.110]      // while-condition  =>  TRUE
[09:18:40.110]      // while "1"  (timeout="50000")
[09:18:40.110]      // while-condition  =>  TRUE
[09:18:40.111]      // while "1"  (timeout="50000")
[09:18:40.111]      // while-condition  =>  TRUE
[09:18:40.111]      // while "1"  (timeout="50000")
[09:18:40.111]      // while-condition  =>  TRUE
[09:18:40.111]      // while "1"  (timeout="50000")
[09:18:40.111]      // while-condition  =>  TRUE
[09:18:40.111]      // while "1"  (timeout="50000")
[09:18:40.111]      // while-condition  =>  TRUE
[09:18:40.112]      // while "1"  (timeout="50000")
[09:18:40.112]      // while-condition  =>  TRUE
[09:18:40.112]      // while "1"  (timeout="50000")
[09:18:40.112]      // while-condition  =>  TRUE
[09:18:40.112]      // while "1"  (timeout="50000")
[09:18:40.113]      // while-condition  =>  TRUE
[09:18:40.114]      // while "1"  (timeout="50000")
[09:18:40.114]      // while-condition  =>  TRUE
[09:18:40.114]      // while "1"  (timeout="50000")
[09:18:40.114]      // while-condition  =>  TRUE
[09:18:40.114]      // while "1"  (timeout="50000")
[09:18:40.115]      // while-condition  =>  TRUE
[09:18:40.115]      // while "1"  (timeout="50000")
[09:18:40.115]      // while-condition  =>  TRUE
[09:18:40.115]      // while "1"  (timeout="50000")
[09:18:40.115]      // while-condition  =>  TRUE
[09:18:40.116]      // while "1"  (timeout="50000")
[09:18:40.116]      // while-condition  =>  TRUE
[09:18:40.116]      // while "1"  (timeout="50000")
[09:18:40.116]      // while-condition  =>  TRUE
[09:18:40.116]      // while "1"  (timeout="50000")
[09:18:40.117]      // while-condition  =>  TRUE
[09:18:40.117]      // while "1"  (timeout="50000")
[09:18:40.117]      // while-condition  =>  TRUE
[09:18:40.117]      // while "1"  (timeout="50000")
[09:18:40.117]      // while-condition  =>  TRUE
[09:18:40.117]      // while "1"  (timeout="50000")
[09:18:40.117]      // while-condition  =>  TRUE
[09:18:40.117]      // while "1"  (timeout="50000")
[09:18:40.117]      // while-condition  =>  TRUE
[09:18:40.117]      // while "1"  (timeout="50000")
[09:18:40.117]      // while-condition  =>  TRUE
[09:18:40.118]      // while "1"  (timeout="50000")
[09:18:40.118]      // while-condition  =>  TRUE
[09:18:40.118]      // while "1"  (timeout="50000")
[09:18:40.118]      // while-condition  =>  TRUE
[09:18:40.118]      // while "1"  (timeout="50000")
[09:18:40.120]      // while-condition  =>  TRUE
[09:18:40.120]      // while "1"  (timeout="50000")
[09:18:40.120]      // while-condition  =>  TRUE
[09:18:40.120]      // while "1"  (timeout="50000")
[09:18:40.120]      // while-condition  =>  TRUE
[09:18:40.120]      // while "1"  (timeout="50000")
[09:18:40.121]      // while-condition  =>  TRUE
[09:18:40.121]      // while "1"  (timeout="50000")
[09:18:40.121]      // while-condition  =>  TRUE
[09:18:40.122]      // while "1"  (timeout="50000")
[09:18:40.122]      // while-condition  =>  TRUE
[09:18:40.122]      // while "1"  (timeout="50000")
[09:18:40.122]      // while-condition  =>  TRUE
[09:18:40.122]      // while "1"  (timeout="50000")
[09:18:40.122]      // while-condition  =>  TRUE
[09:18:40.122]      // while "1"  (timeout="50000")
[09:18:40.122]      // while-condition  =>  TRUE
[09:18:40.122]      // while "1"  (timeout="50000")
[09:18:40.123]      // while-condition  =>  TRUE
[09:18:40.124]      // while "1"  (timeout="50000")
[09:18:40.124]      // while-condition  =>  TRUE
[09:18:40.124]      // while "1"  (timeout="50000")
[09:18:40.124]      // while-condition  =>  TRUE
[09:18:40.124]      // while "1"  (timeout="50000")
[09:18:40.124]      // while-condition  =>  TRUE
[09:18:40.125]      // while "1"  (timeout="50000")
[09:18:40.125]      // while-condition  =>  TRUE
[09:18:40.125]      // while "1"  (timeout="50000")
[09:18:40.125]      // while-condition  =>  TRUE
[09:18:40.125]      // while "1"  (timeout="50000")
[09:18:40.126]      // while-condition  =>  TRUE
[09:18:40.126]      // while "1"  (timeout="50000")
[09:18:40.126]      // while-condition  =>  TRUE
[09:18:40.126]      // while "1"  (timeout="50000")
[09:18:40.127]      // while-condition  =>  TRUE
[09:18:40.127]      // while "1"  (timeout="50000")
[09:18:40.127]      // while-condition  =>  TRUE
[09:18:40.127]      // while "1"  (timeout="50000")
[09:18:40.127]      // while-condition  =>  TRUE
[09:18:40.127]      // while "1"  (timeout="50000")
[09:18:40.128]      // while-condition  =>  TRUE
[09:18:40.128]      // while "1"  (timeout="50000")
[09:18:40.128]      // while-condition  =>  TRUE
[09:18:40.128]      // while "1"  (timeout="50000")
[09:18:40.128]      // while-condition  =>  TRUE
[09:18:40.128]      // while "1"  (timeout="50000")
[09:18:40.128]      // while-condition  =>  TRUE
[09:18:40.128]      // while "1"  (timeout="50000")
[09:18:40.128]      // while-condition  =>  TRUE
[09:18:40.129]      // while "1"  (timeout="50000")
[09:18:40.129]      // while-condition  =>  TRUE
[09:18:40.129]      // while "1"  (timeout="50000")
[09:18:40.129]      // while-condition  =>  TRUE
[09:18:40.129]      // while "1"  (timeout="50000")
[09:18:40.129]      // while-condition  =>  TRUE
[09:18:40.131]      // while "1"  (timeout="50000")
[09:18:40.131]      // while-condition  =>  TRUE
[09:18:40.131]      // while "1"  (timeout="50000")
[09:18:40.131]      // while-condition  =>  TRUE
[09:18:40.132]      // while "1"  (timeout="50000")
[09:18:40.132]      // while-condition  =>  TRUE
[09:18:40.132]      // while "1"  (timeout="50000")
[09:18:40.132]      // while-condition  =>  TRUE
[09:18:40.132]      // while "1"  (timeout="50000")
[09:18:40.141]      // while-condition  =>  TRUE
[09:18:40.141]      // while "1"  (timeout="50000")
[09:18:40.141]      // while-condition  =>  TRUE
[09:18:40.141]      // while "1"  (timeout="50000")
[09:18:40.143]      // while-condition  =>  TRUE
[09:18:40.143]      // while "1"  (timeout="50000")
[09:18:40.143]      // while-condition  =>  TRUE
[09:18:40.143]      // while "1"  (timeout="50000")
[09:18:40.144]      // while-condition  =>  TRUE
[09:18:40.144]      // while "1"  (timeout="50000")
[09:18:40.144]      // while-condition  =>  TRUE
[09:18:40.145]      // while "1"  (timeout="50000")
[09:18:40.146]      // while-condition  =>  TRUE
[09:18:40.146]      // while "1"  (timeout="50000")
[09:18:40.146]      // while-condition  =>  TRUE
[09:18:40.146]      // while "1"  (timeout="50000")
[09:18:40.147]      // while-condition  =>  TRUE
[09:18:40.147]      // while "1"  (timeout="50000")
[09:18:40.147]      // while-condition  =>  TRUE
[09:18:40.148]      // while "1"  (timeout="50000")
[09:18:40.148]      // while-condition  =>  TRUE
[09:18:40.148]      // while "1"  (timeout="50000")
[09:18:40.148]      // while-condition  =>  TRUE
[09:18:40.149]      // while "1"  (timeout="50000")
[09:18:40.149]      // while-condition  =>  TRUE
[09:18:40.149]      // while "1"  (timeout="50000")
[09:18:40.149]      // while-condition  =>  TRUE
[09:18:40.150]      // while "1"  (timeout="50000")
[09:18:40.150]      // while-condition  =>  TRUE
[09:18:40.150]      // while "1"  (timeout="50000")
[09:18:40.151]      // while-condition  =>  TRUE
[09:18:40.151]      // while "1"  (timeout="50000")
[09:18:40.151]      // while-condition  =>  TRUE
[09:18:40.152]      // while "1"  (timeout="50000")
[09:18:40.152]      // while-condition  =>  TRUE
[09:18:40.152]      // while "1"  (timeout="50000")
[09:18:40.152]      // while-condition  =>  TRUE
[09:18:40.153]      // while "1"  (timeout="50000")
[09:18:40.153]      // while-condition  =>  TRUE
[09:18:40.153]      // while "1"  (timeout="50000")
[09:18:40.154]      // while-condition  =>  TRUE
[09:18:40.154]      // while "1"  (timeout="50000")
[09:18:40.154]      // while-condition  =>  TRUE
[09:18:40.154]      // while "1"  (timeout="50000")
[09:18:40.154]      // while-condition  =>  TRUE
[09:18:40.154]      // while "1"  (timeout="50000")
[09:18:40.154]      // while-condition  =>  TRUE
[09:18:40.154]      // while "1"  (timeout="50000")
[09:18:40.155]      // while-condition  =>  TRUE
[09:18:40.155]      // while "1"  (timeout="50000")
[09:18:40.155]      // while-condition  =>  TRUE
[09:18:40.156]      // while "1"  (timeout="50000")
[09:18:40.156]      // while-condition  =>  TRUE
[09:18:40.156]      // while "1"  (timeout="50000")
[09:18:40.156]      // while-condition  =>  TRUE
[09:18:40.156]      // while "1"  (timeout="50000")
[09:18:40.157]      // while-condition  =>  TRUE
[09:18:40.157]      // while "1"  (timeout="50000")
[09:18:40.157]      // while  =>  TIMEOUT
[09:18:40.157]      // end while "1"
[09:18:40.157]    </control>
[09:18:40.158]    <block atomic="false" info="">
[09:18:40.158]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:18:40.160]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:18:40.160]    </block>
[09:18:40.160]  </sequence>
[09:18:40.161]  
[09:19:26.600]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:19:26.600]  
[09:19:26.601]  <debugvars>
[09:19:26.602]    // Pre-defined
[09:19:26.602]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:19:26.603]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:19:26.603]    __dp=0x00000000
[09:19:26.604]    __ap=0x00000000
[09:19:26.605]    __traceout=0x00000000      (Trace Disabled)
[09:19:26.605]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:19:26.605]    __FlashAddr=0x00000000
[09:19:26.606]    __FlashLen=0x00000000
[09:19:26.606]    __FlashArg=0x00000000
[09:19:26.608]    __FlashOp=0x00000000
[09:19:26.608]    __Result=0x00000000
[09:19:26.609]  </debugvars>
[09:19:26.609]  
[09:19:26.610]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:19:26.610]    <block atomic="false" info="">
[09:19:26.611]      __var nReset      = 0x80;
[09:19:26.611]        // -> [nReset <= 0x00000080]
[09:19:26.611]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:19:26.613]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:19:26.613]    </block>
[09:19:26.614]    <control if="" while="1" timeout="50000" info="">
[09:19:26.614]      // while "1"  (timeout="50000")
[09:19:26.614]      // while-condition  =>  TRUE
[09:19:26.615]      // while "1"  (timeout="50000")
[09:19:26.615]      // while-condition  =>  TRUE
[09:19:26.615]      // while "1"  (timeout="50000")
[09:19:26.616]      // while-condition  =>  TRUE
[09:19:26.617]      // while "1"  (timeout="50000")
[09:19:26.617]      // while-condition  =>  TRUE
[09:19:26.618]      // while "1"  (timeout="50000")
[09:19:26.618]      // while-condition  =>  TRUE
[09:19:26.619]      // while "1"  (timeout="50000")
[09:19:26.620]      // while-condition  =>  TRUE
[09:19:26.620]      // while "1"  (timeout="50000")
[09:19:26.621]      // while-condition  =>  TRUE
[09:19:26.621]      // while "1"  (timeout="50000")
[09:19:26.622]      // while-condition  =>  TRUE
[09:19:26.622]      // while "1"  (timeout="50000")
[09:19:26.622]      // while-condition  =>  TRUE
[09:19:26.622]      // while "1"  (timeout="50000")
[09:19:26.623]      // while-condition  =>  TRUE
[09:19:26.623]      // while "1"  (timeout="50000")
[09:19:26.625]      // while-condition  =>  TRUE
[09:19:26.625]      // while "1"  (timeout="50000")
[09:19:26.625]      // while-condition  =>  TRUE
[09:19:26.625]      // while "1"  (timeout="50000")
[09:19:26.625]      // while-condition  =>  TRUE
[09:19:26.625]      // while "1"  (timeout="50000")
[09:19:26.626]      // while-condition  =>  TRUE
[09:19:26.626]      // while "1"  (timeout="50000")
[09:19:26.626]      // while-condition  =>  TRUE
[09:19:26.627]      // while "1"  (timeout="50000")
[09:19:26.627]      // while-condition  =>  TRUE
[09:19:26.627]      // while "1"  (timeout="50000")
[09:19:26.627]      // while-condition  =>  TRUE
[09:19:26.628]      // while "1"  (timeout="50000")
[09:19:26.628]      // while-condition  =>  TRUE
[09:19:26.628]      // while "1"  (timeout="50000")
[09:19:26.629]      // while-condition  =>  TRUE
[09:19:26.629]      // while "1"  (timeout="50000")
[09:19:26.629]      // while-condition  =>  TRUE
[09:19:26.629]      // while "1"  (timeout="50000")
[09:19:26.630]      // while-condition  =>  TRUE
[09:19:26.631]      // while "1"  (timeout="50000")
[09:19:26.631]      // while-condition  =>  TRUE
[09:19:26.631]      // while "1"  (timeout="50000")
[09:19:26.632]      // while-condition  =>  TRUE
[09:19:26.632]      // while "1"  (timeout="50000")
[09:19:26.632]      // while-condition  =>  TRUE
[09:19:26.632]      // while "1"  (timeout="50000")
[09:19:26.633]      // while-condition  =>  TRUE
[09:19:26.633]      // while "1"  (timeout="50000")
[09:19:26.633]      // while-condition  =>  TRUE
[09:19:26.633]      // while "1"  (timeout="50000")
[09:19:26.633]      // while-condition  =>  TRUE
[09:19:26.633]      // while "1"  (timeout="50000")
[09:19:26.633]      // while-condition  =>  TRUE
[09:19:26.633]      // while "1"  (timeout="50000")
[09:19:26.633]      // while-condition  =>  TRUE
[09:19:26.634]      // while "1"  (timeout="50000")
[09:19:26.634]      // while-condition  =>  TRUE
[09:19:26.634]      // while "1"  (timeout="50000")
[09:19:26.634]      // while-condition  =>  TRUE
[09:19:26.634]      // while "1"  (timeout="50000")
[09:19:26.635]      // while-condition  =>  TRUE
[09:19:26.636]      // while "1"  (timeout="50000")
[09:19:26.636]      // while-condition  =>  TRUE
[09:19:26.636]      // while "1"  (timeout="50000")
[09:19:26.636]      // while-condition  =>  TRUE
[09:19:26.636]      // while "1"  (timeout="50000")
[09:19:26.636]      // while-condition  =>  TRUE
[09:19:26.636]      // while "1"  (timeout="50000")
[09:19:26.636]      // while-condition  =>  TRUE
[09:19:26.636]      // while "1"  (timeout="50000")
[09:19:26.637]      // while-condition  =>  TRUE
[09:19:26.638]      // while "1"  (timeout="50000")
[09:19:26.638]      // while-condition  =>  TRUE
[09:19:26.638]      // while "1"  (timeout="50000")
[09:19:26.638]      // while-condition  =>  TRUE
[09:19:26.638]      // while "1"  (timeout="50000")
[09:19:26.639]      // while-condition  =>  TRUE
[09:19:26.639]      // while "1"  (timeout="50000")
[09:19:26.639]      // while-condition  =>  TRUE
[09:19:26.639]      // while "1"  (timeout="50000")
[09:19:26.639]      // while-condition  =>  TRUE
[09:19:26.639]      // while "1"  (timeout="50000")
[09:19:26.640]      // while-condition  =>  TRUE
[09:19:26.640]      // while "1"  (timeout="50000")
[09:19:26.640]      // while-condition  =>  TRUE
[09:19:26.640]      // while "1"  (timeout="50000")
[09:19:26.640]      // while-condition  =>  TRUE
[09:19:26.641]      // while "1"  (timeout="50000")
[09:19:26.641]      // while-condition  =>  TRUE
[09:19:26.641]      // while "1"  (timeout="50000")
[09:19:26.641]      // while-condition  =>  TRUE
[09:19:26.641]      // while "1"  (timeout="50000")
[09:19:26.642]      // while-condition  =>  TRUE
[09:19:26.642]      // while "1"  (timeout="50000")
[09:19:26.642]      // while-condition  =>  TRUE
[09:19:26.642]      // while "1"  (timeout="50000")
[09:19:26.642]      // while-condition  =>  TRUE
[09:19:26.643]      // while "1"  (timeout="50000")
[09:19:26.643]      // while-condition  =>  TRUE
[09:19:26.643]      // while "1"  (timeout="50000")
[09:19:26.643]      // while-condition  =>  TRUE
[09:19:26.643]      // while "1"  (timeout="50000")
[09:19:26.643]      // while-condition  =>  TRUE
[09:19:26.643]      // while "1"  (timeout="50000")
[09:19:26.643]      // while-condition  =>  TRUE
[09:19:26.643]      // while "1"  (timeout="50000")
[09:19:26.643]      // while-condition  =>  TRUE
[09:19:26.644]      // while "1"  (timeout="50000")
[09:19:26.644]      // while-condition  =>  TRUE
[09:19:26.644]      // while "1"  (timeout="50000")
[09:19:26.644]      // while-condition  =>  TRUE
[09:19:26.644]      // while "1"  (timeout="50000")
[09:19:26.645]      // while-condition  =>  TRUE
[09:19:26.645]      // while "1"  (timeout="50000")
[09:19:26.645]      // while-condition  =>  TRUE
[09:19:26.645]      // while "1"  (timeout="50000")
[09:19:26.645]      // while-condition  =>  TRUE
[09:19:26.647]      // while "1"  (timeout="50000")
[09:19:26.647]      // while-condition  =>  TRUE
[09:19:26.647]      // while "1"  (timeout="50000")
[09:19:26.647]      // while-condition  =>  TRUE
[09:19:26.647]      // while "1"  (timeout="50000")
[09:19:26.648]      // while-condition  =>  TRUE
[09:19:26.648]      // while "1"  (timeout="50000")
[09:19:26.648]      // while-condition  =>  TRUE
[09:19:26.648]      // while "1"  (timeout="50000")
[09:19:26.648]      // while-condition  =>  TRUE
[09:19:26.649]      // while "1"  (timeout="50000")
[09:19:26.649]      // while-condition  =>  TRUE
[09:19:26.649]      // while "1"  (timeout="50000")
[09:19:26.649]      // while-condition  =>  TRUE
[09:19:26.649]      // while "1"  (timeout="50000")
[09:19:26.649]      // while-condition  =>  TRUE
[09:19:26.650]      // while "1"  (timeout="50000")
[09:19:26.650]      // while-condition  =>  TRUE
[09:19:26.650]      // while "1"  (timeout="50000")
[09:19:26.650]      // while-condition  =>  TRUE
[09:19:26.650]      // while "1"  (timeout="50000")
[09:19:26.651]      // while-condition  =>  TRUE
[09:19:26.651]      // while "1"  (timeout="50000")
[09:19:26.651]      // while-condition  =>  TRUE
[09:19:26.651]      // while "1"  (timeout="50000")
[09:19:26.651]      // while-condition  =>  TRUE
[09:19:26.652]      // while "1"  (timeout="50000")
[09:19:26.652]      // while-condition  =>  TRUE
[09:19:26.652]      // while "1"  (timeout="50000")
[09:19:26.652]      // while-condition  =>  TRUE
[09:19:26.652]      // while "1"  (timeout="50000")
[09:19:26.653]      // while-condition  =>  TRUE
[09:19:26.653]      // while "1"  (timeout="50000")
[09:19:26.653]      // while-condition  =>  TRUE
[09:19:26.653]      // while "1"  (timeout="50000")
[09:19:26.653]      // while-condition  =>  TRUE
[09:19:26.654]      // while "1"  (timeout="50000")
[09:19:26.654]      // while-condition  =>  TRUE
[09:19:26.654]      // while "1"  (timeout="50000")
[09:19:26.654]      // while-condition  =>  TRUE
[09:19:26.654]      // while "1"  (timeout="50000")
[09:19:26.654]      // while-condition  =>  TRUE
[09:19:26.654]      // while "1"  (timeout="50000")
[09:19:26.654]      // while-condition  =>  TRUE
[09:19:26.654]      // while "1"  (timeout="50000")
[09:19:26.655]      // while-condition  =>  TRUE
[09:19:26.655]      // while "1"  (timeout="50000")
[09:19:26.655]      // while-condition  =>  TRUE
[09:19:26.655]      // while "1"  (timeout="50000")
[09:19:26.655]      // while-condition  =>  TRUE
[09:19:26.656]      // while "1"  (timeout="50000")
[09:19:26.656]      // while-condition  =>  TRUE
[09:19:26.656]      // while "1"  (timeout="50000")
[09:19:26.656]      // while-condition  =>  TRUE
[09:19:26.656]      // while "1"  (timeout="50000")
[09:19:26.657]      // while-condition  =>  TRUE
[09:19:26.658]      // while "1"  (timeout="50000")
[09:19:26.658]      // while-condition  =>  TRUE
[09:19:26.658]      // while "1"  (timeout="50000")
[09:19:26.658]      // while-condition  =>  TRUE
[09:19:26.658]      // while "1"  (timeout="50000")
[09:19:26.659]      // while-condition  =>  TRUE
[09:19:26.659]      // while "1"  (timeout="50000")
[09:19:26.659]      // while-condition  =>  TRUE
[09:19:26.659]      // while "1"  (timeout="50000")
[09:19:26.659]      // while-condition  =>  TRUE
[09:19:26.659]      // while "1"  (timeout="50000")
[09:19:26.659]      // while-condition  =>  TRUE
[09:19:26.659]      // while "1"  (timeout="50000")
[09:19:26.659]      // while-condition  =>  TRUE
[09:19:26.659]      // while "1"  (timeout="50000")
[09:19:26.660]      // while-condition  =>  TRUE
[09:19:26.661]      // while "1"  (timeout="50000")
[09:19:26.661]      // while-condition  =>  TRUE
[09:19:26.661]      // while "1"  (timeout="50000")
[09:19:26.661]      // while-condition  =>  TRUE
[09:19:26.661]      // while "1"  (timeout="50000")
[09:19:26.661]      // while-condition  =>  TRUE
[09:19:26.661]      // while "1"  (timeout="50000")
[09:19:26.662]      // while-condition  =>  TRUE
[09:19:26.662]      // while "1"  (timeout="50000")
[09:19:26.662]      // while-condition  =>  TRUE
[09:19:26.662]      // while "1"  (timeout="50000")
[09:19:26.662]      // while-condition  =>  TRUE
[09:19:26.663]      // while "1"  (timeout="50000")
[09:19:26.664]      // while-condition  =>  TRUE
[09:19:26.664]      // while "1"  (timeout="50000")
[09:19:26.664]      // while-condition  =>  TRUE
[09:19:26.664]      // while "1"  (timeout="50000")
[09:19:26.664]      // while-condition  =>  TRUE
[09:19:26.665]      // while "1"  (timeout="50000")
[09:19:26.665]      // while-condition  =>  TRUE
[09:19:26.665]      // while "1"  (timeout="50000")
[09:19:26.665]      // while-condition  =>  TRUE
[09:19:26.665]      // while "1"  (timeout="50000")
[09:19:26.665]      // while-condition  =>  TRUE
[09:19:26.665]      // while "1"  (timeout="50000")
[09:19:26.665]      // while-condition  =>  TRUE
[09:19:26.665]      // while "1"  (timeout="50000")
[09:19:26.666]      // while-condition  =>  TRUE
[09:19:26.666]      // while "1"  (timeout="50000")
[09:19:26.666]      // while-condition  =>  TRUE
[09:19:26.666]      // while "1"  (timeout="50000")
[09:19:26.666]      // while-condition  =>  TRUE
[09:19:26.666]      // while "1"  (timeout="50000")
[09:19:26.667]      // while-condition  =>  TRUE
[09:19:26.667]      // while "1"  (timeout="50000")
[09:19:26.667]      // while-condition  =>  TRUE
[09:19:26.667]      // while "1"  (timeout="50000")
[09:19:26.667]      // while-condition  =>  TRUE
[09:19:26.668]      // while "1"  (timeout="50000")
[09:19:26.669]      // while-condition  =>  TRUE
[09:19:26.669]      // while "1"  (timeout="50000")
[09:19:26.669]      // while-condition  =>  TRUE
[09:19:26.669]      // while "1"  (timeout="50000")
[09:19:26.669]      // while-condition  =>  TRUE
[09:19:26.670]      // while "1"  (timeout="50000")
[09:19:26.670]      // while-condition  =>  TRUE
[09:19:26.670]      // while "1"  (timeout="50000")
[09:19:26.670]      // while-condition  =>  TRUE
[09:19:26.670]      // while "1"  (timeout="50000")
[09:19:26.671]      // while-condition  =>  TRUE
[09:19:26.671]      // while "1"  (timeout="50000")
[09:19:26.671]      // while-condition  =>  TRUE
[09:19:26.671]      // while "1"  (timeout="50000")
[09:19:26.671]      // while-condition  =>  TRUE
[09:19:26.671]      // while "1"  (timeout="50000")
[09:19:26.671]      // while-condition  =>  TRUE
[09:19:26.671]      // while "1"  (timeout="50000")
[09:19:26.672]      // while-condition  =>  TRUE
[09:19:26.672]      // while "1"  (timeout="50000")
[09:19:26.673]      // while  =>  TIMEOUT
[09:19:26.673]      // end while "1"
[09:19:26.673]    </control>
[09:19:26.673]    <block atomic="false" info="">
[09:19:26.673]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:19:26.676]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:19:26.677]    </block>
[09:19:26.677]    <control if="" while="1" timeout="10000" info="">
[09:19:26.677]      // while "1"  (timeout="10000")
[09:19:26.677]      // while-condition  =>  TRUE
[09:19:26.677]      // while "1"  (timeout="10000")
[09:19:26.677]      // while-condition  =>  TRUE
[09:19:26.678]      // while "1"  (timeout="10000")
[09:19:26.679]      // while-condition  =>  TRUE
[09:19:26.679]      // while "1"  (timeout="10000")
[09:19:26.679]      // while-condition  =>  TRUE
[09:19:26.679]      // while "1"  (timeout="10000")
[09:19:26.679]      // while-condition  =>  TRUE
[09:19:26.680]      // while "1"  (timeout="10000")
[09:19:26.680]      // while-condition  =>  TRUE
[09:19:26.680]      // while "1"  (timeout="10000")
[09:19:26.681]      // while-condition  =>  TRUE
[09:19:26.682]      // while "1"  (timeout="10000")
[09:19:26.682]      // while-condition  =>  TRUE
[09:19:26.682]      // while "1"  (timeout="10000")
[09:19:26.683]      // while-condition  =>  TRUE
[09:19:26.683]      // while "1"  (timeout="10000")
[09:19:26.683]      // while-condition  =>  TRUE
[09:19:26.683]      // while "1"  (timeout="10000")
[09:19:26.684]      // while-condition  =>  TRUE
[09:19:26.684]      // while "1"  (timeout="10000")
[09:19:26.684]      // while-condition  =>  TRUE
[09:19:26.684]      // while "1"  (timeout="10000")
[09:19:26.685]      // while-condition  =>  TRUE
[09:19:26.685]      // while "1"  (timeout="10000")
[09:19:26.685]      // while-condition  =>  TRUE
[09:19:26.685]      // while "1"  (timeout="10000")
[09:19:26.686]      // while-condition  =>  TRUE
[09:19:26.686]      // while "1"  (timeout="10000")
[09:19:26.686]      // while-condition  =>  TRUE
[09:19:26.686]      // while "1"  (timeout="10000")
[09:19:26.686]      // while-condition  =>  TRUE
[09:19:26.686]      // while "1"  (timeout="10000")
[09:19:26.686]      // while-condition  =>  TRUE
[09:19:26.686]      // while "1"  (timeout="10000")
[09:19:26.686]      // while-condition  =>  TRUE
[09:19:26.687]      // while "1"  (timeout="10000")
[09:19:26.687]      // while-condition  =>  TRUE
[09:19:26.687]      // while "1"  (timeout="10000")
[09:19:26.687]      // while-condition  =>  TRUE
[09:19:26.687]      // while "1"  (timeout="10000")
[09:19:26.688]      // while-condition  =>  TRUE
[09:19:26.688]      // while "1"  (timeout="10000")
[09:19:26.688]      // while  =>  TIMEOUT
[09:19:26.688]      // end while "1"
[09:19:26.688]    </control>
[09:19:26.689]    <block atomic="true" info="">
[09:19:26.693]  
[09:19:26.693]  ! W001 : No atomic sequence support in debug unit
[09:19:26.693]  
[09:19:26.695]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:19:26.697]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:19:26.697]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:19:26.699]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:19:26.699]    </block>
[09:19:26.699]    <block atomic="false" info="">
[09:19:26.699]      __errorcontrol = 0x00000001;
[09:19:26.699]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:19:26.700]      ReadDP(0x0);
[09:19:26.703]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:19:26.703]      __errorcontrol = 0x00000000;
[09:19:26.703]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:19:26.703]    </block>
[09:19:26.703]  </sequence>
[09:19:26.704]  
[09:19:26.704]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:19:26.704]  
[09:19:26.704]  <debugvars>
[09:19:26.705]    // Pre-defined
[09:19:26.705]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:19:26.707]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:19:26.707]    __dp=0x00000000
[09:19:26.707]    __ap=0x00000000
[09:19:26.708]    __traceout=0x00000000      (Trace Disabled)
[09:19:26.708]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:19:26.708]    __FlashAddr=0x00000000
[09:19:26.708]    __FlashLen=0x00000000
[09:19:26.708]    __FlashArg=0x00000000
[09:19:26.709]    __FlashOp=0x00000000
[09:19:26.709]    __Result=0x00000000
[09:19:26.709]  </debugvars>
[09:19:26.710]  
[09:19:26.710]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:19:26.710]  </sequence>
[09:19:26.711]  
[09:19:26.715]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[09:19:26.715]  
[09:19:26.715]  <debugvars>
[09:19:26.716]    // Pre-defined
[09:19:26.716]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:19:26.716]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:19:26.717]    __dp=0x00000000
[09:19:26.717]    __ap=0x00000000
[09:19:26.717]    __traceout=0x00000000      (Trace Disabled)
[09:19:26.718]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:19:26.718]    __FlashAddr=0x00000000
[09:19:26.718]    __FlashLen=0x00000000
[09:19:26.719]    __FlashArg=0x00000000
[09:19:26.719]    __FlashOp=0x00000000
[09:19:26.719]    __Result=0x00000000
[09:19:26.720]  </debugvars>
[09:19:26.720]  
[09:19:26.720]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:19:26.721]    <block atomic="false" info="">
[09:19:26.721]      __var SW_DP_ABORT  = 0x0;
[09:19:26.721]        // -> [SW_DP_ABORT <= 0x00000000]
[09:19:26.722]      __var DP_CTRL_STAT = 0x4;
[09:19:26.722]        // -> [DP_CTRL_STAT <= 0x00000004]
[09:19:26.722]      __var DP_SELECT    = 0x8;
[09:19:26.723]        // -> [DP_SELECT <= 0x00000008]
[09:19:26.723]      __var powered_down = 0;
[09:19:26.724]        // -> [powered_down <= 0x00000000]
[09:19:26.724]      WriteDP(DP_SELECT, 0x00000000);
[09:19:26.726]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:19:26.726]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:19:26.729]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[09:19:26.729]        // -> [powered_down <= 0x00000001]
[09:19:26.730]    </block>
[09:19:26.730]    <control if="powered_down" while="" timeout="0" info="">
[09:19:26.731]      // if-block "powered_down"
[09:19:26.731]        // =>  TRUE
[09:19:26.731]      <block atomic="false" info="">
[09:19:26.732]        WriteDP(DP_CTRL_STAT, 0x50000000);
[09:19:26.734]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[09:19:26.734]      </block>
[09:19:26.735]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[09:19:26.735]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[09:19:26.737]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:19:26.737]        // while-condition  =>  FALSE
[09:19:26.738]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[09:19:26.738]      </control>
[09:19:26.738]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[09:19:26.739]        // if-block "(__protocol & 0xFFFF) == 1"
[09:19:26.739]          // =>  FALSE
[09:19:26.739]        // skip if-block "(__protocol & 0xFFFF) == 1"
[09:19:26.740]      </control>
[09:19:26.740]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[09:19:26.740]        // if-block "(__protocol & 0xFFFF) == 2"
[09:19:26.740]          // =>  TRUE
[09:19:26.741]        <block atomic="false" info="">
[09:19:26.741]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[09:19:26.743]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[09:19:26.743]          WriteDP(SW_DP_ABORT, 0x0000001E);
[09:19:26.745]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[09:19:26.745]        </block>
[09:19:26.746]        // end if-block "(__protocol & 0xFFFF) == 2"
[09:19:26.746]      </control>
[09:19:26.746]      // end if-block "powered_down"
[09:19:26.746]    </control>
[09:19:26.747]  </sequence>
[09:19:26.747]  
[09:19:26.851]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:19:26.851]  
[09:19:26.852]  <debugvars>
[09:19:26.852]    // Pre-defined
[09:19:26.853]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:19:26.853]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:19:26.854]    __dp=0x00000000
[09:19:26.854]    __ap=0x00000000
[09:19:26.855]    __traceout=0x00000000      (Trace Disabled)
[09:19:26.855]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:19:26.855]    __FlashAddr=0x00000000
[09:19:26.856]    __FlashLen=0x00000000
[09:19:26.856]    __FlashArg=0x00000000
[09:19:26.856]    __FlashOp=0x00000000
[09:19:26.857]    __Result=0x00000000
[09:19:26.857]  </debugvars>
[09:19:26.857]  
[09:19:26.858]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:19:26.858]    <block atomic="true" info="">
[09:19:26.862]  
[09:19:26.862]  ! W001 : No atomic sequence support in debug unit
[09:19:26.862]  
[09:19:26.864]      __var DP_R_IDCODE    = 0x0;
[09:19:26.880]        // -> [DP_R_IDCODE <= 0x00000000]
[09:19:26.880]      __var DP_W_ABORT    = 0x0;
[09:19:26.880]        // -> [DP_W_ABORT <= 0x00000000]
[09:19:26.881]      __var DP_CTRLSTAT = 0x4;
[09:19:26.881]        // -> [DP_CTRLSTAT <= 0x00000004]
[09:19:26.882]      __var DP_W_SELECT    = 0x8;
[09:19:26.882]        // -> [DP_W_SELECT <= 0x00000008]
[09:19:26.883]      __var AP_TAR		= 0x4;
[09:19:26.883]        // -> [AP_TAR <= 0x00000004]
[09:19:26.884]      __var AP_BD0		= 0x0;
[09:19:26.884]        // -> [AP_BD0 <= 0x00000000]
[09:19:26.885]      __var AP_BD1		= 0x4;
[09:19:26.885]        // -> [AP_BD1 <= 0x00000004]
[09:19:26.885]      __var AP_BD2		= 0x8;
[09:19:26.885]        // -> [AP_BD2 <= 0x00000008]
[09:19:26.886]      __var PCWithinFlash = 0;
[09:19:26.886]        // -> [PCWithinFlash <= 0x00000000]
[09:19:26.886]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:19:26.892]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:19:26.893]    </block>
[09:19:26.893]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:19:26.894]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:19:26.900]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[09:19:26.921]      // while-condition  =>  FALSE
[09:19:26.921]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:19:26.922]    </control>
[09:19:26.922]    <block atomic="true" info="">
[09:19:26.926]  
[09:19:26.926]  ! W001 : No atomic sequence support in debug unit
[09:19:26.926]  
[09:19:26.928]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:19:26.931]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:19:26.931]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:19:26.934]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:19:26.934]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:19:26.937]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:19:26.937]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:19:26.942]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:19:26.942]    </block>
[09:19:26.943]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:19:26.943]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:26.946]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:26.946]      // while-condition  =>  TRUE
[09:19:26.947]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:26.949]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:26.949]      // while-condition  =>  TRUE
[09:19:26.949]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:26.953]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:26.953]      // while-condition  =>  TRUE
[09:19:26.953]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:26.956]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:26.956]      // while-condition  =>  TRUE
[09:19:26.956]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:26.959]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:26.959]      // while-condition  =>  TRUE
[09:19:26.959]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:26.962]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:26.962]      // while-condition  =>  TRUE
[09:19:26.962]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:26.965]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:26.965]      // while-condition  =>  TRUE
[09:19:26.965]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:26.968]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:26.969]      // while-condition  =>  TRUE
[09:19:26.969]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:26.972]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:26.972]      // while-condition  =>  TRUE
[09:19:26.972]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:26.975]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:26.975]      // while-condition  =>  TRUE
[09:19:26.976]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:26.978]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:26.978]      // while-condition  =>  TRUE
[09:19:26.978]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:26.980]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:26.980]      // while-condition  =>  TRUE
[09:19:26.980]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:26.982]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:26.982]      // while-condition  =>  TRUE
[09:19:26.982]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:26.985]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:26.985]      // while-condition  =>  TRUE
[09:19:26.985]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:26.988]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:26.988]      // while-condition  =>  TRUE
[09:19:26.988]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:26.991]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:26.991]      // while-condition  =>  TRUE
[09:19:26.991]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:26.994]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:26.994]      // while-condition  =>  TRUE
[09:19:26.994]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:26.997]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:26.997]      // while-condition  =>  TRUE
[09:19:26.997]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.000]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.000]      // while-condition  =>  TRUE
[09:19:27.000]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.003]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.003]      // while-condition  =>  TRUE
[09:19:27.003]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.006]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.006]      // while-condition  =>  TRUE
[09:19:27.006]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.009]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.009]      // while-condition  =>  TRUE
[09:19:27.009]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.012]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.012]      // while-condition  =>  TRUE
[09:19:27.012]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.015]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.015]      // while-condition  =>  TRUE
[09:19:27.015]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.018]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.018]      // while-condition  =>  TRUE
[09:19:27.018]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.021]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.021]      // while-condition  =>  TRUE
[09:19:27.021]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.024]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.024]      // while-condition  =>  TRUE
[09:19:27.024]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.027]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.027]      // while-condition  =>  TRUE
[09:19:27.027]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.030]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.030]      // while-condition  =>  TRUE
[09:19:27.030]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.033]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.033]      // while-condition  =>  TRUE
[09:19:27.033]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.036]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.036]      // while-condition  =>  TRUE
[09:19:27.036]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.039]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.039]      // while-condition  =>  TRUE
[09:19:27.040]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.042]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.042]      // while-condition  =>  TRUE
[09:19:27.042]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.045]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.045]      // while-condition  =>  TRUE
[09:19:27.045]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.047]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.047]      // while-condition  =>  TRUE
[09:19:27.047]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.049]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.049]      // while-condition  =>  TRUE
[09:19:27.049]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.050]      // while  =>  TIMEOUT
[09:19:27.050]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:19:27.050]    </control>
[09:19:27.050]    <block atomic="false" info="">
[09:19:27.050]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:19:27.053]        // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.053]        // -> [PCWithinFlash <= 0x00000000]
[09:19:27.053]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:19:27.056]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:19:27.056]    </block>
[09:19:27.056]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:19:27.057]      // if-block "PCWithinFlash == 0"
[09:19:27.057]        // =>  TRUE
[09:19:27.057]      // end if-block "PCWithinFlash == 0"
[09:19:27.058]    </control>
[09:19:27.058]  </sequence>
[09:19:27.058]  
[09:19:27.103]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[09:19:27.103]  
[09:19:27.104]  <debugvars>
[09:19:27.104]    // Pre-defined
[09:19:27.104]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:19:27.105]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:19:27.105]    __dp=0x00000000
[09:19:27.105]    __ap=0x00000000
[09:19:27.106]    __traceout=0x00000000      (Trace Disabled)
[09:19:27.106]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:19:27.106]    __FlashAddr=0x00000000
[09:19:27.107]    __FlashLen=0x00000000
[09:19:27.107]    __FlashArg=0x00000000
[09:19:27.107]    __FlashOp=0x00000000
[09:19:27.107]    __Result=0x00000000
[09:19:27.108]  </debugvars>
[09:19:27.108]  
[09:19:27.108]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[09:19:27.109]    <block atomic="false" info="">
[09:19:27.109]    </block>
[09:19:27.109]  </sequence>
[09:19:27.110]  
[09:19:27.112]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[09:19:27.112]  
[09:19:27.112]  <debugvars>
[09:19:27.113]    // Pre-defined
[09:19:27.113]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:19:27.113]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:19:27.113]    __dp=0x00000000
[09:19:27.114]    __ap=0x00000000
[09:19:27.114]    __traceout=0x00000000      (Trace Disabled)
[09:19:27.114]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:19:27.115]    __FlashAddr=0x00000000
[09:19:27.115]    __FlashLen=0x00000000
[09:19:27.115]    __FlashArg=0x00000000
[09:19:27.116]    __FlashOp=0x00000000
[09:19:27.116]    __Result=0x00000000
[09:19:27.116]  </debugvars>
[09:19:27.116]  
[09:19:27.117]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:19:27.117]    <block atomic="false" info="">
[09:19:27.117]      __var nReset      = 0x80;
[09:19:27.117]        // -> [nReset <= 0x00000080]
[09:19:27.117]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:19:27.119]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:19:27.119]    </block>
[09:19:27.119]    <control if="" while="1" timeout="50000" info="">
[09:19:27.120]      // while "1"  (timeout="50000")
[09:19:27.120]      // while-condition  =>  TRUE
[09:19:27.120]      // while "1"  (timeout="50000")
[09:19:27.120]      // while-condition  =>  TRUE
[09:19:27.121]      // while "1"  (timeout="50000")
[09:19:27.121]      // while-condition  =>  TRUE
[09:19:27.121]      // while "1"  (timeout="50000")
[09:19:27.121]      // while-condition  =>  TRUE
[09:19:27.122]      // while "1"  (timeout="50000")
[09:19:27.122]      // while-condition  =>  TRUE
[09:19:27.122]      // while "1"  (timeout="50000")
[09:19:27.122]      // while-condition  =>  TRUE
[09:19:27.123]      // while "1"  (timeout="50000")
[09:19:27.123]      // while-condition  =>  TRUE
[09:19:27.123]      // while "1"  (timeout="50000")
[09:19:27.123]      // while-condition  =>  TRUE
[09:19:27.124]      // while "1"  (timeout="50000")
[09:19:27.124]      // while-condition  =>  TRUE
[09:19:27.124]      // while "1"  (timeout="50000")
[09:19:27.124]      // while-condition  =>  TRUE
[09:19:27.124]      // while "1"  (timeout="50000")
[09:19:27.125]      // while-condition  =>  TRUE
[09:19:27.125]      // while "1"  (timeout="50000")
[09:19:27.125]      // while-condition  =>  TRUE
[09:19:27.125]      // while "1"  (timeout="50000")
[09:19:27.125]      // while-condition  =>  TRUE
[09:19:27.125]      // while "1"  (timeout="50000")
[09:19:27.126]      // while-condition  =>  TRUE
[09:19:27.126]      // while "1"  (timeout="50000")
[09:19:27.126]      // while-condition  =>  TRUE
[09:19:27.126]      // while "1"  (timeout="50000")
[09:19:27.126]      // while-condition  =>  TRUE
[09:19:27.127]      // while "1"  (timeout="50000")
[09:19:27.127]      // while-condition  =>  TRUE
[09:19:27.127]      // while "1"  (timeout="50000")
[09:19:27.128]      // while-condition  =>  TRUE
[09:19:27.128]      // while "1"  (timeout="50000")
[09:19:27.128]      // while-condition  =>  TRUE
[09:19:27.128]      // while "1"  (timeout="50000")
[09:19:27.129]      // while-condition  =>  TRUE
[09:19:27.129]      // while "1"  (timeout="50000")
[09:19:27.130]      // while-condition  =>  TRUE
[09:19:27.130]      // while "1"  (timeout="50000")
[09:19:27.130]      // while-condition  =>  TRUE
[09:19:27.130]      // while "1"  (timeout="50000")
[09:19:27.130]      // while-condition  =>  TRUE
[09:19:27.130]      // while "1"  (timeout="50000")
[09:19:27.130]      // while-condition  =>  TRUE
[09:19:27.130]      // while "1"  (timeout="50000")
[09:19:27.132]      // while-condition  =>  TRUE
[09:19:27.132]      // while "1"  (timeout="50000")
[09:19:27.132]      // while-condition  =>  TRUE
[09:19:27.132]      // while "1"  (timeout="50000")
[09:19:27.132]      // while-condition  =>  TRUE
[09:19:27.133]      // while "1"  (timeout="50000")
[09:19:27.133]      // while-condition  =>  TRUE
[09:19:27.133]      // while "1"  (timeout="50000")
[09:19:27.133]      // while-condition  =>  TRUE
[09:19:27.133]      // while "1"  (timeout="50000")
[09:19:27.133]      // while-condition  =>  TRUE
[09:19:27.134]      // while "1"  (timeout="50000")
[09:19:27.134]      // while-condition  =>  TRUE
[09:19:27.134]      // while "1"  (timeout="50000")
[09:19:27.134]      // while-condition  =>  TRUE
[09:19:27.134]      // while "1"  (timeout="50000")
[09:19:27.135]      // while-condition  =>  TRUE
[09:19:27.135]      // while "1"  (timeout="50000")
[09:19:27.135]      // while-condition  =>  TRUE
[09:19:27.135]      // while "1"  (timeout="50000")
[09:19:27.135]      // while-condition  =>  TRUE
[09:19:27.136]      // while "1"  (timeout="50000")
[09:19:27.136]      // while-condition  =>  TRUE
[09:19:27.136]      // while "1"  (timeout="50000")
[09:19:27.136]      // while-condition  =>  TRUE
[09:19:27.136]      // while "1"  (timeout="50000")
[09:19:27.136]      // while-condition  =>  TRUE
[09:19:27.136]      // while "1"  (timeout="50000")
[09:19:27.136]      // while-condition  =>  TRUE
[09:19:27.136]      // while "1"  (timeout="50000")
[09:19:27.136]      // while-condition  =>  TRUE
[09:19:27.136]      // while "1"  (timeout="50000")
[09:19:27.137]      // while-condition  =>  TRUE
[09:19:27.137]      // while "1"  (timeout="50000")
[09:19:27.137]      // while-condition  =>  TRUE
[09:19:27.137]      // while "1"  (timeout="50000")
[09:19:27.137]      // while-condition  =>  TRUE
[09:19:27.138]      // while "1"  (timeout="50000")
[09:19:27.138]      // while-condition  =>  TRUE
[09:19:27.138]      // while "1"  (timeout="50000")
[09:19:27.138]      // while-condition  =>  TRUE
[09:19:27.138]      // while "1"  (timeout="50000")
[09:19:27.140]      // while-condition  =>  TRUE
[09:19:27.140]      // while "1"  (timeout="50000")
[09:19:27.140]      // while-condition  =>  TRUE
[09:19:27.140]      // while "1"  (timeout="50000")
[09:19:27.140]      // while-condition  =>  TRUE
[09:19:27.140]      // while "1"  (timeout="50000")
[09:19:27.140]      // while-condition  =>  TRUE
[09:19:27.140]      // while "1"  (timeout="50000")
[09:19:27.140]      // while-condition  =>  TRUE
[09:19:27.140]      // while "1"  (timeout="50000")
[09:19:27.142]      // while-condition  =>  TRUE
[09:19:27.142]      // while "1"  (timeout="50000")
[09:19:27.142]      // while-condition  =>  TRUE
[09:19:27.142]      // while "1"  (timeout="50000")
[09:19:27.142]      // while-condition  =>  TRUE
[09:19:27.143]      // while "1"  (timeout="50000")
[09:19:27.143]      // while-condition  =>  TRUE
[09:19:27.143]      // while "1"  (timeout="50000")
[09:19:27.143]      // while-condition  =>  TRUE
[09:19:27.143]      // while "1"  (timeout="50000")
[09:19:27.143]      // while-condition  =>  TRUE
[09:19:27.143]      // while "1"  (timeout="50000")
[09:19:27.143]      // while-condition  =>  TRUE
[09:19:27.143]      // while "1"  (timeout="50000")
[09:19:27.144]      // while-condition  =>  TRUE
[09:19:27.144]      // while "1"  (timeout="50000")
[09:19:27.144]      // while-condition  =>  TRUE
[09:19:27.144]      // while "1"  (timeout="50000")
[09:19:27.145]      // while-condition  =>  TRUE
[09:19:27.145]      // while "1"  (timeout="50000")
[09:19:27.145]      // while-condition  =>  TRUE
[09:19:27.145]      // while "1"  (timeout="50000")
[09:19:27.146]      // while-condition  =>  TRUE
[09:19:27.146]      // while "1"  (timeout="50000")
[09:19:27.146]      // while-condition  =>  TRUE
[09:19:27.146]      // while "1"  (timeout="50000")
[09:19:27.146]      // while-condition  =>  TRUE
[09:19:27.147]      // while "1"  (timeout="50000")
[09:19:27.147]      // while-condition  =>  TRUE
[09:19:27.147]      // while "1"  (timeout="50000")
[09:19:27.148]      // while-condition  =>  TRUE
[09:19:27.148]      // while "1"  (timeout="50000")
[09:19:27.148]      // while-condition  =>  TRUE
[09:19:27.148]      // while "1"  (timeout="50000")
[09:19:27.148]      // while-condition  =>  TRUE
[09:19:27.148]      // while "1"  (timeout="50000")
[09:19:27.148]      // while-condition  =>  TRUE
[09:19:27.150]      // while "1"  (timeout="50000")
[09:19:27.150]      // while-condition  =>  TRUE
[09:19:27.150]      // while "1"  (timeout="50000")
[09:19:27.150]      // while-condition  =>  TRUE
[09:19:27.150]      // while "1"  (timeout="50000")
[09:19:27.150]      // while-condition  =>  TRUE
[09:19:27.150]      // while "1"  (timeout="50000")
[09:19:27.150]      // while-condition  =>  TRUE
[09:19:27.150]      // while "1"  (timeout="50000")
[09:19:27.152]      // while-condition  =>  TRUE
[09:19:27.152]      // while "1"  (timeout="50000")
[09:19:27.152]      // while-condition  =>  TRUE
[09:19:27.152]      // while "1"  (timeout="50000")
[09:19:27.152]      // while-condition  =>  TRUE
[09:19:27.152]      // while "1"  (timeout="50000")
[09:19:27.152]      // while-condition  =>  TRUE
[09:19:27.152]      // while "1"  (timeout="50000")
[09:19:27.153]      // while-condition  =>  TRUE
[09:19:27.153]      // while "1"  (timeout="50000")
[09:19:27.153]      // while-condition  =>  TRUE
[09:19:27.153]      // while "1"  (timeout="50000")
[09:19:27.153]      // while-condition  =>  TRUE
[09:19:27.154]      // while "1"  (timeout="50000")
[09:19:27.155]      // while-condition  =>  TRUE
[09:19:27.155]      // while "1"  (timeout="50000")
[09:19:27.155]      // while-condition  =>  TRUE
[09:19:27.155]      // while "1"  (timeout="50000")
[09:19:27.155]      // while-condition  =>  TRUE
[09:19:27.156]      // while "1"  (timeout="50000")
[09:19:27.156]      // while-condition  =>  TRUE
[09:19:27.156]      // while "1"  (timeout="50000")
[09:19:27.156]      // while-condition  =>  TRUE
[09:19:27.156]      // while "1"  (timeout="50000")
[09:19:27.157]      // while-condition  =>  TRUE
[09:19:27.157]      // while "1"  (timeout="50000")
[09:19:27.157]      // while-condition  =>  TRUE
[09:19:27.157]      // while "1"  (timeout="50000")
[09:19:27.157]      // while-condition  =>  TRUE
[09:19:27.158]      // while "1"  (timeout="50000")
[09:19:27.158]      // while-condition  =>  TRUE
[09:19:27.158]      // while "1"  (timeout="50000")
[09:19:27.158]      // while-condition  =>  TRUE
[09:19:27.158]      // while "1"  (timeout="50000")
[09:19:27.158]      // while-condition  =>  TRUE
[09:19:27.158]      // while "1"  (timeout="50000")
[09:19:27.158]      // while-condition  =>  TRUE
[09:19:27.158]      // while "1"  (timeout="50000")
[09:19:27.159]      // while-condition  =>  TRUE
[09:19:27.159]      // while "1"  (timeout="50000")
[09:19:27.159]      // while-condition  =>  TRUE
[09:19:27.159]      // while "1"  (timeout="50000")
[09:19:27.159]      // while-condition  =>  TRUE
[09:19:27.159]      // while "1"  (timeout="50000")
[09:19:27.160]      // while-condition  =>  TRUE
[09:19:27.160]      // while "1"  (timeout="50000")
[09:19:27.160]      // while-condition  =>  TRUE
[09:19:27.161]      // while "1"  (timeout="50000")
[09:19:27.161]      // while-condition  =>  TRUE
[09:19:27.161]      // while "1"  (timeout="50000")
[09:19:27.161]      // while-condition  =>  TRUE
[09:19:27.161]      // while "1"  (timeout="50000")
[09:19:27.162]      // while-condition  =>  TRUE
[09:19:27.163]      // while "1"  (timeout="50000")
[09:19:27.163]      // while-condition  =>  TRUE
[09:19:27.163]      // while "1"  (timeout="50000")
[09:19:27.163]      // while-condition  =>  TRUE
[09:19:27.164]      // while "1"  (timeout="50000")
[09:19:27.164]      // while-condition  =>  TRUE
[09:19:27.164]      // while "1"  (timeout="50000")
[09:19:27.164]      // while-condition  =>  TRUE
[09:19:27.165]      // while "1"  (timeout="50000")
[09:19:27.165]      // while-condition  =>  TRUE
[09:19:27.165]      // while "1"  (timeout="50000")
[09:19:27.166]      // while-condition  =>  TRUE
[09:19:27.166]      // while "1"  (timeout="50000")
[09:19:27.166]      // while-condition  =>  TRUE
[09:19:27.166]      // while "1"  (timeout="50000")
[09:19:27.167]      // while-condition  =>  TRUE
[09:19:27.167]      // while "1"  (timeout="50000")
[09:19:27.167]      // while-condition  =>  TRUE
[09:19:27.168]      // while "1"  (timeout="50000")
[09:19:27.168]      // while-condition  =>  TRUE
[09:19:27.168]      // while "1"  (timeout="50000")
[09:19:27.168]      // while-condition  =>  TRUE
[09:19:27.168]      // while "1"  (timeout="50000")
[09:19:27.169]      // while-condition  =>  TRUE
[09:19:27.169]      // while "1"  (timeout="50000")
[09:19:27.169]      // while-condition  =>  TRUE
[09:19:27.169]      // while "1"  (timeout="50000")
[09:19:27.170]      // while-condition  =>  TRUE
[09:19:27.171]      // while "1"  (timeout="50000")
[09:19:27.172]      // while-condition  =>  TRUE
[09:19:27.172]      // while "1"  (timeout="50000")
[09:19:27.172]      // while  =>  TIMEOUT
[09:19:27.173]      // end while "1"
[09:19:27.173]    </control>
[09:19:27.173]    <block atomic="false" info="">
[09:19:27.174]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:19:27.176]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:19:27.177]    </block>
[09:19:27.177]    <control if="" while="1" timeout="10000" info="">
[09:19:27.177]      // while "1"  (timeout="10000")
[09:19:27.177]      // while-condition  =>  TRUE
[09:19:27.178]      // while "1"  (timeout="10000")
[09:19:27.178]      // while-condition  =>  TRUE
[09:19:27.178]      // while "1"  (timeout="10000")
[09:19:27.179]      // while-condition  =>  TRUE
[09:19:27.179]      // while "1"  (timeout="10000")
[09:19:27.180]      // while-condition  =>  TRUE
[09:19:27.180]      // while "1"  (timeout="10000")
[09:19:27.181]      // while-condition  =>  TRUE
[09:19:27.181]      // while "1"  (timeout="10000")
[09:19:27.181]      // while-condition  =>  TRUE
[09:19:27.182]      // while "1"  (timeout="10000")
[09:19:27.182]      // while-condition  =>  TRUE
[09:19:27.183]      // while "1"  (timeout="10000")
[09:19:27.183]      // while-condition  =>  TRUE
[09:19:27.183]      // while "1"  (timeout="10000")
[09:19:27.183]      // while-condition  =>  TRUE
[09:19:27.184]      // while "1"  (timeout="10000")
[09:19:27.184]      // while-condition  =>  TRUE
[09:19:27.184]      // while "1"  (timeout="10000")
[09:19:27.185]      // while-condition  =>  TRUE
[09:19:27.185]      // while "1"  (timeout="10000")
[09:19:27.185]      // while-condition  =>  TRUE
[09:19:27.185]      // while "1"  (timeout="10000")
[09:19:27.186]      // while-condition  =>  TRUE
[09:19:27.186]      // while "1"  (timeout="10000")
[09:19:27.186]      // while-condition  =>  TRUE
[09:19:27.186]      // while "1"  (timeout="10000")
[09:19:27.187]      // while-condition  =>  TRUE
[09:19:27.187]      // while "1"  (timeout="10000")
[09:19:27.187]      // while-condition  =>  TRUE
[09:19:27.188]      // while "1"  (timeout="10000")
[09:19:27.188]      // while  =>  TIMEOUT
[09:19:27.188]      // end while "1"
[09:19:27.189]    </control>
[09:19:27.189]    <block atomic="true" info="">
[09:19:27.194]  
[09:19:27.194]  ! W001 : No atomic sequence support in debug unit
[09:19:27.194]  
[09:19:27.196]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:19:27.206]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:19:27.207]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:19:27.209]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:19:27.210]    </block>
[09:19:27.210]    <block atomic="false" info="">
[09:19:27.210]      __errorcontrol = 0x00000001;
[09:19:27.211]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:19:27.211]      ReadDP(0x0);
[09:19:27.213]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:19:27.214]      __errorcontrol = 0x00000000;
[09:19:27.214]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:19:27.214]    </block>
[09:19:27.215]  </sequence>
[09:19:27.215]  
[09:19:27.219]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[09:19:27.219]  
[09:19:27.220]  <debugvars>
[09:19:27.220]    // Pre-defined
[09:19:27.220]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:19:27.221]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:19:27.221]    __dp=0x00000000
[09:19:27.221]    __ap=0x00000000
[09:19:27.222]    __traceout=0x00000000      (Trace Disabled)
[09:19:27.222]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:19:27.222]    __FlashAddr=0x00000000
[09:19:27.222]    __FlashLen=0x00000000
[09:19:27.223]    __FlashArg=0x00000000
[09:19:27.223]    __FlashOp=0x00000000
[09:19:27.223]    __Result=0x00000000
[09:19:27.224]  </debugvars>
[09:19:27.224]  
[09:19:27.224]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[09:19:27.224]    <block atomic="false" info="">
[09:19:27.225]    </block>
[09:19:27.225]  </sequence>
[09:19:27.225]  
[09:19:27.441]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[09:19:27.441]  
[09:19:27.441]  <debugvars>
[09:19:27.442]    // Pre-defined
[09:19:27.442]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:19:27.442]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:19:27.443]    __dp=0x00000000
[09:19:27.443]    __ap=0x00000000
[09:19:27.443]    __traceout=0x00000000      (Trace Disabled)
[09:19:27.444]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:19:27.444]    __FlashAddr=0x00000000
[09:19:27.444]    __FlashLen=0x00000000
[09:19:27.444]    __FlashArg=0x00000000
[09:19:27.445]    __FlashOp=0x00000000
[09:19:27.445]    __Result=0x00000000
[09:19:27.446]  </debugvars>
[09:19:27.446]  
[09:19:27.446]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[09:19:27.446]    <block atomic="false" info="">
[09:19:27.447]      Sequence("ResetHardware");
[09:19:27.447]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:19:27.447]          <block atomic="false" info="">
[09:19:27.447]            __var nReset      = 0x80;
[09:19:27.447]              // -> [nReset <= 0x00000080]
[09:19:27.448]            DAP_SWJ_Pins(0x00, nReset, 0);
[09:19:27.450]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:19:27.450]          </block>
[09:19:27.450]          <control if="" while="1" timeout="50000" info="">
[09:19:27.450]            // while "1"  (timeout="50000")
[09:19:27.451]            // while-condition  =>  TRUE
[09:19:27.451]            // while "1"  (timeout="50000")
[09:19:27.451]            // while-condition  =>  TRUE
[09:19:27.451]            // while "1"  (timeout="50000")
[09:19:27.451]            // while-condition  =>  TRUE
[09:19:27.452]            // while "1"  (timeout="50000")
[09:19:27.452]            // while-condition  =>  TRUE
[09:19:27.452]            // while "1"  (timeout="50000")
[09:19:27.452]            // while-condition  =>  TRUE
[09:19:27.452]            // while "1"  (timeout="50000")
[09:19:27.453]            // while-condition  =>  TRUE
[09:19:27.453]            // while "1"  (timeout="50000")
[09:19:27.453]            // while-condition  =>  TRUE
[09:19:27.453]            // while "1"  (timeout="50000")
[09:19:27.453]            // while-condition  =>  TRUE
[09:19:27.454]            // while "1"  (timeout="50000")
[09:19:27.454]            // while-condition  =>  TRUE
[09:19:27.454]            // while "1"  (timeout="50000")
[09:19:27.454]            // while-condition  =>  TRUE
[09:19:27.454]            // while "1"  (timeout="50000")
[09:19:27.455]            // while-condition  =>  TRUE
[09:19:27.455]            // while "1"  (timeout="50000")
[09:19:27.455]            // while-condition  =>  TRUE
[09:19:27.455]            // while "1"  (timeout="50000")
[09:19:27.455]            // while-condition  =>  TRUE
[09:19:27.456]            // while "1"  (timeout="50000")
[09:19:27.456]            // while-condition  =>  TRUE
[09:19:27.456]            // while "1"  (timeout="50000")
[09:19:27.456]            // while-condition  =>  TRUE
[09:19:27.457]            // while "1"  (timeout="50000")
[09:19:27.457]            // while-condition  =>  TRUE
[09:19:27.457]            // while "1"  (timeout="50000")
[09:19:27.457]            // while-condition  =>  TRUE
[09:19:27.458]            // while "1"  (timeout="50000")
[09:19:27.458]            // while-condition  =>  TRUE
[09:19:27.458]            // while "1"  (timeout="50000")
[09:19:27.458]            // while-condition  =>  TRUE
[09:19:27.459]            // while "1"  (timeout="50000")
[09:19:27.459]            // while-condition  =>  TRUE
[09:19:27.459]            // while "1"  (timeout="50000")
[09:19:27.459]            // while-condition  =>  TRUE
[09:19:27.459]            // while "1"  (timeout="50000")
[09:19:27.460]            // while-condition  =>  TRUE
[09:19:27.460]            // while "1"  (timeout="50000")
[09:19:27.460]            // while-condition  =>  TRUE
[09:19:27.460]            // while "1"  (timeout="50000")
[09:19:27.461]            // while-condition  =>  TRUE
[09:19:27.461]            // while "1"  (timeout="50000")
[09:19:27.461]            // while-condition  =>  TRUE
[09:19:27.461]            // while "1"  (timeout="50000")
[09:19:27.461]            // while-condition  =>  TRUE
[09:19:27.462]            // while "1"  (timeout="50000")
[09:19:27.462]            // while-condition  =>  TRUE
[09:19:27.462]            // while "1"  (timeout="50000")
[09:19:27.462]            // while-condition  =>  TRUE
[09:19:27.463]            // while "1"  (timeout="50000")
[09:19:27.463]            // while-condition  =>  TRUE
[09:19:27.463]            // while "1"  (timeout="50000")
[09:19:27.463]            // while-condition  =>  TRUE
[09:19:27.463]            // while "1"  (timeout="50000")
[09:19:27.464]            // while-condition  =>  TRUE
[09:19:27.464]            // while "1"  (timeout="50000")
[09:19:27.464]            // while-condition  =>  TRUE
[09:19:27.464]            // while "1"  (timeout="50000")
[09:19:27.465]            // while-condition  =>  TRUE
[09:19:27.465]            // while "1"  (timeout="50000")
[09:19:27.465]            // while-condition  =>  TRUE
[09:19:27.465]            // while "1"  (timeout="50000")
[09:19:27.465]            // while-condition  =>  TRUE
[09:19:27.466]            // while "1"  (timeout="50000")
[09:19:27.466]            // while-condition  =>  TRUE
[09:19:27.466]            // while "1"  (timeout="50000")
[09:19:27.466]            // while-condition  =>  TRUE
[09:19:27.467]            // while "1"  (timeout="50000")
[09:19:27.467]            // while-condition  =>  TRUE
[09:19:27.467]            // while "1"  (timeout="50000")
[09:19:27.467]            // while-condition  =>  TRUE
[09:19:27.467]            // while "1"  (timeout="50000")
[09:19:27.468]            // while-condition  =>  TRUE
[09:19:27.468]            // while "1"  (timeout="50000")
[09:19:27.468]            // while-condition  =>  TRUE
[09:19:27.468]            // while "1"  (timeout="50000")
[09:19:27.469]            // while-condition  =>  TRUE
[09:19:27.469]            // while "1"  (timeout="50000")
[09:19:27.469]            // while-condition  =>  TRUE
[09:19:27.469]            // while "1"  (timeout="50000")
[09:19:27.469]            // while-condition  =>  TRUE
[09:19:27.470]            // while "1"  (timeout="50000")
[09:19:27.470]            // while-condition  =>  TRUE
[09:19:27.470]            // while "1"  (timeout="50000")
[09:19:27.470]            // while-condition  =>  TRUE
[09:19:27.471]            // while "1"  (timeout="50000")
[09:19:27.471]            // while-condition  =>  TRUE
[09:19:27.471]            // while "1"  (timeout="50000")
[09:19:27.471]            // while-condition  =>  TRUE
[09:19:27.471]            // while "1"  (timeout="50000")
[09:19:27.472]            // while-condition  =>  TRUE
[09:19:27.472]            // while "1"  (timeout="50000")
[09:19:27.472]            // while-condition  =>  TRUE
[09:19:27.472]            // while "1"  (timeout="50000")
[09:19:27.473]            // while-condition  =>  TRUE
[09:19:27.473]            // while "1"  (timeout="50000")
[09:19:27.473]            // while-condition  =>  TRUE
[09:19:27.473]            // while "1"  (timeout="50000")
[09:19:27.474]            // while-condition  =>  TRUE
[09:19:27.474]            // while "1"  (timeout="50000")
[09:19:27.474]            // while-condition  =>  TRUE
[09:19:27.474]            // while "1"  (timeout="50000")
[09:19:27.475]            // while-condition  =>  TRUE
[09:19:27.475]            // while "1"  (timeout="50000")
[09:19:27.475]            // while-condition  =>  TRUE
[09:19:27.475]            // while "1"  (timeout="50000")
[09:19:27.475]            // while-condition  =>  TRUE
[09:19:27.476]            // while "1"  (timeout="50000")
[09:19:27.476]            // while-condition  =>  TRUE
[09:19:27.476]            // while "1"  (timeout="50000")
[09:19:27.476]            // while-condition  =>  TRUE
[09:19:27.476]            // while "1"  (timeout="50000")
[09:19:27.477]            // while-condition  =>  TRUE
[09:19:27.477]            // while "1"  (timeout="50000")
[09:19:27.477]            // while-condition  =>  TRUE
[09:19:27.477]            // while "1"  (timeout="50000")
[09:19:27.478]            // while-condition  =>  TRUE
[09:19:27.478]            // while "1"  (timeout="50000")
[09:19:27.478]            // while-condition  =>  TRUE
[09:19:27.478]            // while "1"  (timeout="50000")
[09:19:27.478]            // while-condition  =>  TRUE
[09:19:27.479]            // while "1"  (timeout="50000")
[09:19:27.479]            // while-condition  =>  TRUE
[09:19:27.479]            // while "1"  (timeout="50000")
[09:19:27.479]            // while-condition  =>  TRUE
[09:19:27.480]            // while "1"  (timeout="50000")
[09:19:27.480]            // while-condition  =>  TRUE
[09:19:27.480]            // while "1"  (timeout="50000")
[09:19:27.480]            // while-condition  =>  TRUE
[09:19:27.480]            // while "1"  (timeout="50000")
[09:19:27.481]            // while-condition  =>  TRUE
[09:19:27.481]            // while "1"  (timeout="50000")
[09:19:27.481]            // while-condition  =>  TRUE
[09:19:27.481]            // while "1"  (timeout="50000")
[09:19:27.482]            // while-condition  =>  TRUE
[09:19:27.482]            // while "1"  (timeout="50000")
[09:19:27.482]            // while-condition  =>  TRUE
[09:19:27.482]            // while "1"  (timeout="50000")
[09:19:27.483]            // while-condition  =>  TRUE
[09:19:27.483]            // while "1"  (timeout="50000")
[09:19:27.483]            // while-condition  =>  TRUE
[09:19:27.483]            // while "1"  (timeout="50000")
[09:19:27.483]            // while-condition  =>  TRUE
[09:19:27.484]            // while "1"  (timeout="50000")
[09:19:27.484]            // while-condition  =>  TRUE
[09:19:27.484]            // while "1"  (timeout="50000")
[09:19:27.484]            // while-condition  =>  TRUE
[09:19:27.484]            // while "1"  (timeout="50000")
[09:19:27.485]            // while-condition  =>  TRUE
[09:19:27.485]            // while "1"  (timeout="50000")
[09:19:27.485]            // while-condition  =>  TRUE
[09:19:27.485]            // while "1"  (timeout="50000")
[09:19:27.486]            // while-condition  =>  TRUE
[09:19:27.486]            // while "1"  (timeout="50000")
[09:19:27.486]            // while-condition  =>  TRUE
[09:19:27.486]            // while "1"  (timeout="50000")
[09:19:27.487]            // while-condition  =>  TRUE
[09:19:27.487]            // while "1"  (timeout="50000")
[09:19:27.487]            // while-condition  =>  TRUE
[09:19:27.487]            // while "1"  (timeout="50000")
[09:19:27.487]            // while-condition  =>  TRUE
[09:19:27.488]            // while "1"  (timeout="50000")
[09:19:27.488]            // while-condition  =>  TRUE
[09:19:27.488]            // while "1"  (timeout="50000")
[09:19:27.488]            // while-condition  =>  TRUE
[09:19:27.489]            // while "1"  (timeout="50000")
[09:19:27.489]            // while-condition  =>  TRUE
[09:19:27.489]            // while "1"  (timeout="50000")
[09:19:27.489]            // while-condition  =>  TRUE
[09:19:27.490]            // while "1"  (timeout="50000")
[09:19:27.490]            // while-condition  =>  TRUE
[09:19:27.490]            // while "1"  (timeout="50000")
[09:19:27.490]            // while-condition  =>  TRUE
[09:19:27.491]            // while "1"  (timeout="50000")
[09:19:27.491]            // while-condition  =>  TRUE
[09:19:27.491]            // while "1"  (timeout="50000")
[09:19:27.491]            // while-condition  =>  TRUE
[09:19:27.492]            // while "1"  (timeout="50000")
[09:19:27.492]            // while-condition  =>  TRUE
[09:19:27.492]            // while "1"  (timeout="50000")
[09:19:27.492]            // while-condition  =>  TRUE
[09:19:27.493]            // while "1"  (timeout="50000")
[09:19:27.493]            // while-condition  =>  TRUE
[09:19:27.493]            // while "1"  (timeout="50000")
[09:19:27.493]            // while-condition  =>  TRUE
[09:19:27.494]            // while "1"  (timeout="50000")
[09:19:27.494]            // while-condition  =>  TRUE
[09:19:27.494]            // while "1"  (timeout="50000")
[09:19:27.494]            // while-condition  =>  TRUE
[09:19:27.495]            // while "1"  (timeout="50000")
[09:19:27.495]            // while-condition  =>  TRUE
[09:19:27.495]            // while "1"  (timeout="50000")
[09:19:27.495]            // while-condition  =>  TRUE
[09:19:27.496]            // while "1"  (timeout="50000")
[09:19:27.496]            // while-condition  =>  TRUE
[09:19:27.496]            // while "1"  (timeout="50000")
[09:19:27.497]            // while-condition  =>  TRUE
[09:19:27.497]            // while "1"  (timeout="50000")
[09:19:27.497]            // while-condition  =>  TRUE
[09:19:27.498]            // while "1"  (timeout="50000")
[09:19:27.498]            // while-condition  =>  TRUE
[09:19:27.499]            // while "1"  (timeout="50000")
[09:19:27.500]            // while-condition  =>  TRUE
[09:19:27.500]            // while "1"  (timeout="50000")
[09:19:27.501]            // while-condition  =>  TRUE
[09:19:27.501]            // while "1"  (timeout="50000")
[09:19:27.501]            // while  =>  TIMEOUT
[09:19:27.502]            // end while "1"
[09:19:27.502]          </control>
[09:19:27.502]          <block atomic="false" info="">
[09:19:27.502]            DAP_SWJ_Pins(nReset, nReset, 0);
[09:19:27.503]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:19:27.503]          </block>
[09:19:27.503]          <control if="" while="1" timeout="10000" info="">
[09:19:27.504]            // while "1"  (timeout="10000")
[09:19:27.504]            // while-condition  =>  TRUE
[09:19:27.504]            // while "1"  (timeout="10000")
[09:19:27.504]            // while-condition  =>  TRUE
[09:19:27.505]            // while "1"  (timeout="10000")
[09:19:27.505]            // while-condition  =>  TRUE
[09:19:27.505]            // while "1"  (timeout="10000")
[09:19:27.505]            // while-condition  =>  TRUE
[09:19:27.506]            // while "1"  (timeout="10000")
[09:19:27.506]            // while-condition  =>  TRUE
[09:19:27.506]            // while "1"  (timeout="10000")
[09:19:27.506]            // while-condition  =>  TRUE
[09:19:27.507]            // while "1"  (timeout="10000")
[09:19:27.507]            // while-condition  =>  TRUE
[09:19:27.507]            // while "1"  (timeout="10000")
[09:19:27.507]            // while-condition  =>  TRUE
[09:19:27.507]            // while "1"  (timeout="10000")
[09:19:27.508]            // while-condition  =>  TRUE
[09:19:27.508]            // while "1"  (timeout="10000")
[09:19:27.508]            // while-condition  =>  TRUE
[09:19:27.508]            // while "1"  (timeout="10000")
[09:19:27.509]            // while-condition  =>  TRUE
[09:19:27.509]            // while "1"  (timeout="10000")
[09:19:27.509]            // while-condition  =>  TRUE
[09:19:27.509]            // while "1"  (timeout="10000")
[09:19:27.510]            // while-condition  =>  TRUE
[09:19:27.510]            // while "1"  (timeout="10000")
[09:19:27.510]            // while-condition  =>  TRUE
[09:19:27.510]            // while "1"  (timeout="10000")
[09:19:27.510]            // while-condition  =>  TRUE
[09:19:27.511]            // while "1"  (timeout="10000")
[09:19:27.511]            // while-condition  =>  TRUE
[09:19:27.511]            // while "1"  (timeout="10000")
[09:19:27.511]            // while-condition  =>  TRUE
[09:19:27.512]            // while "1"  (timeout="10000")
[09:19:27.512]            // while-condition  =>  TRUE
[09:19:27.512]            // while "1"  (timeout="10000")
[09:19:27.513]            // while-condition  =>  TRUE
[09:19:27.513]            // while "1"  (timeout="10000")
[09:19:27.513]            // while-condition  =>  TRUE
[09:19:27.513]            // while "1"  (timeout="10000")
[09:19:27.514]            // while-condition  =>  TRUE
[09:19:27.514]            // while "1"  (timeout="10000")
[09:19:27.514]            // while-condition  =>  TRUE
[09:19:27.515]            // while "1"  (timeout="10000")
[09:19:27.515]            // while-condition  =>  TRUE
[09:19:27.515]            // while "1"  (timeout="10000")
[09:19:27.515]            // while-condition  =>  TRUE
[09:19:27.516]            // while "1"  (timeout="10000")
[09:19:27.516]            // while  =>  TIMEOUT
[09:19:27.516]            // end while "1"
[09:19:27.517]          </control>
[09:19:27.517]          <block atomic="true" info="">
[09:19:27.521]  
[09:19:27.521]  ! W001 : No atomic sequence support in debug unit
[09:19:27.521]  
[09:19:27.523]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:19:27.526]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:19:27.526]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:19:27.529]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:19:27.529]          </block>
[09:19:27.530]          <block atomic="false" info="">
[09:19:27.530]            __errorcontrol = 0x00000001;
[09:19:27.531]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:19:27.531]            ReadDP(0x0);
[09:19:27.533]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:19:27.533]            __errorcontrol = 0x00000000;
[09:19:27.534]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:19:27.534]          </block>
[09:19:27.534]        </sequence>
[09:19:27.534]      Sequence("DebugPortSetup");
[09:19:27.535]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:19:27.535]        </sequence>
[09:19:27.535]      Sequence("DebugPortStart");
[09:19:27.535]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:19:27.536]          <block atomic="false" info="">
[09:19:27.536]            __var SW_DP_ABORT  = 0x0;
[09:19:27.536]              // -> [SW_DP_ABORT <= 0x00000000]
[09:19:27.536]            __var DP_CTRL_STAT = 0x4;
[09:19:27.537]              // -> [DP_CTRL_STAT <= 0x00000004]
[09:19:27.537]            __var DP_SELECT    = 0x8;
[09:19:27.537]              // -> [DP_SELECT <= 0x00000008]
[09:19:27.537]            __var powered_down = 0;
[09:19:27.538]              // -> [powered_down <= 0x00000000]
[09:19:27.538]            WriteDP(DP_SELECT, 0x00000000);
[09:19:27.540]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:19:27.540]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:19:27.542]              // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:19:27.542]              // -> [powered_down <= 0x00000000]
[09:19:27.543]          </block>
[09:19:27.543]          <control if="powered_down" while="" timeout="0" info="">
[09:19:27.543]            // if-block "powered_down"
[09:19:27.543]              // =>  FALSE
[09:19:27.544]            // skip if-block "powered_down"
[09:19:27.544]          </control>
[09:19:27.544]        </sequence>
[09:19:27.544]      Sequence("DebugCoreStart");
[09:19:27.545]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:19:27.545]          <block atomic="true" info="">
[09:19:27.548]  
[09:19:27.548]  ! W001 : No atomic sequence support in debug unit
[09:19:27.548]  
[09:19:27.550]            __var DP_R_IDCODE    = 0x0;
[09:19:27.551]              // -> [DP_R_IDCODE <= 0x00000000]
[09:19:27.551]            __var DP_W_ABORT    = 0x0;
[09:19:27.551]              // -> [DP_W_ABORT <= 0x00000000]
[09:19:27.551]            __var DP_CTRLSTAT = 0x4;
[09:19:27.552]              // -> [DP_CTRLSTAT <= 0x00000004]
[09:19:27.552]            __var DP_W_SELECT    = 0x8;
[09:19:27.552]              // -> [DP_W_SELECT <= 0x00000008]
[09:19:27.552]            __var AP_TAR		= 0x4;
[09:19:27.553]              // -> [AP_TAR <= 0x00000004]
[09:19:27.553]            __var AP_BD0		= 0x0;
[09:19:27.553]              // -> [AP_BD0 <= 0x00000000]
[09:19:27.554]            __var AP_BD1		= 0x4;
[09:19:27.554]              // -> [AP_BD1 <= 0x00000004]
[09:19:27.554]            __var AP_BD2		= 0x8;
[09:19:27.555]              // -> [AP_BD2 <= 0x00000008]
[09:19:27.555]            __var PCWithinFlash = 0;
[09:19:27.555]              // -> [PCWithinFlash <= 0x00000000]
[09:19:27.555]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:19:27.561]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.571]          </block>
[09:19:27.572]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:19:27.572]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:19:27.579]              // -> [Read32(0xE000EDF0) => 0x00030003]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.579]            // while-condition  =>  FALSE
[09:19:27.579]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:19:27.579]          </control>
[09:19:27.580]          <block atomic="true" info="">
[09:19:27.584]  
[09:19:27.584]  ! W001 : No atomic sequence support in debug unit
[09:19:27.584]  
[09:19:27.586]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:19:27.598]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:19:27.598]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:19:27.601]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.601]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:19:27.604]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:19:27.604]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:19:27.609]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.609]          </block>
[09:19:27.610]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:19:27.610]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.613]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.613]            // while-condition  =>  TRUE
[09:19:27.614]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.616]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.617]            // while-condition  =>  TRUE
[09:19:27.617]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.619]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.619]            // while-condition  =>  TRUE
[09:19:27.620]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.622]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.622]            // while-condition  =>  TRUE
[09:19:27.623]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.625]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.625]            // while-condition  =>  TRUE
[09:19:27.626]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.628]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.628]            // while-condition  =>  TRUE
[09:19:27.629]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.631]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.632]            // while-condition  =>  TRUE
[09:19:27.632]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.634]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.635]            // while-condition  =>  TRUE
[09:19:27.635]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.637]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.638]            // while-condition  =>  TRUE
[09:19:27.638]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.640]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.641]            // while-condition  =>  TRUE
[09:19:27.641]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.643]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.644]            // while-condition  =>  TRUE
[09:19:27.644]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.646]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.647]            // while-condition  =>  TRUE
[09:19:27.647]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.649]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.650]            // while-condition  =>  TRUE
[09:19:27.650]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.652]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.653]            // while-condition  =>  TRUE
[09:19:27.653]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.655]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.655]            // while-condition  =>  TRUE
[09:19:27.656]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.658]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.659]            // while-condition  =>  TRUE
[09:19:27.659]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.661]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.662]            // while-condition  =>  TRUE
[09:19:27.662]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.664]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.665]            // while-condition  =>  TRUE
[09:19:27.665]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.667]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.668]            // while-condition  =>  TRUE
[09:19:27.668]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.670]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.671]            // while-condition  =>  TRUE
[09:19:27.671]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.673]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.674]            // while-condition  =>  TRUE
[09:19:27.674]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.676]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.677]            // while-condition  =>  TRUE
[09:19:27.677]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.679]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.680]            // while-condition  =>  TRUE
[09:19:27.680]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.682]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.683]            // while-condition  =>  TRUE
[09:19:27.683]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.685]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.686]            // while-condition  =>  TRUE
[09:19:27.686]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.688]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.689]            // while-condition  =>  TRUE
[09:19:27.689]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.691]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.692]            // while-condition  =>  TRUE
[09:19:27.692]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.694]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.695]            // while-condition  =>  TRUE
[09:19:27.695]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.697]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.698]            // while-condition  =>  TRUE
[09:19:27.698]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.700]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.701]            // while-condition  =>  TRUE
[09:19:27.701]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.703]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.704]            // while-condition  =>  TRUE
[09:19:27.704]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.706]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.707]            // while-condition  =>  TRUE
[09:19:27.707]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.709]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.710]            // while-condition  =>  TRUE
[09:19:27.710]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.712]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.713]            // while-condition  =>  TRUE
[09:19:27.713]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.715]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.716]            // while-condition  =>  TRUE
[09:19:27.716]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.718]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.719]            // while-condition  =>  TRUE
[09:19:27.719]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:19:27.720]            // while  =>  TIMEOUT
[09:19:27.720]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:19:27.720]          </control>
[09:19:27.721]          <block atomic="false" info="">
[09:19:27.721]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:19:27.723]              // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:19:27.724]              // -> [PCWithinFlash <= 0x00000000]
[09:19:27.724]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:19:27.726]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:19:27.727]          </block>
[09:19:27.727]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:19:27.727]            // if-block "PCWithinFlash == 0"
[09:19:27.728]              // =>  TRUE
[09:19:27.728]            // end if-block "PCWithinFlash == 0"
[09:19:27.728]          </control>
[09:19:27.728]        </sequence>
[09:19:27.729]    </block>
[09:19:27.729]  </sequence>
[09:19:27.729]  
[09:19:38.698]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[09:19:38.698]  
[09:19:38.698]  <debugvars>
[09:19:38.700]    // Pre-defined
[09:19:38.700]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:19:38.701]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:19:38.701]    __dp=0x00000000
[09:19:38.702]    __ap=0x00000000
[09:19:38.703]    __traceout=0x00000000      (Trace Disabled)
[09:19:38.703]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:19:38.704]    __FlashAddr=0x00000000
[09:19:38.705]    __FlashLen=0x00000000
[09:19:38.705]    __FlashArg=0x00000000
[09:19:38.706]    __FlashOp=0x00000000
[09:19:38.706]    __Result=0x00000000
[09:19:38.707]  </debugvars>
[09:19:38.707]  
[09:19:38.708]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[09:19:38.708]    <block atomic="false" info="">
[09:19:38.708]      __var nReset      = 0x80;
[09:19:38.709]        // -> [nReset <= 0x00000080]
[09:19:38.710]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:19:38.712]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:19:38.712]    </block>
[09:19:38.713]    <control if="" while="1" timeout="50000" info="">
[09:19:38.713]      // while "1"  (timeout="50000")
[09:19:38.714]      // while-condition  =>  TRUE
[09:19:38.714]      // while "1"  (timeout="50000")
[09:19:38.715]      // while-condition  =>  TRUE
[09:19:38.715]      // while "1"  (timeout="50000")
[09:19:38.716]      // while-condition  =>  TRUE
[09:19:38.716]      // while "1"  (timeout="50000")
[09:19:38.716]      // while-condition  =>  TRUE
[09:19:38.717]      // while "1"  (timeout="50000")
[09:19:38.717]      // while-condition  =>  TRUE
[09:19:38.717]      // while "1"  (timeout="50000")
[09:19:38.717]      // while-condition  =>  TRUE
[09:19:38.717]      // while "1"  (timeout="50000")
[09:19:38.717]      // while-condition  =>  TRUE
[09:19:38.718]      // while "1"  (timeout="50000")
[09:19:38.718]      // while-condition  =>  TRUE
[09:19:38.718]      // while "1"  (timeout="50000")
[09:19:38.718]      // while-condition  =>  TRUE
[09:19:38.719]      // while "1"  (timeout="50000")
[09:19:38.720]      // while-condition  =>  TRUE
[09:19:38.720]      // while "1"  (timeout="50000")
[09:19:38.720]      // while-condition  =>  TRUE
[09:19:38.721]      // while "1"  (timeout="50000")
[09:19:38.721]      // while-condition  =>  TRUE
[09:19:38.721]      // while "1"  (timeout="50000")
[09:19:38.721]      // while-condition  =>  TRUE
[09:19:38.722]      // while "1"  (timeout="50000")
[09:19:38.722]      // while-condition  =>  TRUE
[09:19:38.722]      // while "1"  (timeout="50000")
[09:19:38.722]      // while-condition  =>  TRUE
[09:19:38.723]      // while "1"  (timeout="50000")
[09:19:38.723]      // while-condition  =>  TRUE
[09:19:38.723]      // while "1"  (timeout="50000")
[09:19:38.723]      // while-condition  =>  TRUE
[09:19:38.724]      // while "1"  (timeout="50000")
[09:19:38.724]      // while-condition  =>  TRUE
[09:19:38.724]      // while "1"  (timeout="50000")
[09:19:38.724]      // while-condition  =>  TRUE
[09:19:38.725]      // while "1"  (timeout="50000")
[09:19:38.725]      // while-condition  =>  TRUE
[09:19:38.725]      // while "1"  (timeout="50000")
[09:19:38.725]      // while-condition  =>  TRUE
[09:19:38.725]      // while "1"  (timeout="50000")
[09:19:38.726]      // while-condition  =>  TRUE
[09:19:38.726]      // while "1"  (timeout="50000")
[09:19:38.726]      // while-condition  =>  TRUE
[09:19:38.726]      // while "1"  (timeout="50000")
[09:19:38.726]      // while-condition  =>  TRUE
[09:19:38.727]      // while "1"  (timeout="50000")
[09:19:38.727]      // while-condition  =>  TRUE
[09:19:38.727]      // while "1"  (timeout="50000")
[09:19:38.727]      // while-condition  =>  TRUE
[09:19:38.727]      // while "1"  (timeout="50000")
[09:19:38.727]      // while-condition  =>  TRUE
[09:19:38.727]      // while "1"  (timeout="50000")
[09:19:38.728]      // while-condition  =>  TRUE
[09:19:38.728]      // while "1"  (timeout="50000")
[09:19:38.728]      // while-condition  =>  TRUE
[09:19:38.728]      // while "1"  (timeout="50000")
[09:19:38.728]      // while-condition  =>  TRUE
[09:19:38.729]      // while "1"  (timeout="50000")
[09:19:38.729]      // while-condition  =>  TRUE
[09:19:38.729]      // while "1"  (timeout="50000")
[09:19:38.729]      // while-condition  =>  TRUE
[09:19:38.729]      // while "1"  (timeout="50000")
[09:19:38.730]      // while-condition  =>  TRUE
[09:19:38.730]      // while "1"  (timeout="50000")
[09:19:38.730]      // while-condition  =>  TRUE
[09:19:38.730]      // while "1"  (timeout="50000")
[09:19:38.730]      // while-condition  =>  TRUE
[09:19:38.731]      // while "1"  (timeout="50000")
[09:19:38.731]      // while-condition  =>  TRUE
[09:19:38.732]      // while "1"  (timeout="50000")
[09:19:38.732]      // while-condition  =>  TRUE
[09:19:38.732]      // while "1"  (timeout="50000")
[09:19:38.732]      // while-condition  =>  TRUE
[09:19:38.732]      // while "1"  (timeout="50000")
[09:19:38.733]      // while-condition  =>  TRUE
[09:19:38.733]      // while "1"  (timeout="50000")
[09:19:38.733]      // while-condition  =>  TRUE
[09:19:38.733]      // while "1"  (timeout="50000")
[09:19:38.734]      // while-condition  =>  TRUE
[09:19:38.734]      // while "1"  (timeout="50000")
[09:19:38.734]      // while-condition  =>  TRUE
[09:19:38.734]      // while "1"  (timeout="50000")
[09:19:38.734]      // while-condition  =>  TRUE
[09:19:38.735]      // while "1"  (timeout="50000")
[09:19:38.735]      // while-condition  =>  TRUE
[09:19:38.735]      // while "1"  (timeout="50000")
[09:19:38.735]      // while-condition  =>  TRUE
[09:19:38.735]      // while "1"  (timeout="50000")
[09:19:38.736]      // while-condition  =>  TRUE
[09:19:38.736]      // while "1"  (timeout="50000")
[09:19:38.736]      // while-condition  =>  TRUE
[09:19:38.736]      // while "1"  (timeout="50000")
[09:19:38.736]      // while-condition  =>  TRUE
[09:19:38.737]      // while "1"  (timeout="50000")
[09:19:38.737]      // while-condition  =>  TRUE
[09:19:38.737]      // while "1"  (timeout="50000")
[09:19:38.737]      // while-condition  =>  TRUE
[09:19:38.737]      // while "1"  (timeout="50000")
[09:19:38.738]      // while-condition  =>  TRUE
[09:19:38.738]      // while "1"  (timeout="50000")
[09:19:38.738]      // while-condition  =>  TRUE
[09:19:38.738]      // while "1"  (timeout="50000")
[09:19:38.738]      // while-condition  =>  TRUE
[09:19:38.738]      // while "1"  (timeout="50000")
[09:19:38.739]      // while-condition  =>  TRUE
[09:19:38.739]      // while "1"  (timeout="50000")
[09:19:38.739]      // while-condition  =>  TRUE
[09:19:38.739]      // while "1"  (timeout="50000")
[09:19:38.739]      // while-condition  =>  TRUE
[09:19:38.739]      // while "1"  (timeout="50000")
[09:19:38.739]      // while-condition  =>  TRUE
[09:19:38.739]      // while "1"  (timeout="50000")
[09:19:38.740]      // while-condition  =>  TRUE
[09:19:38.740]      // while "1"  (timeout="50000")
[09:19:38.741]      // while-condition  =>  TRUE
[09:19:38.741]      // while "1"  (timeout="50000")
[09:19:38.741]      // while-condition  =>  TRUE
[09:19:38.741]      // while "1"  (timeout="50000")
[09:19:38.741]      // while-condition  =>  TRUE
[09:19:38.741]      // while "1"  (timeout="50000")
[09:19:38.742]      // while-condition  =>  TRUE
[09:19:38.742]      // while "1"  (timeout="50000")
[09:19:38.742]      // while-condition  =>  TRUE
[09:19:38.742]      // while "1"  (timeout="50000")
[09:19:38.742]      // while-condition  =>  TRUE
[09:19:38.742]      // while "1"  (timeout="50000")
[09:19:38.742]      // while-condition  =>  TRUE
[09:19:38.742]      // while "1"  (timeout="50000")
[09:19:38.742]      // while-condition  =>  TRUE
[09:19:38.743]      // while "1"  (timeout="50000")
[09:19:38.743]      // while-condition  =>  TRUE
[09:19:38.743]      // while "1"  (timeout="50000")
[09:19:38.743]      // while-condition  =>  TRUE
[09:19:38.743]      // while "1"  (timeout="50000")
[09:19:38.744]      // while-condition  =>  TRUE
[09:19:38.744]      // while "1"  (timeout="50000")
[09:19:38.744]      // while-condition  =>  TRUE
[09:19:38.744]      // while "1"  (timeout="50000")
[09:19:38.744]      // while-condition  =>  TRUE
[09:19:38.745]      // while "1"  (timeout="50000")
[09:19:38.745]      // while-condition  =>  TRUE
[09:19:38.746]      // while "1"  (timeout="50000")
[09:19:38.746]      // while-condition  =>  TRUE
[09:19:38.746]      // while "1"  (timeout="50000")
[09:19:38.746]      // while-condition  =>  TRUE
[09:19:38.746]      // while "1"  (timeout="50000")
[09:19:38.747]      // while-condition  =>  TRUE
[09:19:38.747]      // while "1"  (timeout="50000")
[09:19:38.747]      // while-condition  =>  TRUE
[09:19:38.747]      // while "1"  (timeout="50000")
[09:19:38.747]      // while-condition  =>  TRUE
[09:19:38.748]      // while "1"  (timeout="50000")
[09:19:38.748]      // while-condition  =>  TRUE
[09:19:38.748]      // while "1"  (timeout="50000")
[09:19:38.748]      // while-condition  =>  TRUE
[09:19:38.748]      // while "1"  (timeout="50000")
[09:19:38.749]      // while-condition  =>  TRUE
[09:19:38.749]      // while "1"  (timeout="50000")
[09:19:38.749]      // while-condition  =>  TRUE
[09:19:38.749]      // while "1"  (timeout="50000")
[09:19:38.749]      // while-condition  =>  TRUE
[09:19:38.749]      // while "1"  (timeout="50000")
[09:19:38.749]      // while-condition  =>  TRUE
[09:19:38.749]      // while "1"  (timeout="50000")
[09:19:38.750]      // while-condition  =>  TRUE
[09:19:38.750]      // while "1"  (timeout="50000")
[09:19:38.750]      // while-condition  =>  TRUE
[09:19:38.750]      // while "1"  (timeout="50000")
[09:19:38.750]      // while-condition  =>  TRUE
[09:19:38.751]      // while "1"  (timeout="50000")
[09:19:38.751]      // while-condition  =>  TRUE
[09:19:38.751]      // while "1"  (timeout="50000")
[09:19:38.752]      // while-condition  =>  TRUE
[09:19:38.752]      // while "1"  (timeout="50000")
[09:19:38.752]      // while-condition  =>  TRUE
[09:19:38.752]      // while "1"  (timeout="50000")
[09:19:38.752]      // while-condition  =>  TRUE
[09:19:38.753]      // while "1"  (timeout="50000")
[09:19:38.753]      // while-condition  =>  TRUE
[09:19:38.753]      // while "1"  (timeout="50000")
[09:19:38.753]      // while-condition  =>  TRUE
[09:19:38.754]      // while "1"  (timeout="50000")
[09:19:38.754]      // while-condition  =>  TRUE
[09:19:38.754]      // while "1"  (timeout="50000")
[09:19:38.754]      // while-condition  =>  TRUE
[09:19:38.754]      // while "1"  (timeout="50000")
[09:19:38.755]      // while-condition  =>  TRUE
[09:19:38.755]      // while "1"  (timeout="50000")
[09:19:38.755]      // while-condition  =>  TRUE
[09:19:38.755]      // while "1"  (timeout="50000")
[09:19:38.755]      // while-condition  =>  TRUE
[09:19:38.756]      // while "1"  (timeout="50000")
[09:19:38.756]      // while-condition  =>  TRUE
[09:19:38.756]      // while "1"  (timeout="50000")
[09:19:38.756]      // while-condition  =>  TRUE
[09:19:38.756]      // while "1"  (timeout="50000")
[09:19:38.756]      // while-condition  =>  TRUE
[09:19:38.757]      // while "1"  (timeout="50000")
[09:19:38.757]      // while-condition  =>  TRUE
[09:19:38.757]      // while "1"  (timeout="50000")
[09:19:38.757]      // while-condition  =>  TRUE
[09:19:38.757]      // while "1"  (timeout="50000")
[09:19:38.757]      // while-condition  =>  TRUE
[09:19:38.757]      // while "1"  (timeout="50000")
[09:19:38.757]      // while-condition  =>  TRUE
[09:19:38.758]      // while "1"  (timeout="50000")
[09:19:38.758]      // while-condition  =>  TRUE
[09:19:38.758]      // while "1"  (timeout="50000")
[09:19:38.758]      // while-condition  =>  TRUE
[09:19:38.758]      // while "1"  (timeout="50000")
[09:19:38.759]      // while-condition  =>  TRUE
[09:19:38.760]      // while "1"  (timeout="50000")
[09:19:38.760]      // while-condition  =>  TRUE
[09:19:38.760]      // while "1"  (timeout="50000")
[09:19:38.760]      // while-condition  =>  TRUE
[09:19:38.760]      // while "1"  (timeout="50000")
[09:19:38.760]      // while-condition  =>  TRUE
[09:19:38.760]      // while "1"  (timeout="50000")
[09:19:38.760]      // while-condition  =>  TRUE
[09:19:38.761]      // while "1"  (timeout="50000")
[09:19:38.761]      // while-condition  =>  TRUE
[09:19:38.761]      // while "1"  (timeout="50000")
[09:19:38.762]      // while-condition  =>  TRUE
[09:19:38.762]      // while "1"  (timeout="50000")
[09:19:38.762]      // while-condition  =>  TRUE
[09:19:38.762]      // while "1"  (timeout="50000")
[09:19:38.762]      // while-condition  =>  TRUE
[09:19:38.764]      // while "1"  (timeout="50000")
[09:19:38.764]      // while-condition  =>  TRUE
[09:19:38.764]      // while "1"  (timeout="50000")
[09:19:38.764]      // while-condition  =>  TRUE
[09:19:38.764]      // while "1"  (timeout="50000")
[09:19:38.765]      // while-condition  =>  TRUE
[09:19:38.765]      // while "1"  (timeout="50000")
[09:19:38.765]      // while-condition  =>  TRUE
[09:19:38.765]      // while "1"  (timeout="50000")
[09:19:38.765]      // while-condition  =>  TRUE
[09:19:38.765]      // while "1"  (timeout="50000")
[09:19:38.766]      // while-condition  =>  TRUE
[09:19:38.766]      // while "1"  (timeout="50000")
[09:19:38.766]      // while  =>  TIMEOUT
[09:19:38.766]      // end while "1"
[09:19:38.766]    </control>
[09:19:38.767]    <block atomic="false" info="">
[09:19:38.767]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:19:38.769]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:19:38.769]    </block>
[09:19:38.769]  </sequence>
[09:19:38.769]  
[09:22:18.285]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:22:18.285]  
[09:22:18.286]  <debugvars>
[09:22:18.286]    // Pre-defined
[09:22:18.287]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:22:18.287]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:22:18.287]    __dp=0x00000000
[09:22:18.288]    __ap=0x00000000
[09:22:18.289]    __traceout=0x00000000      (Trace Disabled)
[09:22:18.289]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:22:18.289]    __FlashAddr=0x00000000
[09:22:18.290]    __FlashLen=0x00000000
[09:22:18.291]    __FlashArg=0x00000000
[09:22:18.291]    __FlashOp=0x00000000
[09:22:18.291]    __Result=0x00000000
[09:22:18.291]  </debugvars>
[09:22:18.291]  
[09:22:18.291]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:22:18.292]    <block atomic="false" info="">
[09:22:18.292]      __var nReset      = 0x80;
[09:22:18.292]        // -> [nReset <= 0x00000080]
[09:22:18.292]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:22:18.295]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:22:18.296]    </block>
[09:22:18.296]    <control if="" while="1" timeout="50000" info="">
[09:22:18.296]      // while "1"  (timeout="50000")
[09:22:18.296]      // while-condition  =>  TRUE
[09:22:18.296]      // while "1"  (timeout="50000")
[09:22:18.296]      // while-condition  =>  TRUE
[09:22:18.298]      // while "1"  (timeout="50000")
[09:22:18.298]      // while-condition  =>  TRUE
[09:22:18.298]      // while "1"  (timeout="50000")
[09:22:18.298]      // while-condition  =>  TRUE
[09:22:18.299]      // while "1"  (timeout="50000")
[09:22:18.299]      // while-condition  =>  TRUE
[09:22:18.299]      // while "1"  (timeout="50000")
[09:22:18.299]      // while-condition  =>  TRUE
[09:22:18.299]      // while "1"  (timeout="50000")
[09:22:18.299]      // while-condition  =>  TRUE
[09:22:18.299]      // while "1"  (timeout="50000")
[09:22:18.300]      // while-condition  =>  TRUE
[09:22:18.300]      // while "1"  (timeout="50000")
[09:22:18.300]      // while-condition  =>  TRUE
[09:22:18.300]      // while "1"  (timeout="50000")
[09:22:18.300]      // while-condition  =>  TRUE
[09:22:18.301]      // while "1"  (timeout="50000")
[09:22:18.301]      // while-condition  =>  TRUE
[09:22:18.301]      // while "1"  (timeout="50000")
[09:22:18.301]      // while-condition  =>  TRUE
[09:22:18.302]      // while "1"  (timeout="50000")
[09:22:18.303]      // while-condition  =>  TRUE
[09:22:18.303]      // while "1"  (timeout="50000")
[09:22:18.303]      // while-condition  =>  TRUE
[09:22:18.303]      // while "1"  (timeout="50000")
[09:22:18.303]      // while-condition  =>  TRUE
[09:22:18.303]      // while "1"  (timeout="50000")
[09:22:18.304]      // while-condition  =>  TRUE
[09:22:18.304]      // while "1"  (timeout="50000")
[09:22:18.304]      // while-condition  =>  TRUE
[09:22:18.304]      // while "1"  (timeout="50000")
[09:22:18.305]      // while-condition  =>  TRUE
[09:22:18.305]      // while "1"  (timeout="50000")
[09:22:18.305]      // while-condition  =>  TRUE
[09:22:18.305]      // while "1"  (timeout="50000")
[09:22:18.305]      // while-condition  =>  TRUE
[09:22:18.306]      // while "1"  (timeout="50000")
[09:22:18.306]      // while-condition  =>  TRUE
[09:22:18.306]      // while "1"  (timeout="50000")
[09:22:18.306]      // while-condition  =>  TRUE
[09:22:18.306]      // while "1"  (timeout="50000")
[09:22:18.306]      // while-condition  =>  TRUE
[09:22:18.306]      // while "1"  (timeout="50000")
[09:22:18.308]      // while-condition  =>  TRUE
[09:22:18.308]      // while "1"  (timeout="50000")
[09:22:18.308]      // while-condition  =>  TRUE
[09:22:18.308]      // while "1"  (timeout="50000")
[09:22:18.309]      // while-condition  =>  TRUE
[09:22:18.309]      // while "1"  (timeout="50000")
[09:22:18.309]      // while-condition  =>  TRUE
[09:22:18.309]      // while "1"  (timeout="50000")
[09:22:18.309]      // while-condition  =>  TRUE
[09:22:18.309]      // while "1"  (timeout="50000")
[09:22:18.309]      // while-condition  =>  TRUE
[09:22:18.309]      // while "1"  (timeout="50000")
[09:22:18.309]      // while-condition  =>  TRUE
[09:22:18.310]      // while "1"  (timeout="50000")
[09:22:18.310]      // while-condition  =>  TRUE
[09:22:18.311]      // while "1"  (timeout="50000")
[09:22:18.311]      // while-condition  =>  TRUE
[09:22:18.311]      // while "1"  (timeout="50000")
[09:22:18.311]      // while-condition  =>  TRUE
[09:22:18.311]      // while "1"  (timeout="50000")
[09:22:18.312]      // while-condition  =>  TRUE
[09:22:18.312]      // while "1"  (timeout="50000")
[09:22:18.312]      // while-condition  =>  TRUE
[09:22:18.312]      // while "1"  (timeout="50000")
[09:22:18.312]      // while-condition  =>  TRUE
[09:22:18.313]      // while "1"  (timeout="50000")
[09:22:18.313]      // while-condition  =>  TRUE
[09:22:18.313]      // while "1"  (timeout="50000")
[09:22:18.313]      // while-condition  =>  TRUE
[09:22:18.313]      // while "1"  (timeout="50000")
[09:22:18.313]      // while-condition  =>  TRUE
[09:22:18.314]      // while "1"  (timeout="50000")
[09:22:18.314]      // while-condition  =>  TRUE
[09:22:18.314]      // while "1"  (timeout="50000")
[09:22:18.314]      // while-condition  =>  TRUE
[09:22:18.314]      // while "1"  (timeout="50000")
[09:22:18.315]      // while-condition  =>  TRUE
[09:22:18.315]      // while "1"  (timeout="50000")
[09:22:18.315]      // while-condition  =>  TRUE
[09:22:18.315]      // while "1"  (timeout="50000")
[09:22:18.315]      // while-condition  =>  TRUE
[09:22:18.315]      // while "1"  (timeout="50000")
[09:22:18.315]      // while-condition  =>  TRUE
[09:22:18.316]      // while "1"  (timeout="50000")
[09:22:18.316]      // while-condition  =>  TRUE
[09:22:18.316]      // while "1"  (timeout="50000")
[09:22:18.316]      // while-condition  =>  TRUE
[09:22:18.316]      // while "1"  (timeout="50000")
[09:22:18.317]      // while-condition  =>  TRUE
[09:22:18.317]      // while "1"  (timeout="50000")
[09:22:18.317]      // while-condition  =>  TRUE
[09:22:18.317]      // while "1"  (timeout="50000")
[09:22:18.317]      // while-condition  =>  TRUE
[09:22:18.318]      // while "1"  (timeout="50000")
[09:22:18.318]      // while-condition  =>  TRUE
[09:22:18.318]      // while "1"  (timeout="50000")
[09:22:18.318]      // while-condition  =>  TRUE
[09:22:18.318]      // while "1"  (timeout="50000")
[09:22:18.319]      // while-condition  =>  TRUE
[09:22:18.319]      // while "1"  (timeout="50000")
[09:22:18.319]      // while-condition  =>  TRUE
[09:22:18.319]      // while "1"  (timeout="50000")
[09:22:18.319]      // while-condition  =>  TRUE
[09:22:18.319]      // while "1"  (timeout="50000")
[09:22:18.319]      // while-condition  =>  TRUE
[09:22:18.319]      // while "1"  (timeout="50000")
[09:22:18.320]      // while-condition  =>  TRUE
[09:22:18.320]      // while "1"  (timeout="50000")
[09:22:18.321]      // while-condition  =>  TRUE
[09:22:18.321]      // while "1"  (timeout="50000")
[09:22:18.321]      // while-condition  =>  TRUE
[09:22:18.321]      // while "1"  (timeout="50000")
[09:22:18.321]      // while-condition  =>  TRUE
[09:22:18.322]      // while "1"  (timeout="50000")
[09:22:18.322]      // while-condition  =>  TRUE
[09:22:18.322]      // while "1"  (timeout="50000")
[09:22:18.322]      // while-condition  =>  TRUE
[09:22:18.322]      // while "1"  (timeout="50000")
[09:22:18.323]      // while-condition  =>  TRUE
[09:22:18.323]      // while "1"  (timeout="50000")
[09:22:18.323]      // while-condition  =>  TRUE
[09:22:18.323]      // while "1"  (timeout="50000")
[09:22:18.323]      // while-condition  =>  TRUE
[09:22:18.324]      // while "1"  (timeout="50000")
[09:22:18.324]      // while-condition  =>  TRUE
[09:22:18.324]      // while "1"  (timeout="50000")
[09:22:18.324]      // while-condition  =>  TRUE
[09:22:18.324]      // while "1"  (timeout="50000")
[09:22:18.324]      // while-condition  =>  TRUE
[09:22:18.325]      // while "1"  (timeout="50000")
[09:22:18.325]      // while-condition  =>  TRUE
[09:22:18.325]      // while "1"  (timeout="50000")
[09:22:18.325]      // while-condition  =>  TRUE
[09:22:18.325]      // while "1"  (timeout="50000")
[09:22:18.326]      // while-condition  =>  TRUE
[09:22:18.326]      // while "1"  (timeout="50000")
[09:22:18.326]      // while-condition  =>  TRUE
[09:22:18.326]      // while "1"  (timeout="50000")
[09:22:18.326]      // while-condition  =>  TRUE
[09:22:18.326]      // while "1"  (timeout="50000")
[09:22:18.327]      // while-condition  =>  TRUE
[09:22:18.327]      // while "1"  (timeout="50000")
[09:22:18.327]      // while-condition  =>  TRUE
[09:22:18.327]      // while "1"  (timeout="50000")
[09:22:18.327]      // while-condition  =>  TRUE
[09:22:18.328]      // while "1"  (timeout="50000")
[09:22:18.328]      // while-condition  =>  TRUE
[09:22:18.328]      // while "1"  (timeout="50000")
[09:22:18.328]      // while-condition  =>  TRUE
[09:22:18.328]      // while "1"  (timeout="50000")
[09:22:18.328]      // while-condition  =>  TRUE
[09:22:18.329]      // while "1"  (timeout="50000")
[09:22:18.329]      // while-condition  =>  TRUE
[09:22:18.329]      // while "1"  (timeout="50000")
[09:22:18.329]      // while-condition  =>  TRUE
[09:22:18.329]      // while "1"  (timeout="50000")
[09:22:18.329]      // while-condition  =>  TRUE
[09:22:18.329]      // while "1"  (timeout="50000")
[09:22:18.330]      // while-condition  =>  TRUE
[09:22:18.331]      // while "1"  (timeout="50000")
[09:22:18.331]      // while-condition  =>  TRUE
[09:22:18.331]      // while "1"  (timeout="50000")
[09:22:18.331]      // while-condition  =>  TRUE
[09:22:18.331]      // while "1"  (timeout="50000")
[09:22:18.331]      // while-condition  =>  TRUE
[09:22:18.331]      // while "1"  (timeout="50000")
[09:22:18.331]      // while-condition  =>  TRUE
[09:22:18.331]      // while "1"  (timeout="50000")
[09:22:18.332]      // while-condition  =>  TRUE
[09:22:18.332]      // while "1"  (timeout="50000")
[09:22:18.332]      // while-condition  =>  TRUE
[09:22:18.332]      // while "1"  (timeout="50000")
[09:22:18.332]      // while-condition  =>  TRUE
[09:22:18.333]      // while "1"  (timeout="50000")
[09:22:18.333]      // while-condition  =>  TRUE
[09:22:18.333]      // while "1"  (timeout="50000")
[09:22:18.333]      // while-condition  =>  TRUE
[09:22:18.334]      // while "1"  (timeout="50000")
[09:22:18.334]      // while-condition  =>  TRUE
[09:22:18.334]      // while "1"  (timeout="50000")
[09:22:18.334]      // while-condition  =>  TRUE
[09:22:18.334]      // while "1"  (timeout="50000")
[09:22:18.335]      // while-condition  =>  TRUE
[09:22:18.335]      // while "1"  (timeout="50000")
[09:22:18.335]      // while-condition  =>  TRUE
[09:22:18.335]      // while "1"  (timeout="50000")
[09:22:18.336]      // while-condition  =>  TRUE
[09:22:18.336]      // while "1"  (timeout="50000")
[09:22:18.336]      // while-condition  =>  TRUE
[09:22:18.336]      // while "1"  (timeout="50000")
[09:22:18.336]      // while-condition  =>  TRUE
[09:22:18.337]      // while "1"  (timeout="50000")
[09:22:18.337]      // while-condition  =>  TRUE
[09:22:18.337]      // while "1"  (timeout="50000")
[09:22:18.338]      // while-condition  =>  TRUE
[09:22:18.338]      // while "1"  (timeout="50000")
[09:22:18.338]      // while-condition  =>  TRUE
[09:22:18.339]      // while "1"  (timeout="50000")
[09:22:18.339]      // while-condition  =>  TRUE
[09:22:18.339]      // while "1"  (timeout="50000")
[09:22:18.340]      // while-condition  =>  TRUE
[09:22:18.340]      // while "1"  (timeout="50000")
[09:22:18.340]      // while-condition  =>  TRUE
[09:22:18.340]      // while "1"  (timeout="50000")
[09:22:18.340]      // while-condition  =>  TRUE
[09:22:18.341]      // while "1"  (timeout="50000")
[09:22:18.341]      // while-condition  =>  TRUE
[09:22:18.341]      // while "1"  (timeout="50000")
[09:22:18.341]      // while-condition  =>  TRUE
[09:22:18.342]      // while "1"  (timeout="50000")
[09:22:18.342]      // while-condition  =>  TRUE
[09:22:18.342]      // while "1"  (timeout="50000")
[09:22:18.342]      // while-condition  =>  TRUE
[09:22:18.343]      // while "1"  (timeout="50000")
[09:22:18.343]      // while-condition  =>  TRUE
[09:22:18.343]      // while "1"  (timeout="50000")
[09:22:18.343]      // while-condition  =>  TRUE
[09:22:18.343]      // while "1"  (timeout="50000")
[09:22:18.344]      // while-condition  =>  TRUE
[09:22:18.344]      // while "1"  (timeout="50000")
[09:22:18.344]      // while-condition  =>  TRUE
[09:22:18.344]      // while "1"  (timeout="50000")
[09:22:18.345]      // while-condition  =>  TRUE
[09:22:18.345]      // while "1"  (timeout="50000")
[09:22:18.345]      // while-condition  =>  TRUE
[09:22:18.345]      // while "1"  (timeout="50000")
[09:22:18.345]      // while-condition  =>  TRUE
[09:22:18.346]      // while "1"  (timeout="50000")
[09:22:18.346]      // while-condition  =>  TRUE
[09:22:18.346]      // while "1"  (timeout="50000")
[09:22:18.346]      // while-condition  =>  TRUE
[09:22:18.347]      // while "1"  (timeout="50000")
[09:22:18.347]      // while-condition  =>  TRUE
[09:22:18.347]      // while "1"  (timeout="50000")
[09:22:18.347]      // while-condition  =>  TRUE
[09:22:18.347]      // while "1"  (timeout="50000")
[09:22:18.348]      // while-condition  =>  TRUE
[09:22:18.348]      // while "1"  (timeout="50000")
[09:22:18.348]      // while-condition  =>  TRUE
[09:22:18.348]      // while "1"  (timeout="50000")
[09:22:18.348]      // while-condition  =>  TRUE
[09:22:18.349]      // while "1"  (timeout="50000")
[09:22:18.349]      // while-condition  =>  TRUE
[09:22:18.349]      // while "1"  (timeout="50000")
[09:22:18.349]      // while-condition  =>  TRUE
[09:22:18.349]      // while "1"  (timeout="50000")
[09:22:18.350]      // while-condition  =>  TRUE
[09:22:18.350]      // while "1"  (timeout="50000")
[09:22:18.350]      // while-condition  =>  TRUE
[09:22:18.350]      // while "1"  (timeout="50000")
[09:22:18.350]      // while-condition  =>  TRUE
[09:22:18.351]      // while "1"  (timeout="50000")
[09:22:18.352]      // while-condition  =>  TRUE
[09:22:18.352]      // while "1"  (timeout="50000")
[09:22:18.352]      // while-condition  =>  TRUE
[09:22:18.352]      // while "1"  (timeout="50000")
[09:22:18.352]      // while-condition  =>  TRUE
[09:22:18.353]      // while "1"  (timeout="50000")
[09:22:18.353]      // while-condition  =>  TRUE
[09:22:18.353]      // while "1"  (timeout="50000")
[09:22:18.353]      // while-condition  =>  TRUE
[09:22:18.354]      // while "1"  (timeout="50000")
[09:22:18.354]      // while-condition  =>  TRUE
[09:22:18.354]      // while "1"  (timeout="50000")
[09:22:18.354]      // while-condition  =>  TRUE
[09:22:18.354]      // while "1"  (timeout="50000")
[09:22:18.354]      // while-condition  =>  TRUE
[09:22:18.354]      // while "1"  (timeout="50000")
[09:22:18.355]      // while-condition  =>  TRUE
[09:22:18.355]      // while "1"  (timeout="50000")
[09:22:18.355]      // while-condition  =>  TRUE
[09:22:18.355]      // while "1"  (timeout="50000")
[09:22:18.356]      // while-condition  =>  TRUE
[09:22:18.356]      // while "1"  (timeout="50000")
[09:22:18.356]      // while-condition  =>  TRUE
[09:22:18.356]      // while "1"  (timeout="50000")
[09:22:18.356]      // while-condition  =>  TRUE
[09:22:18.356]      // while "1"  (timeout="50000")
[09:22:18.356]      // while-condition  =>  TRUE
[09:22:18.356]      // while "1"  (timeout="50000")
[09:22:18.356]      // while-condition  =>  TRUE
[09:22:18.357]      // while "1"  (timeout="50000")
[09:22:18.357]      // while-condition  =>  TRUE
[09:22:18.357]      // while "1"  (timeout="50000")
[09:22:18.357]      // while-condition  =>  TRUE
[09:22:18.357]      // while "1"  (timeout="50000")
[09:22:18.357]      // while-condition  =>  TRUE
[09:22:18.359]      // while "1"  (timeout="50000")
[09:22:18.359]      // while  =>  TIMEOUT
[09:22:18.359]      // end while "1"
[09:22:18.359]    </control>
[09:22:18.359]    <block atomic="false" info="">
[09:22:18.360]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:22:18.362]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:22:18.362]    </block>
[09:22:18.362]    <control if="" while="1" timeout="10000" info="">
[09:22:18.363]      // while "1"  (timeout="10000")
[09:22:18.363]      // while-condition  =>  TRUE
[09:22:18.363]      // while "1"  (timeout="10000")
[09:22:18.363]      // while-condition  =>  TRUE
[09:22:18.363]      // while "1"  (timeout="10000")
[09:22:18.363]      // while-condition  =>  TRUE
[09:22:18.363]      // while "1"  (timeout="10000")
[09:22:18.363]      // while-condition  =>  TRUE
[09:22:18.363]      // while "1"  (timeout="10000")
[09:22:18.364]      // while-condition  =>  TRUE
[09:22:18.365]      // while "1"  (timeout="10000")
[09:22:18.365]      // while-condition  =>  TRUE
[09:22:18.365]      // while "1"  (timeout="10000")
[09:22:18.366]      // while-condition  =>  TRUE
[09:22:18.366]      // while "1"  (timeout="10000")
[09:22:18.366]      // while-condition  =>  TRUE
[09:22:18.366]      // while "1"  (timeout="10000")
[09:22:18.366]      // while-condition  =>  TRUE
[09:22:18.366]      // while "1"  (timeout="10000")
[09:22:18.367]      // while-condition  =>  TRUE
[09:22:18.367]      // while "1"  (timeout="10000")
[09:22:18.367]      // while-condition  =>  TRUE
[09:22:18.368]      // while "1"  (timeout="10000")
[09:22:18.368]      // while-condition  =>  TRUE
[09:22:18.368]      // while "1"  (timeout="10000")
[09:22:18.368]      // while-condition  =>  TRUE
[09:22:18.370]      // while "1"  (timeout="10000")
[09:22:18.370]      // while-condition  =>  TRUE
[09:22:18.370]      // while "1"  (timeout="10000")
[09:22:18.370]      // while-condition  =>  TRUE
[09:22:18.370]      // while "1"  (timeout="10000")
[09:22:18.370]      // while-condition  =>  TRUE
[09:22:18.370]      // while "1"  (timeout="10000")
[09:22:18.371]      // while-condition  =>  TRUE
[09:22:18.372]      // while "1"  (timeout="10000")
[09:22:18.372]      // while-condition  =>  TRUE
[09:22:18.372]      // while "1"  (timeout="10000")
[09:22:18.372]      // while-condition  =>  TRUE
[09:22:18.372]      // while "1"  (timeout="10000")
[09:22:18.373]      // while-condition  =>  TRUE
[09:22:18.373]      // while "1"  (timeout="10000")
[09:22:18.373]      // while-condition  =>  TRUE
[09:22:18.373]      // while "1"  (timeout="10000")
[09:22:18.374]      // while-condition  =>  TRUE
[09:22:18.374]      // while "1"  (timeout="10000")
[09:22:18.374]      // while-condition  =>  TRUE
[09:22:18.374]      // while "1"  (timeout="10000")
[09:22:18.374]      // while  =>  TIMEOUT
[09:22:18.375]      // end while "1"
[09:22:18.375]    </control>
[09:22:18.375]    <block atomic="true" info="">
[09:22:18.377]  
[09:22:18.377]  ! W001 : No atomic sequence support in debug unit
[09:22:18.377]  
[09:22:18.379]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:22:18.382]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:22:18.382]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:22:18.385]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:22:18.386]    </block>
[09:22:18.386]    <block atomic="false" info="">
[09:22:18.386]      __errorcontrol = 0x00000001;
[09:22:18.387]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:22:18.387]      ReadDP(0x0);
[09:22:18.390]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:22:18.390]      __errorcontrol = 0x00000000;
[09:22:18.391]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:22:18.391]    </block>
[09:22:18.391]  </sequence>
[09:22:18.391]  
[09:22:18.392]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:22:18.392]  
[09:22:18.393]  <debugvars>
[09:22:18.393]    // Pre-defined
[09:22:18.393]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:22:18.393]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:22:18.393]    __dp=0x00000000
[09:22:18.393]    __ap=0x00000000
[09:22:18.393]    __traceout=0x00000000      (Trace Disabled)
[09:22:18.394]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:22:18.394]    __FlashAddr=0x00000000
[09:22:18.394]    __FlashLen=0x00000000
[09:22:18.394]    __FlashArg=0x00000000
[09:22:18.395]    __FlashOp=0x00000000
[09:22:18.395]    __Result=0x00000000
[09:22:18.396]  </debugvars>
[09:22:18.396]  
[09:22:18.396]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:22:18.396]  </sequence>
[09:22:18.396]  
[09:22:18.401]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[09:22:18.401]  
[09:22:18.401]  <debugvars>
[09:22:18.401]    // Pre-defined
[09:22:18.401]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:22:18.401]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:22:18.402]    __dp=0x00000000
[09:22:18.403]    __ap=0x00000000
[09:22:18.403]    __traceout=0x00000000      (Trace Disabled)
[09:22:18.403]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:22:18.404]    __FlashAddr=0x00000000
[09:22:18.404]    __FlashLen=0x00000000
[09:22:18.404]    __FlashArg=0x00000000
[09:22:18.404]    __FlashOp=0x00000000
[09:22:18.404]    __Result=0x00000000
[09:22:18.405]  </debugvars>
[09:22:18.405]  
[09:22:18.405]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:22:18.406]    <block atomic="false" info="">
[09:22:18.406]      __var SW_DP_ABORT  = 0x0;
[09:22:18.406]        // -> [SW_DP_ABORT <= 0x00000000]
[09:22:18.406]      __var DP_CTRL_STAT = 0x4;
[09:22:18.406]        // -> [DP_CTRL_STAT <= 0x00000004]
[09:22:18.406]      __var DP_SELECT    = 0x8;
[09:22:18.407]        // -> [DP_SELECT <= 0x00000008]
[09:22:18.407]      __var powered_down = 0;
[09:22:18.407]        // -> [powered_down <= 0x00000000]
[09:22:18.407]      WriteDP(DP_SELECT, 0x00000000);
[09:22:18.410]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:22:18.410]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:22:18.411]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[09:22:18.411]        // -> [powered_down <= 0x00000001]
[09:22:18.412]    </block>
[09:22:18.413]    <control if="powered_down" while="" timeout="0" info="">
[09:22:18.413]      // if-block "powered_down"
[09:22:18.413]        // =>  TRUE
[09:22:18.414]      <block atomic="false" info="">
[09:22:18.414]        WriteDP(DP_CTRL_STAT, 0x50000000);
[09:22:18.416]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[09:22:18.416]      </block>
[09:22:18.416]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[09:22:18.416]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[09:22:18.418]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:22:18.418]        // while-condition  =>  FALSE
[09:22:18.419]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[09:22:18.419]      </control>
[09:22:18.419]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[09:22:18.419]        // if-block "(__protocol & 0xFFFF) == 1"
[09:22:18.420]          // =>  FALSE
[09:22:18.420]        // skip if-block "(__protocol & 0xFFFF) == 1"
[09:22:18.420]      </control>
[09:22:18.420]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[09:22:18.421]        // if-block "(__protocol & 0xFFFF) == 2"
[09:22:18.421]          // =>  TRUE
[09:22:18.421]        <block atomic="false" info="">
[09:22:18.421]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[09:22:18.424]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[09:22:18.424]          WriteDP(SW_DP_ABORT, 0x0000001E);
[09:22:18.426]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[09:22:18.426]        </block>
[09:22:18.426]        // end if-block "(__protocol & 0xFFFF) == 2"
[09:22:18.426]      </control>
[09:22:18.427]      // end if-block "powered_down"
[09:22:18.427]    </control>
[09:22:18.427]  </sequence>
[09:22:18.428]  
[09:22:18.532]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:22:18.532]  
[09:22:18.532]  <debugvars>
[09:22:18.533]    // Pre-defined
[09:22:18.534]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:22:18.534]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:22:18.535]    __dp=0x00000000
[09:22:18.536]    __ap=0x00000000
[09:22:18.537]    __traceout=0x00000000      (Trace Disabled)
[09:22:18.537]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:22:18.538]    __FlashAddr=0x00000000
[09:22:18.539]    __FlashLen=0x00000000
[09:22:18.540]    __FlashArg=0x00000000
[09:22:18.540]    __FlashOp=0x00000000
[09:22:18.541]    __Result=0x00000000
[09:22:18.542]  </debugvars>
[09:22:18.542]  
[09:22:18.543]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:22:18.543]    <block atomic="true" info="">
[09:22:18.557]  
[09:22:18.557]  ! W001 : No atomic sequence support in debug unit
[09:22:18.557]  
[09:22:18.570]      __var DP_R_IDCODE    = 0x0;
[09:22:18.571]        // -> [DP_R_IDCODE <= 0x00000000]
[09:22:18.571]      __var DP_W_ABORT    = 0x0;
[09:22:18.571]        // -> [DP_W_ABORT <= 0x00000000]
[09:22:18.571]      __var DP_CTRLSTAT = 0x4;
[09:22:18.573]        // -> [DP_CTRLSTAT <= 0x00000004]
[09:22:18.573]      __var DP_W_SELECT    = 0x8;
[09:22:18.574]        // -> [DP_W_SELECT <= 0x00000008]
[09:22:18.574]      __var AP_TAR		= 0x4;
[09:22:18.575]        // -> [AP_TAR <= 0x00000004]
[09:22:18.575]      __var AP_BD0		= 0x0;
[09:22:18.576]        // -> [AP_BD0 <= 0x00000000]
[09:22:18.576]      __var AP_BD1		= 0x4;
[09:22:18.577]        // -> [AP_BD1 <= 0x00000004]
[09:22:18.577]      __var AP_BD2		= 0x8;
[09:22:18.578]        // -> [AP_BD2 <= 0x00000008]
[09:22:18.578]      __var PCWithinFlash = 0;
[09:22:18.579]        // -> [PCWithinFlash <= 0x00000000]
[09:22:18.579]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:22:18.586]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.586]    </block>
[09:22:18.597]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:22:18.597]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:22:18.604]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.605]      // while-condition  =>  FALSE
[09:22:18.605]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:22:18.606]    </control>
[09:22:18.606]    <block atomic="true" info="">
[09:22:18.611]  
[09:22:18.611]  ! W001 : No atomic sequence support in debug unit
[09:22:18.611]  
[09:22:18.614]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:22:18.616]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:22:18.616]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:22:18.619]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.620]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:22:18.622]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:22:18.622]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:22:18.627]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.630]    </block>
[09:22:18.631]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:22:18.632]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.634]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.635]      // while-condition  =>  TRUE
[09:22:18.635]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.638]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.638]      // while-condition  =>  TRUE
[09:22:18.639]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.642]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.643]      // while-condition  =>  TRUE
[09:22:18.643]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.646]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.646]      // while-condition  =>  TRUE
[09:22:18.646]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.650]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.651]      // while-condition  =>  TRUE
[09:22:18.651]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.653]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.654]      // while-condition  =>  TRUE
[09:22:18.655]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.657]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.657]      // while-condition  =>  TRUE
[09:22:18.658]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.660]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.660]      // while-condition  =>  TRUE
[09:22:18.660]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.662]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.662]      // while-condition  =>  TRUE
[09:22:18.663]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.666]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.667]      // while-condition  =>  TRUE
[09:22:18.667]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.669]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.670]      // while-condition  =>  TRUE
[09:22:18.671]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.673]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.673]      // while-condition  =>  TRUE
[09:22:18.673]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.676]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.676]      // while-condition  =>  TRUE
[09:22:18.676]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.679]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.679]      // while-condition  =>  TRUE
[09:22:18.680]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.682]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.683]      // while-condition  =>  TRUE
[09:22:18.683]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.686]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.686]      // while-condition  =>  TRUE
[09:22:18.687]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.689]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.690]      // while-condition  =>  TRUE
[09:22:18.690]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.693]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.694]      // while-condition  =>  TRUE
[09:22:18.694]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.696]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.696]      // while-condition  =>  TRUE
[09:22:18.696]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.699]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.699]      // while-condition  =>  TRUE
[09:22:18.700]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.702]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.702]      // while-condition  =>  TRUE
[09:22:18.703]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.705]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.705]      // while-condition  =>  TRUE
[09:22:18.706]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.708]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.708]      // while-condition  =>  TRUE
[09:22:18.709]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.711]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.711]      // while-condition  =>  TRUE
[09:22:18.711]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.714]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.714]      // while-condition  =>  TRUE
[09:22:18.715]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.717]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.717]      // while-condition  =>  TRUE
[09:22:18.718]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.720]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.720]      // while-condition  =>  TRUE
[09:22:18.721]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.723]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.723]      // while-condition  =>  TRUE
[09:22:18.723]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.726]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.726]      // while-condition  =>  TRUE
[09:22:18.726]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.728]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.728]      // while-condition  =>  TRUE
[09:22:18.729]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.732]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.732]      // while-condition  =>  TRUE
[09:22:18.732]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.735]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.735]      // while-condition  =>  TRUE
[09:22:18.735]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:18.736]      // while  =>  TIMEOUT
[09:22:18.736]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:22:18.736]    </control>
[09:22:18.736]    <block atomic="false" info="">
[09:22:18.737]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:22:18.739]        // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:22:18.739]        // -> [PCWithinFlash <= 0x00000000]
[09:22:18.739]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:22:18.742]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:22:18.742]    </block>
[09:22:18.743]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:22:18.743]      // if-block "PCWithinFlash == 0"
[09:22:18.743]        // =>  TRUE
[09:22:18.743]      // end if-block "PCWithinFlash == 0"
[09:22:18.744]    </control>
[09:22:18.744]  </sequence>
[09:22:18.745]  
[09:22:18.791]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[09:22:18.791]  
[09:22:18.793]  <debugvars>
[09:22:18.793]    // Pre-defined
[09:22:18.794]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:22:18.795]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:22:18.795]    __dp=0x00000000
[09:22:18.796]    __ap=0x00000000
[09:22:18.796]    __traceout=0x00000000      (Trace Disabled)
[09:22:18.797]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:22:18.798]    __FlashAddr=0x00000000
[09:22:18.798]    __FlashLen=0x00000000
[09:22:18.799]    __FlashArg=0x00000000
[09:22:18.800]    __FlashOp=0x00000000
[09:22:18.800]    __Result=0x00000000
[09:22:18.801]  </debugvars>
[09:22:18.802]  
[09:22:18.803]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[09:22:18.803]    <block atomic="false" info="">
[09:22:18.803]    </block>
[09:22:18.804]  </sequence>
[09:22:18.805]  
[09:22:18.808]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[09:22:18.808]  
[09:22:18.808]  <debugvars>
[09:22:18.809]    // Pre-defined
[09:22:18.810]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:22:18.811]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:22:18.811]    __dp=0x00000000
[09:22:18.812]    __ap=0x00000000
[09:22:18.812]    __traceout=0x00000000      (Trace Disabled)
[09:22:18.813]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:22:18.814]    __FlashAddr=0x00000000
[09:22:18.814]    __FlashLen=0x00000000
[09:22:18.815]    __FlashArg=0x00000000
[09:22:18.815]    __FlashOp=0x00000000
[09:22:18.815]    __Result=0x00000000
[09:22:18.816]  </debugvars>
[09:22:18.816]  
[09:22:18.816]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:22:18.817]    <block atomic="false" info="">
[09:22:18.819]      __var nReset      = 0x80;
[09:22:18.819]        // -> [nReset <= 0x00000080]
[09:22:18.819]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:22:18.822]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:22:18.822]    </block>
[09:22:18.823]    <control if="" while="1" timeout="50000" info="">
[09:22:18.823]      // while "1"  (timeout="50000")
[09:22:18.823]      // while-condition  =>  TRUE
[09:22:18.823]      // while "1"  (timeout="50000")
[09:22:18.824]      // while-condition  =>  TRUE
[09:22:18.824]      // while "1"  (timeout="50000")
[09:22:18.824]      // while-condition  =>  TRUE
[09:22:18.825]      // while "1"  (timeout="50000")
[09:22:18.825]      // while-condition  =>  TRUE
[09:22:18.825]      // while "1"  (timeout="50000")
[09:22:18.825]      // while-condition  =>  TRUE
[09:22:18.825]      // while "1"  (timeout="50000")
[09:22:18.826]      // while-condition  =>  TRUE
[09:22:18.826]      // while "1"  (timeout="50000")
[09:22:18.827]      // while-condition  =>  TRUE
[09:22:18.827]      // while "1"  (timeout="50000")
[09:22:18.827]      // while-condition  =>  TRUE
[09:22:18.827]      // while "1"  (timeout="50000")
[09:22:18.827]      // while-condition  =>  TRUE
[09:22:18.827]      // while "1"  (timeout="50000")
[09:22:18.827]      // while-condition  =>  TRUE
[09:22:18.827]      // while "1"  (timeout="50000")
[09:22:18.828]      // while-condition  =>  TRUE
[09:22:18.828]      // while "1"  (timeout="50000")
[09:22:18.828]      // while-condition  =>  TRUE
[09:22:18.828]      // while "1"  (timeout="50000")
[09:22:18.829]      // while-condition  =>  TRUE
[09:22:18.829]      // while "1"  (timeout="50000")
[09:22:18.829]      // while-condition  =>  TRUE
[09:22:18.829]      // while "1"  (timeout="50000")
[09:22:18.830]      // while-condition  =>  TRUE
[09:22:18.830]      // while "1"  (timeout="50000")
[09:22:18.830]      // while-condition  =>  TRUE
[09:22:18.830]      // while "1"  (timeout="50000")
[09:22:18.832]      // while-condition  =>  TRUE
[09:22:18.832]      // while "1"  (timeout="50000")
[09:22:18.832]      // while-condition  =>  TRUE
[09:22:18.833]      // while "1"  (timeout="50000")
[09:22:18.833]      // while-condition  =>  TRUE
[09:22:18.833]      // while "1"  (timeout="50000")
[09:22:18.834]      // while-condition  =>  TRUE
[09:22:18.834]      // while "1"  (timeout="50000")
[09:22:18.834]      // while-condition  =>  TRUE
[09:22:18.834]      // while "1"  (timeout="50000")
[09:22:18.835]      // while-condition  =>  TRUE
[09:22:18.835]      // while "1"  (timeout="50000")
[09:22:18.835]      // while-condition  =>  TRUE
[09:22:18.835]      // while "1"  (timeout="50000")
[09:22:18.836]      // while-condition  =>  TRUE
[09:22:18.836]      // while "1"  (timeout="50000")
[09:22:18.836]      // while-condition  =>  TRUE
[09:22:18.836]      // while "1"  (timeout="50000")
[09:22:18.837]      // while-condition  =>  TRUE
[09:22:18.837]      // while "1"  (timeout="50000")
[09:22:18.837]      // while-condition  =>  TRUE
[09:22:18.837]      // while "1"  (timeout="50000")
[09:22:18.837]      // while-condition  =>  TRUE
[09:22:18.838]      // while "1"  (timeout="50000")
[09:22:18.838]      // while-condition  =>  TRUE
[09:22:18.838]      // while "1"  (timeout="50000")
[09:22:18.838]      // while-condition  =>  TRUE
[09:22:18.839]      // while "1"  (timeout="50000")
[09:22:18.839]      // while-condition  =>  TRUE
[09:22:18.839]      // while "1"  (timeout="50000")
[09:22:18.839]      // while-condition  =>  TRUE
[09:22:18.839]      // while "1"  (timeout="50000")
[09:22:18.840]      // while-condition  =>  TRUE
[09:22:18.840]      // while "1"  (timeout="50000")
[09:22:18.840]      // while-condition  =>  TRUE
[09:22:18.840]      // while "1"  (timeout="50000")
[09:22:18.840]      // while-condition  =>  TRUE
[09:22:18.841]      // while "1"  (timeout="50000")
[09:22:18.841]      // while-condition  =>  TRUE
[09:22:18.841]      // while "1"  (timeout="50000")
[09:22:18.841]      // while-condition  =>  TRUE
[09:22:18.841]      // while "1"  (timeout="50000")
[09:22:18.842]      // while-condition  =>  TRUE
[09:22:18.842]      // while "1"  (timeout="50000")
[09:22:18.842]      // while-condition  =>  TRUE
[09:22:18.842]      // while "1"  (timeout="50000")
[09:22:18.842]      // while-condition  =>  TRUE
[09:22:18.843]      // while "1"  (timeout="50000")
[09:22:18.843]      // while-condition  =>  TRUE
[09:22:18.843]      // while "1"  (timeout="50000")
[09:22:18.843]      // while-condition  =>  TRUE
[09:22:18.843]      // while "1"  (timeout="50000")
[09:22:18.843]      // while-condition  =>  TRUE
[09:22:18.844]      // while "1"  (timeout="50000")
[09:22:18.844]      // while-condition  =>  TRUE
[09:22:18.844]      // while "1"  (timeout="50000")
[09:22:18.844]      // while-condition  =>  TRUE
[09:22:18.844]      // while "1"  (timeout="50000")
[09:22:18.845]      // while-condition  =>  TRUE
[09:22:18.845]      // while "1"  (timeout="50000")
[09:22:18.845]      // while-condition  =>  TRUE
[09:22:18.845]      // while "1"  (timeout="50000")
[09:22:18.845]      // while-condition  =>  TRUE
[09:22:18.846]      // while "1"  (timeout="50000")
[09:22:18.846]      // while-condition  =>  TRUE
[09:22:18.846]      // while "1"  (timeout="50000")
[09:22:18.846]      // while-condition  =>  TRUE
[09:22:18.846]      // while "1"  (timeout="50000")
[09:22:18.846]      // while-condition  =>  TRUE
[09:22:18.847]      // while "1"  (timeout="50000")
[09:22:18.847]      // while-condition  =>  TRUE
[09:22:18.847]      // while "1"  (timeout="50000")
[09:22:18.847]      // while-condition  =>  TRUE
[09:22:18.847]      // while "1"  (timeout="50000")
[09:22:18.848]      // while-condition  =>  TRUE
[09:22:18.848]      // while "1"  (timeout="50000")
[09:22:18.848]      // while-condition  =>  TRUE
[09:22:18.848]      // while "1"  (timeout="50000")
[09:22:18.848]      // while-condition  =>  TRUE
[09:22:18.849]      // while "1"  (timeout="50000")
[09:22:18.849]      // while-condition  =>  TRUE
[09:22:18.849]      // while "1"  (timeout="50000")
[09:22:18.849]      // while-condition  =>  TRUE
[09:22:18.849]      // while "1"  (timeout="50000")
[09:22:18.850]      // while-condition  =>  TRUE
[09:22:18.850]      // while "1"  (timeout="50000")
[09:22:18.850]      // while-condition  =>  TRUE
[09:22:18.850]      // while "1"  (timeout="50000")
[09:22:18.850]      // while-condition  =>  TRUE
[09:22:18.850]      // while "1"  (timeout="50000")
[09:22:18.850]      // while-condition  =>  TRUE
[09:22:18.850]      // while "1"  (timeout="50000")
[09:22:18.851]      // while-condition  =>  TRUE
[09:22:18.851]      // while "1"  (timeout="50000")
[09:22:18.851]      // while-condition  =>  TRUE
[09:22:18.851]      // while "1"  (timeout="50000")
[09:22:18.851]      // while-condition  =>  TRUE
[09:22:18.852]      // while "1"  (timeout="50000")
[09:22:18.852]      // while-condition  =>  TRUE
[09:22:18.852]      // while "1"  (timeout="50000")
[09:22:18.853]      // while-condition  =>  TRUE
[09:22:18.853]      // while "1"  (timeout="50000")
[09:22:18.853]      // while-condition  =>  TRUE
[09:22:18.853]      // while "1"  (timeout="50000")
[09:22:18.853]      // while-condition  =>  TRUE
[09:22:18.853]      // while "1"  (timeout="50000")
[09:22:18.854]      // while-condition  =>  TRUE
[09:22:18.854]      // while "1"  (timeout="50000")
[09:22:18.854]      // while-condition  =>  TRUE
[09:22:18.854]      // while "1"  (timeout="50000")
[09:22:18.854]      // while-condition  =>  TRUE
[09:22:18.855]      // while "1"  (timeout="50000")
[09:22:18.855]      // while-condition  =>  TRUE
[09:22:18.855]      // while "1"  (timeout="50000")
[09:22:18.855]      // while-condition  =>  TRUE
[09:22:18.855]      // while "1"  (timeout="50000")
[09:22:18.856]      // while-condition  =>  TRUE
[09:22:18.856]      // while "1"  (timeout="50000")
[09:22:18.856]      // while-condition  =>  TRUE
[09:22:18.856]      // while "1"  (timeout="50000")
[09:22:18.856]      // while-condition  =>  TRUE
[09:22:18.857]      // while "1"  (timeout="50000")
[09:22:18.857]      // while-condition  =>  TRUE
[09:22:18.857]      // while "1"  (timeout="50000")
[09:22:18.857]      // while-condition  =>  TRUE
[09:22:18.857]      // while "1"  (timeout="50000")
[09:22:18.857]      // while-condition  =>  TRUE
[09:22:18.858]      // while "1"  (timeout="50000")
[09:22:18.858]      // while-condition  =>  TRUE
[09:22:18.858]      // while "1"  (timeout="50000")
[09:22:18.858]      // while-condition  =>  TRUE
[09:22:18.859]      // while "1"  (timeout="50000")
[09:22:18.859]      // while-condition  =>  TRUE
[09:22:18.859]      // while "1"  (timeout="50000")
[09:22:18.859]      // while-condition  =>  TRUE
[09:22:18.859]      // while "1"  (timeout="50000")
[09:22:18.860]      // while-condition  =>  TRUE
[09:22:18.860]      // while "1"  (timeout="50000")
[09:22:18.860]      // while-condition  =>  TRUE
[09:22:18.860]      // while "1"  (timeout="50000")
[09:22:18.861]      // while-condition  =>  TRUE
[09:22:18.861]      // while "1"  (timeout="50000")
[09:22:18.861]      // while-condition  =>  TRUE
[09:22:18.861]      // while "1"  (timeout="50000")
[09:22:18.861]      // while-condition  =>  TRUE
[09:22:18.861]      // while "1"  (timeout="50000")
[09:22:18.861]      // while-condition  =>  TRUE
[09:22:18.862]      // while "1"  (timeout="50000")
[09:22:18.862]      // while-condition  =>  TRUE
[09:22:18.862]      // while "1"  (timeout="50000")
[09:22:18.862]      // while-condition  =>  TRUE
[09:22:18.862]      // while "1"  (timeout="50000")
[09:22:18.863]      // while-condition  =>  TRUE
[09:22:18.863]      // while "1"  (timeout="50000")
[09:22:18.863]      // while-condition  =>  TRUE
[09:22:18.864]      // while "1"  (timeout="50000")
[09:22:18.864]      // while-condition  =>  TRUE
[09:22:18.864]      // while "1"  (timeout="50000")
[09:22:18.864]      // while-condition  =>  TRUE
[09:22:18.864]      // while "1"  (timeout="50000")
[09:22:18.865]      // while-condition  =>  TRUE
[09:22:18.865]      // while "1"  (timeout="50000")
[09:22:18.865]      // while-condition  =>  TRUE
[09:22:18.865]      // while "1"  (timeout="50000")
[09:22:18.865]      // while-condition  =>  TRUE
[09:22:18.866]      // while "1"  (timeout="50000")
[09:22:18.866]      // while-condition  =>  TRUE
[09:22:18.866]      // while "1"  (timeout="50000")
[09:22:18.866]      // while-condition  =>  TRUE
[09:22:18.866]      // while "1"  (timeout="50000")
[09:22:18.866]      // while-condition  =>  TRUE
[09:22:18.866]      // while "1"  (timeout="50000")
[09:22:18.866]      // while-condition  =>  TRUE
[09:22:18.866]      // while "1"  (timeout="50000")
[09:22:18.866]      // while-condition  =>  TRUE
[09:22:18.867]      // while "1"  (timeout="50000")
[09:22:18.867]      // while-condition  =>  TRUE
[09:22:18.867]      // while "1"  (timeout="50000")
[09:22:18.867]      // while-condition  =>  TRUE
[09:22:18.867]      // while "1"  (timeout="50000")
[09:22:18.869]      // while-condition  =>  TRUE
[09:22:18.869]      // while "1"  (timeout="50000")
[09:22:18.869]      // while-condition  =>  TRUE
[09:22:18.869]      // while "1"  (timeout="50000")
[09:22:18.869]      // while-condition  =>  TRUE
[09:22:18.869]      // while "1"  (timeout="50000")
[09:22:18.870]      // while-condition  =>  TRUE
[09:22:18.870]      // while "1"  (timeout="50000")
[09:22:18.870]      // while-condition  =>  TRUE
[09:22:18.870]      // while "1"  (timeout="50000")
[09:22:18.870]      // while-condition  =>  TRUE
[09:22:18.871]      // while "1"  (timeout="50000")
[09:22:18.871]      // while-condition  =>  TRUE
[09:22:18.871]      // while "1"  (timeout="50000")
[09:22:18.871]      // while-condition  =>  TRUE
[09:22:18.871]      // while "1"  (timeout="50000")
[09:22:18.872]      // while-condition  =>  TRUE
[09:22:18.872]      // while "1"  (timeout="50000")
[09:22:18.872]      // while-condition  =>  TRUE
[09:22:18.872]      // while "1"  (timeout="50000")
[09:22:18.872]      // while-condition  =>  TRUE
[09:22:18.872]      // while "1"  (timeout="50000")
[09:22:18.872]      // while-condition  =>  TRUE
[09:22:18.873]      // while "1"  (timeout="50000")
[09:22:18.873]      // while-condition  =>  TRUE
[09:22:18.873]      // while "1"  (timeout="50000")
[09:22:18.874]      // while-condition  =>  TRUE
[09:22:18.874]      // while "1"  (timeout="50000")
[09:22:18.874]      // while-condition  =>  TRUE
[09:22:18.874]      // while "1"  (timeout="50000")
[09:22:18.874]      // while  =>  TIMEOUT
[09:22:18.875]      // end while "1"
[09:22:18.875]    </control>
[09:22:18.875]    <block atomic="false" info="">
[09:22:18.875]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:22:18.877]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:22:18.877]    </block>
[09:22:18.877]    <control if="" while="1" timeout="10000" info="">
[09:22:18.877]      // while "1"  (timeout="10000")
[09:22:18.877]      // while-condition  =>  TRUE
[09:22:18.878]      // while "1"  (timeout="10000")
[09:22:18.878]      // while-condition  =>  TRUE
[09:22:18.878]      // while "1"  (timeout="10000")
[09:22:18.878]      // while-condition  =>  TRUE
[09:22:18.878]      // while "1"  (timeout="10000")
[09:22:18.879]      // while-condition  =>  TRUE
[09:22:18.879]      // while "1"  (timeout="10000")
[09:22:18.879]      // while-condition  =>  TRUE
[09:22:18.879]      // while "1"  (timeout="10000")
[09:22:18.880]      // while-condition  =>  TRUE
[09:22:18.880]      // while "1"  (timeout="10000")
[09:22:18.881]      // while-condition  =>  TRUE
[09:22:18.881]      // while "1"  (timeout="10000")
[09:22:18.881]      // while-condition  =>  TRUE
[09:22:18.881]      // while "1"  (timeout="10000")
[09:22:18.881]      // while-condition  =>  TRUE
[09:22:18.882]      // while "1"  (timeout="10000")
[09:22:18.882]      // while-condition  =>  TRUE
[09:22:18.882]      // while "1"  (timeout="10000")
[09:22:18.882]      // while-condition  =>  TRUE
[09:22:18.883]      // while "1"  (timeout="10000")
[09:22:18.883]      // while-condition  =>  TRUE
[09:22:18.883]      // while "1"  (timeout="10000")
[09:22:18.883]      // while-condition  =>  TRUE
[09:22:18.884]      // while "1"  (timeout="10000")
[09:22:18.884]      // while-condition  =>  TRUE
[09:22:18.884]      // while "1"  (timeout="10000")
[09:22:18.885]      // while-condition  =>  TRUE
[09:22:18.885]      // while "1"  (timeout="10000")
[09:22:18.885]      // while-condition  =>  TRUE
[09:22:18.885]      // while "1"  (timeout="10000")
[09:22:18.886]      // while-condition  =>  TRUE
[09:22:18.886]      // while "1"  (timeout="10000")
[09:22:18.886]      // while-condition  =>  TRUE
[09:22:18.886]      // while "1"  (timeout="10000")
[09:22:18.886]      // while-condition  =>  TRUE
[09:22:18.886]      // while "1"  (timeout="10000")
[09:22:18.886]      // while-condition  =>  TRUE
[09:22:18.886]      // while "1"  (timeout="10000")
[09:22:18.886]      // while-condition  =>  TRUE
[09:22:18.887]      // while "1"  (timeout="10000")
[09:22:18.887]      // while-condition  =>  TRUE
[09:22:18.887]      // while "1"  (timeout="10000")
[09:22:18.887]      // while-condition  =>  TRUE
[09:22:18.888]      // while "1"  (timeout="10000")
[09:22:18.888]      // while-condition  =>  TRUE
[09:22:18.888]      // while "1"  (timeout="10000")
[09:22:18.888]      // while-condition  =>  TRUE
[09:22:18.888]      // while "1"  (timeout="10000")
[09:22:18.890]      // while-condition  =>  TRUE
[09:22:18.890]      // while "1"  (timeout="10000")
[09:22:18.890]      // while  =>  TIMEOUT
[09:22:18.890]      // end while "1"
[09:22:18.890]    </control>
[09:22:18.890]    <block atomic="true" info="">
[09:22:18.893]  
[09:22:18.893]  ! W001 : No atomic sequence support in debug unit
[09:22:18.893]  
[09:22:18.895]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:22:18.898]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:22:18.898]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:22:18.901]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:22:18.902]    </block>
[09:22:18.902]    <block atomic="false" info="">
[09:22:18.903]      __errorcontrol = 0x00000001;
[09:22:18.903]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:22:18.904]      ReadDP(0x0);
[09:22:18.906]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:22:18.908]      __errorcontrol = 0x00000000;
[09:22:18.908]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:22:18.908]    </block>
[09:22:18.908]  </sequence>
[09:22:18.909]  
[09:22:18.914]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[09:22:18.914]  
[09:22:18.914]  <debugvars>
[09:22:18.915]    // Pre-defined
[09:22:18.916]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:22:18.916]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:22:18.916]    __dp=0x00000000
[09:22:18.916]    __ap=0x00000000
[09:22:18.918]    __traceout=0x00000000      (Trace Disabled)
[09:22:18.918]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:22:18.919]    __FlashAddr=0x00000000
[09:22:18.919]    __FlashLen=0x00000000
[09:22:18.920]    __FlashArg=0x00000000
[09:22:18.920]    __FlashOp=0x00000000
[09:22:18.920]    __Result=0x00000000
[09:22:18.922]  </debugvars>
[09:22:18.922]  
[09:22:18.922]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[09:22:18.923]    <block atomic="false" info="">
[09:22:18.923]    </block>
[09:22:18.923]  </sequence>
[09:22:18.924]  
[09:22:19.139]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[09:22:19.139]  
[09:22:19.140]  <debugvars>
[09:22:19.140]    // Pre-defined
[09:22:19.141]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:22:19.141]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:22:19.142]    __dp=0x00000000
[09:22:19.143]    __ap=0x00000000
[09:22:19.143]    __traceout=0x00000000      (Trace Disabled)
[09:22:19.144]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:22:19.144]    __FlashAddr=0x00000000
[09:22:19.145]    __FlashLen=0x00000000
[09:22:19.146]    __FlashArg=0x00000000
[09:22:19.146]    __FlashOp=0x00000000
[09:22:19.147]    __Result=0x00000000
[09:22:19.147]  </debugvars>
[09:22:19.148]  
[09:22:19.148]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[09:22:19.149]    <block atomic="false" info="">
[09:22:19.149]      Sequence("ResetHardware");
[09:22:19.150]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:22:19.150]          <block atomic="false" info="">
[09:22:19.150]            __var nReset      = 0x80;
[09:22:19.151]              // -> [nReset <= 0x00000080]
[09:22:19.151]            DAP_SWJ_Pins(0x00, nReset, 0);
[09:22:19.153]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:22:19.154]          </block>
[09:22:19.155]          <control if="" while="1" timeout="50000" info="">
[09:22:19.155]            // while "1"  (timeout="50000")
[09:22:19.155]            // while-condition  =>  TRUE
[09:22:19.155]            // while "1"  (timeout="50000")
[09:22:19.156]            // while-condition  =>  TRUE
[09:22:19.156]            // while "1"  (timeout="50000")
[09:22:19.156]            // while-condition  =>  TRUE
[09:22:19.157]            // while "1"  (timeout="50000")
[09:22:19.157]            // while-condition  =>  TRUE
[09:22:19.157]            // while "1"  (timeout="50000")
[09:22:19.157]            // while-condition  =>  TRUE
[09:22:19.158]            // while "1"  (timeout="50000")
[09:22:19.158]            // while-condition  =>  TRUE
[09:22:19.159]            // while "1"  (timeout="50000")
[09:22:19.159]            // while-condition  =>  TRUE
[09:22:19.159]            // while "1"  (timeout="50000")
[09:22:19.159]            // while-condition  =>  TRUE
[09:22:19.160]            // while "1"  (timeout="50000")
[09:22:19.160]            // while-condition  =>  TRUE
[09:22:19.160]            // while "1"  (timeout="50000")
[09:22:19.160]            // while-condition  =>  TRUE
[09:22:19.160]            // while "1"  (timeout="50000")
[09:22:19.160]            // while-condition  =>  TRUE
[09:22:19.160]            // while "1"  (timeout="50000")
[09:22:19.161]            // while-condition  =>  TRUE
[09:22:19.161]            // while "1"  (timeout="50000")
[09:22:19.161]            // while-condition  =>  TRUE
[09:22:19.161]            // while "1"  (timeout="50000")
[09:22:19.161]            // while-condition  =>  TRUE
[09:22:19.162]            // while "1"  (timeout="50000")
[09:22:19.162]            // while-condition  =>  TRUE
[09:22:19.162]            // while "1"  (timeout="50000")
[09:22:19.162]            // while-condition  =>  TRUE
[09:22:19.163]            // while "1"  (timeout="50000")
[09:22:19.163]            // while-condition  =>  TRUE
[09:22:19.164]            // while "1"  (timeout="50000")
[09:22:19.164]            // while-condition  =>  TRUE
[09:22:19.164]            // while "1"  (timeout="50000")
[09:22:19.164]            // while-condition  =>  TRUE
[09:22:19.165]            // while "1"  (timeout="50000")
[09:22:19.165]            // while-condition  =>  TRUE
[09:22:19.165]            // while "1"  (timeout="50000")
[09:22:19.165]            // while-condition  =>  TRUE
[09:22:19.165]            // while "1"  (timeout="50000")
[09:22:19.166]            // while-condition  =>  TRUE
[09:22:19.166]            // while "1"  (timeout="50000")
[09:22:19.166]            // while-condition  =>  TRUE
[09:22:19.166]            // while "1"  (timeout="50000")
[09:22:19.166]            // while-condition  =>  TRUE
[09:22:19.166]            // while "1"  (timeout="50000")
[09:22:19.167]            // while-condition  =>  TRUE
[09:22:19.167]            // while "1"  (timeout="50000")
[09:22:19.167]            // while-condition  =>  TRUE
[09:22:19.167]            // while "1"  (timeout="50000")
[09:22:19.167]            // while-condition  =>  TRUE
[09:22:19.168]            // while "1"  (timeout="50000")
[09:22:19.168]            // while-condition  =>  TRUE
[09:22:19.168]            // while "1"  (timeout="50000")
[09:22:19.168]            // while-condition  =>  TRUE
[09:22:19.168]            // while "1"  (timeout="50000")
[09:22:19.169]            // while-condition  =>  TRUE
[09:22:19.169]            // while "1"  (timeout="50000")
[09:22:19.169]            // while-condition  =>  TRUE
[09:22:19.169]            // while "1"  (timeout="50000")
[09:22:19.169]            // while-condition  =>  TRUE
[09:22:19.170]            // while "1"  (timeout="50000")
[09:22:19.170]            // while-condition  =>  TRUE
[09:22:19.170]            // while "1"  (timeout="50000")
[09:22:19.170]            // while-condition  =>  TRUE
[09:22:19.170]            // while "1"  (timeout="50000")
[09:22:19.170]            // while-condition  =>  TRUE
[09:22:19.170]            // while "1"  (timeout="50000")
[09:22:19.170]            // while-condition  =>  TRUE
[09:22:19.170]            // while "1"  (timeout="50000")
[09:22:19.171]            // while-condition  =>  TRUE
[09:22:19.171]            // while "1"  (timeout="50000")
[09:22:19.171]            // while-condition  =>  TRUE
[09:22:19.171]            // while "1"  (timeout="50000")
[09:22:19.171]            // while-condition  =>  TRUE
[09:22:19.172]            // while "1"  (timeout="50000")
[09:22:19.172]            // while-condition  =>  TRUE
[09:22:19.172]            // while "1"  (timeout="50000")
[09:22:19.172]            // while-condition  =>  TRUE
[09:22:19.173]            // while "1"  (timeout="50000")
[09:22:19.173]            // while-condition  =>  TRUE
[09:22:19.174]            // while "1"  (timeout="50000")
[09:22:19.174]            // while-condition  =>  TRUE
[09:22:19.174]            // while "1"  (timeout="50000")
[09:22:19.174]            // while-condition  =>  TRUE
[09:22:19.175]            // while "1"  (timeout="50000")
[09:22:19.175]            // while-condition  =>  TRUE
[09:22:19.175]            // while "1"  (timeout="50000")
[09:22:19.175]            // while-condition  =>  TRUE
[09:22:19.175]            // while "1"  (timeout="50000")
[09:22:19.176]            // while-condition  =>  TRUE
[09:22:19.176]            // while "1"  (timeout="50000")
[09:22:19.176]            // while-condition  =>  TRUE
[09:22:19.176]            // while "1"  (timeout="50000")
[09:22:19.176]            // while-condition  =>  TRUE
[09:22:19.177]            // while "1"  (timeout="50000")
[09:22:19.177]            // while-condition  =>  TRUE
[09:22:19.177]            // while "1"  (timeout="50000")
[09:22:19.177]            // while-condition  =>  TRUE
[09:22:19.177]            // while "1"  (timeout="50000")
[09:22:19.178]            // while-condition  =>  TRUE
[09:22:19.178]            // while "1"  (timeout="50000")
[09:22:19.178]            // while-condition  =>  TRUE
[09:22:19.178]            // while "1"  (timeout="50000")
[09:22:19.178]            // while-condition  =>  TRUE
[09:22:19.179]            // while "1"  (timeout="50000")
[09:22:19.179]            // while-condition  =>  TRUE
[09:22:19.179]            // while "1"  (timeout="50000")
[09:22:19.179]            // while-condition  =>  TRUE
[09:22:19.179]            // while "1"  (timeout="50000")
[09:22:19.180]            // while-condition  =>  TRUE
[09:22:19.180]            // while "1"  (timeout="50000")
[09:22:19.180]            // while-condition  =>  TRUE
[09:22:19.180]            // while "1"  (timeout="50000")
[09:22:19.180]            // while-condition  =>  TRUE
[09:22:19.180]            // while "1"  (timeout="50000")
[09:22:19.180]            // while-condition  =>  TRUE
[09:22:19.180]            // while "1"  (timeout="50000")
[09:22:19.181]            // while-condition  =>  TRUE
[09:22:19.181]            // while "1"  (timeout="50000")
[09:22:19.181]            // while-condition  =>  TRUE
[09:22:19.181]            // while "1"  (timeout="50000")
[09:22:19.181]            // while-condition  =>  TRUE
[09:22:19.181]            // while "1"  (timeout="50000")
[09:22:19.182]            // while-condition  =>  TRUE
[09:22:19.182]            // while "1"  (timeout="50000")
[09:22:19.182]            // while-condition  =>  TRUE
[09:22:19.182]            // while "1"  (timeout="50000")
[09:22:19.182]            // while-condition  =>  TRUE
[09:22:19.183]            // while "1"  (timeout="50000")
[09:22:19.183]            // while-condition  =>  TRUE
[09:22:19.183]            // while "1"  (timeout="50000")
[09:22:19.183]            // while-condition  =>  TRUE
[09:22:19.183]            // while "1"  (timeout="50000")
[09:22:19.184]            // while-condition  =>  TRUE
[09:22:19.185]            // while "1"  (timeout="50000")
[09:22:19.185]            // while-condition  =>  TRUE
[09:22:19.185]            // while "1"  (timeout="50000")
[09:22:19.185]            // while-condition  =>  TRUE
[09:22:19.185]            // while "1"  (timeout="50000")
[09:22:19.186]            // while-condition  =>  TRUE
[09:22:19.186]            // while "1"  (timeout="50000")
[09:22:19.186]            // while-condition  =>  TRUE
[09:22:19.186]            // while "1"  (timeout="50000")
[09:22:19.186]            // while-condition  =>  TRUE
[09:22:19.186]            // while "1"  (timeout="50000")
[09:22:19.186]            // while-condition  =>  TRUE
[09:22:19.186]            // while "1"  (timeout="50000")
[09:22:19.186]            // while-condition  =>  TRUE
[09:22:19.186]            // while "1"  (timeout="50000")
[09:22:19.187]            // while-condition  =>  TRUE
[09:22:19.187]            // while "1"  (timeout="50000")
[09:22:19.187]            // while-condition  =>  TRUE
[09:22:19.187]            // while "1"  (timeout="50000")
[09:22:19.188]            // while-condition  =>  TRUE
[09:22:19.188]            // while "1"  (timeout="50000")
[09:22:19.189]            // while-condition  =>  TRUE
[09:22:19.189]            // while "1"  (timeout="50000")
[09:22:19.189]            // while-condition  =>  TRUE
[09:22:19.189]            // while "1"  (timeout="50000")
[09:22:19.190]            // while-condition  =>  TRUE
[09:22:19.190]            // while "1"  (timeout="50000")
[09:22:19.190]            // while-condition  =>  TRUE
[09:22:19.190]            // while "1"  (timeout="50000")
[09:22:19.190]            // while-condition  =>  TRUE
[09:22:19.191]            // while "1"  (timeout="50000")
[09:22:19.191]            // while-condition  =>  TRUE
[09:22:19.191]            // while "1"  (timeout="50000")
[09:22:19.191]            // while-condition  =>  TRUE
[09:22:19.191]            // while "1"  (timeout="50000")
[09:22:19.191]            // while-condition  =>  TRUE
[09:22:19.191]            // while "1"  (timeout="50000")
[09:22:19.191]            // while-condition  =>  TRUE
[09:22:19.191]            // while "1"  (timeout="50000")
[09:22:19.192]            // while-condition  =>  TRUE
[09:22:19.192]            // while "1"  (timeout="50000")
[09:22:19.192]            // while-condition  =>  TRUE
[09:22:19.192]            // while "1"  (timeout="50000")
[09:22:19.193]            // while-condition  =>  TRUE
[09:22:19.193]            // while "1"  (timeout="50000")
[09:22:19.193]            // while-condition  =>  TRUE
[09:22:19.193]            // while "1"  (timeout="50000")
[09:22:19.193]            // while-condition  =>  TRUE
[09:22:19.193]            // while "1"  (timeout="50000")
[09:22:19.194]            // while-condition  =>  TRUE
[09:22:19.194]            // while "1"  (timeout="50000")
[09:22:19.194]            // while-condition  =>  TRUE
[09:22:19.194]            // while "1"  (timeout="50000")
[09:22:19.194]            // while-condition  =>  TRUE
[09:22:19.195]            // while "1"  (timeout="50000")
[09:22:19.195]            // while-condition  =>  TRUE
[09:22:19.196]            // while "1"  (timeout="50000")
[09:22:19.196]            // while-condition  =>  TRUE
[09:22:19.196]            // while "1"  (timeout="50000")
[09:22:19.196]            // while-condition  =>  TRUE
[09:22:19.196]            // while "1"  (timeout="50000")
[09:22:19.197]            // while-condition  =>  TRUE
[09:22:19.197]            // while "1"  (timeout="50000")
[09:22:19.197]            // while-condition  =>  TRUE
[09:22:19.197]            // while "1"  (timeout="50000")
[09:22:19.197]            // while-condition  =>  TRUE
[09:22:19.198]            // while "1"  (timeout="50000")
[09:22:19.198]            // while-condition  =>  TRUE
[09:22:19.198]            // while "1"  (timeout="50000")
[09:22:19.198]            // while-condition  =>  TRUE
[09:22:19.198]            // while "1"  (timeout="50000")
[09:22:19.199]            // while-condition  =>  TRUE
[09:22:19.199]            // while "1"  (timeout="50000")
[09:22:19.199]            // while-condition  =>  TRUE
[09:22:19.199]            // while "1"  (timeout="50000")
[09:22:19.199]            // while-condition  =>  TRUE
[09:22:19.200]            // while "1"  (timeout="50000")
[09:22:19.200]            // while-condition  =>  TRUE
[09:22:19.200]            // while "1"  (timeout="50000")
[09:22:19.200]            // while-condition  =>  TRUE
[09:22:19.200]            // while "1"  (timeout="50000")
[09:22:19.200]            // while-condition  =>  TRUE
[09:22:19.201]            // while "1"  (timeout="50000")
[09:22:19.201]            // while-condition  =>  TRUE
[09:22:19.201]            // while "1"  (timeout="50000")
[09:22:19.201]            // while-condition  =>  TRUE
[09:22:19.201]            // while "1"  (timeout="50000")
[09:22:19.201]            // while-condition  =>  TRUE
[09:22:19.201]            // while "1"  (timeout="50000")
[09:22:19.201]            // while-condition  =>  TRUE
[09:22:19.201]            // while "1"  (timeout="50000")
[09:22:19.202]            // while-condition  =>  TRUE
[09:22:19.202]            // while "1"  (timeout="50000")
[09:22:19.202]            // while  =>  TIMEOUT
[09:22:19.203]            // end while "1"
[09:22:19.203]          </control>
[09:22:19.203]          <block atomic="false" info="">
[09:22:19.203]            DAP_SWJ_Pins(nReset, nReset, 0);
[09:22:19.206]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:22:19.206]          </block>
[09:22:19.206]          <control if="" while="1" timeout="10000" info="">
[09:22:19.207]            // while "1"  (timeout="10000")
[09:22:19.207]            // while-condition  =>  TRUE
[09:22:19.207]            // while "1"  (timeout="10000")
[09:22:19.207]            // while-condition  =>  TRUE
[09:22:19.209]            // while "1"  (timeout="10000")
[09:22:19.209]            // while-condition  =>  TRUE
[09:22:19.209]            // while "1"  (timeout="10000")
[09:22:19.210]            // while-condition  =>  TRUE
[09:22:19.210]            // while "1"  (timeout="10000")
[09:22:19.214]            // while-condition  =>  TRUE
[09:22:19.214]            // while "1"  (timeout="10000")
[09:22:19.214]            // while-condition  =>  TRUE
[09:22:19.215]            // while "1"  (timeout="10000")
[09:22:19.215]            // while-condition  =>  TRUE
[09:22:19.216]            // while "1"  (timeout="10000")
[09:22:19.216]            // while-condition  =>  TRUE
[09:22:19.217]            // while "1"  (timeout="10000")
[09:22:19.219]            // while-condition  =>  TRUE
[09:22:19.219]            // while "1"  (timeout="10000")
[09:22:19.220]            // while  =>  TIMEOUT
[09:22:19.221]            // end while "1"
[09:22:19.221]          </control>
[09:22:19.222]          <block atomic="true" info="">
[09:22:19.225]  
[09:22:19.225]  ! W001 : No atomic sequence support in debug unit
[09:22:19.225]  
[09:22:19.226]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:22:19.233]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:22:19.234]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:22:19.236]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:22:19.237]          </block>
[09:22:19.237]          <block atomic="false" info="">
[09:22:19.238]            __errorcontrol = 0x00000001;
[09:22:19.238]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:22:19.239]            ReadDP(0x0);
[09:22:19.241]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:22:19.242]            __errorcontrol = 0x00000000;
[09:22:19.242]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:22:19.242]          </block>
[09:22:19.243]        </sequence>
[09:22:19.243]      Sequence("DebugPortSetup");
[09:22:19.244]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:22:19.244]        </sequence>
[09:22:19.244]      Sequence("DebugPortStart");
[09:22:19.246]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:22:19.246]          <block atomic="false" info="">
[09:22:19.246]            __var SW_DP_ABORT  = 0x0;
[09:22:19.247]              // -> [SW_DP_ABORT <= 0x00000000]
[09:22:19.247]            __var DP_CTRL_STAT = 0x4;
[09:22:19.247]              // -> [DP_CTRL_STAT <= 0x00000004]
[09:22:19.247]            __var DP_SELECT    = 0x8;
[09:22:19.248]              // -> [DP_SELECT <= 0x00000008]
[09:22:19.248]            __var powered_down = 0;
[09:22:19.248]              // -> [powered_down <= 0x00000000]
[09:22:19.249]            WriteDP(DP_SELECT, 0x00000000);
[09:22:19.251]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:22:19.251]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:22:19.253]              // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:22:19.253]              // -> [powered_down <= 0x00000000]
[09:22:19.253]          </block>
[09:22:19.254]          <control if="powered_down" while="" timeout="0" info="">
[09:22:19.254]            // if-block "powered_down"
[09:22:19.254]              // =>  FALSE
[09:22:19.254]            // skip if-block "powered_down"
[09:22:19.255]          </control>
[09:22:19.255]        </sequence>
[09:22:19.255]      Sequence("DebugCoreStart");
[09:22:19.256]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:22:19.256]          <block atomic="true" info="">
[09:22:19.260]  
[09:22:19.260]  ! W001 : No atomic sequence support in debug unit
[09:22:19.260]  
[09:22:19.262]            __var DP_R_IDCODE    = 0x0;
[09:22:19.262]              // -> [DP_R_IDCODE <= 0x00000000]
[09:22:19.263]            __var DP_W_ABORT    = 0x0;
[09:22:19.263]              // -> [DP_W_ABORT <= 0x00000000]
[09:22:19.264]            __var DP_CTRLSTAT = 0x4;
[09:22:19.265]              // -> [DP_CTRLSTAT <= 0x00000004]
[09:22:19.265]            __var DP_W_SELECT    = 0x8;
[09:22:19.265]              // -> [DP_W_SELECT <= 0x00000008]
[09:22:19.266]            __var AP_TAR		= 0x4;
[09:22:19.266]              // -> [AP_TAR <= 0x00000004]
[09:22:19.267]            __var AP_BD0		= 0x0;
[09:22:19.267]              // -> [AP_BD0 <= 0x00000000]
[09:22:19.267]            __var AP_BD1		= 0x4;
[09:22:19.268]              // -> [AP_BD1 <= 0x00000004]
[09:22:19.268]            __var AP_BD2		= 0x8;
[09:22:19.268]              // -> [AP_BD2 <= 0x00000008]
[09:22:19.268]            __var PCWithinFlash = 0;
[09:22:19.268]              // -> [PCWithinFlash <= 0x00000000]
[09:22:19.269]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:22:19.275]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.292]          </block>
[09:22:19.292]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:22:19.293]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:22:19.299]              // -> [Read32(0xE000EDF0) => 0x00030003]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.299]            // while-condition  =>  FALSE
[09:22:19.300]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:22:19.300]          </control>
[09:22:19.301]          <block atomic="true" info="">
[09:22:19.304]  
[09:22:19.304]  ! W001 : No atomic sequence support in debug unit
[09:22:19.304]  
[09:22:19.306]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:22:19.315]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:22:19.315]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:22:19.318]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.318]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:22:19.321]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:22:19.321]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:22:19.326]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.327]          </block>
[09:22:19.327]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:22:19.328]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.330]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.330]            // while-condition  =>  TRUE
[09:22:19.330]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.333]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.333]            // while-condition  =>  TRUE
[09:22:19.333]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.337]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.338]            // while-condition  =>  TRUE
[09:22:19.338]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.341]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.341]            // while-condition  =>  TRUE
[09:22:19.342]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.345]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.345]            // while-condition  =>  TRUE
[09:22:19.345]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.348]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.348]            // while-condition  =>  TRUE
[09:22:19.348]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.351]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.351]            // while-condition  =>  TRUE
[09:22:19.351]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.354]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.354]            // while-condition  =>  TRUE
[09:22:19.355]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.358]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.358]            // while-condition  =>  TRUE
[09:22:19.358]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.361]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.361]            // while-condition  =>  TRUE
[09:22:19.362]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.364]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.364]            // while-condition  =>  TRUE
[09:22:19.365]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.367]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.367]            // while-condition  =>  TRUE
[09:22:19.368]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.370]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.370]            // while-condition  =>  TRUE
[09:22:19.370]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.372]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.373]            // while-condition  =>  TRUE
[09:22:19.373]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.376]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.376]            // while-condition  =>  TRUE
[09:22:19.376]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.379]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.379]            // while-condition  =>  TRUE
[09:22:19.380]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.382]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.382]            // while-condition  =>  TRUE
[09:22:19.383]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.385]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.385]            // while-condition  =>  TRUE
[09:22:19.386]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.388]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.388]            // while-condition  =>  TRUE
[09:22:19.389]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.391]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.391]            // while-condition  =>  TRUE
[09:22:19.391]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.393]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.394]            // while-condition  =>  TRUE
[09:22:19.394]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.397]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.397]            // while-condition  =>  TRUE
[09:22:19.398]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.400]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.400]            // while-condition  =>  TRUE
[09:22:19.401]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.402]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.403]            // while-condition  =>  TRUE
[09:22:19.404]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.406]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.406]            // while-condition  =>  TRUE
[09:22:19.406]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.409]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.409]            // while-condition  =>  TRUE
[09:22:19.409]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.412]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.412]            // while-condition  =>  TRUE
[09:22:19.412]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.415]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.415]            // while-condition  =>  TRUE
[09:22:19.416]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.418]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.418]            // while-condition  =>  TRUE
[09:22:19.419]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.421]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.421]            // while-condition  =>  TRUE
[09:22:19.421]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.423]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.424]            // while-condition  =>  TRUE
[09:22:19.424]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.427]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.427]            // while-condition  =>  TRUE
[09:22:19.428]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.430]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.431]            // while-condition  =>  TRUE
[09:22:19.431]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.434]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.434]            // while-condition  =>  TRUE
[09:22:19.435]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.438]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.438]            // while-condition  =>  TRUE
[09:22:19.439]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:19.440]            // while  =>  TIMEOUT
[09:22:19.440]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:22:19.441]          </control>
[09:22:19.442]          <block atomic="false" info="">
[09:22:19.442]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:22:19.445]              // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:22:19.445]              // -> [PCWithinFlash <= 0x00000000]
[09:22:19.446]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:22:19.449]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:22:19.450]          </block>
[09:22:19.450]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:22:19.451]            // if-block "PCWithinFlash == 0"
[09:22:19.452]              // =>  TRUE
[09:22:19.452]            // end if-block "PCWithinFlash == 0"
[09:22:19.453]          </control>
[09:22:19.453]        </sequence>
[09:22:19.453]    </block>
[09:22:19.454]  </sequence>
[09:22:19.454]  
[09:22:36.036]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[09:22:36.036]  
[09:22:36.036]  <debugvars>
[09:22:36.037]    // Pre-defined
[09:22:36.037]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:22:36.037]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:22:36.037]    __dp=0x00000000
[09:22:36.038]    __ap=0x00000000
[09:22:36.038]    __traceout=0x00000000      (Trace Disabled)
[09:22:36.038]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:22:36.038]    __FlashAddr=0x00000000
[09:22:36.038]    __FlashLen=0x00000000
[09:22:36.039]    __FlashArg=0x00000000
[09:22:36.039]    __FlashOp=0x00000000
[09:22:36.039]    __Result=0x00000000
[09:22:36.039]  </debugvars>
[09:22:36.040]  
[09:22:36.040]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[09:22:36.040]    <block atomic="false" info="">
[09:22:36.040]      __var nReset      = 0x80;
[09:22:36.040]        // -> [nReset <= 0x00000080]
[09:22:36.041]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:22:36.042]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:22:36.043]    </block>
[09:22:36.043]    <control if="" while="1" timeout="50000" info="">
[09:22:36.043]      // while "1"  (timeout="50000")
[09:22:36.043]      // while-condition  =>  TRUE
[09:22:36.044]      // while "1"  (timeout="50000")
[09:22:36.045]      // while-condition  =>  TRUE
[09:22:36.045]      // while "1"  (timeout="50000")
[09:22:36.045]      // while-condition  =>  TRUE
[09:22:36.045]      // while "1"  (timeout="50000")
[09:22:36.045]      // while-condition  =>  TRUE
[09:22:36.046]      // while "1"  (timeout="50000")
[09:22:36.046]      // while-condition  =>  TRUE
[09:22:36.046]      // while "1"  (timeout="50000")
[09:22:36.047]      // while-condition  =>  TRUE
[09:22:36.047]      // while "1"  (timeout="50000")
[09:22:36.047]      // while-condition  =>  TRUE
[09:22:36.047]      // while "1"  (timeout="50000")
[09:22:36.047]      // while-condition  =>  TRUE
[09:22:36.047]      // while "1"  (timeout="50000")
[09:22:36.048]      // while-condition  =>  TRUE
[09:22:36.048]      // while "1"  (timeout="50000")
[09:22:36.049]      // while-condition  =>  TRUE
[09:22:36.049]      // while "1"  (timeout="50000")
[09:22:36.049]      // while-condition  =>  TRUE
[09:22:36.049]      // while "1"  (timeout="50000")
[09:22:36.050]      // while-condition  =>  TRUE
[09:22:36.050]      // while "1"  (timeout="50000")
[09:22:36.050]      // while-condition  =>  TRUE
[09:22:36.050]      // while "1"  (timeout="50000")
[09:22:36.051]      // while-condition  =>  TRUE
[09:22:36.051]      // while "1"  (timeout="50000")
[09:22:36.051]      // while-condition  =>  TRUE
[09:22:36.051]      // while "1"  (timeout="50000")
[09:22:36.051]      // while-condition  =>  TRUE
[09:22:36.052]      // while "1"  (timeout="50000")
[09:22:36.052]      // while-condition  =>  TRUE
[09:22:36.052]      // while "1"  (timeout="50000")
[09:22:36.052]      // while-condition  =>  TRUE
[09:22:36.052]      // while "1"  (timeout="50000")
[09:22:36.053]      // while-condition  =>  TRUE
[09:22:36.053]      // while "1"  (timeout="50000")
[09:22:36.053]      // while-condition  =>  TRUE
[09:22:36.054]      // while "1"  (timeout="50000")
[09:22:36.054]      // while-condition  =>  TRUE
[09:22:36.054]      // while "1"  (timeout="50000")
[09:22:36.054]      // while-condition  =>  TRUE
[09:22:36.055]      // while "1"  (timeout="50000")
[09:22:36.055]      // while-condition  =>  TRUE
[09:22:36.055]      // while "1"  (timeout="50000")
[09:22:36.055]      // while-condition  =>  TRUE
[09:22:36.055]      // while "1"  (timeout="50000")
[09:22:36.055]      // while-condition  =>  TRUE
[09:22:36.055]      // while "1"  (timeout="50000")
[09:22:36.056]      // while-condition  =>  TRUE
[09:22:36.056]      // while "1"  (timeout="50000")
[09:22:36.056]      // while-condition  =>  TRUE
[09:22:36.056]      // while "1"  (timeout="50000")
[09:22:36.056]      // while-condition  =>  TRUE
[09:22:36.057]      // while "1"  (timeout="50000")
[09:22:36.057]      // while-condition  =>  TRUE
[09:22:36.057]      // while "1"  (timeout="50000")
[09:22:36.057]      // while-condition  =>  TRUE
[09:22:36.057]      // while "1"  (timeout="50000")
[09:22:36.058]      // while-condition  =>  TRUE
[09:22:36.058]      // while "1"  (timeout="50000")
[09:22:36.058]      // while-condition  =>  TRUE
[09:22:36.058]      // while "1"  (timeout="50000")
[09:22:36.059]      // while-condition  =>  TRUE
[09:22:36.059]      // while "1"  (timeout="50000")
[09:22:36.059]      // while-condition  =>  TRUE
[09:22:36.060]      // while "1"  (timeout="50000")
[09:22:36.060]      // while-condition  =>  TRUE
[09:22:36.060]      // while "1"  (timeout="50000")
[09:22:36.060]      // while-condition  =>  TRUE
[09:22:36.061]      // while "1"  (timeout="50000")
[09:22:36.061]      // while-condition  =>  TRUE
[09:22:36.061]      // while "1"  (timeout="50000")
[09:22:36.061]      // while-condition  =>  TRUE
[09:22:36.061]      // while "1"  (timeout="50000")
[09:22:36.061]      // while-condition  =>  TRUE
[09:22:36.062]      // while "1"  (timeout="50000")
[09:22:36.062]      // while-condition  =>  TRUE
[09:22:36.062]      // while "1"  (timeout="50000")
[09:22:36.062]      // while-condition  =>  TRUE
[09:22:36.062]      // while "1"  (timeout="50000")
[09:22:36.063]      // while-condition  =>  TRUE
[09:22:36.063]      // while "1"  (timeout="50000")
[09:22:36.063]      // while-condition  =>  TRUE
[09:22:36.063]      // while "1"  (timeout="50000")
[09:22:36.064]      // while-condition  =>  TRUE
[09:22:36.064]      // while "1"  (timeout="50000")
[09:22:36.064]      // while-condition  =>  TRUE
[09:22:36.064]      // while "1"  (timeout="50000")
[09:22:36.064]      // while-condition  =>  TRUE
[09:22:36.064]      // while "1"  (timeout="50000")
[09:22:36.065]      // while-condition  =>  TRUE
[09:22:36.065]      // while "1"  (timeout="50000")
[09:22:36.065]      // while-condition  =>  TRUE
[09:22:36.065]      // while "1"  (timeout="50000")
[09:22:36.065]      // while-condition  =>  TRUE
[09:22:36.066]      // while "1"  (timeout="50000")
[09:22:36.066]      // while-condition  =>  TRUE
[09:22:36.066]      // while "1"  (timeout="50000")
[09:22:36.066]      // while-condition  =>  TRUE
[09:22:36.067]      // while "1"  (timeout="50000")
[09:22:36.067]      // while-condition  =>  TRUE
[09:22:36.067]      // while "1"  (timeout="50000")
[09:22:36.067]      // while-condition  =>  TRUE
[09:22:36.067]      // while "1"  (timeout="50000")
[09:22:36.067]      // while-condition  =>  TRUE
[09:22:36.068]      // while "1"  (timeout="50000")
[09:22:36.068]      // while-condition  =>  TRUE
[09:22:36.068]      // while "1"  (timeout="50000")
[09:22:36.068]      // while-condition  =>  TRUE
[09:22:36.068]      // while "1"  (timeout="50000")
[09:22:36.068]      // while-condition  =>  TRUE
[09:22:36.068]      // while "1"  (timeout="50000")
[09:22:36.069]      // while-condition  =>  TRUE
[09:22:36.069]      // while "1"  (timeout="50000")
[09:22:36.069]      // while-condition  =>  TRUE
[09:22:36.069]      // while "1"  (timeout="50000")
[09:22:36.069]      // while-condition  =>  TRUE
[09:22:36.070]      // while "1"  (timeout="50000")
[09:22:36.070]      // while-condition  =>  TRUE
[09:22:36.070]      // while "1"  (timeout="50000")
[09:22:36.071]      // while-condition  =>  TRUE
[09:22:36.071]      // while "1"  (timeout="50000")
[09:22:36.071]      // while-condition  =>  TRUE
[09:22:36.071]      // while "1"  (timeout="50000")
[09:22:36.071]      // while-condition  =>  TRUE
[09:22:36.071]      // while "1"  (timeout="50000")
[09:22:36.071]      // while-condition  =>  TRUE
[09:22:36.071]      // while "1"  (timeout="50000")
[09:22:36.071]      // while-condition  =>  TRUE
[09:22:36.071]      // while "1"  (timeout="50000")
[09:22:36.072]      // while-condition  =>  TRUE
[09:22:36.072]      // while "1"  (timeout="50000")
[09:22:36.072]      // while-condition  =>  TRUE
[09:22:36.072]      // while "1"  (timeout="50000")
[09:22:36.074]      // while-condition  =>  TRUE
[09:22:36.074]      // while "1"  (timeout="50000")
[09:22:36.074]      // while-condition  =>  TRUE
[09:22:36.074]      // while "1"  (timeout="50000")
[09:22:36.075]      // while-condition  =>  TRUE
[09:22:36.075]      // while "1"  (timeout="50000")
[09:22:36.075]      // while-condition  =>  TRUE
[09:22:36.075]      // while "1"  (timeout="50000")
[09:22:36.075]      // while-condition  =>  TRUE
[09:22:36.075]      // while "1"  (timeout="50000")
[09:22:36.076]      // while-condition  =>  TRUE
[09:22:36.076]      // while "1"  (timeout="50000")
[09:22:36.076]      // while-condition  =>  TRUE
[09:22:36.077]      // while "1"  (timeout="50000")
[09:22:36.077]      // while-condition  =>  TRUE
[09:22:36.077]      // while "1"  (timeout="50000")
[09:22:36.078]      // while-condition  =>  TRUE
[09:22:36.078]      // while "1"  (timeout="50000")
[09:22:36.078]      // while-condition  =>  TRUE
[09:22:36.079]      // while "1"  (timeout="50000")
[09:22:36.079]      // while-condition  =>  TRUE
[09:22:36.079]      // while "1"  (timeout="50000")
[09:22:36.080]      // while-condition  =>  TRUE
[09:22:36.081]      // while "1"  (timeout="50000")
[09:22:36.081]      // while-condition  =>  TRUE
[09:22:36.081]      // while "1"  (timeout="50000")
[09:22:36.082]      // while-condition  =>  TRUE
[09:22:36.082]      // while "1"  (timeout="50000")
[09:22:36.082]      // while-condition  =>  TRUE
[09:22:36.083]      // while "1"  (timeout="50000")
[09:22:36.083]      // while-condition  =>  TRUE
[09:22:36.083]      // while "1"  (timeout="50000")
[09:22:36.083]      // while-condition  =>  TRUE
[09:22:36.083]      // while "1"  (timeout="50000")
[09:22:36.084]      // while-condition  =>  TRUE
[09:22:36.084]      // while "1"  (timeout="50000")
[09:22:36.084]      // while-condition  =>  TRUE
[09:22:36.084]      // while "1"  (timeout="50000")
[09:22:36.085]      // while-condition  =>  TRUE
[09:22:36.085]      // while "1"  (timeout="50000")
[09:22:36.085]      // while-condition  =>  TRUE
[09:22:36.085]      // while "1"  (timeout="50000")
[09:22:36.085]      // while-condition  =>  TRUE
[09:22:36.086]      // while "1"  (timeout="50000")
[09:22:36.086]      // while-condition  =>  TRUE
[09:22:36.086]      // while "1"  (timeout="50000")
[09:22:36.086]      // while-condition  =>  TRUE
[09:22:36.086]      // while "1"  (timeout="50000")
[09:22:36.087]      // while-condition  =>  TRUE
[09:22:36.087]      // while "1"  (timeout="50000")
[09:22:36.087]      // while-condition  =>  TRUE
[09:22:36.087]      // while "1"  (timeout="50000")
[09:22:36.087]      // while-condition  =>  TRUE
[09:22:36.088]      // while "1"  (timeout="50000")
[09:22:36.088]      // while-condition  =>  TRUE
[09:22:36.088]      // while "1"  (timeout="50000")
[09:22:36.088]      // while-condition  =>  TRUE
[09:22:36.088]      // while "1"  (timeout="50000")
[09:22:36.088]      // while-condition  =>  TRUE
[09:22:36.089]      // while "1"  (timeout="50000")
[09:22:36.089]      // while-condition  =>  TRUE
[09:22:36.089]      // while "1"  (timeout="50000")
[09:22:36.089]      // while-condition  =>  TRUE
[09:22:36.089]      // while "1"  (timeout="50000")
[09:22:36.090]      // while-condition  =>  TRUE
[09:22:36.090]      // while "1"  (timeout="50000")
[09:22:36.090]      // while-condition  =>  TRUE
[09:22:36.090]      // while "1"  (timeout="50000")
[09:22:36.090]      // while-condition  =>  TRUE
[09:22:36.091]      // while "1"  (timeout="50000")
[09:22:36.091]      // while-condition  =>  TRUE
[09:22:36.091]      // while "1"  (timeout="50000")
[09:22:36.092]      // while-condition  =>  TRUE
[09:22:36.092]      // while "1"  (timeout="50000")
[09:22:36.092]      // while-condition  =>  TRUE
[09:22:36.092]      // while "1"  (timeout="50000")
[09:22:36.092]      // while-condition  =>  TRUE
[09:22:36.093]      // while "1"  (timeout="50000")
[09:22:36.093]      // while-condition  =>  TRUE
[09:22:36.093]      // while "1"  (timeout="50000")
[09:22:36.093]      // while  =>  TIMEOUT
[09:22:36.093]      // end while "1"
[09:22:36.093]    </control>
[09:22:36.093]    <block atomic="false" info="">
[09:22:36.093]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:22:36.096]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:22:36.096]    </block>
[09:22:36.096]  </sequence>
[09:22:36.097]  
[09:22:40.295]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[09:22:40.295]  
[09:22:40.296]  <debugvars>
[09:22:40.296]    // Pre-defined
[09:22:40.296]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:22:40.297]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[09:22:40.297]    __dp=0x00000000
[09:22:40.297]    __ap=0x00000000
[09:22:40.298]    __traceout=0x00000000      (Trace Disabled)
[09:22:40.298]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:22:40.298]    __FlashAddr=0x00000000
[09:22:40.299]    __FlashLen=0x00000000
[09:22:40.299]    __FlashArg=0x00000000
[09:22:40.299]    __FlashOp=0x00000000
[09:22:40.300]    __Result=0x00000000
[09:22:40.300]  </debugvars>
[09:22:40.300]  
[09:22:40.301]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:22:40.301]    <block atomic="false" info="">
[09:22:40.301]      __var nReset      = 0x80;
[09:22:40.302]        // -> [nReset <= 0x00000080]
[09:22:40.302]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:22:40.304]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:22:40.305]    </block>
[09:22:40.305]    <control if="" while="1" timeout="50000" info="">
[09:22:40.305]      // while "1"  (timeout="50000")
[09:22:40.305]      // while-condition  =>  TRUE
[09:22:40.306]      // while "1"  (timeout="50000")
[09:22:40.306]      // while-condition  =>  TRUE
[09:22:40.306]      // while "1"  (timeout="50000")
[09:22:40.307]      // while-condition  =>  TRUE
[09:22:40.307]      // while "1"  (timeout="50000")
[09:22:40.307]      // while-condition  =>  TRUE
[09:22:40.307]      // while "1"  (timeout="50000")
[09:22:40.308]      // while-condition  =>  TRUE
[09:22:40.308]      // while "1"  (timeout="50000")
[09:22:40.308]      // while-condition  =>  TRUE
[09:22:40.309]      // while "1"  (timeout="50000")
[09:22:40.309]      // while-condition  =>  TRUE
[09:22:40.309]      // while "1"  (timeout="50000")
[09:22:40.310]      // while-condition  =>  TRUE
[09:22:40.310]      // while "1"  (timeout="50000")
[09:22:40.310]      // while-condition  =>  TRUE
[09:22:40.310]      // while "1"  (timeout="50000")
[09:22:40.311]      // while-condition  =>  TRUE
[09:22:40.311]      // while "1"  (timeout="50000")
[09:22:40.311]      // while-condition  =>  TRUE
[09:22:40.312]      // while "1"  (timeout="50000")
[09:22:40.312]      // while-condition  =>  TRUE
[09:22:40.312]      // while "1"  (timeout="50000")
[09:22:40.312]      // while-condition  =>  TRUE
[09:22:40.313]      // while "1"  (timeout="50000")
[09:22:40.313]      // while-condition  =>  TRUE
[09:22:40.313]      // while "1"  (timeout="50000")
[09:22:40.314]      // while-condition  =>  TRUE
[09:22:40.314]      // while "1"  (timeout="50000")
[09:22:40.314]      // while-condition  =>  TRUE
[09:22:40.314]      // while "1"  (timeout="50000")
[09:22:40.314]      // while-condition  =>  TRUE
[09:22:40.315]      // while "1"  (timeout="50000")
[09:22:40.315]      // while-condition  =>  TRUE
[09:22:40.315]      // while "1"  (timeout="50000")
[09:22:40.315]      // while-condition  =>  TRUE
[09:22:40.315]      // while "1"  (timeout="50000")
[09:22:40.316]      // while-condition  =>  TRUE
[09:22:40.316]      // while "1"  (timeout="50000")
[09:22:40.316]      // while-condition  =>  TRUE
[09:22:40.316]      // while "1"  (timeout="50000")
[09:22:40.316]      // while-condition  =>  TRUE
[09:22:40.317]      // while "1"  (timeout="50000")
[09:22:40.317]      // while-condition  =>  TRUE
[09:22:40.317]      // while "1"  (timeout="50000")
[09:22:40.317]      // while-condition  =>  TRUE
[09:22:40.317]      // while "1"  (timeout="50000")
[09:22:40.318]      // while-condition  =>  TRUE
[09:22:40.318]      // while "1"  (timeout="50000")
[09:22:40.318]      // while-condition  =>  TRUE
[09:22:40.318]      // while "1"  (timeout="50000")
[09:22:40.318]      // while-condition  =>  TRUE
[09:22:40.319]      // while "1"  (timeout="50000")
[09:22:40.319]      // while-condition  =>  TRUE
[09:22:40.319]      // while "1"  (timeout="50000")
[09:22:40.319]      // while-condition  =>  TRUE
[09:22:40.319]      // while "1"  (timeout="50000")
[09:22:40.320]      // while-condition  =>  TRUE
[09:22:40.320]      // while "1"  (timeout="50000")
[09:22:40.320]      // while-condition  =>  TRUE
[09:22:40.320]      // while "1"  (timeout="50000")
[09:22:40.320]      // while-condition  =>  TRUE
[09:22:40.321]      // while "1"  (timeout="50000")
[09:22:40.321]      // while-condition  =>  TRUE
[09:22:40.321]      // while "1"  (timeout="50000")
[09:22:40.321]      // while-condition  =>  TRUE
[09:22:40.322]      // while "1"  (timeout="50000")
[09:22:40.322]      // while-condition  =>  TRUE
[09:22:40.322]      // while "1"  (timeout="50000")
[09:22:40.322]      // while-condition  =>  TRUE
[09:22:40.322]      // while "1"  (timeout="50000")
[09:22:40.323]      // while-condition  =>  TRUE
[09:22:40.323]      // while "1"  (timeout="50000")
[09:22:40.323]      // while-condition  =>  TRUE
[09:22:40.323]      // while "1"  (timeout="50000")
[09:22:40.323]      // while-condition  =>  TRUE
[09:22:40.324]      // while "1"  (timeout="50000")
[09:22:40.324]      // while-condition  =>  TRUE
[09:22:40.324]      // while "1"  (timeout="50000")
[09:22:40.324]      // while-condition  =>  TRUE
[09:22:40.324]      // while "1"  (timeout="50000")
[09:22:40.325]      // while-condition  =>  TRUE
[09:22:40.325]      // while "1"  (timeout="50000")
[09:22:40.325]      // while-condition  =>  TRUE
[09:22:40.325]      // while "1"  (timeout="50000")
[09:22:40.326]      // while-condition  =>  TRUE
[09:22:40.326]      // while "1"  (timeout="50000")
[09:22:40.326]      // while-condition  =>  TRUE
[09:22:40.326]      // while "1"  (timeout="50000")
[09:22:40.327]      // while-condition  =>  TRUE
[09:22:40.327]      // while "1"  (timeout="50000")
[09:22:40.327]      // while-condition  =>  TRUE
[09:22:40.327]      // while "1"  (timeout="50000")
[09:22:40.327]      // while-condition  =>  TRUE
[09:22:40.328]      // while "1"  (timeout="50000")
[09:22:40.328]      // while-condition  =>  TRUE
[09:22:40.328]      // while "1"  (timeout="50000")
[09:22:40.328]      // while-condition  =>  TRUE
[09:22:40.329]      // while "1"  (timeout="50000")
[09:22:40.329]      // while-condition  =>  TRUE
[09:22:40.329]      // while "1"  (timeout="50000")
[09:22:40.329]      // while-condition  =>  TRUE
[09:22:40.329]      // while "1"  (timeout="50000")
[09:22:40.330]      // while-condition  =>  TRUE
[09:22:40.330]      // while "1"  (timeout="50000")
[09:22:40.330]      // while-condition  =>  TRUE
[09:22:40.330]      // while "1"  (timeout="50000")
[09:22:40.331]      // while-condition  =>  TRUE
[09:22:40.331]      // while "1"  (timeout="50000")
[09:22:40.331]      // while-condition  =>  TRUE
[09:22:40.331]      // while "1"  (timeout="50000")
[09:22:40.331]      // while-condition  =>  TRUE
[09:22:40.332]      // while "1"  (timeout="50000")
[09:22:40.332]      // while-condition  =>  TRUE
[09:22:40.332]      // while "1"  (timeout="50000")
[09:22:40.332]      // while-condition  =>  TRUE
[09:22:40.333]      // while "1"  (timeout="50000")
[09:22:40.333]      // while-condition  =>  TRUE
[09:22:40.333]      // while "1"  (timeout="50000")
[09:22:40.333]      // while-condition  =>  TRUE
[09:22:40.334]      // while "1"  (timeout="50000")
[09:22:40.334]      // while-condition  =>  TRUE
[09:22:40.334]      // while "1"  (timeout="50000")
[09:22:40.334]      // while-condition  =>  TRUE
[09:22:40.334]      // while "1"  (timeout="50000")
[09:22:40.335]      // while-condition  =>  TRUE
[09:22:40.335]      // while "1"  (timeout="50000")
[09:22:40.335]      // while-condition  =>  TRUE
[09:22:40.335]      // while "1"  (timeout="50000")
[09:22:40.335]      // while-condition  =>  TRUE
[09:22:40.336]      // while "1"  (timeout="50000")
[09:22:40.336]      // while-condition  =>  TRUE
[09:22:40.336]      // while "1"  (timeout="50000")
[09:22:40.337]      // while-condition  =>  TRUE
[09:22:40.337]      // while "1"  (timeout="50000")
[09:22:40.338]      // while-condition  =>  TRUE
[09:22:40.338]      // while "1"  (timeout="50000")
[09:22:40.338]      // while-condition  =>  TRUE
[09:22:40.338]      // while "1"  (timeout="50000")
[09:22:40.339]      // while-condition  =>  TRUE
[09:22:40.339]      // while "1"  (timeout="50000")
[09:22:40.339]      // while-condition  =>  TRUE
[09:22:40.339]      // while "1"  (timeout="50000")
[09:22:40.339]      // while-condition  =>  TRUE
[09:22:40.340]      // while "1"  (timeout="50000")
[09:22:40.340]      // while-condition  =>  TRUE
[09:22:40.340]      // while "1"  (timeout="50000")
[09:22:40.340]      // while-condition  =>  TRUE
[09:22:40.341]      // while "1"  (timeout="50000")
[09:22:40.341]      // while-condition  =>  TRUE
[09:22:40.341]      // while "1"  (timeout="50000")
[09:22:40.341]      // while-condition  =>  TRUE
[09:22:40.342]      // while "1"  (timeout="50000")
[09:22:40.342]      // while-condition  =>  TRUE
[09:22:40.342]      // while "1"  (timeout="50000")
[09:22:40.342]      // while-condition  =>  TRUE
[09:22:40.343]      // while "1"  (timeout="50000")
[09:22:40.343]      // while-condition  =>  TRUE
[09:22:40.343]      // while "1"  (timeout="50000")
[09:22:40.344]      // while-condition  =>  TRUE
[09:22:40.344]      // while "1"  (timeout="50000")
[09:22:40.344]      // while-condition  =>  TRUE
[09:22:40.345]      // while "1"  (timeout="50000")
[09:22:40.345]      // while-condition  =>  TRUE
[09:22:40.345]      // while "1"  (timeout="50000")
[09:22:40.345]      // while-condition  =>  TRUE
[09:22:40.346]      // while "1"  (timeout="50000")
[09:22:40.346]      // while-condition  =>  TRUE
[09:22:40.346]      // while "1"  (timeout="50000")
[09:22:40.346]      // while-condition  =>  TRUE
[09:22:40.347]      // while "1"  (timeout="50000")
[09:22:40.347]      // while-condition  =>  TRUE
[09:22:40.347]      // while "1"  (timeout="50000")
[09:22:40.347]      // while-condition  =>  TRUE
[09:22:40.347]      // while "1"  (timeout="50000")
[09:22:40.348]      // while-condition  =>  TRUE
[09:22:40.348]      // while "1"  (timeout="50000")
[09:22:40.348]      // while-condition  =>  TRUE
[09:22:40.348]      // while "1"  (timeout="50000")
[09:22:40.349]      // while-condition  =>  TRUE
[09:22:40.349]      // while "1"  (timeout="50000")
[09:22:40.349]      // while-condition  =>  TRUE
[09:22:40.349]      // while "1"  (timeout="50000")
[09:22:40.349]      // while-condition  =>  TRUE
[09:22:40.350]      // while "1"  (timeout="50000")
[09:22:40.350]      // while-condition  =>  TRUE
[09:22:40.350]      // while "1"  (timeout="50000")
[09:22:40.350]      // while-condition  =>  TRUE
[09:22:40.351]      // while "1"  (timeout="50000")
[09:22:40.351]      // while-condition  =>  TRUE
[09:22:40.351]      // while "1"  (timeout="50000")
[09:22:40.351]      // while-condition  =>  TRUE
[09:22:40.351]      // while "1"  (timeout="50000")
[09:22:40.352]      // while-condition  =>  TRUE
[09:22:40.352]      // while "1"  (timeout="50000")
[09:22:40.352]      // while-condition  =>  TRUE
[09:22:40.352]      // while "1"  (timeout="50000")
[09:22:40.353]      // while-condition  =>  TRUE
[09:22:40.353]      // while "1"  (timeout="50000")
[09:22:40.353]      // while-condition  =>  TRUE
[09:22:40.353]      // while "1"  (timeout="50000")
[09:22:40.354]      // while-condition  =>  TRUE
[09:22:40.354]      // while "1"  (timeout="50000")
[09:22:40.354]      // while-condition  =>  TRUE
[09:22:40.354]      // while "1"  (timeout="50000")
[09:22:40.354]      // while-condition  =>  TRUE
[09:22:40.355]      // while "1"  (timeout="50000")
[09:22:40.355]      // while-condition  =>  TRUE
[09:22:40.355]      // while "1"  (timeout="50000")
[09:22:40.355]      // while-condition  =>  TRUE
[09:22:40.356]      // while "1"  (timeout="50000")
[09:22:40.356]      // while-condition  =>  TRUE
[09:22:40.356]      // while "1"  (timeout="50000")
[09:22:40.356]      // while-condition  =>  TRUE
[09:22:40.356]      // while "1"  (timeout="50000")
[09:22:40.357]      // while-condition  =>  TRUE
[09:22:40.357]      // while "1"  (timeout="50000")
[09:22:40.357]      // while-condition  =>  TRUE
[09:22:40.357]      // while "1"  (timeout="50000")
[09:22:40.358]      // while-condition  =>  TRUE
[09:22:40.358]      // while "1"  (timeout="50000")
[09:22:40.358]      // while-condition  =>  TRUE
[09:22:40.358]      // while "1"  (timeout="50000")
[09:22:40.359]      // while-condition  =>  TRUE
[09:22:40.359]      // while "1"  (timeout="50000")
[09:22:40.359]      // while  =>  TIMEOUT
[09:22:40.359]      // end while "1"
[09:22:40.360]    </control>
[09:22:40.360]    <block atomic="false" info="">
[09:22:40.360]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:22:40.362]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:22:40.363]    </block>
[09:22:40.363]    <control if="" while="1" timeout="10000" info="">
[09:22:40.363]      // while "1"  (timeout="10000")
[09:22:40.363]      // while-condition  =>  TRUE
[09:22:40.364]      // while "1"  (timeout="10000")
[09:22:40.364]      // while-condition  =>  TRUE
[09:22:40.364]      // while "1"  (timeout="10000")
[09:22:40.364]      // while-condition  =>  TRUE
[09:22:40.365]      // while "1"  (timeout="10000")
[09:22:40.365]      // while-condition  =>  TRUE
[09:22:40.365]      // while "1"  (timeout="10000")
[09:22:40.365]      // while-condition  =>  TRUE
[09:22:40.366]      // while "1"  (timeout="10000")
[09:22:40.366]      // while-condition  =>  TRUE
[09:22:40.366]      // while "1"  (timeout="10000")
[09:22:40.367]      // while-condition  =>  TRUE
[09:22:40.367]      // while "1"  (timeout="10000")
[09:22:40.367]      // while-condition  =>  TRUE
[09:22:40.367]      // while "1"  (timeout="10000")
[09:22:40.368]      // while-condition  =>  TRUE
[09:22:40.368]      // while "1"  (timeout="10000")
[09:22:40.368]      // while-condition  =>  TRUE
[09:22:40.369]      // while "1"  (timeout="10000")
[09:22:40.369]      // while-condition  =>  TRUE
[09:22:40.370]      // while "1"  (timeout="10000")
[09:22:40.370]      // while-condition  =>  TRUE
[09:22:40.370]      // while "1"  (timeout="10000")
[09:22:40.370]      // while-condition  =>  TRUE
[09:22:40.371]      // while "1"  (timeout="10000")
[09:22:40.371]      // while-condition  =>  TRUE
[09:22:40.371]      // while "1"  (timeout="10000")
[09:22:40.372]      // while-condition  =>  TRUE
[09:22:40.372]      // while "1"  (timeout="10000")
[09:22:40.372]      // while-condition  =>  TRUE
[09:22:40.372]      // while "1"  (timeout="10000")
[09:22:40.373]      // while-condition  =>  TRUE
[09:22:40.373]      // while "1"  (timeout="10000")
[09:22:40.373]      // while-condition  =>  TRUE
[09:22:40.373]      // while "1"  (timeout="10000")
[09:22:40.374]      // while-condition  =>  TRUE
[09:22:40.374]      // while "1"  (timeout="10000")
[09:22:40.374]      // while-condition  =>  TRUE
[09:22:40.374]      // while "1"  (timeout="10000")
[09:22:40.375]      // while-condition  =>  TRUE
[09:22:40.376]      // while "1"  (timeout="10000")
[09:22:40.376]      // while  =>  TIMEOUT
[09:22:40.376]      // end while "1"
[09:22:40.376]    </control>
[09:22:40.377]    <block atomic="true" info="">
[09:22:40.380]  
[09:22:40.380]  ! W001 : No atomic sequence support in debug unit
[09:22:40.380]  
[09:22:40.382]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:22:40.388]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:22:40.389]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:22:40.390]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:22:40.391]    </block>
[09:22:40.391]    <block atomic="false" info="">
[09:22:40.391]      __errorcontrol = 0x00000001;
[09:22:40.392]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:22:40.392]      ReadDP(0x0);
[09:22:40.394]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:22:40.395]      __errorcontrol = 0x00000000;
[09:22:40.395]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:22:40.395]    </block>
[09:22:40.396]  </sequence>
[09:22:40.396]  
[09:22:40.396]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[09:22:40.396]  
[09:22:40.397]  <debugvars>
[09:22:40.397]    // Pre-defined
[09:22:40.397]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:22:40.398]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:22:40.398]    __dp=0x00000000
[09:22:40.398]    __ap=0x00000000
[09:22:40.398]    __traceout=0x00000000      (Trace Disabled)
[09:22:40.399]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:22:40.399]    __FlashAddr=0x00000000
[09:22:40.399]    __FlashLen=0x00000000
[09:22:40.400]    __FlashArg=0x00000000
[09:22:40.400]    __FlashOp=0x00000000
[09:22:40.400]    __Result=0x00000000
[09:22:40.401]  </debugvars>
[09:22:40.401]  
[09:22:40.401]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:22:40.401]  </sequence>
[09:22:40.402]  
[09:22:40.406]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[09:22:40.406]  
[09:22:40.406]  <debugvars>
[09:22:40.406]    // Pre-defined
[09:22:40.407]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:22:40.407]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:22:40.407]    __dp=0x00000000
[09:22:40.408]    __ap=0x00000000
[09:22:40.408]    __traceout=0x00000000      (Trace Disabled)
[09:22:40.408]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:22:40.409]    __FlashAddr=0x00000000
[09:22:40.409]    __FlashLen=0x00000000
[09:22:40.409]    __FlashArg=0x00000000
[09:22:40.409]    __FlashOp=0x00000000
[09:22:40.410]    __Result=0x00000000
[09:22:40.410]  </debugvars>
[09:22:40.410]  
[09:22:40.411]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:22:40.411]    <block atomic="false" info="">
[09:22:40.411]      __var SW_DP_ABORT  = 0x0;
[09:22:40.411]        // -> [SW_DP_ABORT <= 0x00000000]
[09:22:40.412]      __var DP_CTRL_STAT = 0x4;
[09:22:40.412]        // -> [DP_CTRL_STAT <= 0x00000004]
[09:22:40.412]      __var DP_SELECT    = 0x8;
[09:22:40.412]        // -> [DP_SELECT <= 0x00000008]
[09:22:40.413]      __var powered_down = 0;
[09:22:40.413]        // -> [powered_down <= 0x00000000]
[09:22:40.413]      WriteDP(DP_SELECT, 0x00000000);
[09:22:40.416]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:22:40.416]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:22:40.418]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[09:22:40.418]        // -> [powered_down <= 0x00000001]
[09:22:40.418]    </block>
[09:22:40.418]    <control if="powered_down" while="" timeout="0" info="">
[09:22:40.419]      // if-block "powered_down"
[09:22:40.419]        // =>  TRUE
[09:22:40.419]      <block atomic="false" info="">
[09:22:40.420]        WriteDP(DP_CTRL_STAT, 0x50000000);
[09:22:40.422]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[09:22:40.422]      </block>
[09:22:40.422]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[09:22:40.422]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[09:22:40.425]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:22:40.425]        // while-condition  =>  FALSE
[09:22:40.425]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[09:22:40.425]      </control>
[09:22:40.426]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[09:22:40.426]        // if-block "(__protocol & 0xFFFF) == 1"
[09:22:40.426]          // =>  FALSE
[09:22:40.427]        // skip if-block "(__protocol & 0xFFFF) == 1"
[09:22:40.427]      </control>
[09:22:40.427]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[09:22:40.428]        // if-block "(__protocol & 0xFFFF) == 2"
[09:22:40.428]          // =>  TRUE
[09:22:40.428]        <block atomic="false" info="">
[09:22:40.428]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[09:22:40.431]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[09:22:40.431]          WriteDP(SW_DP_ABORT, 0x0000001E);
[09:22:40.433]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[09:22:40.433]        </block>
[09:22:40.433]        // end if-block "(__protocol & 0xFFFF) == 2"
[09:22:40.433]      </control>
[09:22:40.434]      // end if-block "powered_down"
[09:22:40.434]    </control>
[09:22:40.434]  </sequence>
[09:22:40.435]  
[09:22:40.538]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:22:40.538]  
[09:22:40.539]  <debugvars>
[09:22:40.539]    // Pre-defined
[09:22:40.539]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:22:40.540]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:22:40.540]    __dp=0x00000000
[09:22:40.540]    __ap=0x00000000
[09:22:40.541]    __traceout=0x00000000      (Trace Disabled)
[09:22:40.541]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:22:40.541]    __FlashAddr=0x00000000
[09:22:40.542]    __FlashLen=0x00000000
[09:22:40.542]    __FlashArg=0x00000000
[09:22:40.542]    __FlashOp=0x00000000
[09:22:40.543]    __Result=0x00000000
[09:22:40.543]  </debugvars>
[09:22:40.543]  
[09:22:40.543]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:22:40.544]    <block atomic="true" info="">
[09:22:40.548]  
[09:22:40.548]  ! W001 : No atomic sequence support in debug unit
[09:22:40.548]  
[09:22:40.551]      __var DP_R_IDCODE    = 0x0;
[09:22:40.551]        // -> [DP_R_IDCODE <= 0x00000000]
[09:22:40.552]      __var DP_W_ABORT    = 0x0;
[09:22:40.552]        // -> [DP_W_ABORT <= 0x00000000]
[09:22:40.552]      __var DP_CTRLSTAT = 0x4;
[09:22:40.553]        // -> [DP_CTRLSTAT <= 0x00000004]
[09:22:40.553]      __var DP_W_SELECT    = 0x8;
[09:22:40.553]        // -> [DP_W_SELECT <= 0x00000008]
[09:22:40.554]      __var AP_TAR		= 0x4;
[09:22:40.554]        // -> [AP_TAR <= 0x00000004]
[09:22:40.554]      __var AP_BD0		= 0x0;
[09:22:40.555]        // -> [AP_BD0 <= 0x00000000]
[09:22:40.555]      __var AP_BD1		= 0x4;
[09:22:40.555]        // -> [AP_BD1 <= 0x00000004]
[09:22:40.556]      __var AP_BD2		= 0x8;
[09:22:40.556]        // -> [AP_BD2 <= 0x00000008]
[09:22:40.556]      __var PCWithinFlash = 0;
[09:22:40.556]        // -> [PCWithinFlash <= 0x00000000]
[09:22:40.557]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:22:40.563]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.578]    </block>
[09:22:40.579]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:22:40.579]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:22:40.586]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.586]      // while-condition  =>  FALSE
[09:22:40.587]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:22:40.587]    </control>
[09:22:40.588]    <block atomic="true" info="">
[09:22:40.591]  
[09:22:40.591]  ! W001 : No atomic sequence support in debug unit
[09:22:40.591]  
[09:22:40.593]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:22:40.597]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:22:40.597]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:22:40.600]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.600]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:22:40.603]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:22:40.603]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:22:40.608]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.608]    </block>
[09:22:40.609]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:22:40.609]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.611]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.611]      // while-condition  =>  TRUE
[09:22:40.612]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.614]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.614]      // while-condition  =>  TRUE
[09:22:40.615]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.617]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.617]      // while-condition  =>  TRUE
[09:22:40.618]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.620]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.620]      // while-condition  =>  TRUE
[09:22:40.621]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.623]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.623]      // while-condition  =>  TRUE
[09:22:40.624]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.626]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.626]      // while-condition  =>  TRUE
[09:22:40.627]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.629]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.629]      // while-condition  =>  TRUE
[09:22:40.630]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.632]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.632]      // while-condition  =>  TRUE
[09:22:40.633]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.635]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.635]      // while-condition  =>  TRUE
[09:22:40.636]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.638]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.639]      // while-condition  =>  TRUE
[09:22:40.639]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.641]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.641]      // while-condition  =>  TRUE
[09:22:40.642]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.644]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.644]      // while-condition  =>  TRUE
[09:22:40.645]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.647]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.647]      // while-condition  =>  TRUE
[09:22:40.648]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.650]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.650]      // while-condition  =>  TRUE
[09:22:40.651]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.653]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.653]      // while-condition  =>  TRUE
[09:22:40.654]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.655]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.655]      // while-condition  =>  TRUE
[09:22:40.656]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.657]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.657]      // while-condition  =>  TRUE
[09:22:40.658]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.661]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.661]      // while-condition  =>  TRUE
[09:22:40.661]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.664]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.664]      // while-condition  =>  TRUE
[09:22:40.664]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.667]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.667]      // while-condition  =>  TRUE
[09:22:40.667]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.670]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.670]      // while-condition  =>  TRUE
[09:22:40.670]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.673]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.673]      // while-condition  =>  TRUE
[09:22:40.673]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.676]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.676]      // while-condition  =>  TRUE
[09:22:40.676]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.678]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.678]      // while-condition  =>  TRUE
[09:22:40.678]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.681]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.681]      // while-condition  =>  TRUE
[09:22:40.681]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.684]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.684]      // while-condition  =>  TRUE
[09:22:40.684]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.687]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.687]      // while-condition  =>  TRUE
[09:22:40.687]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.690]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.690]      // while-condition  =>  TRUE
[09:22:40.690]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.693]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.693]      // while-condition  =>  TRUE
[09:22:40.693]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.696]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.696]      // while-condition  =>  TRUE
[09:22:40.696]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.699]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.699]      // while-condition  =>  TRUE
[09:22:40.699]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.702]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.703]      // while-condition  =>  TRUE
[09:22:40.704]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.706]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.707]      // while-condition  =>  TRUE
[09:22:40.708]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.710]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.710]      // while-condition  =>  TRUE
[09:22:40.710]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.713]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.713]      // while-condition  =>  TRUE
[09:22:40.713]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.715]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.715]      // while-condition  =>  TRUE
[09:22:40.715]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.718]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.718]      // while-condition  =>  TRUE
[09:22:40.718]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.721]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.721]      // while-condition  =>  TRUE
[09:22:40.721]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:40.722]      // while  =>  TIMEOUT
[09:22:40.722]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:22:40.722]    </control>
[09:22:40.722]    <block atomic="false" info="">
[09:22:40.723]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:22:40.725]        // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:22:40.725]        // -> [PCWithinFlash <= 0x00000000]
[09:22:40.725]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:22:40.728]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:22:40.729]    </block>
[09:22:40.729]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:22:40.729]      // if-block "PCWithinFlash == 0"
[09:22:40.730]        // =>  TRUE
[09:22:40.730]      // end if-block "PCWithinFlash == 0"
[09:22:40.730]    </control>
[09:22:40.730]  </sequence>
[09:22:40.730]  
[09:22:40.776]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[09:22:40.776]  
[09:22:40.777]  <debugvars>
[09:22:40.777]    // Pre-defined
[09:22:40.777]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:22:40.778]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:22:40.778]    __dp=0x00000000
[09:22:40.778]    __ap=0x00000000
[09:22:40.778]    __traceout=0x00000000      (Trace Disabled)
[09:22:40.779]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:22:40.779]    __FlashAddr=0x00000000
[09:22:40.779]    __FlashLen=0x00000000
[09:22:40.779]    __FlashArg=0x00000000
[09:22:40.780]    __FlashOp=0x00000000
[09:22:40.780]    __Result=0x00000000
[09:22:40.780]  </debugvars>
[09:22:40.780]  
[09:22:40.781]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[09:22:40.781]    <block atomic="false" info="">
[09:22:40.781]    </block>
[09:22:40.781]  </sequence>
[09:22:40.782]  
[09:22:40.784]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[09:22:40.784]  
[09:22:40.784]  <debugvars>
[09:22:40.785]    // Pre-defined
[09:22:40.785]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:22:40.785]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:22:40.785]    __dp=0x00000000
[09:22:40.786]    __ap=0x00000000
[09:22:40.786]    __traceout=0x00000000      (Trace Disabled)
[09:22:40.786]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:22:40.786]    __FlashAddr=0x00000000
[09:22:40.787]    __FlashLen=0x00000000
[09:22:40.787]    __FlashArg=0x00000000
[09:22:40.787]    __FlashOp=0x00000000
[09:22:40.788]    __Result=0x00000000
[09:22:40.788]  </debugvars>
[09:22:40.788]  
[09:22:40.788]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:22:40.789]    <block atomic="false" info="">
[09:22:40.789]      __var nReset      = 0x80;
[09:22:40.789]        // -> [nReset <= 0x00000080]
[09:22:40.789]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:22:40.791]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:22:40.791]    </block>
[09:22:40.791]    <control if="" while="1" timeout="50000" info="">
[09:22:40.792]      // while "1"  (timeout="50000")
[09:22:40.792]      // while-condition  =>  TRUE
[09:22:40.792]      // while "1"  (timeout="50000")
[09:22:40.792]      // while-condition  =>  TRUE
[09:22:40.793]      // while "1"  (timeout="50000")
[09:22:40.793]      // while-condition  =>  TRUE
[09:22:40.793]      // while "1"  (timeout="50000")
[09:22:40.793]      // while-condition  =>  TRUE
[09:22:40.794]      // while "1"  (timeout="50000")
[09:22:40.794]      // while-condition  =>  TRUE
[09:22:40.794]      // while "1"  (timeout="50000")
[09:22:40.794]      // while-condition  =>  TRUE
[09:22:40.795]      // while "1"  (timeout="50000")
[09:22:40.795]      // while-condition  =>  TRUE
[09:22:40.795]      // while "1"  (timeout="50000")
[09:22:40.795]      // while-condition  =>  TRUE
[09:22:40.796]      // while "1"  (timeout="50000")
[09:22:40.796]      // while-condition  =>  TRUE
[09:22:40.796]      // while "1"  (timeout="50000")
[09:22:40.796]      // while-condition  =>  TRUE
[09:22:40.797]      // while "1"  (timeout="50000")
[09:22:40.797]      // while-condition  =>  TRUE
[09:22:40.797]      // while "1"  (timeout="50000")
[09:22:40.797]      // while-condition  =>  TRUE
[09:22:40.797]      // while "1"  (timeout="50000")
[09:22:40.798]      // while-condition  =>  TRUE
[09:22:40.798]      // while "1"  (timeout="50000")
[09:22:40.798]      // while-condition  =>  TRUE
[09:22:40.798]      // while "1"  (timeout="50000")
[09:22:40.799]      // while-condition  =>  TRUE
[09:22:40.799]      // while "1"  (timeout="50000")
[09:22:40.799]      // while-condition  =>  TRUE
[09:22:40.799]      // while "1"  (timeout="50000")
[09:22:40.800]      // while-condition  =>  TRUE
[09:22:40.800]      // while "1"  (timeout="50000")
[09:22:40.800]      // while-condition  =>  TRUE
[09:22:40.800]      // while "1"  (timeout="50000")
[09:22:40.801]      // while-condition  =>  TRUE
[09:22:40.801]      // while "1"  (timeout="50000")
[09:22:40.801]      // while-condition  =>  TRUE
[09:22:40.801]      // while "1"  (timeout="50000")
[09:22:40.802]      // while-condition  =>  TRUE
[09:22:40.802]      // while "1"  (timeout="50000")
[09:22:40.802]      // while-condition  =>  TRUE
[09:22:40.802]      // while "1"  (timeout="50000")
[09:22:40.802]      // while-condition  =>  TRUE
[09:22:40.803]      // while "1"  (timeout="50000")
[09:22:40.803]      // while-condition  =>  TRUE
[09:22:40.803]      // while "1"  (timeout="50000")
[09:22:40.803]      // while-condition  =>  TRUE
[09:22:40.804]      // while "1"  (timeout="50000")
[09:22:40.804]      // while-condition  =>  TRUE
[09:22:40.804]      // while "1"  (timeout="50000")
[09:22:40.804]      // while-condition  =>  TRUE
[09:22:40.804]      // while "1"  (timeout="50000")
[09:22:40.805]      // while-condition  =>  TRUE
[09:22:40.805]      // while "1"  (timeout="50000")
[09:22:40.805]      // while-condition  =>  TRUE
[09:22:40.806]      // while "1"  (timeout="50000")
[09:22:40.806]      // while-condition  =>  TRUE
[09:22:40.807]      // while "1"  (timeout="50000")
[09:22:40.807]      // while-condition  =>  TRUE
[09:22:40.807]      // while "1"  (timeout="50000")
[09:22:40.807]      // while-condition  =>  TRUE
[09:22:40.808]      // while "1"  (timeout="50000")
[09:22:40.808]      // while-condition  =>  TRUE
[09:22:40.808]      // while "1"  (timeout="50000")
[09:22:40.808]      // while-condition  =>  TRUE
[09:22:40.809]      // while "1"  (timeout="50000")
[09:22:40.809]      // while-condition  =>  TRUE
[09:22:40.809]      // while "1"  (timeout="50000")
[09:22:40.809]      // while-condition  =>  TRUE
[09:22:40.809]      // while "1"  (timeout="50000")
[09:22:40.810]      // while-condition  =>  TRUE
[09:22:40.810]      // while "1"  (timeout="50000")
[09:22:40.810]      // while-condition  =>  TRUE
[09:22:40.810]      // while "1"  (timeout="50000")
[09:22:40.811]      // while-condition  =>  TRUE
[09:22:40.811]      // while "1"  (timeout="50000")
[09:22:40.811]      // while-condition  =>  TRUE
[09:22:40.811]      // while "1"  (timeout="50000")
[09:22:40.812]      // while-condition  =>  TRUE
[09:22:40.812]      // while "1"  (timeout="50000")
[09:22:40.812]      // while-condition  =>  TRUE
[09:22:40.812]      // while "1"  (timeout="50000")
[09:22:40.813]      // while-condition  =>  TRUE
[09:22:40.813]      // while "1"  (timeout="50000")
[09:22:40.813]      // while-condition  =>  TRUE
[09:22:40.813]      // while "1"  (timeout="50000")
[09:22:40.813]      // while-condition  =>  TRUE
[09:22:40.814]      // while "1"  (timeout="50000")
[09:22:40.814]      // while-condition  =>  TRUE
[09:22:40.814]      // while "1"  (timeout="50000")
[09:22:40.814]      // while-condition  =>  TRUE
[09:22:40.815]      // while "1"  (timeout="50000")
[09:22:40.815]      // while-condition  =>  TRUE
[09:22:40.815]      // while "1"  (timeout="50000")
[09:22:40.815]      // while-condition  =>  TRUE
[09:22:40.816]      // while "1"  (timeout="50000")
[09:22:40.816]      // while-condition  =>  TRUE
[09:22:40.816]      // while "1"  (timeout="50000")
[09:22:40.816]      // while-condition  =>  TRUE
[09:22:40.817]      // while "1"  (timeout="50000")
[09:22:40.817]      // while-condition  =>  TRUE
[09:22:40.817]      // while "1"  (timeout="50000")
[09:22:40.817]      // while-condition  =>  TRUE
[09:22:40.817]      // while "1"  (timeout="50000")
[09:22:40.818]      // while-condition  =>  TRUE
[09:22:40.818]      // while "1"  (timeout="50000")
[09:22:40.818]      // while-condition  =>  TRUE
[09:22:40.818]      // while "1"  (timeout="50000")
[09:22:40.819]      // while-condition  =>  TRUE
[09:22:40.819]      // while "1"  (timeout="50000")
[09:22:40.819]      // while-condition  =>  TRUE
[09:22:40.819]      // while "1"  (timeout="50000")
[09:22:40.820]      // while-condition  =>  TRUE
[09:22:40.820]      // while "1"  (timeout="50000")
[09:22:40.820]      // while-condition  =>  TRUE
[09:22:40.820]      // while "1"  (timeout="50000")
[09:22:40.821]      // while-condition  =>  TRUE
[09:22:40.821]      // while "1"  (timeout="50000")
[09:22:40.821]      // while-condition  =>  TRUE
[09:22:40.821]      // while "1"  (timeout="50000")
[09:22:40.821]      // while-condition  =>  TRUE
[09:22:40.822]      // while "1"  (timeout="50000")
[09:22:40.822]      // while-condition  =>  TRUE
[09:22:40.822]      // while "1"  (timeout="50000")
[09:22:40.823]      // while-condition  =>  TRUE
[09:22:40.823]      // while "1"  (timeout="50000")
[09:22:40.823]      // while-condition  =>  TRUE
[09:22:40.823]      // while "1"  (timeout="50000")
[09:22:40.823]      // while-condition  =>  TRUE
[09:22:40.824]      // while "1"  (timeout="50000")
[09:22:40.824]      // while-condition  =>  TRUE
[09:22:40.824]      // while "1"  (timeout="50000")
[09:22:40.824]      // while-condition  =>  TRUE
[09:22:40.825]      // while "1"  (timeout="50000")
[09:22:40.825]      // while-condition  =>  TRUE
[09:22:40.825]      // while "1"  (timeout="50000")
[09:22:40.825]      // while-condition  =>  TRUE
[09:22:40.826]      // while "1"  (timeout="50000")
[09:22:40.826]      // while-condition  =>  TRUE
[09:22:40.826]      // while "1"  (timeout="50000")
[09:22:40.826]      // while-condition  =>  TRUE
[09:22:40.826]      // while "1"  (timeout="50000")
[09:22:40.827]      // while-condition  =>  TRUE
[09:22:40.827]      // while "1"  (timeout="50000")
[09:22:40.827]      // while-condition  =>  TRUE
[09:22:40.827]      // while "1"  (timeout="50000")
[09:22:40.828]      // while-condition  =>  TRUE
[09:22:40.828]      // while "1"  (timeout="50000")
[09:22:40.828]      // while-condition  =>  TRUE
[09:22:40.828]      // while "1"  (timeout="50000")
[09:22:40.829]      // while-condition  =>  TRUE
[09:22:40.829]      // while "1"  (timeout="50000")
[09:22:40.829]      // while-condition  =>  TRUE
[09:22:40.829]      // while "1"  (timeout="50000")
[09:22:40.830]      // while-condition  =>  TRUE
[09:22:40.830]      // while "1"  (timeout="50000")
[09:22:40.830]      // while-condition  =>  TRUE
[09:22:40.830]      // while "1"  (timeout="50000")
[09:22:40.831]      // while-condition  =>  TRUE
[09:22:40.831]      // while "1"  (timeout="50000")
[09:22:40.831]      // while-condition  =>  TRUE
[09:22:40.831]      // while "1"  (timeout="50000")
[09:22:40.831]      // while-condition  =>  TRUE
[09:22:40.832]      // while "1"  (timeout="50000")
[09:22:40.832]      // while-condition  =>  TRUE
[09:22:40.832]      // while "1"  (timeout="50000")
[09:22:40.832]      // while-condition  =>  TRUE
[09:22:40.833]      // while "1"  (timeout="50000")
[09:22:40.833]      // while-condition  =>  TRUE
[09:22:40.833]      // while "1"  (timeout="50000")
[09:22:40.833]      // while-condition  =>  TRUE
[09:22:40.834]      // while "1"  (timeout="50000")
[09:22:40.834]      // while-condition  =>  TRUE
[09:22:40.834]      // while "1"  (timeout="50000")
[09:22:40.834]      // while-condition  =>  TRUE
[09:22:40.834]      // while "1"  (timeout="50000")
[09:22:40.835]      // while-condition  =>  TRUE
[09:22:40.835]      // while "1"  (timeout="50000")
[09:22:40.835]      // while-condition  =>  TRUE
[09:22:40.835]      // while "1"  (timeout="50000")
[09:22:40.836]      // while-condition  =>  TRUE
[09:22:40.836]      // while "1"  (timeout="50000")
[09:22:40.836]      // while-condition  =>  TRUE
[09:22:40.837]      // while "1"  (timeout="50000")
[09:22:40.837]      // while-condition  =>  TRUE
[09:22:40.837]      // while "1"  (timeout="50000")
[09:22:40.837]      // while-condition  =>  TRUE
[09:22:40.838]      // while "1"  (timeout="50000")
[09:22:40.838]      // while-condition  =>  TRUE
[09:22:40.838]      // while "1"  (timeout="50000")
[09:22:40.838]      // while-condition  =>  TRUE
[09:22:40.839]      // while "1"  (timeout="50000")
[09:22:40.839]      // while-condition  =>  TRUE
[09:22:40.839]      // while "1"  (timeout="50000")
[09:22:40.839]      // while-condition  =>  TRUE
[09:22:40.839]      // while "1"  (timeout="50000")
[09:22:40.840]      // while-condition  =>  TRUE
[09:22:40.840]      // while "1"  (timeout="50000")
[09:22:40.840]      // while-condition  =>  TRUE
[09:22:40.840]      // while "1"  (timeout="50000")
[09:22:40.841]      // while-condition  =>  TRUE
[09:22:40.841]      // while "1"  (timeout="50000")
[09:22:40.841]      // while-condition  =>  TRUE
[09:22:40.841]      // while "1"  (timeout="50000")
[09:22:40.842]      // while-condition  =>  TRUE
[09:22:40.842]      // while "1"  (timeout="50000")
[09:22:40.842]      // while-condition  =>  TRUE
[09:22:40.842]      // while "1"  (timeout="50000")
[09:22:40.843]      // while-condition  =>  TRUE
[09:22:40.843]      // while "1"  (timeout="50000")
[09:22:40.843]      // while  =>  TIMEOUT
[09:22:40.843]      // end while "1"
[09:22:40.843]    </control>
[09:22:40.844]    <block atomic="false" info="">
[09:22:40.844]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:22:40.846]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:22:40.846]    </block>
[09:22:40.847]    <control if="" while="1" timeout="10000" info="">
[09:22:40.847]      // while "1"  (timeout="10000")
[09:22:40.847]      // while-condition  =>  TRUE
[09:22:40.848]      // while "1"  (timeout="10000")
[09:22:40.848]      // while-condition  =>  TRUE
[09:22:40.848]      // while "1"  (timeout="10000")
[09:22:40.848]      // while-condition  =>  TRUE
[09:22:40.849]      // while "1"  (timeout="10000")
[09:22:40.849]      // while-condition  =>  TRUE
[09:22:40.849]      // while "1"  (timeout="10000")
[09:22:40.849]      // while-condition  =>  TRUE
[09:22:40.850]      // while "1"  (timeout="10000")
[09:22:40.850]      // while-condition  =>  TRUE
[09:22:40.850]      // while "1"  (timeout="10000")
[09:22:40.850]      // while-condition  =>  TRUE
[09:22:40.850]      // while "1"  (timeout="10000")
[09:22:40.851]      // while-condition  =>  TRUE
[09:22:40.851]      // while "1"  (timeout="10000")
[09:22:40.851]      // while-condition  =>  TRUE
[09:22:40.851]      // while "1"  (timeout="10000")
[09:22:40.852]      // while-condition  =>  TRUE
[09:22:40.852]      // while "1"  (timeout="10000")
[09:22:40.852]      // while-condition  =>  TRUE
[09:22:40.852]      // while "1"  (timeout="10000")
[09:22:40.853]      // while-condition  =>  TRUE
[09:22:40.853]      // while "1"  (timeout="10000")
[09:22:40.853]      // while-condition  =>  TRUE
[09:22:40.853]      // while "1"  (timeout="10000")
[09:22:40.854]      // while-condition  =>  TRUE
[09:22:40.854]      // while "1"  (timeout="10000")
[09:22:40.854]      // while-condition  =>  TRUE
[09:22:40.854]      // while "1"  (timeout="10000")
[09:22:40.855]      // while-condition  =>  TRUE
[09:22:40.855]      // while "1"  (timeout="10000")
[09:22:40.855]      // while-condition  =>  TRUE
[09:22:40.855]      // while "1"  (timeout="10000")
[09:22:40.856]      // while-condition  =>  TRUE
[09:22:40.856]      // while "1"  (timeout="10000")
[09:22:40.856]      // while-condition  =>  TRUE
[09:22:40.856]      // while "1"  (timeout="10000")
[09:22:40.857]      // while-condition  =>  TRUE
[09:22:40.857]      // while "1"  (timeout="10000")
[09:22:40.857]      // while-condition  =>  TRUE
[09:22:40.857]      // while "1"  (timeout="10000")
[09:22:40.858]      // while-condition  =>  TRUE
[09:22:40.858]      // while "1"  (timeout="10000")
[09:22:40.858]      // while-condition  =>  TRUE
[09:22:40.858]      // while "1"  (timeout="10000")
[09:22:40.858]      // while-condition  =>  TRUE
[09:22:40.859]      // while "1"  (timeout="10000")
[09:22:40.859]      // while  =>  TIMEOUT
[09:22:40.859]      // end while "1"
[09:22:40.859]    </control>
[09:22:40.860]    <block atomic="true" info="">
[09:22:40.864]  
[09:22:40.864]  ! W001 : No atomic sequence support in debug unit
[09:22:40.864]  
[09:22:40.867]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:22:40.869]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:22:40.869]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:22:40.872]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:22:40.873]    </block>
[09:22:40.873]    <block atomic="false" info="">
[09:22:40.873]      __errorcontrol = 0x00000001;
[09:22:40.873]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:22:40.874]      ReadDP(0x0);
[09:22:40.875]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:22:40.875]      __errorcontrol = 0x00000000;
[09:22:40.876]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:22:40.876]    </block>
[09:22:40.876]  </sequence>
[09:22:40.876]  
[09:22:40.880]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[09:22:40.880]  
[09:22:40.881]  <debugvars>
[09:22:40.881]    // Pre-defined
[09:22:40.881]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:22:40.881]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:22:40.882]    __dp=0x00000000
[09:22:40.882]    __ap=0x00000000
[09:22:40.883]    __traceout=0x00000000      (Trace Disabled)
[09:22:40.883]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:22:40.883]    __FlashAddr=0x00000000
[09:22:40.883]    __FlashLen=0x00000000
[09:22:40.884]    __FlashArg=0x00000000
[09:22:40.884]    __FlashOp=0x00000000
[09:22:40.884]    __Result=0x00000000
[09:22:40.884]  </debugvars>
[09:22:40.885]  
[09:22:40.885]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[09:22:40.885]    <block atomic="false" info="">
[09:22:40.885]    </block>
[09:22:40.885]  </sequence>
[09:22:40.886]  
[09:22:41.122]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[09:22:41.122]  
[09:22:41.122]  <debugvars>
[09:22:41.123]    // Pre-defined
[09:22:41.124]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:22:41.124]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:22:41.125]    __dp=0x00000000
[09:22:41.125]    __ap=0x00000000
[09:22:41.126]    __traceout=0x00000000      (Trace Disabled)
[09:22:41.126]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:22:41.127]    __FlashAddr=0x00000000
[09:22:41.128]    __FlashLen=0x00000000
[09:22:41.128]    __FlashArg=0x00000000
[09:22:41.128]    __FlashOp=0x00000000
[09:22:41.129]    __Result=0x00000000
[09:22:41.129]  </debugvars>
[09:22:41.130]  
[09:22:41.130]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[09:22:41.131]    <block atomic="false" info="">
[09:22:41.132]      Sequence("ResetHardware");
[09:22:41.132]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[09:22:41.133]          <block atomic="false" info="">
[09:22:41.133]            __var nReset      = 0x80;
[09:22:41.133]              // -> [nReset <= 0x00000080]
[09:22:41.134]            DAP_SWJ_Pins(0x00, nReset, 0);
[09:22:41.137]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:22:41.137]          </block>
[09:22:41.138]          <control if="" while="1" timeout="50000" info="">
[09:22:41.138]            // while "1"  (timeout="50000")
[09:22:41.138]            // while-condition  =>  TRUE
[09:22:41.139]            // while "1"  (timeout="50000")
[09:22:41.139]            // while-condition  =>  TRUE
[09:22:41.140]            // while "1"  (timeout="50000")
[09:22:41.140]            // while-condition  =>  TRUE
[09:22:41.140]            // while "1"  (timeout="50000")
[09:22:41.141]            // while-condition  =>  TRUE
[09:22:41.141]            // while "1"  (timeout="50000")
[09:22:41.141]            // while-condition  =>  TRUE
[09:22:41.142]            // while "1"  (timeout="50000")
[09:22:41.142]            // while-condition  =>  TRUE
[09:22:41.142]            // while "1"  (timeout="50000")
[09:22:41.143]            // while-condition  =>  TRUE
[09:22:41.143]            // while "1"  (timeout="50000")
[09:22:41.143]            // while-condition  =>  TRUE
[09:22:41.143]            // while "1"  (timeout="50000")
[09:22:41.144]            // while-condition  =>  TRUE
[09:22:41.144]            // while "1"  (timeout="50000")
[09:22:41.144]            // while-condition  =>  TRUE
[09:22:41.145]            // while "1"  (timeout="50000")
[09:22:41.145]            // while-condition  =>  TRUE
[09:22:41.145]            // while "1"  (timeout="50000")
[09:22:41.146]            // while-condition  =>  TRUE
[09:22:41.146]            // while "1"  (timeout="50000")
[09:22:41.146]            // while-condition  =>  TRUE
[09:22:41.146]            // while "1"  (timeout="50000")
[09:22:41.146]            // while-condition  =>  TRUE
[09:22:41.147]            // while "1"  (timeout="50000")
[09:22:41.147]            // while-condition  =>  TRUE
[09:22:41.147]            // while "1"  (timeout="50000")
[09:22:41.148]            // while-condition  =>  TRUE
[09:22:41.148]            // while "1"  (timeout="50000")
[09:22:41.148]            // while-condition  =>  TRUE
[09:22:41.148]            // while "1"  (timeout="50000")
[09:22:41.149]            // while-condition  =>  TRUE
[09:22:41.149]            // while "1"  (timeout="50000")
[09:22:41.150]            // while-condition  =>  TRUE
[09:22:41.150]            // while "1"  (timeout="50000")
[09:22:41.150]            // while-condition  =>  TRUE
[09:22:41.151]            // while "1"  (timeout="50000")
[09:22:41.151]            // while-condition  =>  TRUE
[09:22:41.151]            // while "1"  (timeout="50000")
[09:22:41.151]            // while-condition  =>  TRUE
[09:22:41.152]            // while "1"  (timeout="50000")
[09:22:41.152]            // while-condition  =>  TRUE
[09:22:41.152]            // while "1"  (timeout="50000")
[09:22:41.153]            // while-condition  =>  TRUE
[09:22:41.153]            // while "1"  (timeout="50000")
[09:22:41.153]            // while-condition  =>  TRUE
[09:22:41.153]            // while "1"  (timeout="50000")
[09:22:41.153]            // while-condition  =>  TRUE
[09:22:41.154]            // while "1"  (timeout="50000")
[09:22:41.154]            // while-condition  =>  TRUE
[09:22:41.155]            // while "1"  (timeout="50000")
[09:22:41.155]            // while-condition  =>  TRUE
[09:22:41.155]            // while "1"  (timeout="50000")
[09:22:41.155]            // while-condition  =>  TRUE
[09:22:41.155]            // while "1"  (timeout="50000")
[09:22:41.156]            // while-condition  =>  TRUE
[09:22:41.156]            // while "1"  (timeout="50000")
[09:22:41.156]            // while-condition  =>  TRUE
[09:22:41.157]            // while "1"  (timeout="50000")
[09:22:41.157]            // while-condition  =>  TRUE
[09:22:41.158]            // while "1"  (timeout="50000")
[09:22:41.158]            // while-condition  =>  TRUE
[09:22:41.158]            // while "1"  (timeout="50000")
[09:22:41.158]            // while-condition  =>  TRUE
[09:22:41.158]            // while "1"  (timeout="50000")
[09:22:41.158]            // while-condition  =>  TRUE
[09:22:41.159]            // while "1"  (timeout="50000")
[09:22:41.159]            // while-condition  =>  TRUE
[09:22:41.159]            // while "1"  (timeout="50000")
[09:22:41.159]            // while-condition  =>  TRUE
[09:22:41.159]            // while "1"  (timeout="50000")
[09:22:41.160]            // while-condition  =>  TRUE
[09:22:41.160]            // while "1"  (timeout="50000")
[09:22:41.160]            // while-condition  =>  TRUE
[09:22:41.161]            // while "1"  (timeout="50000")
[09:22:41.161]            // while-condition  =>  TRUE
[09:22:41.161]            // while "1"  (timeout="50000")
[09:22:41.161]            // while-condition  =>  TRUE
[09:22:41.161]            // while "1"  (timeout="50000")
[09:22:41.162]            // while-condition  =>  TRUE
[09:22:41.162]            // while "1"  (timeout="50000")
[09:22:41.162]            // while-condition  =>  TRUE
[09:22:41.162]            // while "1"  (timeout="50000")
[09:22:41.162]            // while-condition  =>  TRUE
[09:22:41.162]            // while "1"  (timeout="50000")
[09:22:41.162]            // while-condition  =>  TRUE
[09:22:41.163]            // while "1"  (timeout="50000")
[09:22:41.163]            // while-condition  =>  TRUE
[09:22:41.163]            // while "1"  (timeout="50000")
[09:22:41.163]            // while-condition  =>  TRUE
[09:22:41.163]            // while "1"  (timeout="50000")
[09:22:41.164]            // while-condition  =>  TRUE
[09:22:41.164]            // while "1"  (timeout="50000")
[09:22:41.164]            // while-condition  =>  TRUE
[09:22:41.164]            // while "1"  (timeout="50000")
[09:22:41.164]            // while-condition  =>  TRUE
[09:22:41.165]            // while "1"  (timeout="50000")
[09:22:41.165]            // while-condition  =>  TRUE
[09:22:41.165]            // while "1"  (timeout="50000")
[09:22:41.165]            // while-condition  =>  TRUE
[09:22:41.166]            // while "1"  (timeout="50000")
[09:22:41.166]            // while-condition  =>  TRUE
[09:22:41.166]            // while "1"  (timeout="50000")
[09:22:41.166]            // while-condition  =>  TRUE
[09:22:41.166]            // while "1"  (timeout="50000")
[09:22:41.167]            // while-condition  =>  TRUE
[09:22:41.167]            // while "1"  (timeout="50000")
[09:22:41.167]            // while-condition  =>  TRUE
[09:22:41.167]            // while "1"  (timeout="50000")
[09:22:41.167]            // while-condition  =>  TRUE
[09:22:41.167]            // while "1"  (timeout="50000")
[09:22:41.167]            // while-condition  =>  TRUE
[09:22:41.167]            // while "1"  (timeout="50000")
[09:22:41.168]            // while-condition  =>  TRUE
[09:22:41.168]            // while "1"  (timeout="50000")
[09:22:41.168]            // while-condition  =>  TRUE
[09:22:41.168]            // while "1"  (timeout="50000")
[09:22:41.168]            // while-condition  =>  TRUE
[09:22:41.169]            // while "1"  (timeout="50000")
[09:22:41.169]            // while-condition  =>  TRUE
[09:22:41.169]            // while "1"  (timeout="50000")
[09:22:41.170]            // while-condition  =>  TRUE
[09:22:41.170]            // while "1"  (timeout="50000")
[09:22:41.170]            // while-condition  =>  TRUE
[09:22:41.170]            // while "1"  (timeout="50000")
[09:22:41.170]            // while-condition  =>  TRUE
[09:22:41.171]            // while "1"  (timeout="50000")
[09:22:41.171]            // while-condition  =>  TRUE
[09:22:41.171]            // while "1"  (timeout="50000")
[09:22:41.171]            // while-condition  =>  TRUE
[09:22:41.173]            // while "1"  (timeout="50000")
[09:22:41.173]            // while-condition  =>  TRUE
[09:22:41.173]            // while "1"  (timeout="50000")
[09:22:41.173]            // while-condition  =>  TRUE
[09:22:41.173]            // while "1"  (timeout="50000")
[09:22:41.173]            // while-condition  =>  TRUE
[09:22:41.174]            // while "1"  (timeout="50000")
[09:22:41.174]            // while-condition  =>  TRUE
[09:22:41.174]            // while "1"  (timeout="50000")
[09:22:41.174]            // while-condition  =>  TRUE
[09:22:41.174]            // while "1"  (timeout="50000")
[09:22:41.174]            // while-condition  =>  TRUE
[09:22:41.175]            // while "1"  (timeout="50000")
[09:22:41.175]            // while-condition  =>  TRUE
[09:22:41.175]            // while "1"  (timeout="50000")
[09:22:41.175]            // while-condition  =>  TRUE
[09:22:41.176]            // while "1"  (timeout="50000")
[09:22:41.176]            // while-condition  =>  TRUE
[09:22:41.176]            // while "1"  (timeout="50000")
[09:22:41.176]            // while-condition  =>  TRUE
[09:22:41.176]            // while "1"  (timeout="50000")
[09:22:41.177]            // while-condition  =>  TRUE
[09:22:41.177]            // while "1"  (timeout="50000")
[09:22:41.177]            // while-condition  =>  TRUE
[09:22:41.177]            // while "1"  (timeout="50000")
[09:22:41.177]            // while-condition  =>  TRUE
[09:22:41.178]            // while "1"  (timeout="50000")
[09:22:41.178]            // while-condition  =>  TRUE
[09:22:41.178]            // while "1"  (timeout="50000")
[09:22:41.178]            // while-condition  =>  TRUE
[09:22:41.178]            // while "1"  (timeout="50000")
[09:22:41.178]            // while-condition  =>  TRUE
[09:22:41.179]            // while "1"  (timeout="50000")
[09:22:41.179]            // while-condition  =>  TRUE
[09:22:41.179]            // while "1"  (timeout="50000")
[09:22:41.179]            // while-condition  =>  TRUE
[09:22:41.179]            // while "1"  (timeout="50000")
[09:22:41.180]            // while-condition  =>  TRUE
[09:22:41.180]            // while "1"  (timeout="50000")
[09:22:41.180]            // while-condition  =>  TRUE
[09:22:41.180]            // while "1"  (timeout="50000")
[09:22:41.181]            // while-condition  =>  TRUE
[09:22:41.181]            // while "1"  (timeout="50000")
[09:22:41.181]            // while-condition  =>  TRUE
[09:22:41.181]            // while "1"  (timeout="50000")
[09:22:41.182]            // while-condition  =>  TRUE
[09:22:41.182]            // while "1"  (timeout="50000")
[09:22:41.182]            // while-condition  =>  TRUE
[09:22:41.182]            // while "1"  (timeout="50000")
[09:22:41.182]            // while-condition  =>  TRUE
[09:22:41.182]            // while "1"  (timeout="50000")
[09:22:41.183]            // while-condition  =>  TRUE
[09:22:41.183]            // while "1"  (timeout="50000")
[09:22:41.183]            // while-condition  =>  TRUE
[09:22:41.183]            // while "1"  (timeout="50000")
[09:22:41.183]            // while-condition  =>  TRUE
[09:22:41.184]            // while "1"  (timeout="50000")
[09:22:41.184]            // while-condition  =>  TRUE
[09:22:41.184]            // while "1"  (timeout="50000")
[09:22:41.184]            // while-condition  =>  TRUE
[09:22:41.184]            // while "1"  (timeout="50000")
[09:22:41.185]            // while-condition  =>  TRUE
[09:22:41.185]            // while "1"  (timeout="50000")
[09:22:41.185]            // while-condition  =>  TRUE
[09:22:41.185]            // while "1"  (timeout="50000")
[09:22:41.185]            // while-condition  =>  TRUE
[09:22:41.186]            // while "1"  (timeout="50000")
[09:22:41.186]            // while-condition  =>  TRUE
[09:22:41.186]            // while "1"  (timeout="50000")
[09:22:41.186]            // while-condition  =>  TRUE
[09:22:41.186]            // while "1"  (timeout="50000")
[09:22:41.186]            // while-condition  =>  TRUE
[09:22:41.186]            // while "1"  (timeout="50000")
[09:22:41.187]            // while-condition  =>  TRUE
[09:22:41.187]            // while "1"  (timeout="50000")
[09:22:41.188]            // while  =>  TIMEOUT
[09:22:41.188]            // end while "1"
[09:22:41.188]          </control>
[09:22:41.188]          <block atomic="false" info="">
[09:22:41.188]            DAP_SWJ_Pins(nReset, nReset, 0);
[09:22:41.191]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:22:41.191]          </block>
[09:22:41.191]          <control if="" while="1" timeout="10000" info="">
[09:22:41.191]            // while "1"  (timeout="10000")
[09:22:41.192]            // while-condition  =>  TRUE
[09:22:41.192]            // while "1"  (timeout="10000")
[09:22:41.192]            // while-condition  =>  TRUE
[09:22:41.192]            // while "1"  (timeout="10000")
[09:22:41.192]            // while-condition  =>  TRUE
[09:22:41.193]            // while "1"  (timeout="10000")
[09:22:41.193]            // while-condition  =>  TRUE
[09:22:41.193]            // while "1"  (timeout="10000")
[09:22:41.193]            // while-condition  =>  TRUE
[09:22:41.194]            // while "1"  (timeout="10000")
[09:22:41.194]            // while-condition  =>  TRUE
[09:22:41.194]            // while "1"  (timeout="10000")
[09:22:41.194]            // while-condition  =>  TRUE
[09:22:41.195]            // while "1"  (timeout="10000")
[09:22:41.195]            // while-condition  =>  TRUE
[09:22:41.195]            // while "1"  (timeout="10000")
[09:22:41.195]            // while-condition  =>  TRUE
[09:22:41.195]            // while "1"  (timeout="10000")
[09:22:41.196]            // while-condition  =>  TRUE
[09:22:41.196]            // while "1"  (timeout="10000")
[09:22:41.196]            // while-condition  =>  TRUE
[09:22:41.196]            // while "1"  (timeout="10000")
[09:22:41.196]            // while-condition  =>  TRUE
[09:22:41.196]            // while "1"  (timeout="10000")
[09:22:41.197]            // while-condition  =>  TRUE
[09:22:41.197]            // while "1"  (timeout="10000")
[09:22:41.197]            // while-condition  =>  TRUE
[09:22:41.197]            // while "1"  (timeout="10000")
[09:22:41.197]            // while-condition  =>  TRUE
[09:22:41.197]            // while "1"  (timeout="10000")
[09:22:41.197]            // while-condition  =>  TRUE
[09:22:41.198]            // while "1"  (timeout="10000")
[09:22:41.198]            // while-condition  =>  TRUE
[09:22:41.198]            // while "1"  (timeout="10000")
[09:22:41.198]            // while-condition  =>  TRUE
[09:22:41.198]            // while "1"  (timeout="10000")
[09:22:41.199]            // while-condition  =>  TRUE
[09:22:41.199]            // while "1"  (timeout="10000")
[09:22:41.199]            // while-condition  =>  TRUE
[09:22:41.199]            // while "1"  (timeout="10000")
[09:22:41.199]            // while-condition  =>  TRUE
[09:22:41.200]            // while "1"  (timeout="10000")
[09:22:41.200]            // while-condition  =>  TRUE
[09:22:41.200]            // while "1"  (timeout="10000")
[09:22:41.201]            // while-condition  =>  TRUE
[09:22:41.201]            // while "1"  (timeout="10000")
[09:22:41.201]            // while-condition  =>  TRUE
[09:22:41.201]            // while "1"  (timeout="10000")
[09:22:41.201]            // while-condition  =>  TRUE
[09:22:41.201]            // while "1"  (timeout="10000")
[09:22:41.201]            // while-condition  =>  TRUE
[09:22:41.201]            // while "1"  (timeout="10000")
[09:22:41.201]            // while-condition  =>  TRUE
[09:22:41.202]            // while "1"  (timeout="10000")
[09:22:41.202]            // while  =>  TIMEOUT
[09:22:41.202]            // end while "1"
[09:22:41.202]          </control>
[09:22:41.202]          <block atomic="true" info="">
[09:22:41.206]  
[09:22:41.206]  ! W001 : No atomic sequence support in debug unit
[09:22:41.206]  
[09:22:41.208]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[09:22:41.211]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[09:22:41.212]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[09:22:41.215]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[09:22:41.215]          </block>
[09:22:41.216]          <block atomic="false" info="">
[09:22:41.216]            __errorcontrol = 0x00000001;
[09:22:41.216]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[09:22:41.217]            ReadDP(0x0);
[09:22:41.219]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[09:22:41.220]            __errorcontrol = 0x00000000;
[09:22:41.221]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[09:22:41.221]          </block>
[09:22:41.221]        </sequence>
[09:22:41.221]      Sequence("DebugPortSetup");
[09:22:41.223]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[09:22:41.223]        </sequence>
[09:22:41.224]      Sequence("DebugPortStart");
[09:22:41.224]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[09:22:41.225]          <block atomic="false" info="">
[09:22:41.225]            __var SW_DP_ABORT  = 0x0;
[09:22:41.226]              // -> [SW_DP_ABORT <= 0x00000000]
[09:22:41.226]            __var DP_CTRL_STAT = 0x4;
[09:22:41.228]              // -> [DP_CTRL_STAT <= 0x00000004]
[09:22:41.228]            __var DP_SELECT    = 0x8;
[09:22:41.228]              // -> [DP_SELECT <= 0x00000008]
[09:22:41.229]            __var powered_down = 0;
[09:22:41.229]              // -> [powered_down <= 0x00000000]
[09:22:41.229]            WriteDP(DP_SELECT, 0x00000000);
[09:22:41.232]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:22:41.232]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[09:22:41.234]              // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[09:22:41.234]              // -> [powered_down <= 0x00000000]
[09:22:41.234]          </block>
[09:22:41.235]          <control if="powered_down" while="" timeout="0" info="">
[09:22:41.235]            // if-block "powered_down"
[09:22:41.235]              // =>  FALSE
[09:22:41.236]            // skip if-block "powered_down"
[09:22:41.236]          </control>
[09:22:41.236]        </sequence>
[09:22:41.237]      Sequence("DebugCoreStart");
[09:22:41.237]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:22:41.237]          <block atomic="true" info="">
[09:22:41.242]  
[09:22:41.242]  ! W001 : No atomic sequence support in debug unit
[09:22:41.242]  
[09:22:41.244]            __var DP_R_IDCODE    = 0x0;
[09:22:41.246]              // -> [DP_R_IDCODE <= 0x00000000]
[09:22:41.246]            __var DP_W_ABORT    = 0x0;
[09:22:41.246]              // -> [DP_W_ABORT <= 0x00000000]
[09:22:41.246]            __var DP_CTRLSTAT = 0x4;
[09:22:41.247]              // -> [DP_CTRLSTAT <= 0x00000004]
[09:22:41.247]            __var DP_W_SELECT    = 0x8;
[09:22:41.247]              // -> [DP_W_SELECT <= 0x00000008]
[09:22:41.248]            __var AP_TAR		= 0x4;
[09:22:41.248]              // -> [AP_TAR <= 0x00000004]
[09:22:41.248]            __var AP_BD0		= 0x0;
[09:22:41.249]              // -> [AP_BD0 <= 0x00000000]
[09:22:41.249]            __var AP_BD1		= 0x4;
[09:22:41.250]              // -> [AP_BD1 <= 0x00000004]
[09:22:41.251]            __var AP_BD2		= 0x8;
[09:22:41.251]              // -> [AP_BD2 <= 0x00000008]
[09:22:41.252]            __var PCWithinFlash = 0;
[09:22:41.252]              // -> [PCWithinFlash <= 0x00000000]
[09:22:41.252]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[09:22:41.258]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.259]          </block>
[09:22:41.260]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[09:22:41.260]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[09:22:41.267]              // -> [Read32(0xE000EDF0) => 0x00030003]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.270]            // while-condition  =>  FALSE
[09:22:41.271]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[09:22:41.272]          </control>
[09:22:41.272]          <block atomic="true" info="">
[09:22:41.276]  
[09:22:41.276]  ! W001 : No atomic sequence support in debug unit
[09:22:41.276]  
[09:22:41.277]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:22:41.280]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:22:41.280]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[09:22:41.282]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.283]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[09:22:41.286]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[09:22:41.287]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[09:22:41.291]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.291]          </block>
[09:22:41.292]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[09:22:41.292]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.295]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.296]            // while-condition  =>  TRUE
[09:22:41.296]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.299]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.299]            // while-condition  =>  TRUE
[09:22:41.300]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.302]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.302]            // while-condition  =>  TRUE
[09:22:41.303]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.305]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.305]            // while-condition  =>  TRUE
[09:22:41.306]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.308]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.308]            // while-condition  =>  TRUE
[09:22:41.308]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.311]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.311]            // while-condition  =>  TRUE
[09:22:41.312]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.314]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.314]            // while-condition  =>  TRUE
[09:22:41.314]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.317]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.317]            // while-condition  =>  TRUE
[09:22:41.317]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.320]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.320]            // while-condition  =>  TRUE
[09:22:41.321]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.323]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.323]            // while-condition  =>  TRUE
[09:22:41.324]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.326]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.327]            // while-condition  =>  TRUE
[09:22:41.327]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.330]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.330]            // while-condition  =>  TRUE
[09:22:41.331]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.334]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.334]            // while-condition  =>  TRUE
[09:22:41.335]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.338]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.338]            // while-condition  =>  TRUE
[09:22:41.339]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.341]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.341]            // while-condition  =>  TRUE
[09:22:41.341]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.344]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.345]            // while-condition  =>  TRUE
[09:22:41.345]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.347]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.348]            // while-condition  =>  TRUE
[09:22:41.348]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.350]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.352]            // while-condition  =>  TRUE
[09:22:41.352]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.355]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.356]            // while-condition  =>  TRUE
[09:22:41.357]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.358]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.359]            // while-condition  =>  TRUE
[09:22:41.360]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.363]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.363]            // while-condition  =>  TRUE
[09:22:41.364]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.367]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.368]            // while-condition  =>  TRUE
[09:22:41.368]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.371]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.372]            // while-condition  =>  TRUE
[09:22:41.372]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.374]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.376]            // while-condition  =>  TRUE
[09:22:41.376]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.379]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.380]            // while-condition  =>  TRUE
[09:22:41.380]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.383]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.383]            // while-condition  =>  TRUE
[09:22:41.384]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.387]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.388]            // while-condition  =>  TRUE
[09:22:41.388]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.391]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.391]            // while-condition  =>  TRUE
[09:22:41.392]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[09:22:41.392]            // while  =>  TIMEOUT
[09:22:41.392]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[09:22:41.393]          </control>
[09:22:41.393]          <block atomic="false" info="">
[09:22:41.394]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[09:22:41.397]              // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:22:41.397]              // -> [PCWithinFlash <= 0x00000000]
[09:22:41.398]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[09:22:41.400]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[09:22:41.401]          </block>
[09:22:41.402]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[09:22:41.403]            // if-block "PCWithinFlash == 0"
[09:22:41.403]              // =>  TRUE
[09:22:41.404]            // end if-block "PCWithinFlash == 0"
[09:22:41.404]          </control>
[09:22:41.405]        </sequence>
[09:22:41.405]    </block>
[09:22:41.406]  </sequence>
[09:22:41.406]  
[09:22:52.372]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[09:22:52.372]  
[09:22:52.373]  <debugvars>
[09:22:52.373]    // Pre-defined
[09:22:52.374]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[09:22:52.375]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[09:22:52.375]    __dp=0x00000000
[09:22:52.376]    __ap=0x00000000
[09:22:52.377]    __traceout=0x00000000      (Trace Disabled)
[09:22:52.377]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:22:52.378]    __FlashAddr=0x00000000
[09:22:52.378]    __FlashLen=0x00000000
[09:22:52.379]    __FlashArg=0x00000000
[09:22:52.379]    __FlashOp=0x00000000
[09:22:52.380]    __Result=0x00000000
[09:22:52.380]  </debugvars>
[09:22:52.380]  
[09:22:52.381]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[09:22:52.381]    <block atomic="false" info="">
[09:22:52.383]      __var nReset      = 0x80;
[09:22:52.383]        // -> [nReset <= 0x00000080]
[09:22:52.384]      DAP_SWJ_Pins(0x00, nReset, 0);
[09:22:52.386]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:22:52.386]    </block>
[09:22:52.387]    <control if="" while="1" timeout="50000" info="">
[09:22:52.388]      // while "1"  (timeout="50000")
[09:22:52.388]      // while-condition  =>  TRUE
[09:22:52.389]      // while "1"  (timeout="50000")
[09:22:52.389]      // while-condition  =>  TRUE
[09:22:52.389]      // while "1"  (timeout="50000")
[09:22:52.390]      // while-condition  =>  TRUE
[09:22:52.390]      // while "1"  (timeout="50000")
[09:22:52.391]      // while-condition  =>  TRUE
[09:22:52.392]      // while "1"  (timeout="50000")
[09:22:52.392]      // while-condition  =>  TRUE
[09:22:52.392]      // while "1"  (timeout="50000")
[09:22:52.393]      // while-condition  =>  TRUE
[09:22:52.394]      // while "1"  (timeout="50000")
[09:22:52.394]      // while-condition  =>  TRUE
[09:22:52.395]      // while "1"  (timeout="50000")
[09:22:52.395]      // while-condition  =>  TRUE
[09:22:52.396]      // while "1"  (timeout="50000")
[09:22:52.396]      // while-condition  =>  TRUE
[09:22:52.397]      // while "1"  (timeout="50000")
[09:22:52.397]      // while-condition  =>  TRUE
[09:22:52.398]      // while "1"  (timeout="50000")
[09:22:52.398]      // while-condition  =>  TRUE
[09:22:52.400]      // while "1"  (timeout="50000")
[09:22:52.400]      // while-condition  =>  TRUE
[09:22:52.401]      // while "1"  (timeout="50000")
[09:22:52.401]      // while-condition  =>  TRUE
[09:22:52.402]      // while "1"  (timeout="50000")
[09:22:52.402]      // while-condition  =>  TRUE
[09:22:52.403]      // while "1"  (timeout="50000")
[09:22:52.404]      // while-condition  =>  TRUE
[09:22:52.404]      // while "1"  (timeout="50000")
[09:22:52.404]      // while-condition  =>  TRUE
[09:22:52.404]      // while "1"  (timeout="50000")
[09:22:52.405]      // while-condition  =>  TRUE
[09:22:52.405]      // while "1"  (timeout="50000")
[09:22:52.406]      // while-condition  =>  TRUE
[09:22:52.406]      // while "1"  (timeout="50000")
[09:22:52.407]      // while-condition  =>  TRUE
[09:22:52.407]      // while "1"  (timeout="50000")
[09:22:52.407]      // while-condition  =>  TRUE
[09:22:52.408]      // while "1"  (timeout="50000")
[09:22:52.408]      // while-condition  =>  TRUE
[09:22:52.408]      // while "1"  (timeout="50000")
[09:22:52.409]      // while-condition  =>  TRUE
[09:22:52.409]      // while "1"  (timeout="50000")
[09:22:52.409]      // while-condition  =>  TRUE
[09:22:52.409]      // while "1"  (timeout="50000")
[09:22:52.410]      // while-condition  =>  TRUE
[09:22:52.410]      // while "1"  (timeout="50000")
[09:22:52.410]      // while-condition  =>  TRUE
[09:22:52.411]      // while "1"  (timeout="50000")
[09:22:52.411]      // while-condition  =>  TRUE
[09:22:52.411]      // while "1"  (timeout="50000")
[09:22:52.411]      // while-condition  =>  TRUE
[09:22:52.412]      // while "1"  (timeout="50000")
[09:22:52.412]      // while-condition  =>  TRUE
[09:22:52.412]      // while "1"  (timeout="50000")
[09:22:52.412]      // while-condition  =>  TRUE
[09:22:52.413]      // while "1"  (timeout="50000")
[09:22:52.413]      // while-condition  =>  TRUE
[09:22:52.413]      // while "1"  (timeout="50000")
[09:22:52.413]      // while-condition  =>  TRUE
[09:22:52.414]      // while "1"  (timeout="50000")
[09:22:52.414]      // while-condition  =>  TRUE
[09:22:52.414]      // while "1"  (timeout="50000")
[09:22:52.415]      // while-condition  =>  TRUE
[09:22:52.415]      // while "1"  (timeout="50000")
[09:22:52.415]      // while-condition  =>  TRUE
[09:22:52.415]      // while "1"  (timeout="50000")
[09:22:52.416]      // while-condition  =>  TRUE
[09:22:52.416]      // while "1"  (timeout="50000")
[09:22:52.416]      // while-condition  =>  TRUE
[09:22:52.416]      // while "1"  (timeout="50000")
[09:22:52.416]      // while-condition  =>  TRUE
[09:22:52.417]      // while "1"  (timeout="50000")
[09:22:52.417]      // while-condition  =>  TRUE
[09:22:52.417]      // while "1"  (timeout="50000")
[09:22:52.417]      // while-condition  =>  TRUE
[09:22:52.417]      // while "1"  (timeout="50000")
[09:22:52.418]      // while-condition  =>  TRUE
[09:22:52.418]      // while "1"  (timeout="50000")
[09:22:52.418]      // while-condition  =>  TRUE
[09:22:52.418]      // while "1"  (timeout="50000")
[09:22:52.418]      // while-condition  =>  TRUE
[09:22:52.419]      // while "1"  (timeout="50000")
[09:22:52.419]      // while-condition  =>  TRUE
[09:22:52.419]      // while "1"  (timeout="50000")
[09:22:52.419]      // while-condition  =>  TRUE
[09:22:52.419]      // while "1"  (timeout="50000")
[09:22:52.419]      // while-condition  =>  TRUE
[09:22:52.420]      // while "1"  (timeout="50000")
[09:22:52.420]      // while-condition  =>  TRUE
[09:22:52.420]      // while "1"  (timeout="50000")
[09:22:52.420]      // while-condition  =>  TRUE
[09:22:52.420]      // while "1"  (timeout="50000")
[09:22:52.420]      // while-condition  =>  TRUE
[09:22:52.420]      // while "1"  (timeout="50000")
[09:22:52.420]      // while-condition  =>  TRUE
[09:22:52.421]      // while "1"  (timeout="50000")
[09:22:52.421]      // while-condition  =>  TRUE
[09:22:52.421]      // while "1"  (timeout="50000")
[09:22:52.421]      // while-condition  =>  TRUE
[09:22:52.421]      // while "1"  (timeout="50000")
[09:22:52.422]      // while-condition  =>  TRUE
[09:22:52.423]      // while "1"  (timeout="50000")
[09:22:52.423]      // while-condition  =>  TRUE
[09:22:52.423]      // while "1"  (timeout="50000")
[09:22:52.423]      // while-condition  =>  TRUE
[09:22:52.423]      // while "1"  (timeout="50000")
[09:22:52.423]      // while-condition  =>  TRUE
[09:22:52.423]      // while "1"  (timeout="50000")
[09:22:52.424]      // while-condition  =>  TRUE
[09:22:52.424]      // while "1"  (timeout="50000")
[09:22:52.424]      // while-condition  =>  TRUE
[09:22:52.424]      // while "1"  (timeout="50000")
[09:22:52.424]      // while-condition  =>  TRUE
[09:22:52.425]      // while "1"  (timeout="50000")
[09:22:52.425]      // while-condition  =>  TRUE
[09:22:52.425]      // while "1"  (timeout="50000")
[09:22:52.425]      // while-condition  =>  TRUE
[09:22:52.426]      // while "1"  (timeout="50000")
[09:22:52.426]      // while-condition  =>  TRUE
[09:22:52.426]      // while "1"  (timeout="50000")
[09:22:52.426]      // while-condition  =>  TRUE
[09:22:52.426]      // while "1"  (timeout="50000")
[09:22:52.426]      // while-condition  =>  TRUE
[09:22:52.427]      // while "1"  (timeout="50000")
[09:22:52.427]      // while-condition  =>  TRUE
[09:22:52.427]      // while "1"  (timeout="50000")
[09:22:52.427]      // while-condition  =>  TRUE
[09:22:52.427]      // while "1"  (timeout="50000")
[09:22:52.428]      // while-condition  =>  TRUE
[09:22:52.428]      // while "1"  (timeout="50000")
[09:22:52.428]      // while-condition  =>  TRUE
[09:22:52.429]      // while "1"  (timeout="50000")
[09:22:52.429]      // while-condition  =>  TRUE
[09:22:52.429]      // while "1"  (timeout="50000")
[09:22:52.429]      // while-condition  =>  TRUE
[09:22:52.429]      // while "1"  (timeout="50000")
[09:22:52.430]      // while-condition  =>  TRUE
[09:22:52.430]      // while "1"  (timeout="50000")
[09:22:52.430]      // while-condition  =>  TRUE
[09:22:52.430]      // while "1"  (timeout="50000")
[09:22:52.430]      // while-condition  =>  TRUE
[09:22:52.431]      // while "1"  (timeout="50000")
[09:22:52.431]      // while-condition  =>  TRUE
[09:22:52.431]      // while "1"  (timeout="50000")
[09:22:52.431]      // while-condition  =>  TRUE
[09:22:52.431]      // while "1"  (timeout="50000")
[09:22:52.431]      // while-condition  =>  TRUE
[09:22:52.431]      // while "1"  (timeout="50000")
[09:22:52.431]      // while-condition  =>  TRUE
[09:22:52.431]      // while "1"  (timeout="50000")
[09:22:52.432]      // while-condition  =>  TRUE
[09:22:52.432]      // while "1"  (timeout="50000")
[09:22:52.433]      // while-condition  =>  TRUE
[09:22:52.433]      // while "1"  (timeout="50000")
[09:22:52.433]      // while-condition  =>  TRUE
[09:22:52.433]      // while "1"  (timeout="50000")
[09:22:52.433]      // while-condition  =>  TRUE
[09:22:52.434]      // while "1"  (timeout="50000")
[09:22:52.434]      // while-condition  =>  TRUE
[09:22:52.434]      // while "1"  (timeout="50000")
[09:22:52.434]      // while-condition  =>  TRUE
[09:22:52.434]      // while "1"  (timeout="50000")
[09:22:52.434]      // while-condition  =>  TRUE
[09:22:52.434]      // while "1"  (timeout="50000")
[09:22:52.435]      // while-condition  =>  TRUE
[09:22:52.435]      // while "1"  (timeout="50000")
[09:22:52.435]      // while-condition  =>  TRUE
[09:22:52.435]      // while "1"  (timeout="50000")
[09:22:52.435]      // while-condition  =>  TRUE
[09:22:52.436]      // while "1"  (timeout="50000")
[09:22:52.436]      // while-condition  =>  TRUE
[09:22:52.436]      // while "1"  (timeout="50000")
[09:22:52.436]      // while-condition  =>  TRUE
[09:22:52.436]      // while "1"  (timeout="50000")
[09:22:52.436]      // while-condition  =>  TRUE
[09:22:52.436]      // while "1"  (timeout="50000")
[09:22:52.437]      // while-condition  =>  TRUE
[09:22:52.437]      // while "1"  (timeout="50000")
[09:22:52.437]      // while  =>  TIMEOUT
[09:22:52.437]      // end while "1"
[09:22:52.438]    </control>
[09:22:52.438]    <block atomic="false" info="">
[09:22:52.438]      DAP_SWJ_Pins(nReset, nReset, 0);
[09:22:52.440]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[09:22:52.440]    </block>
[09:22:52.440]  </sequence>
[09:22:52.441]  
[17:21:08.847]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[17:21:08.847]  
[17:21:08.851]  <debugvars>
[17:21:08.852]    // Pre-defined
[17:21:08.852]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:21:08.852]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[17:21:08.852]    __dp=0x00000000
[17:21:08.862]    __ap=0x00000000
[17:21:08.863]    __traceout=0x00000000      (Trace Disabled)
[17:21:08.863]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:21:08.863]    __FlashAddr=0x00000000
[17:21:08.864]    __FlashLen=0x00000000
[17:21:08.864]    __FlashArg=0x00000000
[17:21:08.864]    __FlashOp=0x00000000
[17:21:08.865]    __Result=0x00000000
[17:21:08.865]  </debugvars>
[17:21:08.865]  
[17:21:08.866]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[17:21:08.867]    <block atomic="false" info="">
[17:21:08.867]      __var nReset      = 0x80;
[17:21:08.868]        // -> [nReset <= 0x00000080]
[17:21:08.877]      DAP_SWJ_Pins(0x00, nReset, 0);
[17:21:08.879]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[17:21:08.880]    </block>
[17:21:08.880]    <control if="" while="1" timeout="50000" info="">
[17:21:08.880]      // while "1"  (timeout="50000")
[17:21:08.881]      // while-condition  =>  TRUE
[17:21:08.881]      // while "1"  (timeout="50000")
[17:21:08.881]      // while-condition  =>  TRUE
[17:21:08.882]      // while "1"  (timeout="50000")
[17:21:08.882]      // while-condition  =>  TRUE
[17:21:08.883]      // while "1"  (timeout="50000")
[17:21:08.883]      // while-condition  =>  TRUE
[17:21:08.883]      // while "1"  (timeout="50000")
[17:21:08.884]      // while-condition  =>  TRUE
[17:21:08.884]      // while "1"  (timeout="50000")
[17:21:08.884]      // while-condition  =>  TRUE
[17:21:08.884]      // while "1"  (timeout="50000")
[17:21:08.885]      // while-condition  =>  TRUE
[17:21:08.885]      // while "1"  (timeout="50000")
[17:21:08.885]      // while-condition  =>  TRUE
[17:21:08.886]      // while "1"  (timeout="50000")
[17:21:08.886]      // while-condition  =>  TRUE
[17:21:08.887]      // while "1"  (timeout="50000")
[17:21:08.887]      // while-condition  =>  TRUE
[17:21:08.887]      // while "1"  (timeout="50000")
[17:21:08.887]      // while-condition  =>  TRUE
[17:21:08.888]      // while "1"  (timeout="50000")
[17:21:08.888]      // while-condition  =>  TRUE
[17:21:08.888]      // while "1"  (timeout="50000")
[17:21:08.889]      // while-condition  =>  TRUE
[17:21:08.889]      // while "1"  (timeout="50000")
[17:21:08.889]      // while-condition  =>  TRUE
[17:21:08.889]      // while "1"  (timeout="50000")
[17:21:08.890]      // while-condition  =>  TRUE
[17:21:08.890]      // while "1"  (timeout="50000")
[17:21:08.890]      // while-condition  =>  TRUE
[17:21:08.891]      // while "1"  (timeout="50000")
[17:21:08.891]      // while-condition  =>  TRUE
[17:21:08.891]      // while "1"  (timeout="50000")
[17:21:08.891]      // while-condition  =>  TRUE
[17:21:08.891]      // while "1"  (timeout="50000")
[17:21:08.892]      // while-condition  =>  TRUE
[17:21:08.892]      // while "1"  (timeout="50000")
[17:21:08.892]      // while-condition  =>  TRUE
[17:21:08.892]      // while "1"  (timeout="50000")
[17:21:08.893]      // while-condition  =>  TRUE
[17:21:08.893]      // while "1"  (timeout="50000")
[17:21:08.893]      // while-condition  =>  TRUE
[17:21:08.893]      // while "1"  (timeout="50000")
[17:21:08.893]      // while-condition  =>  TRUE
[17:21:08.894]      // while "1"  (timeout="50000")
[17:21:08.894]      // while-condition  =>  TRUE
[17:21:08.894]      // while "1"  (timeout="50000")
[17:21:08.894]      // while-condition  =>  TRUE
[17:21:08.895]      // while "1"  (timeout="50000")
[17:21:08.895]      // while-condition  =>  TRUE
[17:21:08.895]      // while "1"  (timeout="50000")
[17:21:08.895]      // while-condition  =>  TRUE
[17:21:08.895]      // while "1"  (timeout="50000")
[17:21:08.896]      // while-condition  =>  TRUE
[17:21:08.896]      // while "1"  (timeout="50000")
[17:21:08.896]      // while-condition  =>  TRUE
[17:21:08.896]      // while "1"  (timeout="50000")
[17:21:08.896]      // while-condition  =>  TRUE
[17:21:08.897]      // while "1"  (timeout="50000")
[17:21:08.897]      // while-condition  =>  TRUE
[17:21:08.897]      // while "1"  (timeout="50000")
[17:21:08.897]      // while-condition  =>  TRUE
[17:21:08.897]      // while "1"  (timeout="50000")
[17:21:08.897]      // while-condition  =>  TRUE
[17:21:08.897]      // while "1"  (timeout="50000")
[17:21:08.897]      // while-condition  =>  TRUE
[17:21:08.897]      // while "1"  (timeout="50000")
[17:21:08.897]      // while-condition  =>  TRUE
[17:21:08.898]      // while "1"  (timeout="50000")
[17:21:08.898]      // while-condition  =>  TRUE
[17:21:08.898]      // while "1"  (timeout="50000")
[17:21:08.898]      // while-condition  =>  TRUE
[17:21:08.898]      // while "1"  (timeout="50000")
[17:21:08.899]      // while-condition  =>  TRUE
[17:21:08.899]      // while "1"  (timeout="50000")
[17:21:08.899]      // while-condition  =>  TRUE
[17:21:08.899]      // while "1"  (timeout="50000")
[17:21:08.900]      // while-condition  =>  TRUE
[17:21:08.900]      // while "1"  (timeout="50000")
[17:21:08.900]      // while-condition  =>  TRUE
[17:21:08.900]      // while "1"  (timeout="50000")
[17:21:08.901]      // while-condition  =>  TRUE
[17:21:08.901]      // while "1"  (timeout="50000")
[17:21:08.901]      // while-condition  =>  TRUE
[17:21:08.901]      // while "1"  (timeout="50000")
[17:21:08.902]      // while-condition  =>  TRUE
[17:21:08.902]      // while "1"  (timeout="50000")
[17:21:08.902]      // while-condition  =>  TRUE
[17:21:08.902]      // while "1"  (timeout="50000")
[17:21:08.903]      // while-condition  =>  TRUE
[17:21:08.903]      // while "1"  (timeout="50000")
[17:21:08.903]      // while-condition  =>  TRUE
[17:21:08.903]      // while "1"  (timeout="50000")
[17:21:08.904]      // while-condition  =>  TRUE
[17:21:08.904]      // while "1"  (timeout="50000")
[17:21:08.904]      // while-condition  =>  TRUE
[17:21:08.904]      // while "1"  (timeout="50000")
[17:21:08.905]      // while-condition  =>  TRUE
[17:21:08.905]      // while "1"  (timeout="50000")
[17:21:08.905]      // while-condition  =>  TRUE
[17:21:08.905]      // while "1"  (timeout="50000")
[17:21:08.906]      // while-condition  =>  TRUE
[17:21:08.906]      // while "1"  (timeout="50000")
[17:21:08.906]      // while-condition  =>  TRUE
[17:21:08.906]      // while "1"  (timeout="50000")
[17:21:08.906]      // while-condition  =>  TRUE
[17:21:08.907]      // while "1"  (timeout="50000")
[17:21:08.907]      // while-condition  =>  TRUE
[17:21:08.907]      // while "1"  (timeout="50000")
[17:21:08.907]      // while-condition  =>  TRUE
[17:21:08.908]      // while "1"  (timeout="50000")
[17:21:08.908]      // while-condition  =>  TRUE
[17:21:08.908]      // while "1"  (timeout="50000")
[17:21:08.908]      // while-condition  =>  TRUE
[17:21:08.908]      // while "1"  (timeout="50000")
[17:21:08.909]      // while-condition  =>  TRUE
[17:21:08.909]      // while "1"  (timeout="50000")
[17:21:08.909]      // while-condition  =>  TRUE
[17:21:08.909]      // while "1"  (timeout="50000")
[17:21:08.910]      // while-condition  =>  TRUE
[17:21:08.910]      // while "1"  (timeout="50000")
[17:21:08.910]      // while-condition  =>  TRUE
[17:21:08.910]      // while "1"  (timeout="50000")
[17:21:08.910]      // while-condition  =>  TRUE
[17:21:08.910]      // while "1"  (timeout="50000")
[17:21:08.911]      // while-condition  =>  TRUE
[17:21:08.911]      // while "1"  (timeout="50000")
[17:21:08.911]      // while-condition  =>  TRUE
[17:21:08.911]      // while "1"  (timeout="50000")
[17:21:08.912]      // while-condition  =>  TRUE
[17:21:08.912]      // while "1"  (timeout="50000")
[17:21:08.912]      // while-condition  =>  TRUE
[17:21:08.912]      // while "1"  (timeout="50000")
[17:21:08.912]      // while-condition  =>  TRUE
[17:21:08.913]      // while "1"  (timeout="50000")
[17:21:08.913]      // while-condition  =>  TRUE
[17:21:08.913]      // while "1"  (timeout="50000")
[17:21:08.913]      // while-condition  =>  TRUE
[17:21:08.913]      // while "1"  (timeout="50000")
[17:21:08.914]      // while-condition  =>  TRUE
[17:21:08.914]      // while "1"  (timeout="50000")
[17:21:08.914]      // while-condition  =>  TRUE
[17:21:08.914]      // while "1"  (timeout="50000")
[17:21:08.914]      // while-condition  =>  TRUE
[17:21:08.914]      // while "1"  (timeout="50000")
[17:21:08.915]      // while-condition  =>  TRUE
[17:21:08.915]      // while "1"  (timeout="50000")
[17:21:08.915]      // while-condition  =>  TRUE
[17:21:08.915]      // while "1"  (timeout="50000")
[17:21:08.915]      // while-condition  =>  TRUE
[17:21:08.916]      // while "1"  (timeout="50000")
[17:21:08.916]      // while-condition  =>  TRUE
[17:21:08.916]      // while "1"  (timeout="50000")
[17:21:08.916]      // while-condition  =>  TRUE
[17:21:08.917]      // while "1"  (timeout="50000")
[17:21:08.917]      // while-condition  =>  TRUE
[17:21:08.917]      // while "1"  (timeout="50000")
[17:21:08.917]      // while-condition  =>  TRUE
[17:21:08.917]      // while "1"  (timeout="50000")
[17:21:08.918]      // while-condition  =>  TRUE
[17:21:08.918]      // while "1"  (timeout="50000")
[17:21:08.918]      // while-condition  =>  TRUE
[17:21:08.918]      // while "1"  (timeout="50000")
[17:21:08.919]      // while-condition  =>  TRUE
[17:21:08.919]      // while "1"  (timeout="50000")
[17:21:08.919]      // while-condition  =>  TRUE
[17:21:08.919]      // while "1"  (timeout="50000")
[17:21:08.919]      // while-condition  =>  TRUE
[17:21:08.920]      // while "1"  (timeout="50000")
[17:21:08.920]      // while-condition  =>  TRUE
[17:21:08.920]      // while "1"  (timeout="50000")
[17:21:08.920]      // while-condition  =>  TRUE
[17:21:08.921]      // while "1"  (timeout="50000")
[17:21:08.921]      // while-condition  =>  TRUE
[17:21:08.921]      // while "1"  (timeout="50000")
[17:21:08.921]      // while-condition  =>  TRUE
[17:21:08.922]      // while "1"  (timeout="50000")
[17:21:08.922]      // while-condition  =>  TRUE
[17:21:08.922]      // while "1"  (timeout="50000")
[17:21:08.922]      // while-condition  =>  TRUE
[17:21:08.922]      // while "1"  (timeout="50000")
[17:21:08.923]      // while-condition  =>  TRUE
[17:21:08.923]      // while "1"  (timeout="50000")
[17:21:08.923]      // while-condition  =>  TRUE
[17:21:08.923]      // while "1"  (timeout="50000")
[17:21:08.924]      // while-condition  =>  TRUE
[17:21:08.924]      // while "1"  (timeout="50000")
[17:21:08.924]      // while-condition  =>  TRUE
[17:21:08.924]      // while "1"  (timeout="50000")
[17:21:08.924]      // while-condition  =>  TRUE
[17:21:08.925]      // while "1"  (timeout="50000")
[17:21:08.925]      // while-condition  =>  TRUE
[17:21:08.925]      // while "1"  (timeout="50000")
[17:21:08.925]      // while-condition  =>  TRUE
[17:21:08.926]      // while "1"  (timeout="50000")
[17:21:08.926]      // while-condition  =>  TRUE
[17:21:08.926]      // while "1"  (timeout="50000")
[17:21:08.926]      // while-condition  =>  TRUE
[17:21:08.926]      // while "1"  (timeout="50000")
[17:21:08.927]      // while-condition  =>  TRUE
[17:21:08.927]      // while "1"  (timeout="50000")
[17:21:08.927]      // while-condition  =>  TRUE
[17:21:08.927]      // while "1"  (timeout="50000")
[17:21:08.928]      // while-condition  =>  TRUE
[17:21:08.928]      // while "1"  (timeout="50000")
[17:21:08.928]      // while  =>  TIMEOUT
[17:21:08.928]      // end while "1"
[17:21:08.928]    </control>
[17:21:08.929]    <block atomic="false" info="">
[17:21:08.929]      DAP_SWJ_Pins(nReset, nReset, 0);
[17:21:08.931]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[17:21:08.932]    </block>
[17:21:08.932]    <control if="" while="1" timeout="10000" info="">
[17:21:08.932]      // while "1"  (timeout="10000")
[17:21:08.933]      // while-condition  =>  TRUE
[17:21:08.933]      // while "1"  (timeout="10000")
[17:21:08.933]      // while-condition  =>  TRUE
[17:21:08.934]      // while "1"  (timeout="10000")
[17:21:08.934]      // while-condition  =>  TRUE
[17:21:08.934]      // while "1"  (timeout="10000")
[17:21:08.934]      // while-condition  =>  TRUE
[17:21:08.935]      // while "1"  (timeout="10000")
[17:21:08.935]      // while-condition  =>  TRUE
[17:21:08.935]      // while "1"  (timeout="10000")
[17:21:08.936]      // while-condition  =>  TRUE
[17:21:08.936]      // while "1"  (timeout="10000")
[17:21:08.936]      // while-condition  =>  TRUE
[17:21:08.937]      // while "1"  (timeout="10000")
[17:21:08.937]      // while-condition  =>  TRUE
[17:21:08.937]      // while "1"  (timeout="10000")
[17:21:08.937]      // while-condition  =>  TRUE
[17:21:08.938]      // while "1"  (timeout="10000")
[17:21:08.938]      // while-condition  =>  TRUE
[17:21:08.938]      // while "1"  (timeout="10000")
[17:21:08.939]      // while-condition  =>  TRUE
[17:21:08.939]      // while "1"  (timeout="10000")
[17:21:08.939]      // while-condition  =>  TRUE
[17:21:08.939]      // while "1"  (timeout="10000")
[17:21:08.940]      // while-condition  =>  TRUE
[17:21:08.940]      // while "1"  (timeout="10000")
[17:21:08.940]      // while-condition  =>  TRUE
[17:21:08.941]      // while "1"  (timeout="10000")
[17:21:08.941]      // while-condition  =>  TRUE
[17:21:08.941]      // while "1"  (timeout="10000")
[17:21:08.942]      // while-condition  =>  TRUE
[17:21:08.942]      // while "1"  (timeout="10000")
[17:21:08.942]      // while-condition  =>  TRUE
[17:21:08.942]      // while "1"  (timeout="10000")
[17:21:08.943]      // while-condition  =>  TRUE
[17:21:08.943]      // while "1"  (timeout="10000")
[17:21:08.943]      // while  =>  TIMEOUT
[17:21:08.943]      // end while "1"
[17:21:08.943]    </control>
[17:21:08.944]    <block atomic="true" info="">
[17:21:08.949]  
[17:21:08.949]  ! W001 : No atomic sequence support in debug unit
[17:21:08.949]  
[17:21:08.952]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[17:21:08.954]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[17:21:08.954]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[17:21:08.957]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[17:21:08.957]    </block>
[17:21:08.958]    <block atomic="false" info="">
[17:21:08.958]      __errorcontrol = 0x00000001;
[17:21:08.958]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[17:21:08.959]      ReadDP(0x0);
[17:21:08.967]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[17:21:08.973]      __errorcontrol = 0x00000000;
[17:21:08.974]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[17:21:08.974]    </block>
[17:21:08.974]  </sequence>
[17:21:08.975]  
[17:21:08.975]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[17:21:08.975]  
[17:21:08.975]  <debugvars>
[17:21:08.976]    // Pre-defined
[17:21:08.976]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:21:08.976]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:21:08.976]    __dp=0x00000000
[17:21:08.977]    __ap=0x00000000
[17:21:08.977]    __traceout=0x00000000      (Trace Disabled)
[17:21:08.977]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:21:08.977]    __FlashAddr=0x00000000
[17:21:08.978]    __FlashLen=0x00000000
[17:21:08.978]    __FlashArg=0x00000000
[17:21:08.978]    __FlashOp=0x00000000
[17:21:08.978]    __Result=0x00000000
[17:21:08.979]  </debugvars>
[17:21:08.979]  
[17:21:08.979]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[17:21:08.980]  </sequence>
[17:21:08.980]  
[17:21:16.131]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[17:21:16.131]  
[17:21:16.131]  <debugvars>
[17:21:16.131]    // Pre-defined
[17:21:16.132]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:21:16.132]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[17:21:16.132]    __dp=0x00000000
[17:21:16.133]    __ap=0x00000000
[17:21:16.133]    __traceout=0x00000000      (Trace Disabled)
[17:21:16.133]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:21:16.134]    __FlashAddr=0x00000000
[17:21:16.134]    __FlashLen=0x00000000
[17:21:16.134]    __FlashArg=0x00000000
[17:21:16.134]    __FlashOp=0x00000000
[17:21:16.135]    __Result=0x00000000
[17:21:16.135]  </debugvars>
[17:21:16.135]  
[17:21:16.136]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[17:21:16.136]    <block atomic="false" info="">
[17:21:16.136]      __var nReset      = 0x80;
[17:21:16.136]        // -> [nReset <= 0x00000080]
[17:21:16.137]      DAP_SWJ_Pins(0x00, nReset, 0);
[17:21:16.139]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[17:21:16.139]    </block>
[17:21:16.139]    <control if="" while="1" timeout="50000" info="">
[17:21:16.139]      // while "1"  (timeout="50000")
[17:21:16.139]      // while-condition  =>  TRUE
[17:21:16.140]      // while "1"  (timeout="50000")
[17:21:16.140]      // while-condition  =>  TRUE
[17:21:16.140]      // while "1"  (timeout="50000")
[17:21:16.140]      // while-condition  =>  TRUE
[17:21:16.141]      // while "1"  (timeout="50000")
[17:21:16.141]      // while-condition  =>  TRUE
[17:21:16.141]      // while "1"  (timeout="50000")
[17:21:16.142]      // while-condition  =>  TRUE
[17:21:16.142]      // while "1"  (timeout="50000")
[17:21:16.142]      // while-condition  =>  TRUE
[17:21:16.142]      // while "1"  (timeout="50000")
[17:21:16.143]      // while-condition  =>  TRUE
[17:21:16.143]      // while "1"  (timeout="50000")
[17:21:16.143]      // while-condition  =>  TRUE
[17:21:16.143]      // while "1"  (timeout="50000")
[17:21:16.144]      // while-condition  =>  TRUE
[17:21:16.144]      // while "1"  (timeout="50000")
[17:21:16.144]      // while-condition  =>  TRUE
[17:21:16.144]      // while "1"  (timeout="50000")
[17:21:16.144]      // while-condition  =>  TRUE
[17:21:16.145]      // while "1"  (timeout="50000")
[17:21:16.145]      // while-condition  =>  TRUE
[17:21:16.145]      // while "1"  (timeout="50000")
[17:21:16.145]      // while-condition  =>  TRUE
[17:21:16.146]      // while "1"  (timeout="50000")
[17:21:16.146]      // while-condition  =>  TRUE
[17:21:16.146]      // while "1"  (timeout="50000")
[17:21:16.147]      // while-condition  =>  TRUE
[17:21:16.147]      // while "1"  (timeout="50000")
[17:21:16.147]      // while-condition  =>  TRUE
[17:21:16.147]      // while "1"  (timeout="50000")
[17:21:16.148]      // while-condition  =>  TRUE
[17:21:16.148]      // while "1"  (timeout="50000")
[17:21:16.148]      // while-condition  =>  TRUE
[17:21:16.148]      // while "1"  (timeout="50000")
[17:21:16.148]      // while-condition  =>  TRUE
[17:21:16.149]      // while "1"  (timeout="50000")
[17:21:16.149]      // while-condition  =>  TRUE
[17:21:16.149]      // while "1"  (timeout="50000")
[17:21:16.149]      // while-condition  =>  TRUE
[17:21:16.150]      // while "1"  (timeout="50000")
[17:21:16.150]      // while-condition  =>  TRUE
[17:21:16.150]      // while "1"  (timeout="50000")
[17:21:16.151]      // while-condition  =>  TRUE
[17:21:16.151]      // while "1"  (timeout="50000")
[17:21:16.151]      // while-condition  =>  TRUE
[17:21:16.152]      // while "1"  (timeout="50000")
[17:21:16.152]      // while-condition  =>  TRUE
[17:21:16.152]      // while "1"  (timeout="50000")
[17:21:16.153]      // while-condition  =>  TRUE
[17:21:16.153]      // while "1"  (timeout="50000")
[17:21:16.153]      // while-condition  =>  TRUE
[17:21:16.154]      // while "1"  (timeout="50000")
[17:21:16.154]      // while-condition  =>  TRUE
[17:21:16.154]      // while "1"  (timeout="50000")
[17:21:16.154]      // while-condition  =>  TRUE
[17:21:16.155]      // while "1"  (timeout="50000")
[17:21:16.155]      // while-condition  =>  TRUE
[17:21:16.155]      // while "1"  (timeout="50000")
[17:21:16.155]      // while-condition  =>  TRUE
[17:21:16.155]      // while "1"  (timeout="50000")
[17:21:16.156]      // while-condition  =>  TRUE
[17:21:16.156]      // while "1"  (timeout="50000")
[17:21:16.157]      // while-condition  =>  TRUE
[17:21:16.157]      // while "1"  (timeout="50000")
[17:21:16.157]      // while-condition  =>  TRUE
[17:21:16.157]      // while "1"  (timeout="50000")
[17:21:16.158]      // while-condition  =>  TRUE
[17:21:16.158]      // while "1"  (timeout="50000")
[17:21:16.158]      // while-condition  =>  TRUE
[17:21:16.158]      // while "1"  (timeout="50000")
[17:21:16.159]      // while-condition  =>  TRUE
[17:21:16.159]      // while "1"  (timeout="50000")
[17:21:16.160]      // while-condition  =>  TRUE
[17:21:16.160]      // while "1"  (timeout="50000")
[17:21:16.160]      // while-condition  =>  TRUE
[17:21:16.161]      // while "1"  (timeout="50000")
[17:21:16.161]      // while-condition  =>  TRUE
[17:21:16.161]      // while "1"  (timeout="50000")
[17:21:16.161]      // while-condition  =>  TRUE
[17:21:16.162]      // while "1"  (timeout="50000")
[17:21:16.162]      // while-condition  =>  TRUE
[17:21:16.162]      // while "1"  (timeout="50000")
[17:21:16.162]      // while-condition  =>  TRUE
[17:21:16.163]      // while "1"  (timeout="50000")
[17:21:16.163]      // while-condition  =>  TRUE
[17:21:16.163]      // while "1"  (timeout="50000")
[17:21:16.163]      // while-condition  =>  TRUE
[17:21:16.164]      // while "1"  (timeout="50000")
[17:21:16.164]      // while-condition  =>  TRUE
[17:21:16.164]      // while "1"  (timeout="50000")
[17:21:16.164]      // while-condition  =>  TRUE
[17:21:16.165]      // while "1"  (timeout="50000")
[17:21:16.165]      // while-condition  =>  TRUE
[17:21:16.166]      // while "1"  (timeout="50000")
[17:21:16.166]      // while-condition  =>  TRUE
[17:21:16.166]      // while "1"  (timeout="50000")
[17:21:16.166]      // while-condition  =>  TRUE
[17:21:16.167]      // while "1"  (timeout="50000")
[17:21:16.167]      // while-condition  =>  TRUE
[17:21:16.167]      // while "1"  (timeout="50000")
[17:21:16.168]      // while-condition  =>  TRUE
[17:21:16.168]      // while "1"  (timeout="50000")
[17:21:16.168]      // while-condition  =>  TRUE
[17:21:16.168]      // while "1"  (timeout="50000")
[17:21:16.169]      // while-condition  =>  TRUE
[17:21:16.169]      // while "1"  (timeout="50000")
[17:21:16.169]      // while-condition  =>  TRUE
[17:21:16.170]      // while "1"  (timeout="50000")
[17:21:16.170]      // while-condition  =>  TRUE
[17:21:16.170]      // while "1"  (timeout="50000")
[17:21:16.170]      // while-condition  =>  TRUE
[17:21:16.171]      // while "1"  (timeout="50000")
[17:21:16.171]      // while-condition  =>  TRUE
[17:21:16.171]      // while "1"  (timeout="50000")
[17:21:16.172]      // while-condition  =>  TRUE
[17:21:16.172]      // while "1"  (timeout="50000")
[17:21:16.172]      // while-condition  =>  TRUE
[17:21:16.172]      // while "1"  (timeout="50000")
[17:21:16.173]      // while-condition  =>  TRUE
[17:21:16.173]      // while "1"  (timeout="50000")
[17:21:16.173]      // while-condition  =>  TRUE
[17:21:16.173]      // while "1"  (timeout="50000")
[17:21:16.174]      // while-condition  =>  TRUE
[17:21:16.174]      // while "1"  (timeout="50000")
[17:21:16.174]      // while-condition  =>  TRUE
[17:21:16.174]      // while "1"  (timeout="50000")
[17:21:16.175]      // while-condition  =>  TRUE
[17:21:16.175]      // while "1"  (timeout="50000")
[17:21:16.175]      // while-condition  =>  TRUE
[17:21:16.175]      // while "1"  (timeout="50000")
[17:21:16.175]      // while-condition  =>  TRUE
[17:21:16.176]      // while "1"  (timeout="50000")
[17:21:16.176]      // while-condition  =>  TRUE
[17:21:16.177]      // while "1"  (timeout="50000")
[17:21:16.177]      // while-condition  =>  TRUE
[17:21:16.177]      // while "1"  (timeout="50000")
[17:21:16.177]      // while-condition  =>  TRUE
[17:21:16.178]      // while "1"  (timeout="50000")
[17:21:16.178]      // while-condition  =>  TRUE
[17:21:16.178]      // while "1"  (timeout="50000")
[17:21:16.178]      // while-condition  =>  TRUE
[17:21:16.179]      // while "1"  (timeout="50000")
[17:21:16.179]      // while-condition  =>  TRUE
[17:21:16.179]      // while "1"  (timeout="50000")
[17:21:16.179]      // while-condition  =>  TRUE
[17:21:16.180]      // while "1"  (timeout="50000")
[17:21:16.180]      // while-condition  =>  TRUE
[17:21:16.180]      // while "1"  (timeout="50000")
[17:21:16.181]      // while-condition  =>  TRUE
[17:21:16.181]      // while "1"  (timeout="50000")
[17:21:16.181]      // while-condition  =>  TRUE
[17:21:16.181]      // while "1"  (timeout="50000")
[17:21:16.182]      // while-condition  =>  TRUE
[17:21:16.182]      // while "1"  (timeout="50000")
[17:21:16.182]      // while-condition  =>  TRUE
[17:21:16.182]      // while "1"  (timeout="50000")
[17:21:16.183]      // while-condition  =>  TRUE
[17:21:16.183]      // while "1"  (timeout="50000")
[17:21:16.183]      // while-condition  =>  TRUE
[17:21:16.183]      // while "1"  (timeout="50000")
[17:21:16.183]      // while-condition  =>  TRUE
[17:21:16.184]      // while "1"  (timeout="50000")
[17:21:16.184]      // while-condition  =>  TRUE
[17:21:16.184]      // while "1"  (timeout="50000")
[17:21:16.184]      // while-condition  =>  TRUE
[17:21:16.185]      // while "1"  (timeout="50000")
[17:21:16.185]      // while-condition  =>  TRUE
[17:21:16.185]      // while "1"  (timeout="50000")
[17:21:16.185]      // while-condition  =>  TRUE
[17:21:16.186]      // while "1"  (timeout="50000")
[17:21:16.186]      // while-condition  =>  TRUE
[17:21:16.186]      // while "1"  (timeout="50000")
[17:21:16.186]      // while-condition  =>  TRUE
[17:21:16.187]      // while "1"  (timeout="50000")
[17:21:16.187]      // while-condition  =>  TRUE
[17:21:16.187]      // while "1"  (timeout="50000")
[17:21:16.187]      // while-condition  =>  TRUE
[17:21:16.188]      // while "1"  (timeout="50000")
[17:21:16.188]      // while-condition  =>  TRUE
[17:21:16.188]      // while "1"  (timeout="50000")
[17:21:16.188]      // while-condition  =>  TRUE
[17:21:16.189]      // while "1"  (timeout="50000")
[17:21:16.189]      // while-condition  =>  TRUE
[17:21:16.189]      // while "1"  (timeout="50000")
[17:21:16.190]      // while-condition  =>  TRUE
[17:21:16.190]      // while "1"  (timeout="50000")
[17:21:16.190]      // while-condition  =>  TRUE
[17:21:16.191]      // while "1"  (timeout="50000")
[17:21:16.191]      // while-condition  =>  TRUE
[17:21:16.191]      // while "1"  (timeout="50000")
[17:21:16.192]      // while-condition  =>  TRUE
[17:21:16.192]      // while "1"  (timeout="50000")
[17:21:16.192]      // while-condition  =>  TRUE
[17:21:16.193]      // while "1"  (timeout="50000")
[17:21:16.193]      // while-condition  =>  TRUE
[17:21:16.193]      // while "1"  (timeout="50000")
[17:21:16.194]      // while-condition  =>  TRUE
[17:21:16.194]      // while "1"  (timeout="50000")
[17:21:16.194]      // while  =>  TIMEOUT
[17:21:16.195]      // end while "1"
[17:21:16.195]    </control>
[17:21:16.195]    <block atomic="false" info="">
[17:21:16.196]      DAP_SWJ_Pins(nReset, nReset, 0);
[17:21:16.198]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[17:21:16.198]    </block>
[17:21:16.199]    <control if="" while="1" timeout="10000" info="">
[17:21:16.199]      // while "1"  (timeout="10000")
[17:21:16.199]      // while-condition  =>  TRUE
[17:21:16.199]      // while "1"  (timeout="10000")
[17:21:16.200]      // while-condition  =>  TRUE
[17:21:16.200]      // while "1"  (timeout="10000")
[17:21:16.200]      // while-condition  =>  TRUE
[17:21:16.200]      // while "1"  (timeout="10000")
[17:21:16.200]      // while-condition  =>  TRUE
[17:21:16.200]      // while "1"  (timeout="10000")
[17:21:16.201]      // while-condition  =>  TRUE
[17:21:16.201]      // while "1"  (timeout="10000")
[17:21:16.201]      // while-condition  =>  TRUE
[17:21:16.201]      // while "1"  (timeout="10000")
[17:21:16.202]      // while-condition  =>  TRUE
[17:21:16.202]      // while "1"  (timeout="10000")
[17:21:16.202]      // while-condition  =>  TRUE
[17:21:16.202]      // while "1"  (timeout="10000")
[17:21:16.203]      // while-condition  =>  TRUE
[17:21:16.203]      // while "1"  (timeout="10000")
[17:21:16.203]      // while-condition  =>  TRUE
[17:21:16.203]      // while "1"  (timeout="10000")
[17:21:16.204]      // while-condition  =>  TRUE
[17:21:16.204]      // while "1"  (timeout="10000")
[17:21:16.204]      // while-condition  =>  TRUE
[17:21:16.204]      // while "1"  (timeout="10000")
[17:21:16.204]      // while-condition  =>  TRUE
[17:21:16.205]      // while "1"  (timeout="10000")
[17:21:16.205]      // while-condition  =>  TRUE
[17:21:16.205]      // while "1"  (timeout="10000")
[17:21:16.205]      // while-condition  =>  TRUE
[17:21:16.206]      // while "1"  (timeout="10000")
[17:21:16.206]      // while-condition  =>  TRUE
[17:21:16.206]      // while "1"  (timeout="10000")
[17:21:16.207]      // while-condition  =>  TRUE
[17:21:16.207]      // while "1"  (timeout="10000")
[17:21:16.207]      // while-condition  =>  TRUE
[17:21:16.207]      // while "1"  (timeout="10000")
[17:21:16.207]      // while-condition  =>  TRUE
[17:21:16.208]      // while "1"  (timeout="10000")
[17:21:16.208]      // while-condition  =>  TRUE
[17:21:16.208]      // while "1"  (timeout="10000")
[17:21:16.208]      // while-condition  =>  TRUE
[17:21:16.209]      // while "1"  (timeout="10000")
[17:21:16.209]      // while  =>  TIMEOUT
[17:21:16.209]      // end while "1"
[17:21:16.209]    </control>
[17:21:16.209]    <block atomic="true" info="">
[17:21:16.213]  
[17:21:16.213]  ! W001 : No atomic sequence support in debug unit
[17:21:16.213]  
[17:21:16.215]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[17:21:16.217]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[17:21:16.218]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[17:21:16.219]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[17:21:16.220]    </block>
[17:21:16.220]    <block atomic="false" info="">
[17:21:16.220]      __errorcontrol = 0x00000001;
[17:21:16.221]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[17:21:16.221]      ReadDP(0x0);
[17:21:16.229]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[17:21:16.249]      __errorcontrol = 0x00000000;
[17:21:16.249]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[17:21:16.249]    </block>
[17:21:16.250]  </sequence>
[17:21:16.250]  
[17:21:16.250]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[17:21:16.250]  
[17:21:16.251]  <debugvars>
[17:21:16.251]    // Pre-defined
[17:21:16.251]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:21:16.252]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:21:16.252]    __dp=0x00000000
[17:21:16.252]    __ap=0x00000000
[17:21:16.252]    __traceout=0x00000000      (Trace Disabled)
[17:21:16.253]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:21:16.253]    __FlashAddr=0x00000000
[17:21:16.253]    __FlashLen=0x00000000
[17:21:16.254]    __FlashArg=0x00000000
[17:21:16.254]    __FlashOp=0x00000000
[17:21:16.254]    __Result=0x00000000
[17:21:16.255]  </debugvars>
[17:21:16.255]  
[17:21:16.255]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[17:21:16.255]  </sequence>
[17:21:16.255]  
[17:21:23.276]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[17:21:23.276]  
[17:21:23.277]  <debugvars>
[17:21:23.278]    // Pre-defined
[17:21:23.278]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:21:23.279]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[17:21:23.279]    __dp=0x00000000
[17:21:23.279]    __ap=0x00000000
[17:21:23.279]    __traceout=0x00000000      (Trace Disabled)
[17:21:23.280]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:21:23.280]    __FlashAddr=0x00000000
[17:21:23.280]    __FlashLen=0x00000000
[17:21:23.280]    __FlashArg=0x00000000
[17:21:23.281]    __FlashOp=0x00000000
[17:21:23.281]    __Result=0x00000000
[17:21:23.281]  </debugvars>
[17:21:23.281]  
[17:21:23.282]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[17:21:23.282]    <block atomic="false" info="">
[17:21:23.282]      __var nReset      = 0x80;
[17:21:23.282]        // -> [nReset <= 0x00000080]
[17:21:23.283]      DAP_SWJ_Pins(0x00, nReset, 0);
[17:21:23.284]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[17:21:23.284]    </block>
[17:21:23.285]    <control if="" while="1" timeout="50000" info="">
[17:21:23.285]      // while "1"  (timeout="50000")
[17:21:23.285]      // while-condition  =>  TRUE
[17:21:23.285]      // while "1"  (timeout="50000")
[17:21:23.285]      // while-condition  =>  TRUE
[17:21:23.286]      // while "1"  (timeout="50000")
[17:21:23.286]      // while-condition  =>  TRUE
[17:21:23.286]      // while "1"  (timeout="50000")
[17:21:23.286]      // while-condition  =>  TRUE
[17:21:23.287]      // while "1"  (timeout="50000")
[17:21:23.287]      // while-condition  =>  TRUE
[17:21:23.287]      // while "1"  (timeout="50000")
[17:21:23.288]      // while-condition  =>  TRUE
[17:21:23.288]      // while "1"  (timeout="50000")
[17:21:23.288]      // while-condition  =>  TRUE
[17:21:23.288]      // while "1"  (timeout="50000")
[17:21:23.289]      // while-condition  =>  TRUE
[17:21:23.289]      // while "1"  (timeout="50000")
[17:21:23.289]      // while-condition  =>  TRUE
[17:21:23.290]      // while "1"  (timeout="50000")
[17:21:23.290]      // while-condition  =>  TRUE
[17:21:23.290]      // while "1"  (timeout="50000")
[17:21:23.291]      // while-condition  =>  TRUE
[17:21:23.291]      // while "1"  (timeout="50000")
[17:21:23.291]      // while-condition  =>  TRUE
[17:21:23.291]      // while "1"  (timeout="50000")
[17:21:23.292]      // while-condition  =>  TRUE
[17:21:23.292]      // while "1"  (timeout="50000")
[17:21:23.293]      // while-condition  =>  TRUE
[17:21:23.293]      // while "1"  (timeout="50000")
[17:21:23.293]      // while-condition  =>  TRUE
[17:21:23.294]      // while "1"  (timeout="50000")
[17:21:23.294]      // while-condition  =>  TRUE
[17:21:23.294]      // while "1"  (timeout="50000")
[17:21:23.295]      // while-condition  =>  TRUE
[17:21:23.295]      // while "1"  (timeout="50000")
[17:21:23.295]      // while-condition  =>  TRUE
[17:21:23.296]      // while "1"  (timeout="50000")
[17:21:23.296]      // while-condition  =>  TRUE
[17:21:23.296]      // while "1"  (timeout="50000")
[17:21:23.296]      // while-condition  =>  TRUE
[17:21:23.297]      // while "1"  (timeout="50000")
[17:21:23.297]      // while-condition  =>  TRUE
[17:21:23.297]      // while "1"  (timeout="50000")
[17:21:23.297]      // while-condition  =>  TRUE
[17:21:23.298]      // while "1"  (timeout="50000")
[17:21:23.298]      // while-condition  =>  TRUE
[17:21:23.298]      // while "1"  (timeout="50000")
[17:21:23.298]      // while-condition  =>  TRUE
[17:21:23.299]      // while "1"  (timeout="50000")
[17:21:23.299]      // while-condition  =>  TRUE
[17:21:23.299]      // while "1"  (timeout="50000")
[17:21:23.299]      // while-condition  =>  TRUE
[17:21:23.300]      // while "1"  (timeout="50000")
[17:21:23.300]      // while-condition  =>  TRUE
[17:21:23.300]      // while "1"  (timeout="50000")
[17:21:23.300]      // while-condition  =>  TRUE
[17:21:23.301]      // while "1"  (timeout="50000")
[17:21:23.301]      // while-condition  =>  TRUE
[17:21:23.301]      // while "1"  (timeout="50000")
[17:21:23.301]      // while-condition  =>  TRUE
[17:21:23.302]      // while "1"  (timeout="50000")
[17:21:23.302]      // while-condition  =>  TRUE
[17:21:23.302]      // while "1"  (timeout="50000")
[17:21:23.303]      // while-condition  =>  TRUE
[17:21:23.303]      // while "1"  (timeout="50000")
[17:21:23.303]      // while-condition  =>  TRUE
[17:21:23.304]      // while "1"  (timeout="50000")
[17:21:23.304]      // while-condition  =>  TRUE
[17:21:23.304]      // while "1"  (timeout="50000")
[17:21:23.304]      // while-condition  =>  TRUE
[17:21:23.304]      // while "1"  (timeout="50000")
[17:21:23.305]      // while-condition  =>  TRUE
[17:21:23.305]      // while "1"  (timeout="50000")
[17:21:23.305]      // while-condition  =>  TRUE
[17:21:23.305]      // while "1"  (timeout="50000")
[17:21:23.306]      // while-condition  =>  TRUE
[17:21:23.306]      // while "1"  (timeout="50000")
[17:21:23.306]      // while-condition  =>  TRUE
[17:21:23.306]      // while "1"  (timeout="50000")
[17:21:23.306]      // while-condition  =>  TRUE
[17:21:23.307]      // while "1"  (timeout="50000")
[17:21:23.307]      // while-condition  =>  TRUE
[17:21:23.307]      // while "1"  (timeout="50000")
[17:21:23.307]      // while-condition  =>  TRUE
[17:21:23.307]      // while "1"  (timeout="50000")
[17:21:23.308]      // while-condition  =>  TRUE
[17:21:23.308]      // while "1"  (timeout="50000")
[17:21:23.315]      // while-condition  =>  TRUE
[17:21:23.315]      // while "1"  (timeout="50000")
[17:21:23.315]      // while-condition  =>  TRUE
[17:21:23.316]      // while "1"  (timeout="50000")
[17:21:23.316]      // while-condition  =>  TRUE
[17:21:23.316]      // while "1"  (timeout="50000")
[17:21:23.317]      // while-condition  =>  TRUE
[17:21:23.317]      // while "1"  (timeout="50000")
[17:21:23.317]      // while-condition  =>  TRUE
[17:21:23.318]      // while "1"  (timeout="50000")
[17:21:23.318]      // while-condition  =>  TRUE
[17:21:23.318]      // while "1"  (timeout="50000")
[17:21:23.319]      // while-condition  =>  TRUE
[17:21:23.319]      // while "1"  (timeout="50000")
[17:21:23.319]      // while-condition  =>  TRUE
[17:21:23.319]      // while "1"  (timeout="50000")
[17:21:23.319]      // while-condition  =>  TRUE
[17:21:23.320]      // while "1"  (timeout="50000")
[17:21:23.320]      // while-condition  =>  TRUE
[17:21:23.320]      // while "1"  (timeout="50000")
[17:21:23.321]      // while-condition  =>  TRUE
[17:21:23.321]      // while "1"  (timeout="50000")
[17:21:23.321]      // while-condition  =>  TRUE
[17:21:23.322]      // while "1"  (timeout="50000")
[17:21:23.322]      // while-condition  =>  TRUE
[17:21:23.322]      // while "1"  (timeout="50000")
[17:21:23.322]      // while-condition  =>  TRUE
[17:21:23.323]      // while "1"  (timeout="50000")
[17:21:23.323]      // while-condition  =>  TRUE
[17:21:23.323]      // while "1"  (timeout="50000")
[17:21:23.323]      // while-condition  =>  TRUE
[17:21:23.323]      // while "1"  (timeout="50000")
[17:21:23.324]      // while-condition  =>  TRUE
[17:21:23.324]      // while "1"  (timeout="50000")
[17:21:23.324]      // while-condition  =>  TRUE
[17:21:23.324]      // while "1"  (timeout="50000")
[17:21:23.324]      // while-condition  =>  TRUE
[17:21:23.325]      // while "1"  (timeout="50000")
[17:21:23.325]      // while-condition  =>  TRUE
[17:21:23.325]      // while "1"  (timeout="50000")
[17:21:23.325]      // while-condition  =>  TRUE
[17:21:23.326]      // while "1"  (timeout="50000")
[17:21:23.326]      // while-condition  =>  TRUE
[17:21:23.326]      // while "1"  (timeout="50000")
[17:21:23.326]      // while-condition  =>  TRUE
[17:21:23.326]      // while "1"  (timeout="50000")
[17:21:23.327]      // while-condition  =>  TRUE
[17:21:23.327]      // while "1"  (timeout="50000")
[17:21:23.327]      // while-condition  =>  TRUE
[17:21:23.327]      // while "1"  (timeout="50000")
[17:21:23.327]      // while-condition  =>  TRUE
[17:21:23.328]      // while "1"  (timeout="50000")
[17:21:23.328]      // while-condition  =>  TRUE
[17:21:23.328]      // while "1"  (timeout="50000")
[17:21:23.328]      // while-condition  =>  TRUE
[17:21:23.328]      // while "1"  (timeout="50000")
[17:21:23.329]      // while-condition  =>  TRUE
[17:21:23.329]      // while "1"  (timeout="50000")
[17:21:23.329]      // while-condition  =>  TRUE
[17:21:23.329]      // while "1"  (timeout="50000")
[17:21:23.329]      // while-condition  =>  TRUE
[17:21:23.330]      // while "1"  (timeout="50000")
[17:21:23.330]      // while-condition  =>  TRUE
[17:21:23.330]      // while "1"  (timeout="50000")
[17:21:23.330]      // while-condition  =>  TRUE
[17:21:23.330]      // while "1"  (timeout="50000")
[17:21:23.331]      // while-condition  =>  TRUE
[17:21:23.331]      // while "1"  (timeout="50000")
[17:21:23.331]      // while-condition  =>  TRUE
[17:21:23.331]      // while "1"  (timeout="50000")
[17:21:23.331]      // while-condition  =>  TRUE
[17:21:23.332]      // while "1"  (timeout="50000")
[17:21:23.332]      // while-condition  =>  TRUE
[17:21:23.332]      // while "1"  (timeout="50000")
[17:21:23.332]      // while-condition  =>  TRUE
[17:21:23.332]      // while "1"  (timeout="50000")
[17:21:23.332]      // while-condition  =>  TRUE
[17:21:23.333]      // while "1"  (timeout="50000")
[17:21:23.333]      // while-condition  =>  TRUE
[17:21:23.333]      // while "1"  (timeout="50000")
[17:21:23.333]      // while-condition  =>  TRUE
[17:21:23.334]      // while "1"  (timeout="50000")
[17:21:23.334]      // while  =>  TIMEOUT
[17:21:23.334]      // end while "1"
[17:21:23.334]    </control>
[17:21:23.334]    <block atomic="false" info="">
[17:21:23.335]      DAP_SWJ_Pins(nReset, nReset, 0);
[17:21:23.336]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[17:21:23.337]    </block>
[17:21:23.337]    <control if="" while="1" timeout="10000" info="">
[17:21:23.337]      // while "1"  (timeout="10000")
[17:21:23.337]      // while-condition  =>  TRUE
[17:21:23.338]      // while "1"  (timeout="10000")
[17:21:23.338]      // while-condition  =>  TRUE
[17:21:23.338]      // while "1"  (timeout="10000")
[17:21:23.338]      // while-condition  =>  TRUE
[17:21:23.338]      // while "1"  (timeout="10000")
[17:21:23.339]      // while-condition  =>  TRUE
[17:21:23.339]      // while "1"  (timeout="10000")
[17:21:23.339]      // while-condition  =>  TRUE
[17:21:23.339]      // while "1"  (timeout="10000")
[17:21:23.340]      // while-condition  =>  TRUE
[17:21:23.340]      // while "1"  (timeout="10000")
[17:21:23.340]      // while-condition  =>  TRUE
[17:21:23.340]      // while "1"  (timeout="10000")
[17:21:23.341]      // while-condition  =>  TRUE
[17:21:23.341]      // while "1"  (timeout="10000")
[17:21:23.341]      // while-condition  =>  TRUE
[17:21:23.342]      // while "1"  (timeout="10000")
[17:21:23.342]      // while-condition  =>  TRUE
[17:21:23.342]      // while "1"  (timeout="10000")
[17:21:23.342]      // while-condition  =>  TRUE
[17:21:23.343]      // while "1"  (timeout="10000")
[17:21:23.343]      // while-condition  =>  TRUE
[17:21:23.343]      // while "1"  (timeout="10000")
[17:21:23.344]      // while-condition  =>  TRUE
[17:21:23.344]      // while "1"  (timeout="10000")
[17:21:23.344]      // while-condition  =>  TRUE
[17:21:23.344]      // while "1"  (timeout="10000")
[17:21:23.345]      // while-condition  =>  TRUE
[17:21:23.345]      // while "1"  (timeout="10000")
[17:21:23.345]      // while-condition  =>  TRUE
[17:21:23.345]      // while "1"  (timeout="10000")
[17:21:23.345]      // while-condition  =>  TRUE
[17:21:23.346]      // while "1"  (timeout="10000")
[17:21:23.346]      // while-condition  =>  TRUE
[17:21:23.346]      // while "1"  (timeout="10000")
[17:21:23.346]      // while-condition  =>  TRUE
[17:21:23.347]      // while "1"  (timeout="10000")
[17:21:23.347]      // while-condition  =>  TRUE
[17:21:23.347]      // while "1"  (timeout="10000")
[17:21:23.347]      // while-condition  =>  TRUE
[17:21:23.348]      // while "1"  (timeout="10000")
[17:21:23.348]      // while-condition  =>  TRUE
[17:21:23.348]      // while "1"  (timeout="10000")
[17:21:23.348]      // while-condition  =>  TRUE
[17:21:23.349]      // while "1"  (timeout="10000")
[17:21:23.349]      // while-condition  =>  TRUE
[17:21:23.349]      // while "1"  (timeout="10000")
[17:21:23.350]      // while-condition  =>  TRUE
[17:21:23.350]      // while "1"  (timeout="10000")
[17:21:23.350]      // while  =>  TIMEOUT
[17:21:23.350]      // end while "1"
[17:21:23.351]    </control>
[17:21:23.351]    <block atomic="true" info="">
[17:21:23.356]  
[17:21:23.356]  ! W001 : No atomic sequence support in debug unit
[17:21:23.356]  
[17:21:23.359]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[17:21:23.361]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[17:21:23.361]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[17:21:23.363]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[17:21:23.363]    </block>
[17:21:23.363]    <block atomic="false" info="">
[17:21:23.363]      __errorcontrol = 0x00000001;
[17:21:23.364]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[17:21:23.364]      ReadDP(0x0);
[17:21:23.373]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[17:21:23.390]      __errorcontrol = 0x00000000;
[17:21:23.390]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[17:21:23.391]    </block>
[17:21:23.391]  </sequence>
[17:21:23.391]  
[17:21:23.392]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[17:21:23.392]  
[17:21:23.392]  <debugvars>
[17:21:23.392]    // Pre-defined
[17:21:23.392]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:21:23.393]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:21:23.393]    __dp=0x00000000
[17:21:23.393]    __ap=0x00000000
[17:21:23.393]    __traceout=0x00000000      (Trace Disabled)
[17:21:23.394]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:21:23.394]    __FlashAddr=0x00000000
[17:21:23.394]    __FlashLen=0x00000000
[17:21:23.394]    __FlashArg=0x00000000
[17:21:23.395]    __FlashOp=0x00000000
[17:21:23.395]    __Result=0x00000000
[17:21:23.395]  </debugvars>
[17:21:23.395]  
[17:21:23.396]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[17:21:23.396]  </sequence>
[17:21:23.396]  
[17:22:01.221]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[17:22:01.221]  
[17:22:01.223]  <debugvars>
[17:22:01.223]    // Pre-defined
[17:22:01.224]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:22:01.224]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[17:22:01.224]    __dp=0x00000000
[17:22:01.225]    __ap=0x00000000
[17:22:01.225]    __traceout=0x00000000      (Trace Disabled)
[17:22:01.226]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:22:01.226]    __FlashAddr=0x00000000
[17:22:01.226]    __FlashLen=0x00000000
[17:22:01.227]    __FlashArg=0x00000000
[17:22:01.227]    __FlashOp=0x00000000
[17:22:01.228]    __Result=0x00000000
[17:22:01.228]  </debugvars>
[17:22:01.228]  
[17:22:01.229]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[17:22:01.229]    <block atomic="false" info="">
[17:22:01.229]      __var nReset      = 0x80;
[17:22:01.229]        // -> [nReset <= 0x00000080]
[17:22:01.230]      DAP_SWJ_Pins(0x00, nReset, 0);
[17:22:01.232]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[17:22:01.232]    </block>
[17:22:01.232]    <control if="" while="1" timeout="50000" info="">
[17:22:01.232]      // while "1"  (timeout="50000")
[17:22:01.233]      // while-condition  =>  TRUE
[17:22:01.233]      // while "1"  (timeout="50000")
[17:22:01.233]      // while-condition  =>  TRUE
[17:22:01.233]      // while "1"  (timeout="50000")
[17:22:01.233]      // while-condition  =>  TRUE
[17:22:01.234]      // while "1"  (timeout="50000")
[17:22:01.234]      // while-condition  =>  TRUE
[17:22:01.234]      // while "1"  (timeout="50000")
[17:22:01.234]      // while-condition  =>  TRUE
[17:22:01.234]      // while "1"  (timeout="50000")
[17:22:01.235]      // while-condition  =>  TRUE
[17:22:01.235]      // while "1"  (timeout="50000")
[17:22:01.235]      // while-condition  =>  TRUE
[17:22:01.235]      // while "1"  (timeout="50000")
[17:22:01.235]      // while-condition  =>  TRUE
[17:22:01.236]      // while "1"  (timeout="50000")
[17:22:01.236]      // while-condition  =>  TRUE
[17:22:01.236]      // while "1"  (timeout="50000")
[17:22:01.236]      // while-condition  =>  TRUE
[17:22:01.237]      // while "1"  (timeout="50000")
[17:22:01.237]      // while-condition  =>  TRUE
[17:22:01.237]      // while "1"  (timeout="50000")
[17:22:01.238]      // while-condition  =>  TRUE
[17:22:01.238]      // while "1"  (timeout="50000")
[17:22:01.238]      // while-condition  =>  TRUE
[17:22:01.238]      // while "1"  (timeout="50000")
[17:22:01.239]      // while-condition  =>  TRUE
[17:22:01.239]      // while "1"  (timeout="50000")
[17:22:01.239]      // while-condition  =>  TRUE
[17:22:01.239]      // while "1"  (timeout="50000")
[17:22:01.240]      // while-condition  =>  TRUE
[17:22:01.240]      // while "1"  (timeout="50000")
[17:22:01.240]      // while-condition  =>  TRUE
[17:22:01.240]      // while "1"  (timeout="50000")
[17:22:01.240]      // while-condition  =>  TRUE
[17:22:01.241]      // while "1"  (timeout="50000")
[17:22:01.241]      // while-condition  =>  TRUE
[17:22:01.241]      // while "1"  (timeout="50000")
[17:22:01.241]      // while-condition  =>  TRUE
[17:22:01.241]      // while "1"  (timeout="50000")
[17:22:01.242]      // while-condition  =>  TRUE
[17:22:01.242]      // while "1"  (timeout="50000")
[17:22:01.242]      // while-condition  =>  TRUE
[17:22:01.242]      // while "1"  (timeout="50000")
[17:22:01.242]      // while-condition  =>  TRUE
[17:22:01.242]      // while "1"  (timeout="50000")
[17:22:01.243]      // while-condition  =>  TRUE
[17:22:01.243]      // while "1"  (timeout="50000")
[17:22:01.243]      // while-condition  =>  TRUE
[17:22:01.243]      // while "1"  (timeout="50000")
[17:22:01.243]      // while-condition  =>  TRUE
[17:22:01.244]      // while "1"  (timeout="50000")
[17:22:01.244]      // while-condition  =>  TRUE
[17:22:01.244]      // while "1"  (timeout="50000")
[17:22:01.244]      // while-condition  =>  TRUE
[17:22:01.244]      // while "1"  (timeout="50000")
[17:22:01.245]      // while-condition  =>  TRUE
[17:22:01.245]      // while "1"  (timeout="50000")
[17:22:01.245]      // while-condition  =>  TRUE
[17:22:01.246]      // while "1"  (timeout="50000")
[17:22:01.246]      // while-condition  =>  TRUE
[17:22:01.246]      // while "1"  (timeout="50000")
[17:22:01.246]      // while-condition  =>  TRUE
[17:22:01.247]      // while "1"  (timeout="50000")
[17:22:01.247]      // while-condition  =>  TRUE
[17:22:01.247]      // while "1"  (timeout="50000")
[17:22:01.247]      // while-condition  =>  TRUE
[17:22:01.247]      // while "1"  (timeout="50000")
[17:22:01.247]      // while-condition  =>  TRUE
[17:22:01.247]      // while "1"  (timeout="50000")
[17:22:01.247]      // while-condition  =>  TRUE
[17:22:01.247]      // while "1"  (timeout="50000")
[17:22:01.247]      // while-condition  =>  TRUE
[17:22:01.248]      // while "1"  (timeout="50000")
[17:22:01.248]      // while-condition  =>  TRUE
[17:22:01.248]      // while "1"  (timeout="50000")
[17:22:01.248]      // while-condition  =>  TRUE
[17:22:01.249]      // while "1"  (timeout="50000")
[17:22:01.249]      // while-condition  =>  TRUE
[17:22:01.249]      // while "1"  (timeout="50000")
[17:22:01.249]      // while-condition  =>  TRUE
[17:22:01.249]      // while "1"  (timeout="50000")
[17:22:01.250]      // while-condition  =>  TRUE
[17:22:01.250]      // while "1"  (timeout="50000")
[17:22:01.250]      // while-condition  =>  TRUE
[17:22:01.250]      // while "1"  (timeout="50000")
[17:22:01.252]      // while-condition  =>  TRUE
[17:22:01.252]      // while "1"  (timeout="50000")
[17:22:01.252]      // while-condition  =>  TRUE
[17:22:01.252]      // while "1"  (timeout="50000")
[17:22:01.252]      // while-condition  =>  TRUE
[17:22:01.252]      // while "1"  (timeout="50000")
[17:22:01.252]      // while-condition  =>  TRUE
[17:22:01.252]      // while "1"  (timeout="50000")
[17:22:01.253]      // while-condition  =>  TRUE
[17:22:01.253]      // while "1"  (timeout="50000")
[17:22:01.253]      // while-condition  =>  TRUE
[17:22:01.253]      // while "1"  (timeout="50000")
[17:22:01.253]      // while-condition  =>  TRUE
[17:22:01.254]      // while "1"  (timeout="50000")
[17:22:01.254]      // while-condition  =>  TRUE
[17:22:01.254]      // while "1"  (timeout="50000")
[17:22:01.254]      // while-condition  =>  TRUE
[17:22:01.255]      // while "1"  (timeout="50000")
[17:22:01.255]      // while-condition  =>  TRUE
[17:22:01.255]      // while "1"  (timeout="50000")
[17:22:01.255]      // while-condition  =>  TRUE
[17:22:01.255]      // while "1"  (timeout="50000")
[17:22:01.256]      // while-condition  =>  TRUE
[17:22:01.256]      // while "1"  (timeout="50000")
[17:22:01.256]      // while-condition  =>  TRUE
[17:22:01.256]      // while "1"  (timeout="50000")
[17:22:01.257]      // while-condition  =>  TRUE
[17:22:01.257]      // while "1"  (timeout="50000")
[17:22:01.257]      // while-condition  =>  TRUE
[17:22:01.257]      // while "1"  (timeout="50000")
[17:22:01.257]      // while-condition  =>  TRUE
[17:22:01.258]      // while "1"  (timeout="50000")
[17:22:01.258]      // while-condition  =>  TRUE
[17:22:01.258]      // while "1"  (timeout="50000")
[17:22:01.258]      // while-condition  =>  TRUE
[17:22:01.259]      // while "1"  (timeout="50000")
[17:22:01.259]      // while-condition  =>  TRUE
[17:22:01.259]      // while "1"  (timeout="50000")
[17:22:01.259]      // while-condition  =>  TRUE
[17:22:01.260]      // while "1"  (timeout="50000")
[17:22:01.260]      // while-condition  =>  TRUE
[17:22:01.260]      // while "1"  (timeout="50000")
[17:22:01.260]      // while-condition  =>  TRUE
[17:22:01.260]      // while "1"  (timeout="50000")
[17:22:01.261]      // while-condition  =>  TRUE
[17:22:01.261]      // while "1"  (timeout="50000")
[17:22:01.261]      // while-condition  =>  TRUE
[17:22:01.261]      // while "1"  (timeout="50000")
[17:22:01.262]      // while-condition  =>  TRUE
[17:22:01.262]      // while "1"  (timeout="50000")
[17:22:01.262]      // while-condition  =>  TRUE
[17:22:01.262]      // while "1"  (timeout="50000")
[17:22:01.262]      // while-condition  =>  TRUE
[17:22:01.263]      // while "1"  (timeout="50000")
[17:22:01.263]      // while-condition  =>  TRUE
[17:22:01.263]      // while "1"  (timeout="50000")
[17:22:01.263]      // while-condition  =>  TRUE
[17:22:01.264]      // while "1"  (timeout="50000")
[17:22:01.264]      // while-condition  =>  TRUE
[17:22:01.264]      // while "1"  (timeout="50000")
[17:22:01.264]      // while-condition  =>  TRUE
[17:22:01.264]      // while "1"  (timeout="50000")
[17:22:01.265]      // while-condition  =>  TRUE
[17:22:01.265]      // while "1"  (timeout="50000")
[17:22:01.265]      // while-condition  =>  TRUE
[17:22:01.265]      // while "1"  (timeout="50000")
[17:22:01.266]      // while-condition  =>  TRUE
[17:22:01.266]      // while "1"  (timeout="50000")
[17:22:01.266]      // while-condition  =>  TRUE
[17:22:01.266]      // while "1"  (timeout="50000")
[17:22:01.267]      // while-condition  =>  TRUE
[17:22:01.267]      // while "1"  (timeout="50000")
[17:22:01.267]      // while-condition  =>  TRUE
[17:22:01.267]      // while "1"  (timeout="50000")
[17:22:01.268]      // while-condition  =>  TRUE
[17:22:01.268]      // while "1"  (timeout="50000")
[17:22:01.268]      // while-condition  =>  TRUE
[17:22:01.268]      // while "1"  (timeout="50000")
[17:22:01.269]      // while-condition  =>  TRUE
[17:22:01.269]      // while "1"  (timeout="50000")
[17:22:01.269]      // while-condition  =>  TRUE
[17:22:01.269]      // while "1"  (timeout="50000")
[17:22:01.270]      // while-condition  =>  TRUE
[17:22:01.270]      // while "1"  (timeout="50000")
[17:22:01.270]      // while-condition  =>  TRUE
[17:22:01.270]      // while "1"  (timeout="50000")
[17:22:01.270]      // while-condition  =>  TRUE
[17:22:01.271]      // while "1"  (timeout="50000")
[17:22:01.271]      // while-condition  =>  TRUE
[17:22:01.271]      // while "1"  (timeout="50000")
[17:22:01.271]      // while-condition  =>  TRUE
[17:22:01.271]      // while "1"  (timeout="50000")
[17:22:01.272]      // while-condition  =>  TRUE
[17:22:01.272]      // while "1"  (timeout="50000")
[17:22:01.272]      // while-condition  =>  TRUE
[17:22:01.272]      // while "1"  (timeout="50000")
[17:22:01.273]      // while-condition  =>  TRUE
[17:22:01.273]      // while "1"  (timeout="50000")
[17:22:01.273]      // while-condition  =>  TRUE
[17:22:01.273]      // while "1"  (timeout="50000")
[17:22:01.273]      // while-condition  =>  TRUE
[17:22:01.274]      // while "1"  (timeout="50000")
[17:22:01.274]      // while-condition  =>  TRUE
[17:22:01.274]      // while "1"  (timeout="50000")
[17:22:01.274]      // while-condition  =>  TRUE
[17:22:01.275]      // while "1"  (timeout="50000")
[17:22:01.275]      // while-condition  =>  TRUE
[17:22:01.275]      // while "1"  (timeout="50000")
[17:22:01.276]      // while-condition  =>  TRUE
[17:22:01.276]      // while "1"  (timeout="50000")
[17:22:01.276]      // while-condition  =>  TRUE
[17:22:01.276]      // while "1"  (timeout="50000")
[17:22:01.277]      // while-condition  =>  TRUE
[17:22:01.277]      // while "1"  (timeout="50000")
[17:22:01.277]      // while-condition  =>  TRUE
[17:22:01.278]      // while "1"  (timeout="50000")
[17:22:01.278]      // while-condition  =>  TRUE
[17:22:01.278]      // while "1"  (timeout="50000")
[17:22:01.278]      // while-condition  =>  TRUE
[17:22:01.279]      // while "1"  (timeout="50000")
[17:22:01.279]      // while-condition  =>  TRUE
[17:22:01.280]      // while "1"  (timeout="50000")
[17:22:01.280]      // while-condition  =>  TRUE
[17:22:01.280]      // while "1"  (timeout="50000")
[17:22:01.280]      // while-condition  =>  TRUE
[17:22:01.281]      // while "1"  (timeout="50000")
[17:22:01.281]      // while-condition  =>  TRUE
[17:22:01.281]      // while "1"  (timeout="50000")
[17:22:01.282]      // while-condition  =>  TRUE
[17:22:01.282]      // while "1"  (timeout="50000")
[17:22:01.282]      // while-condition  =>  TRUE
[17:22:01.282]      // while "1"  (timeout="50000")
[17:22:01.283]      // while-condition  =>  TRUE
[17:22:01.283]      // while "1"  (timeout="50000")
[17:22:01.283]      // while-condition  =>  TRUE
[17:22:01.283]      // while "1"  (timeout="50000")
[17:22:01.284]      // while-condition  =>  TRUE
[17:22:01.284]      // while "1"  (timeout="50000")
[17:22:01.284]      // while-condition  =>  TRUE
[17:22:01.285]      // while "1"  (timeout="50000")
[17:22:01.285]      // while-condition  =>  TRUE
[17:22:01.286]      // while "1"  (timeout="50000")
[17:22:01.286]      // while-condition  =>  TRUE
[17:22:01.286]      // while "1"  (timeout="50000")
[17:22:01.286]      // while-condition  =>  TRUE
[17:22:01.287]      // while "1"  (timeout="50000")
[17:22:01.287]      // while  =>  TIMEOUT
[17:22:01.287]      // end while "1"
[17:22:01.287]    </control>
[17:22:01.288]    <block atomic="false" info="">
[17:22:01.288]      DAP_SWJ_Pins(nReset, nReset, 0);
[17:22:01.290]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[17:22:01.290]    </block>
[17:22:01.291]    <control if="" while="1" timeout="10000" info="">
[17:22:01.291]      // while "1"  (timeout="10000")
[17:22:01.291]      // while-condition  =>  TRUE
[17:22:01.292]      // while "1"  (timeout="10000")
[17:22:01.292]      // while-condition  =>  TRUE
[17:22:01.292]      // while "1"  (timeout="10000")
[17:22:01.292]      // while-condition  =>  TRUE
[17:22:01.292]      // while "1"  (timeout="10000")
[17:22:01.293]      // while-condition  =>  TRUE
[17:22:01.293]      // while "1"  (timeout="10000")
[17:22:01.293]      // while-condition  =>  TRUE
[17:22:01.293]      // while "1"  (timeout="10000")
[17:22:01.294]      // while-condition  =>  TRUE
[17:22:01.294]      // while "1"  (timeout="10000")
[17:22:01.294]      // while-condition  =>  TRUE
[17:22:01.294]      // while "1"  (timeout="10000")
[17:22:01.294]      // while-condition  =>  TRUE
[17:22:01.295]      // while "1"  (timeout="10000")
[17:22:01.295]      // while-condition  =>  TRUE
[17:22:01.295]      // while "1"  (timeout="10000")
[17:22:01.295]      // while-condition  =>  TRUE
[17:22:01.296]      // while "1"  (timeout="10000")
[17:22:01.296]      // while-condition  =>  TRUE
[17:22:01.296]      // while "1"  (timeout="10000")
[17:22:01.296]      // while-condition  =>  TRUE
[17:22:01.296]      // while "1"  (timeout="10000")
[17:22:01.297]      // while-condition  =>  TRUE
[17:22:01.297]      // while "1"  (timeout="10000")
[17:22:01.297]      // while-condition  =>  TRUE
[17:22:01.297]      // while "1"  (timeout="10000")
[17:22:01.298]      // while-condition  =>  TRUE
[17:22:01.298]      // while "1"  (timeout="10000")
[17:22:01.298]      // while-condition  =>  TRUE
[17:22:01.298]      // while "1"  (timeout="10000")
[17:22:01.298]      // while-condition  =>  TRUE
[17:22:01.299]      // while "1"  (timeout="10000")
[17:22:01.299]      // while-condition  =>  TRUE
[17:22:01.299]      // while "1"  (timeout="10000")
[17:22:01.299]      // while-condition  =>  TRUE
[17:22:01.300]      // while "1"  (timeout="10000")
[17:22:01.300]      // while-condition  =>  TRUE
[17:22:01.300]      // while "1"  (timeout="10000")
[17:22:01.300]      // while-condition  =>  TRUE
[17:22:01.301]      // while "1"  (timeout="10000")
[17:22:01.301]      // while-condition  =>  TRUE
[17:22:01.301]      // while "1"  (timeout="10000")
[17:22:01.301]      // while-condition  =>  TRUE
[17:22:01.302]      // while "1"  (timeout="10000")
[17:22:01.302]      // while  =>  TIMEOUT
[17:22:01.302]      // end while "1"
[17:22:01.302]    </control>
[17:22:01.302]    <block atomic="true" info="">
[17:22:01.307]  
[17:22:01.307]  ! W001 : No atomic sequence support in debug unit
[17:22:01.307]  
[17:22:01.310]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[17:22:01.311]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[17:22:01.312]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[17:22:01.313]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[17:22:01.314]    </block>
[17:22:01.314]    <block atomic="false" info="">
[17:22:01.314]      __errorcontrol = 0x00000001;
[17:22:01.315]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[17:22:01.315]      ReadDP(0x0);
[17:22:01.317]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[17:22:01.318]      __errorcontrol = 0x00000000;
[17:22:01.318]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[17:22:01.318]    </block>
[17:22:01.318]  </sequence>
[17:22:01.319]  
[17:22:01.319]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[17:22:01.319]  
[17:22:01.320]  <debugvars>
[17:22:01.320]    // Pre-defined
[17:22:01.320]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:22:01.320]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:22:01.321]    __dp=0x00000000
[17:22:01.321]    __ap=0x00000000
[17:22:01.321]    __traceout=0x00000000      (Trace Disabled)
[17:22:01.321]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:22:01.322]    __FlashAddr=0x00000000
[17:22:01.322]    __FlashLen=0x00000000
[17:22:01.322]    __FlashArg=0x00000000
[17:22:01.322]    __FlashOp=0x00000000
[17:22:01.322]    __Result=0x00000000
[17:22:01.323]  </debugvars>
[17:22:01.323]  
[17:22:01.323]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[17:22:01.323]  </sequence>
[17:22:01.324]  
[17:22:01.327]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[17:22:01.327]  
[17:22:01.328]  <debugvars>
[17:22:01.328]    // Pre-defined
[17:22:01.328]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:22:01.328]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:22:01.329]    __dp=0x00000000
[17:22:01.329]    __ap=0x00000000
[17:22:01.329]    __traceout=0x00000000      (Trace Disabled)
[17:22:01.330]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:22:01.330]    __FlashAddr=0x00000000
[17:22:01.330]    __FlashLen=0x00000000
[17:22:01.340]    __FlashArg=0x00000000
[17:22:01.341]    __FlashOp=0x00000000
[17:22:01.341]    __Result=0x00000000
[17:22:01.341]  </debugvars>
[17:22:01.341]  
[17:22:01.342]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[17:22:01.342]    <block atomic="false" info="">
[17:22:01.342]      __var SW_DP_ABORT  = 0x0;
[17:22:01.342]        // -> [SW_DP_ABORT <= 0x00000000]
[17:22:01.343]      __var DP_CTRL_STAT = 0x4;
[17:22:01.343]        // -> [DP_CTRL_STAT <= 0x00000004]
[17:22:01.343]      __var DP_SELECT    = 0x8;
[17:22:01.343]        // -> [DP_SELECT <= 0x00000008]
[17:22:01.344]      __var powered_down = 0;
[17:22:01.344]        // -> [powered_down <= 0x00000000]
[17:22:01.344]      WriteDP(DP_SELECT, 0x00000000);
[17:22:01.346]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[17:22:01.347]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[17:22:01.348]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[17:22:01.349]        // -> [powered_down <= 0x00000001]
[17:22:01.349]    </block>
[17:22:01.349]    <control if="powered_down" while="" timeout="0" info="">
[17:22:01.349]      // if-block "powered_down"
[17:22:01.350]        // =>  TRUE
[17:22:01.350]      <block atomic="false" info="">
[17:22:01.350]        WriteDP(DP_CTRL_STAT, 0x50000000);
[17:22:01.352]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[17:22:01.353]      </block>
[17:22:01.353]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[17:22:01.353]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[17:22:01.355]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[17:22:01.356]        // while-condition  =>  FALSE
[17:22:01.356]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[17:22:01.356]      </control>
[17:22:01.356]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[17:22:01.357]        // if-block "(__protocol & 0xFFFF) == 1"
[17:22:01.357]          // =>  FALSE
[17:22:01.357]        // skip if-block "(__protocol & 0xFFFF) == 1"
[17:22:01.357]      </control>
[17:22:01.358]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[17:22:01.358]        // if-block "(__protocol & 0xFFFF) == 2"
[17:22:01.358]          // =>  TRUE
[17:22:01.358]        <block atomic="false" info="">
[17:22:01.359]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[17:22:01.360]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[17:22:01.361]          WriteDP(SW_DP_ABORT, 0x0000001E);
[17:22:01.362]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[17:22:01.363]        </block>
[17:22:01.363]        // end if-block "(__protocol & 0xFFFF) == 2"
[17:22:01.363]      </control>
[17:22:01.363]      // end if-block "powered_down"
[17:22:01.364]    </control>
[17:22:01.364]  </sequence>
[17:22:01.364]  
[17:22:01.469]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[17:22:01.469]  
[17:22:01.469]  <debugvars>
[17:22:01.470]    // Pre-defined
[17:22:01.470]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:22:01.471]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:22:01.471]    __dp=0x00000000
[17:22:01.471]    __ap=0x00000000
[17:22:01.472]    __traceout=0x00000000      (Trace Disabled)
[17:22:01.472]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:22:01.473]    __FlashAddr=0x00000000
[17:22:01.473]    __FlashLen=0x00000000
[17:22:01.473]    __FlashArg=0x00000000
[17:22:01.474]    __FlashOp=0x00000000
[17:22:01.474]    __Result=0x00000000
[17:22:01.474]  </debugvars>
[17:22:01.474]  
[17:22:01.474]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[17:22:01.475]    <block atomic="true" info="">
[17:22:01.480]  
[17:22:01.480]  ! W001 : No atomic sequence support in debug unit
[17:22:01.480]  
[17:22:01.482]      __var DP_R_IDCODE    = 0x0;
[17:22:01.483]        // -> [DP_R_IDCODE <= 0x00000000]
[17:22:01.483]      __var DP_W_ABORT    = 0x0;
[17:22:01.483]        // -> [DP_W_ABORT <= 0x00000000]
[17:22:01.484]      __var DP_CTRLSTAT = 0x4;
[17:22:01.484]        // -> [DP_CTRLSTAT <= 0x00000004]
[17:22:01.484]      __var DP_W_SELECT    = 0x8;
[17:22:01.484]        // -> [DP_W_SELECT <= 0x00000008]
[17:22:01.485]      __var AP_TAR		= 0x4;
[17:22:01.485]        // -> [AP_TAR <= 0x00000004]
[17:22:01.485]      __var AP_BD0		= 0x0;
[17:22:01.485]        // -> [AP_BD0 <= 0x00000000]
[17:22:01.486]      __var AP_BD1		= 0x4;
[17:22:01.486]        // -> [AP_BD1 <= 0x00000004]
[17:22:01.486]      __var AP_BD2		= 0x8;
[17:22:01.487]        // -> [AP_BD2 <= 0x00000008]
[17:22:01.487]      __var PCWithinFlash = 0;
[17:22:01.487]        // -> [PCWithinFlash <= 0x00000000]
[17:22:01.487]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[17:22:01.494]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.507]    </block>
[17:22:01.507]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[17:22:01.508]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[17:22:01.513]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.514]      // while-condition  =>  FALSE
[17:22:01.514]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[17:22:01.515]    </control>
[17:22:01.515]    <block atomic="true" info="">
[17:22:01.522]  
[17:22:01.522]  ! W001 : No atomic sequence support in debug unit
[17:22:01.522]  
[17:22:01.543]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[17:22:01.545]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[17:22:01.547]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[17:22:01.550]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.550]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[17:22:01.553]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[17:22:01.553]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[17:22:01.558]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.558]    </block>
[17:22:01.558]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[17:22:01.559]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.561]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.561]      // while-condition  =>  TRUE
[17:22:01.561]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.564]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.564]      // while-condition  =>  TRUE
[17:22:01.565]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.567]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.567]      // while-condition  =>  TRUE
[17:22:01.568]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.570]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.570]      // while-condition  =>  TRUE
[17:22:01.570]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.573]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.573]      // while-condition  =>  TRUE
[17:22:01.573]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.576]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.576]      // while-condition  =>  TRUE
[17:22:01.576]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.579]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.579]      // while-condition  =>  TRUE
[17:22:01.579]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.582]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.582]      // while-condition  =>  TRUE
[17:22:01.582]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.585]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.585]      // while-condition  =>  TRUE
[17:22:01.585]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.588]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.588]      // while-condition  =>  TRUE
[17:22:01.588]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.590]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.590]      // while-condition  =>  TRUE
[17:22:01.590]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.593]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.593]      // while-condition  =>  TRUE
[17:22:01.593]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.595]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.595]      // while-condition  =>  TRUE
[17:22:01.595]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.598]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.598]      // while-condition  =>  TRUE
[17:22:01.598]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.601]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.601]      // while-condition  =>  TRUE
[17:22:01.601]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.604]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.604]      // while-condition  =>  TRUE
[17:22:01.604]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.607]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.607]      // while-condition  =>  TRUE
[17:22:01.607]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.610]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.610]      // while-condition  =>  TRUE
[17:22:01.610]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.613]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.613]      // while-condition  =>  TRUE
[17:22:01.613]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.616]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.616]      // while-condition  =>  TRUE
[17:22:01.616]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.619]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.619]      // while-condition  =>  TRUE
[17:22:01.619]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.622]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.622]      // while-condition  =>  TRUE
[17:22:01.622]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.625]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.625]      // while-condition  =>  TRUE
[17:22:01.625]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.628]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.628]      // while-condition  =>  TRUE
[17:22:01.628]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.631]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.631]      // while-condition  =>  TRUE
[17:22:01.631]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.634]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.634]      // while-condition  =>  TRUE
[17:22:01.634]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.637]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.637]      // while-condition  =>  TRUE
[17:22:01.637]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.640]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.640]      // while-condition  =>  TRUE
[17:22:01.640]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.643]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.643]      // while-condition  =>  TRUE
[17:22:01.643]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.646]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.646]      // while-condition  =>  TRUE
[17:22:01.646]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.649]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.649]      // while-condition  =>  TRUE
[17:22:01.649]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.652]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.652]      // while-condition  =>  TRUE
[17:22:01.652]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.655]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.655]      // while-condition  =>  TRUE
[17:22:01.655]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.658]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.658]      // while-condition  =>  TRUE
[17:22:01.658]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.661]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.661]      // while-condition  =>  TRUE
[17:22:01.661]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.664]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.664]      // while-condition  =>  TRUE
[17:22:01.665]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:01.665]      // while  =>  TIMEOUT
[17:22:01.666]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[17:22:01.666]    </control>
[17:22:01.668]    <block atomic="false" info="">
[17:22:01.668]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[17:22:01.670]        // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[17:22:01.670]        // -> [PCWithinFlash <= 0x00000000]
[17:22:01.670]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[17:22:01.673]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[17:22:01.673]    </block>
[17:22:01.673]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[17:22:01.674]      // if-block "PCWithinFlash == 0"
[17:22:01.674]        // =>  TRUE
[17:22:01.674]      // end if-block "PCWithinFlash == 0"
[17:22:01.674]    </control>
[17:22:01.675]  </sequence>
[17:22:01.675]  
[17:22:01.721]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[17:22:01.721]  
[17:22:01.722]  <debugvars>
[17:22:01.722]    // Pre-defined
[17:22:01.722]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:22:01.723]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:22:01.723]    __dp=0x00000000
[17:22:01.723]    __ap=0x00000000
[17:22:01.723]    __traceout=0x00000000      (Trace Disabled)
[17:22:01.724]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:22:01.724]    __FlashAddr=0x00000000
[17:22:01.724]    __FlashLen=0x00000000
[17:22:01.724]    __FlashArg=0x00000000
[17:22:01.725]    __FlashOp=0x00000000
[17:22:01.725]    __Result=0x00000000
[17:22:01.725]  </debugvars>
[17:22:01.725]  
[17:22:01.726]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[17:22:01.726]    <block atomic="false" info="">
[17:22:01.726]    </block>
[17:22:01.726]  </sequence>
[17:22:01.727]  
[17:22:01.729]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[17:22:01.729]  
[17:22:01.729]  <debugvars>
[17:22:01.730]    // Pre-defined
[17:22:01.730]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:22:01.730]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:22:01.730]    __dp=0x00000000
[17:22:01.731]    __ap=0x00000000
[17:22:01.731]    __traceout=0x00000000      (Trace Disabled)
[17:22:01.731]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:22:01.731]    __FlashAddr=0x00000000
[17:22:01.732]    __FlashLen=0x00000000
[17:22:01.732]    __FlashArg=0x00000000
[17:22:01.732]    __FlashOp=0x00000000
[17:22:01.732]    __Result=0x00000000
[17:22:01.733]  </debugvars>
[17:22:01.733]  
[17:22:01.733]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[17:22:01.733]    <block atomic="false" info="">
[17:22:01.733]      __var nReset      = 0x80;
[17:22:01.734]        // -> [nReset <= 0x00000080]
[17:22:01.734]      DAP_SWJ_Pins(0x00, nReset, 0);
[17:22:01.736]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[17:22:01.737]    </block>
[17:22:01.737]    <control if="" while="1" timeout="50000" info="">
[17:22:01.737]      // while "1"  (timeout="50000")
[17:22:01.737]      // while-condition  =>  TRUE
[17:22:01.738]      // while "1"  (timeout="50000")
[17:22:01.738]      // while-condition  =>  TRUE
[17:22:01.738]      // while "1"  (timeout="50000")
[17:22:01.738]      // while-condition  =>  TRUE
[17:22:01.739]      // while "1"  (timeout="50000")
[17:22:01.739]      // while-condition  =>  TRUE
[17:22:01.739]      // while "1"  (timeout="50000")
[17:22:01.739]      // while-condition  =>  TRUE
[17:22:01.740]      // while "1"  (timeout="50000")
[17:22:01.740]      // while-condition  =>  TRUE
[17:22:01.740]      // while "1"  (timeout="50000")
[17:22:01.740]      // while-condition  =>  TRUE
[17:22:01.741]      // while "1"  (timeout="50000")
[17:22:01.741]      // while-condition  =>  TRUE
[17:22:01.741]      // while "1"  (timeout="50000")
[17:22:01.741]      // while-condition  =>  TRUE
[17:22:01.741]      // while "1"  (timeout="50000")
[17:22:01.741]      // while-condition  =>  TRUE
[17:22:01.741]      // while "1"  (timeout="50000")
[17:22:01.741]      // while-condition  =>  TRUE
[17:22:01.741]      // while "1"  (timeout="50000")
[17:22:01.742]      // while-condition  =>  TRUE
[17:22:01.742]      // while "1"  (timeout="50000")
[17:22:01.742]      // while-condition  =>  TRUE
[17:22:01.742]      // while "1"  (timeout="50000")
[17:22:01.743]      // while-condition  =>  TRUE
[17:22:01.743]      // while "1"  (timeout="50000")
[17:22:01.743]      // while-condition  =>  TRUE
[17:22:01.743]      // while "1"  (timeout="50000")
[17:22:01.743]      // while-condition  =>  TRUE
[17:22:01.744]      // while "1"  (timeout="50000")
[17:22:01.744]      // while-condition  =>  TRUE
[17:22:01.744]      // while "1"  (timeout="50000")
[17:22:01.744]      // while-condition  =>  TRUE
[17:22:01.745]      // while "1"  (timeout="50000")
[17:22:01.745]      // while-condition  =>  TRUE
[17:22:01.745]      // while "1"  (timeout="50000")
[17:22:01.745]      // while-condition  =>  TRUE
[17:22:01.745]      // while "1"  (timeout="50000")
[17:22:01.746]      // while-condition  =>  TRUE
[17:22:01.746]      // while "1"  (timeout="50000")
[17:22:01.746]      // while-condition  =>  TRUE
[17:22:01.746]      // while "1"  (timeout="50000")
[17:22:01.747]      // while-condition  =>  TRUE
[17:22:01.747]      // while "1"  (timeout="50000")
[17:22:01.747]      // while-condition  =>  TRUE
[17:22:01.747]      // while "1"  (timeout="50000")
[17:22:01.747]      // while-condition  =>  TRUE
[17:22:01.748]      // while "1"  (timeout="50000")
[17:22:01.748]      // while-condition  =>  TRUE
[17:22:01.748]      // while "1"  (timeout="50000")
[17:22:01.748]      // while-condition  =>  TRUE
[17:22:01.749]      // while "1"  (timeout="50000")
[17:22:01.749]      // while-condition  =>  TRUE
[17:22:01.749]      // while "1"  (timeout="50000")
[17:22:01.750]      // while-condition  =>  TRUE
[17:22:01.750]      // while "1"  (timeout="50000")
[17:22:01.751]      // while-condition  =>  TRUE
[17:22:01.751]      // while "1"  (timeout="50000")
[17:22:01.751]      // while-condition  =>  TRUE
[17:22:01.751]      // while "1"  (timeout="50000")
[17:22:01.752]      // while-condition  =>  TRUE
[17:22:01.752]      // while "1"  (timeout="50000")
[17:22:01.752]      // while-condition  =>  TRUE
[17:22:01.752]      // while "1"  (timeout="50000")
[17:22:01.752]      // while-condition  =>  TRUE
[17:22:01.753]      // while "1"  (timeout="50000")
[17:22:01.753]      // while-condition  =>  TRUE
[17:22:01.753]      // while "1"  (timeout="50000")
[17:22:01.753]      // while-condition  =>  TRUE
[17:22:01.754]      // while "1"  (timeout="50000")
[17:22:01.754]      // while-condition  =>  TRUE
[17:22:01.754]      // while "1"  (timeout="50000")
[17:22:01.754]      // while-condition  =>  TRUE
[17:22:01.755]      // while "1"  (timeout="50000")
[17:22:01.755]      // while-condition  =>  TRUE
[17:22:01.755]      // while "1"  (timeout="50000")
[17:22:01.755]      // while-condition  =>  TRUE
[17:22:01.756]      // while "1"  (timeout="50000")
[17:22:01.756]      // while-condition  =>  TRUE
[17:22:01.756]      // while "1"  (timeout="50000")
[17:22:01.756]      // while-condition  =>  TRUE
[17:22:01.757]      // while "1"  (timeout="50000")
[17:22:01.757]      // while-condition  =>  TRUE
[17:22:01.757]      // while "1"  (timeout="50000")
[17:22:01.757]      // while-condition  =>  TRUE
[17:22:01.757]      // while "1"  (timeout="50000")
[17:22:01.758]      // while-condition  =>  TRUE
[17:22:01.758]      // while "1"  (timeout="50000")
[17:22:01.758]      // while-condition  =>  TRUE
[17:22:01.758]      // while "1"  (timeout="50000")
[17:22:01.759]      // while-condition  =>  TRUE
[17:22:01.759]      // while "1"  (timeout="50000")
[17:22:01.759]      // while-condition  =>  TRUE
[17:22:01.759]      // while "1"  (timeout="50000")
[17:22:01.760]      // while-condition  =>  TRUE
[17:22:01.760]      // while "1"  (timeout="50000")
[17:22:01.760]      // while-condition  =>  TRUE
[17:22:01.760]      // while "1"  (timeout="50000")
[17:22:01.761]      // while-condition  =>  TRUE
[17:22:01.761]      // while "1"  (timeout="50000")
[17:22:01.761]      // while-condition  =>  TRUE
[17:22:01.761]      // while "1"  (timeout="50000")
[17:22:01.762]      // while-condition  =>  TRUE
[17:22:01.762]      // while "1"  (timeout="50000")
[17:22:01.762]      // while-condition  =>  TRUE
[17:22:01.762]      // while "1"  (timeout="50000")
[17:22:01.763]      // while-condition  =>  TRUE
[17:22:01.763]      // while "1"  (timeout="50000")
[17:22:01.763]      // while-condition  =>  TRUE
[17:22:01.764]      // while "1"  (timeout="50000")
[17:22:01.764]      // while-condition  =>  TRUE
[17:22:01.764]      // while "1"  (timeout="50000")
[17:22:01.764]      // while-condition  =>  TRUE
[17:22:01.765]      // while "1"  (timeout="50000")
[17:22:01.765]      // while-condition  =>  TRUE
[17:22:01.765]      // while "1"  (timeout="50000")
[17:22:01.765]      // while-condition  =>  TRUE
[17:22:01.766]      // while "1"  (timeout="50000")
[17:22:01.766]      // while-condition  =>  TRUE
[17:22:01.766]      // while "1"  (timeout="50000")
[17:22:01.766]      // while-condition  =>  TRUE
[17:22:01.767]      // while "1"  (timeout="50000")
[17:22:01.767]      // while-condition  =>  TRUE
[17:22:01.767]      // while "1"  (timeout="50000")
[17:22:01.767]      // while-condition  =>  TRUE
[17:22:01.768]      // while "1"  (timeout="50000")
[17:22:01.768]      // while-condition  =>  TRUE
[17:22:01.768]      // while "1"  (timeout="50000")
[17:22:01.769]      // while-condition  =>  TRUE
[17:22:01.769]      // while "1"  (timeout="50000")
[17:22:01.770]      // while-condition  =>  TRUE
[17:22:01.770]      // while "1"  (timeout="50000")
[17:22:01.770]      // while-condition  =>  TRUE
[17:22:01.771]      // while "1"  (timeout="50000")
[17:22:01.771]      // while-condition  =>  TRUE
[17:22:01.771]      // while "1"  (timeout="50000")
[17:22:01.771]      // while-condition  =>  TRUE
[17:22:01.772]      // while "1"  (timeout="50000")
[17:22:01.772]      // while-condition  =>  TRUE
[17:22:01.772]      // while "1"  (timeout="50000")
[17:22:01.772]      // while-condition  =>  TRUE
[17:22:01.772]      // while "1"  (timeout="50000")
[17:22:01.773]      // while-condition  =>  TRUE
[17:22:01.773]      // while "1"  (timeout="50000")
[17:22:01.773]      // while-condition  =>  TRUE
[17:22:01.773]      // while "1"  (timeout="50000")
[17:22:01.774]      // while-condition  =>  TRUE
[17:22:01.774]      // while "1"  (timeout="50000")
[17:22:01.774]      // while-condition  =>  TRUE
[17:22:01.774]      // while "1"  (timeout="50000")
[17:22:01.775]      // while-condition  =>  TRUE
[17:22:01.775]      // while "1"  (timeout="50000")
[17:22:01.775]      // while-condition  =>  TRUE
[17:22:01.775]      // while "1"  (timeout="50000")
[17:22:01.776]      // while-condition  =>  TRUE
[17:22:01.776]      // while "1"  (timeout="50000")
[17:22:01.776]      // while-condition  =>  TRUE
[17:22:01.776]      // while "1"  (timeout="50000")
[17:22:01.777]      // while-condition  =>  TRUE
[17:22:01.777]      // while "1"  (timeout="50000")
[17:22:01.777]      // while-condition  =>  TRUE
[17:22:01.777]      // while "1"  (timeout="50000")
[17:22:01.778]      // while-condition  =>  TRUE
[17:22:01.778]      // while "1"  (timeout="50000")
[17:22:01.778]      // while-condition  =>  TRUE
[17:22:01.778]      // while "1"  (timeout="50000")
[17:22:01.779]      // while-condition  =>  TRUE
[17:22:01.779]      // while "1"  (timeout="50000")
[17:22:01.779]      // while-condition  =>  TRUE
[17:22:01.779]      // while "1"  (timeout="50000")
[17:22:01.779]      // while-condition  =>  TRUE
[17:22:01.780]      // while "1"  (timeout="50000")
[17:22:01.780]      // while-condition  =>  TRUE
[17:22:01.780]      // while "1"  (timeout="50000")
[17:22:01.780]      // while-condition  =>  TRUE
[17:22:01.781]      // while "1"  (timeout="50000")
[17:22:01.781]      // while-condition  =>  TRUE
[17:22:01.781]      // while "1"  (timeout="50000")
[17:22:01.781]      // while-condition  =>  TRUE
[17:22:01.782]      // while "1"  (timeout="50000")
[17:22:01.782]      // while-condition  =>  TRUE
[17:22:01.782]      // while "1"  (timeout="50000")
[17:22:01.782]      // while-condition  =>  TRUE
[17:22:01.783]      // while "1"  (timeout="50000")
[17:22:01.783]      // while-condition  =>  TRUE
[17:22:01.783]      // while "1"  (timeout="50000")
[17:22:01.783]      // while-condition  =>  TRUE
[17:22:01.784]      // while "1"  (timeout="50000")
[17:22:01.784]      // while-condition  =>  TRUE
[17:22:01.784]      // while "1"  (timeout="50000")
[17:22:01.784]      // while-condition  =>  TRUE
[17:22:01.785]      // while "1"  (timeout="50000")
[17:22:01.785]      // while-condition  =>  TRUE
[17:22:01.785]      // while "1"  (timeout="50000")
[17:22:01.786]      // while-condition  =>  TRUE
[17:22:01.786]      // while "1"  (timeout="50000")
[17:22:01.786]      // while-condition  =>  TRUE
[17:22:01.786]      // while "1"  (timeout="50000")
[17:22:01.787]      // while-condition  =>  TRUE
[17:22:01.787]      // while "1"  (timeout="50000")
[17:22:01.787]      // while  =>  TIMEOUT
[17:22:01.788]      // end while "1"
[17:22:01.788]    </control>
[17:22:01.788]    <block atomic="false" info="">
[17:22:01.788]      DAP_SWJ_Pins(nReset, nReset, 0);
[17:22:01.791]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[17:22:01.792]    </block>
[17:22:01.792]    <control if="" while="1" timeout="10000" info="">
[17:22:01.792]      // while "1"  (timeout="10000")
[17:22:01.792]      // while-condition  =>  TRUE
[17:22:01.793]      // while "1"  (timeout="10000")
[17:22:01.793]      // while-condition  =>  TRUE
[17:22:01.793]      // while "1"  (timeout="10000")
[17:22:01.793]      // while-condition  =>  TRUE
[17:22:01.793]      // while "1"  (timeout="10000")
[17:22:01.794]      // while-condition  =>  TRUE
[17:22:01.794]      // while "1"  (timeout="10000")
[17:22:01.794]      // while-condition  =>  TRUE
[17:22:01.794]      // while "1"  (timeout="10000")
[17:22:01.795]      // while-condition  =>  TRUE
[17:22:01.795]      // while "1"  (timeout="10000")
[17:22:01.795]      // while-condition  =>  TRUE
[17:22:01.796]      // while "1"  (timeout="10000")
[17:22:01.796]      // while-condition  =>  TRUE
[17:22:01.796]      // while "1"  (timeout="10000")
[17:22:01.796]      // while-condition  =>  TRUE
[17:22:01.797]      // while "1"  (timeout="10000")
[17:22:01.797]      // while-condition  =>  TRUE
[17:22:01.797]      // while "1"  (timeout="10000")
[17:22:01.797]      // while-condition  =>  TRUE
[17:22:01.798]      // while "1"  (timeout="10000")
[17:22:01.798]      // while-condition  =>  TRUE
[17:22:01.798]      // while "1"  (timeout="10000")
[17:22:01.798]      // while-condition  =>  TRUE
[17:22:01.799]      // while "1"  (timeout="10000")
[17:22:01.799]      // while-condition  =>  TRUE
[17:22:01.799]      // while "1"  (timeout="10000")
[17:22:01.799]      // while-condition  =>  TRUE
[17:22:01.800]      // while "1"  (timeout="10000")
[17:22:01.800]      // while-condition  =>  TRUE
[17:22:01.800]      // while "1"  (timeout="10000")
[17:22:01.800]      // while-condition  =>  TRUE
[17:22:01.801]      // while "1"  (timeout="10000")
[17:22:01.801]      // while-condition  =>  TRUE
[17:22:01.801]      // while "1"  (timeout="10000")
[17:22:01.801]      // while-condition  =>  TRUE
[17:22:01.802]      // while "1"  (timeout="10000")
[17:22:01.802]      // while  =>  TIMEOUT
[17:22:01.803]      // end while "1"
[17:22:01.803]    </control>
[17:22:01.803]    <block atomic="true" info="">
[17:22:01.809]  
[17:22:01.809]  ! W001 : No atomic sequence support in debug unit
[17:22:01.809]  
[17:22:01.812]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[17:22:01.814]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[17:22:01.815]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[17:22:01.816]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[17:22:01.817]    </block>
[17:22:01.817]    <block atomic="false" info="">
[17:22:01.817]      __errorcontrol = 0x00000001;
[17:22:01.817]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[17:22:01.818]      ReadDP(0x0);
[17:22:01.819]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[17:22:01.820]      __errorcontrol = 0x00000000;
[17:22:01.820]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[17:22:01.820]    </block>
[17:22:01.821]  </sequence>
[17:22:01.821]  
[17:22:01.827]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[17:22:01.827]  
[17:22:01.828]  <debugvars>
[17:22:01.828]    // Pre-defined
[17:22:01.828]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:22:01.828]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:22:01.829]    __dp=0x00000000
[17:22:01.829]    __ap=0x00000000
[17:22:01.829]    __traceout=0x00000000      (Trace Disabled)
[17:22:01.829]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:22:01.830]    __FlashAddr=0x00000000
[17:22:01.830]    __FlashLen=0x00000000
[17:22:01.830]    __FlashArg=0x00000000
[17:22:01.831]    __FlashOp=0x00000000
[17:22:01.831]    __Result=0x00000000
[17:22:01.831]  </debugvars>
[17:22:01.831]  
[17:22:01.831]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[17:22:01.832]    <block atomic="false" info="">
[17:22:01.832]    </block>
[17:22:01.832]  </sequence>
[17:22:01.832]  
[17:22:02.094]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[17:22:02.094]  
[17:22:02.094]  <debugvars>
[17:22:02.095]    // Pre-defined
[17:22:02.095]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:22:02.095]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:22:02.095]    __dp=0x00000000
[17:22:02.096]    __ap=0x00000000
[17:22:02.096]    __traceout=0x00000000      (Trace Disabled)
[17:22:02.096]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:22:02.097]    __FlashAddr=0x00000000
[17:22:02.097]    __FlashLen=0x00000000
[17:22:02.097]    __FlashArg=0x00000000
[17:22:02.097]    __FlashOp=0x00000000
[17:22:02.098]    __Result=0x00000000
[17:22:02.098]  </debugvars>
[17:22:02.098]  
[17:22:02.098]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[17:22:02.099]    <block atomic="false" info="">
[17:22:02.099]      Sequence("ResetHardware");
[17:22:02.099]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[17:22:02.099]          <block atomic="false" info="">
[17:22:02.100]            __var nReset      = 0x80;
[17:22:02.100]              // -> [nReset <= 0x00000080]
[17:22:02.100]            DAP_SWJ_Pins(0x00, nReset, 0);
[17:22:02.102]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[17:22:02.102]          </block>
[17:22:02.103]          <control if="" while="1" timeout="50000" info="">
[17:22:02.103]            // while "1"  (timeout="50000")
[17:22:02.103]            // while-condition  =>  TRUE
[17:22:02.103]            // while "1"  (timeout="50000")
[17:22:02.104]            // while-condition  =>  TRUE
[17:22:02.104]            // while "1"  (timeout="50000")
[17:22:02.104]            // while-condition  =>  TRUE
[17:22:02.104]            // while "1"  (timeout="50000")
[17:22:02.105]            // while-condition  =>  TRUE
[17:22:02.105]            // while "1"  (timeout="50000")
[17:22:02.105]            // while-condition  =>  TRUE
[17:22:02.105]            // while "1"  (timeout="50000")
[17:22:02.106]            // while-condition  =>  TRUE
[17:22:02.106]            // while "1"  (timeout="50000")
[17:22:02.106]            // while-condition  =>  TRUE
[17:22:02.106]            // while "1"  (timeout="50000")
[17:22:02.106]            // while-condition  =>  TRUE
[17:22:02.107]            // while "1"  (timeout="50000")
[17:22:02.107]            // while-condition  =>  TRUE
[17:22:02.107]            // while "1"  (timeout="50000")
[17:22:02.107]            // while-condition  =>  TRUE
[17:22:02.108]            // while "1"  (timeout="50000")
[17:22:02.108]            // while-condition  =>  TRUE
[17:22:02.108]            // while "1"  (timeout="50000")
[17:22:02.108]            // while-condition  =>  TRUE
[17:22:02.109]            // while "1"  (timeout="50000")
[17:22:02.109]            // while-condition  =>  TRUE
[17:22:02.109]            // while "1"  (timeout="50000")
[17:22:02.109]            // while-condition  =>  TRUE
[17:22:02.110]            // while "1"  (timeout="50000")
[17:22:02.110]            // while-condition  =>  TRUE
[17:22:02.110]            // while "1"  (timeout="50000")
[17:22:02.110]            // while-condition  =>  TRUE
[17:22:02.111]            // while "1"  (timeout="50000")
[17:22:02.111]            // while-condition  =>  TRUE
[17:22:02.111]            // while "1"  (timeout="50000")
[17:22:02.111]            // while-condition  =>  TRUE
[17:22:02.112]            // while "1"  (timeout="50000")
[17:22:02.112]            // while-condition  =>  TRUE
[17:22:02.112]            // while "1"  (timeout="50000")
[17:22:02.112]            // while-condition  =>  TRUE
[17:22:02.112]            // while "1"  (timeout="50000")
[17:22:02.113]            // while-condition  =>  TRUE
[17:22:02.113]            // while "1"  (timeout="50000")
[17:22:02.113]            // while-condition  =>  TRUE
[17:22:02.113]            // while "1"  (timeout="50000")
[17:22:02.113]            // while-condition  =>  TRUE
[17:22:02.114]            // while "1"  (timeout="50000")
[17:22:02.114]            // while-condition  =>  TRUE
[17:22:02.114]            // while "1"  (timeout="50000")
[17:22:02.114]            // while-condition  =>  TRUE
[17:22:02.115]            // while "1"  (timeout="50000")
[17:22:02.115]            // while-condition  =>  TRUE
[17:22:02.115]            // while "1"  (timeout="50000")
[17:22:02.115]            // while-condition  =>  TRUE
[17:22:02.115]            // while "1"  (timeout="50000")
[17:22:02.115]            // while-condition  =>  TRUE
[17:22:02.115]            // while "1"  (timeout="50000")
[17:22:02.115]            // while-condition  =>  TRUE
[17:22:02.116]            // while "1"  (timeout="50000")
[17:22:02.116]            // while-condition  =>  TRUE
[17:22:02.116]            // while "1"  (timeout="50000")
[17:22:02.116]            // while-condition  =>  TRUE
[17:22:02.117]            // while "1"  (timeout="50000")
[17:22:02.117]            // while-condition  =>  TRUE
[17:22:02.117]            // while "1"  (timeout="50000")
[17:22:02.117]            // while-condition  =>  TRUE
[17:22:02.117]            // while "1"  (timeout="50000")
[17:22:02.118]            // while-condition  =>  TRUE
[17:22:02.118]            // while "1"  (timeout="50000")
[17:22:02.118]            // while-condition  =>  TRUE
[17:22:02.119]            // while "1"  (timeout="50000")
[17:22:02.119]            // while-condition  =>  TRUE
[17:22:02.119]            // while "1"  (timeout="50000")
[17:22:02.120]            // while-condition  =>  TRUE
[17:22:02.120]            // while "1"  (timeout="50000")
[17:22:02.120]            // while-condition  =>  TRUE
[17:22:02.120]            // while "1"  (timeout="50000")
[17:22:02.121]            // while-condition  =>  TRUE
[17:22:02.121]            // while "1"  (timeout="50000")
[17:22:02.121]            // while-condition  =>  TRUE
[17:22:02.121]            // while "1"  (timeout="50000")
[17:22:02.122]            // while-condition  =>  TRUE
[17:22:02.122]            // while "1"  (timeout="50000")
[17:22:02.122]            // while-condition  =>  TRUE
[17:22:02.122]            // while "1"  (timeout="50000")
[17:22:02.122]            // while-condition  =>  TRUE
[17:22:02.123]            // while "1"  (timeout="50000")
[17:22:02.123]            // while-condition  =>  TRUE
[17:22:02.123]            // while "1"  (timeout="50000")
[17:22:02.123]            // while-condition  =>  TRUE
[17:22:02.124]            // while "1"  (timeout="50000")
[17:22:02.124]            // while-condition  =>  TRUE
[17:22:02.125]            // while "1"  (timeout="50000")
[17:22:02.125]            // while-condition  =>  TRUE
[17:22:02.125]            // while "1"  (timeout="50000")
[17:22:02.125]            // while-condition  =>  TRUE
[17:22:02.126]            // while "1"  (timeout="50000")
[17:22:02.126]            // while-condition  =>  TRUE
[17:22:02.126]            // while "1"  (timeout="50000")
[17:22:02.127]            // while-condition  =>  TRUE
[17:22:02.127]            // while "1"  (timeout="50000")
[17:22:02.127]            // while-condition  =>  TRUE
[17:22:02.127]            // while "1"  (timeout="50000")
[17:22:02.128]            // while-condition  =>  TRUE
[17:22:02.128]            // while "1"  (timeout="50000")
[17:22:02.128]            // while-condition  =>  TRUE
[17:22:02.128]            // while "1"  (timeout="50000")
[17:22:02.129]            // while-condition  =>  TRUE
[17:22:02.129]            // while "1"  (timeout="50000")
[17:22:02.129]            // while-condition  =>  TRUE
[17:22:02.129]            // while "1"  (timeout="50000")
[17:22:02.130]            // while-condition  =>  TRUE
[17:22:02.130]            // while "1"  (timeout="50000")
[17:22:02.130]            // while-condition  =>  TRUE
[17:22:02.130]            // while "1"  (timeout="50000")
[17:22:02.131]            // while-condition  =>  TRUE
[17:22:02.131]            // while "1"  (timeout="50000")
[17:22:02.131]            // while-condition  =>  TRUE
[17:22:02.131]            // while "1"  (timeout="50000")
[17:22:02.132]            // while-condition  =>  TRUE
[17:22:02.132]            // while "1"  (timeout="50000")
[17:22:02.132]            // while-condition  =>  TRUE
[17:22:02.132]            // while "1"  (timeout="50000")
[17:22:02.132]            // while-condition  =>  TRUE
[17:22:02.133]            // while "1"  (timeout="50000")
[17:22:02.133]            // while-condition  =>  TRUE
[17:22:02.133]            // while "1"  (timeout="50000")
[17:22:02.133]            // while-condition  =>  TRUE
[17:22:02.134]            // while "1"  (timeout="50000")
[17:22:02.134]            // while-condition  =>  TRUE
[17:22:02.134]            // while "1"  (timeout="50000")
[17:22:02.134]            // while-condition  =>  TRUE
[17:22:02.135]            // while "1"  (timeout="50000")
[17:22:02.135]            // while-condition  =>  TRUE
[17:22:02.135]            // while "1"  (timeout="50000")
[17:22:02.136]            // while-condition  =>  TRUE
[17:22:02.136]            // while "1"  (timeout="50000")
[17:22:02.136]            // while-condition  =>  TRUE
[17:22:02.136]            // while "1"  (timeout="50000")
[17:22:02.137]            // while-condition  =>  TRUE
[17:22:02.137]            // while "1"  (timeout="50000")
[17:22:02.137]            // while-condition  =>  TRUE
[17:22:02.137]            // while "1"  (timeout="50000")
[17:22:02.138]            // while-condition  =>  TRUE
[17:22:02.138]            // while "1"  (timeout="50000")
[17:22:02.138]            // while-condition  =>  TRUE
[17:22:02.138]            // while "1"  (timeout="50000")
[17:22:02.139]            // while-condition  =>  TRUE
[17:22:02.139]            // while "1"  (timeout="50000")
[17:22:02.139]            // while-condition  =>  TRUE
[17:22:02.139]            // while "1"  (timeout="50000")
[17:22:02.140]            // while-condition  =>  TRUE
[17:22:02.140]            // while "1"  (timeout="50000")
[17:22:02.140]            // while-condition  =>  TRUE
[17:22:02.140]            // while "1"  (timeout="50000")
[17:22:02.141]            // while-condition  =>  TRUE
[17:22:02.141]            // while "1"  (timeout="50000")
[17:22:02.141]            // while-condition  =>  TRUE
[17:22:02.142]            // while "1"  (timeout="50000")
[17:22:02.142]            // while-condition  =>  TRUE
[17:22:02.142]            // while "1"  (timeout="50000")
[17:22:02.142]            // while-condition  =>  TRUE
[17:22:02.143]            // while "1"  (timeout="50000")
[17:22:02.143]            // while-condition  =>  TRUE
[17:22:02.143]            // while "1"  (timeout="50000")
[17:22:02.143]            // while-condition  =>  TRUE
[17:22:02.144]            // while "1"  (timeout="50000")
[17:22:02.144]            // while-condition  =>  TRUE
[17:22:02.144]            // while "1"  (timeout="50000")
[17:22:02.145]            // while-condition  =>  TRUE
[17:22:02.145]            // while "1"  (timeout="50000")
[17:22:02.146]            // while-condition  =>  TRUE
[17:22:02.146]            // while "1"  (timeout="50000")
[17:22:02.146]            // while-condition  =>  TRUE
[17:22:02.146]            // while "1"  (timeout="50000")
[17:22:02.147]            // while-condition  =>  TRUE
[17:22:02.147]            // while "1"  (timeout="50000")
[17:22:02.147]            // while-condition  =>  TRUE
[17:22:02.148]            // while "1"  (timeout="50000")
[17:22:02.148]            // while-condition  =>  TRUE
[17:22:02.148]            // while "1"  (timeout="50000")
[17:22:02.148]            // while-condition  =>  TRUE
[17:22:02.149]            // while "1"  (timeout="50000")
[17:22:02.149]            // while-condition  =>  TRUE
[17:22:02.149]            // while "1"  (timeout="50000")
[17:22:02.149]            // while-condition  =>  TRUE
[17:22:02.150]            // while "1"  (timeout="50000")
[17:22:02.150]            // while-condition  =>  TRUE
[17:22:02.150]            // while "1"  (timeout="50000")
[17:22:02.150]            // while-condition  =>  TRUE
[17:22:02.151]            // while "1"  (timeout="50000")
[17:22:02.151]            // while-condition  =>  TRUE
[17:22:02.151]            // while "1"  (timeout="50000")
[17:22:02.152]            // while-condition  =>  TRUE
[17:22:02.152]            // while "1"  (timeout="50000")
[17:22:02.152]            // while-condition  =>  TRUE
[17:22:02.152]            // while "1"  (timeout="50000")
[17:22:02.153]            // while-condition  =>  TRUE
[17:22:02.153]            // while "1"  (timeout="50000")
[17:22:02.153]            // while-condition  =>  TRUE
[17:22:02.154]            // while "1"  (timeout="50000")
[17:22:02.154]            // while-condition  =>  TRUE
[17:22:02.154]            // while "1"  (timeout="50000")
[17:22:02.154]            // while-condition  =>  TRUE
[17:22:02.155]            // while "1"  (timeout="50000")
[17:22:02.155]            // while-condition  =>  TRUE
[17:22:02.155]            // while "1"  (timeout="50000")
[17:22:02.155]            // while-condition  =>  TRUE
[17:22:02.156]            // while "1"  (timeout="50000")
[17:22:02.156]            // while-condition  =>  TRUE
[17:22:02.156]            // while "1"  (timeout="50000")
[17:22:02.156]            // while-condition  =>  TRUE
[17:22:02.157]            // while "1"  (timeout="50000")
[17:22:02.157]            // while-condition  =>  TRUE
[17:22:02.157]            // while "1"  (timeout="50000")
[17:22:02.157]            // while-condition  =>  TRUE
[17:22:02.158]            // while "1"  (timeout="50000")
[17:22:02.158]            // while-condition  =>  TRUE
[17:22:02.158]            // while "1"  (timeout="50000")
[17:22:02.158]            // while-condition  =>  TRUE
[17:22:02.159]            // while "1"  (timeout="50000")
[17:22:02.159]            // while-condition  =>  TRUE
[17:22:02.159]            // while "1"  (timeout="50000")
[17:22:02.159]            // while-condition  =>  TRUE
[17:22:02.160]            // while "1"  (timeout="50000")
[17:22:02.160]            // while-condition  =>  TRUE
[17:22:02.160]            // while "1"  (timeout="50000")
[17:22:02.160]            // while-condition  =>  TRUE
[17:22:02.161]            // while "1"  (timeout="50000")
[17:22:02.161]            // while-condition  =>  TRUE
[17:22:02.161]            // while "1"  (timeout="50000")
[17:22:02.161]            // while-condition  =>  TRUE
[17:22:02.162]            // while "1"  (timeout="50000")
[17:22:02.162]            // while  =>  TIMEOUT
[17:22:02.162]            // end while "1"
[17:22:02.163]          </control>
[17:22:02.163]          <block atomic="false" info="">
[17:22:02.163]            DAP_SWJ_Pins(nReset, nReset, 0);
[17:22:02.166]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[17:22:02.166]          </block>
[17:22:02.166]          <control if="" while="1" timeout="10000" info="">
[17:22:02.167]            // while "1"  (timeout="10000")
[17:22:02.167]            // while-condition  =>  TRUE
[17:22:02.168]            // while "1"  (timeout="10000")
[17:22:02.168]            // while-condition  =>  TRUE
[17:22:02.168]            // while "1"  (timeout="10000")
[17:22:02.168]            // while-condition  =>  TRUE
[17:22:02.169]            // while "1"  (timeout="10000")
[17:22:02.169]            // while-condition  =>  TRUE
[17:22:02.169]            // while "1"  (timeout="10000")
[17:22:02.170]            // while-condition  =>  TRUE
[17:22:02.170]            // while "1"  (timeout="10000")
[17:22:02.171]            // while-condition  =>  TRUE
[17:22:02.171]            // while "1"  (timeout="10000")
[17:22:02.171]            // while-condition  =>  TRUE
[17:22:02.172]            // while "1"  (timeout="10000")
[17:22:02.172]            // while-condition  =>  TRUE
[17:22:02.173]            // while "1"  (timeout="10000")
[17:22:02.174]            // while-condition  =>  TRUE
[17:22:02.174]            // while "1"  (timeout="10000")
[17:22:02.174]            // while-condition  =>  TRUE
[17:22:02.175]            // while "1"  (timeout="10000")
[17:22:02.175]            // while-condition  =>  TRUE
[17:22:02.175]            // while "1"  (timeout="10000")
[17:22:02.176]            // while-condition  =>  TRUE
[17:22:02.176]            // while "1"  (timeout="10000")
[17:22:02.176]            // while-condition  =>  TRUE
[17:22:02.177]            // while "1"  (timeout="10000")
[17:22:02.177]            // while-condition  =>  TRUE
[17:22:02.177]            // while "1"  (timeout="10000")
[17:22:02.177]            // while-condition  =>  TRUE
[17:22:02.178]            // while "1"  (timeout="10000")
[17:22:02.178]            // while  =>  TIMEOUT
[17:22:02.178]            // end while "1"
[17:22:02.178]          </control>
[17:22:02.179]          <block atomic="true" info="">
[17:22:02.200]  
[17:22:02.200]  ! W001 : No atomic sequence support in debug unit
[17:22:02.200]  
[17:22:02.208]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[17:22:02.210]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[17:22:02.210]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[17:22:02.212]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[17:22:02.212]          </block>
[17:22:02.212]          <block atomic="false" info="">
[17:22:02.213]            __errorcontrol = 0x00000001;
[17:22:02.213]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[17:22:02.213]            ReadDP(0x0);
[17:22:02.215]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[17:22:02.215]            __errorcontrol = 0x00000000;
[17:22:02.215]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[17:22:02.216]          </block>
[17:22:02.216]        </sequence>
[17:22:02.216]      Sequence("DebugPortSetup");
[17:22:02.216]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[17:22:02.217]        </sequence>
[17:22:02.217]      Sequence("DebugPortStart");
[17:22:02.217]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[17:22:02.217]          <block atomic="false" info="">
[17:22:02.218]            __var SW_DP_ABORT  = 0x0;
[17:22:02.218]              // -> [SW_DP_ABORT <= 0x00000000]
[17:22:02.218]            __var DP_CTRL_STAT = 0x4;
[17:22:02.218]              // -> [DP_CTRL_STAT <= 0x00000004]
[17:22:02.219]            __var DP_SELECT    = 0x8;
[17:22:02.219]              // -> [DP_SELECT <= 0x00000008]
[17:22:02.219]            __var powered_down = 0;
[17:22:02.220]              // -> [powered_down <= 0x00000000]
[17:22:02.220]            WriteDP(DP_SELECT, 0x00000000);
[17:22:02.222]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[17:22:02.222]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[17:22:02.224]              // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[17:22:02.224]              // -> [powered_down <= 0x00000000]
[17:22:02.225]          </block>
[17:22:02.225]          <control if="powered_down" while="" timeout="0" info="">
[17:22:02.225]            // if-block "powered_down"
[17:22:02.225]              // =>  FALSE
[17:22:02.226]            // skip if-block "powered_down"
[17:22:02.226]          </control>
[17:22:02.226]        </sequence>
[17:22:02.226]      Sequence("DebugCoreStart");
[17:22:02.227]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[17:22:02.227]          <block atomic="true" info="">
[17:22:02.231]  
[17:22:02.231]  ! W001 : No atomic sequence support in debug unit
[17:22:02.231]  
[17:22:02.241]            __var DP_R_IDCODE    = 0x0;
[17:22:02.242]              // -> [DP_R_IDCODE <= 0x00000000]
[17:22:02.242]            __var DP_W_ABORT    = 0x0;
[17:22:02.242]              // -> [DP_W_ABORT <= 0x00000000]
[17:22:02.242]            __var DP_CTRLSTAT = 0x4;
[17:22:02.242]              // -> [DP_CTRLSTAT <= 0x00000004]
[17:22:02.243]            __var DP_W_SELECT    = 0x8;
[17:22:02.243]              // -> [DP_W_SELECT <= 0x00000008]
[17:22:02.243]            __var AP_TAR		= 0x4;
[17:22:02.243]              // -> [AP_TAR <= 0x00000004]
[17:22:02.243]            __var AP_BD0		= 0x0;
[17:22:02.244]              // -> [AP_BD0 <= 0x00000000]
[17:22:02.244]            __var AP_BD1		= 0x4;
[17:22:02.244]              // -> [AP_BD1 <= 0x00000004]
[17:22:02.244]            __var AP_BD2		= 0x8;
[17:22:02.244]              // -> [AP_BD2 <= 0x00000008]
[17:22:02.245]            __var PCWithinFlash = 0;
[17:22:02.245]              // -> [PCWithinFlash <= 0x00000000]
[17:22:02.245]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[17:22:02.251]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.252]          </block>
[17:22:02.252]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[17:22:02.252]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[17:22:02.258]              // -> [Read32(0xE000EDF0) => 0x00030003]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.258]            // while-condition  =>  FALSE
[17:22:02.259]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[17:22:02.259]          </control>
[17:22:02.259]          <block atomic="true" info="">
[17:22:02.265]  
[17:22:02.265]  ! W001 : No atomic sequence support in debug unit
[17:22:02.265]  
[17:22:02.270]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[17:22:02.275]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[17:22:02.275]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[17:22:02.277]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.277]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[17:22:02.279]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[17:22:02.279]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[17:22:02.283]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.283]          </block>
[17:22:02.283]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[17:22:02.284]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.286]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.286]            // while-condition  =>  TRUE
[17:22:02.287]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.289]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.289]            // while-condition  =>  TRUE
[17:22:02.290]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.292]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.292]            // while-condition  =>  TRUE
[17:22:02.293]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.295]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.295]            // while-condition  =>  TRUE
[17:22:02.296]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.298]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.298]            // while-condition  =>  TRUE
[17:22:02.299]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.301]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.301]            // while-condition  =>  TRUE
[17:22:02.302]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.304]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.304]            // while-condition  =>  TRUE
[17:22:02.305]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.307]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.307]            // while-condition  =>  TRUE
[17:22:02.308]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.310]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.310]            // while-condition  =>  TRUE
[17:22:02.311]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.313]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.313]            // while-condition  =>  TRUE
[17:22:02.313]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.315]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.315]            // while-condition  =>  TRUE
[17:22:02.316]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.317]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.317]            // while-condition  =>  TRUE
[17:22:02.318]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.320]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.320]            // while-condition  =>  TRUE
[17:22:02.321]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.323]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.323]            // while-condition  =>  TRUE
[17:22:02.324]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.326]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.326]            // while-condition  =>  TRUE
[17:22:02.327]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.329]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.329]            // while-condition  =>  TRUE
[17:22:02.330]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.332]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.333]            // while-condition  =>  TRUE
[17:22:02.333]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.335]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.335]            // while-condition  =>  TRUE
[17:22:02.336]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.338]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.338]            // while-condition  =>  TRUE
[17:22:02.339]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.341]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.342]            // while-condition  =>  TRUE
[17:22:02.342]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.344]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.345]            // while-condition  =>  TRUE
[17:22:02.345]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.347]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.348]            // while-condition  =>  TRUE
[17:22:02.348]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.350]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.351]            // while-condition  =>  TRUE
[17:22:02.351]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.353]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.354]            // while-condition  =>  TRUE
[17:22:02.354]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.356]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.357]            // while-condition  =>  TRUE
[17:22:02.357]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.359]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.359]            // while-condition  =>  TRUE
[17:22:02.360]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.362]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.363]            // while-condition  =>  TRUE
[17:22:02.363]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.365]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.366]            // while-condition  =>  TRUE
[17:22:02.366]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.368]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.369]            // while-condition  =>  TRUE
[17:22:02.369]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.371]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.372]            // while-condition  =>  TRUE
[17:22:02.372]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.374]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.375]            // while-condition  =>  TRUE
[17:22:02.375]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.377]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.378]            // while-condition  =>  TRUE
[17:22:02.378]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.380]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.381]            // while-condition  =>  TRUE
[17:22:02.381]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:22:02.381]            // while  =>  TIMEOUT
[17:22:02.381]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[17:22:02.382]          </control>
[17:22:02.382]          <block atomic="false" info="">
[17:22:02.382]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[17:22:02.384]              // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[17:22:02.385]              // -> [PCWithinFlash <= 0x00000000]
[17:22:02.385]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[17:22:02.387]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[17:22:02.388]          </block>
[17:22:02.388]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[17:22:02.388]            // if-block "PCWithinFlash == 0"
[17:22:02.388]              // =>  TRUE
[17:22:02.389]            // end if-block "PCWithinFlash == 0"
[17:22:02.389]          </control>
[17:22:02.389]        </sequence>
[17:22:02.389]    </block>
[17:22:02.390]  </sequence>
[17:22:02.390]  
[17:22:13.122]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[17:22:13.122]  
[17:22:13.123]  <debugvars>
[17:22:13.124]    // Pre-defined
[17:22:13.124]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:22:13.124]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:22:13.125]    __dp=0x00000000
[17:22:13.125]    __ap=0x00000000
[17:22:13.126]    __traceout=0x00000000      (Trace Disabled)
[17:22:13.126]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:22:13.127]    __FlashAddr=0x00000000
[17:22:13.127]    __FlashLen=0x00000000
[17:22:13.127]    __FlashArg=0x00000000
[17:22:13.127]    __FlashOp=0x00000000
[17:22:13.128]    __Result=0x00000000
[17:22:13.128]  </debugvars>
[17:22:13.128]  
[17:22:13.129]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[17:22:13.129]    <block atomic="false" info="">
[17:22:13.129]      __var nReset      = 0x80;
[17:22:13.130]        // -> [nReset <= 0x00000080]
[17:22:13.130]      DAP_SWJ_Pins(0x00, nReset, 0);
[17:22:13.132]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[17:22:13.132]    </block>
[17:22:13.132]    <control if="" while="1" timeout="50000" info="">
[17:22:13.132]      // while "1"  (timeout="50000")
[17:22:13.133]      // while-condition  =>  TRUE
[17:22:13.133]      // while "1"  (timeout="50000")
[17:22:13.134]      // while-condition  =>  TRUE
[17:22:13.134]      // while "1"  (timeout="50000")
[17:22:13.134]      // while-condition  =>  TRUE
[17:22:13.134]      // while "1"  (timeout="50000")
[17:22:13.135]      // while-condition  =>  TRUE
[17:22:13.135]      // while "1"  (timeout="50000")
[17:22:13.136]      // while-condition  =>  TRUE
[17:22:13.136]      // while "1"  (timeout="50000")
[17:22:13.136]      // while-condition  =>  TRUE
[17:22:13.136]      // while "1"  (timeout="50000")
[17:22:13.136]      // while-condition  =>  TRUE
[17:22:13.137]      // while "1"  (timeout="50000")
[17:22:13.137]      // while-condition  =>  TRUE
[17:22:13.137]      // while "1"  (timeout="50000")
[17:22:13.138]      // while-condition  =>  TRUE
[17:22:13.138]      // while "1"  (timeout="50000")
[17:22:13.138]      // while-condition  =>  TRUE
[17:22:13.138]      // while "1"  (timeout="50000")
[17:22:13.139]      // while-condition  =>  TRUE
[17:22:13.139]      // while "1"  (timeout="50000")
[17:22:13.140]      // while-condition  =>  TRUE
[17:22:13.140]      // while "1"  (timeout="50000")
[17:22:13.140]      // while-condition  =>  TRUE
[17:22:13.141]      // while "1"  (timeout="50000")
[17:22:13.141]      // while-condition  =>  TRUE
[17:22:13.141]      // while "1"  (timeout="50000")
[17:22:13.141]      // while-condition  =>  TRUE
[17:22:13.141]      // while "1"  (timeout="50000")
[17:22:13.141]      // while-condition  =>  TRUE
[17:22:13.141]      // while "1"  (timeout="50000")
[17:22:13.142]      // while-condition  =>  TRUE
[17:22:13.142]      // while "1"  (timeout="50000")
[17:22:13.142]      // while-condition  =>  TRUE
[17:22:13.142]      // while "1"  (timeout="50000")
[17:22:13.143]      // while-condition  =>  TRUE
[17:22:13.143]      // while "1"  (timeout="50000")
[17:22:13.143]      // while-condition  =>  TRUE
[17:22:13.144]      // while "1"  (timeout="50000")
[17:22:13.144]      // while-condition  =>  TRUE
[17:22:13.144]      // while "1"  (timeout="50000")
[17:22:13.144]      // while-condition  =>  TRUE
[17:22:13.145]      // while "1"  (timeout="50000")
[17:22:13.145]      // while-condition  =>  TRUE
[17:22:13.145]      // while "1"  (timeout="50000")
[17:22:13.145]      // while-condition  =>  TRUE
[17:22:13.145]      // while "1"  (timeout="50000")
[17:22:13.146]      // while-condition  =>  TRUE
[17:22:13.146]      // while "1"  (timeout="50000")
[17:22:13.146]      // while-condition  =>  TRUE
[17:22:13.146]      // while "1"  (timeout="50000")
[17:22:13.146]      // while-condition  =>  TRUE
[17:22:13.147]      // while "1"  (timeout="50000")
[17:22:13.147]      // while-condition  =>  TRUE
[17:22:13.147]      // while "1"  (timeout="50000")
[17:22:13.147]      // while-condition  =>  TRUE
[17:22:13.147]      // while "1"  (timeout="50000")
[17:22:13.147]      // while-condition  =>  TRUE
[17:22:13.148]      // while "1"  (timeout="50000")
[17:22:13.148]      // while-condition  =>  TRUE
[17:22:13.148]      // while "1"  (timeout="50000")
[17:22:13.148]      // while-condition  =>  TRUE
[17:22:13.148]      // while "1"  (timeout="50000")
[17:22:13.148]      // while-condition  =>  TRUE
[17:22:13.148]      // while "1"  (timeout="50000")
[17:22:13.149]      // while-condition  =>  TRUE
[17:22:13.149]      // while "1"  (timeout="50000")
[17:22:13.149]      // while-condition  =>  TRUE
[17:22:13.149]      // while "1"  (timeout="50000")
[17:22:13.149]      // while-condition  =>  TRUE
[17:22:13.150]      // while "1"  (timeout="50000")
[17:22:13.150]      // while-condition  =>  TRUE
[17:22:13.151]      // while "1"  (timeout="50000")
[17:22:13.151]      // while-condition  =>  TRUE
[17:22:13.151]      // while "1"  (timeout="50000")
[17:22:13.151]      // while-condition  =>  TRUE
[17:22:13.151]      // while "1"  (timeout="50000")
[17:22:13.152]      // while-condition  =>  TRUE
[17:22:13.152]      // while "1"  (timeout="50000")
[17:22:13.152]      // while-condition  =>  TRUE
[17:22:13.152]      // while "1"  (timeout="50000")
[17:22:13.152]      // while-condition  =>  TRUE
[17:22:13.152]      // while "1"  (timeout="50000")
[17:22:13.152]      // while-condition  =>  TRUE
[17:22:13.153]      // while "1"  (timeout="50000")
[17:22:13.153]      // while-condition  =>  TRUE
[17:22:13.153]      // while "1"  (timeout="50000")
[17:22:13.153]      // while-condition  =>  TRUE
[17:22:13.153]      // while "1"  (timeout="50000")
[17:22:13.153]      // while-condition  =>  TRUE
[17:22:13.154]      // while "1"  (timeout="50000")
[17:22:13.154]      // while-condition  =>  TRUE
[17:22:13.154]      // while "1"  (timeout="50000")
[17:22:13.154]      // while-condition  =>  TRUE
[17:22:13.154]      // while "1"  (timeout="50000")
[17:22:13.155]      // while-condition  =>  TRUE
[17:22:13.155]      // while "1"  (timeout="50000")
[17:22:13.155]      // while-condition  =>  TRUE
[17:22:13.155]      // while "1"  (timeout="50000")
[17:22:13.155]      // while-condition  =>  TRUE
[17:22:13.156]      // while "1"  (timeout="50000")
[17:22:13.156]      // while-condition  =>  TRUE
[17:22:13.156]      // while "1"  (timeout="50000")
[17:22:13.156]      // while-condition  =>  TRUE
[17:22:13.156]      // while "1"  (timeout="50000")
[17:22:13.157]      // while-condition  =>  TRUE
[17:22:13.157]      // while "1"  (timeout="50000")
[17:22:13.157]      // while-condition  =>  TRUE
[17:22:13.157]      // while "1"  (timeout="50000")
[17:22:13.157]      // while-condition  =>  TRUE
[17:22:13.158]      // while "1"  (timeout="50000")
[17:22:13.158]      // while-condition  =>  TRUE
[17:22:13.159]      // while "1"  (timeout="50000")
[17:22:13.159]      // while-condition  =>  TRUE
[17:22:13.159]      // while "1"  (timeout="50000")
[17:22:13.159]      // while-condition  =>  TRUE
[17:22:13.159]      // while "1"  (timeout="50000")
[17:22:13.160]      // while-condition  =>  TRUE
[17:22:13.160]      // while "1"  (timeout="50000")
[17:22:13.160]      // while-condition  =>  TRUE
[17:22:13.160]      // while "1"  (timeout="50000")
[17:22:13.160]      // while-condition  =>  TRUE
[17:22:13.160]      // while "1"  (timeout="50000")
[17:22:13.161]      // while-condition  =>  TRUE
[17:22:13.161]      // while "1"  (timeout="50000")
[17:22:13.162]      // while-condition  =>  TRUE
[17:22:13.162]      // while "1"  (timeout="50000")
[17:22:13.162]      // while-condition  =>  TRUE
[17:22:13.162]      // while "1"  (timeout="50000")
[17:22:13.162]      // while-condition  =>  TRUE
[17:22:13.163]      // while "1"  (timeout="50000")
[17:22:13.163]      // while-condition  =>  TRUE
[17:22:13.163]      // while "1"  (timeout="50000")
[17:22:13.163]      // while-condition  =>  TRUE
[17:22:13.164]      // while "1"  (timeout="50000")
[17:22:13.164]      // while-condition  =>  TRUE
[17:22:13.164]      // while "1"  (timeout="50000")
[17:22:13.164]      // while-condition  =>  TRUE
[17:22:13.164]      // while "1"  (timeout="50000")
[17:22:13.164]      // while-condition  =>  TRUE
[17:22:13.164]      // while "1"  (timeout="50000")
[17:22:13.165]      // while-condition  =>  TRUE
[17:22:13.165]      // while "1"  (timeout="50000")
[17:22:13.166]      // while-condition  =>  TRUE
[17:22:13.166]      // while "1"  (timeout="50000")
[17:22:13.166]      // while-condition  =>  TRUE
[17:22:13.166]      // while "1"  (timeout="50000")
[17:22:13.167]      // while-condition  =>  TRUE
[17:22:13.167]      // while "1"  (timeout="50000")
[17:22:13.168]      // while-condition  =>  TRUE
[17:22:13.168]      // while "1"  (timeout="50000")
[17:22:13.168]      // while-condition  =>  TRUE
[17:22:13.169]      // while "1"  (timeout="50000")
[17:22:13.169]      // while-condition  =>  TRUE
[17:22:13.169]      // while "1"  (timeout="50000")
[17:22:13.169]      // while-condition  =>  TRUE
[17:22:13.170]      // while "1"  (timeout="50000")
[17:22:13.170]      // while-condition  =>  TRUE
[17:22:13.170]      // while "1"  (timeout="50000")
[17:22:13.170]      // while-condition  =>  TRUE
[17:22:13.171]      // while "1"  (timeout="50000")
[17:22:13.171]      // while-condition  =>  TRUE
[17:22:13.171]      // while "1"  (timeout="50000")
[17:22:13.171]      // while-condition  =>  TRUE
[17:22:13.172]      // while "1"  (timeout="50000")
[17:22:13.172]      // while-condition  =>  TRUE
[17:22:13.172]      // while "1"  (timeout="50000")
[17:22:13.172]      // while-condition  =>  TRUE
[17:22:13.172]      // while "1"  (timeout="50000")
[17:22:13.173]      // while-condition  =>  TRUE
[17:22:13.173]      // while "1"  (timeout="50000")
[17:22:13.173]      // while-condition  =>  TRUE
[17:22:13.173]      // while "1"  (timeout="50000")
[17:22:13.174]      // while-condition  =>  TRUE
[17:22:13.174]      // while "1"  (timeout="50000")
[17:22:13.174]      // while-condition  =>  TRUE
[17:22:13.174]      // while "1"  (timeout="50000")
[17:22:13.174]      // while-condition  =>  TRUE
[17:22:13.175]      // while "1"  (timeout="50000")
[17:22:13.175]      // while-condition  =>  TRUE
[17:22:13.175]      // while "1"  (timeout="50000")
[17:22:13.175]      // while-condition  =>  TRUE
[17:22:13.175]      // while "1"  (timeout="50000")
[17:22:13.176]      // while-condition  =>  TRUE
[17:22:13.176]      // while "1"  (timeout="50000")
[17:22:13.176]      // while-condition  =>  TRUE
[17:22:13.176]      // while "1"  (timeout="50000")
[17:22:13.177]      // while-condition  =>  TRUE
[17:22:13.177]      // while "1"  (timeout="50000")
[17:22:13.177]      // while-condition  =>  TRUE
[17:22:13.177]      // while "1"  (timeout="50000")
[17:22:13.177]      // while-condition  =>  TRUE
[17:22:13.177]      // while "1"  (timeout="50000")
[17:22:13.177]      // while-condition  =>  TRUE
[17:22:13.178]      // while "1"  (timeout="50000")
[17:22:13.178]      // while-condition  =>  TRUE
[17:22:13.179]      // while "1"  (timeout="50000")
[17:22:13.179]      // while-condition  =>  TRUE
[17:22:13.179]      // while "1"  (timeout="50000")
[17:22:13.179]      // while-condition  =>  TRUE
[17:22:13.179]      // while "1"  (timeout="50000")
[17:22:13.180]      // while-condition  =>  TRUE
[17:22:13.180]      // while "1"  (timeout="50000")
[17:22:13.180]      // while-condition  =>  TRUE
[17:22:13.180]      // while "1"  (timeout="50000")
[17:22:13.180]      // while-condition  =>  TRUE
[17:22:13.181]      // while "1"  (timeout="50000")
[17:22:13.181]      // while-condition  =>  TRUE
[17:22:13.181]      // while "1"  (timeout="50000")
[17:22:13.181]      // while-condition  =>  TRUE
[17:22:13.181]      // while "1"  (timeout="50000")
[17:22:13.182]      // while-condition  =>  TRUE
[17:22:13.182]      // while "1"  (timeout="50000")
[17:22:13.182]      // while-condition  =>  TRUE
[17:22:13.183]      // while "1"  (timeout="50000")
[17:22:13.183]      // while-condition  =>  TRUE
[17:22:13.183]      // while "1"  (timeout="50000")
[17:22:13.183]      // while-condition  =>  TRUE
[17:22:13.183]      // while "1"  (timeout="50000")
[17:22:13.183]      // while-condition  =>  TRUE
[17:22:13.183]      // while "1"  (timeout="50000")
[17:22:13.184]      // while-condition  =>  TRUE
[17:22:13.184]      // while "1"  (timeout="50000")
[17:22:13.184]      // while-condition  =>  TRUE
[17:22:13.184]      // while "1"  (timeout="50000")
[17:22:13.185]      // while-condition  =>  TRUE
[17:22:13.185]      // while "1"  (timeout="50000")
[17:22:13.185]      // while-condition  =>  TRUE
[17:22:13.186]      // while "1"  (timeout="50000")
[17:22:13.186]      // while-condition  =>  TRUE
[17:22:13.186]      // while "1"  (timeout="50000")
[17:22:13.186]      // while-condition  =>  TRUE
[17:22:13.186]      // while "1"  (timeout="50000")
[17:22:13.186]      // while-condition  =>  TRUE
[17:22:13.187]      // while "1"  (timeout="50000")
[17:22:13.187]      // while-condition  =>  TRUE
[17:22:13.188]      // while "1"  (timeout="50000")
[17:22:13.188]      // while-condition  =>  TRUE
[17:22:13.188]      // while "1"  (timeout="50000")
[17:22:13.188]      // while-condition  =>  TRUE
[17:22:13.189]      // while "1"  (timeout="50000")
[17:22:13.189]      // while-condition  =>  TRUE
[17:22:13.189]      // while "1"  (timeout="50000")
[17:22:13.189]      // while-condition  =>  TRUE
[17:22:13.189]      // while "1"  (timeout="50000")
[17:22:13.190]      // while-condition  =>  TRUE
[17:22:13.190]      // while "1"  (timeout="50000")
[17:22:13.190]      // while-condition  =>  TRUE
[17:22:13.190]      // while "1"  (timeout="50000")
[17:22:13.191]      // while-condition  =>  TRUE
[17:22:13.191]      // while "1"  (timeout="50000")
[17:22:13.191]      // while-condition  =>  TRUE
[17:22:13.191]      // while "1"  (timeout="50000")
[17:22:13.191]      // while-condition  =>  TRUE
[17:22:13.192]      // while "1"  (timeout="50000")
[17:22:13.192]      // while-condition  =>  TRUE
[17:22:13.192]      // while "1"  (timeout="50000")
[17:22:13.192]      // while-condition  =>  TRUE
[17:22:13.192]      // while "1"  (timeout="50000")
[17:22:13.192]      // while-condition  =>  TRUE
[17:22:13.192]      // while "1"  (timeout="50000")
[17:22:13.193]      // while-condition  =>  TRUE
[17:22:13.193]      // while "1"  (timeout="50000")
[17:22:13.194]      // while  =>  TIMEOUT
[17:22:13.194]      // end while "1"
[17:22:13.194]    </control>
[17:22:13.194]    <block atomic="false" info="">
[17:22:13.195]      DAP_SWJ_Pins(nReset, nReset, 0);
[17:22:13.197]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[17:22:13.197]    </block>
[17:22:13.198]  </sequence>
[17:22:13.198]  
