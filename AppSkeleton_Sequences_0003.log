/*
 *  CMSIS Pack Debug Access Sequence Log
 *  File        : C:\Users\adminlocal\Desktop\STS\Workspace\SP49\sp490_rep2\AppSkeleton_Sequences_0003.log
 *  Created     : 17:33:36 (13/12/2022)
 *  Device      : SP49_B21
 *  PDSC File   : C:\Users\adminlocal\AppData\Local\Arm\Packs\Infineon\SP49_B2\3.0.4\Infineon.SP49_B2.pdsc
 *
 */

[17:33:36.445]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[17:33:36.445]  
[17:33:36.476]  <debugvars>
[17:33:36.494]    // Pre-defined
[17:33:36.517]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:33:36.519]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[17:33:36.519]    __dp=0x00000000
[17:33:36.519]    __ap=0x00000000
[17:33:36.520]    __traceout=0x00000000      (Trace Disabled)
[17:33:36.521]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:33:36.522]    __FlashAddr=0x00000000
[17:33:36.522]    __FlashLen=0x00000000
[17:33:36.524]    __FlashArg=0x00000000
[17:33:36.524]    __FlashOp=0x00000000
[17:33:36.525]    __Result=0x00000000
[17:33:36.526]  </debugvars>
[17:33:36.526]  
[17:33:36.528]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[17:33:36.528]    <block atomic="false" info="">
[17:33:36.529]      __var nReset      = 0x80;
[17:33:36.530]        // -> [nReset <= 0x00000080]
[17:33:36.530]      DAP_SWJ_Pins(0x00, nReset, 0);
[17:33:36.532]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[17:33:36.533]    </block>
[17:33:36.534]    <control if="" while="1" timeout="50000" info="">
[17:33:36.534]      // while "1"  (timeout="50000")
[17:33:36.535]      // while-condition  =>  TRUE
[17:33:36.536]      // while "1"  (timeout="50000")
[17:33:36.536]      // while-condition  =>  TRUE
[17:33:36.537]      // while "1"  (timeout="50000")
[17:33:36.538]      // while-condition  =>  TRUE
[17:33:36.538]      // while "1"  (timeout="50000")
[17:33:36.539]      // while-condition  =>  TRUE
[17:33:36.539]      // while "1"  (timeout="50000")
[17:33:36.540]      // while-condition  =>  TRUE
[17:33:36.541]      // while "1"  (timeout="50000")
[17:33:36.541]      // while-condition  =>  TRUE
[17:33:36.542]      // while "1"  (timeout="50000")
[17:33:36.542]      // while-condition  =>  TRUE
[17:33:36.543]      // while "1"  (timeout="50000")
[17:33:36.543]      // while-condition  =>  TRUE
[17:33:36.544]      // while "1"  (timeout="50000")
[17:33:36.544]      // while-condition  =>  TRUE
[17:33:36.544]      // while "1"  (timeout="50000")
[17:33:36.545]      // while-condition  =>  TRUE
[17:33:36.545]      // while "1"  (timeout="50000")
[17:33:36.546]      // while-condition  =>  TRUE
[17:33:36.546]      // while "1"  (timeout="50000")
[17:33:36.546]      // while-condition  =>  TRUE
[17:33:36.547]      // while "1"  (timeout="50000")
[17:33:36.547]      // while-condition  =>  TRUE
[17:33:36.548]      // while "1"  (timeout="50000")
[17:33:36.548]      // while-condition  =>  TRUE
[17:33:36.548]      // while "1"  (timeout="50000")
[17:33:36.549]      // while-condition  =>  TRUE
[17:33:36.550]      // while "1"  (timeout="50000")
[17:33:36.550]      // while-condition  =>  TRUE
[17:33:36.550]      // while "1"  (timeout="50000")
[17:33:36.550]      // while-condition  =>  TRUE
[17:33:36.551]      // while "1"  (timeout="50000")
[17:33:36.551]      // while-condition  =>  TRUE
[17:33:36.551]      // while "1"  (timeout="50000")
[17:33:36.551]      // while-condition  =>  TRUE
[17:33:36.551]      // while "1"  (timeout="50000")
[17:33:36.552]      // while-condition  =>  TRUE
[17:33:36.553]      // while "1"  (timeout="50000")
[17:33:36.553]      // while-condition  =>  TRUE
[17:33:36.553]      // while "1"  (timeout="50000")
[17:33:36.553]      // while-condition  =>  TRUE
[17:33:36.553]      // while "1"  (timeout="50000")
[17:33:36.553]      // while-condition  =>  TRUE
[17:33:36.553]      // while "1"  (timeout="50000")
[17:33:36.554]      // while-condition  =>  TRUE
[17:33:36.554]      // while "1"  (timeout="50000")
[17:33:36.554]      // while-condition  =>  TRUE
[17:33:36.555]      // while "1"  (timeout="50000")
[17:33:36.555]      // while-condition  =>  TRUE
[17:33:36.556]      // while "1"  (timeout="50000")
[17:33:36.556]      // while-condition  =>  TRUE
[17:33:36.556]      // while "1"  (timeout="50000")
[17:33:36.556]      // while-condition  =>  TRUE
[17:33:36.556]      // while "1"  (timeout="50000")
[17:33:36.557]      // while-condition  =>  TRUE
[17:33:36.557]      // while "1"  (timeout="50000")
[17:33:36.557]      // while-condition  =>  TRUE
[17:33:36.557]      // while "1"  (timeout="50000")
[17:33:36.558]      // while-condition  =>  TRUE
[17:33:36.558]      // while "1"  (timeout="50000")
[17:33:36.558]      // while-condition  =>  TRUE
[17:33:36.558]      // while "1"  (timeout="50000")
[17:33:36.558]      // while-condition  =>  TRUE
[17:33:36.559]      // while "1"  (timeout="50000")
[17:33:36.559]      // while-condition  =>  TRUE
[17:33:36.559]      // while "1"  (timeout="50000")
[17:33:36.559]      // while-condition  =>  TRUE
[17:33:36.559]      // while "1"  (timeout="50000")
[17:33:36.560]      // while-condition  =>  TRUE
[17:33:36.560]      // while "1"  (timeout="50000")
[17:33:36.560]      // while-condition  =>  TRUE
[17:33:36.560]      // while "1"  (timeout="50000")
[17:33:36.560]      // while-condition  =>  TRUE
[17:33:36.561]      // while "1"  (timeout="50000")
[17:33:36.561]      // while-condition  =>  TRUE
[17:33:36.561]      // while "1"  (timeout="50000")
[17:33:36.561]      // while-condition  =>  TRUE
[17:33:36.561]      // while "1"  (timeout="50000")
[17:33:36.561]      // while-condition  =>  TRUE
[17:33:36.561]      // while "1"  (timeout="50000")
[17:33:36.561]      // while-condition  =>  TRUE
[17:33:36.561]      // while "1"  (timeout="50000")
[17:33:36.562]      // while-condition  =>  TRUE
[17:33:36.562]      // while "1"  (timeout="50000")
[17:33:36.562]      // while-condition  =>  TRUE
[17:33:36.562]      // while "1"  (timeout="50000")
[17:33:36.562]      // while-condition  =>  TRUE
[17:33:36.563]      // while "1"  (timeout="50000")
[17:33:36.563]      // while-condition  =>  TRUE
[17:33:36.563]      // while "1"  (timeout="50000")
[17:33:36.563]      // while-condition  =>  TRUE
[17:33:36.563]      // while "1"  (timeout="50000")
[17:33:36.564]      // while-condition  =>  TRUE
[17:33:36.564]      // while "1"  (timeout="50000")
[17:33:36.564]      // while-condition  =>  TRUE
[17:33:36.564]      // while "1"  (timeout="50000")
[17:33:36.564]      // while-condition  =>  TRUE
[17:33:36.565]      // while "1"  (timeout="50000")
[17:33:36.565]      // while-condition  =>  TRUE
[17:33:36.565]      // while "1"  (timeout="50000")
[17:33:36.565]      // while-condition  =>  TRUE
[17:33:36.565]      // while "1"  (timeout="50000")
[17:33:36.566]      // while-condition  =>  TRUE
[17:33:36.566]      // while "1"  (timeout="50000")
[17:33:36.566]      // while-condition  =>  TRUE
[17:33:36.566]      // while "1"  (timeout="50000")
[17:33:36.567]      // while-condition  =>  TRUE
[17:33:36.567]      // while "1"  (timeout="50000")
[17:33:36.567]      // while-condition  =>  TRUE
[17:33:36.569]      // while "1"  (timeout="50000")
[17:33:36.569]      // while-condition  =>  TRUE
[17:33:36.569]      // while "1"  (timeout="50000")
[17:33:36.570]      // while-condition  =>  TRUE
[17:33:36.570]      // while "1"  (timeout="50000")
[17:33:36.570]      // while-condition  =>  TRUE
[17:33:36.570]      // while "1"  (timeout="50000")
[17:33:36.570]      // while-condition  =>  TRUE
[17:33:36.570]      // while "1"  (timeout="50000")
[17:33:36.571]      // while-condition  =>  TRUE
[17:33:36.571]      // while "1"  (timeout="50000")
[17:33:36.571]      // while-condition  =>  TRUE
[17:33:36.571]      // while "1"  (timeout="50000")
[17:33:36.571]      // while-condition  =>  TRUE
[17:33:36.572]      // while "1"  (timeout="50000")
[17:33:36.572]      // while-condition  =>  TRUE
[17:33:36.572]      // while "1"  (timeout="50000")
[17:33:36.572]      // while-condition  =>  TRUE
[17:33:36.572]      // while "1"  (timeout="50000")
[17:33:36.572]      // while-condition  =>  TRUE
[17:33:36.573]      // while "1"  (timeout="50000")
[17:33:36.573]      // while-condition  =>  TRUE
[17:33:36.573]      // while "1"  (timeout="50000")
[17:33:36.573]      // while-condition  =>  TRUE
[17:33:36.573]      // while "1"  (timeout="50000")
[17:33:36.574]      // while-condition  =>  TRUE
[17:33:36.574]      // while "1"  (timeout="50000")
[17:33:36.574]      // while-condition  =>  TRUE
[17:33:36.574]      // while "1"  (timeout="50000")
[17:33:36.574]      // while-condition  =>  TRUE
[17:33:36.575]      // while "1"  (timeout="50000")
[17:33:36.575]      // while-condition  =>  TRUE
[17:33:36.575]      // while "1"  (timeout="50000")
[17:33:36.575]      // while-condition  =>  TRUE
[17:33:36.575]      // while "1"  (timeout="50000")
[17:33:36.575]      // while-condition  =>  TRUE
[17:33:36.576]      // while "1"  (timeout="50000")
[17:33:36.576]      // while-condition  =>  TRUE
[17:33:36.576]      // while "1"  (timeout="50000")
[17:33:36.577]      // while-condition  =>  TRUE
[17:33:36.577]      // while "1"  (timeout="50000")
[17:33:36.577]      // while-condition  =>  TRUE
[17:33:36.577]      // while "1"  (timeout="50000")
[17:33:36.577]      // while-condition  =>  TRUE
[17:33:36.577]      // while "1"  (timeout="50000")
[17:33:36.577]      // while-condition  =>  TRUE
[17:33:36.577]      // while "1"  (timeout="50000")
[17:33:36.577]      // while-condition  =>  TRUE
[17:33:36.578]      // while "1"  (timeout="50000")
[17:33:36.578]      // while-condition  =>  TRUE
[17:33:36.578]      // while "1"  (timeout="50000")
[17:33:36.578]      // while-condition  =>  TRUE
[17:33:36.578]      // while "1"  (timeout="50000")
[17:33:36.579]      // while-condition  =>  TRUE
[17:33:36.579]      // while "1"  (timeout="50000")
[17:33:36.580]      // while-condition  =>  TRUE
[17:33:36.580]      // while "1"  (timeout="50000")
[17:33:36.580]      // while-condition  =>  TRUE
[17:33:36.580]      // while "1"  (timeout="50000")
[17:33:36.580]      // while-condition  =>  TRUE
[17:33:36.581]      // while "1"  (timeout="50000")
[17:33:36.581]      // while-condition  =>  TRUE
[17:33:36.581]      // while "1"  (timeout="50000")
[17:33:36.581]      // while-condition  =>  TRUE
[17:33:36.581]      // while "1"  (timeout="50000")
[17:33:36.582]      // while-condition  =>  TRUE
[17:33:36.582]      // while "1"  (timeout="50000")
[17:33:36.582]      // while-condition  =>  TRUE
[17:33:36.582]      // while "1"  (timeout="50000")
[17:33:36.582]      // while-condition  =>  TRUE
[17:33:36.582]      // while "1"  (timeout="50000")
[17:33:36.583]      // while-condition  =>  TRUE
[17:33:36.583]      // while "1"  (timeout="50000")
[17:33:36.583]      // while  =>  TIMEOUT
[17:33:36.583]      // end while "1"
[17:33:36.583]    </control>
[17:33:36.583]    <block atomic="false" info="">
[17:33:36.583]      DAP_SWJ_Pins(nReset, nReset, 0);
[17:33:36.594]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[17:33:36.594]    </block>
[17:33:36.595]    <control if="" while="1" timeout="10000" info="">
[17:33:36.595]      // while "1"  (timeout="10000")
[17:33:36.596]      // while-condition  =>  TRUE
[17:33:36.596]      // while "1"  (timeout="10000")
[17:33:36.597]      // while-condition  =>  TRUE
[17:33:36.598]      // while "1"  (timeout="10000")
[17:33:36.598]      // while-condition  =>  TRUE
[17:33:36.599]      // while "1"  (timeout="10000")
[17:33:36.599]      // while  =>  TIMEOUT
[17:33:36.600]      // end while "1"
[17:33:36.600]    </control>
[17:33:36.600]    <block atomic="true" info="">
[17:33:36.601]      // ATOMIC SEQUENCE - EXECUTE
[17:33:36.603]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[17:33:36.603]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[17:33:36.603]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[17:33:36.604]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[17:33:36.604]      // ATOMIC SEQUENCE - DONE
[17:33:36.604]    </block>
[17:33:36.604]    <block atomic="false" info="">
[17:33:36.605]      __errorcontrol = 0x00000001;
[17:33:36.605]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[17:33:36.605]      ReadDP(0x0);
[17:33:36.608]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[17:33:36.608]      __errorcontrol = 0x00000000;
[17:33:36.609]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[17:33:36.609]    </block>
[17:33:36.609]  </sequence>
[17:33:36.610]  
[17:33:36.610]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[17:33:36.610]  
[17:33:36.610]  <debugvars>
[17:33:36.611]    // Pre-defined
[17:33:36.611]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:33:36.611]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:33:36.611]    __dp=0x00000000
[17:33:36.612]    __ap=0x00000000
[17:33:36.612]    __traceout=0x00000000      (Trace Disabled)
[17:33:36.612]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:33:36.613]    __FlashAddr=0x00000000
[17:33:36.613]    __FlashLen=0x00000000
[17:33:36.613]    __FlashArg=0x00000000
[17:33:36.613]    __FlashOp=0x00000000
[17:33:36.614]    __Result=0x00000000
[17:33:36.614]  </debugvars>
[17:33:36.614]  
[17:33:36.614]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[17:33:36.615]  </sequence>
[17:33:36.615]  
[17:33:36.616]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[17:33:36.616]  
[17:33:36.617]  <debugvars>
[17:33:36.617]    // Pre-defined
[17:33:36.617]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:33:36.618]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:33:36.618]    __dp=0x00000000
[17:33:36.619]    __ap=0x00000000
[17:33:36.619]    __traceout=0x00000000      (Trace Disabled)
[17:33:36.619]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:33:36.619]    __FlashAddr=0x00000000
[17:33:36.619]    __FlashLen=0x00000000
[17:33:36.620]    __FlashArg=0x00000000
[17:33:36.620]    __FlashOp=0x00000000
[17:33:36.620]    __Result=0x00000000
[17:33:36.620]  </debugvars>
[17:33:36.621]  
[17:33:36.621]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[17:33:36.621]    <block atomic="false" info="">
[17:33:36.621]      __var SW_DP_ABORT  = 0x0;
[17:33:36.621]        // -> [SW_DP_ABORT <= 0x00000000]
[17:33:36.622]      __var DP_CTRL_STAT = 0x4;
[17:33:36.622]        // -> [DP_CTRL_STAT <= 0x00000004]
[17:33:36.623]      __var DP_SELECT    = 0x8;
[17:33:36.623]        // -> [DP_SELECT <= 0x00000008]
[17:33:36.623]      __var powered_down = 0;
[17:33:36.623]        // -> [powered_down <= 0x00000000]
[17:33:36.623]      WriteDP(DP_SELECT, 0x00000000);
[17:33:36.624]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[17:33:36.624]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[17:33:36.625]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[17:33:36.625]        // -> [powered_down <= 0x00000001]
[17:33:36.626]    </block>
[17:33:36.646]    <control if="powered_down" while="" timeout="0" info="">
[17:33:36.646]      // if-block "powered_down"
[17:33:36.647]        // =>  TRUE
[17:33:36.647]      <block atomic="false" info="">
[17:33:36.648]        WriteDP(DP_CTRL_STAT, 0x50000000);
[17:33:36.651]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[17:33:36.651]      </block>
[17:33:36.652]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[17:33:36.652]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[17:33:36.655]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[17:33:36.655]        // while-condition  =>  FALSE
[17:33:36.655]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[17:33:36.656]      </control>
[17:33:36.656]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[17:33:36.656]        // if-block "(__protocol & 0xFFFF) == 1"
[17:33:36.657]          // =>  FALSE
[17:33:36.657]        // skip if-block "(__protocol & 0xFFFF) == 1"
[17:33:36.658]      </control>
[17:33:36.658]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[17:33:36.659]        // if-block "(__protocol & 0xFFFF) == 2"
[17:33:36.660]          // =>  TRUE
[17:33:36.660]        <block atomic="false" info="">
[17:33:36.661]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[17:33:36.663]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[17:33:36.664]          WriteDP(SW_DP_ABORT, 0x0000001E);
[17:33:36.666]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[17:33:36.666]        </block>
[17:33:36.666]        // end if-block "(__protocol & 0xFFFF) == 2"
[17:33:36.666]      </control>
[17:33:36.667]      // end if-block "powered_down"
[17:33:36.667]    </control>
[17:33:36.668]  </sequence>
[17:33:36.668]  
[17:33:36.725]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[17:33:36.725]  
[17:33:36.725]  <debugvars>
[17:33:36.726]    // Pre-defined
[17:33:36.726]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:33:36.727]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:33:36.727]    __dp=0x00000000
[17:33:36.728]    __ap=0x00000000
[17:33:36.728]    __traceout=0x00000000      (Trace Disabled)
[17:33:36.728]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:33:36.729]    __FlashAddr=0x00000000
[17:33:36.729]    __FlashLen=0x00000000
[17:33:36.730]    __FlashArg=0x00000000
[17:33:36.731]    __FlashOp=0x00000000
[17:33:36.731]    __Result=0x00000000
[17:33:36.731]  </debugvars>
[17:33:36.732]  
[17:33:36.732]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[17:33:36.732]    <block atomic="true" info="">
[17:33:36.732]      // ATOMIC SEQUENCE - EXECUTE
[17:33:36.734]      __var DP_R_IDCODE    = 0x0;
[17:33:36.735]        // -> [DP_R_IDCODE <= 0x00000000]
[17:33:36.735]      __var DP_W_ABORT    = 0x0;
[17:33:36.735]        // -> [DP_W_ABORT <= 0x00000000]
[17:33:36.735]      __var DP_CTRLSTAT = 0x4;
[17:33:36.736]        // -> [DP_CTRLSTAT <= 0x00000004]
[17:33:36.736]      __var DP_W_SELECT    = 0x8;
[17:33:36.737]        // -> [DP_W_SELECT <= 0x00000008]
[17:33:36.737]      __var AP_TAR		= 0x4;
[17:33:36.737]        // -> [AP_TAR <= 0x00000004]
[17:33:36.737]      __var AP_BD0		= 0x0;
[17:33:36.738]        // -> [AP_BD0 <= 0x00000000]
[17:33:36.738]      __var AP_BD1		= 0x4;
[17:33:36.738]        // -> [AP_BD1 <= 0x00000004]
[17:33:36.739]      __var AP_BD2		= 0x8;
[17:33:36.739]        // -> [AP_BD2 <= 0x00000008]
[17:33:36.739]      __var PCWithinFlash = 0;
[17:33:36.739]        // -> [PCWithinFlash <= 0x00000000]
[17:33:36.740]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[17:33:36.740]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[17:33:36.740]      // ATOMIC SEQUENCE - DONE
[17:33:36.740]    </block>
[17:33:36.740]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[17:33:36.740]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[17:33:36.744]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[17:33:36.744]      // while-condition  =>  FALSE
[17:33:36.745]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[17:33:36.745]    </control>
[17:33:36.746]    <block atomic="true" info="">
[17:33:36.746]      // ATOMIC SEQUENCE - EXECUTE
[17:33:36.748]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[17:33:36.748]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[17:33:36.748]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[17:33:36.749]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[17:33:36.749]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[17:33:36.749]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[17:33:36.749]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[17:33:36.749]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[17:33:36.749]      // ATOMIC SEQUENCE - DONE
[17:33:36.750]    </block>
[17:33:36.750]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[17:33:36.750]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:33:36.752]        // -> [ReadAP(0x00000000) => 0x01030003]   (__dp=0x00000000, __ap=0x00000000)
[17:33:36.752]      // while-condition  =>  FALSE
[17:33:36.753]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[17:33:36.753]    </control>
[17:33:36.753]    <block atomic="false" info="">
[17:33:36.754]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[17:33:36.755]        // -> [ReadAP(0x00000008) => 0x10000820]   (__dp=0x00000000, __ap=0x00000000)
[17:33:36.755]        // -> [PCWithinFlash <= 0x00000001]
[17:33:36.756]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[17:33:36.758]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[17:33:36.758]    </block>
[17:33:36.758]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[17:33:36.758]      // if-block "PCWithinFlash == 0"
[17:33:36.758]        // =>  FALSE
[17:33:36.758]      // skip if-block "PCWithinFlash == 0"
[17:33:36.759]    </control>
[17:33:36.760]  </sequence>
[17:33:36.760]  
[17:33:36.786]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[17:33:36.786]  
[17:33:36.786]  <debugvars>
[17:33:36.787]    // Pre-defined
[17:33:36.787]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:33:36.788]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:33:36.788]    __dp=0x00000000
[17:33:36.789]    __ap=0x00000000
[17:33:36.789]    __traceout=0x00000000      (Trace Disabled)
[17:33:36.790]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:33:36.790]    __FlashAddr=0x00000000
[17:33:36.790]    __FlashLen=0x00000000
[17:33:36.791]    __FlashArg=0x00000000
[17:33:36.791]    __FlashOp=0x00000000
[17:33:36.791]    __Result=0x00000000
[17:33:36.792]  </debugvars>
[17:33:36.793]  
[17:33:36.793]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[17:33:36.793]    <block atomic="false" info="">
[17:33:36.794]    </block>
[17:33:36.794]  </sequence>
[17:33:36.794]  
[17:33:36.795]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[17:33:36.795]  
[17:33:36.796]  <debugvars>
[17:33:36.796]    // Pre-defined
[17:33:36.796]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:33:36.797]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:33:36.797]    __dp=0x00000000
[17:33:36.797]    __ap=0x00000000
[17:33:36.798]    __traceout=0x00000000      (Trace Disabled)
[17:33:36.798]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:33:36.798]    __FlashAddr=0x00000000
[17:33:36.799]    __FlashLen=0x00000000
[17:33:36.799]    __FlashArg=0x00000000
[17:33:36.799]    __FlashOp=0x00000000
[17:33:36.800]    __Result=0x00000000
[17:33:36.800]  </debugvars>
[17:33:36.800]  
[17:33:36.800]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[17:33:36.801]    <block atomic="false" info="">
[17:33:36.801]      __var nReset      = 0x80;
[17:33:36.801]        // -> [nReset <= 0x00000080]
[17:33:36.801]      DAP_SWJ_Pins(0x00, nReset, 0);
[17:33:36.803]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[17:33:36.803]    </block>
[17:33:36.803]    <control if="" while="1" timeout="50000" info="">
[17:33:36.803]      // while "1"  (timeout="50000")
[17:33:36.803]      // while-condition  =>  TRUE
[17:33:36.804]      // while "1"  (timeout="50000")
[17:33:36.804]      // while-condition  =>  TRUE
[17:33:36.804]      // while "1"  (timeout="50000")
[17:33:36.804]      // while-condition  =>  TRUE
[17:33:36.804]      // while "1"  (timeout="50000")
[17:33:36.805]      // while-condition  =>  TRUE
[17:33:36.805]      // while "1"  (timeout="50000")
[17:33:36.805]      // while-condition  =>  TRUE
[17:33:36.805]      // while "1"  (timeout="50000")
[17:33:36.805]      // while-condition  =>  TRUE
[17:33:36.806]      // while "1"  (timeout="50000")
[17:33:36.806]      // while-condition  =>  TRUE
[17:33:36.806]      // while "1"  (timeout="50000")
[17:33:36.806]      // while-condition  =>  TRUE
[17:33:36.806]      // while "1"  (timeout="50000")
[17:33:36.806]      // while-condition  =>  TRUE
[17:33:36.807]      // while "1"  (timeout="50000")
[17:33:36.807]      // while-condition  =>  TRUE
[17:33:36.807]      // while "1"  (timeout="50000")
[17:33:36.808]      // while-condition  =>  TRUE
[17:33:36.808]      // while "1"  (timeout="50000")
[17:33:36.808]      // while-condition  =>  TRUE
[17:33:36.808]      // while "1"  (timeout="50000")
[17:33:36.808]      // while-condition  =>  TRUE
[17:33:36.809]      // while "1"  (timeout="50000")
[17:33:36.809]      // while-condition  =>  TRUE
[17:33:36.809]      // while "1"  (timeout="50000")
[17:33:36.809]      // while-condition  =>  TRUE
[17:33:36.809]      // while "1"  (timeout="50000")
[17:33:36.810]      // while-condition  =>  TRUE
[17:33:36.810]      // while "1"  (timeout="50000")
[17:33:36.810]      // while-condition  =>  TRUE
[17:33:36.810]      // while "1"  (timeout="50000")
[17:33:36.810]      // while-condition  =>  TRUE
[17:33:36.811]      // while "1"  (timeout="50000")
[17:33:36.811]      // while-condition  =>  TRUE
[17:33:36.811]      // while "1"  (timeout="50000")
[17:33:36.811]      // while-condition  =>  TRUE
[17:33:36.811]      // while "1"  (timeout="50000")
[17:33:36.812]      // while-condition  =>  TRUE
[17:33:36.812]      // while "1"  (timeout="50000")
[17:33:36.812]      // while-condition  =>  TRUE
[17:33:36.812]      // while "1"  (timeout="50000")
[17:33:36.812]      // while-condition  =>  TRUE
[17:33:36.813]      // while "1"  (timeout="50000")
[17:33:36.813]      // while-condition  =>  TRUE
[17:33:36.813]      // while "1"  (timeout="50000")
[17:33:36.813]      // while-condition  =>  TRUE
[17:33:36.813]      // while "1"  (timeout="50000")
[17:33:36.813]      // while-condition  =>  TRUE
[17:33:36.813]      // while "1"  (timeout="50000")
[17:33:36.813]      // while-condition  =>  TRUE
[17:33:36.814]      // while "1"  (timeout="50000")
[17:33:36.814]      // while-condition  =>  TRUE
[17:33:36.814]      // while "1"  (timeout="50000")
[17:33:36.815]      // while-condition  =>  TRUE
[17:33:36.815]      // while "1"  (timeout="50000")
[17:33:36.815]      // while-condition  =>  TRUE
[17:33:36.815]      // while "1"  (timeout="50000")
[17:33:36.815]      // while-condition  =>  TRUE
[17:33:36.815]      // while "1"  (timeout="50000")
[17:33:36.815]      // while-condition  =>  TRUE
[17:33:36.816]      // while "1"  (timeout="50000")
[17:33:36.816]      // while-condition  =>  TRUE
[17:33:36.816]      // while "1"  (timeout="50000")
[17:33:36.816]      // while-condition  =>  TRUE
[17:33:36.816]      // while "1"  (timeout="50000")
[17:33:36.816]      // while-condition  =>  TRUE
[17:33:36.817]      // while "1"  (timeout="50000")
[17:33:36.817]      // while-condition  =>  TRUE
[17:33:36.817]      // while "1"  (timeout="50000")
[17:33:36.818]      // while-condition  =>  TRUE
[17:33:36.818]      // while "1"  (timeout="50000")
[17:33:36.818]      // while-condition  =>  TRUE
[17:33:36.818]      // while "1"  (timeout="50000")
[17:33:36.818]      // while-condition  =>  TRUE
[17:33:36.819]      // while "1"  (timeout="50000")
[17:33:36.819]      // while-condition  =>  TRUE
[17:33:36.819]      // while "1"  (timeout="50000")
[17:33:36.819]      // while-condition  =>  TRUE
[17:33:36.819]      // while "1"  (timeout="50000")
[17:33:36.820]      // while-condition  =>  TRUE
[17:33:36.820]      // while "1"  (timeout="50000")
[17:33:36.820]      // while-condition  =>  TRUE
[17:33:36.820]      // while "1"  (timeout="50000")
[17:33:36.820]      // while-condition  =>  TRUE
[17:33:36.821]      // while "1"  (timeout="50000")
[17:33:36.821]      // while-condition  =>  TRUE
[17:33:36.821]      // while "1"  (timeout="50000")
[17:33:36.821]      // while-condition  =>  TRUE
[17:33:36.821]      // while "1"  (timeout="50000")
[17:33:36.822]      // while-condition  =>  TRUE
[17:33:36.822]      // while "1"  (timeout="50000")
[17:33:36.822]      // while-condition  =>  TRUE
[17:33:36.822]      // while "1"  (timeout="50000")
[17:33:36.822]      // while-condition  =>  TRUE
[17:33:36.823]      // while "1"  (timeout="50000")
[17:33:36.823]      // while-condition  =>  TRUE
[17:33:36.823]      // while "1"  (timeout="50000")
[17:33:36.823]      // while-condition  =>  TRUE
[17:33:36.823]      // while "1"  (timeout="50000")
[17:33:36.824]      // while-condition  =>  TRUE
[17:33:36.824]      // while "1"  (timeout="50000")
[17:33:36.824]      // while-condition  =>  TRUE
[17:33:36.824]      // while "1"  (timeout="50000")
[17:33:36.824]      // while-condition  =>  TRUE
[17:33:36.824]      // while "1"  (timeout="50000")
[17:33:36.824]      // while-condition  =>  TRUE
[17:33:36.825]      // while "1"  (timeout="50000")
[17:33:36.825]      // while-condition  =>  TRUE
[17:33:36.825]      // while "1"  (timeout="50000")
[17:33:36.825]      // while-condition  =>  TRUE
[17:33:36.826]      // while "1"  (timeout="50000")
[17:33:36.826]      // while-condition  =>  TRUE
[17:33:36.826]      // while "1"  (timeout="50000")
[17:33:36.826]      // while-condition  =>  TRUE
[17:33:36.826]      // while "1"  (timeout="50000")
[17:33:36.827]      // while-condition  =>  TRUE
[17:33:36.827]      // while "1"  (timeout="50000")
[17:33:36.827]      // while-condition  =>  TRUE
[17:33:36.828]      // while "1"  (timeout="50000")
[17:33:36.828]      // while-condition  =>  TRUE
[17:33:36.828]      // while "1"  (timeout="50000")
[17:33:36.828]      // while-condition  =>  TRUE
[17:33:36.828]      // while "1"  (timeout="50000")
[17:33:36.828]      // while-condition  =>  TRUE
[17:33:36.828]      // while "1"  (timeout="50000")
[17:33:36.828]      // while-condition  =>  TRUE
[17:33:36.829]      // while "1"  (timeout="50000")
[17:33:36.829]      // while-condition  =>  TRUE
[17:33:36.829]      // while "1"  (timeout="50000")
[17:33:36.829]      // while-condition  =>  TRUE
[17:33:36.830]      // while "1"  (timeout="50000")
[17:33:36.830]      // while-condition  =>  TRUE
[17:33:36.830]      // while "1"  (timeout="50000")
[17:33:36.830]      // while-condition  =>  TRUE
[17:33:36.831]      // while "1"  (timeout="50000")
[17:33:36.831]      // while-condition  =>  TRUE
[17:33:36.832]      // while "1"  (timeout="50000")
[17:33:36.832]      // while-condition  =>  TRUE
[17:33:36.832]      // while "1"  (timeout="50000")
[17:33:36.832]      // while-condition  =>  TRUE
[17:33:36.832]      // while "1"  (timeout="50000")
[17:33:36.833]      // while-condition  =>  TRUE
[17:33:36.833]      // while "1"  (timeout="50000")
[17:33:36.833]      // while-condition  =>  TRUE
[17:33:36.833]      // while "1"  (timeout="50000")
[17:33:36.833]      // while-condition  =>  TRUE
[17:33:36.834]      // while "1"  (timeout="50000")
[17:33:36.834]      // while-condition  =>  TRUE
[17:33:36.834]      // while "1"  (timeout="50000")
[17:33:36.834]      // while-condition  =>  TRUE
[17:33:36.834]      // while "1"  (timeout="50000")
[17:33:36.835]      // while-condition  =>  TRUE
[17:33:36.835]      // while "1"  (timeout="50000")
[17:33:36.835]      // while-condition  =>  TRUE
[17:33:36.835]      // while "1"  (timeout="50000")
[17:33:36.835]      // while-condition  =>  TRUE
[17:33:36.835]      // while "1"  (timeout="50000")
[17:33:36.835]      // while-condition  =>  TRUE
[17:33:36.836]      // while "1"  (timeout="50000")
[17:33:36.836]      // while-condition  =>  TRUE
[17:33:36.837]      // while "1"  (timeout="50000")
[17:33:36.837]      // while-condition  =>  TRUE
[17:33:36.838]      // while "1"  (timeout="50000")
[17:33:36.838]      // while-condition  =>  TRUE
[17:33:36.838]      // while "1"  (timeout="50000")
[17:33:36.838]      // while-condition  =>  TRUE
[17:33:36.838]      // while "1"  (timeout="50000")
[17:33:36.839]      // while-condition  =>  TRUE
[17:33:36.839]      // while "1"  (timeout="50000")
[17:33:36.839]      // while-condition  =>  TRUE
[17:33:36.839]      // while "1"  (timeout="50000")
[17:33:36.839]      // while-condition  =>  TRUE
[17:33:36.840]      // while "1"  (timeout="50000")
[17:33:36.840]      // while-condition  =>  TRUE
[17:33:36.840]      // while "1"  (timeout="50000")
[17:33:36.840]      // while-condition  =>  TRUE
[17:33:36.840]      // while "1"  (timeout="50000")
[17:33:36.840]      // while-condition  =>  TRUE
[17:33:36.840]      // while "1"  (timeout="50000")
[17:33:36.840]      // while-condition  =>  TRUE
[17:33:36.841]      // while "1"  (timeout="50000")
[17:33:36.841]      // while-condition  =>  TRUE
[17:33:36.841]      // while "1"  (timeout="50000")
[17:33:36.841]      // while-condition  =>  TRUE
[17:33:36.841]      // while "1"  (timeout="50000")
[17:33:36.842]      // while-condition  =>  TRUE
[17:33:36.842]      // while "1"  (timeout="50000")
[17:33:36.843]      // while-condition  =>  TRUE
[17:33:36.843]      // while "1"  (timeout="50000")
[17:33:36.843]      // while-condition  =>  TRUE
[17:33:36.843]      // while "1"  (timeout="50000")
[17:33:36.843]      // while-condition  =>  TRUE
[17:33:36.843]      // while "1"  (timeout="50000")
[17:33:36.843]      // while-condition  =>  TRUE
[17:33:36.844]      // while "1"  (timeout="50000")
[17:33:36.844]      // while-condition  =>  TRUE
[17:33:36.844]      // while "1"  (timeout="50000")
[17:33:36.845]      // while-condition  =>  TRUE
[17:33:36.845]      // while "1"  (timeout="50000")
[17:33:36.845]      // while-condition  =>  TRUE
[17:33:36.845]      // while "1"  (timeout="50000")
[17:33:36.845]      // while-condition  =>  TRUE
[17:33:36.845]      // while "1"  (timeout="50000")
[17:33:36.846]      // while-condition  =>  TRUE
[17:33:36.846]      // while "1"  (timeout="50000")
[17:33:36.846]      // while-condition  =>  TRUE
[17:33:36.846]      // while "1"  (timeout="50000")
[17:33:36.846]      // while-condition  =>  TRUE
[17:33:36.847]      // while "1"  (timeout="50000")
[17:33:36.847]      // while-condition  =>  TRUE
[17:33:36.847]      // while "1"  (timeout="50000")
[17:33:36.847]      // while-condition  =>  TRUE
[17:33:36.847]      // while "1"  (timeout="50000")
[17:33:36.847]      // while-condition  =>  TRUE
[17:33:36.848]      // while "1"  (timeout="50000")
[17:33:36.848]      // while-condition  =>  TRUE
[17:33:36.848]      // while "1"  (timeout="50000")
[17:33:36.848]      // while-condition  =>  TRUE
[17:33:36.849]      // while "1"  (timeout="50000")
[17:33:36.849]      // while-condition  =>  TRUE
[17:33:36.849]      // while "1"  (timeout="50000")
[17:33:36.849]      // while-condition  =>  TRUE
[17:33:36.849]      // while "1"  (timeout="50000")
[17:33:36.850]      // while-condition  =>  TRUE
[17:33:36.850]      // while "1"  (timeout="50000")
[17:33:36.850]      // while-condition  =>  TRUE
[17:33:36.850]      // while "1"  (timeout="50000")
[17:33:36.851]      // while-condition  =>  TRUE
[17:33:36.851]      // while "1"  (timeout="50000")
[17:33:36.851]      // while-condition  =>  TRUE
[17:33:36.851]      // while "1"  (timeout="50000")
[17:33:36.851]      // while-condition  =>  TRUE
[17:33:36.851]      // while "1"  (timeout="50000")
[17:33:36.852]      // while-condition  =>  TRUE
[17:33:36.852]      // while "1"  (timeout="50000")
[17:33:36.852]      // while-condition  =>  TRUE
[17:33:36.852]      // while "1"  (timeout="50000")
[17:33:36.852]      // while-condition  =>  TRUE
[17:33:36.853]      // while "1"  (timeout="50000")
[17:33:36.853]      // while-condition  =>  TRUE
[17:33:36.853]      // while "1"  (timeout="50000")
[17:33:36.853]      // while-condition  =>  TRUE
[17:33:36.853]      // while "1"  (timeout="50000")
[17:33:36.854]      // while-condition  =>  TRUE
[17:33:36.854]      // while "1"  (timeout="50000")
[17:33:36.854]      // while-condition  =>  TRUE
[17:33:36.854]      // while "1"  (timeout="50000")
[17:33:36.854]      // while-condition  =>  TRUE
[17:33:36.854]      // while "1"  (timeout="50000")
[17:33:36.854]      // while-condition  =>  TRUE
[17:33:36.854]      // while "1"  (timeout="50000")
[17:33:36.855]      // while-condition  =>  TRUE
[17:33:36.855]      // while "1"  (timeout="50000")
[17:33:36.856]      // while-condition  =>  TRUE
[17:33:36.856]      // while "1"  (timeout="50000")
[17:33:36.856]      // while-condition  =>  TRUE
[17:33:36.856]      // while "1"  (timeout="50000")
[17:33:36.856]      // while-condition  =>  TRUE
[17:33:36.856]      // while "1"  (timeout="50000")
[17:33:36.857]      // while-condition  =>  TRUE
[17:33:36.857]      // while "1"  (timeout="50000")
[17:33:36.857]      // while-condition  =>  TRUE
[17:33:36.857]      // while "1"  (timeout="50000")
[17:33:36.857]      // while-condition  =>  TRUE
[17:33:36.858]      // while "1"  (timeout="50000")
[17:33:36.858]      // while-condition  =>  TRUE
[17:33:36.858]      // while "1"  (timeout="50000")
[17:33:36.858]      // while-condition  =>  TRUE
[17:33:36.858]      // while "1"  (timeout="50000")
[17:33:36.858]      // while-condition  =>  TRUE
[17:33:36.859]      // while "1"  (timeout="50000")
[17:33:36.859]      // while-condition  =>  TRUE
[17:33:36.859]      // while "1"  (timeout="50000")
[17:33:36.859]      // while-condition  =>  TRUE
[17:33:36.859]      // while "1"  (timeout="50000")
[17:33:36.859]      // while-condition  =>  TRUE
[17:33:36.860]      // while "1"  (timeout="50000")
[17:33:36.860]      // while-condition  =>  TRUE
[17:33:36.860]      // while "1"  (timeout="50000")
[17:33:36.860]      // while-condition  =>  TRUE
[17:33:36.861]      // while "1"  (timeout="50000")
[17:33:36.861]      // while-condition  =>  TRUE
[17:33:36.861]      // while "1"  (timeout="50000")
[17:33:36.861]      // while-condition  =>  TRUE
[17:33:36.862]      // while "1"  (timeout="50000")
[17:33:36.862]      // while-condition  =>  TRUE
[17:33:36.862]      // while "1"  (timeout="50000")
[17:33:36.862]      // while-condition  =>  TRUE
[17:33:36.862]      // while "1"  (timeout="50000")
[17:33:36.863]      // while-condition  =>  TRUE
[17:33:36.863]      // while "1"  (timeout="50000")
[17:33:36.863]      // while-condition  =>  TRUE
[17:33:36.864]      // while "1"  (timeout="50000")
[17:33:36.864]      // while  =>  TIMEOUT
[17:33:36.865]      // end while "1"
[17:33:36.865]    </control>
[17:33:36.865]    <block atomic="false" info="">
[17:33:36.866]      DAP_SWJ_Pins(nReset, nReset, 0);
[17:33:36.875]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[17:33:36.878]    </block>
[17:33:36.879]    <control if="" while="1" timeout="10000" info="">
[17:33:36.879]      // while "1"  (timeout="10000")
[17:33:36.880]      // while-condition  =>  TRUE
[17:33:36.880]      // while "1"  (timeout="10000")
[17:33:36.881]      // while  =>  TIMEOUT
[17:33:36.881]      // end while "1"
[17:33:36.882]    </control>
[17:33:36.882]    <block atomic="true" info="">
[17:33:36.883]      // ATOMIC SEQUENCE - EXECUTE
[17:33:36.884]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[17:33:36.884]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[17:33:36.884]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[17:33:36.885]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[17:33:36.885]      // ATOMIC SEQUENCE - DONE
[17:33:36.885]    </block>
[17:33:36.886]    <block atomic="false" info="">
[17:33:36.886]      __errorcontrol = 0x00000001;
[17:33:36.886]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[17:33:36.887]      ReadDP(0x0);
[17:33:36.889]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[17:33:36.889]      __errorcontrol = 0x00000000;
[17:33:36.889]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[17:33:36.889]    </block>
[17:33:36.889]  </sequence>
[17:33:36.890]  
[17:33:36.896]  **********  Sequence "DebugPortStart"  (Context="Reset", Pname="", info="")
[17:33:36.896]  
[17:33:36.896]  <debugvars>
[17:33:36.896]    // Pre-defined
[17:33:36.896]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:33:36.897]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:33:36.897]    __dp=0x00000000
[17:33:36.897]    __ap=0x00000000
[17:33:36.898]    __traceout=0x00000000      (Trace Disabled)
[17:33:36.898]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:33:36.898]    __FlashAddr=0x00000000
[17:33:36.899]    __FlashLen=0x00000000
[17:33:36.899]    __FlashArg=0x00000000
[17:33:36.899]    __FlashOp=0x00000000
[17:33:36.899]    __Result=0x00000000
[17:33:36.900]  </debugvars>
[17:33:36.900]  
[17:33:36.900]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[17:33:36.901]    <block atomic="false" info="">
[17:33:36.901]      __var SW_DP_ABORT  = 0x0;
[17:33:36.901]        // -> [SW_DP_ABORT <= 0x00000000]
[17:33:36.902]      __var DP_CTRL_STAT = 0x4;
[17:33:36.902]        // -> [DP_CTRL_STAT <= 0x00000004]
[17:33:36.902]      __var DP_SELECT    = 0x8;
[17:33:36.902]        // -> [DP_SELECT <= 0x00000008]
[17:33:36.903]      __var powered_down = 0;
[17:33:36.903]        // -> [powered_down <= 0x00000000]
[17:33:36.903]      WriteDP(DP_SELECT, 0x00000000);
[17:33:36.905]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[17:33:36.905]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[17:33:36.906]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[17:33:36.906]        // -> [powered_down <= 0x00000001]
[17:33:36.907]    </block>
[17:33:36.907]    <control if="powered_down" while="" timeout="0" info="">
[17:33:36.907]      // if-block "powered_down"
[17:33:36.908]        // =>  TRUE
[17:33:36.908]      <block atomic="false" info="">
[17:33:36.908]        WriteDP(DP_CTRL_STAT, 0x50000000);
[17:33:36.911]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[17:33:36.911]      </block>
[17:33:36.911]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[17:33:36.911]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[17:33:36.913]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[17:33:36.913]        // while-condition  =>  FALSE
[17:33:36.913]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[17:33:36.914]      </control>
[17:33:36.914]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[17:33:36.914]        // if-block "(__protocol & 0xFFFF) == 1"
[17:33:36.914]          // =>  FALSE
[17:33:36.914]        // skip if-block "(__protocol & 0xFFFF) == 1"
[17:33:36.914]      </control>
[17:33:36.915]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[17:33:36.916]        // if-block "(__protocol & 0xFFFF) == 2"
[17:33:36.916]          // =>  TRUE
[17:33:36.916]        <block atomic="false" info="">
[17:33:36.916]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[17:33:36.917]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[17:33:36.917]          WriteDP(SW_DP_ABORT, 0x0000001E);
[17:33:36.919]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[17:33:36.919]        </block>
[17:33:36.920]        // end if-block "(__protocol & 0xFFFF) == 2"
[17:33:36.920]      </control>
[17:33:36.920]      // end if-block "powered_down"
[17:33:36.920]    </control>
[17:33:36.921]  </sequence>
[17:33:36.921]  
[17:33:36.927]  **********  Sequence "DebugCoreStart"  (Context="Reset", Pname="", info="")
[17:33:36.927]  
[17:33:36.927]  <debugvars>
[17:33:36.927]    // Pre-defined
[17:33:36.927]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:33:36.927]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:33:36.927]    __dp=0x00000000
[17:33:36.928]    __ap=0x00000000
[17:33:36.928]    __traceout=0x00000000      (Trace Disabled)
[17:33:36.928]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:33:36.930]    __FlashAddr=0x00000000
[17:33:36.930]    __FlashLen=0x00000000
[17:33:36.930]    __FlashArg=0x00000000
[17:33:36.930]    __FlashOp=0x00000000
[17:33:36.930]    __Result=0x00000000
[17:33:36.930]  </debugvars>
[17:33:36.931]  
[17:33:36.931]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[17:33:36.931]    <block atomic="true" info="">
[17:33:36.931]      // ATOMIC SEQUENCE - EXECUTE
[17:33:36.934]      __var DP_R_IDCODE    = 0x0;
[17:33:36.934]        // -> [DP_R_IDCODE <= 0x00000000]
[17:33:36.934]      __var DP_W_ABORT    = 0x0;
[17:33:36.934]        // -> [DP_W_ABORT <= 0x00000000]
[17:33:36.934]      __var DP_CTRLSTAT = 0x4;
[17:33:36.934]        // -> [DP_CTRLSTAT <= 0x00000004]
[17:33:36.934]      __var DP_W_SELECT    = 0x8;
[17:33:36.935]        // -> [DP_W_SELECT <= 0x00000008]
[17:33:36.936]      __var AP_TAR		= 0x4;
[17:33:36.936]        // -> [AP_TAR <= 0x00000004]
[17:33:36.936]      __var AP_BD0		= 0x0;
[17:33:36.936]        // -> [AP_BD0 <= 0x00000000]
[17:33:36.937]      __var AP_BD1		= 0x4;
[17:33:36.937]        // -> [AP_BD1 <= 0x00000004]
[17:33:36.937]      __var AP_BD2		= 0x8;
[17:33:36.937]        // -> [AP_BD2 <= 0x00000008]
[17:33:36.937]      __var PCWithinFlash = 0;
[17:33:36.937]        // -> [PCWithinFlash <= 0x00000000]
[17:33:36.937]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[17:33:36.938]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[17:33:36.938]      // ATOMIC SEQUENCE - DONE
[17:33:36.938]    </block>
[17:33:36.938]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[17:33:36.939]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[17:33:36.942]        // -> [Read32(0xE000EDF0) => 0x01030003]   (__dp=0x00000000, __ap=0x00000000)
[17:33:36.942]      // while-condition  =>  FALSE
[17:33:36.942]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[17:33:36.943]    </control>
[17:33:36.944]    <block atomic="true" info="">
[17:33:36.944]      // ATOMIC SEQUENCE - EXECUTE
[17:33:36.947]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[17:33:36.947]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[17:33:36.947]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[17:33:36.947]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[17:33:36.948]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[17:33:36.948]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[17:33:36.948]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[17:33:36.949]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[17:33:36.949]      // ATOMIC SEQUENCE - DONE
[17:33:36.949]    </block>
[17:33:36.949]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[17:33:36.949]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:33:36.952]        // -> [ReadAP(0x00000000) => 0x01030003]   (__dp=0x00000000, __ap=0x00000000)
[17:33:36.952]      // while-condition  =>  FALSE
[17:33:36.952]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[17:33:36.952]    </control>
[17:33:36.952]    <block atomic="false" info="">
[17:33:36.953]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[17:33:36.955]        // -> [ReadAP(0x00000008) => 0x10000820]   (__dp=0x00000000, __ap=0x00000000)
[17:33:36.955]        // -> [PCWithinFlash <= 0x00000001]
[17:33:36.955]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[17:33:36.957]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[17:33:36.957]    </block>
[17:33:36.958]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[17:33:36.958]      // if-block "PCWithinFlash == 0"
[17:33:36.959]        // =>  FALSE
[17:33:36.959]      // skip if-block "PCWithinFlash == 0"
[17:33:36.959]    </control>
[17:33:36.959]  </sequence>
[17:33:36.959]  
[17:33:36.980]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[17:33:36.980]  
[17:33:36.990]  <debugvars>
[17:33:36.991]    // Pre-defined
[17:33:36.991]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:33:36.992]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:33:36.992]    __dp=0x00000000
[17:33:36.993]    __ap=0x00000000
[17:33:36.993]    __traceout=0x00000000      (Trace Disabled)
[17:33:36.994]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:33:36.994]    __FlashAddr=0x00000000
[17:33:36.995]    __FlashLen=0x00000000
[17:33:36.995]    __FlashArg=0x00000000
[17:33:36.996]    __FlashOp=0x00000000
[17:33:36.996]    __Result=0x00000000
[17:33:36.996]  </debugvars>
[17:33:36.997]  
[17:33:36.998]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[17:33:36.998]    <block atomic="false" info="">
[17:33:36.998]    </block>
[17:33:36.998]  </sequence>
[17:33:36.999]  
[17:33:37.199]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[17:33:37.199]  
[17:33:37.199]  <debugvars>
[17:33:37.199]    // Pre-defined
[17:33:37.200]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:33:37.200]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:33:37.200]    __dp=0x00000000
[17:33:37.201]    __ap=0x00000000
[17:33:37.201]    __traceout=0x00000000      (Trace Disabled)
[17:33:37.201]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:33:37.201]    __FlashAddr=0x00000000
[17:33:37.202]    __FlashLen=0x00000000
[17:33:37.202]    __FlashArg=0x00000000
[17:33:37.202]    __FlashOp=0x00000000
[17:33:37.202]    __Result=0x00000000
[17:33:37.204]  </debugvars>
[17:33:37.204]  
[17:33:37.204]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[17:33:37.204]    <block atomic="false" info="">
[17:33:37.205]      Sequence("ResetHardware");
[17:33:37.205]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[17:33:37.205]          <block atomic="false" info="">
[17:33:37.205]            __var nReset      = 0x80;
[17:33:37.206]              // -> [nReset <= 0x00000080]
[17:33:37.206]            DAP_SWJ_Pins(0x00, nReset, 0);
[17:33:37.207]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[17:33:37.207]          </block>
[17:33:37.207]          <control if="" while="1" timeout="50000" info="">
[17:33:37.207]            // while "1"  (timeout="50000")
[17:33:37.207]            // while-condition  =>  TRUE
[17:33:37.208]            // while "1"  (timeout="50000")
[17:33:37.208]            // while-condition  =>  TRUE
[17:33:37.208]            // while "1"  (timeout="50000")
[17:33:37.208]            // while-condition  =>  TRUE
[17:33:37.208]            // while "1"  (timeout="50000")
[17:33:37.208]            // while-condition  =>  TRUE
[17:33:37.208]            // while "1"  (timeout="50000")
[17:33:37.208]            // while-condition  =>  TRUE
[17:33:37.208]            // while "1"  (timeout="50000")
[17:33:37.209]            // while-condition  =>  TRUE
[17:33:37.209]            // while "1"  (timeout="50000")
[17:33:37.209]            // while-condition  =>  TRUE
[17:33:37.209]            // while "1"  (timeout="50000")
[17:33:37.209]            // while-condition  =>  TRUE
[17:33:37.209]            // while "1"  (timeout="50000")
[17:33:37.210]            // while-condition  =>  TRUE
[17:33:37.211]            // while "1"  (timeout="50000")
[17:33:37.211]            // while-condition  =>  TRUE
[17:33:37.211]            // while "1"  (timeout="50000")
[17:33:37.211]            // while-condition  =>  TRUE
[17:33:37.211]            // while "1"  (timeout="50000")
[17:33:37.212]            // while-condition  =>  TRUE
[17:33:37.212]            // while "1"  (timeout="50000")
[17:33:37.212]            // while-condition  =>  TRUE
[17:33:37.212]            // while "1"  (timeout="50000")
[17:33:37.212]            // while-condition  =>  TRUE
[17:33:37.213]            // while "1"  (timeout="50000")
[17:33:37.213]            // while-condition  =>  TRUE
[17:33:37.213]            // while "1"  (timeout="50000")
[17:33:37.213]            // while-condition  =>  TRUE
[17:33:37.213]            // while "1"  (timeout="50000")
[17:33:37.213]            // while-condition  =>  TRUE
[17:33:37.214]            // while "1"  (timeout="50000")
[17:33:37.214]            // while-condition  =>  TRUE
[17:33:37.214]            // while "1"  (timeout="50000")
[17:33:37.214]            // while-condition  =>  TRUE
[17:33:37.215]            // while "1"  (timeout="50000")
[17:33:37.215]            // while-condition  =>  TRUE
[17:33:37.215]            // while "1"  (timeout="50000")
[17:33:37.215]            // while-condition  =>  TRUE
[17:33:37.215]            // while "1"  (timeout="50000")
[17:33:37.215]            // while-condition  =>  TRUE
[17:33:37.216]            // while "1"  (timeout="50000")
[17:33:37.216]            // while-condition  =>  TRUE
[17:33:37.216]            // while "1"  (timeout="50000")
[17:33:37.216]            // while-condition  =>  TRUE
[17:33:37.216]            // while "1"  (timeout="50000")
[17:33:37.217]            // while-condition  =>  TRUE
[17:33:37.217]            // while "1"  (timeout="50000")
[17:33:37.217]            // while-condition  =>  TRUE
[17:33:37.217]            // while "1"  (timeout="50000")
[17:33:37.217]            // while-condition  =>  TRUE
[17:33:37.218]            // while "1"  (timeout="50000")
[17:33:37.218]            // while-condition  =>  TRUE
[17:33:37.218]            // while "1"  (timeout="50000")
[17:33:37.218]            // while-condition  =>  TRUE
[17:33:37.218]            // while "1"  (timeout="50000")
[17:33:37.218]            // while-condition  =>  TRUE
[17:33:37.219]            // while "1"  (timeout="50000")
[17:33:37.219]            // while-condition  =>  TRUE
[17:33:37.219]            // while "1"  (timeout="50000")
[17:33:37.219]            // while-condition  =>  TRUE
[17:33:37.219]            // while "1"  (timeout="50000")
[17:33:37.220]            // while-condition  =>  TRUE
[17:33:37.220]            // while "1"  (timeout="50000")
[17:33:37.220]            // while-condition  =>  TRUE
[17:33:37.220]            // while "1"  (timeout="50000")
[17:33:37.220]            // while-condition  =>  TRUE
[17:33:37.220]            // while "1"  (timeout="50000")
[17:33:37.221]            // while-condition  =>  TRUE
[17:33:37.221]            // while "1"  (timeout="50000")
[17:33:37.221]            // while-condition  =>  TRUE
[17:33:37.221]            // while "1"  (timeout="50000")
[17:33:37.222]            // while-condition  =>  TRUE
[17:33:37.222]            // while "1"  (timeout="50000")
[17:33:37.222]            // while-condition  =>  TRUE
[17:33:37.222]            // while "1"  (timeout="50000")
[17:33:37.222]            // while-condition  =>  TRUE
[17:33:37.222]            // while "1"  (timeout="50000")
[17:33:37.223]            // while-condition  =>  TRUE
[17:33:37.223]            // while "1"  (timeout="50000")
[17:33:37.223]            // while-condition  =>  TRUE
[17:33:37.223]            // while "1"  (timeout="50000")
[17:33:37.223]            // while-condition  =>  TRUE
[17:33:37.224]            // while "1"  (timeout="50000")
[17:33:37.224]            // while-condition  =>  TRUE
[17:33:37.224]            // while "1"  (timeout="50000")
[17:33:37.224]            // while-condition  =>  TRUE
[17:33:37.224]            // while "1"  (timeout="50000")
[17:33:37.224]            // while-condition  =>  TRUE
[17:33:37.224]            // while "1"  (timeout="50000")
[17:33:37.225]            // while-condition  =>  TRUE
[17:33:37.226]            // while "1"  (timeout="50000")
[17:33:37.226]            // while-condition  =>  TRUE
[17:33:37.226]            // while "1"  (timeout="50000")
[17:33:37.226]            // while-condition  =>  TRUE
[17:33:37.226]            // while "1"  (timeout="50000")
[17:33:37.227]            // while-condition  =>  TRUE
[17:33:37.227]            // while "1"  (timeout="50000")
[17:33:37.227]            // while-condition  =>  TRUE
[17:33:37.227]            // while "1"  (timeout="50000")
[17:33:37.227]            // while-condition  =>  TRUE
[17:33:37.228]            // while "1"  (timeout="50000")
[17:33:37.228]            // while-condition  =>  TRUE
[17:33:37.228]            // while "1"  (timeout="50000")
[17:33:37.228]            // while-condition  =>  TRUE
[17:33:37.228]            // while "1"  (timeout="50000")
[17:33:37.229]            // while-condition  =>  TRUE
[17:33:37.229]            // while "1"  (timeout="50000")
[17:33:37.229]            // while-condition  =>  TRUE
[17:33:37.229]            // while "1"  (timeout="50000")
[17:33:37.230]            // while-condition  =>  TRUE
[17:33:37.230]            // while "1"  (timeout="50000")
[17:33:37.230]            // while-condition  =>  TRUE
[17:33:37.231]            // while "1"  (timeout="50000")
[17:33:37.231]            // while-condition  =>  TRUE
[17:33:37.231]            // while "1"  (timeout="50000")
[17:33:37.231]            // while-condition  =>  TRUE
[17:33:37.231]            // while "1"  (timeout="50000")
[17:33:37.232]            // while-condition  =>  TRUE
[17:33:37.232]            // while "1"  (timeout="50000")
[17:33:37.232]            // while-condition  =>  TRUE
[17:33:37.232]            // while "1"  (timeout="50000")
[17:33:37.232]            // while-condition  =>  TRUE
[17:33:37.233]            // while "1"  (timeout="50000")
[17:33:37.233]            // while-condition  =>  TRUE
[17:33:37.233]            // while "1"  (timeout="50000")
[17:33:37.233]            // while-condition  =>  TRUE
[17:33:37.233]            // while "1"  (timeout="50000")
[17:33:37.234]            // while-condition  =>  TRUE
[17:33:37.234]            // while "1"  (timeout="50000")
[17:33:37.234]            // while-condition  =>  TRUE
[17:33:37.234]            // while "1"  (timeout="50000")
[17:33:37.234]            // while-condition  =>  TRUE
[17:33:37.235]            // while "1"  (timeout="50000")
[17:33:37.235]            // while-condition  =>  TRUE
[17:33:37.235]            // while "1"  (timeout="50000")
[17:33:37.235]            // while-condition  =>  TRUE
[17:33:37.235]            // while "1"  (timeout="50000")
[17:33:37.235]            // while-condition  =>  TRUE
[17:33:37.235]            // while "1"  (timeout="50000")
[17:33:37.236]            // while-condition  =>  TRUE
[17:33:37.236]            // while "1"  (timeout="50000")
[17:33:37.236]            // while-condition  =>  TRUE
[17:33:37.237]            // while "1"  (timeout="50000")
[17:33:37.237]            // while-condition  =>  TRUE
[17:33:37.237]            // while "1"  (timeout="50000")
[17:33:37.237]            // while-condition  =>  TRUE
[17:33:37.237]            // while "1"  (timeout="50000")
[17:33:37.237]            // while-condition  =>  TRUE
[17:33:37.238]            // while "1"  (timeout="50000")
[17:33:37.238]            // while-condition  =>  TRUE
[17:33:37.238]            // while "1"  (timeout="50000")
[17:33:37.238]            // while-condition  =>  TRUE
[17:33:37.238]            // while "1"  (timeout="50000")
[17:33:37.239]            // while-condition  =>  TRUE
[17:33:37.239]            // while "1"  (timeout="50000")
[17:33:37.239]            // while-condition  =>  TRUE
[17:33:37.239]            // while "1"  (timeout="50000")
[17:33:37.239]            // while-condition  =>  TRUE
[17:33:37.240]            // while "1"  (timeout="50000")
[17:33:37.240]            // while-condition  =>  TRUE
[17:33:37.240]            // while "1"  (timeout="50000")
[17:33:37.240]            // while-condition  =>  TRUE
[17:33:37.241]            // while "1"  (timeout="50000")
[17:33:37.241]            // while-condition  =>  TRUE
[17:33:37.241]            // while "1"  (timeout="50000")
[17:33:37.241]            // while-condition  =>  TRUE
[17:33:37.242]            // while "1"  (timeout="50000")
[17:33:37.242]            // while-condition  =>  TRUE
[17:33:37.242]            // while "1"  (timeout="50000")
[17:33:37.242]            // while-condition  =>  TRUE
[17:33:37.242]            // while "1"  (timeout="50000")
[17:33:37.243]            // while-condition  =>  TRUE
[17:33:37.243]            // while "1"  (timeout="50000")
[17:33:37.243]            // while-condition  =>  TRUE
[17:33:37.243]            // while "1"  (timeout="50000")
[17:33:37.243]            // while-condition  =>  TRUE
[17:33:37.244]            // while "1"  (timeout="50000")
[17:33:37.244]            // while-condition  =>  TRUE
[17:33:37.244]            // while "1"  (timeout="50000")
[17:33:37.244]            // while-condition  =>  TRUE
[17:33:37.244]            // while "1"  (timeout="50000")
[17:33:37.244]            // while-condition  =>  TRUE
[17:33:37.245]            // while "1"  (timeout="50000")
[17:33:37.245]            // while-condition  =>  TRUE
[17:33:37.245]            // while "1"  (timeout="50000")
[17:33:37.245]            // while-condition  =>  TRUE
[17:33:37.246]            // while "1"  (timeout="50000")
[17:33:37.246]            // while-condition  =>  TRUE
[17:33:37.246]            // while "1"  (timeout="50000")
[17:33:37.246]            // while-condition  =>  TRUE
[17:33:37.246]            // while "1"  (timeout="50000")
[17:33:37.247]            // while-condition  =>  TRUE
[17:33:37.247]            // while "1"  (timeout="50000")
[17:33:37.247]            // while-condition  =>  TRUE
[17:33:37.247]            // while "1"  (timeout="50000")
[17:33:37.247]            // while-condition  =>  TRUE
[17:33:37.247]            // while "1"  (timeout="50000")
[17:33:37.248]            // while-condition  =>  TRUE
[17:33:37.248]            // while "1"  (timeout="50000")
[17:33:37.248]            // while-condition  =>  TRUE
[17:33:37.248]            // while "1"  (timeout="50000")
[17:33:37.248]            // while-condition  =>  TRUE
[17:33:37.249]            // while "1"  (timeout="50000")
[17:33:37.249]            // while-condition  =>  TRUE
[17:33:37.249]            // while "1"  (timeout="50000")
[17:33:37.249]            // while-condition  =>  TRUE
[17:33:37.249]            // while "1"  (timeout="50000")
[17:33:37.249]            // while-condition  =>  TRUE
[17:33:37.250]            // while "1"  (timeout="50000")
[17:33:37.250]            // while-condition  =>  TRUE
[17:33:37.250]            // while "1"  (timeout="50000")
[17:33:37.250]            // while-condition  =>  TRUE
[17:33:37.250]            // while "1"  (timeout="50000")
[17:33:37.251]            // while-condition  =>  TRUE
[17:33:37.251]            // while "1"  (timeout="50000")
[17:33:37.251]            // while-condition  =>  TRUE
[17:33:37.251]            // while "1"  (timeout="50000")
[17:33:37.252]            // while-condition  =>  TRUE
[17:33:37.252]            // while "1"  (timeout="50000")
[17:33:37.252]            // while-condition  =>  TRUE
[17:33:37.252]            // while "1"  (timeout="50000")
[17:33:37.252]            // while-condition  =>  TRUE
[17:33:37.253]            // while "1"  (timeout="50000")
[17:33:37.253]            // while-condition  =>  TRUE
[17:33:37.253]            // while "1"  (timeout="50000")
[17:33:37.253]            // while-condition  =>  TRUE
[17:33:37.253]            // while "1"  (timeout="50000")
[17:33:37.253]            // while-condition  =>  TRUE
[17:33:37.254]            // while "1"  (timeout="50000")
[17:33:37.254]            // while-condition  =>  TRUE
[17:33:37.254]            // while "1"  (timeout="50000")
[17:33:37.254]            // while-condition  =>  TRUE
[17:33:37.254]            // while "1"  (timeout="50000")
[17:33:37.255]            // while-condition  =>  TRUE
[17:33:37.255]            // while "1"  (timeout="50000")
[17:33:37.255]            // while  =>  TIMEOUT
[17:33:37.255]            // end while "1"
[17:33:37.255]          </control>
[17:33:37.256]          <block atomic="false" info="">
[17:33:37.256]            DAP_SWJ_Pins(nReset, nReset, 0);
[17:33:37.267]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[17:33:37.270]          </block>
[17:33:37.271]          <control if="" while="1" timeout="10000" info="">
[17:33:37.271]            // while "1"  (timeout="10000")
[17:33:37.272]            // while-condition  =>  TRUE
[17:33:37.273]            // while "1"  (timeout="10000")
[17:33:37.273]            // while-condition  =>  TRUE
[17:33:37.274]            // while "1"  (timeout="10000")
[17:33:37.274]            // while-condition  =>  TRUE
[17:33:37.275]            // while "1"  (timeout="10000")
[17:33:37.275]            // while-condition  =>  TRUE
[17:33:37.276]            // while "1"  (timeout="10000")
[17:33:37.277]            // while-condition  =>  TRUE
[17:33:37.277]            // while "1"  (timeout="10000")
[17:33:37.278]            // while-condition  =>  TRUE
[17:33:37.278]            // while "1"  (timeout="10000")
[17:33:37.279]            // while-condition  =>  TRUE
[17:33:37.279]            // while "1"  (timeout="10000")
[17:33:37.280]            // while-condition  =>  TRUE
[17:33:37.280]            // while "1"  (timeout="10000")
[17:33:37.281]            // while-condition  =>  TRUE
[17:33:37.281]            // while "1"  (timeout="10000")
[17:33:37.282]            // while-condition  =>  TRUE
[17:33:37.282]            // while "1"  (timeout="10000")
[17:33:37.283]            // while-condition  =>  TRUE
[17:33:37.283]            // while "1"  (timeout="10000")
[17:33:37.284]            // while-condition  =>  TRUE
[17:33:37.284]            // while "1"  (timeout="10000")
[17:33:37.284]            // while-condition  =>  TRUE
[17:33:37.285]            // while "1"  (timeout="10000")
[17:33:37.286]            // while-condition  =>  TRUE
[17:33:37.286]            // while "1"  (timeout="10000")
[17:33:37.287]            // while  =>  TIMEOUT
[17:33:37.287]            // end while "1"
[17:33:37.287]          </control>
[17:33:37.288]          <block atomic="true" info="">
[17:33:37.289]            // ATOMIC SEQUENCE - EXECUTE
[17:33:37.291]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[17:33:37.291]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[17:33:37.292]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[17:33:37.292]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[17:33:37.292]            // ATOMIC SEQUENCE - DONE
[17:33:37.293]          </block>
[17:33:37.294]          <block atomic="false" info="">
[17:33:37.294]            __errorcontrol = 0x00000001;
[17:33:37.294]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[17:33:37.295]            ReadDP(0x0);
[17:33:37.296]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[17:33:37.297]            __errorcontrol = 0x00000000;
[17:33:37.297]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[17:33:37.297]          </block>
[17:33:37.298]        </sequence>
[17:33:37.298]      Sequence("DebugPortSetup");
[17:33:37.299]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[17:33:37.299]        </sequence>
[17:33:37.300]      Sequence("DebugPortStart");
[17:33:37.300]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[17:33:37.300]          <block atomic="false" info="">
[17:33:37.300]            __var SW_DP_ABORT  = 0x0;
[17:33:37.301]              // -> [SW_DP_ABORT <= 0x00000000]
[17:33:37.301]            __var DP_CTRL_STAT = 0x4;
[17:33:37.301]              // -> [DP_CTRL_STAT <= 0x00000004]
[17:33:37.302]            __var DP_SELECT    = 0x8;
[17:33:37.302]              // -> [DP_SELECT <= 0x00000008]
[17:33:37.302]            __var powered_down = 0;
[17:33:37.302]              // -> [powered_down <= 0x00000000]
[17:33:37.303]            WriteDP(DP_SELECT, 0x00000000);
[17:33:37.305]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[17:33:37.305]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[17:33:37.306]              // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[17:33:37.307]              // -> [powered_down <= 0x00000001]
[17:33:37.307]          </block>
[17:33:37.307]          <control if="powered_down" while="" timeout="0" info="">
[17:33:37.307]            // if-block "powered_down"
[17:33:37.307]              // =>  TRUE
[17:33:37.307]            <block atomic="false" info="">
[17:33:37.309]              WriteDP(DP_CTRL_STAT, 0x50000000);
[17:33:37.311]                // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[17:33:37.311]            </block>
[17:33:37.311]            <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[17:33:37.312]              // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[17:33:37.313]                // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[17:33:37.313]              // while-condition  =>  FALSE
[17:33:37.313]              // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[17:33:37.314]            </control>
[17:33:37.314]            <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[17:33:37.314]              // if-block "(__protocol & 0xFFFF) == 1"
[17:33:37.314]                // =>  FALSE
[17:33:37.314]              // skip if-block "(__protocol & 0xFFFF) == 1"
[17:33:37.315]            </control>
[17:33:37.315]            <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[17:33:37.316]              // if-block "(__protocol & 0xFFFF) == 2"
[17:33:37.316]                // =>  TRUE
[17:33:37.316]              <block atomic="false" info="">
[17:33:37.316]                WriteDP(DP_CTRL_STAT, 0x50000F00);
[17:33:37.318]                  // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[17:33:37.318]                WriteDP(SW_DP_ABORT, 0x0000001E);
[17:33:37.319]                  // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[17:33:37.320]              </block>
[17:33:37.320]              // end if-block "(__protocol & 0xFFFF) == 2"
[17:33:37.320]            </control>
[17:33:37.320]            // end if-block "powered_down"
[17:33:37.320]          </control>
[17:33:37.321]        </sequence>
[17:33:37.322]      Sequence("DebugCoreStart");
[17:33:37.322]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[17:33:37.322]          <block atomic="true" info="">
[17:33:37.323]            // ATOMIC SEQUENCE - EXECUTE
[17:33:37.324]            __var DP_R_IDCODE    = 0x0;
[17:33:37.324]              // -> [DP_R_IDCODE <= 0x00000000]
[17:33:37.325]            __var DP_W_ABORT    = 0x0;
[17:33:37.326]              // -> [DP_W_ABORT <= 0x00000000]
[17:33:37.326]            __var DP_CTRLSTAT = 0x4;
[17:33:37.326]              // -> [DP_CTRLSTAT <= 0x00000004]
[17:33:37.327]            __var DP_W_SELECT    = 0x8;
[17:33:37.328]              // -> [DP_W_SELECT <= 0x00000008]
[17:33:37.328]            __var AP_TAR		= 0x4;
[17:33:37.328]              // -> [AP_TAR <= 0x00000004]
[17:33:37.328]            __var AP_BD0		= 0x0;
[17:33:37.329]              // -> [AP_BD0 <= 0x00000000]
[17:33:37.329]            __var AP_BD1		= 0x4;
[17:33:37.329]              // -> [AP_BD1 <= 0x00000004]
[17:33:37.329]            __var AP_BD2		= 0x8;
[17:33:37.330]              // -> [AP_BD2 <= 0x00000008]
[17:33:37.330]            __var PCWithinFlash = 0;
[17:33:37.330]              // -> [PCWithinFlash <= 0x00000000]
[17:33:37.331]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[17:33:37.331]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[17:33:37.331]            // ATOMIC SEQUENCE - DONE
[17:33:37.331]          </block>
[17:33:37.331]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[17:33:37.332]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[17:33:37.336]              // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[17:33:37.336]            // while-condition  =>  FALSE
[17:33:37.336]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[17:33:37.336]          </control>
[17:33:37.336]          <block atomic="true" info="">
[17:33:37.337]            // ATOMIC SEQUENCE - EXECUTE
[17:33:37.340]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[17:33:37.340]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[17:33:37.340]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[17:33:37.340]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[17:33:37.340]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[17:33:37.340]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[17:33:37.341]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[17:33:37.341]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[17:33:37.341]            // ATOMIC SEQUENCE - DONE
[17:33:37.342]          </block>
[17:33:37.342]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[17:33:37.342]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:33:37.345]              // -> [ReadAP(0x00000000) => 0x01030003]   (__dp=0x00000000, __ap=0x00000000)
[17:33:37.345]            // while-condition  =>  FALSE
[17:33:37.345]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[17:33:37.345]          </control>
[17:33:37.345]          <block atomic="false" info="">
[17:33:37.346]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[17:33:37.347]              // -> [ReadAP(0x00000008) => 0x10000820]   (__dp=0x00000000, __ap=0x00000000)
[17:33:37.348]              // -> [PCWithinFlash <= 0x00000001]
[17:33:37.348]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[17:33:37.350]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[17:33:37.350]          </block>
[17:33:37.350]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[17:33:37.351]            // if-block "PCWithinFlash == 0"
[17:33:37.351]              // =>  FALSE
[17:33:37.351]            // skip if-block "PCWithinFlash == 0"
[17:33:37.351]          </control>
[17:33:37.352]        </sequence>
[17:33:37.352]    </block>
[17:33:37.352]  </sequence>
[17:33:37.352]  
[17:33:44.633]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[17:33:44.633]  
[17:33:44.634]  <debugvars>
[17:33:44.634]    // Pre-defined
[17:33:44.634]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:33:44.634]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:33:44.635]    __dp=0x00000000
[17:33:44.635]    __ap=0x00000000
[17:33:44.635]    __traceout=0x00000000      (Trace Disabled)
[17:33:44.635]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:33:44.636]    __FlashAddr=0x00000000
[17:33:44.636]    __FlashLen=0x00000000
[17:33:44.636]    __FlashArg=0x00000000
[17:33:44.636]    __FlashOp=0x00000000
[17:33:44.637]    __Result=0x00000000
[17:33:44.637]  </debugvars>
[17:33:44.637]  
[17:33:44.637]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[17:33:44.638]    <block atomic="false" info="">
[17:33:44.638]      __var nReset      = 0x80;
[17:33:44.638]        // -> [nReset <= 0x00000080]
[17:33:44.638]      DAP_SWJ_Pins(0x00, nReset, 0);
[17:33:44.640]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[17:33:44.640]    </block>
[17:33:44.640]    <control if="" while="1" timeout="50000" info="">
[17:33:44.641]      // while "1"  (timeout="50000")
[17:33:44.641]      // while-condition  =>  TRUE
[17:33:44.642]      // while "1"  (timeout="50000")
[17:33:44.642]      // while-condition  =>  TRUE
[17:33:44.642]      // while "1"  (timeout="50000")
[17:33:44.643]      // while-condition  =>  TRUE
[17:33:44.643]      // while "1"  (timeout="50000")
[17:33:44.643]      // while-condition  =>  TRUE
[17:33:44.643]      // while "1"  (timeout="50000")
[17:33:44.644]      // while-condition  =>  TRUE
[17:33:44.644]      // while "1"  (timeout="50000")
[17:33:44.644]      // while-condition  =>  TRUE
[17:33:44.644]      // while "1"  (timeout="50000")
[17:33:44.645]      // while-condition  =>  TRUE
[17:33:44.645]      // while "1"  (timeout="50000")
[17:33:44.645]      // while-condition  =>  TRUE
[17:33:44.645]      // while "1"  (timeout="50000")
[17:33:44.645]      // while-condition  =>  TRUE
[17:33:44.645]      // while "1"  (timeout="50000")
[17:33:44.646]      // while-condition  =>  TRUE
[17:33:44.646]      // while "1"  (timeout="50000")
[17:33:44.646]      // while-condition  =>  TRUE
[17:33:44.646]      // while "1"  (timeout="50000")
[17:33:44.646]      // while-condition  =>  TRUE
[17:33:44.647]      // while "1"  (timeout="50000")
[17:33:44.647]      // while-condition  =>  TRUE
[17:33:44.647]      // while "1"  (timeout="50000")
[17:33:44.647]      // while-condition  =>  TRUE
[17:33:44.648]      // while "1"  (timeout="50000")
[17:33:44.648]      // while-condition  =>  TRUE
[17:33:44.649]      // while "1"  (timeout="50000")
[17:33:44.649]      // while-condition  =>  TRUE
[17:33:44.649]      // while "1"  (timeout="50000")
[17:33:44.649]      // while-condition  =>  TRUE
[17:33:44.649]      // while "1"  (timeout="50000")
[17:33:44.650]      // while-condition  =>  TRUE
[17:33:44.650]      // while "1"  (timeout="50000")
[17:33:44.650]      // while-condition  =>  TRUE
[17:33:44.650]      // while "1"  (timeout="50000")
[17:33:44.651]      // while-condition  =>  TRUE
[17:33:44.651]      // while "1"  (timeout="50000")
[17:33:44.651]      // while-condition  =>  TRUE
[17:33:44.651]      // while "1"  (timeout="50000")
[17:33:44.651]      // while-condition  =>  TRUE
[17:33:44.652]      // while "1"  (timeout="50000")
[17:33:44.652]      // while-condition  =>  TRUE
[17:33:44.652]      // while "1"  (timeout="50000")
[17:33:44.652]      // while-condition  =>  TRUE
[17:33:44.652]      // while "1"  (timeout="50000")
[17:33:44.653]      // while-condition  =>  TRUE
[17:33:44.653]      // while "1"  (timeout="50000")
[17:33:44.653]      // while-condition  =>  TRUE
[17:33:44.653]      // while "1"  (timeout="50000")
[17:33:44.653]      // while-condition  =>  TRUE
[17:33:44.653]      // while "1"  (timeout="50000")
[17:33:44.654]      // while-condition  =>  TRUE
[17:33:44.654]      // while "1"  (timeout="50000")
[17:33:44.654]      // while-condition  =>  TRUE
[17:33:44.655]      // while "1"  (timeout="50000")
[17:33:44.655]      // while-condition  =>  TRUE
[17:33:44.655]      // while "1"  (timeout="50000")
[17:33:44.655]      // while-condition  =>  TRUE
[17:33:44.655]      // while "1"  (timeout="50000")
[17:33:44.655]      // while-condition  =>  TRUE
[17:33:44.655]      // while "1"  (timeout="50000")
[17:33:44.656]      // while-condition  =>  TRUE
[17:33:44.656]      // while "1"  (timeout="50000")
[17:33:44.656]      // while-condition  =>  TRUE
[17:33:44.656]      // while "1"  (timeout="50000")
[17:33:44.657]      // while-condition  =>  TRUE
[17:33:44.657]      // while "1"  (timeout="50000")
[17:33:44.657]      // while-condition  =>  TRUE
[17:33:44.657]      // while "1"  (timeout="50000")
[17:33:44.658]      // while-condition  =>  TRUE
[17:33:44.658]      // while "1"  (timeout="50000")
[17:33:44.658]      // while-condition  =>  TRUE
[17:33:44.659]      // while "1"  (timeout="50000")
[17:33:44.659]      // while-condition  =>  TRUE
[17:33:44.659]      // while "1"  (timeout="50000")
[17:33:44.659]      // while-condition  =>  TRUE
[17:33:44.660]      // while "1"  (timeout="50000")
[17:33:44.660]      // while-condition  =>  TRUE
[17:33:44.660]      // while "1"  (timeout="50000")
[17:33:44.660]      // while-condition  =>  TRUE
[17:33:44.660]      // while "1"  (timeout="50000")
[17:33:44.660]      // while-condition  =>  TRUE
[17:33:44.661]      // while "1"  (timeout="50000")
[17:33:44.661]      // while-condition  =>  TRUE
[17:33:44.661]      // while "1"  (timeout="50000")
[17:33:44.661]      // while-condition  =>  TRUE
[17:33:44.662]      // while "1"  (timeout="50000")
[17:33:44.662]      // while-condition  =>  TRUE
[17:33:44.662]      // while "1"  (timeout="50000")
[17:33:44.662]      // while-condition  =>  TRUE
[17:33:44.662]      // while "1"  (timeout="50000")
[17:33:44.663]      // while-condition  =>  TRUE
[17:33:44.663]      // while "1"  (timeout="50000")
[17:33:44.663]      // while-condition  =>  TRUE
[17:33:44.663]      // while "1"  (timeout="50000")
[17:33:44.664]      // while-condition  =>  TRUE
[17:33:44.664]      // while "1"  (timeout="50000")
[17:33:44.664]      // while-condition  =>  TRUE
[17:33:44.664]      // while "1"  (timeout="50000")
[17:33:44.664]      // while-condition  =>  TRUE
[17:33:44.665]      // while "1"  (timeout="50000")
[17:33:44.665]      // while-condition  =>  TRUE
[17:33:44.665]      // while "1"  (timeout="50000")
[17:33:44.665]      // while-condition  =>  TRUE
[17:33:44.665]      // while "1"  (timeout="50000")
[17:33:44.665]      // while-condition  =>  TRUE
[17:33:44.666]      // while "1"  (timeout="50000")
[17:33:44.666]      // while-condition  =>  TRUE
[17:33:44.666]      // while "1"  (timeout="50000")
[17:33:44.666]      // while-condition  =>  TRUE
[17:33:44.667]      // while "1"  (timeout="50000")
[17:33:44.667]      // while-condition  =>  TRUE
[17:33:44.668]      // while "1"  (timeout="50000")
[17:33:44.668]      // while-condition  =>  TRUE
[17:33:44.668]      // while "1"  (timeout="50000")
[17:33:44.668]      // while-condition  =>  TRUE
[17:33:44.668]      // while "1"  (timeout="50000")
[17:33:44.669]      // while-condition  =>  TRUE
[17:33:44.669]      // while "1"  (timeout="50000")
[17:33:44.669]      // while-condition  =>  TRUE
[17:33:44.669]      // while "1"  (timeout="50000")
[17:33:44.670]      // while-condition  =>  TRUE
[17:33:44.670]      // while "1"  (timeout="50000")
[17:33:44.670]      // while-condition  =>  TRUE
[17:33:44.670]      // while "1"  (timeout="50000")
[17:33:44.670]      // while-condition  =>  TRUE
[17:33:44.671]      // while "1"  (timeout="50000")
[17:33:44.671]      // while-condition  =>  TRUE
[17:33:44.671]      // while "1"  (timeout="50000")
[17:33:44.671]      // while-condition  =>  TRUE
[17:33:44.672]      // while "1"  (timeout="50000")
[17:33:44.672]      // while-condition  =>  TRUE
[17:33:44.672]      // while "1"  (timeout="50000")
[17:33:44.672]      // while-condition  =>  TRUE
[17:33:44.672]      // while "1"  (timeout="50000")
[17:33:44.672]      // while-condition  =>  TRUE
[17:33:44.672]      // while "1"  (timeout="50000")
[17:33:44.672]      // while-condition  =>  TRUE
[17:33:44.673]      // while "1"  (timeout="50000")
[17:33:44.674]      // while-condition  =>  TRUE
[17:33:44.674]      // while "1"  (timeout="50000")
[17:33:44.674]      // while-condition  =>  TRUE
[17:33:44.674]      // while "1"  (timeout="50000")
[17:33:44.674]      // while-condition  =>  TRUE
[17:33:44.674]      // while "1"  (timeout="50000")
[17:33:44.675]      // while-condition  =>  TRUE
[17:33:44.675]      // while "1"  (timeout="50000")
[17:33:44.675]      // while-condition  =>  TRUE
[17:33:44.675]      // while "1"  (timeout="50000")
[17:33:44.675]      // while-condition  =>  TRUE
[17:33:44.675]      // while "1"  (timeout="50000")
[17:33:44.676]      // while-condition  =>  TRUE
[17:33:44.676]      // while "1"  (timeout="50000")
[17:33:44.676]      // while-condition  =>  TRUE
[17:33:44.676]      // while "1"  (timeout="50000")
[17:33:44.677]      // while-condition  =>  TRUE
[17:33:44.677]      // while "1"  (timeout="50000")
[17:33:44.677]      // while-condition  =>  TRUE
[17:33:44.677]      // while "1"  (timeout="50000")
[17:33:44.677]      // while-condition  =>  TRUE
[17:33:44.678]      // while "1"  (timeout="50000")
[17:33:44.678]      // while-condition  =>  TRUE
[17:33:44.678]      // while "1"  (timeout="50000")
[17:33:44.678]      // while-condition  =>  TRUE
[17:33:44.679]      // while "1"  (timeout="50000")
[17:33:44.679]      // while-condition  =>  TRUE
[17:33:44.679]      // while "1"  (timeout="50000")
[17:33:44.679]      // while-condition  =>  TRUE
[17:33:44.680]      // while "1"  (timeout="50000")
[17:33:44.680]      // while-condition  =>  TRUE
[17:33:44.681]      // while "1"  (timeout="50000")
[17:33:44.681]      // while-condition  =>  TRUE
[17:33:44.681]      // while "1"  (timeout="50000")
[17:33:44.681]      // while-condition  =>  TRUE
[17:33:44.682]      // while "1"  (timeout="50000")
[17:33:44.682]      // while-condition  =>  TRUE
[17:33:44.682]      // while "1"  (timeout="50000")
[17:33:44.682]      // while-condition  =>  TRUE
[17:33:44.682]      // while "1"  (timeout="50000")
[17:33:44.683]      // while-condition  =>  TRUE
[17:33:44.683]      // while "1"  (timeout="50000")
[17:33:44.683]      // while-condition  =>  TRUE
[17:33:44.683]      // while "1"  (timeout="50000")
[17:33:44.683]      // while-condition  =>  TRUE
[17:33:44.684]      // while "1"  (timeout="50000")
[17:33:44.684]      // while-condition  =>  TRUE
[17:33:44.684]      // while "1"  (timeout="50000")
[17:33:44.684]      // while-condition  =>  TRUE
[17:33:44.684]      // while "1"  (timeout="50000")
[17:33:44.684]      // while-condition  =>  TRUE
[17:33:44.685]      // while "1"  (timeout="50000")
[17:33:44.685]      // while-condition  =>  TRUE
[17:33:44.685]      // while "1"  (timeout="50000")
[17:33:44.685]      // while-condition  =>  TRUE
[17:33:44.685]      // while "1"  (timeout="50000")
[17:33:44.685]      // while-condition  =>  TRUE
[17:33:44.686]      // while "1"  (timeout="50000")
[17:33:44.686]      // while-condition  =>  TRUE
[17:33:44.686]      // while "1"  (timeout="50000")
[17:33:44.686]      // while-condition  =>  TRUE
[17:33:44.686]      // while "1"  (timeout="50000")
[17:33:44.687]      // while-condition  =>  TRUE
[17:33:44.688]      // while "1"  (timeout="50000")
[17:33:44.688]      // while-condition  =>  TRUE
[17:33:44.688]      // while "1"  (timeout="50000")
[17:33:44.688]      // while-condition  =>  TRUE
[17:33:44.688]      // while "1"  (timeout="50000")
[17:33:44.689]      // while-condition  =>  TRUE
[17:33:44.689]      // while "1"  (timeout="50000")
[17:33:44.689]      // while-condition  =>  TRUE
[17:33:44.689]      // while "1"  (timeout="50000")
[17:33:44.689]      // while-condition  =>  TRUE
[17:33:44.690]      // while "1"  (timeout="50000")
[17:33:44.690]      // while-condition  =>  TRUE
[17:33:44.690]      // while "1"  (timeout="50000")
[17:33:44.690]      // while-condition  =>  TRUE
[17:33:44.690]      // while "1"  (timeout="50000")
[17:33:44.691]      // while-condition  =>  TRUE
[17:33:44.691]      // while "1"  (timeout="50000")
[17:33:44.691]      // while-condition  =>  TRUE
[17:33:44.691]      // while "1"  (timeout="50000")
[17:33:44.692]      // while-condition  =>  TRUE
[17:33:44.692]      // while "1"  (timeout="50000")
[17:33:44.692]      // while  =>  TIMEOUT
[17:33:44.692]      // end while "1"
[17:33:44.692]    </control>
[17:33:44.692]    <block atomic="false" info="">
[17:33:44.692]      DAP_SWJ_Pins(nReset, nReset, 0);
[17:33:44.704]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[17:33:44.704]    </block>
[17:33:44.704]  </sequence>
[17:33:44.704]  
[17:38:42.142]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[17:38:42.142]  
[17:38:42.143]  <debugvars>
[17:38:42.143]    // Pre-defined
[17:38:42.144]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:38:42.144]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[17:38:42.144]    __dp=0x00000000
[17:38:42.145]    __ap=0x00000000
[17:38:42.145]    __traceout=0x00000000      (Trace Disabled)
[17:38:42.145]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:38:42.146]    __FlashAddr=0x00000000
[17:38:42.146]    __FlashLen=0x00000000
[17:38:42.147]    __FlashArg=0x00000000
[17:38:42.147]    __FlashOp=0x00000000
[17:38:42.147]    __Result=0x00000000
[17:38:42.148]  </debugvars>
[17:38:42.148]  
[17:38:42.148]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[17:38:42.149]    <block atomic="false" info="">
[17:38:42.149]      __var nReset      = 0x80;
[17:38:42.149]        // -> [nReset <= 0x00000080]
[17:38:42.149]      DAP_SWJ_Pins(0x00, nReset, 0);
[17:38:42.151]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[17:38:42.151]    </block>
[17:38:42.152]    <control if="" while="1" timeout="50000" info="">
[17:38:42.152]      // while "1"  (timeout="50000")
[17:38:42.152]      // while-condition  =>  TRUE
[17:38:42.153]      // while "1"  (timeout="50000")
[17:38:42.153]      // while-condition  =>  TRUE
[17:38:42.153]      // while "1"  (timeout="50000")
[17:38:42.154]      // while-condition  =>  TRUE
[17:38:42.154]      // while "1"  (timeout="50000")
[17:38:42.154]      // while-condition  =>  TRUE
[17:38:42.155]      // while "1"  (timeout="50000")
[17:38:42.155]      // while-condition  =>  TRUE
[17:38:42.155]      // while "1"  (timeout="50000")
[17:38:42.155]      // while-condition  =>  TRUE
[17:38:42.156]      // while "1"  (timeout="50000")
[17:38:42.156]      // while-condition  =>  TRUE
[17:38:42.156]      // while "1"  (timeout="50000")
[17:38:42.157]      // while-condition  =>  TRUE
[17:38:42.157]      // while "1"  (timeout="50000")
[17:38:42.157]      // while-condition  =>  TRUE
[17:38:42.158]      // while "1"  (timeout="50000")
[17:38:42.158]      // while-condition  =>  TRUE
[17:38:42.158]      // while "1"  (timeout="50000")
[17:38:42.158]      // while-condition  =>  TRUE
[17:38:42.159]      // while "1"  (timeout="50000")
[17:38:42.159]      // while-condition  =>  TRUE
[17:38:42.159]      // while "1"  (timeout="50000")
[17:38:42.159]      // while-condition  =>  TRUE
[17:38:42.160]      // while "1"  (timeout="50000")
[17:38:42.160]      // while-condition  =>  TRUE
[17:38:42.160]      // while "1"  (timeout="50000")
[17:38:42.160]      // while-condition  =>  TRUE
[17:38:42.160]      // while "1"  (timeout="50000")
[17:38:42.161]      // while-condition  =>  TRUE
[17:38:42.161]      // while "1"  (timeout="50000")
[17:38:42.161]      // while-condition  =>  TRUE
[17:38:42.161]      // while "1"  (timeout="50000")
[17:38:42.161]      // while-condition  =>  TRUE
[17:38:42.162]      // while "1"  (timeout="50000")
[17:38:42.162]      // while-condition  =>  TRUE
[17:38:42.162]      // while "1"  (timeout="50000")
[17:38:42.162]      // while-condition  =>  TRUE
[17:38:42.162]      // while "1"  (timeout="50000")
[17:38:42.163]      // while-condition  =>  TRUE
[17:38:42.163]      // while "1"  (timeout="50000")
[17:38:42.163]      // while-condition  =>  TRUE
[17:38:42.163]      // while "1"  (timeout="50000")
[17:38:42.163]      // while-condition  =>  TRUE
[17:38:42.164]      // while "1"  (timeout="50000")
[17:38:42.164]      // while-condition  =>  TRUE
[17:38:42.164]      // while "1"  (timeout="50000")
[17:38:42.164]      // while-condition  =>  TRUE
[17:38:42.164]      // while "1"  (timeout="50000")
[17:38:42.165]      // while-condition  =>  TRUE
[17:38:42.165]      // while "1"  (timeout="50000")
[17:38:42.165]      // while-condition  =>  TRUE
[17:38:42.165]      // while "1"  (timeout="50000")
[17:38:42.165]      // while-condition  =>  TRUE
[17:38:42.166]      // while "1"  (timeout="50000")
[17:38:42.166]      // while-condition  =>  TRUE
[17:38:42.166]      // while "1"  (timeout="50000")
[17:38:42.166]      // while-condition  =>  TRUE
[17:38:42.166]      // while "1"  (timeout="50000")
[17:38:42.167]      // while-condition  =>  TRUE
[17:38:42.167]      // while "1"  (timeout="50000")
[17:38:42.167]      // while-condition  =>  TRUE
[17:38:42.167]      // while "1"  (timeout="50000")
[17:38:42.168]      // while-condition  =>  TRUE
[17:38:42.168]      // while "1"  (timeout="50000")
[17:38:42.168]      // while-condition  =>  TRUE
[17:38:42.168]      // while "1"  (timeout="50000")
[17:38:42.168]      // while-condition  =>  TRUE
[17:38:42.169]      // while "1"  (timeout="50000")
[17:38:42.169]      // while-condition  =>  TRUE
[17:38:42.169]      // while "1"  (timeout="50000")
[17:38:42.169]      // while-condition  =>  TRUE
[17:38:42.169]      // while "1"  (timeout="50000")
[17:38:42.170]      // while-condition  =>  TRUE
[17:38:42.170]      // while "1"  (timeout="50000")
[17:38:42.170]      // while-condition  =>  TRUE
[17:38:42.170]      // while "1"  (timeout="50000")
[17:38:42.170]      // while-condition  =>  TRUE
[17:38:42.170]      // while "1"  (timeout="50000")
[17:38:42.171]      // while-condition  =>  TRUE
[17:38:42.171]      // while "1"  (timeout="50000")
[17:38:42.171]      // while-condition  =>  TRUE
[17:38:42.171]      // while "1"  (timeout="50000")
[17:38:42.171]      // while-condition  =>  TRUE
[17:38:42.172]      // while "1"  (timeout="50000")
[17:38:42.172]      // while-condition  =>  TRUE
[17:38:42.172]      // while "1"  (timeout="50000")
[17:38:42.172]      // while-condition  =>  TRUE
[17:38:42.173]      // while "1"  (timeout="50000")
[17:38:42.173]      // while-condition  =>  TRUE
[17:38:42.173]      // while "1"  (timeout="50000")
[17:38:42.173]      // while-condition  =>  TRUE
[17:38:42.173]      // while "1"  (timeout="50000")
[17:38:42.174]      // while-condition  =>  TRUE
[17:38:42.174]      // while "1"  (timeout="50000")
[17:38:42.174]      // while-condition  =>  TRUE
[17:38:42.174]      // while "1"  (timeout="50000")
[17:38:42.175]      // while-condition  =>  TRUE
[17:38:42.175]      // while "1"  (timeout="50000")
[17:38:42.175]      // while-condition  =>  TRUE
[17:38:42.175]      // while "1"  (timeout="50000")
[17:38:42.176]      // while-condition  =>  TRUE
[17:38:42.176]      // while "1"  (timeout="50000")
[17:38:42.176]      // while-condition  =>  TRUE
[17:38:42.176]      // while "1"  (timeout="50000")
[17:38:42.176]      // while-condition  =>  TRUE
[17:38:42.177]      // while "1"  (timeout="50000")
[17:38:42.177]      // while-condition  =>  TRUE
[17:38:42.177]      // while "1"  (timeout="50000")
[17:38:42.177]      // while-condition  =>  TRUE
[17:38:42.178]      // while "1"  (timeout="50000")
[17:38:42.178]      // while-condition  =>  TRUE
[17:38:42.178]      // while "1"  (timeout="50000")
[17:38:42.178]      // while-condition  =>  TRUE
[17:38:42.178]      // while "1"  (timeout="50000")
[17:38:42.179]      // while-condition  =>  TRUE
[17:38:42.179]      // while "1"  (timeout="50000")
[17:38:42.179]      // while-condition  =>  TRUE
[17:38:42.179]      // while "1"  (timeout="50000")
[17:38:42.179]      // while-condition  =>  TRUE
[17:38:42.180]      // while "1"  (timeout="50000")
[17:38:42.180]      // while-condition  =>  TRUE
[17:38:42.180]      // while "1"  (timeout="50000")
[17:38:42.180]      // while-condition  =>  TRUE
[17:38:42.181]      // while "1"  (timeout="50000")
[17:38:42.181]      // while-condition  =>  TRUE
[17:38:42.181]      // while "1"  (timeout="50000")
[17:38:42.182]      // while-condition  =>  TRUE
[17:38:42.182]      // while "1"  (timeout="50000")
[17:38:42.182]      // while-condition  =>  TRUE
[17:38:42.182]      // while "1"  (timeout="50000")
[17:38:42.183]      // while-condition  =>  TRUE
[17:38:42.183]      // while "1"  (timeout="50000")
[17:38:42.184]      // while-condition  =>  TRUE
[17:38:42.184]      // while "1"  (timeout="50000")
[17:38:42.185]      // while-condition  =>  TRUE
[17:38:42.185]      // while "1"  (timeout="50000")
[17:38:42.185]      // while-condition  =>  TRUE
[17:38:42.185]      // while "1"  (timeout="50000")
[17:38:42.186]      // while-condition  =>  TRUE
[17:38:42.186]      // while "1"  (timeout="50000")
[17:38:42.186]      // while-condition  =>  TRUE
[17:38:42.186]      // while "1"  (timeout="50000")
[17:38:42.187]      // while-condition  =>  TRUE
[17:38:42.187]      // while "1"  (timeout="50000")
[17:38:42.187]      // while-condition  =>  TRUE
[17:38:42.187]      // while "1"  (timeout="50000")
[17:38:42.188]      // while-condition  =>  TRUE
[17:38:42.188]      // while "1"  (timeout="50000")
[17:38:42.188]      // while-condition  =>  TRUE
[17:38:42.189]      // while "1"  (timeout="50000")
[17:38:42.189]      // while-condition  =>  TRUE
[17:38:42.189]      // while "1"  (timeout="50000")
[17:38:42.189]      // while-condition  =>  TRUE
[17:38:42.190]      // while "1"  (timeout="50000")
[17:38:42.190]      // while-condition  =>  TRUE
[17:38:42.190]      // while "1"  (timeout="50000")
[17:38:42.190]      // while-condition  =>  TRUE
[17:38:42.190]      // while "1"  (timeout="50000")
[17:38:42.191]      // while-condition  =>  TRUE
[17:38:42.191]      // while "1"  (timeout="50000")
[17:38:42.191]      // while-condition  =>  TRUE
[17:38:42.191]      // while "1"  (timeout="50000")
[17:38:42.192]      // while-condition  =>  TRUE
[17:38:42.192]      // while "1"  (timeout="50000")
[17:38:42.192]      // while-condition  =>  TRUE
[17:38:42.192]      // while "1"  (timeout="50000")
[17:38:42.192]      // while-condition  =>  TRUE
[17:38:42.193]      // while "1"  (timeout="50000")
[17:38:42.193]      // while-condition  =>  TRUE
[17:38:42.193]      // while "1"  (timeout="50000")
[17:38:42.193]      // while-condition  =>  TRUE
[17:38:42.193]      // while "1"  (timeout="50000")
[17:38:42.194]      // while-condition  =>  TRUE
[17:38:42.194]      // while "1"  (timeout="50000")
[17:38:42.194]      // while-condition  =>  TRUE
[17:38:42.194]      // while "1"  (timeout="50000")
[17:38:42.194]      // while-condition  =>  TRUE
[17:38:42.195]      // while "1"  (timeout="50000")
[17:38:42.195]      // while-condition  =>  TRUE
[17:38:42.195]      // while "1"  (timeout="50000")
[17:38:42.195]      // while-condition  =>  TRUE
[17:38:42.195]      // while "1"  (timeout="50000")
[17:38:42.196]      // while-condition  =>  TRUE
[17:38:42.196]      // while "1"  (timeout="50000")
[17:38:42.196]      // while-condition  =>  TRUE
[17:38:42.196]      // while "1"  (timeout="50000")
[17:38:42.196]      // while-condition  =>  TRUE
[17:38:42.197]      // while "1"  (timeout="50000")
[17:38:42.197]      // while-condition  =>  TRUE
[17:38:42.197]      // while "1"  (timeout="50000")
[17:38:42.197]      // while-condition  =>  TRUE
[17:38:42.197]      // while "1"  (timeout="50000")
[17:38:42.198]      // while-condition  =>  TRUE
[17:38:42.198]      // while "1"  (timeout="50000")
[17:38:42.198]      // while-condition  =>  TRUE
[17:38:42.198]      // while "1"  (timeout="50000")
[17:38:42.198]      // while-condition  =>  TRUE
[17:38:42.199]      // while "1"  (timeout="50000")
[17:38:42.199]      // while-condition  =>  TRUE
[17:38:42.199]      // while "1"  (timeout="50000")
[17:38:42.199]      // while-condition  =>  TRUE
[17:38:42.199]      // while "1"  (timeout="50000")
[17:38:42.200]      // while-condition  =>  TRUE
[17:38:42.200]      // while "1"  (timeout="50000")
[17:38:42.200]      // while-condition  =>  TRUE
[17:38:42.200]      // while "1"  (timeout="50000")
[17:38:42.200]      // while-condition  =>  TRUE
[17:38:42.201]      // while "1"  (timeout="50000")
[17:38:42.201]      // while-condition  =>  TRUE
[17:38:42.201]      // while "1"  (timeout="50000")
[17:38:42.201]      // while-condition  =>  TRUE
[17:38:42.201]      // while "1"  (timeout="50000")
[17:38:42.202]      // while-condition  =>  TRUE
[17:38:42.202]      // while "1"  (timeout="50000")
[17:38:42.202]      // while-condition  =>  TRUE
[17:38:42.202]      // while "1"  (timeout="50000")
[17:38:42.203]      // while-condition  =>  TRUE
[17:38:42.203]      // while "1"  (timeout="50000")
[17:38:42.203]      // while-condition  =>  TRUE
[17:38:42.203]      // while "1"  (timeout="50000")
[17:38:42.203]      // while-condition  =>  TRUE
[17:38:42.204]      // while "1"  (timeout="50000")
[17:38:42.204]      // while-condition  =>  TRUE
[17:38:42.204]      // while "1"  (timeout="50000")
[17:38:42.204]      // while-condition  =>  TRUE
[17:38:42.205]      // while "1"  (timeout="50000")
[17:38:42.205]      // while-condition  =>  TRUE
[17:38:42.205]      // while "1"  (timeout="50000")
[17:38:42.205]      // while-condition  =>  TRUE
[17:38:42.206]      // while "1"  (timeout="50000")
[17:38:42.206]      // while-condition  =>  TRUE
[17:38:42.206]      // while "1"  (timeout="50000")
[17:38:42.206]      // while-condition  =>  TRUE
[17:38:42.206]      // while "1"  (timeout="50000")
[17:38:42.207]      // while-condition  =>  TRUE
[17:38:42.207]      // while "1"  (timeout="50000")
[17:38:42.207]      // while-condition  =>  TRUE
[17:38:42.207]      // while "1"  (timeout="50000")
[17:38:42.208]      // while-condition  =>  TRUE
[17:38:42.208]      // while "1"  (timeout="50000")
[17:38:42.208]      // while  =>  TIMEOUT
[17:38:42.208]      // end while "1"
[17:38:42.209]    </control>
[17:38:42.209]    <block atomic="false" info="">
[17:38:42.209]      DAP_SWJ_Pins(nReset, nReset, 0);
[17:38:42.220]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[17:38:42.230]    </block>
[17:38:42.230]    <control if="" while="1" timeout="10000" info="">
[17:38:42.231]      // while "1"  (timeout="10000")
[17:38:42.231]      // while-condition  =>  TRUE
[17:38:42.232]      // while "1"  (timeout="10000")
[17:38:42.232]      // while-condition  =>  TRUE
[17:38:42.232]      // while "1"  (timeout="10000")
[17:38:42.233]      // while-condition  =>  TRUE
[17:38:42.233]      // while "1"  (timeout="10000")
[17:38:42.234]      // while-condition  =>  TRUE
[17:38:42.234]      // while "1"  (timeout="10000")
[17:38:42.235]      // while-condition  =>  TRUE
[17:38:42.235]      // while "1"  (timeout="10000")
[17:38:42.235]      // while-condition  =>  TRUE
[17:38:42.236]      // while "1"  (timeout="10000")
[17:38:42.236]      // while-condition  =>  TRUE
[17:38:42.236]      // while "1"  (timeout="10000")
[17:38:42.237]      // while-condition  =>  TRUE
[17:38:42.237]      // while "1"  (timeout="10000")
[17:38:42.237]      // while-condition  =>  TRUE
[17:38:42.237]      // while "1"  (timeout="10000")
[17:38:42.238]      // while-condition  =>  TRUE
[17:38:42.238]      // while "1"  (timeout="10000")
[17:38:42.238]      // while-condition  =>  TRUE
[17:38:42.239]      // while "1"  (timeout="10000")
[17:38:42.239]      // while-condition  =>  TRUE
[17:38:42.239]      // while "1"  (timeout="10000")
[17:38:42.240]      // while-condition  =>  TRUE
[17:38:42.240]      // while "1"  (timeout="10000")
[17:38:42.240]      // while  =>  TIMEOUT
[17:38:42.241]      // end while "1"
[17:38:42.241]    </control>
[17:38:42.241]    <block atomic="true" info="">
[17:38:42.242]      // ATOMIC SEQUENCE - EXECUTE
[17:38:42.243]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[17:38:42.243]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[17:38:42.244]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[17:38:42.244]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[17:38:42.244]      // ATOMIC SEQUENCE - DONE
[17:38:42.245]    </block>
[17:38:42.245]    <block atomic="false" info="">
[17:38:42.245]      __errorcontrol = 0x00000001;
[17:38:42.246]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[17:38:42.246]      ReadDP(0x0);
[17:38:42.247]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[17:38:42.248]      __errorcontrol = 0x00000000;
[17:38:42.248]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[17:38:42.248]    </block>
[17:38:42.248]  </sequence>
[17:38:42.249]  
[17:38:42.249]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[17:38:42.249]  
[17:38:42.249]  <debugvars>
[17:38:42.250]    // Pre-defined
[17:38:42.250]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:38:42.250]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:38:42.250]    __dp=0x00000000
[17:38:42.251]    __ap=0x00000000
[17:38:42.251]    __traceout=0x00000000      (Trace Disabled)
[17:38:42.251]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:38:42.252]    __FlashAddr=0x00000000
[17:38:42.252]    __FlashLen=0x00000000
[17:38:42.252]    __FlashArg=0x00000000
[17:38:42.252]    __FlashOp=0x00000000
[17:38:42.253]    __Result=0x00000000
[17:38:42.253]  </debugvars>
[17:38:42.253]  
[17:38:42.253]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[17:38:42.253]  </sequence>
[17:38:42.254]  
[17:38:42.256]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[17:38:42.256]  
[17:38:42.257]  <debugvars>
[17:38:42.257]    // Pre-defined
[17:38:42.257]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:38:42.257]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:38:42.258]    __dp=0x00000000
[17:38:42.258]    __ap=0x00000000
[17:38:42.258]    __traceout=0x00000000      (Trace Disabled)
[17:38:42.258]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:38:42.259]    __FlashAddr=0x00000000
[17:38:42.259]    __FlashLen=0x00000000
[17:38:42.259]    __FlashArg=0x00000000
[17:38:42.259]    __FlashOp=0x00000000
[17:38:42.259]    __Result=0x00000000
[17:38:42.260]  </debugvars>
[17:38:42.260]  
[17:38:42.260]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[17:38:42.260]    <block atomic="false" info="">
[17:38:42.260]      __var SW_DP_ABORT  = 0x0;
[17:38:42.261]        // -> [SW_DP_ABORT <= 0x00000000]
[17:38:42.261]      __var DP_CTRL_STAT = 0x4;
[17:38:42.261]        // -> [DP_CTRL_STAT <= 0x00000004]
[17:38:42.261]      __var DP_SELECT    = 0x8;
[17:38:42.261]        // -> [DP_SELECT <= 0x00000008]
[17:38:42.262]      __var powered_down = 0;
[17:38:42.262]        // -> [powered_down <= 0x00000000]
[17:38:42.262]      WriteDP(DP_SELECT, 0x00000000);
[17:38:42.263]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[17:38:42.263]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[17:38:42.264]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[17:38:42.265]        // -> [powered_down <= 0x00000001]
[17:38:42.265]    </block>
[17:38:42.265]    <control if="powered_down" while="" timeout="0" info="">
[17:38:42.265]      // if-block "powered_down"
[17:38:42.265]        // =>  TRUE
[17:38:42.266]      <block atomic="false" info="">
[17:38:42.266]        WriteDP(DP_CTRL_STAT, 0x50000000);
[17:38:42.273]  
[17:38:42.273]  !!! E310 : Debug access failed - cannot write value 0x50000000 to DP register 0x04
[17:38:42.273]  
[17:38:42.274]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[17:38:42.274]      </block>
[17:38:42.274]      // end if-block "powered_down"
[17:38:42.275]    </control>
[17:38:42.275]  </sequence>
[17:38:42.275]  
[17:38:43.656]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[17:38:43.656]  
[17:38:43.657]  <debugvars>
[17:38:43.657]    // Pre-defined
[17:38:43.657]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:38:43.658]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:38:43.658]    __dp=0x00000000
[17:38:43.658]    __ap=0x00000000
[17:38:43.659]    __traceout=0x00000000      (Trace Disabled)
[17:38:43.659]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:38:43.659]    __FlashAddr=0x00000000
[17:38:43.659]    __FlashLen=0x00000000
[17:38:43.660]    __FlashArg=0x00000000
[17:38:43.660]    __FlashOp=0x00000000
[17:38:43.660]    __Result=0x00000000
[17:38:43.660]  </debugvars>
[17:38:43.661]  
[17:38:43.661]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[17:38:43.662]    <block atomic="false" info="">
[17:38:43.662]      __var nReset      = 0x80;
[17:38:43.662]        // -> [nReset <= 0x00000080]
[17:38:43.662]      DAP_SWJ_Pins(0x00, nReset, 0);
[17:38:43.663]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[17:38:43.664]    </block>
[17:38:43.664]    <control if="" while="1" timeout="50000" info="">
[17:38:43.664]      // while "1"  (timeout="50000")
[17:38:43.664]      // while-condition  =>  TRUE
[17:38:43.665]      // while "1"  (timeout="50000")
[17:38:43.665]      // while-condition  =>  TRUE
[17:38:43.665]      // while "1"  (timeout="50000")
[17:38:43.665]      // while-condition  =>  TRUE
[17:38:43.665]      // while "1"  (timeout="50000")
[17:38:43.665]      // while-condition  =>  TRUE
[17:38:43.666]      // while "1"  (timeout="50000")
[17:38:43.666]      // while-condition  =>  TRUE
[17:38:43.666]      // while "1"  (timeout="50000")
[17:38:43.666]      // while-condition  =>  TRUE
[17:38:43.666]      // while "1"  (timeout="50000")
[17:38:43.667]      // while-condition  =>  TRUE
[17:38:43.667]      // while "1"  (timeout="50000")
[17:38:43.667]      // while-condition  =>  TRUE
[17:38:43.667]      // while "1"  (timeout="50000")
[17:38:43.667]      // while-condition  =>  TRUE
[17:38:43.668]      // while "1"  (timeout="50000")
[17:38:43.668]      // while-condition  =>  TRUE
[17:38:43.668]      // while "1"  (timeout="50000")
[17:38:43.669]      // while-condition  =>  TRUE
[17:38:43.669]      // while "1"  (timeout="50000")
[17:38:43.669]      // while-condition  =>  TRUE
[17:38:43.669]      // while "1"  (timeout="50000")
[17:38:43.669]      // while-condition  =>  TRUE
[17:38:43.670]      // while "1"  (timeout="50000")
[17:38:43.670]      // while-condition  =>  TRUE
[17:38:43.670]      // while "1"  (timeout="50000")
[17:38:43.670]      // while-condition  =>  TRUE
[17:38:43.670]      // while "1"  (timeout="50000")
[17:38:43.670]      // while-condition  =>  TRUE
[17:38:43.671]      // while "1"  (timeout="50000")
[17:38:43.671]      // while-condition  =>  TRUE
[17:38:43.671]      // while "1"  (timeout="50000")
[17:38:43.671]      // while-condition  =>  TRUE
[17:38:43.671]      // while "1"  (timeout="50000")
[17:38:43.672]      // while-condition  =>  TRUE
[17:38:43.672]      // while "1"  (timeout="50000")
[17:38:43.672]      // while-condition  =>  TRUE
[17:38:43.672]      // while "1"  (timeout="50000")
[17:38:43.672]      // while-condition  =>  TRUE
[17:38:43.673]      // while "1"  (timeout="50000")
[17:38:43.673]      // while-condition  =>  TRUE
[17:38:43.673]      // while "1"  (timeout="50000")
[17:38:43.673]      // while-condition  =>  TRUE
[17:38:43.673]      // while "1"  (timeout="50000")
[17:38:43.674]      // while-condition  =>  TRUE
[17:38:43.674]      // while "1"  (timeout="50000")
[17:38:43.674]      // while-condition  =>  TRUE
[17:38:43.674]      // while "1"  (timeout="50000")
[17:38:43.674]      // while-condition  =>  TRUE
[17:38:43.674]      // while "1"  (timeout="50000")
[17:38:43.674]      // while-condition  =>  TRUE
[17:38:43.675]      // while "1"  (timeout="50000")
[17:38:43.675]      // while-condition  =>  TRUE
[17:38:43.675]      // while "1"  (timeout="50000")
[17:38:43.675]      // while-condition  =>  TRUE
[17:38:43.676]      // while "1"  (timeout="50000")
[17:38:43.676]      // while-condition  =>  TRUE
[17:38:43.676]      // while "1"  (timeout="50000")
[17:38:43.676]      // while-condition  =>  TRUE
[17:38:43.677]      // while "1"  (timeout="50000")
[17:38:43.677]      // while-condition  =>  TRUE
[17:38:43.677]      // while "1"  (timeout="50000")
[17:38:43.678]      // while-condition  =>  TRUE
[17:38:43.678]      // while "1"  (timeout="50000")
[17:38:43.679]      // while-condition  =>  TRUE
[17:38:43.679]      // while "1"  (timeout="50000")
[17:38:43.679]      // while-condition  =>  TRUE
[17:38:43.679]      // while "1"  (timeout="50000")
[17:38:43.680]      // while-condition  =>  TRUE
[17:38:43.680]      // while "1"  (timeout="50000")
[17:38:43.680]      // while-condition  =>  TRUE
[17:38:43.680]      // while "1"  (timeout="50000")
[17:38:43.680]      // while-condition  =>  TRUE
[17:38:43.681]      // while "1"  (timeout="50000")
[17:38:43.681]      // while-condition  =>  TRUE
[17:38:43.681]      // while "1"  (timeout="50000")
[17:38:43.681]      // while-condition  =>  TRUE
[17:38:43.681]      // while "1"  (timeout="50000")
[17:38:43.682]      // while-condition  =>  TRUE
[17:38:43.682]      // while "1"  (timeout="50000")
[17:38:43.682]      // while-condition  =>  TRUE
[17:38:43.682]      // while "1"  (timeout="50000")
[17:38:43.682]      // while-condition  =>  TRUE
[17:38:43.682]      // while "1"  (timeout="50000")
[17:38:43.682]      // while-condition  =>  TRUE
[17:38:43.683]      // while "1"  (timeout="50000")
[17:38:43.683]      // while-condition  =>  TRUE
[17:38:43.683]      // while "1"  (timeout="50000")
[17:38:43.683]      // while-condition  =>  TRUE
[17:38:43.683]      // while "1"  (timeout="50000")
[17:38:43.684]      // while-condition  =>  TRUE
[17:38:43.684]      // while "1"  (timeout="50000")
[17:38:43.684]      // while-condition  =>  TRUE
[17:38:43.684]      // while "1"  (timeout="50000")
[17:38:43.684]      // while-condition  =>  TRUE
[17:38:43.685]      // while "1"  (timeout="50000")
[17:38:43.685]      // while-condition  =>  TRUE
[17:38:43.685]      // while "1"  (timeout="50000")
[17:38:43.686]      // while-condition  =>  TRUE
[17:38:43.686]      // while "1"  (timeout="50000")
[17:38:43.686]      // while-condition  =>  TRUE
[17:38:43.686]      // while "1"  (timeout="50000")
[17:38:43.686]      // while-condition  =>  TRUE
[17:38:43.686]      // while "1"  (timeout="50000")
[17:38:43.686]      // while-condition  =>  TRUE
[17:38:43.686]      // while "1"  (timeout="50000")
[17:38:43.687]      // while-condition  =>  TRUE
[17:38:43.687]      // while "1"  (timeout="50000")
[17:38:43.687]      // while-condition  =>  TRUE
[17:38:43.687]      // while "1"  (timeout="50000")
[17:38:43.687]      // while-condition  =>  TRUE
[17:38:43.688]      // while "1"  (timeout="50000")
[17:38:43.688]      // while-condition  =>  TRUE
[17:38:43.688]      // while "1"  (timeout="50000")
[17:38:43.689]      // while-condition  =>  TRUE
[17:38:43.689]      // while "1"  (timeout="50000")
[17:38:43.689]      // while-condition  =>  TRUE
[17:38:43.689]      // while "1"  (timeout="50000")
[17:38:43.689]      // while-condition  =>  TRUE
[17:38:43.690]      // while "1"  (timeout="50000")
[17:38:43.690]      // while-condition  =>  TRUE
[17:38:43.690]      // while "1"  (timeout="50000")
[17:38:43.690]      // while-condition  =>  TRUE
[17:38:43.690]      // while "1"  (timeout="50000")
[17:38:43.690]      // while-condition  =>  TRUE
[17:38:43.691]      // while "1"  (timeout="50000")
[17:38:43.691]      // while-condition  =>  TRUE
[17:38:43.691]      // while "1"  (timeout="50000")
[17:38:43.691]      // while-condition  =>  TRUE
[17:38:43.691]      // while "1"  (timeout="50000")
[17:38:43.692]      // while-condition  =>  TRUE
[17:38:43.692]      // while "1"  (timeout="50000")
[17:38:43.692]      // while-condition  =>  TRUE
[17:38:43.692]      // while "1"  (timeout="50000")
[17:38:43.692]      // while-condition  =>  TRUE
[17:38:43.693]      // while "1"  (timeout="50000")
[17:38:43.693]      // while-condition  =>  TRUE
[17:38:43.693]      // while "1"  (timeout="50000")
[17:38:43.693]      // while-condition  =>  TRUE
[17:38:43.694]      // while "1"  (timeout="50000")
[17:38:43.694]      // while-condition  =>  TRUE
[17:38:43.695]      // while "1"  (timeout="50000")
[17:38:43.695]      // while-condition  =>  TRUE
[17:38:43.695]      // while "1"  (timeout="50000")
[17:38:43.695]      // while-condition  =>  TRUE
[17:38:43.695]      // while "1"  (timeout="50000")
[17:38:43.696]      // while-condition  =>  TRUE
[17:38:43.696]      // while "1"  (timeout="50000")
[17:38:43.696]      // while-condition  =>  TRUE
[17:38:43.696]      // while "1"  (timeout="50000")
[17:38:43.696]      // while-condition  =>  TRUE
[17:38:43.696]      // while "1"  (timeout="50000")
[17:38:43.696]      // while-condition  =>  TRUE
[17:38:43.696]      // while "1"  (timeout="50000")
[17:38:43.697]      // while-condition  =>  TRUE
[17:38:43.697]      // while "1"  (timeout="50000")
[17:38:43.697]      // while-condition  =>  TRUE
[17:38:43.697]      // while "1"  (timeout="50000")
[17:38:43.698]      // while-condition  =>  TRUE
[17:38:43.698]      // while "1"  (timeout="50000")
[17:38:43.698]      // while-condition  =>  TRUE
[17:38:43.698]      // while "1"  (timeout="50000")
[17:38:43.699]      // while-condition  =>  TRUE
[17:38:43.699]      // while "1"  (timeout="50000")
[17:38:43.699]      // while-condition  =>  TRUE
[17:38:43.699]      // while "1"  (timeout="50000")
[17:38:43.700]      // while-condition  =>  TRUE
[17:38:43.700]      // while "1"  (timeout="50000")
[17:38:43.700]      // while-condition  =>  TRUE
[17:38:43.700]      // while "1"  (timeout="50000")
[17:38:43.701]      // while-condition  =>  TRUE
[17:38:43.701]      // while "1"  (timeout="50000")
[17:38:43.701]      // while-condition  =>  TRUE
[17:38:43.701]      // while "1"  (timeout="50000")
[17:38:43.702]      // while-condition  =>  TRUE
[17:38:43.702]      // while "1"  (timeout="50000")
[17:38:43.702]      // while-condition  =>  TRUE
[17:38:43.702]      // while "1"  (timeout="50000")
[17:38:43.703]      // while-condition  =>  TRUE
[17:38:43.703]      // while "1"  (timeout="50000")
[17:38:43.703]      // while-condition  =>  TRUE
[17:38:43.703]      // while "1"  (timeout="50000")
[17:38:43.703]      // while-condition  =>  TRUE
[17:38:43.704]      // while "1"  (timeout="50000")
[17:38:43.705]      // while-condition  =>  TRUE
[17:38:43.705]      // while "1"  (timeout="50000")
[17:38:43.705]      // while-condition  =>  TRUE
[17:38:43.705]      // while "1"  (timeout="50000")
[17:38:43.706]      // while-condition  =>  TRUE
[17:38:43.706]      // while "1"  (timeout="50000")
[17:38:43.706]      // while-condition  =>  TRUE
[17:38:43.706]      // while "1"  (timeout="50000")
[17:38:43.706]      // while-condition  =>  TRUE
[17:38:43.706]      // while "1"  (timeout="50000")
[17:38:43.706]      // while-condition  =>  TRUE
[17:38:43.707]      // while "1"  (timeout="50000")
[17:38:43.707]      // while-condition  =>  TRUE
[17:38:43.708]      // while "1"  (timeout="50000")
[17:38:43.708]      // while-condition  =>  TRUE
[17:38:43.708]      // while "1"  (timeout="50000")
[17:38:43.709]      // while-condition  =>  TRUE
[17:38:43.709]      // while "1"  (timeout="50000")
[17:38:43.709]      // while-condition  =>  TRUE
[17:38:43.709]      // while "1"  (timeout="50000")
[17:38:43.710]      // while-condition  =>  TRUE
[17:38:43.711]      // while "1"  (timeout="50000")
[17:38:43.711]      // while-condition  =>  TRUE
[17:38:43.711]      // while "1"  (timeout="50000")
[17:38:43.712]      // while-condition  =>  TRUE
[17:38:43.712]      // while "1"  (timeout="50000")
[17:38:43.712]      // while-condition  =>  TRUE
[17:38:43.712]      // while "1"  (timeout="50000")
[17:38:43.712]      // while-condition  =>  TRUE
[17:38:43.713]      // while "1"  (timeout="50000")
[17:38:43.713]      // while-condition  =>  TRUE
[17:38:43.713]      // while "1"  (timeout="50000")
[17:38:43.713]      // while-condition  =>  TRUE
[17:38:43.713]      // while "1"  (timeout="50000")
[17:38:43.713]      // while-condition  =>  TRUE
[17:38:43.713]      // while "1"  (timeout="50000")
[17:38:43.714]      // while-condition  =>  TRUE
[17:38:43.714]      // while "1"  (timeout="50000")
[17:38:43.714]      // while-condition  =>  TRUE
[17:38:43.715]      // while "1"  (timeout="50000")
[17:38:43.715]      // while-condition  =>  TRUE
[17:38:43.715]      // while "1"  (timeout="50000")
[17:38:43.716]      // while-condition  =>  TRUE
[17:38:43.716]      // while "1"  (timeout="50000")
[17:38:43.716]      // while-condition  =>  TRUE
[17:38:43.716]      // while "1"  (timeout="50000")
[17:38:43.717]      // while-condition  =>  TRUE
[17:38:43.717]      // while "1"  (timeout="50000")
[17:38:43.717]      // while-condition  =>  TRUE
[17:38:43.717]      // while "1"  (timeout="50000")
[17:38:43.717]      // while-condition  =>  TRUE
[17:38:43.718]      // while "1"  (timeout="50000")
[17:38:43.718]      // while-condition  =>  TRUE
[17:38:43.718]      // while "1"  (timeout="50000")
[17:38:43.718]      // while-condition  =>  TRUE
[17:38:43.718]      // while "1"  (timeout="50000")
[17:38:43.719]      // while-condition  =>  TRUE
[17:38:43.719]      // while "1"  (timeout="50000")
[17:38:43.719]      // while-condition  =>  TRUE
[17:38:43.719]      // while "1"  (timeout="50000")
[17:38:43.719]      // while-condition  =>  TRUE
[17:38:43.720]      // while "1"  (timeout="50000")
[17:38:43.720]      // while-condition  =>  TRUE
[17:38:43.721]      // while "1"  (timeout="50000")
[17:38:43.721]      // while-condition  =>  TRUE
[17:38:43.721]      // while "1"  (timeout="50000")
[17:38:43.721]      // while-condition  =>  TRUE
[17:38:43.722]      // while "1"  (timeout="50000")
[17:38:43.722]      // while-condition  =>  TRUE
[17:38:43.722]      // while "1"  (timeout="50000")
[17:38:43.722]      // while-condition  =>  TRUE
[17:38:43.723]      // while "1"  (timeout="50000")
[17:38:43.723]      // while-condition  =>  TRUE
[17:38:43.723]      // while "1"  (timeout="50000")
[17:38:43.723]      // while-condition  =>  TRUE
[17:38:43.723]      // while "1"  (timeout="50000")
[17:38:43.724]      // while  =>  TIMEOUT
[17:38:43.724]      // end while "1"
[17:38:43.724]    </control>
[17:38:43.724]    <block atomic="false" info="">
[17:38:43.724]      DAP_SWJ_Pins(nReset, nReset, 0);
[17:38:43.736]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[17:38:43.739]    </block>
[17:38:43.739]  </sequence>
[17:38:43.740]  
[17:39:00.427]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[17:39:00.427]  
[17:39:00.428]  <debugvars>
[17:39:00.428]    // Pre-defined
[17:39:00.429]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:39:00.429]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[17:39:00.430]    __dp=0x00000000
[17:39:00.431]    __ap=0x00000000
[17:39:00.431]    __traceout=0x00000000      (Trace Disabled)
[17:39:00.432]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:39:00.432]    __FlashAddr=0x00000000
[17:39:00.432]    __FlashLen=0x00000000
[17:39:00.433]    __FlashArg=0x00000000
[17:39:00.433]    __FlashOp=0x00000000
[17:39:00.434]    __Result=0x00000000
[17:39:00.434]  </debugvars>
[17:39:00.435]  
[17:39:00.436]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[17:39:00.436]    <block atomic="false" info="">
[17:39:00.436]      __var nReset      = 0x80;
[17:39:00.436]        // -> [nReset <= 0x00000080]
[17:39:00.437]      DAP_SWJ_Pins(0x00, nReset, 0);
[17:39:00.439]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[17:39:00.440]    </block>
[17:39:00.440]    <control if="" while="1" timeout="50000" info="">
[17:39:00.440]      // while "1"  (timeout="50000")
[17:39:00.441]      // while-condition  =>  TRUE
[17:39:00.442]      // while "1"  (timeout="50000")
[17:39:00.442]      // while-condition  =>  TRUE
[17:39:00.442]      // while "1"  (timeout="50000")
[17:39:00.443]      // while-condition  =>  TRUE
[17:39:00.443]      // while "1"  (timeout="50000")
[17:39:00.444]      // while-condition  =>  TRUE
[17:39:00.444]      // while "1"  (timeout="50000")
[17:39:00.444]      // while-condition  =>  TRUE
[17:39:00.445]      // while "1"  (timeout="50000")
[17:39:00.445]      // while-condition  =>  TRUE
[17:39:00.445]      // while "1"  (timeout="50000")
[17:39:00.446]      // while-condition  =>  TRUE
[17:39:00.446]      // while "1"  (timeout="50000")
[17:39:00.446]      // while-condition  =>  TRUE
[17:39:00.447]      // while "1"  (timeout="50000")
[17:39:00.447]      // while-condition  =>  TRUE
[17:39:00.447]      // while "1"  (timeout="50000")
[17:39:00.447]      // while-condition  =>  TRUE
[17:39:00.448]      // while "1"  (timeout="50000")
[17:39:00.448]      // while-condition  =>  TRUE
[17:39:00.448]      // while "1"  (timeout="50000")
[17:39:00.449]      // while-condition  =>  TRUE
[17:39:00.449]      // while "1"  (timeout="50000")
[17:39:00.449]      // while-condition  =>  TRUE
[17:39:00.450]      // while "1"  (timeout="50000")
[17:39:00.450]      // while-condition  =>  TRUE
[17:39:00.450]      // while "1"  (timeout="50000")
[17:39:00.450]      // while-condition  =>  TRUE
[17:39:00.451]      // while "1"  (timeout="50000")
[17:39:00.451]      // while-condition  =>  TRUE
[17:39:00.451]      // while "1"  (timeout="50000")
[17:39:00.452]      // while-condition  =>  TRUE
[17:39:00.452]      // while "1"  (timeout="50000")
[17:39:00.452]      // while-condition  =>  TRUE
[17:39:00.453]      // while "1"  (timeout="50000")
[17:39:00.453]      // while-condition  =>  TRUE
[17:39:00.453]      // while "1"  (timeout="50000")
[17:39:00.453]      // while-condition  =>  TRUE
[17:39:00.454]      // while "1"  (timeout="50000")
[17:39:00.454]      // while-condition  =>  TRUE
[17:39:00.454]      // while "1"  (timeout="50000")
[17:39:00.454]      // while-condition  =>  TRUE
[17:39:00.455]      // while "1"  (timeout="50000")
[17:39:00.455]      // while-condition  =>  TRUE
[17:39:00.455]      // while "1"  (timeout="50000")
[17:39:00.455]      // while-condition  =>  TRUE
[17:39:00.455]      // while "1"  (timeout="50000")
[17:39:00.455]      // while-condition  =>  TRUE
[17:39:00.455]      // while "1"  (timeout="50000")
[17:39:00.456]      // while-condition  =>  TRUE
[17:39:00.457]      // while "1"  (timeout="50000")
[17:39:00.457]      // while-condition  =>  TRUE
[17:39:00.457]      // while "1"  (timeout="50000")
[17:39:00.457]      // while-condition  =>  TRUE
[17:39:00.458]      // while "1"  (timeout="50000")
[17:39:00.458]      // while-condition  =>  TRUE
[17:39:00.458]      // while "1"  (timeout="50000")
[17:39:00.458]      // while-condition  =>  TRUE
[17:39:00.458]      // while "1"  (timeout="50000")
[17:39:00.459]      // while-condition  =>  TRUE
[17:39:00.459]      // while "1"  (timeout="50000")
[17:39:00.459]      // while-condition  =>  TRUE
[17:39:00.459]      // while "1"  (timeout="50000")
[17:39:00.459]      // while-condition  =>  TRUE
[17:39:00.460]      // while "1"  (timeout="50000")
[17:39:00.460]      // while-condition  =>  TRUE
[17:39:00.460]      // while "1"  (timeout="50000")
[17:39:00.460]      // while-condition  =>  TRUE
[17:39:00.460]      // while "1"  (timeout="50000")
[17:39:00.460]      // while-condition  =>  TRUE
[17:39:00.461]      // while "1"  (timeout="50000")
[17:39:00.461]      // while-condition  =>  TRUE
[17:39:00.461]      // while "1"  (timeout="50000")
[17:39:00.461]      // while-condition  =>  TRUE
[17:39:00.462]      // while "1"  (timeout="50000")
[17:39:00.462]      // while-condition  =>  TRUE
[17:39:00.462]      // while "1"  (timeout="50000")
[17:39:00.462]      // while-condition  =>  TRUE
[17:39:00.462]      // while "1"  (timeout="50000")
[17:39:00.463]      // while-condition  =>  TRUE
[17:39:00.463]      // while "1"  (timeout="50000")
[17:39:00.463]      // while-condition  =>  TRUE
[17:39:00.463]      // while "1"  (timeout="50000")
[17:39:00.463]      // while-condition  =>  TRUE
[17:39:00.464]      // while "1"  (timeout="50000")
[17:39:00.464]      // while-condition  =>  TRUE
[17:39:00.464]      // while "1"  (timeout="50000")
[17:39:00.464]      // while-condition  =>  TRUE
[17:39:00.464]      // while "1"  (timeout="50000")
[17:39:00.464]      // while-condition  =>  TRUE
[17:39:00.464]      // while "1"  (timeout="50000")
[17:39:00.465]      // while-condition  =>  TRUE
[17:39:00.465]      // while "1"  (timeout="50000")
[17:39:00.465]      // while-condition  =>  TRUE
[17:39:00.465]      // while "1"  (timeout="50000")
[17:39:00.466]      // while-condition  =>  TRUE
[17:39:00.466]      // while "1"  (timeout="50000")
[17:39:00.466]      // while-condition  =>  TRUE
[17:39:00.466]      // while "1"  (timeout="50000")
[17:39:00.466]      // while-condition  =>  TRUE
[17:39:00.467]      // while "1"  (timeout="50000")
[17:39:00.467]      // while-condition  =>  TRUE
[17:39:00.467]      // while "1"  (timeout="50000")
[17:39:00.467]      // while-condition  =>  TRUE
[17:39:00.468]      // while "1"  (timeout="50000")
[17:39:00.468]      // while-condition  =>  TRUE
[17:39:00.468]      // while "1"  (timeout="50000")
[17:39:00.468]      // while-condition  =>  TRUE
[17:39:00.468]      // while "1"  (timeout="50000")
[17:39:00.469]      // while-condition  =>  TRUE
[17:39:00.469]      // while "1"  (timeout="50000")
[17:39:00.469]      // while-condition  =>  TRUE
[17:39:00.469]      // while "1"  (timeout="50000")
[17:39:00.469]      // while-condition  =>  TRUE
[17:39:00.469]      // while "1"  (timeout="50000")
[17:39:00.470]      // while-condition  =>  TRUE
[17:39:00.470]      // while "1"  (timeout="50000")
[17:39:00.470]      // while-condition  =>  TRUE
[17:39:00.470]      // while "1"  (timeout="50000")
[17:39:00.470]      // while-condition  =>  TRUE
[17:39:00.470]      // while "1"  (timeout="50000")
[17:39:00.470]      // while-condition  =>  TRUE
[17:39:00.470]      // while "1"  (timeout="50000")
[17:39:00.470]      // while-condition  =>  TRUE
[17:39:00.470]      // while "1"  (timeout="50000")
[17:39:00.471]      // while-condition  =>  TRUE
[17:39:00.471]      // while "1"  (timeout="50000")
[17:39:00.471]      // while-condition  =>  TRUE
[17:39:00.471]      // while "1"  (timeout="50000")
[17:39:00.471]      // while-condition  =>  TRUE
[17:39:00.472]      // while "1"  (timeout="50000")
[17:39:00.472]      // while-condition  =>  TRUE
[17:39:00.472]      // while "1"  (timeout="50000")
[17:39:00.472]      // while-condition  =>  TRUE
[17:39:00.472]      // while "1"  (timeout="50000")
[17:39:00.474]      // while-condition  =>  TRUE
[17:39:00.474]      // while "1"  (timeout="50000")
[17:39:00.474]      // while-condition  =>  TRUE
[17:39:00.474]      // while "1"  (timeout="50000")
[17:39:00.474]      // while-condition  =>  TRUE
[17:39:00.475]      // while "1"  (timeout="50000")
[17:39:00.475]      // while-condition  =>  TRUE
[17:39:00.475]      // while "1"  (timeout="50000")
[17:39:00.475]      // while-condition  =>  TRUE
[17:39:00.475]      // while "1"  (timeout="50000")
[17:39:00.476]      // while-condition  =>  TRUE
[17:39:00.476]      // while "1"  (timeout="50000")
[17:39:00.476]      // while-condition  =>  TRUE
[17:39:00.476]      // while "1"  (timeout="50000")
[17:39:00.477]      // while-condition  =>  TRUE
[17:39:00.477]      // while "1"  (timeout="50000")
[17:39:00.477]      // while-condition  =>  TRUE
[17:39:00.477]      // while "1"  (timeout="50000")
[17:39:00.477]      // while-condition  =>  TRUE
[17:39:00.478]      // while "1"  (timeout="50000")
[17:39:00.478]      // while-condition  =>  TRUE
[17:39:00.478]      // while "1"  (timeout="50000")
[17:39:00.478]      // while-condition  =>  TRUE
[17:39:00.478]      // while "1"  (timeout="50000")
[17:39:00.478]      // while-condition  =>  TRUE
[17:39:00.479]      // while "1"  (timeout="50000")
[17:39:00.479]      // while-condition  =>  TRUE
[17:39:00.479]      // while "1"  (timeout="50000")
[17:39:00.479]      // while-condition  =>  TRUE
[17:39:00.479]      // while "1"  (timeout="50000")
[17:39:00.479]      // while-condition  =>  TRUE
[17:39:00.480]      // while "1"  (timeout="50000")
[17:39:00.480]      // while-condition  =>  TRUE
[17:39:00.480]      // while "1"  (timeout="50000")
[17:39:00.480]      // while-condition  =>  TRUE
[17:39:00.480]      // while "1"  (timeout="50000")
[17:39:00.481]      // while-condition  =>  TRUE
[17:39:00.481]      // while "1"  (timeout="50000")
[17:39:00.481]      // while-condition  =>  TRUE
[17:39:00.481]      // while "1"  (timeout="50000")
[17:39:00.482]      // while-condition  =>  TRUE
[17:39:00.482]      // while "1"  (timeout="50000")
[17:39:00.482]      // while-condition  =>  TRUE
[17:39:00.482]      // while "1"  (timeout="50000")
[17:39:00.482]      // while-condition  =>  TRUE
[17:39:00.482]      // while "1"  (timeout="50000")
[17:39:00.483]      // while-condition  =>  TRUE
[17:39:00.483]      // while "1"  (timeout="50000")
[17:39:00.483]      // while-condition  =>  TRUE
[17:39:00.483]      // while "1"  (timeout="50000")
[17:39:00.483]      // while-condition  =>  TRUE
[17:39:00.484]      // while "1"  (timeout="50000")
[17:39:00.484]      // while-condition  =>  TRUE
[17:39:00.484]      // while "1"  (timeout="50000")
[17:39:00.484]      // while-condition  =>  TRUE
[17:39:00.484]      // while "1"  (timeout="50000")
[17:39:00.485]      // while-condition  =>  TRUE
[17:39:00.485]      // while "1"  (timeout="50000")
[17:39:00.485]      // while-condition  =>  TRUE
[17:39:00.485]      // while "1"  (timeout="50000")
[17:39:00.485]      // while-condition  =>  TRUE
[17:39:00.485]      // while "1"  (timeout="50000")
[17:39:00.486]      // while-condition  =>  TRUE
[17:39:00.486]      // while "1"  (timeout="50000")
[17:39:00.486]      // while-condition  =>  TRUE
[17:39:00.486]      // while "1"  (timeout="50000")
[17:39:00.486]      // while-condition  =>  TRUE
[17:39:00.487]      // while "1"  (timeout="50000")
[17:39:00.487]      // while-condition  =>  TRUE
[17:39:00.487]      // while "1"  (timeout="50000")
[17:39:00.487]      // while-condition  =>  TRUE
[17:39:00.487]      // while "1"  (timeout="50000")
[17:39:00.488]      // while-condition  =>  TRUE
[17:39:00.488]      // while "1"  (timeout="50000")
[17:39:00.488]      // while-condition  =>  TRUE
[17:39:00.488]      // while "1"  (timeout="50000")
[17:39:00.489]      // while-condition  =>  TRUE
[17:39:00.489]      // while "1"  (timeout="50000")
[17:39:00.489]      // while-condition  =>  TRUE
[17:39:00.489]      // while "1"  (timeout="50000")
[17:39:00.489]      // while  =>  TIMEOUT
[17:39:00.490]      // end while "1"
[17:39:00.490]    </control>
[17:39:00.490]    <block atomic="false" info="">
[17:39:00.490]      DAP_SWJ_Pins(nReset, nReset, 0);
[17:39:00.501]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[17:39:00.516]    </block>
[17:39:00.516]    <control if="" while="1" timeout="10000" info="">
[17:39:00.517]      // while "1"  (timeout="10000")
[17:39:00.517]      // while-condition  =>  TRUE
[17:39:00.518]      // while "1"  (timeout="10000")
[17:39:00.519]      // while-condition  =>  TRUE
[17:39:00.520]      // while "1"  (timeout="10000")
[17:39:00.520]      // while-condition  =>  TRUE
[17:39:00.521]      // while "1"  (timeout="10000")
[17:39:00.521]      // while  =>  TIMEOUT
[17:39:00.522]      // end while "1"
[17:39:00.522]    </control>
[17:39:00.524]    <block atomic="true" info="">
[17:39:00.524]      // ATOMIC SEQUENCE - EXECUTE
[17:39:00.526]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[17:39:00.527]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[17:39:00.527]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[17:39:00.528]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[17:39:00.528]      // ATOMIC SEQUENCE - DONE
[17:39:00.528]    </block>
[17:39:00.529]    <block atomic="false" info="">
[17:39:00.530]      __errorcontrol = 0x00000001;
[17:39:00.531]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[17:39:00.531]      ReadDP(0x0);
[17:39:00.532]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[17:39:00.532]      __errorcontrol = 0x00000000;
[17:39:00.533]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[17:39:00.533]    </block>
[17:39:00.534]  </sequence>
[17:39:00.534]  
[17:39:00.535]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[17:39:00.535]  
[17:39:00.535]  <debugvars>
[17:39:00.536]    // Pre-defined
[17:39:00.537]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:39:00.537]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:39:00.538]    __dp=0x00000000
[17:39:00.539]    __ap=0x00000000
[17:39:00.539]    __traceout=0x00000000      (Trace Disabled)
[17:39:00.540]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:39:00.540]    __FlashAddr=0x00000000
[17:39:00.541]    __FlashLen=0x00000000
[17:39:00.541]    __FlashArg=0x00000000
[17:39:00.542]    __FlashOp=0x00000000
[17:39:00.542]    __Result=0x00000000
[17:39:00.542]  </debugvars>
[17:39:00.542]  
[17:39:00.544]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[17:39:00.544]  </sequence>
[17:39:00.545]  
[17:39:00.547]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[17:39:00.547]  
[17:39:00.548]  <debugvars>
[17:39:00.548]    // Pre-defined
[17:39:00.548]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:39:00.549]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:39:00.549]    __dp=0x00000000
[17:39:00.550]    __ap=0x00000000
[17:39:00.550]    __traceout=0x00000000      (Trace Disabled)
[17:39:00.551]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:39:00.551]    __FlashAddr=0x00000000
[17:39:00.551]    __FlashLen=0x00000000
[17:39:00.552]    __FlashArg=0x00000000
[17:39:00.552]    __FlashOp=0x00000000
[17:39:00.552]    __Result=0x00000000
[17:39:00.553]  </debugvars>
[17:39:00.553]  
[17:39:00.554]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[17:39:00.554]    <block atomic="false" info="">
[17:39:00.554]      __var SW_DP_ABORT  = 0x0;
[17:39:00.555]        // -> [SW_DP_ABORT <= 0x00000000]
[17:39:00.555]      __var DP_CTRL_STAT = 0x4;
[17:39:00.555]        // -> [DP_CTRL_STAT <= 0x00000004]
[17:39:00.557]      __var DP_SELECT    = 0x8;
[17:39:00.557]        // -> [DP_SELECT <= 0x00000008]
[17:39:00.557]      __var powered_down = 0;
[17:39:00.557]        // -> [powered_down <= 0x00000000]
[17:39:00.557]      WriteDP(DP_SELECT, 0x00000000);
[17:39:00.559]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[17:39:00.560]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[17:39:00.561]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[17:39:00.561]        // -> [powered_down <= 0x00000001]
[17:39:00.561]    </block>
[17:39:00.562]    <control if="powered_down" while="" timeout="0" info="">
[17:39:00.562]      // if-block "powered_down"
[17:39:00.562]        // =>  TRUE
[17:39:00.562]      <block atomic="false" info="">
[17:39:00.563]        WriteDP(DP_CTRL_STAT, 0x50000000);
[17:39:00.583]  
[17:39:00.583]  !!! E310 : Debug access failed - cannot write value 0x50000000 to DP register 0x04
[17:39:00.583]  
[17:39:00.585]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[17:39:00.586]      </block>
[17:39:00.586]      // end if-block "powered_down"
[17:39:00.587]    </control>
[17:39:00.587]  </sequence>
[17:39:00.588]  
[17:39:02.071]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[17:39:02.071]  
[17:39:02.072]  <debugvars>
[17:39:02.072]    // Pre-defined
[17:39:02.072]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:39:02.072]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:39:02.073]    __dp=0x00000000
[17:39:02.073]    __ap=0x00000000
[17:39:02.073]    __traceout=0x00000000      (Trace Disabled)
[17:39:02.074]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:39:02.074]    __FlashAddr=0x00000000
[17:39:02.074]    __FlashLen=0x00000000
[17:39:02.074]    __FlashArg=0x00000000
[17:39:02.074]    __FlashOp=0x00000000
[17:39:02.075]    __Result=0x00000000
[17:39:02.075]  </debugvars>
[17:39:02.075]  
[17:39:02.076]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[17:39:02.076]    <block atomic="false" info="">
[17:39:02.076]      __var nReset      = 0x80;
[17:39:02.076]        // -> [nReset <= 0x00000080]
[17:39:02.077]      DAP_SWJ_Pins(0x00, nReset, 0);
[17:39:02.077]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[17:39:02.078]    </block>
[17:39:02.078]    <control if="" while="1" timeout="50000" info="">
[17:39:02.078]      // while "1"  (timeout="50000")
[17:39:02.079]      // while-condition  =>  TRUE
[17:39:02.079]      // while "1"  (timeout="50000")
[17:39:02.079]      // while-condition  =>  TRUE
[17:39:02.080]      // while "1"  (timeout="50000")
[17:39:02.080]      // while-condition  =>  TRUE
[17:39:02.080]      // while "1"  (timeout="50000")
[17:39:02.080]      // while-condition  =>  TRUE
[17:39:02.080]      // while "1"  (timeout="50000")
[17:39:02.081]      // while-condition  =>  TRUE
[17:39:02.081]      // while "1"  (timeout="50000")
[17:39:02.081]      // while-condition  =>  TRUE
[17:39:02.082]      // while "1"  (timeout="50000")
[17:39:02.082]      // while-condition  =>  TRUE
[17:39:02.082]      // while "1"  (timeout="50000")
[17:39:02.082]      // while-condition  =>  TRUE
[17:39:02.083]      // while "1"  (timeout="50000")
[17:39:02.083]      // while-condition  =>  TRUE
[17:39:02.083]      // while "1"  (timeout="50000")
[17:39:02.084]      // while-condition  =>  TRUE
[17:39:02.084]      // while "1"  (timeout="50000")
[17:39:02.084]      // while-condition  =>  TRUE
[17:39:02.084]      // while "1"  (timeout="50000")
[17:39:02.085]      // while-condition  =>  TRUE
[17:39:02.085]      // while "1"  (timeout="50000")
[17:39:02.085]      // while-condition  =>  TRUE
[17:39:02.085]      // while "1"  (timeout="50000")
[17:39:02.086]      // while-condition  =>  TRUE
[17:39:02.086]      // while "1"  (timeout="50000")
[17:39:02.086]      // while-condition  =>  TRUE
[17:39:02.086]      // while "1"  (timeout="50000")
[17:39:02.086]      // while-condition  =>  TRUE
[17:39:02.086]      // while "1"  (timeout="50000")
[17:39:02.087]      // while-condition  =>  TRUE
[17:39:02.087]      // while "1"  (timeout="50000")
[17:39:02.087]      // while-condition  =>  TRUE
[17:39:02.088]      // while "1"  (timeout="50000")
[17:39:02.088]      // while-condition  =>  TRUE
[17:39:02.088]      // while "1"  (timeout="50000")
[17:39:02.088]      // while-condition  =>  TRUE
[17:39:02.088]      // while "1"  (timeout="50000")
[17:39:02.088]      // while-condition  =>  TRUE
[17:39:02.089]      // while "1"  (timeout="50000")
[17:39:02.089]      // while-condition  =>  TRUE
[17:39:02.089]      // while "1"  (timeout="50000")
[17:39:02.089]      // while-condition  =>  TRUE
[17:39:02.089]      // while "1"  (timeout="50000")
[17:39:02.090]      // while-condition  =>  TRUE
[17:39:02.090]      // while "1"  (timeout="50000")
[17:39:02.090]      // while-condition  =>  TRUE
[17:39:02.090]      // while "1"  (timeout="50000")
[17:39:02.090]      // while-condition  =>  TRUE
[17:39:02.090]      // while "1"  (timeout="50000")
[17:39:02.091]      // while-condition  =>  TRUE
[17:39:02.091]      // while "1"  (timeout="50000")
[17:39:02.091]      // while-condition  =>  TRUE
[17:39:02.091]      // while "1"  (timeout="50000")
[17:39:02.092]      // while-condition  =>  TRUE
[17:39:02.092]      // while "1"  (timeout="50000")
[17:39:02.092]      // while-condition  =>  TRUE
[17:39:02.092]      // while "1"  (timeout="50000")
[17:39:02.092]      // while-condition  =>  TRUE
[17:39:02.093]      // while "1"  (timeout="50000")
[17:39:02.093]      // while-condition  =>  TRUE
[17:39:02.093]      // while "1"  (timeout="50000")
[17:39:02.093]      // while-condition  =>  TRUE
[17:39:02.094]      // while "1"  (timeout="50000")
[17:39:02.094]      // while-condition  =>  TRUE
[17:39:02.094]      // while "1"  (timeout="50000")
[17:39:02.094]      // while-condition  =>  TRUE
[17:39:02.094]      // while "1"  (timeout="50000")
[17:39:02.095]      // while-condition  =>  TRUE
[17:39:02.095]      // while "1"  (timeout="50000")
[17:39:02.095]      // while-condition  =>  TRUE
[17:39:02.096]      // while "1"  (timeout="50000")
[17:39:02.096]      // while-condition  =>  TRUE
[17:39:02.096]      // while "1"  (timeout="50000")
[17:39:02.096]      // while-condition  =>  TRUE
[17:39:02.097]      // while "1"  (timeout="50000")
[17:39:02.097]      // while-condition  =>  TRUE
[17:39:02.097]      // while "1"  (timeout="50000")
[17:39:02.097]      // while-condition  =>  TRUE
[17:39:02.097]      // while "1"  (timeout="50000")
[17:39:02.098]      // while-condition  =>  TRUE
[17:39:02.098]      // while "1"  (timeout="50000")
[17:39:02.098]      // while-condition  =>  TRUE
[17:39:02.098]      // while "1"  (timeout="50000")
[17:39:02.098]      // while-condition  =>  TRUE
[17:39:02.099]      // while "1"  (timeout="50000")
[17:39:02.099]      // while-condition  =>  TRUE
[17:39:02.099]      // while "1"  (timeout="50000")
[17:39:02.099]      // while-condition  =>  TRUE
[17:39:02.099]      // while "1"  (timeout="50000")
[17:39:02.100]      // while-condition  =>  TRUE
[17:39:02.100]      // while "1"  (timeout="50000")
[17:39:02.100]      // while-condition  =>  TRUE
[17:39:02.100]      // while "1"  (timeout="50000")
[17:39:02.100]      // while-condition  =>  TRUE
[17:39:02.100]      // while "1"  (timeout="50000")
[17:39:02.100]      // while-condition  =>  TRUE
[17:39:02.100]      // while "1"  (timeout="50000")
[17:39:02.100]      // while-condition  =>  TRUE
[17:39:02.101]      // while "1"  (timeout="50000")
[17:39:02.101]      // while-condition  =>  TRUE
[17:39:02.101]      // while "1"  (timeout="50000")
[17:39:02.101]      // while-condition  =>  TRUE
[17:39:02.101]      // while "1"  (timeout="50000")
[17:39:02.102]      // while-condition  =>  TRUE
[17:39:02.102]      // while "1"  (timeout="50000")
[17:39:02.103]      // while-condition  =>  TRUE
[17:39:02.103]      // while "1"  (timeout="50000")
[17:39:02.103]      // while-condition  =>  TRUE
[17:39:02.103]      // while "1"  (timeout="50000")
[17:39:02.103]      // while-condition  =>  TRUE
[17:39:02.104]      // while "1"  (timeout="50000")
[17:39:02.104]      // while-condition  =>  TRUE
[17:39:02.104]      // while "1"  (timeout="50000")
[17:39:02.104]      // while-condition  =>  TRUE
[17:39:02.104]      // while "1"  (timeout="50000")
[17:39:02.105]      // while-condition  =>  TRUE
[17:39:02.105]      // while "1"  (timeout="50000")
[17:39:02.105]      // while-condition  =>  TRUE
[17:39:02.105]      // while "1"  (timeout="50000")
[17:39:02.105]      // while-condition  =>  TRUE
[17:39:02.105]      // while "1"  (timeout="50000")
[17:39:02.106]      // while-condition  =>  TRUE
[17:39:02.106]      // while "1"  (timeout="50000")
[17:39:02.106]      // while-condition  =>  TRUE
[17:39:02.106]      // while "1"  (timeout="50000")
[17:39:02.107]      // while-condition  =>  TRUE
[17:39:02.107]      // while "1"  (timeout="50000")
[17:39:02.107]      // while-condition  =>  TRUE
[17:39:02.107]      // while "1"  (timeout="50000")
[17:39:02.107]      // while-condition  =>  TRUE
[17:39:02.107]      // while "1"  (timeout="50000")
[17:39:02.108]      // while-condition  =>  TRUE
[17:39:02.108]      // while "1"  (timeout="50000")
[17:39:02.108]      // while-condition  =>  TRUE
[17:39:02.108]      // while "1"  (timeout="50000")
[17:39:02.108]      // while-condition  =>  TRUE
[17:39:02.109]      // while "1"  (timeout="50000")
[17:39:02.109]      // while-condition  =>  TRUE
[17:39:02.109]      // while "1"  (timeout="50000")
[17:39:02.109]      // while-condition  =>  TRUE
[17:39:02.109]      // while "1"  (timeout="50000")
[17:39:02.110]      // while-condition  =>  TRUE
[17:39:02.110]      // while "1"  (timeout="50000")
[17:39:02.110]      // while-condition  =>  TRUE
[17:39:02.110]      // while "1"  (timeout="50000")
[17:39:02.111]      // while-condition  =>  TRUE
[17:39:02.111]      // while "1"  (timeout="50000")
[17:39:02.111]      // while-condition  =>  TRUE
[17:39:02.111]      // while "1"  (timeout="50000")
[17:39:02.112]      // while-condition  =>  TRUE
[17:39:02.112]      // while "1"  (timeout="50000")
[17:39:02.112]      // while-condition  =>  TRUE
[17:39:02.112]      // while "1"  (timeout="50000")
[17:39:02.112]      // while-condition  =>  TRUE
[17:39:02.113]      // while "1"  (timeout="50000")
[17:39:02.113]      // while-condition  =>  TRUE
[17:39:02.113]      // while "1"  (timeout="50000")
[17:39:02.113]      // while-condition  =>  TRUE
[17:39:02.113]      // while "1"  (timeout="50000")
[17:39:02.114]      // while-condition  =>  TRUE
[17:39:02.114]      // while "1"  (timeout="50000")
[17:39:02.114]      // while-condition  =>  TRUE
[17:39:02.115]      // while "1"  (timeout="50000")
[17:39:02.115]      // while-condition  =>  TRUE
[17:39:02.115]      // while "1"  (timeout="50000")
[17:39:02.115]      // while-condition  =>  TRUE
[17:39:02.116]      // while "1"  (timeout="50000")
[17:39:02.116]      // while-condition  =>  TRUE
[17:39:02.116]      // while "1"  (timeout="50000")
[17:39:02.116]      // while-condition  =>  TRUE
[17:39:02.116]      // while "1"  (timeout="50000")
[17:39:02.117]      // while-condition  =>  TRUE
[17:39:02.117]      // while "1"  (timeout="50000")
[17:39:02.117]      // while-condition  =>  TRUE
[17:39:02.117]      // while "1"  (timeout="50000")
[17:39:02.117]      // while-condition  =>  TRUE
[17:39:02.118]      // while "1"  (timeout="50000")
[17:39:02.118]      // while-condition  =>  TRUE
[17:39:02.118]      // while "1"  (timeout="50000")
[17:39:02.118]      // while-condition  =>  TRUE
[17:39:02.118]      // while "1"  (timeout="50000")
[17:39:02.119]      // while-condition  =>  TRUE
[17:39:02.119]      // while "1"  (timeout="50000")
[17:39:02.119]      // while-condition  =>  TRUE
[17:39:02.119]      // while "1"  (timeout="50000")
[17:39:02.119]      // while-condition  =>  TRUE
[17:39:02.119]      // while "1"  (timeout="50000")
[17:39:02.119]      // while-condition  =>  TRUE
[17:39:02.120]      // while "1"  (timeout="50000")
[17:39:02.120]      // while-condition  =>  TRUE
[17:39:02.120]      // while "1"  (timeout="50000")
[17:39:02.120]      // while-condition  =>  TRUE
[17:39:02.120]      // while "1"  (timeout="50000")
[17:39:02.121]      // while-condition  =>  TRUE
[17:39:02.121]      // while "1"  (timeout="50000")
[17:39:02.121]      // while-condition  =>  TRUE
[17:39:02.121]      // while "1"  (timeout="50000")
[17:39:02.121]      // while-condition  =>  TRUE
[17:39:02.122]      // while "1"  (timeout="50000")
[17:39:02.122]      // while-condition  =>  TRUE
[17:39:02.123]      // while "1"  (timeout="50000")
[17:39:02.123]      // while-condition  =>  TRUE
[17:39:02.123]      // while "1"  (timeout="50000")
[17:39:02.123]      // while-condition  =>  TRUE
[17:39:02.123]      // while "1"  (timeout="50000")
[17:39:02.124]      // while-condition  =>  TRUE
[17:39:02.124]      // while "1"  (timeout="50000")
[17:39:02.124]      // while-condition  =>  TRUE
[17:39:02.124]      // while "1"  (timeout="50000")
[17:39:02.124]      // while-condition  =>  TRUE
[17:39:02.125]      // while "1"  (timeout="50000")
[17:39:02.125]      // while-condition  =>  TRUE
[17:39:02.125]      // while "1"  (timeout="50000")
[17:39:02.125]      // while-condition  =>  TRUE
[17:39:02.126]      // while "1"  (timeout="50000")
[17:39:02.126]      // while-condition  =>  TRUE
[17:39:02.126]      // while "1"  (timeout="50000")
[17:39:02.126]      // while-condition  =>  TRUE
[17:39:02.127]      // while "1"  (timeout="50000")
[17:39:02.127]      // while-condition  =>  TRUE
[17:39:02.127]      // while "1"  (timeout="50000")
[17:39:02.127]      // while-condition  =>  TRUE
[17:39:02.127]      // while "1"  (timeout="50000")
[17:39:02.128]      // while-condition  =>  TRUE
[17:39:02.128]      // while "1"  (timeout="50000")
[17:39:02.128]      // while-condition  =>  TRUE
[17:39:02.128]      // while "1"  (timeout="50000")
[17:39:02.128]      // while-condition  =>  TRUE
[17:39:02.129]      // while "1"  (timeout="50000")
[17:39:02.129]      // while-condition  =>  TRUE
[17:39:02.129]      // while "1"  (timeout="50000")
[17:39:02.129]      // while-condition  =>  TRUE
[17:39:02.129]      // while "1"  (timeout="50000")
[17:39:02.130]      // while-condition  =>  TRUE
[17:39:02.130]      // while "1"  (timeout="50000")
[17:39:02.130]      // while  =>  TIMEOUT
[17:39:02.130]      // end while "1"
[17:39:02.130]    </control>
[17:39:02.131]    <block atomic="false" info="">
[17:39:02.131]      DAP_SWJ_Pins(nReset, nReset, 0);
[17:39:02.141]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[17:39:02.142]    </block>
[17:39:02.142]  </sequence>
[17:39:02.143]  
[17:40:52.876]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[17:40:52.876]  
[17:40:52.876]  <debugvars>
[17:40:52.877]    // Pre-defined
[17:40:52.877]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:40:52.877]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[17:40:52.877]    __dp=0x00000000
[17:40:52.878]    __ap=0x00000000
[17:40:52.879]    __traceout=0x00000000      (Trace Disabled)
[17:40:52.879]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:40:52.879]    __FlashAddr=0x00000000
[17:40:52.879]    __FlashLen=0x00000000
[17:40:52.880]    __FlashArg=0x00000000
[17:40:52.880]    __FlashOp=0x00000000
[17:40:52.880]    __Result=0x00000000
[17:40:52.880]  </debugvars>
[17:40:52.881]  
[17:40:52.881]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[17:40:52.881]    <block atomic="false" info="">
[17:40:52.881]      __var nReset      = 0x80;
[17:40:52.882]        // -> [nReset <= 0x00000080]
[17:40:52.882]      DAP_SWJ_Pins(0x00, nReset, 0);
[17:40:52.883]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[17:40:52.883]    </block>
[17:40:52.883]    <control if="" while="1" timeout="50000" info="">
[17:40:52.884]      // while "1"  (timeout="50000")
[17:40:52.884]      // while-condition  =>  TRUE
[17:40:52.884]      // while "1"  (timeout="50000")
[17:40:52.884]      // while-condition  =>  TRUE
[17:40:52.885]      // while "1"  (timeout="50000")
[17:40:52.885]      // while-condition  =>  TRUE
[17:40:52.885]      // while "1"  (timeout="50000")
[17:40:52.885]      // while-condition  =>  TRUE
[17:40:52.886]      // while "1"  (timeout="50000")
[17:40:52.886]      // while-condition  =>  TRUE
[17:40:52.886]      // while "1"  (timeout="50000")
[17:40:52.886]      // while-condition  =>  TRUE
[17:40:52.887]      // while "1"  (timeout="50000")
[17:40:52.887]      // while-condition  =>  TRUE
[17:40:52.887]      // while "1"  (timeout="50000")
[17:40:52.887]      // while-condition  =>  TRUE
[17:40:52.887]      // while "1"  (timeout="50000")
[17:40:52.888]      // while-condition  =>  TRUE
[17:40:52.888]      // while "1"  (timeout="50000")
[17:40:52.888]      // while-condition  =>  TRUE
[17:40:52.888]      // while "1"  (timeout="50000")
[17:40:52.889]      // while-condition  =>  TRUE
[17:40:52.889]      // while "1"  (timeout="50000")
[17:40:52.889]      // while-condition  =>  TRUE
[17:40:52.889]      // while "1"  (timeout="50000")
[17:40:52.890]      // while-condition  =>  TRUE
[17:40:52.890]      // while "1"  (timeout="50000")
[17:40:52.890]      // while-condition  =>  TRUE
[17:40:52.890]      // while "1"  (timeout="50000")
[17:40:52.891]      // while-condition  =>  TRUE
[17:40:52.891]      // while "1"  (timeout="50000")
[17:40:52.891]      // while-condition  =>  TRUE
[17:40:52.891]      // while "1"  (timeout="50000")
[17:40:52.892]      // while-condition  =>  TRUE
[17:40:52.892]      // while "1"  (timeout="50000")
[17:40:52.892]      // while-condition  =>  TRUE
[17:40:52.892]      // while "1"  (timeout="50000")
[17:40:52.892]      // while-condition  =>  TRUE
[17:40:52.893]      // while "1"  (timeout="50000")
[17:40:52.893]      // while-condition  =>  TRUE
[17:40:52.893]      // while "1"  (timeout="50000")
[17:40:52.893]      // while-condition  =>  TRUE
[17:40:52.894]      // while "1"  (timeout="50000")
[17:40:52.894]      // while-condition  =>  TRUE
[17:40:52.894]      // while "1"  (timeout="50000")
[17:40:52.894]      // while-condition  =>  TRUE
[17:40:52.895]      // while "1"  (timeout="50000")
[17:40:52.895]      // while-condition  =>  TRUE
[17:40:52.895]      // while "1"  (timeout="50000")
[17:40:52.895]      // while-condition  =>  TRUE
[17:40:52.896]      // while "1"  (timeout="50000")
[17:40:52.896]      // while-condition  =>  TRUE
[17:40:52.896]      // while "1"  (timeout="50000")
[17:40:52.897]      // while-condition  =>  TRUE
[17:40:52.898]      // while "1"  (timeout="50000")
[17:40:52.898]      // while-condition  =>  TRUE
[17:40:52.898]      // while "1"  (timeout="50000")
[17:40:52.898]      // while-condition  =>  TRUE
[17:40:52.899]      // while "1"  (timeout="50000")
[17:40:52.899]      // while-condition  =>  TRUE
[17:40:52.899]      // while "1"  (timeout="50000")
[17:40:52.899]      // while-condition  =>  TRUE
[17:40:52.900]      // while "1"  (timeout="50000")
[17:40:52.900]      // while-condition  =>  TRUE
[17:40:52.900]      // while "1"  (timeout="50000")
[17:40:52.900]      // while-condition  =>  TRUE
[17:40:52.901]      // while "1"  (timeout="50000")
[17:40:52.901]      // while-condition  =>  TRUE
[17:40:52.901]      // while "1"  (timeout="50000")
[17:40:52.901]      // while-condition  =>  TRUE
[17:40:52.902]      // while "1"  (timeout="50000")
[17:40:52.902]      // while-condition  =>  TRUE
[17:40:52.902]      // while "1"  (timeout="50000")
[17:40:52.902]      // while-condition  =>  TRUE
[17:40:52.902]      // while "1"  (timeout="50000")
[17:40:52.903]      // while-condition  =>  TRUE
[17:40:52.903]      // while "1"  (timeout="50000")
[17:40:52.903]      // while-condition  =>  TRUE
[17:40:52.903]      // while "1"  (timeout="50000")
[17:40:52.904]      // while-condition  =>  TRUE
[17:40:52.904]      // while "1"  (timeout="50000")
[17:40:52.904]      // while-condition  =>  TRUE
[17:40:52.904]      // while "1"  (timeout="50000")
[17:40:52.905]      // while-condition  =>  TRUE
[17:40:52.905]      // while "1"  (timeout="50000")
[17:40:52.905]      // while-condition  =>  TRUE
[17:40:52.905]      // while "1"  (timeout="50000")
[17:40:52.906]      // while-condition  =>  TRUE
[17:40:52.906]      // while "1"  (timeout="50000")
[17:40:52.906]      // while-condition  =>  TRUE
[17:40:52.906]      // while "1"  (timeout="50000")
[17:40:52.907]      // while-condition  =>  TRUE
[17:40:52.907]      // while "1"  (timeout="50000")
[17:40:52.907]      // while-condition  =>  TRUE
[17:40:52.908]      // while "1"  (timeout="50000")
[17:40:52.908]      // while-condition  =>  TRUE
[17:40:52.909]      // while "1"  (timeout="50000")
[17:40:52.910]      // while-condition  =>  TRUE
[17:40:52.910]      // while "1"  (timeout="50000")
[17:40:52.911]      // while-condition  =>  TRUE
[17:40:52.911]      // while "1"  (timeout="50000")
[17:40:52.911]      // while-condition  =>  TRUE
[17:40:52.911]      // while "1"  (timeout="50000")
[17:40:52.912]      // while-condition  =>  TRUE
[17:40:52.912]      // while "1"  (timeout="50000")
[17:40:52.912]      // while-condition  =>  TRUE
[17:40:52.912]      // while "1"  (timeout="50000")
[17:40:52.913]      // while-condition  =>  TRUE
[17:40:52.913]      // while "1"  (timeout="50000")
[17:40:52.913]      // while-condition  =>  TRUE
[17:40:52.913]      // while "1"  (timeout="50000")
[17:40:52.914]      // while-condition  =>  TRUE
[17:40:52.914]      // while "1"  (timeout="50000")
[17:40:52.914]      // while-condition  =>  TRUE
[17:40:52.914]      // while "1"  (timeout="50000")
[17:40:52.915]      // while-condition  =>  TRUE
[17:40:52.915]      // while "1"  (timeout="50000")
[17:40:52.915]      // while-condition  =>  TRUE
[17:40:52.915]      // while "1"  (timeout="50000")
[17:40:52.916]      // while-condition  =>  TRUE
[17:40:52.916]      // while "1"  (timeout="50000")
[17:40:52.916]      // while-condition  =>  TRUE
[17:40:52.916]      // while "1"  (timeout="50000")
[17:40:52.916]      // while-condition  =>  TRUE
[17:40:52.917]      // while "1"  (timeout="50000")
[17:40:52.917]      // while-condition  =>  TRUE
[17:40:52.917]      // while "1"  (timeout="50000")
[17:40:52.917]      // while-condition  =>  TRUE
[17:40:52.918]      // while "1"  (timeout="50000")
[17:40:52.918]      // while-condition  =>  TRUE
[17:40:52.918]      // while "1"  (timeout="50000")
[17:40:52.918]      // while-condition  =>  TRUE
[17:40:52.919]      // while "1"  (timeout="50000")
[17:40:52.919]      // while-condition  =>  TRUE
[17:40:52.919]      // while "1"  (timeout="50000")
[17:40:52.920]      // while-condition  =>  TRUE
[17:40:52.920]      // while "1"  (timeout="50000")
[17:40:52.920]      // while-condition  =>  TRUE
[17:40:52.920]      // while "1"  (timeout="50000")
[17:40:52.920]      // while-condition  =>  TRUE
[17:40:52.921]      // while "1"  (timeout="50000")
[17:40:52.921]      // while-condition  =>  TRUE
[17:40:52.921]      // while "1"  (timeout="50000")
[17:40:52.921]      // while-condition  =>  TRUE
[17:40:52.922]      // while "1"  (timeout="50000")
[17:40:52.922]      // while-condition  =>  TRUE
[17:40:52.922]      // while "1"  (timeout="50000")
[17:40:52.923]      // while-condition  =>  TRUE
[17:40:52.923]      // while "1"  (timeout="50000")
[17:40:52.923]      // while-condition  =>  TRUE
[17:40:52.924]      // while "1"  (timeout="50000")
[17:40:52.924]      // while-condition  =>  TRUE
[17:40:52.924]      // while "1"  (timeout="50000")
[17:40:52.925]      // while-condition  =>  TRUE
[17:40:52.925]      // while "1"  (timeout="50000")
[17:40:52.925]      // while-condition  =>  TRUE
[17:40:52.926]      // while "1"  (timeout="50000")
[17:40:52.927]      // while-condition  =>  TRUE
[17:40:52.927]      // while "1"  (timeout="50000")
[17:40:52.927]      // while-condition  =>  TRUE
[17:40:52.927]      // while "1"  (timeout="50000")
[17:40:52.928]      // while-condition  =>  TRUE
[17:40:52.928]      // while "1"  (timeout="50000")
[17:40:52.928]      // while-condition  =>  TRUE
[17:40:52.928]      // while "1"  (timeout="50000")
[17:40:52.929]      // while-condition  =>  TRUE
[17:40:52.929]      // while "1"  (timeout="50000")
[17:40:52.929]      // while-condition  =>  TRUE
[17:40:52.930]      // while "1"  (timeout="50000")
[17:40:52.930]      // while-condition  =>  TRUE
[17:40:52.930]      // while "1"  (timeout="50000")
[17:40:52.930]      // while-condition  =>  TRUE
[17:40:52.931]      // while "1"  (timeout="50000")
[17:40:52.931]      // while-condition  =>  TRUE
[17:40:52.931]      // while "1"  (timeout="50000")
[17:40:52.931]      // while-condition  =>  TRUE
[17:40:52.931]      // while "1"  (timeout="50000")
[17:40:52.932]      // while-condition  =>  TRUE
[17:40:52.932]      // while "1"  (timeout="50000")
[17:40:52.932]      // while-condition  =>  TRUE
[17:40:52.932]      // while "1"  (timeout="50000")
[17:40:52.933]      // while-condition  =>  TRUE
[17:40:52.933]      // while "1"  (timeout="50000")
[17:40:52.933]      // while-condition  =>  TRUE
[17:40:52.933]      // while "1"  (timeout="50000")
[17:40:52.934]      // while-condition  =>  TRUE
[17:40:52.934]      // while "1"  (timeout="50000")
[17:40:52.934]      // while-condition  =>  TRUE
[17:40:52.934]      // while "1"  (timeout="50000")
[17:40:52.935]      // while-condition  =>  TRUE
[17:40:52.935]      // while "1"  (timeout="50000")
[17:40:52.935]      // while-condition  =>  TRUE
[17:40:52.935]      // while "1"  (timeout="50000")
[17:40:52.936]      // while-condition  =>  TRUE
[17:40:52.936]      // while "1"  (timeout="50000")
[17:40:52.936]      // while-condition  =>  TRUE
[17:40:52.936]      // while "1"  (timeout="50000")
[17:40:52.936]      // while-condition  =>  TRUE
[17:40:52.937]      // while "1"  (timeout="50000")
[17:40:52.937]      // while-condition  =>  TRUE
[17:40:52.937]      // while "1"  (timeout="50000")
[17:40:52.937]      // while-condition  =>  TRUE
[17:40:52.938]      // while "1"  (timeout="50000")
[17:40:52.938]      // while-condition  =>  TRUE
[17:40:52.938]      // while "1"  (timeout="50000")
[17:40:52.938]      // while-condition  =>  TRUE
[17:40:52.939]      // while "1"  (timeout="50000")
[17:40:52.939]      // while-condition  =>  TRUE
[17:40:52.939]      // while "1"  (timeout="50000")
[17:40:52.939]      // while-condition  =>  TRUE
[17:40:52.940]      // while "1"  (timeout="50000")
[17:40:52.940]      // while-condition  =>  TRUE
[17:40:52.940]      // while "1"  (timeout="50000")
[17:40:52.940]      // while-condition  =>  TRUE
[17:40:52.941]      // while "1"  (timeout="50000")
[17:40:52.941]      // while-condition  =>  TRUE
[17:40:52.941]      // while "1"  (timeout="50000")
[17:40:52.942]      // while-condition  =>  TRUE
[17:40:52.942]      // while "1"  (timeout="50000")
[17:40:52.942]      // while-condition  =>  TRUE
[17:40:52.942]      // while "1"  (timeout="50000")
[17:40:52.943]      // while-condition  =>  TRUE
[17:40:52.943]      // while "1"  (timeout="50000")
[17:40:52.943]      // while  =>  TIMEOUT
[17:40:52.943]      // end while "1"
[17:40:52.943]    </control>
[17:40:52.944]    <block atomic="false" info="">
[17:40:52.944]      DAP_SWJ_Pins(nReset, nReset, 0);
[17:40:52.954]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[17:40:52.954]    </block>
[17:40:52.954]    <control if="" while="1" timeout="10000" info="">
[17:40:52.955]      // while "1"  (timeout="10000")
[17:40:52.955]      // while-condition  =>  TRUE
[17:40:52.955]      // while "1"  (timeout="10000")
[17:40:52.955]      // while-condition  =>  TRUE
[17:40:52.956]      // while "1"  (timeout="10000")
[17:40:52.957]      // while-condition  =>  TRUE
[17:40:52.957]      // while "1"  (timeout="10000")
[17:40:52.957]      // while-condition  =>  TRUE
[17:40:52.957]      // while "1"  (timeout="10000")
[17:40:52.958]      // while-condition  =>  TRUE
[17:40:52.958]      // while "1"  (timeout="10000")
[17:40:52.958]      // while  =>  TIMEOUT
[17:40:52.958]      // end while "1"
[17:40:52.959]    </control>
[17:40:52.959]    <block atomic="true" info="">
[17:40:52.959]      // ATOMIC SEQUENCE - EXECUTE
[17:40:52.961]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[17:40:52.961]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[17:40:52.961]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[17:40:52.961]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[17:40:52.962]      // ATOMIC SEQUENCE - DONE
[17:40:52.962]    </block>
[17:40:52.962]    <block atomic="false" info="">
[17:40:52.962]      __errorcontrol = 0x00000001;
[17:40:52.963]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[17:40:52.963]      ReadDP(0x0);
[17:40:52.964]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[17:40:52.964]      __errorcontrol = 0x00000000;
[17:40:52.964]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[17:40:52.964]    </block>
[17:40:52.965]  </sequence>
[17:40:52.965]  
[17:40:52.965]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[17:40:52.965]  
[17:40:52.965]  <debugvars>
[17:40:52.966]    // Pre-defined
[17:40:52.966]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:40:52.966]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:40:52.966]    __dp=0x00000000
[17:40:52.967]    __ap=0x00000000
[17:40:52.967]    __traceout=0x00000000      (Trace Disabled)
[17:40:52.967]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:40:52.967]    __FlashAddr=0x00000000
[17:40:52.967]    __FlashLen=0x00000000
[17:40:52.968]    __FlashArg=0x00000000
[17:40:52.968]    __FlashOp=0x00000000
[17:40:52.968]    __Result=0x00000000
[17:40:52.968]  </debugvars>
[17:40:52.969]  
[17:40:52.969]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[17:40:52.969]  </sequence>
[17:40:52.969]  
[17:40:52.972]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[17:40:52.972]  
[17:40:52.972]  <debugvars>
[17:40:52.972]    // Pre-defined
[17:40:52.972]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:40:52.973]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:40:52.973]    __dp=0x00000000
[17:40:52.973]    __ap=0x00000000
[17:40:52.973]    __traceout=0x00000000      (Trace Disabled)
[17:40:52.974]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:40:52.974]    __FlashAddr=0x00000000
[17:40:52.974]    __FlashLen=0x00000000
[17:40:52.974]    __FlashArg=0x00000000
[17:40:52.975]    __FlashOp=0x00000000
[17:40:52.975]    __Result=0x00000000
[17:40:52.975]  </debugvars>
[17:40:52.975]  
[17:40:52.976]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[17:40:52.976]    <block atomic="false" info="">
[17:40:52.976]      __var SW_DP_ABORT  = 0x0;
[17:40:52.977]        // -> [SW_DP_ABORT <= 0x00000000]
[17:40:52.977]      __var DP_CTRL_STAT = 0x4;
[17:40:52.977]        // -> [DP_CTRL_STAT <= 0x00000004]
[17:40:52.977]      __var DP_SELECT    = 0x8;
[17:40:52.978]        // -> [DP_SELECT <= 0x00000008]
[17:40:52.978]      __var powered_down = 0;
[17:40:52.978]        // -> [powered_down <= 0x00000000]
[17:40:52.978]      WriteDP(DP_SELECT, 0x00000000);
[17:40:52.980]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[17:40:52.980]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[17:40:52.982]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[17:40:52.982]        // -> [powered_down <= 0x00000001]
[17:40:52.982]    </block>
[17:40:52.983]    <control if="powered_down" while="" timeout="0" info="">
[17:40:52.984]      // if-block "powered_down"
[17:40:52.984]        // =>  TRUE
[17:40:52.984]      <block atomic="false" info="">
[17:40:52.984]        WriteDP(DP_CTRL_STAT, 0x50000000);
[17:40:52.986]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[17:40:52.986]      </block>
[17:40:52.986]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[17:40:52.986]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[17:40:52.988]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[17:40:52.988]        // while-condition  =>  FALSE
[17:40:52.988]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[17:40:52.989]      </control>
[17:40:52.989]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[17:40:52.989]        // if-block "(__protocol & 0xFFFF) == 1"
[17:40:52.989]          // =>  FALSE
[17:40:52.989]        // skip if-block "(__protocol & 0xFFFF) == 1"
[17:40:52.990]      </control>
[17:40:52.990]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[17:40:52.990]        // if-block "(__protocol & 0xFFFF) == 2"
[17:40:52.990]          // =>  TRUE
[17:40:52.991]        <block atomic="false" info="">
[17:40:52.991]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[17:40:52.993]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[17:40:52.993]          WriteDP(SW_DP_ABORT, 0x0000001E);
[17:40:52.995]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[17:40:52.995]        </block>
[17:40:52.996]        // end if-block "(__protocol & 0xFFFF) == 2"
[17:40:52.996]      </control>
[17:40:52.996]      // end if-block "powered_down"
[17:40:52.996]    </control>
[17:40:52.997]  </sequence>
[17:40:52.997]  
[17:40:53.048]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[17:40:53.048]  
[17:40:53.048]  <debugvars>
[17:40:53.049]    // Pre-defined
[17:40:53.049]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:40:53.049]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:40:53.049]    __dp=0x00000000
[17:40:53.049]    __ap=0x00000000
[17:40:53.050]    __traceout=0x00000000      (Trace Disabled)
[17:40:53.050]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:40:53.050]    __FlashAddr=0x00000000
[17:40:53.050]    __FlashLen=0x00000000
[17:40:53.051]    __FlashArg=0x00000000
[17:40:53.051]    __FlashOp=0x00000000
[17:40:53.051]    __Result=0x00000000
[17:40:53.051]  </debugvars>
[17:40:53.051]  
[17:40:53.051]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[17:40:53.051]    <block atomic="true" info="">
[17:40:53.052]      // ATOMIC SEQUENCE - EXECUTE
[17:40:53.053]      __var DP_R_IDCODE    = 0x0;
[17:40:53.054]        // -> [DP_R_IDCODE <= 0x00000000]
[17:40:53.054]      __var DP_W_ABORT    = 0x0;
[17:40:53.054]        // -> [DP_W_ABORT <= 0x00000000]
[17:40:53.054]      __var DP_CTRLSTAT = 0x4;
[17:40:53.055]        // -> [DP_CTRLSTAT <= 0x00000004]
[17:40:53.055]      __var DP_W_SELECT    = 0x8;
[17:40:53.055]        // -> [DP_W_SELECT <= 0x00000008]
[17:40:53.055]      __var AP_TAR		= 0x4;
[17:40:53.056]        // -> [AP_TAR <= 0x00000004]
[17:40:53.056]      __var AP_BD0		= 0x0;
[17:40:53.056]        // -> [AP_BD0 <= 0x00000000]
[17:40:53.056]      __var AP_BD1		= 0x4;
[17:40:53.057]        // -> [AP_BD1 <= 0x00000004]
[17:40:53.057]      __var AP_BD2		= 0x8;
[17:40:53.057]        // -> [AP_BD2 <= 0x00000008]
[17:40:53.058]      __var PCWithinFlash = 0;
[17:40:53.058]        // -> [PCWithinFlash <= 0x00000000]
[17:40:53.058]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[17:40:53.058]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[17:40:53.059]      // ATOMIC SEQUENCE - DONE
[17:40:53.059]    </block>
[17:40:53.059]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[17:40:53.059]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[17:40:53.062]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[17:40:53.063]      // while-condition  =>  FALSE
[17:40:53.063]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[17:40:53.063]    </control>
[17:40:53.064]    <block atomic="true" info="">
[17:40:53.064]      // ATOMIC SEQUENCE - EXECUTE
[17:40:53.065]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[17:40:53.066]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[17:40:53.066]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[17:40:53.066]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[17:40:53.066]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[17:40:53.067]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[17:40:53.067]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[17:40:53.067]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[17:40:53.067]      // ATOMIC SEQUENCE - DONE
[17:40:53.068]    </block>
[17:40:53.068]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[17:40:53.068]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:40:53.069]        // -> [ReadAP(0x00000000) => 0x01030003]   (__dp=0x00000000, __ap=0x00000000)
[17:40:53.070]      // while-condition  =>  FALSE
[17:40:53.070]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[17:40:53.070]    </control>
[17:40:53.070]    <block atomic="false" info="">
[17:40:53.071]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[17:40:53.072]        // -> [ReadAP(0x00000008) => 0x10000820]   (__dp=0x00000000, __ap=0x00000000)
[17:40:53.073]        // -> [PCWithinFlash <= 0x00000001]
[17:40:53.073]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[17:40:53.074]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[17:40:53.075]    </block>
[17:40:53.075]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[17:40:53.075]      // if-block "PCWithinFlash == 0"
[17:40:53.075]        // =>  FALSE
[17:40:53.076]      // skip if-block "PCWithinFlash == 0"
[17:40:53.076]    </control>
[17:40:53.076]  </sequence>
[17:40:53.076]  
[17:40:53.100]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[17:40:53.100]  
[17:40:53.100]  <debugvars>
[17:40:53.101]    // Pre-defined
[17:40:53.101]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:40:53.101]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:40:53.101]    __dp=0x00000000
[17:40:53.102]    __ap=0x00000000
[17:40:53.102]    __traceout=0x00000000      (Trace Disabled)
[17:40:53.102]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:40:53.102]    __FlashAddr=0x00000000
[17:40:53.102]    __FlashLen=0x00000000
[17:40:53.103]    __FlashArg=0x00000000
[17:40:53.103]    __FlashOp=0x00000000
[17:40:53.103]    __Result=0x00000000
[17:40:53.103]  </debugvars>
[17:40:53.104]  
[17:40:53.104]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[17:40:53.104]    <block atomic="false" info="">
[17:40:53.104]    </block>
[17:40:53.105]  </sequence>
[17:40:53.105]  
[17:40:53.107]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[17:40:53.107]  
[17:40:53.107]  <debugvars>
[17:40:53.107]    // Pre-defined
[17:40:53.107]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:40:53.108]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:40:53.108]    __dp=0x00000000
[17:40:53.108]    __ap=0x00000000
[17:40:53.108]    __traceout=0x00000000      (Trace Disabled)
[17:40:53.109]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:40:53.109]    __FlashAddr=0x00000000
[17:40:53.109]    __FlashLen=0x00000000
[17:40:53.110]    __FlashArg=0x00000000
[17:40:53.110]    __FlashOp=0x00000000
[17:40:53.110]    __Result=0x00000000
[17:40:53.110]  </debugvars>
[17:40:53.111]  
[17:40:53.111]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[17:40:53.111]    <block atomic="false" info="">
[17:40:53.111]      __var nReset      = 0x80;
[17:40:53.111]        // -> [nReset <= 0x00000080]
[17:40:53.112]      DAP_SWJ_Pins(0x00, nReset, 0);
[17:40:53.113]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[17:40:53.113]    </block>
[17:40:53.113]    <control if="" while="1" timeout="50000" info="">
[17:40:53.113]      // while "1"  (timeout="50000")
[17:40:53.114]      // while-condition  =>  TRUE
[17:40:53.114]      // while "1"  (timeout="50000")
[17:40:53.114]      // while-condition  =>  TRUE
[17:40:53.114]      // while "1"  (timeout="50000")
[17:40:53.115]      // while-condition  =>  TRUE
[17:40:53.115]      // while "1"  (timeout="50000")
[17:40:53.115]      // while-condition  =>  TRUE
[17:40:53.115]      // while "1"  (timeout="50000")
[17:40:53.116]      // while-condition  =>  TRUE
[17:40:53.116]      // while "1"  (timeout="50000")
[17:40:53.116]      // while-condition  =>  TRUE
[17:40:53.116]      // while "1"  (timeout="50000")
[17:40:53.117]      // while-condition  =>  TRUE
[17:40:53.117]      // while "1"  (timeout="50000")
[17:40:53.117]      // while-condition  =>  TRUE
[17:40:53.117]      // while "1"  (timeout="50000")
[17:40:53.118]      // while-condition  =>  TRUE
[17:40:53.118]      // while "1"  (timeout="50000")
[17:40:53.118]      // while-condition  =>  TRUE
[17:40:53.118]      // while "1"  (timeout="50000")
[17:40:53.118]      // while-condition  =>  TRUE
[17:40:53.119]      // while "1"  (timeout="50000")
[17:40:53.119]      // while-condition  =>  TRUE
[17:40:53.119]      // while "1"  (timeout="50000")
[17:40:53.119]      // while-condition  =>  TRUE
[17:40:53.120]      // while "1"  (timeout="50000")
[17:40:53.120]      // while-condition  =>  TRUE
[17:40:53.120]      // while "1"  (timeout="50000")
[17:40:53.120]      // while-condition  =>  TRUE
[17:40:53.121]      // while "1"  (timeout="50000")
[17:40:53.121]      // while-condition  =>  TRUE
[17:40:53.121]      // while "1"  (timeout="50000")
[17:40:53.122]      // while-condition  =>  TRUE
[17:40:53.122]      // while "1"  (timeout="50000")
[17:40:53.122]      // while-condition  =>  TRUE
[17:40:53.122]      // while "1"  (timeout="50000")
[17:40:53.123]      // while-condition  =>  TRUE
[17:40:53.123]      // while "1"  (timeout="50000")
[17:40:53.123]      // while-condition  =>  TRUE
[17:40:53.123]      // while "1"  (timeout="50000")
[17:40:53.124]      // while-condition  =>  TRUE
[17:40:53.124]      // while "1"  (timeout="50000")
[17:40:53.124]      // while-condition  =>  TRUE
[17:40:53.124]      // while "1"  (timeout="50000")
[17:40:53.125]      // while-condition  =>  TRUE
[17:40:53.125]      // while "1"  (timeout="50000")
[17:40:53.125]      // while-condition  =>  TRUE
[17:40:53.125]      // while "1"  (timeout="50000")
[17:40:53.126]      // while-condition  =>  TRUE
[17:40:53.126]      // while "1"  (timeout="50000")
[17:40:53.126]      // while-condition  =>  TRUE
[17:40:53.126]      // while "1"  (timeout="50000")
[17:40:53.127]      // while-condition  =>  TRUE
[17:40:53.127]      // while "1"  (timeout="50000")
[17:40:53.127]      // while-condition  =>  TRUE
[17:40:53.127]      // while "1"  (timeout="50000")
[17:40:53.128]      // while-condition  =>  TRUE
[17:40:53.128]      // while "1"  (timeout="50000")
[17:40:53.128]      // while-condition  =>  TRUE
[17:40:53.128]      // while "1"  (timeout="50000")
[17:40:53.128]      // while-condition  =>  TRUE
[17:40:53.129]      // while "1"  (timeout="50000")
[17:40:53.129]      // while-condition  =>  TRUE
[17:40:53.129]      // while "1"  (timeout="50000")
[17:40:53.130]      // while-condition  =>  TRUE
[17:40:53.130]      // while "1"  (timeout="50000")
[17:40:53.130]      // while-condition  =>  TRUE
[17:40:53.130]      // while "1"  (timeout="50000")
[17:40:53.130]      // while-condition  =>  TRUE
[17:40:53.131]      // while "1"  (timeout="50000")
[17:40:53.131]      // while-condition  =>  TRUE
[17:40:53.131]      // while "1"  (timeout="50000")
[17:40:53.131]      // while-condition  =>  TRUE
[17:40:53.132]      // while "1"  (timeout="50000")
[17:40:53.132]      // while-condition  =>  TRUE
[17:40:53.132]      // while "1"  (timeout="50000")
[17:40:53.132]      // while-condition  =>  TRUE
[17:40:53.132]      // while "1"  (timeout="50000")
[17:40:53.133]      // while-condition  =>  TRUE
[17:40:53.133]      // while "1"  (timeout="50000")
[17:40:53.133]      // while-condition  =>  TRUE
[17:40:53.133]      // while "1"  (timeout="50000")
[17:40:53.134]      // while-condition  =>  TRUE
[17:40:53.134]      // while "1"  (timeout="50000")
[17:40:53.134]      // while-condition  =>  TRUE
[17:40:53.134]      // while "1"  (timeout="50000")
[17:40:53.134]      // while-condition  =>  TRUE
[17:40:53.135]      // while "1"  (timeout="50000")
[17:40:53.135]      // while-condition  =>  TRUE
[17:40:53.135]      // while "1"  (timeout="50000")
[17:40:53.135]      // while-condition  =>  TRUE
[17:40:53.136]      // while "1"  (timeout="50000")
[17:40:53.136]      // while-condition  =>  TRUE
[17:40:53.136]      // while "1"  (timeout="50000")
[17:40:53.136]      // while-condition  =>  TRUE
[17:40:53.137]      // while "1"  (timeout="50000")
[17:40:53.137]      // while-condition  =>  TRUE
[17:40:53.137]      // while "1"  (timeout="50000")
[17:40:53.137]      // while-condition  =>  TRUE
[17:40:53.137]      // while "1"  (timeout="50000")
[17:40:53.138]      // while-condition  =>  TRUE
[17:40:53.138]      // while "1"  (timeout="50000")
[17:40:53.138]      // while-condition  =>  TRUE
[17:40:53.138]      // while "1"  (timeout="50000")
[17:40:53.139]      // while-condition  =>  TRUE
[17:40:53.139]      // while "1"  (timeout="50000")
[17:40:53.140]      // while-condition  =>  TRUE
[17:40:53.140]      // while "1"  (timeout="50000")
[17:40:53.140]      // while-condition  =>  TRUE
[17:40:53.140]      // while "1"  (timeout="50000")
[17:40:53.141]      // while-condition  =>  TRUE
[17:40:53.141]      // while "1"  (timeout="50000")
[17:40:53.141]      // while-condition  =>  TRUE
[17:40:53.141]      // while "1"  (timeout="50000")
[17:40:53.142]      // while-condition  =>  TRUE
[17:40:53.142]      // while "1"  (timeout="50000")
[17:40:53.142]      // while-condition  =>  TRUE
[17:40:53.142]      // while "1"  (timeout="50000")
[17:40:53.143]      // while-condition  =>  TRUE
[17:40:53.143]      // while "1"  (timeout="50000")
[17:40:53.143]      // while-condition  =>  TRUE
[17:40:53.143]      // while "1"  (timeout="50000")
[17:40:53.144]      // while-condition  =>  TRUE
[17:40:53.144]      // while "1"  (timeout="50000")
[17:40:53.144]      // while-condition  =>  TRUE
[17:40:53.144]      // while "1"  (timeout="50000")
[17:40:53.145]      // while-condition  =>  TRUE
[17:40:53.145]      // while "1"  (timeout="50000")
[17:40:53.145]      // while-condition  =>  TRUE
[17:40:53.145]      // while "1"  (timeout="50000")
[17:40:53.145]      // while-condition  =>  TRUE
[17:40:53.146]      // while "1"  (timeout="50000")
[17:40:53.146]      // while-condition  =>  TRUE
[17:40:53.147]      // while "1"  (timeout="50000")
[17:40:53.147]      // while-condition  =>  TRUE
[17:40:53.147]      // while "1"  (timeout="50000")
[17:40:53.147]      // while-condition  =>  TRUE
[17:40:53.148]      // while "1"  (timeout="50000")
[17:40:53.148]      // while-condition  =>  TRUE
[17:40:53.148]      // while "1"  (timeout="50000")
[17:40:53.149]      // while-condition  =>  TRUE
[17:40:53.149]      // while "1"  (timeout="50000")
[17:40:53.149]      // while-condition  =>  TRUE
[17:40:53.149]      // while "1"  (timeout="50000")
[17:40:53.150]      // while-condition  =>  TRUE
[17:40:53.150]      // while "1"  (timeout="50000")
[17:40:53.150]      // while-condition  =>  TRUE
[17:40:53.150]      // while "1"  (timeout="50000")
[17:40:53.150]      // while-condition  =>  TRUE
[17:40:53.151]      // while "1"  (timeout="50000")
[17:40:53.151]      // while-condition  =>  TRUE
[17:40:53.151]      // while "1"  (timeout="50000")
[17:40:53.151]      // while-condition  =>  TRUE
[17:40:53.152]      // while "1"  (timeout="50000")
[17:40:53.152]      // while-condition  =>  TRUE
[17:40:53.152]      // while "1"  (timeout="50000")
[17:40:53.152]      // while-condition  =>  TRUE
[17:40:53.152]      // while "1"  (timeout="50000")
[17:40:53.153]      // while-condition  =>  TRUE
[17:40:53.153]      // while "1"  (timeout="50000")
[17:40:53.153]      // while-condition  =>  TRUE
[17:40:53.153]      // while "1"  (timeout="50000")
[17:40:53.153]      // while-condition  =>  TRUE
[17:40:53.154]      // while "1"  (timeout="50000")
[17:40:53.154]      // while-condition  =>  TRUE
[17:40:53.154]      // while "1"  (timeout="50000")
[17:40:53.154]      // while-condition  =>  TRUE
[17:40:53.154]      // while "1"  (timeout="50000")
[17:40:53.155]      // while-condition  =>  TRUE
[17:40:53.155]      // while "1"  (timeout="50000")
[17:40:53.155]      // while-condition  =>  TRUE
[17:40:53.155]      // while "1"  (timeout="50000")
[17:40:53.155]      // while-condition  =>  TRUE
[17:40:53.156]      // while "1"  (timeout="50000")
[17:40:53.156]      // while-condition  =>  TRUE
[17:40:53.156]      // while "1"  (timeout="50000")
[17:40:53.156]      // while-condition  =>  TRUE
[17:40:53.156]      // while "1"  (timeout="50000")
[17:40:53.157]      // while-condition  =>  TRUE
[17:40:53.157]      // while "1"  (timeout="50000")
[17:40:53.157]      // while-condition  =>  TRUE
[17:40:53.157]      // while "1"  (timeout="50000")
[17:40:53.158]      // while-condition  =>  TRUE
[17:40:53.158]      // while "1"  (timeout="50000")
[17:40:53.158]      // while-condition  =>  TRUE
[17:40:53.158]      // while "1"  (timeout="50000")
[17:40:53.158]      // while-condition  =>  TRUE
[17:40:53.159]      // while "1"  (timeout="50000")
[17:40:53.159]      // while-condition  =>  TRUE
[17:40:53.159]      // while "1"  (timeout="50000")
[17:40:53.159]      // while-condition  =>  TRUE
[17:40:53.159]      // while "1"  (timeout="50000")
[17:40:53.160]      // while-condition  =>  TRUE
[17:40:53.160]      // while "1"  (timeout="50000")
[17:40:53.160]      // while-condition  =>  TRUE
[17:40:53.160]      // while "1"  (timeout="50000")
[17:40:53.160]      // while-condition  =>  TRUE
[17:40:53.161]      // while "1"  (timeout="50000")
[17:40:53.161]      // while  =>  TIMEOUT
[17:40:53.161]      // end while "1"
[17:40:53.161]    </control>
[17:40:53.161]    <block atomic="false" info="">
[17:40:53.162]      DAP_SWJ_Pins(nReset, nReset, 0);
[17:40:53.173]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[17:40:53.174]    </block>
[17:40:53.174]    <control if="" while="1" timeout="10000" info="">
[17:40:53.174]      // while "1"  (timeout="10000")
[17:40:53.174]      // while-condition  =>  TRUE
[17:40:53.175]      // while "1"  (timeout="10000")
[17:40:53.175]      // while-condition  =>  TRUE
[17:40:53.175]      // while "1"  (timeout="10000")
[17:40:53.176]      // while-condition  =>  TRUE
[17:40:53.176]      // while "1"  (timeout="10000")
[17:40:53.176]      // while-condition  =>  TRUE
[17:40:53.176]      // while "1"  (timeout="10000")
[17:40:53.177]      // while-condition  =>  TRUE
[17:40:53.177]      // while "1"  (timeout="10000")
[17:40:53.177]      // while  =>  TIMEOUT
[17:40:53.177]      // end while "1"
[17:40:53.178]    </control>
[17:40:53.178]    <block atomic="true" info="">
[17:40:53.178]      // ATOMIC SEQUENCE - EXECUTE
[17:40:53.179]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[17:40:53.180]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[17:40:53.180]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[17:40:53.180]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[17:40:53.181]      // ATOMIC SEQUENCE - DONE
[17:40:53.181]    </block>
[17:40:53.181]    <block atomic="false" info="">
[17:40:53.182]      __errorcontrol = 0x00000001;
[17:40:53.182]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[17:40:53.182]      ReadDP(0x0);
[17:40:53.183]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[17:40:53.184]      __errorcontrol = 0x00000000;
[17:40:53.184]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[17:40:53.184]    </block>
[17:40:53.185]  </sequence>
[17:40:53.185]  
[17:40:53.189]  **********  Sequence "DebugPortStart"  (Context="Reset", Pname="", info="")
[17:40:53.189]  
[17:40:53.190]  <debugvars>
[17:40:53.190]    // Pre-defined
[17:40:53.190]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:40:53.191]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:40:53.191]    __dp=0x00000000
[17:40:53.191]    __ap=0x00000000
[17:40:53.191]    __traceout=0x00000000      (Trace Disabled)
[17:40:53.192]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:40:53.192]    __FlashAddr=0x00000000
[17:40:53.192]    __FlashLen=0x00000000
[17:40:53.192]    __FlashArg=0x00000000
[17:40:53.193]    __FlashOp=0x00000000
[17:40:53.193]    __Result=0x00000000
[17:40:53.193]  </debugvars>
[17:40:53.194]  
[17:40:53.194]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[17:40:53.194]    <block atomic="false" info="">
[17:40:53.194]      __var SW_DP_ABORT  = 0x0;
[17:40:53.195]        // -> [SW_DP_ABORT <= 0x00000000]
[17:40:53.195]      __var DP_CTRL_STAT = 0x4;
[17:40:53.195]        // -> [DP_CTRL_STAT <= 0x00000004]
[17:40:53.195]      __var DP_SELECT    = 0x8;
[17:40:53.196]        // -> [DP_SELECT <= 0x00000008]
[17:40:53.196]      __var powered_down = 0;
[17:40:53.196]        // -> [powered_down <= 0x00000000]
[17:40:53.196]      WriteDP(DP_SELECT, 0x00000000);
[17:40:53.197]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[17:40:53.198]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[17:40:53.199]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[17:40:53.200]        // -> [powered_down <= 0x00000001]
[17:40:53.200]    </block>
[17:40:53.200]    <control if="powered_down" while="" timeout="0" info="">
[17:40:53.201]      // if-block "powered_down"
[17:40:53.201]        // =>  TRUE
[17:40:53.201]      <block atomic="false" info="">
[17:40:53.201]        WriteDP(DP_CTRL_STAT, 0x50000000);
[17:40:53.202]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[17:40:53.203]      </block>
[17:40:53.203]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[17:40:53.203]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[17:40:53.204]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[17:40:53.205]        // while-condition  =>  FALSE
[17:40:53.205]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[17:40:53.205]      </control>
[17:40:53.206]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[17:40:53.206]        // if-block "(__protocol & 0xFFFF) == 1"
[17:40:53.206]          // =>  FALSE
[17:40:53.207]        // skip if-block "(__protocol & 0xFFFF) == 1"
[17:40:53.207]      </control>
[17:40:53.207]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[17:40:53.208]        // if-block "(__protocol & 0xFFFF) == 2"
[17:40:53.208]          // =>  TRUE
[17:40:53.208]        <block atomic="false" info="">
[17:40:53.208]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[17:40:53.209]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[17:40:53.210]          WriteDP(SW_DP_ABORT, 0x0000001E);
[17:40:53.211]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[17:40:53.212]        </block>
[17:40:53.212]        // end if-block "(__protocol & 0xFFFF) == 2"
[17:40:53.212]      </control>
[17:40:53.213]      // end if-block "powered_down"
[17:40:53.213]    </control>
[17:40:53.213]  </sequence>
[17:40:53.213]  
[17:40:53.218]  **********  Sequence "DebugCoreStart"  (Context="Reset", Pname="", info="")
[17:40:53.218]  
[17:40:53.219]  <debugvars>
[17:40:53.219]    // Pre-defined
[17:40:53.220]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:40:53.220]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:40:53.220]    __dp=0x00000000
[17:40:53.220]    __ap=0x00000000
[17:40:53.221]    __traceout=0x00000000      (Trace Disabled)
[17:40:53.221]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:40:53.221]    __FlashAddr=0x00000000
[17:40:53.222]    __FlashLen=0x00000000
[17:40:53.222]    __FlashArg=0x00000000
[17:40:53.223]    __FlashOp=0x00000000
[17:40:53.223]    __Result=0x00000000
[17:40:53.223]  </debugvars>
[17:40:53.223]  
[17:40:53.224]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[17:40:53.224]    <block atomic="true" info="">
[17:40:53.224]      // ATOMIC SEQUENCE - EXECUTE
[17:40:53.227]      __var DP_R_IDCODE    = 0x0;
[17:40:53.227]        // -> [DP_R_IDCODE <= 0x00000000]
[17:40:53.227]      __var DP_W_ABORT    = 0x0;
[17:40:53.228]        // -> [DP_W_ABORT <= 0x00000000]
[17:40:53.228]      __var DP_CTRLSTAT = 0x4;
[17:40:53.228]        // -> [DP_CTRLSTAT <= 0x00000004]
[17:40:53.229]      __var DP_W_SELECT    = 0x8;
[17:40:53.229]        // -> [DP_W_SELECT <= 0x00000008]
[17:40:53.229]      __var AP_TAR		= 0x4;
[17:40:53.229]        // -> [AP_TAR <= 0x00000004]
[17:40:53.230]      __var AP_BD0		= 0x0;
[17:40:53.230]        // -> [AP_BD0 <= 0x00000000]
[17:40:53.230]      __var AP_BD1		= 0x4;
[17:40:53.231]        // -> [AP_BD1 <= 0x00000004]
[17:40:53.231]      __var AP_BD2		= 0x8;
[17:40:53.231]        // -> [AP_BD2 <= 0x00000008]
[17:40:53.232]      __var PCWithinFlash = 0;
[17:40:53.232]        // -> [PCWithinFlash <= 0x00000000]
[17:40:53.232]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[17:40:53.233]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[17:40:53.233]      // ATOMIC SEQUENCE - DONE
[17:40:53.233]    </block>
[17:40:53.233]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[17:40:53.234]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[17:40:53.238]        // -> [Read32(0xE000EDF0) => 0x01030003]   (__dp=0x00000000, __ap=0x00000000)
[17:40:53.238]      // while-condition  =>  FALSE
[17:40:53.238]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[17:40:53.238]    </control>
[17:40:53.239]    <block atomic="true" info="">
[17:40:53.239]      // ATOMIC SEQUENCE - EXECUTE
[17:40:53.241]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[17:40:53.241]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[17:40:53.241]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[17:40:53.242]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[17:40:53.242]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[17:40:53.242]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[17:40:53.242]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[17:40:53.243]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[17:40:53.243]      // ATOMIC SEQUENCE - DONE
[17:40:53.243]    </block>
[17:40:53.243]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[17:40:53.244]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:40:53.246]        // -> [ReadAP(0x00000000) => 0x01030003]   (__dp=0x00000000, __ap=0x00000000)
[17:40:53.246]      // while-condition  =>  FALSE
[17:40:53.246]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[17:40:53.246]    </control>
[17:40:53.247]    <block atomic="false" info="">
[17:40:53.247]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[17:40:53.249]        // -> [ReadAP(0x00000008) => 0x10000820]   (__dp=0x00000000, __ap=0x00000000)
[17:40:53.249]        // -> [PCWithinFlash <= 0x00000001]
[17:40:53.249]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[17:40:53.251]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[17:40:53.251]    </block>
[17:40:53.251]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[17:40:53.251]      // if-block "PCWithinFlash == 0"
[17:40:53.252]        // =>  FALSE
[17:40:53.252]      // skip if-block "PCWithinFlash == 0"
[17:40:53.252]    </control>
[17:40:53.252]  </sequence>
[17:40:53.253]  
[17:40:53.272]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[17:40:53.272]  
[17:40:53.272]  <debugvars>
[17:40:53.272]    // Pre-defined
[17:40:53.273]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:40:53.273]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:40:53.273]    __dp=0x00000000
[17:40:53.273]    __ap=0x00000000
[17:40:53.274]    __traceout=0x00000000      (Trace Disabled)
[17:40:53.274]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:40:53.274]    __FlashAddr=0x00000000
[17:40:53.274]    __FlashLen=0x00000000
[17:40:53.275]    __FlashArg=0x00000000
[17:40:53.275]    __FlashOp=0x00000000
[17:40:53.275]    __Result=0x00000000
[17:40:53.276]  </debugvars>
[17:40:53.276]  
[17:40:53.276]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[17:40:53.276]    <block atomic="false" info="">
[17:40:53.277]    </block>
[17:40:53.277]  </sequence>
[17:40:53.277]  
[17:40:53.443]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[17:40:53.443]  
[17:40:53.443]  <debugvars>
[17:40:53.444]    // Pre-defined
[17:40:53.444]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:40:53.444]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:40:53.445]    __dp=0x00000000
[17:40:53.445]    __ap=0x00000000
[17:40:53.445]    __traceout=0x00000000      (Trace Disabled)
[17:40:53.445]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:40:53.445]    __FlashAddr=0x00000000
[17:40:53.446]    __FlashLen=0x00000000
[17:40:53.446]    __FlashArg=0x00000000
[17:40:53.446]    __FlashOp=0x00000000
[17:40:53.446]    __Result=0x00000000
[17:40:53.446]  </debugvars>
[17:40:53.446]  
[17:40:53.447]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[17:40:53.447]    <block atomic="false" info="">
[17:40:53.447]      Sequence("ResetHardware");
[17:40:53.447]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[17:40:53.448]          <block atomic="false" info="">
[17:40:53.448]            __var nReset      = 0x80;
[17:40:53.448]              // -> [nReset <= 0x00000080]
[17:40:53.448]            DAP_SWJ_Pins(0x00, nReset, 0);
[17:40:53.449]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[17:40:53.450]          </block>
[17:40:53.450]          <control if="" while="1" timeout="50000" info="">
[17:40:53.450]            // while "1"  (timeout="50000")
[17:40:53.451]            // while-condition  =>  TRUE
[17:40:53.451]            // while "1"  (timeout="50000")
[17:40:53.451]            // while-condition  =>  TRUE
[17:40:53.451]            // while "1"  (timeout="50000")
[17:40:53.451]            // while-condition  =>  TRUE
[17:40:53.452]            // while "1"  (timeout="50000")
[17:40:53.452]            // while-condition  =>  TRUE
[17:40:53.452]            // while "1"  (timeout="50000")
[17:40:53.452]            // while-condition  =>  TRUE
[17:40:53.453]            // while "1"  (timeout="50000")
[17:40:53.453]            // while-condition  =>  TRUE
[17:40:53.453]            // while "1"  (timeout="50000")
[17:40:53.453]            // while-condition  =>  TRUE
[17:40:53.453]            // while "1"  (timeout="50000")
[17:40:53.454]            // while-condition  =>  TRUE
[17:40:53.454]            // while "1"  (timeout="50000")
[17:40:53.454]            // while-condition  =>  TRUE
[17:40:53.454]            // while "1"  (timeout="50000")
[17:40:53.455]            // while-condition  =>  TRUE
[17:40:53.455]            // while "1"  (timeout="50000")
[17:40:53.455]            // while-condition  =>  TRUE
[17:40:53.455]            // while "1"  (timeout="50000")
[17:40:53.456]            // while-condition  =>  TRUE
[17:40:53.456]            // while "1"  (timeout="50000")
[17:40:53.456]            // while-condition  =>  TRUE
[17:40:53.456]            // while "1"  (timeout="50000")
[17:40:53.457]            // while-condition  =>  TRUE
[17:40:53.457]            // while "1"  (timeout="50000")
[17:40:53.457]            // while-condition  =>  TRUE
[17:40:53.457]            // while "1"  (timeout="50000")
[17:40:53.458]            // while-condition  =>  TRUE
[17:40:53.458]            // while "1"  (timeout="50000")
[17:40:53.458]            // while-condition  =>  TRUE
[17:40:53.458]            // while "1"  (timeout="50000")
[17:40:53.458]            // while-condition  =>  TRUE
[17:40:53.459]            // while "1"  (timeout="50000")
[17:40:53.459]            // while-condition  =>  TRUE
[17:40:53.459]            // while "1"  (timeout="50000")
[17:40:53.459]            // while-condition  =>  TRUE
[17:40:53.459]            // while "1"  (timeout="50000")
[17:40:53.460]            // while-condition  =>  TRUE
[17:40:53.460]            // while "1"  (timeout="50000")
[17:40:53.460]            // while-condition  =>  TRUE
[17:40:53.460]            // while "1"  (timeout="50000")
[17:40:53.460]            // while-condition  =>  TRUE
[17:40:53.461]            // while "1"  (timeout="50000")
[17:40:53.461]            // while-condition  =>  TRUE
[17:40:53.461]            // while "1"  (timeout="50000")
[17:40:53.461]            // while-condition  =>  TRUE
[17:40:53.461]            // while "1"  (timeout="50000")
[17:40:53.462]            // while-condition  =>  TRUE
[17:40:53.462]            // while "1"  (timeout="50000")
[17:40:53.462]            // while-condition  =>  TRUE
[17:40:53.462]            // while "1"  (timeout="50000")
[17:40:53.463]            // while-condition  =>  TRUE
[17:40:53.463]            // while "1"  (timeout="50000")
[17:40:53.463]            // while-condition  =>  TRUE
[17:40:53.463]            // while "1"  (timeout="50000")
[17:40:53.464]            // while-condition  =>  TRUE
[17:40:53.464]            // while "1"  (timeout="50000")
[17:40:53.464]            // while-condition  =>  TRUE
[17:40:53.464]            // while "1"  (timeout="50000")
[17:40:53.465]            // while-condition  =>  TRUE
[17:40:53.465]            // while "1"  (timeout="50000")
[17:40:53.465]            // while-condition  =>  TRUE
[17:40:53.465]            // while "1"  (timeout="50000")
[17:40:53.466]            // while-condition  =>  TRUE
[17:40:53.466]            // while "1"  (timeout="50000")
[17:40:53.466]            // while-condition  =>  TRUE
[17:40:53.466]            // while "1"  (timeout="50000")
[17:40:53.466]            // while-condition  =>  TRUE
[17:40:53.467]            // while "1"  (timeout="50000")
[17:40:53.467]            // while-condition  =>  TRUE
[17:40:53.467]            // while "1"  (timeout="50000")
[17:40:53.467]            // while-condition  =>  TRUE
[17:40:53.468]            // while "1"  (timeout="50000")
[17:40:53.468]            // while-condition  =>  TRUE
[17:40:53.468]            // while "1"  (timeout="50000")
[17:40:53.468]            // while-condition  =>  TRUE
[17:40:53.469]            // while "1"  (timeout="50000")
[17:40:53.469]            // while-condition  =>  TRUE
[17:40:53.469]            // while "1"  (timeout="50000")
[17:40:53.469]            // while-condition  =>  TRUE
[17:40:53.469]            // while "1"  (timeout="50000")
[17:40:53.470]            // while-condition  =>  TRUE
[17:40:53.470]            // while "1"  (timeout="50000")
[17:40:53.470]            // while-condition  =>  TRUE
[17:40:53.470]            // while "1"  (timeout="50000")
[17:40:53.471]            // while-condition  =>  TRUE
[17:40:53.471]            // while "1"  (timeout="50000")
[17:40:53.471]            // while-condition  =>  TRUE
[17:40:53.472]            // while "1"  (timeout="50000")
[17:40:53.472]            // while-condition  =>  TRUE
[17:40:53.472]            // while "1"  (timeout="50000")
[17:40:53.472]            // while-condition  =>  TRUE
[17:40:53.473]            // while "1"  (timeout="50000")
[17:40:53.473]            // while-condition  =>  TRUE
[17:40:53.473]            // while "1"  (timeout="50000")
[17:40:53.473]            // while-condition  =>  TRUE
[17:40:53.474]            // while "1"  (timeout="50000")
[17:40:53.474]            // while-condition  =>  TRUE
[17:40:53.474]            // while "1"  (timeout="50000")
[17:40:53.475]            // while-condition  =>  TRUE
[17:40:53.475]            // while "1"  (timeout="50000")
[17:40:53.476]            // while-condition  =>  TRUE
[17:40:53.476]            // while "1"  (timeout="50000")
[17:40:53.476]            // while-condition  =>  TRUE
[17:40:53.477]            // while "1"  (timeout="50000")
[17:40:53.477]            // while-condition  =>  TRUE
[17:40:53.477]            // while "1"  (timeout="50000")
[17:40:53.478]            // while-condition  =>  TRUE
[17:40:53.478]            // while "1"  (timeout="50000")
[17:40:53.478]            // while-condition  =>  TRUE
[17:40:53.478]            // while "1"  (timeout="50000")
[17:40:53.479]            // while-condition  =>  TRUE
[17:40:53.479]            // while "1"  (timeout="50000")
[17:40:53.479]            // while-condition  =>  TRUE
[17:40:53.479]            // while "1"  (timeout="50000")
[17:40:53.479]            // while-condition  =>  TRUE
[17:40:53.480]            // while "1"  (timeout="50000")
[17:40:53.480]            // while-condition  =>  TRUE
[17:40:53.480]            // while "1"  (timeout="50000")
[17:40:53.480]            // while-condition  =>  TRUE
[17:40:53.481]            // while "1"  (timeout="50000")
[17:40:53.481]            // while-condition  =>  TRUE
[17:40:53.481]            // while "1"  (timeout="50000")
[17:40:53.481]            // while-condition  =>  TRUE
[17:40:53.482]            // while "1"  (timeout="50000")
[17:40:53.482]            // while-condition  =>  TRUE
[17:40:53.482]            // while "1"  (timeout="50000")
[17:40:53.482]            // while-condition  =>  TRUE
[17:40:53.483]            // while "1"  (timeout="50000")
[17:40:53.483]            // while-condition  =>  TRUE
[17:40:53.483]            // while "1"  (timeout="50000")
[17:40:53.483]            // while-condition  =>  TRUE
[17:40:53.483]            // while "1"  (timeout="50000")
[17:40:53.484]            // while-condition  =>  TRUE
[17:40:53.484]            // while "1"  (timeout="50000")
[17:40:53.484]            // while-condition  =>  TRUE
[17:40:53.484]            // while "1"  (timeout="50000")
[17:40:53.485]            // while-condition  =>  TRUE
[17:40:53.485]            // while "1"  (timeout="50000")
[17:40:53.485]            // while-condition  =>  TRUE
[17:40:53.486]            // while "1"  (timeout="50000")
[17:40:53.486]            // while-condition  =>  TRUE
[17:40:53.487]            // while "1"  (timeout="50000")
[17:40:53.487]            // while-condition  =>  TRUE
[17:40:53.487]            // while "1"  (timeout="50000")
[17:40:53.488]            // while-condition  =>  TRUE
[17:40:53.488]            // while "1"  (timeout="50000")
[17:40:53.488]            // while-condition  =>  TRUE
[17:40:53.488]            // while "1"  (timeout="50000")
[17:40:53.489]            // while-condition  =>  TRUE
[17:40:53.489]            // while "1"  (timeout="50000")
[17:40:53.489]            // while-condition  =>  TRUE
[17:40:53.489]            // while "1"  (timeout="50000")
[17:40:53.490]            // while-condition  =>  TRUE
[17:40:53.490]            // while "1"  (timeout="50000")
[17:40:53.490]            // while-condition  =>  TRUE
[17:40:53.490]            // while "1"  (timeout="50000")
[17:40:53.491]            // while-condition  =>  TRUE
[17:40:53.491]            // while "1"  (timeout="50000")
[17:40:53.491]            // while-condition  =>  TRUE
[17:40:53.491]            // while "1"  (timeout="50000")
[17:40:53.492]            // while-condition  =>  TRUE
[17:40:53.492]            // while "1"  (timeout="50000")
[17:40:53.492]            // while-condition  =>  TRUE
[17:40:53.492]            // while "1"  (timeout="50000")
[17:40:53.492]            // while-condition  =>  TRUE
[17:40:53.493]            // while "1"  (timeout="50000")
[17:40:53.493]            // while-condition  =>  TRUE
[17:40:53.493]            // while "1"  (timeout="50000")
[17:40:53.493]            // while-condition  =>  TRUE
[17:40:53.494]            // while "1"  (timeout="50000")
[17:40:53.494]            // while-condition  =>  TRUE
[17:40:53.494]            // while "1"  (timeout="50000")
[17:40:53.494]            // while-condition  =>  TRUE
[17:40:53.495]            // while "1"  (timeout="50000")
[17:40:53.495]            // while-condition  =>  TRUE
[17:40:53.495]            // while "1"  (timeout="50000")
[17:40:53.495]            // while-condition  =>  TRUE
[17:40:53.496]            // while "1"  (timeout="50000")
[17:40:53.496]            // while-condition  =>  TRUE
[17:40:53.496]            // while "1"  (timeout="50000")
[17:40:53.496]            // while-condition  =>  TRUE
[17:40:53.496]            // while "1"  (timeout="50000")
[17:40:53.497]            // while-condition  =>  TRUE
[17:40:53.497]            // while "1"  (timeout="50000")
[17:40:53.497]            // while-condition  =>  TRUE
[17:40:53.497]            // while "1"  (timeout="50000")
[17:40:53.498]            // while-condition  =>  TRUE
[17:40:53.498]            // while "1"  (timeout="50000")
[17:40:53.498]            // while-condition  =>  TRUE
[17:40:53.498]            // while "1"  (timeout="50000")
[17:40:53.499]            // while-condition  =>  TRUE
[17:40:53.499]            // while "1"  (timeout="50000")
[17:40:53.499]            // while-condition  =>  TRUE
[17:40:53.499]            // while "1"  (timeout="50000")
[17:40:53.499]            // while-condition  =>  TRUE
[17:40:53.500]            // while "1"  (timeout="50000")
[17:40:53.500]            // while-condition  =>  TRUE
[17:40:53.500]            // while "1"  (timeout="50000")
[17:40:53.500]            // while-condition  =>  TRUE
[17:40:53.501]            // while "1"  (timeout="50000")
[17:40:53.501]            // while-condition  =>  TRUE
[17:40:53.501]            // while "1"  (timeout="50000")
[17:40:53.501]            // while-condition  =>  TRUE
[17:40:53.502]            // while "1"  (timeout="50000")
[17:40:53.502]            // while-condition  =>  TRUE
[17:40:53.502]            // while "1"  (timeout="50000")
[17:40:53.503]            // while-condition  =>  TRUE
[17:40:53.503]            // while "1"  (timeout="50000")
[17:40:53.503]            // while-condition  =>  TRUE
[17:40:53.504]            // while "1"  (timeout="50000")
[17:40:53.504]            // while-condition  =>  TRUE
[17:40:53.504]            // while "1"  (timeout="50000")
[17:40:53.504]            // while-condition  =>  TRUE
[17:40:53.505]            // while "1"  (timeout="50000")
[17:40:53.505]            // while  =>  TIMEOUT
[17:40:53.505]            // end while "1"
[17:40:53.505]          </control>
[17:40:53.506]          <block atomic="false" info="">
[17:40:53.506]            DAP_SWJ_Pins(nReset, nReset, 0);
[17:40:53.517]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[17:40:53.522]          </block>
[17:40:53.522]          <control if="" while="1" timeout="10000" info="">
[17:40:53.522]            // while "1"  (timeout="10000")
[17:40:53.523]            // while-condition  =>  TRUE
[17:40:53.523]            // while "1"  (timeout="10000")
[17:40:53.523]            // while-condition  =>  TRUE
[17:40:53.523]            // while "1"  (timeout="10000")
[17:40:53.524]            // while-condition  =>  TRUE
[17:40:53.524]            // while "1"  (timeout="10000")
[17:40:53.524]            // while-condition  =>  TRUE
[17:40:53.525]            // while "1"  (timeout="10000")
[17:40:53.525]            // while-condition  =>  TRUE
[17:40:53.525]            // while "1"  (timeout="10000")
[17:40:53.526]            // while-condition  =>  TRUE
[17:40:53.526]            // while "1"  (timeout="10000")
[17:40:53.526]            // while-condition  =>  TRUE
[17:40:53.526]            // while "1"  (timeout="10000")
[17:40:53.527]            // while-condition  =>  TRUE
[17:40:53.527]            // while "1"  (timeout="10000")
[17:40:53.527]            // while-condition  =>  TRUE
[17:40:53.528]            // while "1"  (timeout="10000")
[17:40:53.528]            // while-condition  =>  TRUE
[17:40:53.528]            // while "1"  (timeout="10000")
[17:40:53.529]            // while-condition  =>  TRUE
[17:40:53.529]            // while "1"  (timeout="10000")
[17:40:53.529]            // while-condition  =>  TRUE
[17:40:53.529]            // while "1"  (timeout="10000")
[17:40:53.530]            // while-condition  =>  TRUE
[17:40:53.530]            // while "1"  (timeout="10000")
[17:40:53.530]            // while-condition  =>  TRUE
[17:40:53.530]            // while "1"  (timeout="10000")
[17:40:53.531]            // while-condition  =>  TRUE
[17:40:53.531]            // while "1"  (timeout="10000")
[17:40:53.531]            // while-condition  =>  TRUE
[17:40:53.531]            // while "1"  (timeout="10000")
[17:40:53.532]            // while-condition  =>  TRUE
[17:40:53.532]            // while "1"  (timeout="10000")
[17:40:53.532]            // while-condition  =>  TRUE
[17:40:53.532]            // while "1"  (timeout="10000")
[17:40:53.533]            // while-condition  =>  TRUE
[17:40:53.533]            // while "1"  (timeout="10000")
[17:40:53.533]            // while-condition  =>  TRUE
[17:40:53.533]            // while "1"  (timeout="10000")
[17:40:53.534]            // while-condition  =>  TRUE
[17:40:53.534]            // while "1"  (timeout="10000")
[17:40:53.534]            // while-condition  =>  TRUE
[17:40:53.534]            // while "1"  (timeout="10000")
[17:40:53.535]            // while-condition  =>  TRUE
[17:40:53.535]            // while "1"  (timeout="10000")
[17:40:53.535]            // while-condition  =>  TRUE
[17:40:53.536]            // while "1"  (timeout="10000")
[17:40:53.536]            // while  =>  TIMEOUT
[17:40:53.536]            // end while "1"
[17:40:53.537]          </control>
[17:40:53.537]          <block atomic="true" info="">
[17:40:53.537]            // ATOMIC SEQUENCE - EXECUTE
[17:40:53.539]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[17:40:53.539]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[17:40:53.539]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[17:40:53.539]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[17:40:53.540]            // ATOMIC SEQUENCE - DONE
[17:40:53.540]          </block>
[17:40:53.541]          <block atomic="false" info="">
[17:40:53.541]            __errorcontrol = 0x00000001;
[17:40:53.541]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[17:40:53.541]            ReadDP(0x0);
[17:40:53.543]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[17:40:53.543]            __errorcontrol = 0x00000000;
[17:40:53.543]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[17:40:53.543]          </block>
[17:40:53.544]        </sequence>
[17:40:53.544]      Sequence("DebugPortSetup");
[17:40:53.544]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[17:40:53.544]        </sequence>
[17:40:53.545]      Sequence("DebugPortStart");
[17:40:53.545]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[17:40:53.545]          <block atomic="false" info="">
[17:40:53.545]            __var SW_DP_ABORT  = 0x0;
[17:40:53.545]              // -> [SW_DP_ABORT <= 0x00000000]
[17:40:53.546]            __var DP_CTRL_STAT = 0x4;
[17:40:53.546]              // -> [DP_CTRL_STAT <= 0x00000004]
[17:40:53.546]            __var DP_SELECT    = 0x8;
[17:40:53.546]              // -> [DP_SELECT <= 0x00000008]
[17:40:53.546]            __var powered_down = 0;
[17:40:53.547]              // -> [powered_down <= 0x00000000]
[17:40:53.547]            WriteDP(DP_SELECT, 0x00000000);
[17:40:53.548]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[17:40:53.548]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[17:40:53.549]              // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[17:40:53.549]              // -> [powered_down <= 0x00000001]
[17:40:53.549]          </block>
[17:40:53.549]          <control if="powered_down" while="" timeout="0" info="">
[17:40:53.550]            // if-block "powered_down"
[17:40:53.550]              // =>  TRUE
[17:40:53.550]            <block atomic="false" info="">
[17:40:53.550]              WriteDP(DP_CTRL_STAT, 0x50000000);
[17:40:53.552]                // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[17:40:53.552]            </block>
[17:40:53.553]            <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[17:40:53.553]              // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[17:40:53.554]                // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[17:40:53.554]              // while-condition  =>  FALSE
[17:40:53.554]              // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[17:40:53.555]            </control>
[17:40:53.555]            <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[17:40:53.555]              // if-block "(__protocol & 0xFFFF) == 1"
[17:40:53.556]                // =>  FALSE
[17:40:53.556]              // skip if-block "(__protocol & 0xFFFF) == 1"
[17:40:53.556]            </control>
[17:40:53.556]            <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[17:40:53.557]              // if-block "(__protocol & 0xFFFF) == 2"
[17:40:53.557]                // =>  TRUE
[17:40:53.557]              <block atomic="false" info="">
[17:40:53.557]                WriteDP(DP_CTRL_STAT, 0x50000F00);
[17:40:53.559]                  // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[17:40:53.559]                WriteDP(SW_DP_ABORT, 0x0000001E);
[17:40:53.561]                  // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[17:40:53.561]              </block>
[17:40:53.562]              // end if-block "(__protocol & 0xFFFF) == 2"
[17:40:53.562]            </control>
[17:40:53.562]            // end if-block "powered_down"
[17:40:53.562]          </control>
[17:40:53.563]        </sequence>
[17:40:53.563]      Sequence("DebugCoreStart");
[17:40:53.563]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[17:40:53.564]          <block atomic="true" info="">
[17:40:53.564]            // ATOMIC SEQUENCE - EXECUTE
[17:40:53.566]            __var DP_R_IDCODE    = 0x0;
[17:40:53.566]              // -> [DP_R_IDCODE <= 0x00000000]
[17:40:53.566]            __var DP_W_ABORT    = 0x0;
[17:40:53.567]              // -> [DP_W_ABORT <= 0x00000000]
[17:40:53.567]            __var DP_CTRLSTAT = 0x4;
[17:40:53.567]              // -> [DP_CTRLSTAT <= 0x00000004]
[17:40:53.567]            __var DP_W_SELECT    = 0x8;
[17:40:53.568]              // -> [DP_W_SELECT <= 0x00000008]
[17:40:53.568]            __var AP_TAR		= 0x4;
[17:40:53.568]              // -> [AP_TAR <= 0x00000004]
[17:40:53.568]            __var AP_BD0		= 0x0;
[17:40:53.569]              // -> [AP_BD0 <= 0x00000000]
[17:40:53.569]            __var AP_BD1		= 0x4;
[17:40:53.569]              // -> [AP_BD1 <= 0x00000004]
[17:40:53.569]            __var AP_BD2		= 0x8;
[17:40:53.569]              // -> [AP_BD2 <= 0x00000008]
[17:40:53.570]            __var PCWithinFlash = 0;
[17:40:53.570]              // -> [PCWithinFlash <= 0x00000000]
[17:40:53.570]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[17:40:53.570]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[17:40:53.571]            // ATOMIC SEQUENCE - DONE
[17:40:53.571]          </block>
[17:40:53.571]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[17:40:53.571]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[17:40:53.575]              // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[17:40:53.575]            // while-condition  =>  FALSE
[17:40:53.575]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[17:40:53.575]          </control>
[17:40:53.576]          <block atomic="true" info="">
[17:40:53.576]            // ATOMIC SEQUENCE - EXECUTE
[17:40:53.579]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[17:40:53.579]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[17:40:53.579]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[17:40:53.579]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[17:40:53.579]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[17:40:53.580]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[17:40:53.580]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[17:40:53.580]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[17:40:53.580]            // ATOMIC SEQUENCE - DONE
[17:40:53.581]          </block>
[17:40:53.581]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[17:40:53.581]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[17:40:53.583]              // -> [ReadAP(0x00000000) => 0x01030003]   (__dp=0x00000000, __ap=0x00000000)
[17:40:53.583]            // while-condition  =>  FALSE
[17:40:53.583]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[17:40:53.583]          </control>
[17:40:53.584]          <block atomic="false" info="">
[17:40:53.584]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[17:40:53.586]              // -> [ReadAP(0x00000008) => 0x10000820]   (__dp=0x00000000, __ap=0x00000000)
[17:40:53.586]              // -> [PCWithinFlash <= 0x00000001]
[17:40:53.586]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[17:40:53.588]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[17:40:53.588]          </block>
[17:40:53.588]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[17:40:53.588]            // if-block "PCWithinFlash == 0"
[17:40:53.589]              // =>  FALSE
[17:40:53.589]            // skip if-block "PCWithinFlash == 0"
[17:40:53.589]          </control>
[17:40:53.590]        </sequence>
[17:40:53.590]    </block>
[17:40:53.590]  </sequence>
[17:40:53.590]  
[17:41:01.029]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[17:41:01.029]  
[17:41:01.029]  <debugvars>
[17:41:01.030]    // Pre-defined
[17:41:01.030]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[17:41:01.031]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[17:41:01.032]    __dp=0x00000000
[17:41:01.032]    __ap=0x00000000
[17:41:01.033]    __traceout=0x00000000      (Trace Disabled)
[17:41:01.034]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:41:01.034]    __FlashAddr=0x00000000
[17:41:01.035]    __FlashLen=0x00000000
[17:41:01.035]    __FlashArg=0x00000000
[17:41:01.035]    __FlashOp=0x00000000
[17:41:01.036]    __Result=0x00000000
[17:41:01.036]  </debugvars>
[17:41:01.036]  
[17:41:01.036]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[17:41:01.037]    <block atomic="false" info="">
[17:41:01.037]      __var nReset      = 0x80;
[17:41:01.037]        // -> [nReset <= 0x00000080]
[17:41:01.037]      DAP_SWJ_Pins(0x00, nReset, 0);
[17:41:01.038]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0xFF]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[17:41:01.039]    </block>
[17:41:01.039]    <control if="" while="1" timeout="50000" info="">
[17:41:01.039]      // while "1"  (timeout="50000")
[17:41:01.039]      // while-condition  =>  TRUE
[17:41:01.040]      // while "1"  (timeout="50000")
[17:41:01.040]      // while-condition  =>  TRUE
[17:41:01.040]      // while "1"  (timeout="50000")
[17:41:01.040]      // while-condition  =>  TRUE
[17:41:01.041]      // while "1"  (timeout="50000")
[17:41:01.041]      // while-condition  =>  TRUE
[17:41:01.041]      // while "1"  (timeout="50000")
[17:41:01.042]      // while-condition  =>  TRUE
[17:41:01.042]      // while "1"  (timeout="50000")
[17:41:01.042]      // while-condition  =>  TRUE
[17:41:01.043]      // while "1"  (timeout="50000")
[17:41:01.043]      // while-condition  =>  TRUE
[17:41:01.043]      // while "1"  (timeout="50000")
[17:41:01.043]      // while-condition  =>  TRUE
[17:41:01.044]      // while "1"  (timeout="50000")
[17:41:01.044]      // while-condition  =>  TRUE
[17:41:01.044]      // while "1"  (timeout="50000")
[17:41:01.045]      // while-condition  =>  TRUE
[17:41:01.045]      // while "1"  (timeout="50000")
[17:41:01.045]      // while-condition  =>  TRUE
[17:41:01.045]      // while "1"  (timeout="50000")
[17:41:01.045]      // while-condition  =>  TRUE
[17:41:01.045]      // while "1"  (timeout="50000")
[17:41:01.045]      // while-condition  =>  TRUE
[17:41:01.045]      // while "1"  (timeout="50000")
[17:41:01.047]      // while-condition  =>  TRUE
[17:41:01.047]      // while "1"  (timeout="50000")
[17:41:01.047]      // while-condition  =>  TRUE
[17:41:01.047]      // while "1"  (timeout="50000")
[17:41:01.047]      // while-condition  =>  TRUE
[17:41:01.048]      // while "1"  (timeout="50000")
[17:41:01.048]      // while-condition  =>  TRUE
[17:41:01.048]      // while "1"  (timeout="50000")
[17:41:01.048]      // while-condition  =>  TRUE
[17:41:01.048]      // while "1"  (timeout="50000")
[17:41:01.049]      // while-condition  =>  TRUE
[17:41:01.049]      // while "1"  (timeout="50000")
[17:41:01.049]      // while-condition  =>  TRUE
[17:41:01.049]      // while "1"  (timeout="50000")
[17:41:01.049]      // while-condition  =>  TRUE
[17:41:01.050]      // while "1"  (timeout="50000")
[17:41:01.050]      // while-condition  =>  TRUE
[17:41:01.050]      // while "1"  (timeout="50000")
[17:41:01.050]      // while-condition  =>  TRUE
[17:41:01.050]      // while "1"  (timeout="50000")
[17:41:01.051]      // while-condition  =>  TRUE
[17:41:01.051]      // while "1"  (timeout="50000")
[17:41:01.051]      // while-condition  =>  TRUE
[17:41:01.051]      // while "1"  (timeout="50000")
[17:41:01.051]      // while-condition  =>  TRUE
[17:41:01.051]      // while "1"  (timeout="50000")
[17:41:01.052]      // while-condition  =>  TRUE
[17:41:01.052]      // while "1"  (timeout="50000")
[17:41:01.052]      // while-condition  =>  TRUE
[17:41:01.052]      // while "1"  (timeout="50000")
[17:41:01.052]      // while-condition  =>  TRUE
[17:41:01.052]      // while "1"  (timeout="50000")
[17:41:01.053]      // while-condition  =>  TRUE
[17:41:01.053]      // while "1"  (timeout="50000")
[17:41:01.053]      // while-condition  =>  TRUE
[17:41:01.053]      // while "1"  (timeout="50000")
[17:41:01.054]      // while-condition  =>  TRUE
[17:41:01.054]      // while "1"  (timeout="50000")
[17:41:01.054]      // while-condition  =>  TRUE
[17:41:01.054]      // while "1"  (timeout="50000")
[17:41:01.054]      // while-condition  =>  TRUE
[17:41:01.055]      // while "1"  (timeout="50000")
[17:41:01.055]      // while-condition  =>  TRUE
[17:41:01.055]      // while "1"  (timeout="50000")
[17:41:01.055]      // while-condition  =>  TRUE
[17:41:01.055]      // while "1"  (timeout="50000")
[17:41:01.056]      // while-condition  =>  TRUE
[17:41:01.056]      // while "1"  (timeout="50000")
[17:41:01.056]      // while-condition  =>  TRUE
[17:41:01.057]      // while "1"  (timeout="50000")
[17:41:01.057]      // while-condition  =>  TRUE
[17:41:01.057]      // while "1"  (timeout="50000")
[17:41:01.057]      // while-condition  =>  TRUE
[17:41:01.057]      // while "1"  (timeout="50000")
[17:41:01.057]      // while-condition  =>  TRUE
[17:41:01.058]      // while "1"  (timeout="50000")
[17:41:01.058]      // while-condition  =>  TRUE
[17:41:01.059]      // while "1"  (timeout="50000")
[17:41:01.059]      // while-condition  =>  TRUE
[17:41:01.059]      // while "1"  (timeout="50000")
[17:41:01.059]      // while-condition  =>  TRUE
[17:41:01.059]      // while "1"  (timeout="50000")
[17:41:01.060]      // while-condition  =>  TRUE
[17:41:01.060]      // while "1"  (timeout="50000")
[17:41:01.060]      // while-condition  =>  TRUE
[17:41:01.060]      // while "1"  (timeout="50000")
[17:41:01.060]      // while-condition  =>  TRUE
[17:41:01.060]      // while "1"  (timeout="50000")
[17:41:01.061]      // while-condition  =>  TRUE
[17:41:01.061]      // while "1"  (timeout="50000")
[17:41:01.061]      // while-condition  =>  TRUE
[17:41:01.061]      // while "1"  (timeout="50000")
[17:41:01.061]      // while-condition  =>  TRUE
[17:41:01.062]      // while "1"  (timeout="50000")
[17:41:01.062]      // while-condition  =>  TRUE
[17:41:01.062]      // while "1"  (timeout="50000")
[17:41:01.062]      // while-condition  =>  TRUE
[17:41:01.062]      // while "1"  (timeout="50000")
[17:41:01.063]      // while-condition  =>  TRUE
[17:41:01.063]      // while "1"  (timeout="50000")
[17:41:01.063]      // while-condition  =>  TRUE
[17:41:01.063]      // while "1"  (timeout="50000")
[17:41:01.063]      // while-condition  =>  TRUE
[17:41:01.064]      // while "1"  (timeout="50000")
[17:41:01.064]      // while-condition  =>  TRUE
[17:41:01.064]      // while "1"  (timeout="50000")
[17:41:01.064]      // while-condition  =>  TRUE
[17:41:01.064]      // while "1"  (timeout="50000")
[17:41:01.065]      // while-condition  =>  TRUE
[17:41:01.065]      // while "1"  (timeout="50000")
[17:41:01.065]      // while-condition  =>  TRUE
[17:41:01.065]      // while "1"  (timeout="50000")
[17:41:01.065]      // while-condition  =>  TRUE
[17:41:01.065]      // while "1"  (timeout="50000")
[17:41:01.065]      // while-condition  =>  TRUE
[17:41:01.065]      // while "1"  (timeout="50000")
[17:41:01.065]      // while-condition  =>  TRUE
[17:41:01.066]      // while "1"  (timeout="50000")
[17:41:01.066]      // while-condition  =>  TRUE
[17:41:01.066]      // while "1"  (timeout="50000")
[17:41:01.066]      // while-condition  =>  TRUE
[17:41:01.066]      // while "1"  (timeout="50000")
[17:41:01.066]      // while-condition  =>  TRUE
[17:41:01.067]      // while "1"  (timeout="50000")
[17:41:01.067]      // while-condition  =>  TRUE
[17:41:01.067]      // while "1"  (timeout="50000")
[17:41:01.067]      // while-condition  =>  TRUE
[17:41:01.067]      // while "1"  (timeout="50000")
[17:41:01.068]      // while-condition  =>  TRUE
[17:41:01.069]      // while "1"  (timeout="50000")
[17:41:01.069]      // while-condition  =>  TRUE
[17:41:01.069]      // while "1"  (timeout="50000")
[17:41:01.069]      // while-condition  =>  TRUE
[17:41:01.069]      // while "1"  (timeout="50000")
[17:41:01.070]      // while-condition  =>  TRUE
[17:41:01.070]      // while "1"  (timeout="50000")
[17:41:01.070]      // while-condition  =>  TRUE
[17:41:01.070]      // while "1"  (timeout="50000")
[17:41:01.070]      // while-condition  =>  TRUE
[17:41:01.070]      // while "1"  (timeout="50000")
[17:41:01.070]      // while-condition  =>  TRUE
[17:41:01.070]      // while "1"  (timeout="50000")
[17:41:01.070]      // while-condition  =>  TRUE
[17:41:01.070]      // while "1"  (timeout="50000")
[17:41:01.071]      // while-condition  =>  TRUE
[17:41:01.071]      // while "1"  (timeout="50000")
[17:41:01.071]      // while-condition  =>  TRUE
[17:41:01.071]      // while "1"  (timeout="50000")
[17:41:01.071]      // while-condition  =>  TRUE
[17:41:01.072]      // while "1"  (timeout="50000")
[17:41:01.072]      // while-condition  =>  TRUE
[17:41:01.072]      // while "1"  (timeout="50000")
[17:41:01.072]      // while-condition  =>  TRUE
[17:41:01.072]      // while "1"  (timeout="50000")
[17:41:01.074]      // while-condition  =>  TRUE
[17:41:01.074]      // while "1"  (timeout="50000")
[17:41:01.074]      // while-condition  =>  TRUE
[17:41:01.074]      // while "1"  (timeout="50000")
[17:41:01.074]      // while-condition  =>  TRUE
[17:41:01.075]      // while "1"  (timeout="50000")
[17:41:01.075]      // while-condition  =>  TRUE
[17:41:01.075]      // while "1"  (timeout="50000")
[17:41:01.075]      // while-condition  =>  TRUE
[17:41:01.075]      // while "1"  (timeout="50000")
[17:41:01.076]      // while-condition  =>  TRUE
[17:41:01.076]      // while "1"  (timeout="50000")
[17:41:01.076]      // while-condition  =>  TRUE
[17:41:01.076]      // while "1"  (timeout="50000")
[17:41:01.076]      // while-condition  =>  TRUE
[17:41:01.077]      // while "1"  (timeout="50000")
[17:41:01.077]      // while-condition  =>  TRUE
[17:41:01.077]      // while "1"  (timeout="50000")
[17:41:01.077]      // while-condition  =>  TRUE
[17:41:01.077]      // while "1"  (timeout="50000")
[17:41:01.078]      // while-condition  =>  TRUE
[17:41:01.078]      // while "1"  (timeout="50000")
[17:41:01.078]      // while-condition  =>  TRUE
[17:41:01.078]      // while "1"  (timeout="50000")
[17:41:01.078]      // while-condition  =>  TRUE
[17:41:01.079]      // while "1"  (timeout="50000")
[17:41:01.079]      // while-condition  =>  TRUE
[17:41:01.079]      // while "1"  (timeout="50000")
[17:41:01.079]      // while-condition  =>  TRUE
[17:41:01.079]      // while "1"  (timeout="50000")
[17:41:01.080]      // while-condition  =>  TRUE
[17:41:01.080]      // while "1"  (timeout="50000")
[17:41:01.080]      // while-condition  =>  TRUE
[17:41:01.080]      // while "1"  (timeout="50000")
[17:41:01.080]      // while-condition  =>  TRUE
[17:41:01.081]      // while "1"  (timeout="50000")
[17:41:01.081]      // while-condition  =>  TRUE
[17:41:01.081]      // while "1"  (timeout="50000")
[17:41:01.081]      // while-condition  =>  TRUE
[17:41:01.081]      // while "1"  (timeout="50000")
[17:41:01.081]      // while-condition  =>  TRUE
[17:41:01.081]      // while "1"  (timeout="50000")
[17:41:01.081]      // while-condition  =>  TRUE
[17:41:01.081]      // while "1"  (timeout="50000")
[17:41:01.081]      // while-condition  =>  TRUE
[17:41:01.082]      // while "1"  (timeout="50000")
[17:41:01.082]      // while-condition  =>  TRUE
[17:41:01.082]      // while "1"  (timeout="50000")
[17:41:01.082]      // while-condition  =>  TRUE
[17:41:01.082]      // while "1"  (timeout="50000")
[17:41:01.083]      // while-condition  =>  TRUE
[17:41:01.083]      // while "1"  (timeout="50000")
[17:41:01.083]      // while-condition  =>  TRUE
[17:41:01.083]      // while "1"  (timeout="50000")
[17:41:01.083]      // while-condition  =>  TRUE
[17:41:01.084]      // while "1"  (timeout="50000")
[17:41:01.085]      // while-condition  =>  TRUE
[17:41:01.085]      // while "1"  (timeout="50000")
[17:41:01.085]      // while-condition  =>  TRUE
[17:41:01.085]      // while "1"  (timeout="50000")
[17:41:01.085]      // while-condition  =>  TRUE
[17:41:01.086]      // while "1"  (timeout="50000")
[17:41:01.086]      // while-condition  =>  TRUE
[17:41:01.086]      // while "1"  (timeout="50000")
[17:41:01.086]      // while-condition  =>  TRUE
[17:41:01.086]      // while "1"  (timeout="50000")
[17:41:01.087]      // while-condition  =>  TRUE
[17:41:01.087]      // while "1"  (timeout="50000")
[17:41:01.087]      // while-condition  =>  TRUE
[17:41:01.087]      // while "1"  (timeout="50000")
[17:41:01.087]      // while-condition  =>  TRUE
[17:41:01.088]      // while "1"  (timeout="50000")
[17:41:01.088]      // while-condition  =>  TRUE
[17:41:01.088]      // while "1"  (timeout="50000")
[17:41:01.088]      // while-condition  =>  TRUE
[17:41:01.088]      // while "1"  (timeout="50000")
[17:41:01.089]      // while-condition  =>  TRUE
[17:41:01.089]      // while "1"  (timeout="50000")
[17:41:01.089]      // while-condition  =>  TRUE
[17:41:01.089]      // while "1"  (timeout="50000")
[17:41:01.089]      // while-condition  =>  TRUE
[17:41:01.090]      // while "1"  (timeout="50000")
[17:41:01.090]      // while-condition  =>  TRUE
[17:41:01.090]      // while "1"  (timeout="50000")
[17:41:01.090]      // while-condition  =>  TRUE
[17:41:01.090]      // while "1"  (timeout="50000")
[17:41:01.091]      // while-condition  =>  TRUE
[17:41:01.091]      // while "1"  (timeout="50000")
[17:41:01.091]      // while-condition  =>  TRUE
[17:41:01.091]      // while "1"  (timeout="50000")
[17:41:01.091]      // while-condition  =>  TRUE
[17:41:01.092]      // while "1"  (timeout="50000")
[17:41:01.092]      // while-condition  =>  TRUE
[17:41:01.092]      // while "1"  (timeout="50000")
[17:41:01.092]      // while-condition  =>  TRUE
[17:41:01.092]      // while "1"  (timeout="50000")
[17:41:01.092]      // while-condition  =>  TRUE
[17:41:01.092]      // while "1"  (timeout="50000")
[17:41:01.092]      // while-condition  =>  TRUE
[17:41:01.092]      // while "1"  (timeout="50000")
[17:41:01.093]      // while-condition  =>  TRUE
[17:41:01.093]      // while "1"  (timeout="50000")
[17:41:01.093]      // while-condition  =>  TRUE
[17:41:01.093]      // while "1"  (timeout="50000")
[17:41:01.093]      // while-condition  =>  TRUE
[17:41:01.094]      // while "1"  (timeout="50000")
[17:41:01.094]      // while-condition  =>  TRUE
[17:41:01.094]      // while "1"  (timeout="50000")
[17:41:01.094]      // while-condition  =>  TRUE
[17:41:01.094]      // while "1"  (timeout="50000")
[17:41:01.094]      // while-condition  =>  TRUE
[17:41:01.096]      // while "1"  (timeout="50000")
[17:41:01.096]      // while-condition  =>  TRUE
[17:41:01.096]      // while "1"  (timeout="50000")
[17:41:01.096]      // while-condition  =>  TRUE
[17:41:01.096]      // while "1"  (timeout="50000")
[17:41:01.096]      // while-condition  =>  TRUE
[17:41:01.096]      // while "1"  (timeout="50000")
[17:41:01.096]      // while-condition  =>  TRUE
[17:41:01.096]      // while "1"  (timeout="50000")
[17:41:01.096]      // while-condition  =>  TRUE
[17:41:01.097]      // while "1"  (timeout="50000")
[17:41:01.098]      // while-condition  =>  TRUE
[17:41:01.098]      // while "1"  (timeout="50000")
[17:41:01.098]      // while-condition  =>  TRUE
[17:41:01.098]      // while "1"  (timeout="50000")
[17:41:01.098]      // while-condition  =>  TRUE
[17:41:01.098]      // while "1"  (timeout="50000")
[17:41:01.098]      // while-condition  =>  TRUE
[17:41:01.098]      // while "1"  (timeout="50000")
[17:41:01.098]      // while-condition  =>  TRUE
[17:41:01.099]      // while "1"  (timeout="50000")
[17:41:01.099]      // while  =>  TIMEOUT
[17:41:01.099]      // end while "1"
[17:41:01.099]    </control>
[17:41:01.099]    <block atomic="false" info="">
[17:41:01.100]      DAP_SWJ_Pins(nReset, nReset, 0);
[17:41:01.110]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0xFF]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=1, TDO=1, nTRST=1, nRESET=1)
[17:41:01.112]    </block>
[17:41:01.113]  </sequence>
[17:41:01.113]  
[11:01:17.093]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[11:01:17.093]  
[11:01:17.129]  <debugvars>
[11:01:17.130]    // Pre-defined
[11:01:17.130]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[11:01:17.137]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[11:01:17.137]    __dp=0x00000000
[11:01:17.138]    __ap=0x00000000
[11:01:17.138]    __traceout=0x00000000      (Trace Disabled)
[11:01:17.139]    __errorcontrol=0x00000000  (Skip Errors="False")
[11:01:17.139]    __FlashAddr=0x00000000
[11:01:17.140]    __FlashLen=0x00000000
[11:01:17.140]    __FlashArg=0x00000000
[11:01:17.140]    __FlashOp=0x00000000
[11:01:17.141]    __Result=0x00000000
[11:01:17.141]  </debugvars>
[11:01:17.141]  
[11:01:17.142]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[11:01:17.142]    <block atomic="false" info="">
[11:01:17.142]      __var nReset      = 0x80;
[11:01:17.143]        // -> [nReset <= 0x00000080]
[11:01:17.143]      DAP_SWJ_Pins(0x00, nReset, 0);
[11:01:17.145]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[11:01:17.146]    </block>
[11:01:17.146]    <control if="" while="1" timeout="50000" info="">
[11:01:17.146]      // while "1"  (timeout="50000")
[11:01:17.147]      // while-condition  =>  TRUE
[11:01:17.147]      // while "1"  (timeout="50000")
[11:01:17.147]      // while-condition  =>  TRUE
[11:01:17.148]      // while "1"  (timeout="50000")
[11:01:17.148]      // while-condition  =>  TRUE
[11:01:17.148]      // while "1"  (timeout="50000")
[11:01:17.148]      // while-condition  =>  TRUE
[11:01:17.149]      // while "1"  (timeout="50000")
[11:01:17.149]      // while-condition  =>  TRUE
[11:01:17.149]      // while "1"  (timeout="50000")
[11:01:17.150]      // while-condition  =>  TRUE
[11:01:17.150]      // while "1"  (timeout="50000")
[11:01:17.150]      // while-condition  =>  TRUE
[11:01:17.150]      // while "1"  (timeout="50000")
[11:01:17.150]      // while-condition  =>  TRUE
[11:01:17.151]      // while "1"  (timeout="50000")
[11:01:17.151]      // while-condition  =>  TRUE
[11:01:17.151]      // while "1"  (timeout="50000")
[11:01:17.151]      // while-condition  =>  TRUE
[11:01:17.152]      // while "1"  (timeout="50000")
[11:01:17.152]      // while-condition  =>  TRUE
[11:01:17.152]      // while "1"  (timeout="50000")
[11:01:17.153]      // while-condition  =>  TRUE
[11:01:17.153]      // while "1"  (timeout="50000")
[11:01:17.153]      // while-condition  =>  TRUE
[11:01:17.153]      // while "1"  (timeout="50000")
[11:01:17.154]      // while-condition  =>  TRUE
[11:01:17.154]      // while "1"  (timeout="50000")
[11:01:17.154]      // while-condition  =>  TRUE
[11:01:17.154]      // while "1"  (timeout="50000")
[11:01:17.154]      // while-condition  =>  TRUE
[11:01:17.155]      // while "1"  (timeout="50000")
[11:01:17.155]      // while-condition  =>  TRUE
[11:01:17.155]      // while "1"  (timeout="50000")
[11:01:17.155]      // while-condition  =>  TRUE
[11:01:17.155]      // while "1"  (timeout="50000")
[11:01:17.156]      // while-condition  =>  TRUE
[11:01:17.156]      // while "1"  (timeout="50000")
[11:01:17.156]      // while-condition  =>  TRUE
[11:01:17.156]      // while "1"  (timeout="50000")
[11:01:17.157]      // while-condition  =>  TRUE
[11:01:17.157]      // while "1"  (timeout="50000")
[11:01:17.157]      // while-condition  =>  TRUE
[11:01:17.157]      // while "1"  (timeout="50000")
[11:01:17.157]      // while-condition  =>  TRUE
[11:01:17.157]      // while "1"  (timeout="50000")
[11:01:17.158]      // while-condition  =>  TRUE
[11:01:17.158]      // while "1"  (timeout="50000")
[11:01:17.158]      // while-condition  =>  TRUE
[11:01:17.158]      // while "1"  (timeout="50000")
[11:01:17.158]      // while-condition  =>  TRUE
[11:01:17.159]      // while "1"  (timeout="50000")
[11:01:17.159]      // while-condition  =>  TRUE
[11:01:17.159]      // while "1"  (timeout="50000")
[11:01:17.160]      // while-condition  =>  TRUE
[11:01:17.160]      // while "1"  (timeout="50000")
[11:01:17.160]      // while-condition  =>  TRUE
[11:01:17.160]      // while "1"  (timeout="50000")
[11:01:17.161]      // while-condition  =>  TRUE
[11:01:17.161]      // while "1"  (timeout="50000")
[11:01:17.161]      // while-condition  =>  TRUE
[11:01:17.161]      // while "1"  (timeout="50000")
[11:01:17.161]      // while-condition  =>  TRUE
[11:01:17.162]      // while "1"  (timeout="50000")
[11:01:17.162]      // while-condition  =>  TRUE
[11:01:17.162]      // while "1"  (timeout="50000")
[11:01:17.162]      // while-condition  =>  TRUE
[11:01:17.162]      // while "1"  (timeout="50000")
[11:01:17.163]      // while-condition  =>  TRUE
[11:01:17.163]      // while "1"  (timeout="50000")
[11:01:17.163]      // while-condition  =>  TRUE
[11:01:17.163]      // while "1"  (timeout="50000")
[11:01:17.163]      // while-condition  =>  TRUE
[11:01:17.164]      // while "1"  (timeout="50000")
[11:01:17.164]      // while-condition  =>  TRUE
[11:01:17.164]      // while "1"  (timeout="50000")
[11:01:17.164]      // while-condition  =>  TRUE
[11:01:17.164]      // while "1"  (timeout="50000")
[11:01:17.165]      // while-condition  =>  TRUE
[11:01:17.165]      // while "1"  (timeout="50000")
[11:01:17.165]      // while-condition  =>  TRUE
[11:01:17.165]      // while "1"  (timeout="50000")
[11:01:17.165]      // while-condition  =>  TRUE
[11:01:17.166]      // while "1"  (timeout="50000")
[11:01:17.166]      // while-condition  =>  TRUE
[11:01:17.166]      // while "1"  (timeout="50000")
[11:01:17.166]      // while-condition  =>  TRUE
[11:01:17.166]      // while "1"  (timeout="50000")
[11:01:17.167]      // while-condition  =>  TRUE
[11:01:17.167]      // while "1"  (timeout="50000")
[11:01:17.167]      // while-condition  =>  TRUE
[11:01:17.167]      // while "1"  (timeout="50000")
[11:01:17.167]      // while-condition  =>  TRUE
[11:01:17.168]      // while "1"  (timeout="50000")
[11:01:17.168]      // while-condition  =>  TRUE
[11:01:17.168]      // while "1"  (timeout="50000")
[11:01:17.168]      // while-condition  =>  TRUE
[11:01:17.168]      // while "1"  (timeout="50000")
[11:01:17.169]      // while-condition  =>  TRUE
[11:01:17.169]      // while "1"  (timeout="50000")
[11:01:17.169]      // while-condition  =>  TRUE
[11:01:17.169]      // while "1"  (timeout="50000")
[11:01:17.169]      // while-condition  =>  TRUE
[11:01:17.170]      // while "1"  (timeout="50000")
[11:01:17.170]      // while-condition  =>  TRUE
[11:01:17.170]      // while "1"  (timeout="50000")
[11:01:17.170]      // while-condition  =>  TRUE
[11:01:17.174]      // while "1"  (timeout="50000")
[11:01:17.174]      // while-condition  =>  TRUE
[11:01:17.175]      // while "1"  (timeout="50000")
[11:01:17.175]      // while-condition  =>  TRUE
[11:01:17.175]      // while "1"  (timeout="50000")
[11:01:17.176]      // while-condition  =>  TRUE
[11:01:17.176]      // while "1"  (timeout="50000")
[11:01:17.177]      // while-condition  =>  TRUE
[11:01:17.177]      // while "1"  (timeout="50000")
[11:01:17.178]      // while-condition  =>  TRUE
[11:01:17.178]      // while "1"  (timeout="50000")
[11:01:17.178]      // while-condition  =>  TRUE
[11:01:17.179]      // while "1"  (timeout="50000")
[11:01:17.180]      // while-condition  =>  TRUE
[11:01:17.180]      // while "1"  (timeout="50000")
[11:01:17.180]      // while-condition  =>  TRUE
[11:01:17.181]      // while "1"  (timeout="50000")
[11:01:17.181]      // while-condition  =>  TRUE
[11:01:17.181]      // while "1"  (timeout="50000")
[11:01:17.182]      // while-condition  =>  TRUE
[11:01:17.182]      // while "1"  (timeout="50000")
[11:01:17.182]      // while-condition  =>  TRUE
[11:01:17.182]      // while "1"  (timeout="50000")
[11:01:17.183]      // while-condition  =>  TRUE
[11:01:17.183]      // while "1"  (timeout="50000")
[11:01:17.183]      // while-condition  =>  TRUE
[11:01:17.184]      // while "1"  (timeout="50000")
[11:01:17.184]      // while-condition  =>  TRUE
[11:01:17.184]      // while "1"  (timeout="50000")
[11:01:17.184]      // while-condition  =>  TRUE
[11:01:17.185]      // while "1"  (timeout="50000")
[11:01:17.185]      // while-condition  =>  TRUE
[11:01:17.185]      // while "1"  (timeout="50000")
[11:01:17.185]      // while-condition  =>  TRUE
[11:01:17.186]      // while "1"  (timeout="50000")
[11:01:17.186]      // while-condition  =>  TRUE
[11:01:17.186]      // while "1"  (timeout="50000")
[11:01:17.187]      // while-condition  =>  TRUE
[11:01:17.187]      // while "1"  (timeout="50000")
[11:01:17.187]      // while-condition  =>  TRUE
[11:01:17.187]      // while "1"  (timeout="50000")
[11:01:17.188]      // while-condition  =>  TRUE
[11:01:17.188]      // while "1"  (timeout="50000")
[11:01:17.188]      // while-condition  =>  TRUE
[11:01:17.188]      // while "1"  (timeout="50000")
[11:01:17.189]      // while-condition  =>  TRUE
[11:01:17.189]      // while "1"  (timeout="50000")
[11:01:17.189]      // while-condition  =>  TRUE
[11:01:17.189]      // while "1"  (timeout="50000")
[11:01:17.190]      // while-condition  =>  TRUE
[11:01:17.190]      // while "1"  (timeout="50000")
[11:01:17.190]      // while-condition  =>  TRUE
[11:01:17.190]      // while "1"  (timeout="50000")
[11:01:17.190]      // while-condition  =>  TRUE
[11:01:17.191]      // while "1"  (timeout="50000")
[11:01:17.191]      // while-condition  =>  TRUE
[11:01:17.191]      // while "1"  (timeout="50000")
[11:01:17.191]      // while-condition  =>  TRUE
[11:01:17.192]      // while "1"  (timeout="50000")
[11:01:17.192]      // while-condition  =>  TRUE
[11:01:17.192]      // while "1"  (timeout="50000")
[11:01:17.192]      // while-condition  =>  TRUE
[11:01:17.192]      // while "1"  (timeout="50000")
[11:01:17.193]      // while-condition  =>  TRUE
[11:01:17.193]      // while "1"  (timeout="50000")
[11:01:17.193]      // while-condition  =>  TRUE
[11:01:17.193]      // while "1"  (timeout="50000")
[11:01:17.193]      // while-condition  =>  TRUE
[11:01:17.194]      // while "1"  (timeout="50000")
[11:01:17.194]      // while-condition  =>  TRUE
[11:01:17.194]      // while "1"  (timeout="50000")
[11:01:17.194]      // while-condition  =>  TRUE
[11:01:17.194]      // while "1"  (timeout="50000")
[11:01:17.195]      // while-condition  =>  TRUE
[11:01:17.195]      // while "1"  (timeout="50000")
[11:01:17.195]      // while-condition  =>  TRUE
[11:01:17.195]      // while "1"  (timeout="50000")
[11:01:17.195]      // while-condition  =>  TRUE
[11:01:17.196]      // while "1"  (timeout="50000")
[11:01:17.196]      // while  =>  TIMEOUT
[11:01:17.196]      // end while "1"
[11:01:17.196]    </control>
[11:01:17.196]    <block atomic="false" info="">
[11:01:17.197]      DAP_SWJ_Pins(nReset, nReset, 0);
[11:01:17.198]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[11:01:17.199]    </block>
[11:01:17.199]    <control if="" while="1" timeout="10000" info="">
[11:01:17.199]      // while "1"  (timeout="10000")
[11:01:17.199]      // while-condition  =>  TRUE
[11:01:17.199]      // while "1"  (timeout="10000")
[11:01:17.200]      // while-condition  =>  TRUE
[11:01:17.200]      // while "1"  (timeout="10000")
[11:01:17.200]      // while-condition  =>  TRUE
[11:01:17.200]      // while "1"  (timeout="10000")
[11:01:17.201]      // while-condition  =>  TRUE
[11:01:17.201]      // while "1"  (timeout="10000")
[11:01:17.201]      // while-condition  =>  TRUE
[11:01:17.201]      // while "1"  (timeout="10000")
[11:01:17.201]      // while-condition  =>  TRUE
[11:01:17.202]      // while "1"  (timeout="10000")
[11:01:17.202]      // while-condition  =>  TRUE
[11:01:17.202]      // while "1"  (timeout="10000")
[11:01:17.202]      // while-condition  =>  TRUE
[11:01:17.202]      // while "1"  (timeout="10000")
[11:01:17.202]      // while-condition  =>  TRUE
[11:01:17.202]      // while "1"  (timeout="10000")
[11:01:17.202]      // while-condition  =>  TRUE
[11:01:17.202]      // while "1"  (timeout="10000")
[11:01:17.203]      // while-condition  =>  TRUE
[11:01:17.203]      // while "1"  (timeout="10000")
[11:01:17.203]      // while-condition  =>  TRUE
[11:01:17.203]      // while "1"  (timeout="10000")
[11:01:17.204]      // while-condition  =>  TRUE
[11:01:17.204]      // while "1"  (timeout="10000")
[11:01:17.204]      // while-condition  =>  TRUE
[11:01:17.204]      // while "1"  (timeout="10000")
[11:01:17.205]      // while-condition  =>  TRUE
[11:01:17.205]      // while "1"  (timeout="10000")
[11:01:17.205]      // while-condition  =>  TRUE
[11:01:17.205]      // while "1"  (timeout="10000")
[11:01:17.205]      // while-condition  =>  TRUE
[11:01:17.206]      // while "1"  (timeout="10000")
[11:01:17.206]      // while-condition  =>  TRUE
[11:01:17.206]      // while "1"  (timeout="10000")
[11:01:17.206]      // while-condition  =>  TRUE
[11:01:17.207]      // while "1"  (timeout="10000")
[11:01:17.207]      // while-condition  =>  TRUE
[11:01:17.207]      // while "1"  (timeout="10000")
[11:01:17.207]      // while-condition  =>  TRUE
[11:01:17.209]      // while "1"  (timeout="10000")
[11:01:17.211]      // while-condition  =>  TRUE
[11:01:17.212]      // while "1"  (timeout="10000")
[11:01:17.212]      // while  =>  TIMEOUT
[11:01:17.213]      // end while "1"
[11:01:17.213]    </control>
[11:01:17.213]    <block atomic="true" info="">
[11:01:17.256]  
[11:01:17.256]  ! W001 : No atomic sequence support in debug unit
[11:01:17.256]  
[11:01:17.259]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[11:01:17.261]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[11:01:17.261]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[11:01:17.264]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[11:01:17.265]    </block>
[11:01:17.265]    <block atomic="false" info="">
[11:01:17.265]      __errorcontrol = 0x00000001;
[11:01:17.266]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[11:01:17.266]      ReadDP(0x0);
[11:01:17.274]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[11:01:17.284]      __errorcontrol = 0x00000000;
[11:01:17.285]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[11:01:17.285]    </block>
[11:01:17.286]  </sequence>
[11:01:17.286]  
[11:01:17.286]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[11:01:17.286]  
[11:01:17.287]  <debugvars>
[11:01:17.287]    // Pre-defined
[11:01:17.287]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[11:01:17.288]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[11:01:17.288]    __dp=0x00000000
[11:01:17.288]    __ap=0x00000000
[11:01:17.289]    __traceout=0x00000000      (Trace Disabled)
[11:01:17.289]    __errorcontrol=0x00000000  (Skip Errors="False")
[11:01:17.289]    __FlashAddr=0x00000000
[11:01:17.290]    __FlashLen=0x00000000
[11:01:17.290]    __FlashArg=0x00000000
[11:01:17.290]    __FlashOp=0x00000000
[11:01:17.291]    __Result=0x00000000
[11:01:17.291]  </debugvars>
[11:01:17.291]  
[11:01:17.292]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[11:01:17.292]  </sequence>
[11:01:17.292]  
[11:01:51.594]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[11:01:51.594]  
[11:01:51.594]  <debugvars>
[11:01:51.595]    // Pre-defined
[11:01:51.595]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[11:01:51.595]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[11:01:51.596]    __dp=0x00000000
[11:01:51.596]    __ap=0x00000000
[11:01:51.596]    __traceout=0x00000000      (Trace Disabled)
[11:01:51.596]    __errorcontrol=0x00000000  (Skip Errors="False")
[11:01:51.596]    __FlashAddr=0x00000000
[11:01:51.597]    __FlashLen=0x00000000
[11:01:51.597]    __FlashArg=0x00000000
[11:01:51.597]    __FlashOp=0x00000000
[11:01:51.598]    __Result=0x00000000
[11:01:51.598]  </debugvars>
[11:01:51.598]  
[11:01:51.598]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[11:01:51.598]    <block atomic="false" info="">
[11:01:51.599]      __var nReset      = 0x80;
[11:01:51.599]        // -> [nReset <= 0x00000080]
[11:01:51.599]      DAP_SWJ_Pins(0x00, nReset, 0);
[11:01:51.601]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[11:01:51.601]    </block>
[11:01:51.602]    <control if="" while="1" timeout="50000" info="">
[11:01:51.602]      // while "1"  (timeout="50000")
[11:01:51.602]      // while-condition  =>  TRUE
[11:01:51.602]      // while "1"  (timeout="50000")
[11:01:51.602]      // while-condition  =>  TRUE
[11:01:51.603]      // while "1"  (timeout="50000")
[11:01:51.603]      // while-condition  =>  TRUE
[11:01:51.603]      // while "1"  (timeout="50000")
[11:01:51.603]      // while-condition  =>  TRUE
[11:01:51.603]      // while "1"  (timeout="50000")
[11:01:51.604]      // while-condition  =>  TRUE
[11:01:51.604]      // while "1"  (timeout="50000")
[11:01:51.604]      // while-condition  =>  TRUE
[11:01:51.604]      // while "1"  (timeout="50000")
[11:01:51.604]      // while-condition  =>  TRUE
[11:01:51.605]      // while "1"  (timeout="50000")
[11:01:51.605]      // while-condition  =>  TRUE
[11:01:51.605]      // while "1"  (timeout="50000")
[11:01:51.605]      // while-condition  =>  TRUE
[11:01:51.605]      // while "1"  (timeout="50000")
[11:01:51.606]      // while-condition  =>  TRUE
[11:01:51.606]      // while "1"  (timeout="50000")
[11:01:51.606]      // while-condition  =>  TRUE
[11:01:51.606]      // while "1"  (timeout="50000")
[11:01:51.606]      // while-condition  =>  TRUE
[11:01:51.607]      // while "1"  (timeout="50000")
[11:01:51.607]      // while-condition  =>  TRUE
[11:01:51.607]      // while "1"  (timeout="50000")
[11:01:51.607]      // while-condition  =>  TRUE
[11:01:51.607]      // while "1"  (timeout="50000")
[11:01:51.608]      // while-condition  =>  TRUE
[11:01:51.608]      // while "1"  (timeout="50000")
[11:01:51.608]      // while-condition  =>  TRUE
[11:01:51.608]      // while "1"  (timeout="50000")
[11:01:51.608]      // while-condition  =>  TRUE
[11:01:51.609]      // while "1"  (timeout="50000")
[11:01:51.609]      // while-condition  =>  TRUE
[11:01:51.609]      // while "1"  (timeout="50000")
[11:01:51.609]      // while-condition  =>  TRUE
[11:01:51.610]      // while "1"  (timeout="50000")
[11:01:51.610]      // while-condition  =>  TRUE
[11:01:51.610]      // while "1"  (timeout="50000")
[11:01:51.610]      // while-condition  =>  TRUE
[11:01:51.610]      // while "1"  (timeout="50000")
[11:01:51.611]      // while-condition  =>  TRUE
[11:01:51.611]      // while "1"  (timeout="50000")
[11:01:51.611]      // while-condition  =>  TRUE
[11:01:51.611]      // while "1"  (timeout="50000")
[11:01:51.612]      // while-condition  =>  TRUE
[11:01:51.612]      // while "1"  (timeout="50000")
[11:01:51.612]      // while-condition  =>  TRUE
[11:01:51.612]      // while "1"  (timeout="50000")
[11:01:51.613]      // while-condition  =>  TRUE
[11:01:51.614]      // while "1"  (timeout="50000")
[11:01:51.614]      // while-condition  =>  TRUE
[11:01:51.614]      // while "1"  (timeout="50000")
[11:01:51.614]      // while-condition  =>  TRUE
[11:01:51.615]      // while "1"  (timeout="50000")
[11:01:51.615]      // while-condition  =>  TRUE
[11:01:51.615]      // while "1"  (timeout="50000")
[11:01:51.616]      // while-condition  =>  TRUE
[11:01:51.616]      // while "1"  (timeout="50000")
[11:01:51.616]      // while-condition  =>  TRUE
[11:01:51.616]      // while "1"  (timeout="50000")
[11:01:51.617]      // while-condition  =>  TRUE
[11:01:51.617]      // while "1"  (timeout="50000")
[11:01:51.617]      // while-condition  =>  TRUE
[11:01:51.618]      // while "1"  (timeout="50000")
[11:01:51.618]      // while-condition  =>  TRUE
[11:01:51.618]      // while "1"  (timeout="50000")
[11:01:51.618]      // while-condition  =>  TRUE
[11:01:51.619]      // while "1"  (timeout="50000")
[11:01:51.619]      // while-condition  =>  TRUE
[11:01:51.619]      // while "1"  (timeout="50000")
[11:01:51.619]      // while-condition  =>  TRUE
[11:01:51.620]      // while "1"  (timeout="50000")
[11:01:51.620]      // while-condition  =>  TRUE
[11:01:51.620]      // while "1"  (timeout="50000")
[11:01:51.620]      // while-condition  =>  TRUE
[11:01:51.621]      // while "1"  (timeout="50000")
[11:01:51.621]      // while-condition  =>  TRUE
[11:01:51.621]      // while "1"  (timeout="50000")
[11:01:51.621]      // while-condition  =>  TRUE
[11:01:51.621]      // while "1"  (timeout="50000")
[11:01:51.622]      // while-condition  =>  TRUE
[11:01:51.622]      // while "1"  (timeout="50000")
[11:01:51.622]      // while-condition  =>  TRUE
[11:01:51.622]      // while "1"  (timeout="50000")
[11:01:51.623]      // while-condition  =>  TRUE
[11:01:51.623]      // while "1"  (timeout="50000")
[11:01:51.623]      // while-condition  =>  TRUE
[11:01:51.623]      // while "1"  (timeout="50000")
[11:01:51.623]      // while-condition  =>  TRUE
[11:01:51.624]      // while "1"  (timeout="50000")
[11:01:51.624]      // while-condition  =>  TRUE
[11:01:51.624]      // while "1"  (timeout="50000")
[11:01:51.624]      // while-condition  =>  TRUE
[11:01:51.624]      // while "1"  (timeout="50000")
[11:01:51.625]      // while-condition  =>  TRUE
[11:01:51.625]      // while "1"  (timeout="50000")
[11:01:51.625]      // while-condition  =>  TRUE
[11:01:51.625]      // while "1"  (timeout="50000")
[11:01:51.626]      // while-condition  =>  TRUE
[11:01:51.626]      // while "1"  (timeout="50000")
[11:01:51.626]      // while-condition  =>  TRUE
[11:01:51.626]      // while "1"  (timeout="50000")
[11:01:51.626]      // while-condition  =>  TRUE
[11:01:51.627]      // while "1"  (timeout="50000")
[11:01:51.627]      // while-condition  =>  TRUE
[11:01:51.627]      // while "1"  (timeout="50000")
[11:01:51.627]      // while-condition  =>  TRUE
[11:01:51.628]      // while "1"  (timeout="50000")
[11:01:51.628]      // while-condition  =>  TRUE
[11:01:51.628]      // while "1"  (timeout="50000")
[11:01:51.628]      // while-condition  =>  TRUE
[11:01:51.629]      // while "1"  (timeout="50000")
[11:01:51.629]      // while-condition  =>  TRUE
[11:01:51.629]      // while "1"  (timeout="50000")
[11:01:51.629]      // while-condition  =>  TRUE
[11:01:51.630]      // while "1"  (timeout="50000")
[11:01:51.630]      // while-condition  =>  TRUE
[11:01:51.630]      // while "1"  (timeout="50000")
[11:01:51.631]      // while-condition  =>  TRUE
[11:01:51.631]      // while "1"  (timeout="50000")
[11:01:51.631]      // while-condition  =>  TRUE
[11:01:51.631]      // while "1"  (timeout="50000")
[11:01:51.632]      // while-condition  =>  TRUE
[11:01:51.632]      // while "1"  (timeout="50000")
[11:01:51.632]      // while-condition  =>  TRUE
[11:01:51.632]      // while "1"  (timeout="50000")
[11:01:51.633]      // while-condition  =>  TRUE
[11:01:51.633]      // while "1"  (timeout="50000")
[11:01:51.633]      // while-condition  =>  TRUE
[11:01:51.633]      // while "1"  (timeout="50000")
[11:01:51.634]      // while-condition  =>  TRUE
[11:01:51.634]      // while "1"  (timeout="50000")
[11:01:51.634]      // while-condition  =>  TRUE
[11:01:51.635]      // while "1"  (timeout="50000")
[11:01:51.635]      // while-condition  =>  TRUE
[11:01:51.635]      // while "1"  (timeout="50000")
[11:01:51.635]      // while-condition  =>  TRUE
[11:01:51.635]      // while "1"  (timeout="50000")
[11:01:51.636]      // while-condition  =>  TRUE
[11:01:51.636]      // while "1"  (timeout="50000")
[11:01:51.636]      // while-condition  =>  TRUE
[11:01:51.636]      // while "1"  (timeout="50000")
[11:01:51.637]      // while-condition  =>  TRUE
[11:01:51.637]      // while "1"  (timeout="50000")
[11:01:51.637]      // while-condition  =>  TRUE
[11:01:51.637]      // while "1"  (timeout="50000")
[11:01:51.637]      // while-condition  =>  TRUE
[11:01:51.638]      // while "1"  (timeout="50000")
[11:01:51.638]      // while-condition  =>  TRUE
[11:01:51.638]      // while "1"  (timeout="50000")
[11:01:51.638]      // while-condition  =>  TRUE
[11:01:51.639]      // while "1"  (timeout="50000")
[11:01:51.639]      // while-condition  =>  TRUE
[11:01:51.639]      // while "1"  (timeout="50000")
[11:01:51.639]      // while-condition  =>  TRUE
[11:01:51.639]      // while "1"  (timeout="50000")
[11:01:51.640]      // while-condition  =>  TRUE
[11:01:51.640]      // while "1"  (timeout="50000")
[11:01:51.640]      // while-condition  =>  TRUE
[11:01:51.640]      // while "1"  (timeout="50000")
[11:01:51.641]      // while-condition  =>  TRUE
[11:01:51.641]      // while "1"  (timeout="50000")
[11:01:51.641]      // while-condition  =>  TRUE
[11:01:51.641]      // while "1"  (timeout="50000")
[11:01:51.641]      // while-condition  =>  TRUE
[11:01:51.642]      // while "1"  (timeout="50000")
[11:01:51.642]      // while-condition  =>  TRUE
[11:01:51.642]      // while "1"  (timeout="50000")
[11:01:51.642]      // while-condition  =>  TRUE
[11:01:51.642]      // while "1"  (timeout="50000")
[11:01:51.643]      // while-condition  =>  TRUE
[11:01:51.643]      // while "1"  (timeout="50000")
[11:01:51.643]      // while-condition  =>  TRUE
[11:01:51.643]      // while "1"  (timeout="50000")
[11:01:51.643]      // while-condition  =>  TRUE
[11:01:51.644]      // while "1"  (timeout="50000")
[11:01:51.644]      // while-condition  =>  TRUE
[11:01:51.644]      // while "1"  (timeout="50000")
[11:01:51.644]      // while-condition  =>  TRUE
[11:01:51.644]      // while "1"  (timeout="50000")
[11:01:51.645]      // while-condition  =>  TRUE
[11:01:51.645]      // while "1"  (timeout="50000")
[11:01:51.645]      // while-condition  =>  TRUE
[11:01:51.645]      // while "1"  (timeout="50000")
[11:01:51.645]      // while-condition  =>  TRUE
[11:01:51.646]      // while "1"  (timeout="50000")
[11:01:51.646]      // while-condition  =>  TRUE
[11:01:51.646]      // while "1"  (timeout="50000")
[11:01:51.646]      // while-condition  =>  TRUE
[11:01:51.646]      // while "1"  (timeout="50000")
[11:01:51.647]      // while-condition  =>  TRUE
[11:01:51.647]      // while "1"  (timeout="50000")
[11:01:51.647]      // while-condition  =>  TRUE
[11:01:51.647]      // while "1"  (timeout="50000")
[11:01:51.647]      // while-condition  =>  TRUE
[11:01:51.648]      // while "1"  (timeout="50000")
[11:01:51.648]      // while-condition  =>  TRUE
[11:01:51.648]      // while "1"  (timeout="50000")
[11:01:51.648]      // while-condition  =>  TRUE
[11:01:51.648]      // while "1"  (timeout="50000")
[11:01:51.649]      // while-condition  =>  TRUE
[11:01:51.649]      // while "1"  (timeout="50000")
[11:01:51.649]      // while-condition  =>  TRUE
[11:01:51.649]      // while "1"  (timeout="50000")
[11:01:51.649]      // while-condition  =>  TRUE
[11:01:51.650]      // while "1"  (timeout="50000")
[11:01:51.650]      // while-condition  =>  TRUE
[11:01:51.650]      // while "1"  (timeout="50000")
[11:01:51.650]      // while-condition  =>  TRUE
[11:01:51.651]      // while "1"  (timeout="50000")
[11:01:51.651]      // while-condition  =>  TRUE
[11:01:51.651]      // while "1"  (timeout="50000")
[11:01:51.651]      // while-condition  =>  TRUE
[11:01:51.652]      // while "1"  (timeout="50000")
[11:01:51.652]      // while-condition  =>  TRUE
[11:01:51.652]      // while "1"  (timeout="50000")
[11:01:51.652]      // while-condition  =>  TRUE
[11:01:51.653]      // while "1"  (timeout="50000")
[11:01:51.653]      // while-condition  =>  TRUE
[11:01:51.653]      // while "1"  (timeout="50000")
[11:01:51.653]      // while-condition  =>  TRUE
[11:01:51.653]      // while "1"  (timeout="50000")
[11:01:51.654]      // while-condition  =>  TRUE
[11:01:51.654]      // while "1"  (timeout="50000")
[11:01:51.654]      // while-condition  =>  TRUE
[11:01:51.655]      // while "1"  (timeout="50000")
[11:01:51.655]      // while-condition  =>  TRUE
[11:01:51.655]      // while "1"  (timeout="50000")
[11:01:51.655]      // while-condition  =>  TRUE
[11:01:51.655]      // while "1"  (timeout="50000")
[11:01:51.656]      // while-condition  =>  TRUE
[11:01:51.656]      // while "1"  (timeout="50000")
[11:01:51.656]      // while-condition  =>  TRUE
[11:01:51.656]      // while "1"  (timeout="50000")
[11:01:51.657]      // while-condition  =>  TRUE
[11:01:51.657]      // while "1"  (timeout="50000")
[11:01:51.657]      // while-condition  =>  TRUE
[11:01:51.657]      // while "1"  (timeout="50000")
[11:01:51.657]      // while-condition  =>  TRUE
[11:01:51.658]      // while "1"  (timeout="50000")
[11:01:51.658]      // while-condition  =>  TRUE
[11:01:51.658]      // while "1"  (timeout="50000")
[11:01:51.658]      // while-condition  =>  TRUE
[11:01:51.659]      // while "1"  (timeout="50000")
[11:01:51.659]      // while-condition  =>  TRUE
[11:01:51.659]      // while "1"  (timeout="50000")
[11:01:51.659]      // while-condition  =>  TRUE
[11:01:51.660]      // while "1"  (timeout="50000")
[11:01:51.660]      // while-condition  =>  TRUE
[11:01:51.660]      // while "1"  (timeout="50000")
[11:01:51.660]      // while-condition  =>  TRUE
[11:01:51.660]      // while "1"  (timeout="50000")
[11:01:51.661]      // while-condition  =>  TRUE
[11:01:51.661]      // while "1"  (timeout="50000")
[11:01:51.661]      // while-condition  =>  TRUE
[11:01:51.661]      // while "1"  (timeout="50000")
[11:01:51.662]      // while-condition  =>  TRUE
[11:01:51.662]      // while "1"  (timeout="50000")
[11:01:51.662]      // while-condition  =>  TRUE
[11:01:51.663]      // while "1"  (timeout="50000")
[11:01:51.663]      // while-condition  =>  TRUE
[11:01:51.663]      // while "1"  (timeout="50000")
[11:01:51.663]      // while-condition  =>  TRUE
[11:01:51.664]      // while "1"  (timeout="50000")
[11:01:51.664]      // while  =>  TIMEOUT
[11:01:51.664]      // end while "1"
[11:01:51.665]    </control>
[11:01:51.665]    <block atomic="false" info="">
[11:01:51.665]      DAP_SWJ_Pins(nReset, nReset, 0);
[11:01:51.667]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[11:01:51.668]    </block>
[11:01:51.668]    <control if="" while="1" timeout="10000" info="">
[11:01:51.668]      // while "1"  (timeout="10000")
[11:01:51.669]      // while-condition  =>  TRUE
[11:01:51.669]      // while "1"  (timeout="10000")
[11:01:51.669]      // while-condition  =>  TRUE
[11:01:51.669]      // while "1"  (timeout="10000")
[11:01:51.670]      // while-condition  =>  TRUE
[11:01:51.670]      // while "1"  (timeout="10000")
[11:01:51.670]      // while-condition  =>  TRUE
[11:01:51.671]      // while "1"  (timeout="10000")
[11:01:51.671]      // while-condition  =>  TRUE
[11:01:51.671]      // while "1"  (timeout="10000")
[11:01:51.671]      // while-condition  =>  TRUE
[11:01:51.671]      // while "1"  (timeout="10000")
[11:01:51.672]      // while-condition  =>  TRUE
[11:01:51.672]      // while "1"  (timeout="10000")
[11:01:51.672]      // while-condition  =>  TRUE
[11:01:51.672]      // while "1"  (timeout="10000")
[11:01:51.673]      // while-condition  =>  TRUE
[11:01:51.673]      // while "1"  (timeout="10000")
[11:01:51.673]      // while-condition  =>  TRUE
[11:01:51.673]      // while "1"  (timeout="10000")
[11:01:51.673]      // while-condition  =>  TRUE
[11:01:51.674]      // while "1"  (timeout="10000")
[11:01:51.674]      // while-condition  =>  TRUE
[11:01:51.674]      // while "1"  (timeout="10000")
[11:01:51.674]      // while-condition  =>  TRUE
[11:01:51.674]      // while "1"  (timeout="10000")
[11:01:51.675]      // while-condition  =>  TRUE
[11:01:51.675]      // while "1"  (timeout="10000")
[11:01:51.675]      // while-condition  =>  TRUE
[11:01:51.675]      // while "1"  (timeout="10000")
[11:01:51.676]      // while-condition  =>  TRUE
[11:01:51.676]      // while "1"  (timeout="10000")
[11:01:51.676]      // while-condition  =>  TRUE
[11:01:51.676]      // while "1"  (timeout="10000")
[11:01:51.677]      // while-condition  =>  TRUE
[11:01:51.677]      // while "1"  (timeout="10000")
[11:01:51.677]      // while-condition  =>  TRUE
[11:01:51.677]      // while "1"  (timeout="10000")
[11:01:51.678]      // while-condition  =>  TRUE
[11:01:51.678]      // while "1"  (timeout="10000")
[11:01:51.678]      // while-condition  =>  TRUE
[11:01:51.678]      // while "1"  (timeout="10000")
[11:01:51.679]      // while-condition  =>  TRUE
[11:01:51.679]      // while "1"  (timeout="10000")
[11:01:51.679]      // while-condition  =>  TRUE
[11:01:51.679]      // while "1"  (timeout="10000")
[11:01:51.679]      // while-condition  =>  TRUE
[11:01:51.679]      // while "1"  (timeout="10000")
[11:01:51.680]      // while-condition  =>  TRUE
[11:01:51.680]      // while "1"  (timeout="10000")
[11:01:51.680]      // while  =>  TIMEOUT
[11:01:51.680]      // end while "1"
[11:01:51.680]    </control>
[11:01:51.681]    <block atomic="true" info="">
[11:01:51.684]  
[11:01:51.684]  ! W001 : No atomic sequence support in debug unit
[11:01:51.684]  
[11:01:51.686]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[11:01:51.689]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[11:01:51.689]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[11:01:51.692]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[11:01:51.692]    </block>
[11:01:51.693]    <block atomic="false" info="">
[11:01:51.693]      __errorcontrol = 0x00000001;
[11:01:51.694]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[11:01:51.694]      ReadDP(0x0);
[11:01:51.703]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[11:01:51.704]      __errorcontrol = 0x00000000;
[11:01:51.704]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[11:01:51.704]    </block>
[11:01:51.705]  </sequence>
[11:01:51.705]  
[11:01:51.706]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[11:01:51.706]  
[11:01:51.706]  <debugvars>
[11:01:51.706]    // Pre-defined
[11:01:51.707]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[11:01:51.707]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[11:01:51.707]    __dp=0x00000000
[11:01:51.708]    __ap=0x00000000
[11:01:51.708]    __traceout=0x00000000      (Trace Disabled)
[11:01:51.708]    __errorcontrol=0x00000000  (Skip Errors="False")
[11:01:51.709]    __FlashAddr=0x00000000
[11:01:51.709]    __FlashLen=0x00000000
[11:01:51.709]    __FlashArg=0x00000000
[11:01:51.709]    __FlashOp=0x00000000
[11:01:51.710]    __Result=0x00000000
[11:01:51.710]  </debugvars>
[11:01:51.710]  
[11:01:51.710]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[11:01:51.710]  </sequence>
[11:01:51.710]  
[11:02:58.606]  **********  Sequence "ResetHardware"  (Context="Connect", Pname="", info="")
[11:02:58.606]  
[11:02:58.606]  <debugvars>
[11:02:58.607]    // Pre-defined
[11:02:58.607]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[11:02:58.608]    __connection=0x00020202    (Connection Type="Flash", Reset Type="System Reset", Pre-Connect HW Reset)
[11:02:58.608]    __dp=0x00000000
[11:02:58.608]    __ap=0x00000000
[11:02:58.609]    __traceout=0x00000000      (Trace Disabled)
[11:02:58.609]    __errorcontrol=0x00000000  (Skip Errors="False")
[11:02:58.609]    __FlashAddr=0x00000000
[11:02:58.610]    __FlashLen=0x00000000
[11:02:58.610]    __FlashArg=0x00000000
[11:02:58.610]    __FlashOp=0x00000000
[11:02:58.611]    __Result=0x00000000
[11:02:58.611]  </debugvars>
[11:02:58.611]  
[11:02:58.611]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[11:02:58.611]    <block atomic="false" info="">
[11:02:58.612]      __var nReset      = 0x80;
[11:02:58.612]        // -> [nReset <= 0x00000080]
[11:02:58.612]      DAP_SWJ_Pins(0x00, nReset, 0);
[11:02:58.614]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[11:02:58.614]    </block>
[11:02:58.615]    <control if="" while="1" timeout="50000" info="">
[11:02:58.615]      // while "1"  (timeout="50000")
[11:02:58.615]      // while-condition  =>  TRUE
[11:02:58.616]      // while "1"  (timeout="50000")
[11:02:58.616]      // while-condition  =>  TRUE
[11:02:58.616]      // while "1"  (timeout="50000")
[11:02:58.616]      // while-condition  =>  TRUE
[11:02:58.617]      // while "1"  (timeout="50000")
[11:02:58.617]      // while-condition  =>  TRUE
[11:02:58.617]      // while "1"  (timeout="50000")
[11:02:58.618]      // while-condition  =>  TRUE
[11:02:58.618]      // while "1"  (timeout="50000")
[11:02:58.618]      // while-condition  =>  TRUE
[11:02:58.618]      // while "1"  (timeout="50000")
[11:02:58.618]      // while-condition  =>  TRUE
[11:02:58.619]      // while "1"  (timeout="50000")
[11:02:58.619]      // while-condition  =>  TRUE
[11:02:58.620]      // while "1"  (timeout="50000")
[11:02:58.620]      // while-condition  =>  TRUE
[11:02:58.620]      // while "1"  (timeout="50000")
[11:02:58.620]      // while-condition  =>  TRUE
[11:02:58.621]      // while "1"  (timeout="50000")
[11:02:58.621]      // while-condition  =>  TRUE
[11:02:58.621]      // while "1"  (timeout="50000")
[11:02:58.621]      // while-condition  =>  TRUE
[11:02:58.622]      // while "1"  (timeout="50000")
[11:02:58.622]      // while-condition  =>  TRUE
[11:02:58.622]      // while "1"  (timeout="50000")
[11:02:58.622]      // while-condition  =>  TRUE
[11:02:58.622]      // while "1"  (timeout="50000")
[11:02:58.623]      // while-condition  =>  TRUE
[11:02:58.623]      // while "1"  (timeout="50000")
[11:02:58.623]      // while-condition  =>  TRUE
[11:02:58.623]      // while "1"  (timeout="50000")
[11:02:58.624]      // while-condition  =>  TRUE
[11:02:58.624]      // while "1"  (timeout="50000")
[11:02:58.624]      // while-condition  =>  TRUE
[11:02:58.624]      // while "1"  (timeout="50000")
[11:02:58.625]      // while-condition  =>  TRUE
[11:02:58.625]      // while "1"  (timeout="50000")
[11:02:58.625]      // while-condition  =>  TRUE
[11:02:58.625]      // while "1"  (timeout="50000")
[11:02:58.625]      // while-condition  =>  TRUE
[11:02:58.626]      // while "1"  (timeout="50000")
[11:02:58.626]      // while-condition  =>  TRUE
[11:02:58.626]      // while "1"  (timeout="50000")
[11:02:58.626]      // while-condition  =>  TRUE
[11:02:58.626]      // while "1"  (timeout="50000")
[11:02:58.626]      // while-condition  =>  TRUE
[11:02:58.627]      // while "1"  (timeout="50000")
[11:02:58.627]      // while-condition  =>  TRUE
[11:02:58.627]      // while "1"  (timeout="50000")
[11:02:58.627]      // while-condition  =>  TRUE
[11:02:58.627]      // while "1"  (timeout="50000")
[11:02:58.628]      // while-condition  =>  TRUE
[11:02:58.628]      // while "1"  (timeout="50000")
[11:02:58.628]      // while-condition  =>  TRUE
[11:02:58.628]      // while "1"  (timeout="50000")
[11:02:58.628]      // while-condition  =>  TRUE
[11:02:58.629]      // while "1"  (timeout="50000")
[11:02:58.629]      // while-condition  =>  TRUE
[11:02:58.629]      // while "1"  (timeout="50000")
[11:02:58.629]      // while-condition  =>  TRUE
[11:02:58.629]      // while "1"  (timeout="50000")
[11:02:58.630]      // while-condition  =>  TRUE
[11:02:58.630]      // while "1"  (timeout="50000")
[11:02:58.630]      // while-condition  =>  TRUE
[11:02:58.630]      // while "1"  (timeout="50000")
[11:02:58.630]      // while-condition  =>  TRUE
[11:02:58.631]      // while "1"  (timeout="50000")
[11:02:58.631]      // while-condition  =>  TRUE
[11:02:58.631]      // while "1"  (timeout="50000")
[11:02:58.631]      // while-condition  =>  TRUE
[11:02:58.631]      // while "1"  (timeout="50000")
[11:02:58.632]      // while-condition  =>  TRUE
[11:02:58.632]      // while "1"  (timeout="50000")
[11:02:58.632]      // while-condition  =>  TRUE
[11:02:58.632]      // while "1"  (timeout="50000")
[11:02:58.632]      // while-condition  =>  TRUE
[11:02:58.633]      // while "1"  (timeout="50000")
[11:02:58.633]      // while-condition  =>  TRUE
[11:02:58.633]      // while "1"  (timeout="50000")
[11:02:58.633]      // while-condition  =>  TRUE
[11:02:58.633]      // while "1"  (timeout="50000")
[11:02:58.634]      // while-condition  =>  TRUE
[11:02:58.634]      // while "1"  (timeout="50000")
[11:02:58.634]      // while-condition  =>  TRUE
[11:02:58.634]      // while "1"  (timeout="50000")
[11:02:58.634]      // while-condition  =>  TRUE
[11:02:58.635]      // while "1"  (timeout="50000")
[11:02:58.635]      // while-condition  =>  TRUE
[11:02:58.635]      // while "1"  (timeout="50000")
[11:02:58.635]      // while-condition  =>  TRUE
[11:02:58.635]      // while "1"  (timeout="50000")
[11:02:58.636]      // while-condition  =>  TRUE
[11:02:58.636]      // while "1"  (timeout="50000")
[11:02:58.636]      // while-condition  =>  TRUE
[11:02:58.636]      // while "1"  (timeout="50000")
[11:02:58.636]      // while-condition  =>  TRUE
[11:02:58.637]      // while "1"  (timeout="50000")
[11:02:58.637]      // while-condition  =>  TRUE
[11:02:58.637]      // while "1"  (timeout="50000")
[11:02:58.637]      // while-condition  =>  TRUE
[11:02:58.637]      // while "1"  (timeout="50000")
[11:02:58.638]      // while-condition  =>  TRUE
[11:02:58.638]      // while "1"  (timeout="50000")
[11:02:58.638]      // while-condition  =>  TRUE
[11:02:58.638]      // while "1"  (timeout="50000")
[11:02:58.638]      // while-condition  =>  TRUE
[11:02:58.639]      // while "1"  (timeout="50000")
[11:02:58.639]      // while-condition  =>  TRUE
[11:02:58.639]      // while "1"  (timeout="50000")
[11:02:58.639]      // while-condition  =>  TRUE
[11:02:58.640]      // while "1"  (timeout="50000")
[11:02:58.640]      // while-condition  =>  TRUE
[11:02:58.640]      // while "1"  (timeout="50000")
[11:02:58.640]      // while-condition  =>  TRUE
[11:02:58.641]      // while "1"  (timeout="50000")
[11:02:58.641]      // while-condition  =>  TRUE
[11:02:58.641]      // while "1"  (timeout="50000")
[11:02:58.641]      // while-condition  =>  TRUE
[11:02:58.642]      // while "1"  (timeout="50000")
[11:02:58.642]      // while-condition  =>  TRUE
[11:02:58.642]      // while "1"  (timeout="50000")
[11:02:58.642]      // while-condition  =>  TRUE
[11:02:58.643]      // while "1"  (timeout="50000")
[11:02:58.643]      // while-condition  =>  TRUE
[11:02:58.643]      // while "1"  (timeout="50000")
[11:02:58.643]      // while-condition  =>  TRUE
[11:02:58.643]      // while "1"  (timeout="50000")
[11:02:58.644]      // while-condition  =>  TRUE
[11:02:58.644]      // while "1"  (timeout="50000")
[11:02:58.644]      // while-condition  =>  TRUE
[11:02:58.644]      // while "1"  (timeout="50000")
[11:02:58.645]      // while-condition  =>  TRUE
[11:02:58.645]      // while "1"  (timeout="50000")
[11:02:58.645]      // while-condition  =>  TRUE
[11:02:58.645]      // while "1"  (timeout="50000")
[11:02:58.645]      // while-condition  =>  TRUE
[11:02:58.646]      // while "1"  (timeout="50000")
[11:02:58.646]      // while-condition  =>  TRUE
[11:02:58.646]      // while "1"  (timeout="50000")
[11:02:58.646]      // while-condition  =>  TRUE
[11:02:58.647]      // while "1"  (timeout="50000")
[11:02:58.647]      // while-condition  =>  TRUE
[11:02:58.647]      // while "1"  (timeout="50000")
[11:02:58.647]      // while-condition  =>  TRUE
[11:02:58.648]      // while "1"  (timeout="50000")
[11:02:58.648]      // while-condition  =>  TRUE
[11:02:58.648]      // while "1"  (timeout="50000")
[11:02:58.648]      // while-condition  =>  TRUE
[11:02:58.648]      // while "1"  (timeout="50000")
[11:02:58.649]      // while-condition  =>  TRUE
[11:02:58.649]      // while "1"  (timeout="50000")
[11:02:58.649]      // while-condition  =>  TRUE
[11:02:58.649]      // while "1"  (timeout="50000")
[11:02:58.650]      // while-condition  =>  TRUE
[11:02:58.650]      // while "1"  (timeout="50000")
[11:02:58.650]      // while-condition  =>  TRUE
[11:02:58.650]      // while "1"  (timeout="50000")
[11:02:58.651]      // while-condition  =>  TRUE
[11:02:58.651]      // while "1"  (timeout="50000")
[11:02:58.651]      // while-condition  =>  TRUE
[11:02:58.651]      // while "1"  (timeout="50000")
[11:02:58.652]      // while-condition  =>  TRUE
[11:02:58.652]      // while "1"  (timeout="50000")
[11:02:58.652]      // while-condition  =>  TRUE
[11:02:58.652]      // while "1"  (timeout="50000")
[11:02:58.652]      // while-condition  =>  TRUE
[11:02:58.653]      // while "1"  (timeout="50000")
[11:02:58.653]      // while-condition  =>  TRUE
[11:02:58.653]      // while "1"  (timeout="50000")
[11:02:58.653]      // while-condition  =>  TRUE
[11:02:58.654]      // while "1"  (timeout="50000")
[11:02:58.654]      // while-condition  =>  TRUE
[11:02:58.654]      // while "1"  (timeout="50000")
[11:02:58.654]      // while-condition  =>  TRUE
[11:02:58.655]      // while "1"  (timeout="50000")
[11:02:58.655]      // while-condition  =>  TRUE
[11:02:58.655]      // while "1"  (timeout="50000")
[11:02:58.656]      // while-condition  =>  TRUE
[11:02:58.656]      // while "1"  (timeout="50000")
[11:02:58.656]      // while-condition  =>  TRUE
[11:02:58.657]      // while "1"  (timeout="50000")
[11:02:58.657]      // while-condition  =>  TRUE
[11:02:58.657]      // while "1"  (timeout="50000")
[11:02:58.657]      // while-condition  =>  TRUE
[11:02:58.658]      // while "1"  (timeout="50000")
[11:02:58.658]      // while-condition  =>  TRUE
[11:02:58.658]      // while "1"  (timeout="50000")
[11:02:58.658]      // while-condition  =>  TRUE
[11:02:58.658]      // while "1"  (timeout="50000")
[11:02:58.659]      // while-condition  =>  TRUE
[11:02:58.659]      // while "1"  (timeout="50000")
[11:02:58.659]      // while-condition  =>  TRUE
[11:02:58.659]      // while "1"  (timeout="50000")
[11:02:58.660]      // while-condition  =>  TRUE
[11:02:58.660]      // while "1"  (timeout="50000")
[11:02:58.660]      // while-condition  =>  TRUE
[11:02:58.660]      // while "1"  (timeout="50000")
[11:02:58.661]      // while-condition  =>  TRUE
[11:02:58.661]      // while "1"  (timeout="50000")
[11:02:58.661]      // while-condition  =>  TRUE
[11:02:58.661]      // while "1"  (timeout="50000")
[11:02:58.661]      // while-condition  =>  TRUE
[11:02:58.662]      // while "1"  (timeout="50000")
[11:02:58.662]      // while-condition  =>  TRUE
[11:02:58.662]      // while "1"  (timeout="50000")
[11:02:58.663]      // while-condition  =>  TRUE
[11:02:58.663]      // while "1"  (timeout="50000")
[11:02:58.663]      // while-condition  =>  TRUE
[11:02:58.663]      // while "1"  (timeout="50000")
[11:02:58.664]      // while-condition  =>  TRUE
[11:02:58.664]      // while "1"  (timeout="50000")
[11:02:58.664]      // while  =>  TIMEOUT
[11:02:58.664]      // end while "1"
[11:02:58.664]    </control>
[11:02:58.665]    <block atomic="false" info="">
[11:02:58.665]      DAP_SWJ_Pins(nReset, nReset, 0);
[11:02:58.667]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[11:02:58.668]    </block>
[11:02:58.668]    <control if="" while="1" timeout="10000" info="">
[11:02:58.668]      // while "1"  (timeout="10000")
[11:02:58.668]      // while-condition  =>  TRUE
[11:02:58.669]      // while "1"  (timeout="10000")
[11:02:58.669]      // while-condition  =>  TRUE
[11:02:58.669]      // while "1"  (timeout="10000")
[11:02:58.670]      // while-condition  =>  TRUE
[11:02:58.670]      // while "1"  (timeout="10000")
[11:02:58.670]      // while-condition  =>  TRUE
[11:02:58.670]      // while "1"  (timeout="10000")
[11:02:58.671]      // while-condition  =>  TRUE
[11:02:58.671]      // while "1"  (timeout="10000")
[11:02:58.671]      // while-condition  =>  TRUE
[11:02:58.671]      // while "1"  (timeout="10000")
[11:02:58.672]      // while-condition  =>  TRUE
[11:02:58.672]      // while "1"  (timeout="10000")
[11:02:58.672]      // while-condition  =>  TRUE
[11:02:58.672]      // while "1"  (timeout="10000")
[11:02:58.673]      // while-condition  =>  TRUE
[11:02:58.673]      // while "1"  (timeout="10000")
[11:02:58.673]      // while-condition  =>  TRUE
[11:02:58.673]      // while "1"  (timeout="10000")
[11:02:58.673]      // while-condition  =>  TRUE
[11:02:58.674]      // while "1"  (timeout="10000")
[11:02:58.674]      // while-condition  =>  TRUE
[11:02:58.674]      // while "1"  (timeout="10000")
[11:02:58.674]      // while-condition  =>  TRUE
[11:02:58.674]      // while "1"  (timeout="10000")
[11:02:58.675]      // while-condition  =>  TRUE
[11:02:58.675]      // while "1"  (timeout="10000")
[11:02:58.676]      // while-condition  =>  TRUE
[11:02:58.676]      // while "1"  (timeout="10000")
[11:02:58.676]      // while-condition  =>  TRUE
[11:02:58.676]      // while "1"  (timeout="10000")
[11:02:58.677]      // while-condition  =>  TRUE
[11:02:58.677]      // while "1"  (timeout="10000")
[11:02:58.677]      // while-condition  =>  TRUE
[11:02:58.677]      // while "1"  (timeout="10000")
[11:02:58.677]      // while-condition  =>  TRUE
[11:02:58.678]      // while "1"  (timeout="10000")
[11:02:58.678]      // while-condition  =>  TRUE
[11:02:58.678]      // while "1"  (timeout="10000")
[11:02:58.678]      // while-condition  =>  TRUE
[11:02:58.678]      // while "1"  (timeout="10000")
[11:02:58.679]      // while-condition  =>  TRUE
[11:02:58.679]      // while "1"  (timeout="10000")
[11:02:58.679]      // while-condition  =>  TRUE
[11:02:58.679]      // while "1"  (timeout="10000")
[11:02:58.679]      // while-condition  =>  TRUE
[11:02:58.680]      // while "1"  (timeout="10000")
[11:02:58.680]      // while  =>  TIMEOUT
[11:02:58.680]      // end while "1"
[11:02:58.680]    </control>
[11:02:58.681]    <block atomic="true" info="">
[11:02:58.684]  
[11:02:58.684]  ! W001 : No atomic sequence support in debug unit
[11:02:58.684]  
[11:02:58.686]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[11:02:58.688]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[11:02:58.689]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[11:02:58.692]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[11:02:58.692]    </block>
[11:02:58.692]    <block atomic="false" info="">
[11:02:58.693]      __errorcontrol = 0x00000001;
[11:02:58.693]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[11:02:58.693]      ReadDP(0x0);
[11:02:58.695]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[11:02:58.696]      __errorcontrol = 0x00000000;
[11:02:58.696]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[11:02:58.696]    </block>
[11:02:58.697]  </sequence>
[11:02:58.697]  
[11:02:58.697]  **********  Sequence "DebugPortSetup"  (Context="Connect", Pname="", info="")
[11:02:58.697]  
[11:02:58.698]  <debugvars>
[11:02:58.698]    // Pre-defined
[11:02:58.698]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[11:02:58.699]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[11:02:58.699]    __dp=0x00000000
[11:02:58.699]    __ap=0x00000000
[11:02:58.699]    __traceout=0x00000000      (Trace Disabled)
[11:02:58.700]    __errorcontrol=0x00000000  (Skip Errors="False")
[11:02:58.700]    __FlashAddr=0x00000000
[11:02:58.700]    __FlashLen=0x00000000
[11:02:58.700]    __FlashArg=0x00000000
[11:02:58.701]    __FlashOp=0x00000000
[11:02:58.701]    __Result=0x00000000
[11:02:58.701]  </debugvars>
[11:02:58.701]  
[11:02:58.701]  <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[11:02:58.702]  </sequence>
[11:02:58.702]  
[11:02:58.706]  **********  Sequence "DebugPortStart"  (Context="Connect", Pname="", info="")
[11:02:58.706]  
[11:02:58.719]  <debugvars>
[11:02:58.749]    // Pre-defined
[11:02:58.777]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[11:02:58.778]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[11:02:58.778]    __dp=0x00000000
[11:02:58.779]    __ap=0x00000000
[11:02:58.779]    __traceout=0x00000000      (Trace Disabled)
[11:02:58.779]    __errorcontrol=0x00000000  (Skip Errors="False")
[11:02:58.780]    __FlashAddr=0x00000000
[11:02:58.780]    __FlashLen=0x00000000
[11:02:58.780]    __FlashArg=0x00000000
[11:02:58.781]    __FlashOp=0x00000000
[11:02:58.781]    __Result=0x00000000
[11:02:58.781]  </debugvars>
[11:02:58.782]  
[11:02:58.782]  <sequence name="DebugPortStart" Pname="" disable="false" info="">
[11:02:58.782]    <block atomic="false" info="">
[11:02:58.783]      __var SW_DP_ABORT  = 0x0;
[11:02:58.783]        // -> [SW_DP_ABORT <= 0x00000000]
[11:02:58.783]      __var DP_CTRL_STAT = 0x4;
[11:02:58.783]        // -> [DP_CTRL_STAT <= 0x00000004]
[11:02:58.784]      __var DP_SELECT    = 0x8;
[11:02:58.784]        // -> [DP_SELECT <= 0x00000008]
[11:02:58.784]      __var powered_down = 0;
[11:02:58.785]        // -> [powered_down <= 0x00000000]
[11:02:58.785]      WriteDP(DP_SELECT, 0x00000000);
[11:02:58.787]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[11:02:58.787]      powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[11:02:58.789]        // -> [ReadDP(0x00000004) => 0x00000040]   (__dp=0x00000000)
[11:02:58.789]        // -> [powered_down <= 0x00000001]
[11:02:58.790]    </block>
[11:02:58.790]    <control if="powered_down" while="" timeout="0" info="">
[11:02:58.790]      // if-block "powered_down"
[11:02:58.791]        // =>  TRUE
[11:02:58.791]      <block atomic="false" info="">
[11:02:58.791]        WriteDP(DP_CTRL_STAT, 0x50000000);
[11:02:58.793]          // -> [WriteDP(0x00000004, 0x50000000)]   (__dp=0x00000000)
[11:02:58.793]      </block>
[11:02:58.794]      <control if="" while="(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000" timeout="1000000" info="">
[11:02:58.794]        // while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"  (timeout="1000000")
[11:02:58.796]          // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[11:02:58.796]        // while-condition  =>  FALSE
[11:02:58.797]        // end while "(ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000"
[11:02:58.797]      </control>
[11:02:58.797]      <control if="(__protocol & 0xFFFF) == 1" while="" timeout="0" info="">
[11:02:58.798]        // if-block "(__protocol & 0xFFFF) == 1"
[11:02:58.798]          // =>  FALSE
[11:02:58.798]        // skip if-block "(__protocol & 0xFFFF) == 1"
[11:02:58.799]      </control>
[11:02:58.799]      <control if="(__protocol & 0xFFFF) == 2" while="" timeout="0" info="">
[11:02:58.799]        // if-block "(__protocol & 0xFFFF) == 2"
[11:02:58.800]          // =>  TRUE
[11:02:58.800]        <block atomic="false" info="">
[11:02:58.800]          WriteDP(DP_CTRL_STAT, 0x50000F00);
[11:02:58.802]            // -> [WriteDP(0x00000004, 0x50000F00)]   (__dp=0x00000000)
[11:02:58.802]          WriteDP(SW_DP_ABORT, 0x0000001E);
[11:02:58.804]            // -> [WriteDP(0x00000000, 0x0000001E)]   (__dp=0x00000000)
[11:02:58.804]        </block>
[11:02:58.805]        // end if-block "(__protocol & 0xFFFF) == 2"
[11:02:58.805]      </control>
[11:02:58.805]      // end if-block "powered_down"
[11:02:58.806]    </control>
[11:02:58.806]  </sequence>
[11:02:58.806]  
[11:02:58.910]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[11:02:58.910]  
[11:02:58.911]  <debugvars>
[11:02:58.911]    // Pre-defined
[11:02:58.911]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[11:02:58.912]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[11:02:58.912]    __dp=0x00000000
[11:02:58.912]    __ap=0x00000000
[11:02:58.913]    __traceout=0x00000000      (Trace Disabled)
[11:02:58.913]    __errorcontrol=0x00000000  (Skip Errors="False")
[11:02:58.913]    __FlashAddr=0x00000000
[11:02:58.914]    __FlashLen=0x00000000
[11:02:58.914]    __FlashArg=0x00000000
[11:02:58.914]    __FlashOp=0x00000000
[11:02:58.914]    __Result=0x00000000
[11:02:58.930]  </debugvars>
[11:02:58.930]  
[11:02:58.931]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[11:02:58.931]    <block atomic="true" info="">
[11:02:58.935]  
[11:02:58.935]  ! W001 : No atomic sequence support in debug unit
[11:02:58.935]  
[11:02:58.937]      __var DP_R_IDCODE    = 0x0;
[11:02:58.937]        // -> [DP_R_IDCODE <= 0x00000000]
[11:02:58.937]      __var DP_W_ABORT    = 0x0;
[11:02:58.938]        // -> [DP_W_ABORT <= 0x00000000]
[11:02:58.938]      __var DP_CTRLSTAT = 0x4;
[11:02:58.938]        // -> [DP_CTRLSTAT <= 0x00000004]
[11:02:58.939]      __var DP_W_SELECT    = 0x8;
[11:02:58.939]        // -> [DP_W_SELECT <= 0x00000008]
[11:02:58.939]      __var AP_TAR		= 0x4;
[11:02:58.940]        // -> [AP_TAR <= 0x00000004]
[11:02:58.940]      __var AP_BD0		= 0x0;
[11:02:58.940]        // -> [AP_BD0 <= 0x00000000]
[11:02:58.941]      __var AP_BD1		= 0x4;
[11:02:58.941]        // -> [AP_BD1 <= 0x00000004]
[11:02:58.941]      __var AP_BD2		= 0x8;
[11:02:58.941]        // -> [AP_BD2 <= 0x00000008]
[11:02:58.942]      __var PCWithinFlash = 0;
[11:02:58.942]        // -> [PCWithinFlash <= 0x00000000]
[11:02:58.942]      Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[11:02:58.948]        // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[11:02:58.948]    </block>
[11:02:58.949]    <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[11:02:58.949]      // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[11:02:58.955]        // -> [Read32(0xE000EDF0) => 0x03030003]   (__dp=0x00000000, __ap=0x00000000)
[11:02:58.977]      // while-condition  =>  FALSE
[11:02:58.977]      // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[11:02:58.978]    </control>
[11:02:58.978]    <block atomic="true" info="">
[11:02:58.984]  
[11:02:58.984]  ! W001 : No atomic sequence support in debug unit
[11:02:58.984]  
[11:02:58.987]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[11:02:58.990]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[11:02:58.990]      WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[11:02:58.992]        // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[11:02:58.992]      WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[11:02:58.994]        // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[11:02:58.994]      WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[11:02:58.998]        // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[11:02:58.998]    </block>
[11:02:58.999]    <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[11:02:58.999]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.001]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.001]      // while-condition  =>  TRUE
[11:02:59.002]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.004]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.004]      // while-condition  =>  TRUE
[11:02:59.005]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.007]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.007]      // while-condition  =>  TRUE
[11:02:59.008]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.010]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.010]      // while-condition  =>  TRUE
[11:02:59.011]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.013]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.013]      // while-condition  =>  TRUE
[11:02:59.014]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.016]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.017]      // while-condition  =>  TRUE
[11:02:59.017]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.019]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.019]      // while-condition  =>  TRUE
[11:02:59.020]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.022]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.022]      // while-condition  =>  TRUE
[11:02:59.023]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.025]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.026]      // while-condition  =>  TRUE
[11:02:59.026]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.028]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.028]      // while-condition  =>  TRUE
[11:02:59.029]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.031]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.031]      // while-condition  =>  TRUE
[11:02:59.032]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.034]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.034]      // while-condition  =>  TRUE
[11:02:59.035]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.037]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.037]      // while-condition  =>  TRUE
[11:02:59.038]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.040]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.040]      // while-condition  =>  TRUE
[11:02:59.041]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.043]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.043]      // while-condition  =>  TRUE
[11:02:59.044]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.046]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.046]      // while-condition  =>  TRUE
[11:02:59.047]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.049]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.049]      // while-condition  =>  TRUE
[11:02:59.050]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.052]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.052]      // while-condition  =>  TRUE
[11:02:59.053]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.055]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.055]      // while-condition  =>  TRUE
[11:02:59.056]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.058]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.058]      // while-condition  =>  TRUE
[11:02:59.059]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.061]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.062]      // while-condition  =>  TRUE
[11:02:59.062]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.064]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.064]      // while-condition  =>  TRUE
[11:02:59.065]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.067]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.067]      // while-condition  =>  TRUE
[11:02:59.068]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.070]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.070]      // while-condition  =>  TRUE
[11:02:59.071]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.073]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.074]      // while-condition  =>  TRUE
[11:02:59.074]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.076]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.076]      // while-condition  =>  TRUE
[11:02:59.077]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.079]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.079]      // while-condition  =>  TRUE
[11:02:59.080]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.082]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.082]      // while-condition  =>  TRUE
[11:02:59.083]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.085]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.087]      // while-condition  =>  TRUE
[11:02:59.087]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.089]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.090]      // while-condition  =>  TRUE
[11:02:59.090]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.092]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.092]      // while-condition  =>  TRUE
[11:02:59.093]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.095]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.096]      // while-condition  =>  TRUE
[11:02:59.096]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.098]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.098]      // while-condition  =>  TRUE
[11:02:59.099]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.101]        // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.102]      // while-condition  =>  TRUE
[11:02:59.102]      // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.102]      // while  =>  TIMEOUT
[11:02:59.102]      // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[11:02:59.103]    </control>
[11:02:59.103]    <block atomic="false" info="">
[11:02:59.103]      PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[11:02:59.105]        // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.105]        // -> [PCWithinFlash <= 0x00000000]
[11:02:59.106]      WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[11:02:59.108]        // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[11:02:59.109]    </block>
[11:02:59.109]    <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[11:02:59.109]      // if-block "PCWithinFlash == 0"
[11:02:59.109]        // =>  TRUE
[11:02:59.109]      // end if-block "PCWithinFlash == 0"
[11:02:59.109]    </control>
[11:02:59.109]  </sequence>
[11:02:59.111]  
[11:02:59.157]  **********  Sequence "ResetCatchSet"  (Context="Reset", Pname="", info="")
[11:02:59.157]  
[11:02:59.157]  <debugvars>
[11:02:59.157]    // Pre-defined
[11:02:59.157]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[11:02:59.158]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[11:02:59.158]    __dp=0x00000000
[11:02:59.158]    __ap=0x00000000
[11:02:59.158]    __traceout=0x00000000      (Trace Disabled)
[11:02:59.159]    __errorcontrol=0x00000000  (Skip Errors="False")
[11:02:59.159]    __FlashAddr=0x00000000
[11:02:59.159]    __FlashLen=0x00000000
[11:02:59.159]    __FlashArg=0x00000000
[11:02:59.160]    __FlashOp=0x00000000
[11:02:59.160]    __Result=0x00000000
[11:02:59.160]  </debugvars>
[11:02:59.160]  
[11:02:59.160]  <sequence name="ResetCatchSet" Pname="" disable="false" info="">
[11:02:59.161]    <block atomic="false" info="">
[11:02:59.161]    </block>
[11:02:59.161]  </sequence>
[11:02:59.161]  
[11:02:59.163]  **********  Sequence "ResetHardware"  (Context="Reset", Pname="", info="")
[11:02:59.163]  
[11:02:59.163]  <debugvars>
[11:02:59.164]    // Pre-defined
[11:02:59.164]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[11:02:59.164]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[11:02:59.164]    __dp=0x00000000
[11:02:59.165]    __ap=0x00000000
[11:02:59.165]    __traceout=0x00000000      (Trace Disabled)
[11:02:59.165]    __errorcontrol=0x00000000  (Skip Errors="False")
[11:02:59.165]    __FlashAddr=0x00000000
[11:02:59.165]    __FlashLen=0x00000000
[11:02:59.166]    __FlashArg=0x00000000
[11:02:59.166]    __FlashOp=0x00000000
[11:02:59.166]    __Result=0x00000000
[11:02:59.166]  </debugvars>
[11:02:59.167]  
[11:02:59.167]  <sequence name="ResetHardware" Pname="" disable="false" info="">
[11:02:59.167]    <block atomic="false" info="">
[11:02:59.167]      __var nReset      = 0x80;
[11:02:59.168]        // -> [nReset <= 0x00000080]
[11:02:59.168]      DAP_SWJ_Pins(0x00, nReset, 0);
[11:02:59.170]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[11:02:59.171]    </block>
[11:02:59.171]    <control if="" while="1" timeout="50000" info="">
[11:02:59.171]      // while "1"  (timeout="50000")
[11:02:59.171]      // while-condition  =>  TRUE
[11:02:59.172]      // while "1"  (timeout="50000")
[11:02:59.172]      // while-condition  =>  TRUE
[11:02:59.172]      // while "1"  (timeout="50000")
[11:02:59.172]      // while-condition  =>  TRUE
[11:02:59.172]      // while "1"  (timeout="50000")
[11:02:59.173]      // while-condition  =>  TRUE
[11:02:59.173]      // while "1"  (timeout="50000")
[11:02:59.173]      // while-condition  =>  TRUE
[11:02:59.173]      // while "1"  (timeout="50000")
[11:02:59.174]      // while-condition  =>  TRUE
[11:02:59.174]      // while "1"  (timeout="50000")
[11:02:59.174]      // while-condition  =>  TRUE
[11:02:59.174]      // while "1"  (timeout="50000")
[11:02:59.174]      // while-condition  =>  TRUE
[11:02:59.175]      // while "1"  (timeout="50000")
[11:02:59.175]      // while-condition  =>  TRUE
[11:02:59.175]      // while "1"  (timeout="50000")
[11:02:59.175]      // while-condition  =>  TRUE
[11:02:59.176]      // while "1"  (timeout="50000")
[11:02:59.176]      // while-condition  =>  TRUE
[11:02:59.176]      // while "1"  (timeout="50000")
[11:02:59.176]      // while-condition  =>  TRUE
[11:02:59.177]      // while "1"  (timeout="50000")
[11:02:59.177]      // while-condition  =>  TRUE
[11:02:59.177]      // while "1"  (timeout="50000")
[11:02:59.177]      // while-condition  =>  TRUE
[11:02:59.178]      // while "1"  (timeout="50000")
[11:02:59.178]      // while-condition  =>  TRUE
[11:02:59.178]      // while "1"  (timeout="50000")
[11:02:59.178]      // while-condition  =>  TRUE
[11:02:59.191]      // while "1"  (timeout="50000")
[11:02:59.192]      // while-condition  =>  TRUE
[11:02:59.192]      // while "1"  (timeout="50000")
[11:02:59.192]      // while-condition  =>  TRUE
[11:02:59.192]      // while "1"  (timeout="50000")
[11:02:59.193]      // while-condition  =>  TRUE
[11:02:59.193]      // while "1"  (timeout="50000")
[11:02:59.193]      // while-condition  =>  TRUE
[11:02:59.193]      // while "1"  (timeout="50000")
[11:02:59.194]      // while-condition  =>  TRUE
[11:02:59.194]      // while "1"  (timeout="50000")
[11:02:59.194]      // while-condition  =>  TRUE
[11:02:59.194]      // while "1"  (timeout="50000")
[11:02:59.195]      // while-condition  =>  TRUE
[11:02:59.199]      // while "1"  (timeout="50000")
[11:02:59.199]      // while-condition  =>  TRUE
[11:02:59.199]      // while "1"  (timeout="50000")
[11:02:59.200]      // while-condition  =>  TRUE
[11:02:59.200]      // while "1"  (timeout="50000")
[11:02:59.200]      // while-condition  =>  TRUE
[11:02:59.200]      // while "1"  (timeout="50000")
[11:02:59.201]      // while-condition  =>  TRUE
[11:02:59.201]      // while "1"  (timeout="50000")
[11:02:59.201]      // while-condition  =>  TRUE
[11:02:59.201]      // while "1"  (timeout="50000")
[11:02:59.202]      // while-condition  =>  TRUE
[11:02:59.202]      // while "1"  (timeout="50000")
[11:02:59.202]      // while-condition  =>  TRUE
[11:02:59.202]      // while "1"  (timeout="50000")
[11:02:59.203]      // while-condition  =>  TRUE
[11:02:59.203]      // while "1"  (timeout="50000")
[11:02:59.203]      // while-condition  =>  TRUE
[11:02:59.203]      // while "1"  (timeout="50000")
[11:02:59.203]      // while-condition  =>  TRUE
[11:02:59.204]      // while "1"  (timeout="50000")
[11:02:59.204]      // while-condition  =>  TRUE
[11:02:59.204]      // while "1"  (timeout="50000")
[11:02:59.204]      // while-condition  =>  TRUE
[11:02:59.205]      // while "1"  (timeout="50000")
[11:02:59.205]      // while-condition  =>  TRUE
[11:02:59.205]      // while "1"  (timeout="50000")
[11:02:59.205]      // while-condition  =>  TRUE
[11:02:59.205]      // while "1"  (timeout="50000")
[11:02:59.206]      // while-condition  =>  TRUE
[11:02:59.206]      // while "1"  (timeout="50000")
[11:02:59.206]      // while-condition  =>  TRUE
[11:02:59.207]      // while "1"  (timeout="50000")
[11:02:59.207]      // while-condition  =>  TRUE
[11:02:59.207]      // while "1"  (timeout="50000")
[11:02:59.207]      // while-condition  =>  TRUE
[11:02:59.208]      // while "1"  (timeout="50000")
[11:02:59.208]      // while-condition  =>  TRUE
[11:02:59.208]      // while "1"  (timeout="50000")
[11:02:59.208]      // while-condition  =>  TRUE
[11:02:59.209]      // while "1"  (timeout="50000")
[11:02:59.209]      // while-condition  =>  TRUE
[11:02:59.209]      // while "1"  (timeout="50000")
[11:02:59.209]      // while-condition  =>  TRUE
[11:02:59.209]      // while "1"  (timeout="50000")
[11:02:59.209]      // while-condition  =>  TRUE
[11:02:59.209]      // while "1"  (timeout="50000")
[11:02:59.210]      // while-condition  =>  TRUE
[11:02:59.210]      // while "1"  (timeout="50000")
[11:02:59.210]      // while-condition  =>  TRUE
[11:02:59.210]      // while "1"  (timeout="50000")
[11:02:59.211]      // while-condition  =>  TRUE
[11:02:59.211]      // while "1"  (timeout="50000")
[11:02:59.211]      // while-condition  =>  TRUE
[11:02:59.211]      // while "1"  (timeout="50000")
[11:02:59.211]      // while-condition  =>  TRUE
[11:02:59.212]      // while "1"  (timeout="50000")
[11:02:59.212]      // while-condition  =>  TRUE
[11:02:59.212]      // while "1"  (timeout="50000")
[11:02:59.212]      // while-condition  =>  TRUE
[11:02:59.213]      // while "1"  (timeout="50000")
[11:02:59.213]      // while-condition  =>  TRUE
[11:02:59.213]      // while "1"  (timeout="50000")
[11:02:59.213]      // while-condition  =>  TRUE
[11:02:59.214]      // while "1"  (timeout="50000")
[11:02:59.214]      // while-condition  =>  TRUE
[11:02:59.214]      // while "1"  (timeout="50000")
[11:02:59.214]      // while-condition  =>  TRUE
[11:02:59.215]      // while "1"  (timeout="50000")
[11:02:59.215]      // while-condition  =>  TRUE
[11:02:59.215]      // while "1"  (timeout="50000")
[11:02:59.215]      // while-condition  =>  TRUE
[11:02:59.216]      // while "1"  (timeout="50000")
[11:02:59.216]      // while-condition  =>  TRUE
[11:02:59.216]      // while "1"  (timeout="50000")
[11:02:59.216]      // while-condition  =>  TRUE
[11:02:59.216]      // while "1"  (timeout="50000")
[11:02:59.217]      // while-condition  =>  TRUE
[11:02:59.217]      // while "1"  (timeout="50000")
[11:02:59.217]      // while-condition  =>  TRUE
[11:02:59.217]      // while "1"  (timeout="50000")
[11:02:59.217]      // while-condition  =>  TRUE
[11:02:59.218]      // while "1"  (timeout="50000")
[11:02:59.218]      // while-condition  =>  TRUE
[11:02:59.218]      // while "1"  (timeout="50000")
[11:02:59.218]      // while-condition  =>  TRUE
[11:02:59.219]      // while "1"  (timeout="50000")
[11:02:59.219]      // while-condition  =>  TRUE
[11:02:59.219]      // while "1"  (timeout="50000")
[11:02:59.219]      // while-condition  =>  TRUE
[11:02:59.220]      // while "1"  (timeout="50000")
[11:02:59.220]      // while-condition  =>  TRUE
[11:02:59.220]      // while "1"  (timeout="50000")
[11:02:59.220]      // while-condition  =>  TRUE
[11:02:59.221]      // while "1"  (timeout="50000")
[11:02:59.221]      // while-condition  =>  TRUE
[11:02:59.221]      // while "1"  (timeout="50000")
[11:02:59.221]      // while-condition  =>  TRUE
[11:02:59.222]      // while "1"  (timeout="50000")
[11:02:59.222]      // while-condition  =>  TRUE
[11:02:59.222]      // while "1"  (timeout="50000")
[11:02:59.222]      // while-condition  =>  TRUE
[11:02:59.222]      // while "1"  (timeout="50000")
[11:02:59.223]      // while-condition  =>  TRUE
[11:02:59.223]      // while "1"  (timeout="50000")
[11:02:59.223]      // while-condition  =>  TRUE
[11:02:59.223]      // while "1"  (timeout="50000")
[11:02:59.224]      // while-condition  =>  TRUE
[11:02:59.224]      // while "1"  (timeout="50000")
[11:02:59.224]      // while-condition  =>  TRUE
[11:02:59.224]      // while "1"  (timeout="50000")
[11:02:59.224]      // while-condition  =>  TRUE
[11:02:59.225]      // while "1"  (timeout="50000")
[11:02:59.225]      // while-condition  =>  TRUE
[11:02:59.225]      // while "1"  (timeout="50000")
[11:02:59.225]      // while-condition  =>  TRUE
[11:02:59.226]      // while "1"  (timeout="50000")
[11:02:59.226]      // while  =>  TIMEOUT
[11:02:59.226]      // end while "1"
[11:02:59.226]    </control>
[11:02:59.226]    <block atomic="false" info="">
[11:02:59.227]      DAP_SWJ_Pins(nReset, nReset, 0);
[11:02:59.229]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[11:02:59.229]    </block>
[11:02:59.229]    <control if="" while="1" timeout="10000" info="">
[11:02:59.230]      // while "1"  (timeout="10000")
[11:02:59.230]      // while-condition  =>  TRUE
[11:02:59.230]      // while "1"  (timeout="10000")
[11:02:59.230]      // while-condition  =>  TRUE
[11:02:59.231]      // while "1"  (timeout="10000")
[11:02:59.231]      // while-condition  =>  TRUE
[11:02:59.231]      // while "1"  (timeout="10000")
[11:02:59.231]      // while-condition  =>  TRUE
[11:02:59.232]      // while "1"  (timeout="10000")
[11:02:59.232]      // while-condition  =>  TRUE
[11:02:59.232]      // while "1"  (timeout="10000")
[11:02:59.232]      // while-condition  =>  TRUE
[11:02:59.232]      // while "1"  (timeout="10000")
[11:02:59.233]      // while-condition  =>  TRUE
[11:02:59.233]      // while "1"  (timeout="10000")
[11:02:59.234]      // while-condition  =>  TRUE
[11:02:59.234]      // while "1"  (timeout="10000")
[11:02:59.234]      // while-condition  =>  TRUE
[11:02:59.234]      // while "1"  (timeout="10000")
[11:02:59.234]      // while-condition  =>  TRUE
[11:02:59.235]      // while "1"  (timeout="10000")
[11:02:59.235]      // while-condition  =>  TRUE
[11:02:59.235]      // while "1"  (timeout="10000")
[11:02:59.235]      // while-condition  =>  TRUE
[11:02:59.236]      // while "1"  (timeout="10000")
[11:02:59.236]      // while-condition  =>  TRUE
[11:02:59.236]      // while "1"  (timeout="10000")
[11:02:59.236]      // while-condition  =>  TRUE
[11:02:59.237]      // while "1"  (timeout="10000")
[11:02:59.237]      // while-condition  =>  TRUE
[11:02:59.237]      // while "1"  (timeout="10000")
[11:02:59.237]      // while-condition  =>  TRUE
[11:02:59.237]      // while "1"  (timeout="10000")
[11:02:59.238]      // while-condition  =>  TRUE
[11:02:59.238]      // while "1"  (timeout="10000")
[11:02:59.238]      // while-condition  =>  TRUE
[11:02:59.238]      // while "1"  (timeout="10000")
[11:02:59.238]      // while-condition  =>  TRUE
[11:02:59.238]      // while "1"  (timeout="10000")
[11:02:59.239]      // while-condition  =>  TRUE
[11:02:59.239]      // while "1"  (timeout="10000")
[11:02:59.239]      // while-condition  =>  TRUE
[11:02:59.239]      // while "1"  (timeout="10000")
[11:02:59.240]      // while-condition  =>  TRUE
[11:02:59.240]      // while "1"  (timeout="10000")
[11:02:59.240]      // while-condition  =>  TRUE
[11:02:59.240]      // while "1"  (timeout="10000")
[11:02:59.241]      // while-condition  =>  TRUE
[11:02:59.241]      // while "1"  (timeout="10000")
[11:02:59.241]      // while  =>  TIMEOUT
[11:02:59.241]      // end while "1"
[11:02:59.242]    </control>
[11:02:59.242]    <block atomic="true" info="">
[11:02:59.246]  
[11:02:59.246]  ! W001 : No atomic sequence support in debug unit
[11:02:59.246]  
[11:02:59.249]      DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[11:02:59.251]        // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[11:02:59.251]      DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[11:02:59.253]        // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[11:02:59.253]    </block>
[11:02:59.253]    <block atomic="false" info="">
[11:02:59.254]      __errorcontrol = 0x00000001;
[11:02:59.254]        // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[11:02:59.254]      ReadDP(0x0);
[11:02:59.257]        // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[11:02:59.257]      __errorcontrol = 0x00000000;
[11:02:59.257]        // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[11:02:59.257]    </block>
[11:02:59.258]  </sequence>
[11:02:59.258]  
[11:02:59.262]  **********  Sequence "ResetCatchClear"  (Context="Reset", Pname="", info="")
[11:02:59.262]  
[11:02:59.277]  <debugvars>
[11:02:59.278]    // Pre-defined
[11:02:59.278]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[11:02:59.278]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[11:02:59.279]    __dp=0x00000000
[11:02:59.279]    __ap=0x00000000
[11:02:59.279]    __traceout=0x00000000      (Trace Disabled)
[11:02:59.279]    __errorcontrol=0x00000000  (Skip Errors="False")
[11:02:59.280]    __FlashAddr=0x00000000
[11:02:59.280]    __FlashLen=0x00000000
[11:02:59.280]    __FlashArg=0x00000000
[11:02:59.280]    __FlashOp=0x00000000
[11:02:59.281]    __Result=0x00000000
[11:02:59.281]  </debugvars>
[11:02:59.281]  
[11:02:59.281]  <sequence name="ResetCatchClear" Pname="" disable="false" info="">
[11:02:59.282]    <block atomic="false" info="">
[11:02:59.282]    </block>
[11:02:59.282]  </sequence>
[11:02:59.282]  
[11:02:59.555]  **********  Sequence "FlashEraseDone"  (Context="Flash Erase", Pname="", info="")
[11:02:59.555]  
[11:02:59.557]  <debugvars>
[11:02:59.558]    // Pre-defined
[11:02:59.558]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[11:02:59.558]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[11:02:59.559]    __dp=0x00000000
[11:02:59.559]    __ap=0x00000000
[11:02:59.560]    __traceout=0x00000000      (Trace Disabled)
[11:02:59.560]    __errorcontrol=0x00000000  (Skip Errors="False")
[11:02:59.560]    __FlashAddr=0x00000000
[11:02:59.561]    __FlashLen=0x00000000
[11:02:59.561]    __FlashArg=0x00000000
[11:02:59.561]    __FlashOp=0x00000000
[11:02:59.562]    __Result=0x00000000
[11:02:59.562]  </debugvars>
[11:02:59.563]  
[11:02:59.563]  <sequence name="FlashEraseDone" Pname="" disable="false" info="">
[11:02:59.563]    <block atomic="false" info="">
[11:02:59.564]      Sequence("ResetHardware");
[11:02:59.564]        <sequence name="ResetHardware" Pname="" disable="false" info="">
[11:02:59.565]          <block atomic="false" info="">
[11:02:59.565]            __var nReset      = 0x80;
[11:02:59.565]              // -> [nReset <= 0x00000080]
[11:02:59.566]            DAP_SWJ_Pins(0x00, nReset, 0);
[11:02:59.568]              // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[11:02:59.569]          </block>
[11:02:59.570]          <control if="" while="1" timeout="50000" info="">
[11:02:59.570]            // while "1"  (timeout="50000")
[11:02:59.571]            // while-condition  =>  TRUE
[11:02:59.572]            // while "1"  (timeout="50000")
[11:02:59.572]            // while-condition  =>  TRUE
[11:02:59.572]            // while "1"  (timeout="50000")
[11:02:59.572]            // while-condition  =>  TRUE
[11:02:59.572]            // while "1"  (timeout="50000")
[11:02:59.572]            // while-condition  =>  TRUE
[11:02:59.573]            // while "1"  (timeout="50000")
[11:02:59.573]            // while-condition  =>  TRUE
[11:02:59.573]            // while "1"  (timeout="50000")
[11:02:59.573]            // while-condition  =>  TRUE
[11:02:59.574]            // while "1"  (timeout="50000")
[11:02:59.575]            // while-condition  =>  TRUE
[11:02:59.575]            // while "1"  (timeout="50000")
[11:02:59.575]            // while-condition  =>  TRUE
[11:02:59.575]            // while "1"  (timeout="50000")
[11:02:59.576]            // while-condition  =>  TRUE
[11:02:59.576]            // while "1"  (timeout="50000")
[11:02:59.576]            // while-condition  =>  TRUE
[11:02:59.576]            // while "1"  (timeout="50000")
[11:02:59.577]            // while-condition  =>  TRUE
[11:02:59.577]            // while "1"  (timeout="50000")
[11:02:59.577]            // while-condition  =>  TRUE
[11:02:59.577]            // while "1"  (timeout="50000")
[11:02:59.577]            // while-condition  =>  TRUE
[11:02:59.577]            // while "1"  (timeout="50000")
[11:02:59.577]            // while-condition  =>  TRUE
[11:02:59.578]            // while "1"  (timeout="50000")
[11:02:59.578]            // while-condition  =>  TRUE
[11:02:59.578]            // while "1"  (timeout="50000")
[11:02:59.578]            // while-condition  =>  TRUE
[11:02:59.578]            // while "1"  (timeout="50000")
[11:02:59.579]            // while-condition  =>  TRUE
[11:02:59.579]            // while "1"  (timeout="50000")
[11:02:59.580]            // while-condition  =>  TRUE
[11:02:59.580]            // while "1"  (timeout="50000")
[11:02:59.580]            // while-condition  =>  TRUE
[11:02:59.580]            // while "1"  (timeout="50000")
[11:02:59.580]            // while-condition  =>  TRUE
[11:02:59.580]            // while "1"  (timeout="50000")
[11:02:59.580]            // while-condition  =>  TRUE
[11:02:59.580]            // while "1"  (timeout="50000")
[11:02:59.580]            // while-condition  =>  TRUE
[11:02:59.581]            // while "1"  (timeout="50000")
[11:02:59.581]            // while-condition  =>  TRUE
[11:02:59.581]            // while "1"  (timeout="50000")
[11:02:59.581]            // while-condition  =>  TRUE
[11:02:59.581]            // while "1"  (timeout="50000")
[11:02:59.582]            // while-condition  =>  TRUE
[11:02:59.582]            // while "1"  (timeout="50000")
[11:02:59.583]            // while-condition  =>  TRUE
[11:02:59.583]            // while "1"  (timeout="50000")
[11:02:59.583]            // while-condition  =>  TRUE
[11:02:59.583]            // while "1"  (timeout="50000")
[11:02:59.583]            // while-condition  =>  TRUE
[11:02:59.584]            // while "1"  (timeout="50000")
[11:02:59.584]            // while-condition  =>  TRUE
[11:02:59.584]            // while "1"  (timeout="50000")
[11:02:59.584]            // while-condition  =>  TRUE
[11:02:59.584]            // while "1"  (timeout="50000")
[11:02:59.585]            // while-condition  =>  TRUE
[11:02:59.585]            // while "1"  (timeout="50000")
[11:02:59.585]            // while-condition  =>  TRUE
[11:02:59.585]            // while "1"  (timeout="50000")
[11:02:59.585]            // while-condition  =>  TRUE
[11:02:59.586]            // while "1"  (timeout="50000")
[11:02:59.586]            // while-condition  =>  TRUE
[11:02:59.586]            // while "1"  (timeout="50000")
[11:02:59.586]            // while-condition  =>  TRUE
[11:02:59.586]            // while "1"  (timeout="50000")
[11:02:59.587]            // while-condition  =>  TRUE
[11:02:59.587]            // while "1"  (timeout="50000")
[11:02:59.587]            // while-condition  =>  TRUE
[11:02:59.587]            // while "1"  (timeout="50000")
[11:02:59.587]            // while-condition  =>  TRUE
[11:02:59.587]            // while "1"  (timeout="50000")
[11:02:59.587]            // while-condition  =>  TRUE
[11:02:59.588]            // while "1"  (timeout="50000")
[11:02:59.588]            // while-condition  =>  TRUE
[11:02:59.588]            // while "1"  (timeout="50000")
[11:02:59.588]            // while-condition  =>  TRUE
[11:02:59.588]            // while "1"  (timeout="50000")
[11:02:59.589]            // while-condition  =>  TRUE
[11:02:59.589]            // while "1"  (timeout="50000")
[11:02:59.589]            // while-condition  =>  TRUE
[11:02:59.589]            // while "1"  (timeout="50000")
[11:02:59.589]            // while-condition  =>  TRUE
[11:02:59.590]            // while "1"  (timeout="50000")
[11:02:59.590]            // while-condition  =>  TRUE
[11:02:59.590]            // while "1"  (timeout="50000")
[11:02:59.591]            // while-condition  =>  TRUE
[11:02:59.591]            // while "1"  (timeout="50000")
[11:02:59.591]            // while-condition  =>  TRUE
[11:02:59.591]            // while "1"  (timeout="50000")
[11:02:59.591]            // while-condition  =>  TRUE
[11:02:59.591]            // while "1"  (timeout="50000")
[11:02:59.592]            // while-condition  =>  TRUE
[11:02:59.592]            // while "1"  (timeout="50000")
[11:02:59.592]            // while-condition  =>  TRUE
[11:02:59.592]            // while "1"  (timeout="50000")
[11:02:59.592]            // while-condition  =>  TRUE
[11:02:59.593]            // while "1"  (timeout="50000")
[11:02:59.593]            // while-condition  =>  TRUE
[11:02:59.593]            // while "1"  (timeout="50000")
[11:02:59.593]            // while-condition  =>  TRUE
[11:02:59.593]            // while "1"  (timeout="50000")
[11:02:59.594]            // while-condition  =>  TRUE
[11:02:59.594]            // while "1"  (timeout="50000")
[11:02:59.594]            // while-condition  =>  TRUE
[11:02:59.594]            // while "1"  (timeout="50000")
[11:02:59.595]            // while-condition  =>  TRUE
[11:02:59.595]            // while "1"  (timeout="50000")
[11:02:59.595]            // while-condition  =>  TRUE
[11:02:59.595]            // while "1"  (timeout="50000")
[11:02:59.595]            // while-condition  =>  TRUE
[11:02:59.595]            // while "1"  (timeout="50000")
[11:02:59.595]            // while-condition  =>  TRUE
[11:02:59.595]            // while "1"  (timeout="50000")
[11:02:59.595]            // while-condition  =>  TRUE
[11:02:59.595]            // while "1"  (timeout="50000")
[11:02:59.596]            // while-condition  =>  TRUE
[11:02:59.596]            // while "1"  (timeout="50000")
[11:02:59.596]            // while-condition  =>  TRUE
[11:02:59.596]            // while "1"  (timeout="50000")
[11:02:59.596]            // while-condition  =>  TRUE
[11:02:59.597]            // while "1"  (timeout="50000")
[11:02:59.597]            // while-condition  =>  TRUE
[11:02:59.597]            // while "1"  (timeout="50000")
[11:02:59.597]            // while-condition  =>  TRUE
[11:02:59.597]            // while "1"  (timeout="50000")
[11:02:59.598]            // while-condition  =>  TRUE
[11:02:59.598]            // while "1"  (timeout="50000")
[11:02:59.598]            // while-condition  =>  TRUE
[11:02:59.598]            // while "1"  (timeout="50000")
[11:02:59.599]            // while-condition  =>  TRUE
[11:02:59.599]            // while "1"  (timeout="50000")
[11:02:59.599]            // while-condition  =>  TRUE
[11:02:59.600]            // while "1"  (timeout="50000")
[11:02:59.600]            // while-condition  =>  TRUE
[11:02:59.600]            // while "1"  (timeout="50000")
[11:02:59.601]            // while-condition  =>  TRUE
[11:02:59.601]            // while "1"  (timeout="50000")
[11:02:59.601]            // while-condition  =>  TRUE
[11:02:59.601]            // while "1"  (timeout="50000")
[11:02:59.601]            // while-condition  =>  TRUE
[11:02:59.602]            // while "1"  (timeout="50000")
[11:02:59.602]            // while-condition  =>  TRUE
[11:02:59.602]            // while "1"  (timeout="50000")
[11:02:59.602]            // while-condition  =>  TRUE
[11:02:59.602]            // while "1"  (timeout="50000")
[11:02:59.603]            // while-condition  =>  TRUE
[11:02:59.603]            // while "1"  (timeout="50000")
[11:02:59.604]            // while-condition  =>  TRUE
[11:02:59.604]            // while "1"  (timeout="50000")
[11:02:59.604]            // while-condition  =>  TRUE
[11:02:59.604]            // while "1"  (timeout="50000")
[11:02:59.604]            // while-condition  =>  TRUE
[11:02:59.604]            // while "1"  (timeout="50000")
[11:02:59.605]            // while-condition  =>  TRUE
[11:02:59.605]            // while "1"  (timeout="50000")
[11:02:59.605]            // while-condition  =>  TRUE
[11:02:59.606]            // while "1"  (timeout="50000")
[11:02:59.606]            // while-condition  =>  TRUE
[11:02:59.606]            // while "1"  (timeout="50000")
[11:02:59.606]            // while-condition  =>  TRUE
[11:02:59.606]            // while "1"  (timeout="50000")
[11:02:59.606]            // while-condition  =>  TRUE
[11:02:59.606]            // while "1"  (timeout="50000")
[11:02:59.607]            // while-condition  =>  TRUE
[11:02:59.607]            // while "1"  (timeout="50000")
[11:02:59.607]            // while-condition  =>  TRUE
[11:02:59.607]            // while "1"  (timeout="50000")
[11:02:59.607]            // while-condition  =>  TRUE
[11:02:59.608]            // while "1"  (timeout="50000")
[11:02:59.608]            // while-condition  =>  TRUE
[11:02:59.608]            // while "1"  (timeout="50000")
[11:02:59.608]            // while-condition  =>  TRUE
[11:02:59.608]            // while "1"  (timeout="50000")
[11:02:59.608]            // while-condition  =>  TRUE
[11:02:59.609]            // while "1"  (timeout="50000")
[11:02:59.609]            // while-condition  =>  TRUE
[11:02:59.609]            // while "1"  (timeout="50000")
[11:02:59.610]            // while-condition  =>  TRUE
[11:02:59.610]            // while "1"  (timeout="50000")
[11:02:59.610]            // while-condition  =>  TRUE
[11:02:59.610]            // while "1"  (timeout="50000")
[11:02:59.610]            // while-condition  =>  TRUE
[11:02:59.611]            // while "1"  (timeout="50000")
[11:02:59.611]            // while-condition  =>  TRUE
[11:02:59.611]            // while "1"  (timeout="50000")
[11:02:59.611]            // while-condition  =>  TRUE
[11:02:59.611]            // while "1"  (timeout="50000")
[11:02:59.612]            // while-condition  =>  TRUE
[11:02:59.612]            // while "1"  (timeout="50000")
[11:02:59.612]            // while-condition  =>  TRUE
[11:02:59.612]            // while "1"  (timeout="50000")
[11:02:59.612]            // while-condition  =>  TRUE
[11:02:59.612]            // while "1"  (timeout="50000")
[11:02:59.613]            // while-condition  =>  TRUE
[11:02:59.613]            // while "1"  (timeout="50000")
[11:02:59.613]            // while-condition  =>  TRUE
[11:02:59.613]            // while "1"  (timeout="50000")
[11:02:59.613]            // while-condition  =>  TRUE
[11:02:59.614]            // while "1"  (timeout="50000")
[11:02:59.614]            // while-condition  =>  TRUE
[11:02:59.614]            // while "1"  (timeout="50000")
[11:02:59.614]            // while-condition  =>  TRUE
[11:02:59.614]            // while "1"  (timeout="50000")
[11:02:59.615]            // while-condition  =>  TRUE
[11:02:59.615]            // while "1"  (timeout="50000")
[11:02:59.615]            // while-condition  =>  TRUE
[11:02:59.615]            // while "1"  (timeout="50000")
[11:02:59.615]            // while-condition  =>  TRUE
[11:02:59.615]            // while "1"  (timeout="50000")
[11:02:59.616]            // while-condition  =>  TRUE
[11:02:59.616]            // while "1"  (timeout="50000")
[11:02:59.616]            // while-condition  =>  TRUE
[11:02:59.616]            // while "1"  (timeout="50000")
[11:02:59.616]            // while-condition  =>  TRUE
[11:02:59.617]            // while "1"  (timeout="50000")
[11:02:59.617]            // while-condition  =>  TRUE
[11:02:59.617]            // while "1"  (timeout="50000")
[11:02:59.617]            // while-condition  =>  TRUE
[11:02:59.617]            // while "1"  (timeout="50000")
[11:02:59.617]            // while-condition  =>  TRUE
[11:02:59.617]            // while "1"  (timeout="50000")
[11:02:59.618]            // while-condition  =>  TRUE
[11:02:59.618]            // while "1"  (timeout="50000")
[11:02:59.618]            // while-condition  =>  TRUE
[11:02:59.618]            // while "1"  (timeout="50000")
[11:02:59.619]            // while-condition  =>  TRUE
[11:02:59.619]            // while "1"  (timeout="50000")
[11:02:59.619]            // while-condition  =>  TRUE
[11:02:59.619]            // while "1"  (timeout="50000")
[11:02:59.620]            // while-condition  =>  TRUE
[11:02:59.620]            // while "1"  (timeout="50000")
[11:02:59.620]            // while-condition  =>  TRUE
[11:02:59.620]            // while "1"  (timeout="50000")
[11:02:59.620]            // while-condition  =>  TRUE
[11:02:59.621]            // while "1"  (timeout="50000")
[11:02:59.621]            // while-condition  =>  TRUE
[11:02:59.621]            // while "1"  (timeout="50000")
[11:02:59.621]            // while-condition  =>  TRUE
[11:02:59.621]            // while "1"  (timeout="50000")
[11:02:59.621]            // while-condition  =>  TRUE
[11:02:59.622]            // while "1"  (timeout="50000")
[11:02:59.622]            // while-condition  =>  TRUE
[11:02:59.622]            // while "1"  (timeout="50000")
[11:02:59.623]            // while-condition  =>  TRUE
[11:02:59.623]            // while "1"  (timeout="50000")
[11:02:59.623]            // while-condition  =>  TRUE
[11:02:59.623]            // while "1"  (timeout="50000")
[11:02:59.623]            // while-condition  =>  TRUE
[11:02:59.624]            // while "1"  (timeout="50000")
[11:02:59.624]            // while-condition  =>  TRUE
[11:02:59.624]            // while "1"  (timeout="50000")
[11:02:59.624]            // while-condition  =>  TRUE
[11:02:59.624]            // while "1"  (timeout="50000")
[11:02:59.625]            // while-condition  =>  TRUE
[11:02:59.625]            // while "1"  (timeout="50000")
[11:02:59.625]            // while-condition  =>  TRUE
[11:02:59.625]            // while "1"  (timeout="50000")
[11:02:59.625]            // while-condition  =>  TRUE
[11:02:59.626]            // while "1"  (timeout="50000")
[11:02:59.626]            // while-condition  =>  TRUE
[11:02:59.626]            // while "1"  (timeout="50000")
[11:02:59.626]            // while-condition  =>  TRUE
[11:02:59.626]            // while "1"  (timeout="50000")
[11:02:59.627]            // while-condition  =>  TRUE
[11:02:59.627]            // while "1"  (timeout="50000")
[11:02:59.627]            // while-condition  =>  TRUE
[11:02:59.627]            // while "1"  (timeout="50000")
[11:02:59.627]            // while-condition  =>  TRUE
[11:02:59.627]            // while "1"  (timeout="50000")
[11:02:59.627]            // while-condition  =>  TRUE
[11:02:59.628]            // while "1"  (timeout="50000")
[11:02:59.628]            // while-condition  =>  TRUE
[11:02:59.628]            // while "1"  (timeout="50000")
[11:02:59.628]            // while-condition  =>  TRUE
[11:02:59.628]            // while "1"  (timeout="50000")
[11:02:59.629]            // while-condition  =>  TRUE
[11:02:59.629]            // while "1"  (timeout="50000")
[11:02:59.629]            // while-condition  =>  TRUE
[11:02:59.630]            // while "1"  (timeout="50000")
[11:02:59.630]            // while-condition  =>  TRUE
[11:02:59.630]            // while "1"  (timeout="50000")
[11:02:59.630]            // while-condition  =>  TRUE
[11:02:59.630]            // while "1"  (timeout="50000")
[11:02:59.630]            // while-condition  =>  TRUE
[11:02:59.631]            // while "1"  (timeout="50000")
[11:02:59.631]            // while-condition  =>  TRUE
[11:02:59.631]            // while "1"  (timeout="50000")
[11:02:59.631]            // while-condition  =>  TRUE
[11:02:59.631]            // while "1"  (timeout="50000")
[11:02:59.632]            // while-condition  =>  TRUE
[11:02:59.632]            // while "1"  (timeout="50000")
[11:02:59.632]            // while-condition  =>  TRUE
[11:02:59.632]            // while "1"  (timeout="50000")
[11:02:59.632]            // while-condition  =>  TRUE
[11:02:59.632]            // while "1"  (timeout="50000")
[11:02:59.633]            // while-condition  =>  TRUE
[11:02:59.633]            // while "1"  (timeout="50000")
[11:02:59.633]            // while  =>  TIMEOUT
[11:02:59.633]            // end while "1"
[11:02:59.634]          </control>
[11:02:59.634]          <block atomic="false" info="">
[11:02:59.634]            DAP_SWJ_Pins(nReset, nReset, 0);
[11:02:59.636]              // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[11:02:59.636]          </block>
[11:02:59.636]          <control if="" while="1" timeout="10000" info="">
[11:02:59.637]            // while "1"  (timeout="10000")
[11:02:59.637]            // while-condition  =>  TRUE
[11:02:59.637]            // while "1"  (timeout="10000")
[11:02:59.637]            // while-condition  =>  TRUE
[11:02:59.637]            // while "1"  (timeout="10000")
[11:02:59.638]            // while-condition  =>  TRUE
[11:02:59.638]            // while "1"  (timeout="10000")
[11:02:59.639]            // while-condition  =>  TRUE
[11:02:59.639]            // while "1"  (timeout="10000")
[11:02:59.639]            // while-condition  =>  TRUE
[11:02:59.639]            // while "1"  (timeout="10000")
[11:02:59.640]            // while-condition  =>  TRUE
[11:02:59.640]            // while "1"  (timeout="10000")
[11:02:59.640]            // while-condition  =>  TRUE
[11:02:59.640]            // while "1"  (timeout="10000")
[11:02:59.641]            // while-condition  =>  TRUE
[11:02:59.641]            // while "1"  (timeout="10000")
[11:02:59.641]            // while-condition  =>  TRUE
[11:02:59.641]            // while "1"  (timeout="10000")
[11:02:59.642]            // while-condition  =>  TRUE
[11:02:59.642]            // while "1"  (timeout="10000")
[11:02:59.642]            // while-condition  =>  TRUE
[11:02:59.642]            // while "1"  (timeout="10000")
[11:02:59.643]            // while-condition  =>  TRUE
[11:02:59.643]            // while "1"  (timeout="10000")
[11:02:59.643]            // while-condition  =>  TRUE
[11:02:59.643]            // while "1"  (timeout="10000")
[11:02:59.644]            // while-condition  =>  TRUE
[11:02:59.644]            // while "1"  (timeout="10000")
[11:02:59.644]            // while-condition  =>  TRUE
[11:02:59.644]            // while "1"  (timeout="10000")
[11:02:59.644]            // while-condition  =>  TRUE
[11:02:59.644]            // while "1"  (timeout="10000")
[11:02:59.645]            // while-condition  =>  TRUE
[11:02:59.645]            // while "1"  (timeout="10000")
[11:02:59.645]            // while-condition  =>  TRUE
[11:02:59.646]            // while "1"  (timeout="10000")
[11:02:59.646]            // while-condition  =>  TRUE
[11:02:59.646]            // while "1"  (timeout="10000")
[11:02:59.646]            // while-condition  =>  TRUE
[11:02:59.646]            // while "1"  (timeout="10000")
[11:02:59.646]            // while-condition  =>  TRUE
[11:02:59.646]            // while "1"  (timeout="10000")
[11:02:59.647]            // while-condition  =>  TRUE
[11:02:59.647]            // while "1"  (timeout="10000")
[11:02:59.647]            // while-condition  =>  TRUE
[11:02:59.647]            // while "1"  (timeout="10000")
[11:02:59.648]            // while-condition  =>  TRUE
[11:02:59.648]            // while "1"  (timeout="10000")
[11:02:59.649]            // while  =>  TIMEOUT
[11:02:59.649]            // end while "1"
[11:02:59.649]          </control>
[11:02:59.650]          <block atomic="true" info="">
[11:02:59.653]  
[11:02:59.653]  ! W001 : No atomic sequence support in debug unit
[11:02:59.653]  
[11:02:59.654]            DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF);  // 50 cycles SWDIO/TMS High
[11:02:59.657]              // -> [DAP_SWJ_Sequence(51, 0x0007FFFFFFFFFFFF)]
[11:02:59.657]            DAP_SWJ_Sequence(3,  0x00);                // At least 3 idle cycles (SWDIO/TMS Low)
[11:02:59.659]              // -> [DAP_SWJ_Sequence(3, 0x0000000000000000)]
[11:02:59.659]          </block>
[11:02:59.661]          <block atomic="false" info="">
[11:02:59.661]            __errorcontrol = 0x00000001;
[11:02:59.662]              // -> [__errorcontrol <= 0x00000001]  (Skip Errors="True")
[11:02:59.662]            ReadDP(0x0);
[11:02:59.665]              // -> [ReadDP(0x00000000) => 0x0BC11477]   (__dp=0x00000000)
[11:02:59.665]            __errorcontrol = 0x00000000;
[11:02:59.666]              // -> [__errorcontrol <= 0x00000000]  (Skip Errors="False")
[11:02:59.666]          </block>
[11:02:59.666]        </sequence>
[11:02:59.667]      Sequence("DebugPortSetup");
[11:02:59.667]        <sequence name="DebugPortSetup" Pname="" disable="false" info="">
[11:02:59.668]        </sequence>
[11:02:59.668]      Sequence("DebugPortStart");
[11:02:59.669]        <sequence name="DebugPortStart" Pname="" disable="false" info="">
[11:02:59.669]          <block atomic="false" info="">
[11:02:59.670]            __var SW_DP_ABORT  = 0x0;
[11:02:59.670]              // -> [SW_DP_ABORT <= 0x00000000]
[11:02:59.670]            __var DP_CTRL_STAT = 0x4;
[11:02:59.670]              // -> [DP_CTRL_STAT <= 0x00000004]
[11:02:59.671]            __var DP_SELECT    = 0x8;
[11:02:59.671]              // -> [DP_SELECT <= 0x00000008]
[11:02:59.671]            __var powered_down = 0;
[11:02:59.672]              // -> [powered_down <= 0x00000000]
[11:02:59.672]            WriteDP(DP_SELECT, 0x00000000);
[11:02:59.674]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[11:02:59.675]            powered_down = ((ReadDP(DP_CTRL_STAT) & 0xA0000000) != 0xA0000000);
[11:02:59.676]              // -> [ReadDP(0x00000004) => 0xF0000040]   (__dp=0x00000000)
[11:02:59.676]              // -> [powered_down <= 0x00000000]
[11:02:59.676]          </block>
[11:02:59.677]          <control if="powered_down" while="" timeout="0" info="">
[11:02:59.678]            // if-block "powered_down"
[11:02:59.678]              // =>  FALSE
[11:02:59.679]            // skip if-block "powered_down"
[11:02:59.679]          </control>
[11:02:59.680]        </sequence>
[11:02:59.680]      Sequence("DebugCoreStart");
[11:02:59.680]        <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[11:02:59.681]          <block atomic="true" info="">
[11:02:59.683]  
[11:02:59.683]  ! W001 : No atomic sequence support in debug unit
[11:02:59.683]  
[11:02:59.685]            __var DP_R_IDCODE    = 0x0;
[11:02:59.686]              // -> [DP_R_IDCODE <= 0x00000000]
[11:02:59.686]            __var DP_W_ABORT    = 0x0;
[11:02:59.687]              // -> [DP_W_ABORT <= 0x00000000]
[11:02:59.687]            __var DP_CTRLSTAT = 0x4;
[11:02:59.688]              // -> [DP_CTRLSTAT <= 0x00000004]
[11:02:59.688]            __var DP_W_SELECT    = 0x8;
[11:02:59.688]              // -> [DP_W_SELECT <= 0x00000008]
[11:02:59.689]            __var AP_TAR		= 0x4;
[11:02:59.690]              // -> [AP_TAR <= 0x00000004]
[11:02:59.690]            __var AP_BD0		= 0x0;
[11:02:59.690]              // -> [AP_BD0 <= 0x00000000]
[11:02:59.690]            __var AP_BD1		= 0x4;
[11:02:59.691]              // -> [AP_BD1 <= 0x00000004]
[11:02:59.691]            __var AP_BD2		= 0x8;
[11:02:59.691]              // -> [AP_BD2 <= 0x00000008]
[11:02:59.692]            __var PCWithinFlash = 0;
[11:02:59.692]              // -> [PCWithinFlash <= 0x00000000]
[11:02:59.692]            Write32(0xE000EDF0, 0xA05F0003);	// Halt the CORE
[11:02:59.698]              // -> [Write32(0xE000EDF0, 0xA05F0003)]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.720]          </block>
[11:02:59.721]          <control if="" while="(Read32(0xE000EDF0) & 0x00020000) != 0x00020000" timeout="1000000" info="">
[11:02:59.722]            // while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"  (timeout="1000000")
[11:02:59.729]              // -> [Read32(0xE000EDF0) => 0x00030003]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.729]            // while-condition  =>  FALSE
[11:02:59.730]            // end while "(Read32(0xE000EDF0) & 0x00020000) != 0x00020000"
[11:02:59.730]          </control>
[11:02:59.731]          <block atomic="true" info="">
[11:02:59.737]  
[11:02:59.737]  ! W001 : No atomic sequence support in debug unit
[11:02:59.737]  
[11:02:59.741]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[11:02:59.750]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[11:02:59.751]            WriteAP(AP_TAR, 0xE000EDF0);		//Set TAR to DHCSR
[11:02:59.754]              // -> [WriteAP(0x00000004, 0xE000EDF0)]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.754]            WriteDP(DP_W_SELECT, 0x00000010);	//Select 0x10
[11:02:59.756]              // -> [WriteDP(0x00000008, 0x00000010)]   (__dp=0x00000000)
[11:02:59.757]            WriteAP(AP_BD1, 0x0000000F);		//Trigger read of PC
[11:02:59.761]              // -> [WriteAP(0x00000004, 0x0000000F)]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.762]          </block>
[11:02:59.763]          <control if="" while="(ReadAP(AP_BD0) & 0x00010000) != 0x00010000" timeout="100000" info="">
[11:02:59.763]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.765]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.766]            // while-condition  =>  TRUE
[11:02:59.767]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.769]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.770]            // while-condition  =>  TRUE
[11:02:59.771]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.774]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.774]            // while-condition  =>  TRUE
[11:02:59.775]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.777]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.778]            // while-condition  =>  TRUE
[11:02:59.778]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.780]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.781]            // while-condition  =>  TRUE
[11:02:59.781]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.784]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.785]            // while-condition  =>  TRUE
[11:02:59.786]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.788]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.789]            // while-condition  =>  TRUE
[11:02:59.789]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.791]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.791]            // while-condition  =>  TRUE
[11:02:59.792]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.794]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.795]            // while-condition  =>  TRUE
[11:02:59.795]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.798]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.799]            // while-condition  =>  TRUE
[11:02:59.799]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.801]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.802]            // while-condition  =>  TRUE
[11:02:59.802]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.805]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.806]            // while-condition  =>  TRUE
[11:02:59.807]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.809]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.810]            // while-condition  =>  TRUE
[11:02:59.811]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.813]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.814]            // while-condition  =>  TRUE
[11:02:59.814]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.817]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.818]            // while-condition  =>  TRUE
[11:02:59.818]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.820]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.821]            // while-condition  =>  TRUE
[11:02:59.821]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.823]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.824]            // while-condition  =>  TRUE
[11:02:59.824]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.826]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.827]            // while-condition  =>  TRUE
[11:02:59.827]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.829]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.830]            // while-condition  =>  TRUE
[11:02:59.831]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.833]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.834]            // while-condition  =>  TRUE
[11:02:59.834]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.836]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.837]            // while-condition  =>  TRUE
[11:02:59.837]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.839]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.840]            // while-condition  =>  TRUE
[11:02:59.840]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.842]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.843]            // while-condition  =>  TRUE
[11:02:59.844]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.846]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.847]            // while-condition  =>  TRUE
[11:02:59.847]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.849]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.850]            // while-condition  =>  TRUE
[11:02:59.850]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.852]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.853]            // while-condition  =>  TRUE
[11:02:59.853]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.855]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.855]            // while-condition  =>  TRUE
[11:02:59.856]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.858]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.858]            // while-condition  =>  TRUE
[11:02:59.859]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.862]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.862]            // while-condition  =>  TRUE
[11:02:59.863]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.866]              // -> [ReadAP(0x00000000) => 0x03000052]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.866]            // while-condition  =>  TRUE
[11:02:59.867]            // while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"  (timeout="100000")
[11:02:59.867]            // while  =>  TIMEOUT
[11:02:59.868]            // end while "(ReadAP(AP_BD0) & 0x00010000) != 0x00010000"
[11:02:59.868]          </control>
[11:02:59.868]          <block atomic="false" info="">
[11:02:59.869]            PCWithinFlash = (ReadAP(AP_BD2) >= 0x10000800);
[11:02:59.871]              // -> [ReadAP(0x00000008) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[11:02:59.871]              // -> [PCWithinFlash <= 0x00000000]
[11:02:59.872]            WriteDP(DP_W_SELECT, 0x00000000);	//Select 0x00
[11:02:59.875]              // -> [WriteDP(0x00000008, 0x00000000)]   (__dp=0x00000000)
[11:02:59.875]          </block>
[11:02:59.876]          <control if="PCWithinFlash == 0" while="" timeout="0" info="">
[11:02:59.876]            // if-block "PCWithinFlash == 0"
[11:02:59.876]              // =>  TRUE
[11:02:59.877]            // end if-block "PCWithinFlash == 0"
[11:02:59.878]          </control>
[11:02:59.878]        </sequence>
[11:02:59.878]    </block>
[11:02:59.879]  </sequence>
[11:02:59.880]  
[11:03:10.906]  **********  Sequence "DebugPortStop"  (Context="Disconnect", Pname="", info="")
[11:03:10.906]  
[11:03:10.906]  <debugvars>
[11:03:10.907]    // Pre-defined
[11:03:10.907]    __protocol=0x00000002      (Protocol="SWD", SWJ-DP="False")
[11:03:10.908]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[11:03:10.908]    __dp=0x00000000
[11:03:10.909]    __ap=0x00000000
[11:03:10.909]    __traceout=0x00000000      (Trace Disabled)
[11:03:10.909]    __errorcontrol=0x00000000  (Skip Errors="False")
[11:03:10.910]    __FlashAddr=0x00000000
[11:03:10.910]    __FlashLen=0x00000000
[11:03:10.910]    __FlashArg=0x00000000
[11:03:10.911]    __FlashOp=0x00000000
[11:03:10.911]    __Result=0x00000000
[11:03:10.911]  </debugvars>
[11:03:10.912]  
[11:03:10.912]  <sequence name="DebugPortStop" Pname="" disable="false" info="">
[11:03:10.913]    <block atomic="false" info="">
[11:03:10.913]      __var nReset      = 0x80;
[11:03:10.913]        // -> [nReset <= 0x00000080]
[11:03:10.913]      DAP_SWJ_Pins(0x00, nReset, 0);
[11:03:10.915]        // -> [DAP_SWJ_Pins(0x00, 0x80, 0) => 0x03]   (Out: nRESET=0  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[11:03:10.916]    </block>
[11:03:10.916]    <control if="" while="1" timeout="50000" info="">
[11:03:10.916]      // while "1"  (timeout="50000")
[11:03:10.916]      // while-condition  =>  TRUE
[11:03:10.917]      // while "1"  (timeout="50000")
[11:03:10.917]      // while-condition  =>  TRUE
[11:03:10.917]      // while "1"  (timeout="50000")
[11:03:10.917]      // while-condition  =>  TRUE
[11:03:10.917]      // while "1"  (timeout="50000")
[11:03:10.918]      // while-condition  =>  TRUE
[11:03:10.918]      // while "1"  (timeout="50000")
[11:03:10.918]      // while-condition  =>  TRUE
[11:03:10.918]      // while "1"  (timeout="50000")
[11:03:10.919]      // while-condition  =>  TRUE
[11:03:10.919]      // while "1"  (timeout="50000")
[11:03:10.919]      // while-condition  =>  TRUE
[11:03:10.919]      // while "1"  (timeout="50000")
[11:03:10.920]      // while-condition  =>  TRUE
[11:03:10.920]      // while "1"  (timeout="50000")
[11:03:10.921]      // while-condition  =>  TRUE
[11:03:10.921]      // while "1"  (timeout="50000")
[11:03:10.921]      // while-condition  =>  TRUE
[11:03:10.921]      // while "1"  (timeout="50000")
[11:03:10.922]      // while-condition  =>  TRUE
[11:03:10.922]      // while "1"  (timeout="50000")
[11:03:10.922]      // while-condition  =>  TRUE
[11:03:10.922]      // while "1"  (timeout="50000")
[11:03:10.922]      // while-condition  =>  TRUE
[11:03:10.922]      // while "1"  (timeout="50000")
[11:03:10.923]      // while-condition  =>  TRUE
[11:03:10.923]      // while "1"  (timeout="50000")
[11:03:10.923]      // while-condition  =>  TRUE
[11:03:10.924]      // while "1"  (timeout="50000")
[11:03:10.924]      // while-condition  =>  TRUE
[11:03:10.924]      // while "1"  (timeout="50000")
[11:03:10.924]      // while-condition  =>  TRUE
[11:03:10.924]      // while "1"  (timeout="50000")
[11:03:10.924]      // while-condition  =>  TRUE
[11:03:10.925]      // while "1"  (timeout="50000")
[11:03:10.925]      // while-condition  =>  TRUE
[11:03:10.925]      // while "1"  (timeout="50000")
[11:03:10.926]      // while-condition  =>  TRUE
[11:03:10.926]      // while "1"  (timeout="50000")
[11:03:10.926]      // while-condition  =>  TRUE
[11:03:10.926]      // while "1"  (timeout="50000")
[11:03:10.927]      // while-condition  =>  TRUE
[11:03:10.927]      // while "1"  (timeout="50000")
[11:03:10.927]      // while-condition  =>  TRUE
[11:03:10.927]      // while "1"  (timeout="50000")
[11:03:10.927]      // while-condition  =>  TRUE
[11:03:10.927]      // while "1"  (timeout="50000")
[11:03:10.927]      // while-condition  =>  TRUE
[11:03:10.927]      // while "1"  (timeout="50000")
[11:03:10.928]      // while-condition  =>  TRUE
[11:03:10.928]      // while "1"  (timeout="50000")
[11:03:10.928]      // while-condition  =>  TRUE
[11:03:10.928]      // while "1"  (timeout="50000")
[11:03:10.929]      // while-condition  =>  TRUE
[11:03:10.929]      // while "1"  (timeout="50000")
[11:03:10.929]      // while-condition  =>  TRUE
[11:03:10.929]      // while "1"  (timeout="50000")
[11:03:10.930]      // while-condition  =>  TRUE
[11:03:10.930]      // while "1"  (timeout="50000")
[11:03:10.930]      // while-condition  =>  TRUE
[11:03:10.930]      // while "1"  (timeout="50000")
[11:03:10.930]      // while-condition  =>  TRUE
[11:03:10.931]      // while "1"  (timeout="50000")
[11:03:10.931]      // while-condition  =>  TRUE
[11:03:10.931]      // while "1"  (timeout="50000")
[11:03:10.931]      // while-condition  =>  TRUE
[11:03:10.931]      // while "1"  (timeout="50000")
[11:03:10.932]      // while-condition  =>  TRUE
[11:03:10.932]      // while "1"  (timeout="50000")
[11:03:10.932]      // while-condition  =>  TRUE
[11:03:10.932]      // while "1"  (timeout="50000")
[11:03:10.932]      // while-condition  =>  TRUE
[11:03:10.932]      // while "1"  (timeout="50000")
[11:03:10.933]      // while-condition  =>  TRUE
[11:03:10.933]      // while "1"  (timeout="50000")
[11:03:10.933]      // while-condition  =>  TRUE
[11:03:10.933]      // while "1"  (timeout="50000")
[11:03:10.933]      // while-condition  =>  TRUE
[11:03:10.934]      // while "1"  (timeout="50000")
[11:03:10.934]      // while-condition  =>  TRUE
[11:03:10.934]      // while "1"  (timeout="50000")
[11:03:10.934]      // while-condition  =>  TRUE
[11:03:10.934]      // while "1"  (timeout="50000")
[11:03:10.934]      // while-condition  =>  TRUE
[11:03:10.935]      // while "1"  (timeout="50000")
[11:03:10.935]      // while-condition  =>  TRUE
[11:03:10.935]      // while "1"  (timeout="50000")
[11:03:10.935]      // while-condition  =>  TRUE
[11:03:10.935]      // while "1"  (timeout="50000")
[11:03:10.936]      // while-condition  =>  TRUE
[11:03:10.936]      // while "1"  (timeout="50000")
[11:03:10.936]      // while-condition  =>  TRUE
[11:03:10.936]      // while "1"  (timeout="50000")
[11:03:10.936]      // while-condition  =>  TRUE
[11:03:10.937]      // while "1"  (timeout="50000")
[11:03:10.937]      // while-condition  =>  TRUE
[11:03:10.937]      // while "1"  (timeout="50000")
[11:03:10.937]      // while-condition  =>  TRUE
[11:03:10.937]      // while "1"  (timeout="50000")
[11:03:10.937]      // while-condition  =>  TRUE
[11:03:10.937]      // while "1"  (timeout="50000")
[11:03:10.938]      // while-condition  =>  TRUE
[11:03:10.938]      // while "1"  (timeout="50000")
[11:03:10.938]      // while-condition  =>  TRUE
[11:03:10.938]      // while "1"  (timeout="50000")
[11:03:10.938]      // while-condition  =>  TRUE
[11:03:10.938]      // while "1"  (timeout="50000")
[11:03:10.939]      // while-condition  =>  TRUE
[11:03:10.939]      // while "1"  (timeout="50000")
[11:03:10.939]      // while-condition  =>  TRUE
[11:03:10.940]      // while "1"  (timeout="50000")
[11:03:10.940]      // while-condition  =>  TRUE
[11:03:10.940]      // while "1"  (timeout="50000")
[11:03:10.940]      // while-condition  =>  TRUE
[11:03:10.940]      // while "1"  (timeout="50000")
[11:03:10.941]      // while-condition  =>  TRUE
[11:03:10.941]      // while "1"  (timeout="50000")
[11:03:10.941]      // while-condition  =>  TRUE
[11:03:10.941]      // while "1"  (timeout="50000")
[11:03:10.941]      // while-condition  =>  TRUE
[11:03:10.942]      // while "1"  (timeout="50000")
[11:03:10.942]      // while-condition  =>  TRUE
[11:03:10.942]      // while "1"  (timeout="50000")
[11:03:10.942]      // while-condition  =>  TRUE
[11:03:10.942]      // while "1"  (timeout="50000")
[11:03:10.943]      // while-condition  =>  TRUE
[11:03:10.943]      // while "1"  (timeout="50000")
[11:03:10.943]      // while-condition  =>  TRUE
[11:03:10.943]      // while "1"  (timeout="50000")
[11:03:10.943]      // while-condition  =>  TRUE
[11:03:10.943]      // while "1"  (timeout="50000")
[11:03:10.944]      // while-condition  =>  TRUE
[11:03:10.944]      // while "1"  (timeout="50000")
[11:03:10.944]      // while-condition  =>  TRUE
[11:03:10.944]      // while "1"  (timeout="50000")
[11:03:10.944]      // while-condition  =>  TRUE
[11:03:10.945]      // while "1"  (timeout="50000")
[11:03:10.945]      // while-condition  =>  TRUE
[11:03:10.945]      // while "1"  (timeout="50000")
[11:03:10.945]      // while-condition  =>  TRUE
[11:03:10.945]      // while "1"  (timeout="50000")
[11:03:10.946]      // while-condition  =>  TRUE
[11:03:10.946]      // while "1"  (timeout="50000")
[11:03:10.946]      // while-condition  =>  TRUE
[11:03:10.946]      // while "1"  (timeout="50000")
[11:03:10.946]      // while-condition  =>  TRUE
[11:03:10.947]      // while "1"  (timeout="50000")
[11:03:10.947]      // while-condition  =>  TRUE
[11:03:10.947]      // while "1"  (timeout="50000")
[11:03:10.947]      // while-condition  =>  TRUE
[11:03:10.947]      // while "1"  (timeout="50000")
[11:03:10.947]      // while-condition  =>  TRUE
[11:03:10.947]      // while "1"  (timeout="50000")
[11:03:10.947]      // while-condition  =>  TRUE
[11:03:10.948]      // while "1"  (timeout="50000")
[11:03:10.948]      // while-condition  =>  TRUE
[11:03:10.948]      // while "1"  (timeout="50000")
[11:03:10.948]      // while-condition  =>  TRUE
[11:03:10.948]      // while "1"  (timeout="50000")
[11:03:10.949]      // while-condition  =>  TRUE
[11:03:10.949]      // while "1"  (timeout="50000")
[11:03:10.949]      // while-condition  =>  TRUE
[11:03:10.950]      // while "1"  (timeout="50000")
[11:03:10.950]      // while-condition  =>  TRUE
[11:03:10.950]      // while "1"  (timeout="50000")
[11:03:10.950]      // while-condition  =>  TRUE
[11:03:10.950]      // while "1"  (timeout="50000")
[11:03:10.951]      // while-condition  =>  TRUE
[11:03:10.951]      // while "1"  (timeout="50000")
[11:03:10.951]      // while-condition  =>  TRUE
[11:03:10.951]      // while "1"  (timeout="50000")
[11:03:10.951]      // while-condition  =>  TRUE
[11:03:10.952]      // while "1"  (timeout="50000")
[11:03:10.952]      // while-condition  =>  TRUE
[11:03:10.952]      // while "1"  (timeout="50000")
[11:03:10.952]      // while-condition  =>  TRUE
[11:03:10.952]      // while "1"  (timeout="50000")
[11:03:10.952]      // while-condition  =>  TRUE
[11:03:10.952]      // while "1"  (timeout="50000")
[11:03:10.953]      // while-condition  =>  TRUE
[11:03:10.953]      // while "1"  (timeout="50000")
[11:03:10.953]      // while-condition  =>  TRUE
[11:03:10.953]      // while "1"  (timeout="50000")
[11:03:10.953]      // while-condition  =>  TRUE
[11:03:10.953]      // while "1"  (timeout="50000")
[11:03:10.954]      // while-condition  =>  TRUE
[11:03:10.954]      // while "1"  (timeout="50000")
[11:03:10.954]      // while-condition  =>  TRUE
[11:03:10.954]      // while "1"  (timeout="50000")
[11:03:10.954]      // while-condition  =>  TRUE
[11:03:10.955]      // while "1"  (timeout="50000")
[11:03:10.955]      // while-condition  =>  TRUE
[11:03:10.955]      // while "1"  (timeout="50000")
[11:03:10.956]      // while-condition  =>  TRUE
[11:03:10.956]      // while "1"  (timeout="50000")
[11:03:10.956]      // while-condition  =>  TRUE
[11:03:10.956]      // while "1"  (timeout="50000")
[11:03:10.956]      // while-condition  =>  TRUE
[11:03:10.957]      // while "1"  (timeout="50000")
[11:03:10.957]      // while-condition  =>  TRUE
[11:03:10.957]      // while "1"  (timeout="50000")
[11:03:10.957]      // while-condition  =>  TRUE
[11:03:10.957]      // while "1"  (timeout="50000")
[11:03:10.957]      // while-condition  =>  TRUE
[11:03:10.957]      // while "1"  (timeout="50000")
[11:03:10.958]      // while-condition  =>  TRUE
[11:03:10.958]      // while "1"  (timeout="50000")
[11:03:10.958]      // while-condition  =>  TRUE
[11:03:10.959]      // while "1"  (timeout="50000")
[11:03:10.959]      // while-condition  =>  TRUE
[11:03:10.959]      // while "1"  (timeout="50000")
[11:03:10.959]      // while-condition  =>  TRUE
[11:03:10.959]      // while "1"  (timeout="50000")
[11:03:10.960]      // while-condition  =>  TRUE
[11:03:10.960]      // while "1"  (timeout="50000")
[11:03:10.960]      // while-condition  =>  TRUE
[11:03:10.960]      // while "1"  (timeout="50000")
[11:03:10.960]      // while-condition  =>  TRUE
[11:03:10.961]      // while "1"  (timeout="50000")
[11:03:10.961]      // while-condition  =>  TRUE
[11:03:10.961]      // while "1"  (timeout="50000")
[11:03:10.961]      // while-condition  =>  TRUE
[11:03:10.961]      // while "1"  (timeout="50000")
[11:03:10.962]      // while-condition  =>  TRUE
[11:03:10.962]      // while "1"  (timeout="50000")
[11:03:10.962]      // while-condition  =>  TRUE
[11:03:10.962]      // while "1"  (timeout="50000")
[11:03:10.962]      // while-condition  =>  TRUE
[11:03:10.963]      // while "1"  (timeout="50000")
[11:03:10.963]      // while-condition  =>  TRUE
[11:03:10.963]      // while "1"  (timeout="50000")
[11:03:10.963]      // while-condition  =>  TRUE
[11:03:10.963]      // while "1"  (timeout="50000")
[11:03:10.963]      // while-condition  =>  TRUE
[11:03:10.964]      // while "1"  (timeout="50000")
[11:03:10.964]      // while-condition  =>  TRUE
[11:03:10.964]      // while "1"  (timeout="50000")
[11:03:10.964]      // while-condition  =>  TRUE
[11:03:10.964]      // while "1"  (timeout="50000")
[11:03:10.965]      // while-condition  =>  TRUE
[11:03:10.965]      // while "1"  (timeout="50000")
[11:03:10.965]      // while-condition  =>  TRUE
[11:03:10.965]      // while "1"  (timeout="50000")
[11:03:10.966]      // while-condition  =>  TRUE
[11:03:10.966]      // while "1"  (timeout="50000")
[11:03:10.966]      // while-condition  =>  TRUE
[11:03:10.966]      // while "1"  (timeout="50000")
[11:03:10.966]      // while-condition  =>  TRUE
[11:03:10.967]      // while "1"  (timeout="50000")
[11:03:10.967]      // while-condition  =>  TRUE
[11:03:10.967]      // while "1"  (timeout="50000")
[11:03:10.967]      // while-condition  =>  TRUE
[11:03:10.967]      // while "1"  (timeout="50000")
[11:03:10.967]      // while-condition  =>  TRUE
[11:03:10.967]      // while "1"  (timeout="50000")
[11:03:10.968]      // while-condition  =>  TRUE
[11:03:10.968]      // while "1"  (timeout="50000")
[11:03:10.968]      // while-condition  =>  TRUE
[11:03:10.968]      // while "1"  (timeout="50000")
[11:03:10.968]      // while-condition  =>  TRUE
[11:03:10.969]      // while "1"  (timeout="50000")
[11:03:10.969]      // while-condition  =>  TRUE
[11:03:10.969]      // while "1"  (timeout="50000")
[11:03:10.969]      // while-condition  =>  TRUE
[11:03:10.970]      // while "1"  (timeout="50000")
[11:03:10.970]      // while-condition  =>  TRUE
[11:03:10.970]      // while "1"  (timeout="50000")
[11:03:10.970]      // while-condition  =>  TRUE
[11:03:10.970]      // while "1"  (timeout="50000")
[11:03:10.971]      // while-condition  =>  TRUE
[11:03:10.971]      // while "1"  (timeout="50000")
[11:03:10.971]      // while-condition  =>  TRUE
[11:03:10.971]      // while "1"  (timeout="50000")
[11:03:10.972]      // while-condition  =>  TRUE
[11:03:10.972]      // while "1"  (timeout="50000")
[11:03:10.972]      // while-condition  =>  TRUE
[11:03:10.972]      // while "1"  (timeout="50000")
[11:03:10.972]      // while-condition  =>  TRUE
[11:03:10.972]      // while "1"  (timeout="50000")
[11:03:10.972]      // while-condition  =>  TRUE
[11:03:10.973]      // while "1"  (timeout="50000")
[11:03:10.973]      // while-condition  =>  TRUE
[11:03:10.973]      // while "1"  (timeout="50000")
[11:03:10.973]      // while-condition  =>  TRUE
[11:03:10.973]      // while "1"  (timeout="50000")
[11:03:10.974]      // while-condition  =>  TRUE
[11:03:10.974]      // while "1"  (timeout="50000")
[11:03:10.974]      // while-condition  =>  TRUE
[11:03:10.974]      // while "1"  (timeout="50000")
[11:03:10.975]      // while-condition  =>  TRUE
[11:03:10.975]      // while "1"  (timeout="50000")
[11:03:10.975]      // while-condition  =>  TRUE
[11:03:10.975]      // while "1"  (timeout="50000")
[11:03:10.975]      // while-condition  =>  TRUE
[11:03:10.976]      // while "1"  (timeout="50000")
[11:03:10.976]      // while  =>  TIMEOUT
[11:03:10.976]      // end while "1"
[11:03:10.976]    </control>
[11:03:10.976]    <block atomic="false" info="">
[11:03:10.976]      DAP_SWJ_Pins(nReset, nReset, 0);
[11:03:10.977]        // -> [DAP_SWJ_Pins(0x80, 0x80, 0) => 0x03]   (Out: nRESET=1  =>  In: SWCLK/TCK=1, SWDIO/TMS=1, TDI=0, TDO=0, nTRST=0, nRESET=0)
[11:03:10.978]    </block>
[11:03:10.979]  </sequence>
[11:03:10.979]  
